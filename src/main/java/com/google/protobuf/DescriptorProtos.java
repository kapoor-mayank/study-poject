/*       */ package com.google.protobuf;public final class DescriptorProtos { private static final Descriptors.Descriptor internal_static_google_protobuf_FileDescriptorSet_descriptor; private static final GeneratedMessageV3.FieldAccessorTable internal_static_google_protobuf_FileDescriptorSet_fieldAccessorTable; private static final Descriptors.Descriptor internal_static_google_protobuf_FileDescriptorProto_descriptor; private static final GeneratedMessageV3.FieldAccessorTable internal_static_google_protobuf_FileDescriptorProto_fieldAccessorTable; private static final Descriptors.Descriptor internal_static_google_protobuf_DescriptorProto_descriptor; private static final GeneratedMessageV3.FieldAccessorTable internal_static_google_protobuf_DescriptorProto_fieldAccessorTable; private static final Descriptors.Descriptor internal_static_google_protobuf_DescriptorProto_ExtensionRange_descriptor; private static final GeneratedMessageV3.FieldAccessorTable internal_static_google_protobuf_DescriptorProto_ExtensionRange_fieldAccessorTable; private static final Descriptors.Descriptor internal_static_google_protobuf_DescriptorProto_ReservedRange_descriptor; private static final GeneratedMessageV3.FieldAccessorTable internal_static_google_protobuf_DescriptorProto_ReservedRange_fieldAccessorTable; private static final Descriptors.Descriptor internal_static_google_protobuf_ExtensionRangeOptions_descriptor; private static final GeneratedMessageV3.FieldAccessorTable internal_static_google_protobuf_ExtensionRangeOptions_fieldAccessorTable; private static final Descriptors.Descriptor internal_static_google_protobuf_FieldDescriptorProto_descriptor; private static final GeneratedMessageV3.FieldAccessorTable internal_static_google_protobuf_FieldDescriptorProto_fieldAccessorTable; private static final Descriptors.Descriptor internal_static_google_protobuf_OneofDescriptorProto_descriptor; private static final GeneratedMessageV3.FieldAccessorTable internal_static_google_protobuf_OneofDescriptorProto_fieldAccessorTable; private static final Descriptors.Descriptor internal_static_google_protobuf_EnumDescriptorProto_descriptor; private static final GeneratedMessageV3.FieldAccessorTable internal_static_google_protobuf_EnumDescriptorProto_fieldAccessorTable; private static final Descriptors.Descriptor internal_static_google_protobuf_EnumDescriptorProto_EnumReservedRange_descriptor; private static final GeneratedMessageV3.FieldAccessorTable internal_static_google_protobuf_EnumDescriptorProto_EnumReservedRange_fieldAccessorTable; private static final Descriptors.Descriptor internal_static_google_protobuf_EnumValueDescriptorProto_descriptor; private static final GeneratedMessageV3.FieldAccessorTable internal_static_google_protobuf_EnumValueDescriptorProto_fieldAccessorTable; private static final Descriptors.Descriptor internal_static_google_protobuf_ServiceDescriptorProto_descriptor; private static final GeneratedMessageV3.FieldAccessorTable internal_static_google_protobuf_ServiceDescriptorProto_fieldAccessorTable; private static final Descriptors.Descriptor internal_static_google_protobuf_MethodDescriptorProto_descriptor; private static final GeneratedMessageV3.FieldAccessorTable internal_static_google_protobuf_MethodDescriptorProto_fieldAccessorTable; private static final Descriptors.Descriptor internal_static_google_protobuf_FileOptions_descriptor; private static final GeneratedMessageV3.FieldAccessorTable internal_static_google_protobuf_FileOptions_fieldAccessorTable; private static final Descriptors.Descriptor internal_static_google_protobuf_MessageOptions_descriptor; private static final GeneratedMessageV3.FieldAccessorTable internal_static_google_protobuf_MessageOptions_fieldAccessorTable; private static final Descriptors.Descriptor internal_static_google_protobuf_FieldOptions_descriptor; private static final GeneratedMessageV3.FieldAccessorTable internal_static_google_protobuf_FieldOptions_fieldAccessorTable; private static final Descriptors.Descriptor internal_static_google_protobuf_OneofOptions_descriptor; private static final GeneratedMessageV3.FieldAccessorTable internal_static_google_protobuf_OneofOptions_fieldAccessorTable; private static final Descriptors.Descriptor internal_static_google_protobuf_EnumOptions_descriptor; private static final GeneratedMessageV3.FieldAccessorTable internal_static_google_protobuf_EnumOptions_fieldAccessorTable; private static final Descriptors.Descriptor internal_static_google_protobuf_EnumValueOptions_descriptor; private static final GeneratedMessageV3.FieldAccessorTable internal_static_google_protobuf_EnumValueOptions_fieldAccessorTable; private static final Descriptors.Descriptor internal_static_google_protobuf_ServiceOptions_descriptor; private static final GeneratedMessageV3.FieldAccessorTable internal_static_google_protobuf_ServiceOptions_fieldAccessorTable; private static final Descriptors.Descriptor internal_static_google_protobuf_MethodOptions_descriptor; private static final GeneratedMessageV3.FieldAccessorTable internal_static_google_protobuf_MethodOptions_fieldAccessorTable; private static final Descriptors.Descriptor internal_static_google_protobuf_UninterpretedOption_descriptor; private static final GeneratedMessageV3.FieldAccessorTable internal_static_google_protobuf_UninterpretedOption_fieldAccessorTable; private static final Descriptors.Descriptor internal_static_google_protobuf_UninterpretedOption_NamePart_descriptor; private static final GeneratedMessageV3.FieldAccessorTable internal_static_google_protobuf_UninterpretedOption_NamePart_fieldAccessorTable; private static final Descriptors.Descriptor internal_static_google_protobuf_SourceCodeInfo_descriptor;
/*       */   private static final GeneratedMessageV3.FieldAccessorTable internal_static_google_protobuf_SourceCodeInfo_fieldAccessorTable;
/*       */   private static final Descriptors.Descriptor internal_static_google_protobuf_SourceCodeInfo_Location_descriptor;
/*       */   private static final GeneratedMessageV3.FieldAccessorTable internal_static_google_protobuf_SourceCodeInfo_Location_fieldAccessorTable;
/*       */   private static final Descriptors.Descriptor internal_static_google_protobuf_GeneratedCodeInfo_descriptor;
/*       */   private static final GeneratedMessageV3.FieldAccessorTable internal_static_google_protobuf_GeneratedCodeInfo_fieldAccessorTable;
/*       */   private static final Descriptors.Descriptor internal_static_google_protobuf_GeneratedCodeInfo_Annotation_descriptor;
/*       */   private static final GeneratedMessageV3.FieldAccessorTable internal_static_google_protobuf_GeneratedCodeInfo_Annotation_fieldAccessorTable;
/*       */   private static Descriptors.FileDescriptor descriptor;
/*       */   
/*       */   public static void registerAllExtensions(ExtensionRegistryLite registry) {}
/*       */   
/*       */   public static void registerAllExtensions(ExtensionRegistry registry) {
/*    14 */     registerAllExtensions(registry);
/*       */   }
/*       */ 
/*       */ 
/*       */   
/*       */   public static interface FileDescriptorSetOrBuilder
/*       */     extends MessageOrBuilder
/*       */   {
/*       */     List<FileDescriptorProto> getFileList();
/*       */ 
/*       */ 
/*       */     
/*       */     FileDescriptorProto getFile(int param1Int);
/*       */ 
/*       */ 
/*       */     
/*       */     int getFileCount();
/*       */ 
/*       */ 
/*       */     
/*       */     List<? extends FileDescriptorProtoOrBuilder> getFileOrBuilderList();
/*       */ 
/*       */ 
/*       */     
/*       */     FileDescriptorProtoOrBuilder getFileOrBuilder(int param1Int);
/*       */   }
/*       */ 
/*       */ 
/*       */   
/*       */   public static final class FileDescriptorSet
/*       */     extends GeneratedMessageV3
/*       */     implements FileDescriptorSetOrBuilder
/*       */   {
/*       */     private static final long serialVersionUID = 0L;
/*       */ 
/*       */     
/*       */     public static final int FILE_FIELD_NUMBER = 1;
/*       */ 
/*       */     
/*       */     private List<FileDescriptorProto> file_;
/*       */     
/*       */     private byte memoizedIsInitialized;
/*       */ 
/*       */     
/*       */     private FileDescriptorSet(GeneratedMessageV3.Builder<?> builder)
/*       */     {
/*    60 */       super(builder);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*   181 */       this.memoizedIsInitialized = -1; } private FileDescriptorSet() { this.memoizedIsInitialized = -1; this.file_ = Collections.emptyList(); } protected Object newInstance(UnusedPrivateParameter unused) { return new FileDescriptorSet(); } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private FileDescriptorSet(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this(); if (extensionRegistry == null) throw new NullPointerException();  int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { int tag = input.readTag(); switch (tag) { case 0: done = true; continue;case 10: if ((mutable_bitField0_ & 0x1) == 0) { this.file_ = new ArrayList<>(); mutable_bitField0_ |= 0x1; }  this.file_.add(input.readMessage(FileDescriptorProto.PARSER, extensionRegistry)); continue; }  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this); } finally { if ((mutable_bitField0_ & 0x1) != 0) this.file_ = Collections.unmodifiableList(this.file_);  this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return DescriptorProtos.internal_static_google_protobuf_FileDescriptorSet_descriptor; } protected FieldAccessorTable internalGetFieldAccessorTable() { return DescriptorProtos.internal_static_google_protobuf_FileDescriptorSet_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)FileDescriptorSet.class, (Class)Builder.class); } public List<FileDescriptorProto> getFileList() { return this.file_; } public List<? extends FileDescriptorProtoOrBuilder> getFileOrBuilderList() { return (List)this.file_; } public int getFileCount() { return this.file_.size(); }
/*       */     public FileDescriptorProto getFile(int index) { return this.file_.get(index); }
/*       */     public FileDescriptorProtoOrBuilder getFileOrBuilder(int index) { return this.file_.get(index); }
/*   184 */     public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized;
/*   185 */       if (isInitialized == 1) return true; 
/*   186 */       if (isInitialized == 0) return false;
/*       */       
/*   188 */       for (int i = 0; i < getFileCount(); i++) {
/*   189 */         if (!getFile(i).isInitialized()) {
/*   190 */           this.memoizedIsInitialized = 0;
/*   191 */           return false;
/*       */         } 
/*       */       } 
/*   194 */       this.memoizedIsInitialized = 1;
/*   195 */       return true; }
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/*   201 */       for (int i = 0; i < this.file_.size(); i++) {
/*   202 */         output.writeMessage(1, this.file_.get(i));
/*       */       }
/*   204 */       this.unknownFields.writeTo(output);
/*       */     }
/*       */ 
/*       */     
/*       */     public int getSerializedSize() {
/*   209 */       int size = this.memoizedSize;
/*   210 */       if (size != -1) return size;
/*       */       
/*   212 */       size = 0;
/*   213 */       for (int i = 0; i < this.file_.size(); i++) {
/*   214 */         size += 
/*   215 */           CodedOutputStream.computeMessageSize(1, this.file_.get(i));
/*       */       }
/*   217 */       size += this.unknownFields.getSerializedSize();
/*   218 */       this.memoizedSize = size;
/*   219 */       return size;
/*       */     }
/*       */ 
/*       */     
/*       */     public boolean equals(Object obj) {
/*   224 */       if (obj == this) {
/*   225 */         return true;
/*       */       }
/*   227 */       if (!(obj instanceof FileDescriptorSet)) {
/*   228 */         return super.equals(obj);
/*       */       }
/*   230 */       FileDescriptorSet other = (FileDescriptorSet)obj;
/*       */ 
/*       */       
/*   233 */       if (!getFileList().equals(other.getFileList())) return false; 
/*   234 */       if (!this.unknownFields.equals(other.unknownFields)) return false; 
/*   235 */       return true;
/*       */     }
/*       */ 
/*       */     
/*       */     public int hashCode() {
/*   240 */       if (this.memoizedHashCode != 0) {
/*   241 */         return this.memoizedHashCode;
/*       */       }
/*   243 */       int hash = 41;
/*   244 */       hash = 19 * hash + getDescriptor().hashCode();
/*   245 */       if (getFileCount() > 0) {
/*   246 */         hash = 37 * hash + 1;
/*   247 */         hash = 53 * hash + getFileList().hashCode();
/*       */       } 
/*   249 */       hash = 29 * hash + this.unknownFields.hashCode();
/*   250 */       this.memoizedHashCode = hash;
/*   251 */       return hash;
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static FileDescriptorSet parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
/*   257 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static FileDescriptorSet parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*   263 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static FileDescriptorSet parseFrom(ByteString data) throws InvalidProtocolBufferException {
/*   268 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static FileDescriptorSet parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*   274 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static FileDescriptorSet parseFrom(byte[] data) throws InvalidProtocolBufferException {
/*   278 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static FileDescriptorSet parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*   284 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static FileDescriptorSet parseFrom(InputStream input) throws IOException {
/*   288 */       return 
/*   289 */         GeneratedMessageV3.<FileDescriptorSet>parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static FileDescriptorSet parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*   295 */       return 
/*   296 */         GeneratedMessageV3.<FileDescriptorSet>parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static FileDescriptorSet parseDelimitedFrom(InputStream input) throws IOException {
/*   300 */       return 
/*   301 */         GeneratedMessageV3.<FileDescriptorSet>parseDelimitedWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static FileDescriptorSet parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*   307 */       return 
/*   308 */         GeneratedMessageV3.<FileDescriptorSet>parseDelimitedWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static FileDescriptorSet parseFrom(CodedInputStream input) throws IOException {
/*   313 */       return 
/*   314 */         GeneratedMessageV3.<FileDescriptorSet>parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static FileDescriptorSet parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*   320 */       return 
/*   321 */         GeneratedMessageV3.<FileDescriptorSet>parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public Builder newBuilderForType() {
/*   325 */       return newBuilder();
/*       */     } public static Builder newBuilder() {
/*   327 */       return DEFAULT_INSTANCE.toBuilder();
/*       */     }
/*       */     public static Builder newBuilder(FileDescriptorSet prototype) {
/*   330 */       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
/*       */     }
/*       */     
/*       */     public Builder toBuilder() {
/*   334 */       return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder())
/*   335 */         .mergeFrom(this);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     protected Builder newBuilderForType(BuilderParent parent) {
/*   341 */       Builder builder = new Builder(parent);
/*   342 */       return builder;
/*       */     }
/*       */ 
/*       */     
/*       */     public static final class Builder
/*       */       extends GeneratedMessageV3.Builder<Builder>
/*       */       implements FileDescriptorSetOrBuilder
/*       */     {
/*       */       private int bitField0_;
/*       */       
/*       */       private List<FileDescriptorProto> file_;
/*       */       
/*       */       private RepeatedFieldBuilderV3<FileDescriptorProto, FileDescriptorProto.Builder, FileDescriptorProtoOrBuilder> fileBuilder_;
/*       */ 
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/*   358 */         return DescriptorProtos.internal_static_google_protobuf_FileDescriptorSet_descriptor;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       protected FieldAccessorTable internalGetFieldAccessorTable() {
/*   364 */         return DescriptorProtos.internal_static_google_protobuf_FileDescriptorSet_fieldAccessorTable
/*   365 */           .ensureFieldAccessorsInitialized((Class) FileDescriptorSet.class, (Class)Builder.class);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private Builder()
/*       */       {
/*   539 */         this
/*   540 */           .file_ = Collections.emptyList(); maybeForceBuilderInitialization(); } private Builder(BuilderParent parent) { super(parent); this.file_ = Collections.emptyList(); maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (GeneratedMessageV3.alwaysUseFieldBuilders) getFileFieldBuilder();  } public Builder clear() { super.clear(); if (this.fileBuilder_ == null) { this.file_ = Collections.emptyList(); this.bitField0_ &= 0xFFFFFFFE; } else { this.fileBuilder_.clear(); }  return this; } public Descriptors.Descriptor getDescriptorForType() { return DescriptorProtos.internal_static_google_protobuf_FileDescriptorSet_descriptor; } public FileDescriptorSet getDefaultInstanceForType() { return FileDescriptorSet.getDefaultInstance(); } public FileDescriptorSet build() { FileDescriptorSet result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public FileDescriptorSet buildPartial() { FileDescriptorSet result = new FileDescriptorSet(this); int from_bitField0_ = this.bitField0_; if (this.fileBuilder_ == null) { if ((this.bitField0_ & 0x1) != 0) { this.file_ = Collections.unmodifiableList(this.file_); this.bitField0_ &= 0xFFFFFFFE; }  result.file_ = this.file_; } else { result.file_ = this.fileBuilder_.build(); }  onBuilt(); return result; } public Builder clone() { return super.clone(); } public Builder setField(Descriptors.FieldDescriptor field, Object value) { return super.setField(field, value); } public Builder clearField(Descriptors.FieldDescriptor field) { return super.clearField(field); } public Builder clearOneof(Descriptors.OneofDescriptor oneof) { return super.clearOneof(oneof); } public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) { return super.setRepeatedField(field, index, value); } public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) { return super.addRepeatedField(field, value); } public Builder mergeFrom(Message other) { if (other instanceof FileDescriptorSet) return mergeFrom((FileDescriptorSet)other);  super.mergeFrom(other); return this; } public Builder mergeFrom(FileDescriptorSet other) { if (other == FileDescriptorSet.getDefaultInstance()) return this;  if (this.fileBuilder_ == null) { if (!other.file_.isEmpty()) { if (this.file_.isEmpty()) { this.file_ = other.file_; this.bitField0_ &= 0xFFFFFFFE; } else { ensureFileIsMutable(); this.file_.addAll(other.file_); }  onChanged(); }  } else if (!other.file_.isEmpty()) { if (this.fileBuilder_.isEmpty()) { this.fileBuilder_.dispose(); this.fileBuilder_ = null; this.file_ = other.file_; this.bitField0_ &= 0xFFFFFFFE; this.fileBuilder_ = GeneratedMessageV3.alwaysUseFieldBuilders ? getFileFieldBuilder() : null; } else { this.fileBuilder_.addAllMessages(other.file_); }  }  mergeUnknownFields(other.unknownFields); onChanged(); return this; } public final boolean isInitialized() { for (int i = 0; i < getFileCount(); i++) { if (!getFile(i).isInitialized()) return false;  }  return true; }
/*       */       public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { FileDescriptorSet parsedMessage = null; try { parsedMessage = FileDescriptorSet.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (FileDescriptorSet)e.getUnfinishedMessage(); throw e.unwrapIOException(); } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; }
/*   542 */       private void ensureFileIsMutable() { if ((this.bitField0_ & 0x1) == 0) {
/*   543 */           this.file_ = new ArrayList<>(this.file_);
/*   544 */           this.bitField0_ |= 0x1;
/*       */         }  }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public List<FileDescriptorProto> getFileList() {
/*   555 */         if (this.fileBuilder_ == null) {
/*   556 */           return Collections.unmodifiableList(this.file_);
/*       */         }
/*   558 */         return this.fileBuilder_.getMessageList();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getFileCount() {
/*   565 */         if (this.fileBuilder_ == null) {
/*   566 */           return this.file_.size();
/*       */         }
/*   568 */         return this.fileBuilder_.getCount();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public FileDescriptorProto getFile(int index) {
/*   575 */         if (this.fileBuilder_ == null) {
/*   576 */           return this.file_.get(index);
/*       */         }
/*   578 */         return this.fileBuilder_.getMessage(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setFile(int index, FileDescriptorProto value) {
/*   586 */         if (this.fileBuilder_ == null) {
/*   587 */           if (value == null) {
/*   588 */             throw new NullPointerException();
/*       */           }
/*   590 */           ensureFileIsMutable();
/*   591 */           this.file_.set(index, value);
/*   592 */           onChanged();
/*       */         } else {
/*   594 */           this.fileBuilder_.setMessage(index, value);
/*       */         } 
/*   596 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setFile(int index, FileDescriptorProto.Builder builderForValue) {
/*   603 */         if (this.fileBuilder_ == null) {
/*   604 */           ensureFileIsMutable();
/*   605 */           this.file_.set(index, builderForValue.build());
/*   606 */           onChanged();
/*       */         } else {
/*   608 */           this.fileBuilder_.setMessage(index, builderForValue.build());
/*       */         } 
/*   610 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addFile(FileDescriptorProto value) {
/*   616 */         if (this.fileBuilder_ == null) {
/*   617 */           if (value == null) {
/*   618 */             throw new NullPointerException();
/*       */           }
/*   620 */           ensureFileIsMutable();
/*   621 */           this.file_.add(value);
/*   622 */           onChanged();
/*       */         } else {
/*   624 */           this.fileBuilder_.addMessage(value);
/*       */         } 
/*   626 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addFile(int index, FileDescriptorProto value) {
/*   633 */         if (this.fileBuilder_ == null) {
/*   634 */           if (value == null) {
/*   635 */             throw new NullPointerException();
/*       */           }
/*   637 */           ensureFileIsMutable();
/*   638 */           this.file_.add(index, value);
/*   639 */           onChanged();
/*       */         } else {
/*   641 */           this.fileBuilder_.addMessage(index, value);
/*       */         } 
/*   643 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addFile(FileDescriptorProto.Builder builderForValue) {
/*   650 */         if (this.fileBuilder_ == null) {
/*   651 */           ensureFileIsMutable();
/*   652 */           this.file_.add(builderForValue.build());
/*   653 */           onChanged();
/*       */         } else {
/*   655 */           this.fileBuilder_.addMessage(builderForValue.build());
/*       */         } 
/*   657 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addFile(int index, FileDescriptorProto.Builder builderForValue) {
/*   664 */         if (this.fileBuilder_ == null) {
/*   665 */           ensureFileIsMutable();
/*   666 */           this.file_.add(index, builderForValue.build());
/*   667 */           onChanged();
/*       */         } else {
/*   669 */           this.fileBuilder_.addMessage(index, builderForValue.build());
/*       */         } 
/*   671 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addAllFile(Iterable<? extends FileDescriptorProto> values) {
/*   678 */         if (this.fileBuilder_ == null) {
/*   679 */           ensureFileIsMutable();
/*   680 */           AbstractMessageLite.Builder.addAll(values, this.file_);
/*       */           
/*   682 */           onChanged();
/*       */         } else {
/*   684 */           this.fileBuilder_.addAllMessages(values);
/*       */         } 
/*   686 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearFile() {
/*   692 */         if (this.fileBuilder_ == null) {
/*   693 */           this.file_ = Collections.emptyList();
/*   694 */           this.bitField0_ &= 0xFFFFFFFE;
/*   695 */           onChanged();
/*       */         } else {
/*   697 */           this.fileBuilder_.clear();
/*       */         } 
/*   699 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder removeFile(int index) {
/*   705 */         if (this.fileBuilder_ == null) {
/*   706 */           ensureFileIsMutable();
/*   707 */           this.file_.remove(index);
/*   708 */           onChanged();
/*       */         } else {
/*   710 */           this.fileBuilder_.remove(index);
/*       */         } 
/*   712 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public FileDescriptorProto.Builder getFileBuilder(int index) {
/*   719 */         return getFileFieldBuilder().getBuilder(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public FileDescriptorProtoOrBuilder getFileOrBuilder(int index) {
/*   726 */         if (this.fileBuilder_ == null)
/*   727 */           return this.file_.get(index); 
/*   728 */         return this.fileBuilder_.getMessageOrBuilder(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public List<? extends FileDescriptorProtoOrBuilder> getFileOrBuilderList() {
/*   736 */         if (this.fileBuilder_ != null) {
/*   737 */           return this.fileBuilder_.getMessageOrBuilderList();
/*       */         }
/*   739 */         return Collections.unmodifiableList((List)this.file_);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public FileDescriptorProto.Builder addFileBuilder() {
/*   746 */         return getFileFieldBuilder().addBuilder(
/*   747 */             FileDescriptorProto.getDefaultInstance());
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public FileDescriptorProto.Builder addFileBuilder(int index) {
/*   754 */         return getFileFieldBuilder().addBuilder(index, 
/*   755 */             FileDescriptorProto.getDefaultInstance());
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public List<FileDescriptorProto.Builder> getFileBuilderList() {
/*   762 */         return getFileFieldBuilder().getBuilderList();
/*       */       }
/*       */ 
/*       */       
/*       */       private RepeatedFieldBuilderV3<FileDescriptorProto, FileDescriptorProto.Builder, FileDescriptorProtoOrBuilder> getFileFieldBuilder() {
/*   767 */         if (this.fileBuilder_ == null) {
/*   768 */           this
/*       */ 
/*       */ 
/*       */ 
/*       */             
/*   773 */             .fileBuilder_ = new RepeatedFieldBuilderV3<>(this.file_, ((this.bitField0_ & 0x1) != 0), getParentForChildren(), isClean());
/*   774 */           this.file_ = null;
/*       */         } 
/*   776 */         return this.fileBuilder_;
/*       */       }
/*       */ 
/*       */       
/*       */       public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
/*   781 */         return super.setUnknownFields(unknownFields);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
/*   787 */         return super.mergeUnknownFields(unknownFields);
/*       */       }
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*   797 */     private static final FileDescriptorSet DEFAULT_INSTANCE = new FileDescriptorSet();
/*       */ 
/*       */     
/*       */     public static FileDescriptorSet getDefaultInstance() {
/*   801 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */     
/*       */     @Deprecated
/*   805 */     public static final Parser<FileDescriptorSet> PARSER = new AbstractParser<FileDescriptorSet>()
/*       */       {
/*       */ 
/*       */         
/*       */         public FileDescriptorSet parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException
/*       */         {
/*   811 */           return new FileDescriptorSet(input, extensionRegistry);
/*       */         }
/*       */       };
/*       */     
/*       */     public static Parser<FileDescriptorSet> parser() {
/*   816 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public Parser<FileDescriptorSet> getParserForType() {
/*   821 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public FileDescriptorSet getDefaultInstanceForType() {
/*   826 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public static interface FileDescriptorProtoOrBuilder
/*       */     extends MessageOrBuilder
/*       */   {
/*       */     boolean hasName();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     String getName();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getNameBytes();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasPackage();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     String getPackage();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getPackageBytes();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     List<String> getDependencyList();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getDependencyCount();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     String getDependency(int param1Int);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getDependencyBytes(int param1Int);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     List<Integer> getPublicDependencyList();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getPublicDependencyCount();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getPublicDependency(int param1Int);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     List<Integer> getWeakDependencyList();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getWeakDependencyCount();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getWeakDependency(int param1Int);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     List<DescriptorProto> getMessageTypeList();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     DescriptorProto getMessageType(int param1Int);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getMessageTypeCount();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     List<? extends DescriptorProtoOrBuilder> getMessageTypeOrBuilderList();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     DescriptorProtoOrBuilder getMessageTypeOrBuilder(int param1Int);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     List<EnumDescriptorProto> getEnumTypeList();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     EnumDescriptorProto getEnumType(int param1Int);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getEnumTypeCount();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     List<? extends EnumDescriptorProtoOrBuilder> getEnumTypeOrBuilderList();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     EnumDescriptorProtoOrBuilder getEnumTypeOrBuilder(int param1Int);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     List<ServiceDescriptorProto> getServiceList();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     ServiceDescriptorProto getService(int param1Int);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getServiceCount();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     List<? extends ServiceDescriptorProtoOrBuilder> getServiceOrBuilderList();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     ServiceDescriptorProtoOrBuilder getServiceOrBuilder(int param1Int);
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     List<FieldDescriptorProto> getExtensionList();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     FieldDescriptorProto getExtension(int param1Int);
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getExtensionCount();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     List<? extends FieldDescriptorProtoOrBuilder> getExtensionOrBuilderList();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     FieldDescriptorProtoOrBuilder getExtensionOrBuilder(int param1Int);
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasOptions();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     FileOptions getOptions();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     FileOptionsOrBuilder getOptionsOrBuilder();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasSourceCodeInfo();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     SourceCodeInfo getSourceCodeInfo();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     SourceCodeInfoOrBuilder getSourceCodeInfoOrBuilder();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasSyntax();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     String getSyntax();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getSyntaxBytes();
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public static final class FileDescriptorProto
/*       */     extends GeneratedMessageV3
/*       */     implements FileDescriptorProtoOrBuilder
/*       */   {
/*       */     private static final long serialVersionUID = 0L;
/*       */ 
/*       */ 
/*       */     
/*       */     private int bitField0_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int NAME_FIELD_NUMBER = 1;
/*       */ 
/*       */ 
/*       */     
/*       */     private volatile Object name_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int PACKAGE_FIELD_NUMBER = 2;
/*       */ 
/*       */ 
/*       */     
/*       */     private volatile Object package_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int DEPENDENCY_FIELD_NUMBER = 3;
/*       */ 
/*       */ 
/*       */     
/*       */     private LazyStringList dependency_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int PUBLIC_DEPENDENCY_FIELD_NUMBER = 10;
/*       */ 
/*       */ 
/*       */     
/*       */     private Internal.IntList publicDependency_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int WEAK_DEPENDENCY_FIELD_NUMBER = 11;
/*       */ 
/*       */ 
/*       */     
/*       */     private Internal.IntList weakDependency_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int MESSAGE_TYPE_FIELD_NUMBER = 4;
/*       */ 
/*       */ 
/*       */     
/*       */     private List<DescriptorProto> messageType_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int ENUM_TYPE_FIELD_NUMBER = 5;
/*       */ 
/*       */ 
/*       */     
/*       */     private List<EnumDescriptorProto> enumType_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int SERVICE_FIELD_NUMBER = 6;
/*       */ 
/*       */ 
/*       */     
/*       */     private List<ServiceDescriptorProto> service_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int EXTENSION_FIELD_NUMBER = 7;
/*       */ 
/*       */ 
/*       */     
/*       */     private List<FieldDescriptorProto> extension_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int OPTIONS_FIELD_NUMBER = 8;
/*       */ 
/*       */ 
/*       */     
/*       */     private FileOptions options_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int SOURCE_CODE_INFO_FIELD_NUMBER = 9;
/*       */ 
/*       */ 
/*       */     
/*       */     private SourceCodeInfo sourceCodeInfo_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int SYNTAX_FIELD_NUMBER = 12;
/*       */ 
/*       */ 
/*       */     
/*       */     private volatile Object syntax_;
/*       */ 
/*       */ 
/*       */     
/*       */     private byte memoizedIsInitialized;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private FileDescriptorProto(GeneratedMessageV3.Builder<?> builder)
/*       */     {
/*  1208 */       super(builder);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*  2007 */       this.memoizedIsInitialized = -1; } private FileDescriptorProto() { this.memoizedIsInitialized = -1; this.name_ = ""; this.package_ = ""; this.dependency_ = LazyStringArrayList.EMPTY; this.publicDependency_ = emptyIntList(); this.weakDependency_ = emptyIntList(); this.messageType_ = Collections.emptyList(); this.enumType_ = Collections.emptyList(); this.service_ = Collections.emptyList(); this.extension_ = Collections.emptyList(); this.syntax_ = ""; } protected Object newInstance(UnusedPrivateParameter unused) { return new FileDescriptorProto(); } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private FileDescriptorProto(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this(); if (extensionRegistry == null) throw new NullPointerException();  int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { ByteString byteString1; FileOptions.Builder builder; SourceCodeInfo.Builder subBuilder; int length; ByteString bs; int limit, tag = input.readTag(); switch (tag) { case 0: done = true; continue;case 10: byteString1 = input.readBytes(); this.bitField0_ |= 0x1; this.name_ = byteString1; continue;case 18: byteString1 = input.readBytes(); this.bitField0_ |= 0x2; this.package_ = byteString1; continue;case 26: byteString1 = input.readBytes(); if ((mutable_bitField0_ & 0x4) == 0) { this.dependency_ = new LazyStringArrayList(); mutable_bitField0_ |= 0x4; }  this.dependency_.add(byteString1); continue;case 34: if ((mutable_bitField0_ & 0x20) == 0) { this.messageType_ = new ArrayList<>(); mutable_bitField0_ |= 0x20; }  this.messageType_.add(input.readMessage(DescriptorProto.PARSER, extensionRegistry)); continue;case 42: if ((mutable_bitField0_ & 0x40) == 0) { this.enumType_ = new ArrayList<>(); mutable_bitField0_ |= 0x40; }  this.enumType_.add(input.readMessage(EnumDescriptorProto.PARSER, extensionRegistry)); continue;case 50: if ((mutable_bitField0_ & 0x80) == 0) { this.service_ = new ArrayList<>(); mutable_bitField0_ |= 0x80; }  this.service_.add(input.readMessage(ServiceDescriptorProto.PARSER, extensionRegistry)); continue;case 58: if ((mutable_bitField0_ & 0x100) == 0) { this.extension_ = new ArrayList<>(); mutable_bitField0_ |= 0x100; }  this.extension_.add(input.readMessage(FieldDescriptorProto.PARSER, extensionRegistry)); continue;case 66: builder = null; if ((this.bitField0_ & 0x4) != 0) builder = this.options_.toBuilder();  this.options_ = input.<FileOptions>readMessage(FileOptions.PARSER, extensionRegistry); if (builder != null) { builder.mergeFrom(this.options_); this.options_ = builder.buildPartial(); }  this.bitField0_ |= 0x4; continue;case 74: subBuilder = null; if ((this.bitField0_ & 0x8) != 0) subBuilder = this.sourceCodeInfo_.toBuilder();  this.sourceCodeInfo_ = input.<SourceCodeInfo>readMessage(SourceCodeInfo.PARSER, extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.sourceCodeInfo_); this.sourceCodeInfo_ = subBuilder.buildPartial(); }  this.bitField0_ |= 0x8; continue;case 80: if ((mutable_bitField0_ & 0x8) == 0) { this.publicDependency_ = newIntList(); mutable_bitField0_ |= 0x8; }  this.publicDependency_.addInt(input.readInt32()); continue;case 82: length = input.readRawVarint32(); limit = input.pushLimit(length); if ((mutable_bitField0_ & 0x8) == 0 && input.getBytesUntilLimit() > 0) { this.publicDependency_ = newIntList(); mutable_bitField0_ |= 0x8; }  while (input.getBytesUntilLimit() > 0) this.publicDependency_.addInt(input.readInt32());  input.popLimit(limit); continue;case 88: if ((mutable_bitField0_ & 0x10) == 0) { this.weakDependency_ = newIntList(); mutable_bitField0_ |= 0x10; }  this.weakDependency_.addInt(input.readInt32()); continue;case 90: length = input.readRawVarint32(); limit = input.pushLimit(length); if ((mutable_bitField0_ & 0x10) == 0 && input.getBytesUntilLimit() > 0) { this.weakDependency_ = newIntList(); mutable_bitField0_ |= 0x10; }  while (input.getBytesUntilLimit() > 0) this.weakDependency_.addInt(input.readInt32());  input.popLimit(limit); continue;case 98: bs = input.readBytes(); this.bitField0_ |= 0x10; this.syntax_ = bs; continue; }  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this); } finally { if ((mutable_bitField0_ & 0x4) != 0) this.dependency_ = this.dependency_.getUnmodifiableView();  if ((mutable_bitField0_ & 0x20) != 0) this.messageType_ = Collections.unmodifiableList(this.messageType_);  if ((mutable_bitField0_ & 0x40) != 0) this.enumType_ = Collections.unmodifiableList(this.enumType_);  if ((mutable_bitField0_ & 0x80) != 0) this.service_ = Collections.unmodifiableList(this.service_);  if ((mutable_bitField0_ & 0x100) != 0) this.extension_ = Collections.unmodifiableList(this.extension_);  if ((mutable_bitField0_ & 0x8) != 0) this.publicDependency_.makeImmutable();  if ((mutable_bitField0_ & 0x10) != 0) this.weakDependency_.makeImmutable();  this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return DescriptorProtos.internal_static_google_protobuf_FileDescriptorProto_descriptor; } protected FieldAccessorTable internalGetFieldAccessorTable() { return DescriptorProtos.internal_static_google_protobuf_FileDescriptorProto_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)FileDescriptorProto.class, (Class)Builder.class); } public boolean hasName() { return ((this.bitField0_ & 0x1) != 0); } public String getName() { Object ref = this.name_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.name_ = s;  return s; } public ByteString getNameBytes() { Object ref = this.name_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.name_ = b; return b; }  return (ByteString)ref; } public boolean hasPackage() { return ((this.bitField0_ & 0x2) != 0); } public String getPackage() { Object ref = this.package_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.package_ = s;  return s; } public ByteString getPackageBytes() { Object ref = this.package_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.package_ = b; return b; }  return (ByteString)ref; } public ProtocolStringList getDependencyList() { return this.dependency_; } public int getDependencyCount() { return this.dependency_.size(); } public String getDependency(int index) { return this.dependency_.get(index); } public ByteString getDependencyBytes(int index) { return this.dependency_.getByteString(index); } public List<Integer> getPublicDependencyList() { return this.publicDependency_; } public int getPublicDependencyCount() { return this.publicDependency_.size(); } public int getPublicDependency(int index) { return this.publicDependency_.getInt(index); } public List<Integer> getWeakDependencyList() { return this.weakDependency_; } public int getWeakDependencyCount() { return this.weakDependency_.size(); } public int getWeakDependency(int index) { return this.weakDependency_.getInt(index); } public List<DescriptorProto> getMessageTypeList() { return this.messageType_; } public List<? extends DescriptorProtoOrBuilder> getMessageTypeOrBuilderList() { return (List)this.messageType_; } public int getMessageTypeCount() { return this.messageType_.size(); } public DescriptorProto getMessageType(int index) { return this.messageType_.get(index); } public DescriptorProtoOrBuilder getMessageTypeOrBuilder(int index) { return this.messageType_.get(index); } public List<EnumDescriptorProto> getEnumTypeList() { return this.enumType_; } public List<? extends EnumDescriptorProtoOrBuilder> getEnumTypeOrBuilderList() { return (List)this.enumType_; } public int getEnumTypeCount() { return this.enumType_.size(); } public EnumDescriptorProto getEnumType(int index) { return this.enumType_.get(index); } public EnumDescriptorProtoOrBuilder getEnumTypeOrBuilder(int index) { return this.enumType_.get(index); } public List<ServiceDescriptorProto> getServiceList() { return this.service_; } public List<? extends ServiceDescriptorProtoOrBuilder> getServiceOrBuilderList() { return (List)this.service_; } public int getServiceCount() { return this.service_.size(); } public ServiceDescriptorProto getService(int index) { return this.service_.get(index); } public ServiceDescriptorProtoOrBuilder getServiceOrBuilder(int index) { return this.service_.get(index); } public List<FieldDescriptorProto> getExtensionList() { return this.extension_; } public List<? extends FieldDescriptorProtoOrBuilder> getExtensionOrBuilderList() { return (List)this.extension_; } public int getExtensionCount() { return this.extension_.size(); } public FieldDescriptorProto getExtension(int index) { return this.extension_.get(index); } public FieldDescriptorProtoOrBuilder getExtensionOrBuilder(int index) { return this.extension_.get(index); } public boolean hasOptions() { return ((this.bitField0_ & 0x4) != 0); } public FileOptions getOptions() { return (this.options_ == null) ? FileOptions.getDefaultInstance() : this.options_; } public FileOptionsOrBuilder getOptionsOrBuilder() { return (this.options_ == null) ? FileOptions.getDefaultInstance() : this.options_; } public boolean hasSourceCodeInfo() { return ((this.bitField0_ & 0x8) != 0); } public SourceCodeInfo getSourceCodeInfo() { return (this.sourceCodeInfo_ == null) ? SourceCodeInfo.getDefaultInstance() : this.sourceCodeInfo_; } public SourceCodeInfoOrBuilder getSourceCodeInfoOrBuilder() { return (this.sourceCodeInfo_ == null) ? SourceCodeInfo.getDefaultInstance() : this.sourceCodeInfo_; } public boolean hasSyntax() { return ((this.bitField0_ & 0x10) != 0); }
/*       */     public String getSyntax() { Object ref = this.syntax_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.syntax_ = s;  return s; }
/*       */     public ByteString getSyntaxBytes() { Object ref = this.syntax_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.syntax_ = b; return b; }  return (ByteString)ref; }
/*  2010 */     public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized;
/*  2011 */       if (isInitialized == 1) return true; 
/*  2012 */       if (isInitialized == 0) return false; 
/*       */       int i;
/*  2014 */       for (i = 0; i < getMessageTypeCount(); i++) {
/*  2015 */         if (!getMessageType(i).isInitialized()) {
/*  2016 */           this.memoizedIsInitialized = 0;
/*  2017 */           return false;
/*       */         } 
/*       */       } 
/*  2020 */       for (i = 0; i < getEnumTypeCount(); i++) {
/*  2021 */         if (!getEnumType(i).isInitialized()) {
/*  2022 */           this.memoizedIsInitialized = 0;
/*  2023 */           return false;
/*       */         } 
/*       */       } 
/*  2026 */       for (i = 0; i < getServiceCount(); i++) {
/*  2027 */         if (!getService(i).isInitialized()) {
/*  2028 */           this.memoizedIsInitialized = 0;
/*  2029 */           return false;
/*       */         } 
/*       */       } 
/*  2032 */       for (i = 0; i < getExtensionCount(); i++) {
/*  2033 */         if (!getExtension(i).isInitialized()) {
/*  2034 */           this.memoizedIsInitialized = 0;
/*  2035 */           return false;
/*       */         } 
/*       */       } 
/*  2038 */       if (hasOptions() && 
/*  2039 */         !getOptions().isInitialized()) {
/*  2040 */         this.memoizedIsInitialized = 0;
/*  2041 */         return false;
/*       */       } 
/*       */       
/*  2044 */       this.memoizedIsInitialized = 1;
/*  2045 */       return true; }
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/*  2051 */       if ((this.bitField0_ & 0x1) != 0) {
/*  2052 */         GeneratedMessageV3.writeString(output, 1, this.name_);
/*       */       }
/*  2054 */       if ((this.bitField0_ & 0x2) != 0)
/*  2055 */         GeneratedMessageV3.writeString(output, 2, this.package_); 
/*       */       int i;
/*  2057 */       for (i = 0; i < this.dependency_.size(); i++) {
/*  2058 */         GeneratedMessageV3.writeString(output, 3, this.dependency_.getRaw(i));
/*       */       }
/*  2060 */       for (i = 0; i < this.messageType_.size(); i++) {
/*  2061 */         output.writeMessage(4, this.messageType_.get(i));
/*       */       }
/*  2063 */       for (i = 0; i < this.enumType_.size(); i++) {
/*  2064 */         output.writeMessage(5, this.enumType_.get(i));
/*       */       }
/*  2066 */       for (i = 0; i < this.service_.size(); i++) {
/*  2067 */         output.writeMessage(6, this.service_.get(i));
/*       */       }
/*  2069 */       for (i = 0; i < this.extension_.size(); i++) {
/*  2070 */         output.writeMessage(7, this.extension_.get(i));
/*       */       }
/*  2072 */       if ((this.bitField0_ & 0x4) != 0) {
/*  2073 */         output.writeMessage(8, getOptions());
/*       */       }
/*  2075 */       if ((this.bitField0_ & 0x8) != 0) {
/*  2076 */         output.writeMessage(9, getSourceCodeInfo());
/*       */       }
/*  2078 */       for (i = 0; i < this.publicDependency_.size(); i++) {
/*  2079 */         output.writeInt32(10, this.publicDependency_.getInt(i));
/*       */       }
/*  2081 */       for (i = 0; i < this.weakDependency_.size(); i++) {
/*  2082 */         output.writeInt32(11, this.weakDependency_.getInt(i));
/*       */       }
/*  2084 */       if ((this.bitField0_ & 0x10) != 0) {
/*  2085 */         GeneratedMessageV3.writeString(output, 12, this.syntax_);
/*       */       }
/*  2087 */       this.unknownFields.writeTo(output);
/*       */     }
/*       */ 
/*       */     
/*       */     public int getSerializedSize() {
/*  2092 */       int size = this.memoizedSize;
/*  2093 */       if (size != -1) return size;
/*       */       
/*  2095 */       size = 0;
/*  2096 */       if ((this.bitField0_ & 0x1) != 0) {
/*  2097 */         size += GeneratedMessageV3.computeStringSize(1, this.name_);
/*       */       }
/*  2099 */       if ((this.bitField0_ & 0x2) != 0) {
/*  2100 */         size += GeneratedMessageV3.computeStringSize(2, this.package_);
/*       */       }
/*       */       
/*  2103 */       int j = 0; int k;
/*  2104 */       for (k = 0; k < this.dependency_.size(); k++) {
/*  2105 */         j += computeStringSizeNoTag(this.dependency_.getRaw(k));
/*       */       }
/*  2107 */       size += j;
/*  2108 */       size += 1 * getDependencyList().size();
/*       */       int i;
/*  2110 */       for (i = 0; i < this.messageType_.size(); i++) {
/*  2111 */         size += 
/*  2112 */           CodedOutputStream.computeMessageSize(4, this.messageType_.get(i));
/*       */       }
/*  2114 */       for (i = 0; i < this.enumType_.size(); i++) {
/*  2115 */         size += 
/*  2116 */           CodedOutputStream.computeMessageSize(5, this.enumType_.get(i));
/*       */       }
/*  2118 */       for (i = 0; i < this.service_.size(); i++) {
/*  2119 */         size += 
/*  2120 */           CodedOutputStream.computeMessageSize(6, this.service_.get(i));
/*       */       }
/*  2122 */       for (i = 0; i < this.extension_.size(); i++) {
/*  2123 */         size += 
/*  2124 */           CodedOutputStream.computeMessageSize(7, this.extension_.get(i));
/*       */       }
/*  2126 */       if ((this.bitField0_ & 0x4) != 0) {
/*  2127 */         size += 
/*  2128 */           CodedOutputStream.computeMessageSize(8, getOptions());
/*       */       }
/*  2130 */       if ((this.bitField0_ & 0x8) != 0) {
/*  2131 */         size += 
/*  2132 */           CodedOutputStream.computeMessageSize(9, getSourceCodeInfo());
/*       */       }
/*       */       
/*  2135 */       int dataSize = 0;
/*  2136 */       for (k = 0; k < this.publicDependency_.size(); k++) {
/*  2137 */         dataSize += 
/*  2138 */           CodedOutputStream.computeInt32SizeNoTag(this.publicDependency_.getInt(k));
/*       */       }
/*  2140 */       size += dataSize;
/*  2141 */       size += 1 * getPublicDependencyList().size();
/*       */ 
/*       */       
/*  2144 */       dataSize = 0;
/*  2145 */       for (k = 0; k < this.weakDependency_.size(); k++) {
/*  2146 */         dataSize += 
/*  2147 */           CodedOutputStream.computeInt32SizeNoTag(this.weakDependency_.getInt(k));
/*       */       }
/*  2149 */       size += dataSize;
/*  2150 */       size += 1 * getWeakDependencyList().size();
/*       */       
/*  2152 */       if ((this.bitField0_ & 0x10) != 0) {
/*  2153 */         size += GeneratedMessageV3.computeStringSize(12, this.syntax_);
/*       */       }
/*  2155 */       size += this.unknownFields.getSerializedSize();
/*  2156 */       this.memoizedSize = size;
/*  2157 */       return size;
/*       */     }
/*       */ 
/*       */     
/*       */     public boolean equals(Object obj) {
/*  2162 */       if (obj == this) {
/*  2163 */         return true;
/*       */       }
/*  2165 */       if (!(obj instanceof FileDescriptorProto)) {
/*  2166 */         return super.equals(obj);
/*       */       }
/*  2168 */       FileDescriptorProto other = (FileDescriptorProto)obj;
/*       */       
/*  2170 */       if (hasName() != other.hasName()) return false; 
/*  2171 */       if (hasName() && 
/*       */         
/*  2173 */         !getName().equals(other.getName())) return false;
/*       */       
/*  2175 */       if (hasPackage() != other.hasPackage()) return false; 
/*  2176 */       if (hasPackage() && 
/*       */         
/*  2178 */         !getPackage().equals(other.getPackage())) return false;
/*       */ 
/*       */       
/*  2181 */       if (!getDependencyList().equals(other.getDependencyList())) return false;
/*       */       
/*  2183 */       if (!getPublicDependencyList().equals(other.getPublicDependencyList())) return false;
/*       */       
/*  2185 */       if (!getWeakDependencyList().equals(other.getWeakDependencyList())) return false;
/*       */       
/*  2187 */       if (!getMessageTypeList().equals(other.getMessageTypeList())) return false;
/*       */       
/*  2189 */       if (!getEnumTypeList().equals(other.getEnumTypeList())) return false;
/*       */       
/*  2191 */       if (!getServiceList().equals(other.getServiceList())) return false;
/*       */       
/*  2193 */       if (!getExtensionList().equals(other.getExtensionList())) return false; 
/*  2194 */       if (hasOptions() != other.hasOptions()) return false; 
/*  2195 */       if (hasOptions() && 
/*       */         
/*  2197 */         !getOptions().equals(other.getOptions())) return false;
/*       */       
/*  2199 */       if (hasSourceCodeInfo() != other.hasSourceCodeInfo()) return false; 
/*  2200 */       if (hasSourceCodeInfo() && 
/*       */         
/*  2202 */         !getSourceCodeInfo().equals(other.getSourceCodeInfo())) return false;
/*       */       
/*  2204 */       if (hasSyntax() != other.hasSyntax()) return false; 
/*  2205 */       if (hasSyntax() && 
/*       */         
/*  2207 */         !getSyntax().equals(other.getSyntax())) return false;
/*       */       
/*  2209 */       if (!this.unknownFields.equals(other.unknownFields)) return false; 
/*  2210 */       return true;
/*       */     }
/*       */ 
/*       */     
/*       */     public int hashCode() {
/*  2215 */       if (this.memoizedHashCode != 0) {
/*  2216 */         return this.memoizedHashCode;
/*       */       }
/*  2218 */       int hash = 41;
/*  2219 */       hash = 19 * hash + getDescriptor().hashCode();
/*  2220 */       if (hasName()) {
/*  2221 */         hash = 37 * hash + 1;
/*  2222 */         hash = 53 * hash + getName().hashCode();
/*       */       } 
/*  2224 */       if (hasPackage()) {
/*  2225 */         hash = 37 * hash + 2;
/*  2226 */         hash = 53 * hash + getPackage().hashCode();
/*       */       } 
/*  2228 */       if (getDependencyCount() > 0) {
/*  2229 */         hash = 37 * hash + 3;
/*  2230 */         hash = 53 * hash + getDependencyList().hashCode();
/*       */       } 
/*  2232 */       if (getPublicDependencyCount() > 0) {
/*  2233 */         hash = 37 * hash + 10;
/*  2234 */         hash = 53 * hash + getPublicDependencyList().hashCode();
/*       */       } 
/*  2236 */       if (getWeakDependencyCount() > 0) {
/*  2237 */         hash = 37 * hash + 11;
/*  2238 */         hash = 53 * hash + getWeakDependencyList().hashCode();
/*       */       } 
/*  2240 */       if (getMessageTypeCount() > 0) {
/*  2241 */         hash = 37 * hash + 4;
/*  2242 */         hash = 53 * hash + getMessageTypeList().hashCode();
/*       */       } 
/*  2244 */       if (getEnumTypeCount() > 0) {
/*  2245 */         hash = 37 * hash + 5;
/*  2246 */         hash = 53 * hash + getEnumTypeList().hashCode();
/*       */       } 
/*  2248 */       if (getServiceCount() > 0) {
/*  2249 */         hash = 37 * hash + 6;
/*  2250 */         hash = 53 * hash + getServiceList().hashCode();
/*       */       } 
/*  2252 */       if (getExtensionCount() > 0) {
/*  2253 */         hash = 37 * hash + 7;
/*  2254 */         hash = 53 * hash + getExtensionList().hashCode();
/*       */       } 
/*  2256 */       if (hasOptions()) {
/*  2257 */         hash = 37 * hash + 8;
/*  2258 */         hash = 53 * hash + getOptions().hashCode();
/*       */       } 
/*  2260 */       if (hasSourceCodeInfo()) {
/*  2261 */         hash = 37 * hash + 9;
/*  2262 */         hash = 53 * hash + getSourceCodeInfo().hashCode();
/*       */       } 
/*  2264 */       if (hasSyntax()) {
/*  2265 */         hash = 37 * hash + 12;
/*  2266 */         hash = 53 * hash + getSyntax().hashCode();
/*       */       } 
/*  2268 */       hash = 29 * hash + this.unknownFields.hashCode();
/*  2269 */       this.memoizedHashCode = hash;
/*  2270 */       return hash;
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static FileDescriptorProto parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
/*  2276 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static FileDescriptorProto parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*  2282 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static FileDescriptorProto parseFrom(ByteString data) throws InvalidProtocolBufferException {
/*  2287 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static FileDescriptorProto parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*  2293 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static FileDescriptorProto parseFrom(byte[] data) throws InvalidProtocolBufferException {
/*  2297 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static FileDescriptorProto parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*  2303 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static FileDescriptorProto parseFrom(InputStream input) throws IOException {
/*  2307 */       return 
/*  2308 */         GeneratedMessageV3.<FileDescriptorProto>parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static FileDescriptorProto parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*  2314 */       return 
/*  2315 */         GeneratedMessageV3.<FileDescriptorProto>parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static FileDescriptorProto parseDelimitedFrom(InputStream input) throws IOException {
/*  2319 */       return 
/*  2320 */         GeneratedMessageV3.<FileDescriptorProto>parseDelimitedWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static FileDescriptorProto parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*  2326 */       return 
/*  2327 */         GeneratedMessageV3.<FileDescriptorProto>parseDelimitedWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static FileDescriptorProto parseFrom(CodedInputStream input) throws IOException {
/*  2332 */       return 
/*  2333 */         GeneratedMessageV3.<FileDescriptorProto>parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static FileDescriptorProto parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*  2339 */       return 
/*  2340 */         GeneratedMessageV3.<FileDescriptorProto>parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public Builder newBuilderForType() {
/*  2344 */       return newBuilder();
/*       */     } public static Builder newBuilder() {
/*  2346 */       return DEFAULT_INSTANCE.toBuilder();
/*       */     }
/*       */     public static Builder newBuilder(FileDescriptorProto prototype) {
/*  2349 */       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
/*       */     }
/*       */     
/*       */     public Builder toBuilder() {
/*  2353 */       return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder())
/*  2354 */         .mergeFrom(this);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     protected Builder newBuilderForType(BuilderParent parent) {
/*  2360 */       Builder builder = new Builder(parent);
/*  2361 */       return builder;
/*       */     }
/*       */     public static final class Builder extends GeneratedMessageV3.Builder<Builder> implements FileDescriptorProtoOrBuilder { private int bitField0_; private Object name_; private Object package_; private LazyStringList dependency_; private Internal.IntList publicDependency_; private Internal.IntList weakDependency_; private List<DescriptorProto> messageType_; private RepeatedFieldBuilderV3<DescriptorProto, DescriptorProto.Builder, DescriptorProtoOrBuilder> messageTypeBuilder_; private List<EnumDescriptorProto> enumType_;
/*       */       private RepeatedFieldBuilderV3<EnumDescriptorProto, EnumDescriptorProto.Builder, EnumDescriptorProtoOrBuilder> enumTypeBuilder_;
/*       */       private List<ServiceDescriptorProto> service_;
/*       */       private RepeatedFieldBuilderV3<ServiceDescriptorProto, ServiceDescriptorProto.Builder, ServiceDescriptorProtoOrBuilder> serviceBuilder_;
/*       */       private List<FieldDescriptorProto> extension_;
/*       */       private RepeatedFieldBuilderV3<FieldDescriptorProto, FieldDescriptorProto.Builder, FieldDescriptorProtoOrBuilder> extensionBuilder_;
/*       */       private FileOptions options_;
/*       */       private SingleFieldBuilderV3<FileOptions, FileOptions.Builder, FileOptionsOrBuilder> optionsBuilder_;
/*       */       private SourceCodeInfo sourceCodeInfo_;
/*       */       private SingleFieldBuilderV3<SourceCodeInfo, SourceCodeInfo.Builder, SourceCodeInfoOrBuilder> sourceCodeInfoBuilder_;
/*       */       private Object syntax_;
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/*  2376 */         return DescriptorProtos.internal_static_google_protobuf_FileDescriptorProto_descriptor;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       protected FieldAccessorTable internalGetFieldAccessorTable() {
/*  2382 */         return DescriptorProtos.internal_static_google_protobuf_FileDescriptorProto_fieldAccessorTable
/*  2383 */           .ensureFieldAccessorsInitialized((Class) FileDescriptorProto.class, (Class)Builder.class);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private Builder()
/*       */       {
/*  2825 */         this.name_ = "";
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/*  2933 */         this.package_ = "";
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/*  3041 */         this.dependency_ = LazyStringArrayList.EMPTY;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/*  3186 */         this.publicDependency_ = GeneratedMessageV3.emptyIntList();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/*  3293 */         this.weakDependency_ = GeneratedMessageV3.emptyIntList();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/*  3407 */         this
/*  3408 */           .messageType_ = Collections.emptyList();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/*  3719 */         this
/*  3720 */           .enumType_ = Collections.emptyList();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/*  3959 */         this
/*  3960 */           .service_ = Collections.emptyList();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/*  4199 */         this
/*  4200 */           .extension_ = Collections.emptyList();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/*  4742 */         this.syntax_ = ""; maybeForceBuilderInitialization(); } private Builder(BuilderParent parent) { super(parent); this.name_ = ""; this.package_ = ""; this.dependency_ = LazyStringArrayList.EMPTY; this.publicDependency_ = GeneratedMessageV3.emptyIntList(); this.weakDependency_ = GeneratedMessageV3.emptyIntList(); this.messageType_ = Collections.emptyList(); this.enumType_ = Collections.emptyList(); this.service_ = Collections.emptyList(); this.extension_ = Collections.emptyList(); this.syntax_ = ""; maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (GeneratedMessageV3.alwaysUseFieldBuilders) { getMessageTypeFieldBuilder(); getEnumTypeFieldBuilder(); getServiceFieldBuilder(); getExtensionFieldBuilder(); getOptionsFieldBuilder(); getSourceCodeInfoFieldBuilder(); }  } public Builder clear() { super.clear(); this.name_ = ""; this.bitField0_ &= 0xFFFFFFFE; this.package_ = ""; this.bitField0_ &= 0xFFFFFFFD; this.dependency_ = LazyStringArrayList.EMPTY; this.bitField0_ &= 0xFFFFFFFB; this.publicDependency_ = GeneratedMessageV3.emptyIntList(); this.bitField0_ &= 0xFFFFFFF7; this.weakDependency_ = GeneratedMessageV3.emptyIntList(); this.bitField0_ &= 0xFFFFFFEF; if (this.messageTypeBuilder_ == null) { this.messageType_ = Collections.emptyList(); this.bitField0_ &= 0xFFFFFFDF; } else { this.messageTypeBuilder_.clear(); }  if (this.enumTypeBuilder_ == null) { this.enumType_ = Collections.emptyList(); this.bitField0_ &= 0xFFFFFFBF; } else { this.enumTypeBuilder_.clear(); }  if (this.serviceBuilder_ == null) { this.service_ = Collections.emptyList(); this.bitField0_ &= 0xFFFFFF7F; } else { this.serviceBuilder_.clear(); }  if (this.extensionBuilder_ == null) { this.extension_ = Collections.emptyList(); this.bitField0_ &= 0xFFFFFEFF; } else { this.extensionBuilder_.clear(); }  if (this.optionsBuilder_ == null) { this.options_ = null; } else { this.optionsBuilder_.clear(); }  this.bitField0_ &= 0xFFFFFDFF; if (this.sourceCodeInfoBuilder_ == null) { this.sourceCodeInfo_ = null; } else { this.sourceCodeInfoBuilder_.clear(); }  this.bitField0_ &= 0xFFFFFBFF; this.syntax_ = ""; this.bitField0_ &= 0xFFFFF7FF; return this; } public Descriptors.Descriptor getDescriptorForType() { return DescriptorProtos.internal_static_google_protobuf_FileDescriptorProto_descriptor; } public FileDescriptorProto getDefaultInstanceForType() { return FileDescriptorProto.getDefaultInstance(); } public FileDescriptorProto build() { FileDescriptorProto result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public FileDescriptorProto buildPartial() { FileDescriptorProto result = new FileDescriptorProto(this); int from_bitField0_ = this.bitField0_; int to_bitField0_ = 0; if ((from_bitField0_ & 0x1) != 0) to_bitField0_ |= 0x1;  result.name_ = this.name_; if ((from_bitField0_ & 0x2) != 0) to_bitField0_ |= 0x2;  result.package_ = this.package_; if ((this.bitField0_ & 0x4) != 0) { this.dependency_ = this.dependency_.getUnmodifiableView(); this.bitField0_ &= 0xFFFFFFFB; }  result.dependency_ = this.dependency_; if ((this.bitField0_ & 0x8) != 0) { this.publicDependency_.makeImmutable(); this.bitField0_ &= 0xFFFFFFF7; }  result.publicDependency_ = this.publicDependency_; if ((this.bitField0_ & 0x10) != 0) { this.weakDependency_.makeImmutable(); this.bitField0_ &= 0xFFFFFFEF; }  result.weakDependency_ = this.weakDependency_; if (this.messageTypeBuilder_ == null) { if ((this.bitField0_ & 0x20) != 0) { this.messageType_ = Collections.unmodifiableList(this.messageType_); this.bitField0_ &= 0xFFFFFFDF; }  result.messageType_ = this.messageType_; } else { result.messageType_ = this.messageTypeBuilder_.build(); }  if (this.enumTypeBuilder_ == null) { if ((this.bitField0_ & 0x40) != 0) { this.enumType_ = Collections.unmodifiableList(this.enumType_); this.bitField0_ &= 0xFFFFFFBF; }  result.enumType_ = this.enumType_; } else { result.enumType_ = this.enumTypeBuilder_.build(); }  if (this.serviceBuilder_ == null) { if ((this.bitField0_ & 0x80) != 0) { this.service_ = Collections.unmodifiableList(this.service_); this.bitField0_ &= 0xFFFFFF7F; }  result.service_ = this.service_; } else { result.service_ = this.serviceBuilder_.build(); }  if (this.extensionBuilder_ == null) { if ((this.bitField0_ & 0x100) != 0) { this.extension_ = Collections.unmodifiableList(this.extension_); this.bitField0_ &= 0xFFFFFEFF; }  result.extension_ = this.extension_; } else { result.extension_ = this.extensionBuilder_.build(); }  if ((from_bitField0_ & 0x200) != 0) { if (this.optionsBuilder_ == null) { result.options_ = this.options_; } else { result.options_ = this.optionsBuilder_.build(); }  to_bitField0_ |= 0x4; }  if ((from_bitField0_ & 0x400) != 0) { if (this.sourceCodeInfoBuilder_ == null) { result.sourceCodeInfo_ = this.sourceCodeInfo_; } else { result.sourceCodeInfo_ = this.sourceCodeInfoBuilder_.build(); }  to_bitField0_ |= 0x8; }  if ((from_bitField0_ & 0x800) != 0) to_bitField0_ |= 0x10;  result.syntax_ = this.syntax_; result.bitField0_ = to_bitField0_; onBuilt(); return result; } public Builder clone() { return super.clone(); } public Builder setField(Descriptors.FieldDescriptor field, Object value) { return super.setField(field, value); } public Builder clearField(Descriptors.FieldDescriptor field) { return super.clearField(field); } public Builder clearOneof(Descriptors.OneofDescriptor oneof) { return super.clearOneof(oneof); } public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) { return super.setRepeatedField(field, index, value); } public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) { return super.addRepeatedField(field, value); } public Builder mergeFrom(Message other) { if (other instanceof FileDescriptorProto) return mergeFrom((FileDescriptorProto)other);  super.mergeFrom(other); return this; } public Builder mergeFrom(FileDescriptorProto other) { if (other == FileDescriptorProto.getDefaultInstance()) return this;  if (other.hasName()) { this.bitField0_ |= 0x1; this.name_ = other.name_; onChanged(); }  if (other.hasPackage()) { this.bitField0_ |= 0x2; this.package_ = other.package_; onChanged(); }  if (!other.dependency_.isEmpty()) { if (this.dependency_.isEmpty()) { this.dependency_ = other.dependency_; this.bitField0_ &= 0xFFFFFFFB; } else { ensureDependencyIsMutable(); this.dependency_.addAll(other.dependency_); }  onChanged(); }  if (!other.publicDependency_.isEmpty()) { if (this.publicDependency_.isEmpty()) { this.publicDependency_ = other.publicDependency_; this.bitField0_ &= 0xFFFFFFF7; } else { ensurePublicDependencyIsMutable(); this.publicDependency_.addAll(other.publicDependency_); }  onChanged(); }  if (!other.weakDependency_.isEmpty()) { if (this.weakDependency_.isEmpty()) { this.weakDependency_ = other.weakDependency_; this.bitField0_ &= 0xFFFFFFEF; } else { ensureWeakDependencyIsMutable(); this.weakDependency_.addAll(other.weakDependency_); }  onChanged(); }  if (this.messageTypeBuilder_ == null) { if (!other.messageType_.isEmpty()) { if (this.messageType_.isEmpty()) { this.messageType_ = other.messageType_; this.bitField0_ &= 0xFFFFFFDF; } else { ensureMessageTypeIsMutable(); this.messageType_.addAll(other.messageType_); }  onChanged(); }  } else if (!other.messageType_.isEmpty()) { if (this.messageTypeBuilder_.isEmpty()) { this.messageTypeBuilder_.dispose(); this.messageTypeBuilder_ = null; this.messageType_ = other.messageType_; this.bitField0_ &= 0xFFFFFFDF; this.messageTypeBuilder_ = GeneratedMessageV3.alwaysUseFieldBuilders ? getMessageTypeFieldBuilder() : null; } else { this.messageTypeBuilder_.addAllMessages(other.messageType_); }  }  if (this.enumTypeBuilder_ == null) { if (!other.enumType_.isEmpty()) { if (this.enumType_.isEmpty()) { this.enumType_ = other.enumType_; this.bitField0_ &= 0xFFFFFFBF; } else { ensureEnumTypeIsMutable(); this.enumType_.addAll(other.enumType_); }  onChanged(); }  } else if (!other.enumType_.isEmpty()) { if (this.enumTypeBuilder_.isEmpty()) { this.enumTypeBuilder_.dispose(); this.enumTypeBuilder_ = null; this.enumType_ = other.enumType_; this.bitField0_ &= 0xFFFFFFBF; this.enumTypeBuilder_ = GeneratedMessageV3.alwaysUseFieldBuilders ? getEnumTypeFieldBuilder() : null; } else { this.enumTypeBuilder_.addAllMessages(other.enumType_); }  }  if (this.serviceBuilder_ == null) { if (!other.service_.isEmpty()) { if (this.service_.isEmpty()) { this.service_ = other.service_; this.bitField0_ &= 0xFFFFFF7F; } else { ensureServiceIsMutable(); this.service_.addAll(other.service_); }  onChanged(); }  } else if (!other.service_.isEmpty()) { if (this.serviceBuilder_.isEmpty()) { this.serviceBuilder_.dispose(); this.serviceBuilder_ = null; this.service_ = other.service_; this.bitField0_ &= 0xFFFFFF7F; this.serviceBuilder_ = GeneratedMessageV3.alwaysUseFieldBuilders ? getServiceFieldBuilder() : null; } else { this.serviceBuilder_.addAllMessages(other.service_); }  }  if (this.extensionBuilder_ == null) { if (!other.extension_.isEmpty()) { if (this.extension_.isEmpty()) { this.extension_ = other.extension_; this.bitField0_ &= 0xFFFFFEFF; } else { ensureExtensionIsMutable(); this.extension_.addAll(other.extension_); }  onChanged(); }  } else if (!other.extension_.isEmpty()) { if (this.extensionBuilder_.isEmpty()) { this.extensionBuilder_.dispose(); this.extensionBuilder_ = null; this.extension_ = other.extension_; this.bitField0_ &= 0xFFFFFEFF; this.extensionBuilder_ = GeneratedMessageV3.alwaysUseFieldBuilders ? getExtensionFieldBuilder() : null; } else { this.extensionBuilder_.addAllMessages(other.extension_); }  }  if (other.hasOptions()) mergeOptions(other.getOptions());  if (other.hasSourceCodeInfo()) mergeSourceCodeInfo(other.getSourceCodeInfo());  if (other.hasSyntax()) { this.bitField0_ |= 0x800; this.syntax_ = other.syntax_; onChanged(); }  mergeUnknownFields(other.unknownFields); onChanged(); return this; } public final boolean isInitialized() { int i; for (i = 0; i < getMessageTypeCount(); i++) { if (!getMessageType(i).isInitialized()) return false;  }  for (i = 0; i < getEnumTypeCount(); i++) { if (!getEnumType(i).isInitialized()) return false;  }  for (i = 0; i < getServiceCount(); i++) { if (!getService(i).isInitialized()) return false;  }  for (i = 0; i < getExtensionCount(); i++) { if (!getExtension(i).isInitialized()) return false;  }  if (hasOptions() && !getOptions().isInitialized()) return false;  return true; } public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { FileDescriptorProto parsedMessage = null; try { parsedMessage = FileDescriptorProto.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (FileDescriptorProto)e.getUnfinishedMessage(); throw e.unwrapIOException(); } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; } public boolean hasName() { return ((this.bitField0_ & 0x1) != 0); } public String getName() { Object ref = this.name_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.name_ = s;  return s; }  return (String)ref; } public ByteString getNameBytes() { Object ref = this.name_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.name_ = b; return b; }  return (ByteString)ref; } public Builder setName(String value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x1; this.name_ = value; onChanged(); return this; } public Builder clearName() { this.bitField0_ &= 0xFFFFFFFE; this.name_ = FileDescriptorProto.getDefaultInstance().getName(); onChanged(); return this; } public Builder setNameBytes(ByteString value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x1; this.name_ = value; onChanged(); return this; } public boolean hasPackage() { return ((this.bitField0_ & 0x2) != 0); } public String getPackage() { Object ref = this.package_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.package_ = s;  return s; }  return (String)ref; } public ByteString getPackageBytes() { Object ref = this.package_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.package_ = b; return b; }  return (ByteString)ref; } public Builder setPackage(String value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x2; this.package_ = value; onChanged(); return this; } public Builder clearPackage() { this.bitField0_ &= 0xFFFFFFFD; this.package_ = FileDescriptorProto.getDefaultInstance().getPackage(); onChanged(); return this; } public Builder setPackageBytes(ByteString value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x2; this.package_ = value; onChanged(); return this; } private void ensureDependencyIsMutable() { if ((this.bitField0_ & 0x4) == 0) { this.dependency_ = new LazyStringArrayList(this.dependency_); this.bitField0_ |= 0x4; }  } public ProtocolStringList getDependencyList() { return this.dependency_.getUnmodifiableView(); } public int getDependencyCount() { return this.dependency_.size(); } public String getDependency(int index) { return this.dependency_.get(index); } public ByteString getDependencyBytes(int index) { return this.dependency_.getByteString(index); } public Builder setDependency(int index, String value) { if (value == null) throw new NullPointerException();  ensureDependencyIsMutable(); this.dependency_.set(index, value); onChanged(); return this; } public Builder addDependency(String value) { if (value == null) throw new NullPointerException();  ensureDependencyIsMutable(); this.dependency_.add(value); onChanged(); return this; } public Builder addAllDependency(Iterable<String> values) { ensureDependencyIsMutable(); AbstractMessageLite.Builder.addAll(values, this.dependency_); onChanged(); return this; } public Builder clearDependency() { this.dependency_ = LazyStringArrayList.EMPTY; this.bitField0_ &= 0xFFFFFFFB; onChanged(); return this; } public Builder addDependencyBytes(ByteString value) { if (value == null) throw new NullPointerException();  ensureDependencyIsMutable(); this.dependency_.add(value); onChanged(); return this; } private void ensurePublicDependencyIsMutable() { if ((this.bitField0_ & 0x8) == 0) { this.publicDependency_ = GeneratedMessageV3.mutableCopy(this.publicDependency_); this.bitField0_ |= 0x8; }  } public List<Integer> getPublicDependencyList() { return ((this.bitField0_ & 0x8) != 0) ? Collections.<Integer>unmodifiableList(this.publicDependency_) : this.publicDependency_; } public int getPublicDependencyCount() { return this.publicDependency_.size(); } public int getPublicDependency(int index) { return this.publicDependency_.getInt(index); } public Builder setPublicDependency(int index, int value) { ensurePublicDependencyIsMutable(); this.publicDependency_.setInt(index, value); onChanged(); return this; } public Builder addPublicDependency(int value) { ensurePublicDependencyIsMutable(); this.publicDependency_.addInt(value); onChanged(); return this; } public Builder addAllPublicDependency(Iterable<? extends Integer> values) { ensurePublicDependencyIsMutable(); AbstractMessageLite.Builder.addAll(values, this.publicDependency_); onChanged(); return this; } public Builder clearPublicDependency() { this.publicDependency_ = GeneratedMessageV3.emptyIntList(); this.bitField0_ &= 0xFFFFFFF7; onChanged(); return this; } private void ensureWeakDependencyIsMutable() { if ((this.bitField0_ & 0x10) == 0) { this.weakDependency_ = GeneratedMessageV3.mutableCopy(this.weakDependency_); this.bitField0_ |= 0x10; }  } public List<Integer> getWeakDependencyList() { return ((this.bitField0_ & 0x10) != 0) ? Collections.<Integer>unmodifiableList(this.weakDependency_) : this.weakDependency_; } public int getWeakDependencyCount() { return this.weakDependency_.size(); } public int getWeakDependency(int index) { return this.weakDependency_.getInt(index); } public Builder setWeakDependency(int index, int value) { ensureWeakDependencyIsMutable(); this.weakDependency_.setInt(index, value); onChanged(); return this; } public Builder addWeakDependency(int value) { ensureWeakDependencyIsMutable(); this.weakDependency_.addInt(value); onChanged(); return this; } public Builder addAllWeakDependency(Iterable<? extends Integer> values) { ensureWeakDependencyIsMutable(); AbstractMessageLite.Builder.addAll(values, this.weakDependency_); onChanged(); return this; } public Builder clearWeakDependency() { this.weakDependency_ = GeneratedMessageV3.emptyIntList(); this.bitField0_ &= 0xFFFFFFEF; onChanged(); return this; } private void ensureMessageTypeIsMutable() { if ((this.bitField0_ & 0x20) == 0) { this.messageType_ = new ArrayList<>(this.messageType_); this.bitField0_ |= 0x20; }  } public List<DescriptorProto> getMessageTypeList() { if (this.messageTypeBuilder_ == null) return Collections.unmodifiableList(this.messageType_);  return this.messageTypeBuilder_.getMessageList(); } public int getMessageTypeCount() { if (this.messageTypeBuilder_ == null) return this.messageType_.size();  return this.messageTypeBuilder_.getCount(); } public DescriptorProto getMessageType(int index) { if (this.messageTypeBuilder_ == null) return this.messageType_.get(index);  return this.messageTypeBuilder_.getMessage(index); } public Builder setMessageType(int index, DescriptorProto value) { if (this.messageTypeBuilder_ == null) { if (value == null) throw new NullPointerException();  ensureMessageTypeIsMutable(); this.messageType_.set(index, value); onChanged(); } else { this.messageTypeBuilder_.setMessage(index, value); }  return this; } public Builder setMessageType(int index, DescriptorProto.Builder builderForValue) { if (this.messageTypeBuilder_ == null) { ensureMessageTypeIsMutable(); this.messageType_.set(index, builderForValue.build()); onChanged(); } else { this.messageTypeBuilder_.setMessage(index, builderForValue.build()); }  return this; } public Builder addMessageType(DescriptorProto value) { if (this.messageTypeBuilder_ == null) { if (value == null) throw new NullPointerException();  ensureMessageTypeIsMutable(); this.messageType_.add(value); onChanged(); } else { this.messageTypeBuilder_.addMessage(value); }  return this; } public Builder addMessageType(int index, DescriptorProto value) { if (this.messageTypeBuilder_ == null) { if (value == null) throw new NullPointerException();  ensureMessageTypeIsMutable(); this.messageType_.add(index, value); onChanged(); } else { this.messageTypeBuilder_.addMessage(index, value); }  return this; } public Builder addMessageType(DescriptorProto.Builder builderForValue) { if (this.messageTypeBuilder_ == null) { ensureMessageTypeIsMutable(); this.messageType_.add(builderForValue.build()); onChanged(); } else { this.messageTypeBuilder_.addMessage(builderForValue.build()); }  return this; } public Builder addMessageType(int index, DescriptorProto.Builder builderForValue) { if (this.messageTypeBuilder_ == null) { ensureMessageTypeIsMutable(); this.messageType_.add(index, builderForValue.build()); onChanged(); } else { this.messageTypeBuilder_.addMessage(index, builderForValue.build()); }  return this; } public Builder addAllMessageType(Iterable<? extends DescriptorProto> values) { if (this.messageTypeBuilder_ == null) { ensureMessageTypeIsMutable(); AbstractMessageLite.Builder.addAll(values, this.messageType_); onChanged(); } else { this.messageTypeBuilder_.addAllMessages(values); }  return this; } public Builder clearMessageType() { if (this.messageTypeBuilder_ == null) { this.messageType_ = Collections.emptyList(); this.bitField0_ &= 0xFFFFFFDF; onChanged(); } else { this.messageTypeBuilder_.clear(); }  return this; }
/*       */       public Builder removeMessageType(int index) { if (this.messageTypeBuilder_ == null) { ensureMessageTypeIsMutable(); this.messageType_.remove(index); onChanged(); } else { this.messageTypeBuilder_.remove(index); }  return this; }
/*       */       public DescriptorProto.Builder getMessageTypeBuilder(int index) { return getMessageTypeFieldBuilder().getBuilder(index); }
/*       */       public DescriptorProtoOrBuilder getMessageTypeOrBuilder(int index) { if (this.messageTypeBuilder_ == null) return this.messageType_.get(index);  return this.messageTypeBuilder_.getMessageOrBuilder(index); }
/*       */       public List<? extends DescriptorProtoOrBuilder> getMessageTypeOrBuilderList() { if (this.messageTypeBuilder_ != null) return this.messageTypeBuilder_.getMessageOrBuilderList();  return Collections.unmodifiableList((List)this.messageType_); }
/*       */       public DescriptorProto.Builder addMessageTypeBuilder() { return getMessageTypeFieldBuilder().addBuilder(DescriptorProto.getDefaultInstance()); }
/*       */       public DescriptorProto.Builder addMessageTypeBuilder(int index) { return getMessageTypeFieldBuilder().addBuilder(index, DescriptorProto.getDefaultInstance()); }
/*       */       public List<DescriptorProto.Builder> getMessageTypeBuilderList() { return getMessageTypeFieldBuilder().getBuilderList(); }
/*       */       private RepeatedFieldBuilderV3<DescriptorProto, DescriptorProto.Builder, DescriptorProtoOrBuilder> getMessageTypeFieldBuilder() { if (this.messageTypeBuilder_ == null) { this.messageTypeBuilder_ = new RepeatedFieldBuilderV3<>(this.messageType_, ((this.bitField0_ & 0x20) != 0), getParentForChildren(), isClean()); this.messageType_ = null; }  return this.messageTypeBuilder_; }
/*       */       private void ensureEnumTypeIsMutable() { if ((this.bitField0_ & 0x40) == 0) { this.enumType_ = new ArrayList<>(this.enumType_); this.bitField0_ |= 0x40; }  }
/*       */       public List<EnumDescriptorProto> getEnumTypeList() { if (this.enumTypeBuilder_ == null) return Collections.unmodifiableList(this.enumType_);  return this.enumTypeBuilder_.getMessageList(); }
/*  4753 */       public boolean hasSyntax() { return ((this.bitField0_ & 0x800) != 0); } public int getEnumTypeCount() { if (this.enumTypeBuilder_ == null) return this.enumType_.size();  return this.enumTypeBuilder_.getCount(); } public EnumDescriptorProto getEnumType(int index) { if (this.enumTypeBuilder_ == null) return this.enumType_.get(index);  return this.enumTypeBuilder_.getMessage(index); } public Builder setEnumType(int index, EnumDescriptorProto value) { if (this.enumTypeBuilder_ == null) { if (value == null) throw new NullPointerException();  ensureEnumTypeIsMutable(); this.enumType_.set(index, value); onChanged(); } else { this.enumTypeBuilder_.setMessage(index, value); }  return this; } public Builder setEnumType(int index, EnumDescriptorProto.Builder builderForValue) { if (this.enumTypeBuilder_ == null) { ensureEnumTypeIsMutable(); this.enumType_.set(index, builderForValue.build()); onChanged(); } else { this.enumTypeBuilder_.setMessage(index, builderForValue.build()); }  return this; } public Builder addEnumType(EnumDescriptorProto value) { if (this.enumTypeBuilder_ == null) { if (value == null) throw new NullPointerException();  ensureEnumTypeIsMutable(); this.enumType_.add(value); onChanged(); } else { this.enumTypeBuilder_.addMessage(value); }  return this; } public Builder addEnumType(int index, EnumDescriptorProto value) { if (this.enumTypeBuilder_ == null) { if (value == null) throw new NullPointerException();  ensureEnumTypeIsMutable(); this.enumType_.add(index, value); onChanged(); } else { this.enumTypeBuilder_.addMessage(index, value); }  return this; } public Builder addEnumType(EnumDescriptorProto.Builder builderForValue) { if (this.enumTypeBuilder_ == null) { ensureEnumTypeIsMutable(); this.enumType_.add(builderForValue.build()); onChanged(); } else { this.enumTypeBuilder_.addMessage(builderForValue.build()); }  return this; } public Builder addEnumType(int index, EnumDescriptorProto.Builder builderForValue) { if (this.enumTypeBuilder_ == null) { ensureEnumTypeIsMutable(); this.enumType_.add(index, builderForValue.build()); onChanged(); } else { this.enumTypeBuilder_.addMessage(index, builderForValue.build()); }  return this; } public Builder addAllEnumType(Iterable<? extends EnumDescriptorProto> values) { if (this.enumTypeBuilder_ == null) { ensureEnumTypeIsMutable(); AbstractMessageLite.Builder.addAll(values, this.enumType_); onChanged(); } else { this.enumTypeBuilder_.addAllMessages(values); }  return this; } public Builder clearEnumType() { if (this.enumTypeBuilder_ == null) { this.enumType_ = Collections.emptyList(); this.bitField0_ &= 0xFFFFFFBF; onChanged(); } else { this.enumTypeBuilder_.clear(); }  return this; } public Builder removeEnumType(int index) { if (this.enumTypeBuilder_ == null) { ensureEnumTypeIsMutable(); this.enumType_.remove(index); onChanged(); } else { this.enumTypeBuilder_.remove(index); }  return this; } public EnumDescriptorProto.Builder getEnumTypeBuilder(int index) { return getEnumTypeFieldBuilder().getBuilder(index); } public EnumDescriptorProtoOrBuilder getEnumTypeOrBuilder(int index) { if (this.enumTypeBuilder_ == null) return this.enumType_.get(index);  return this.enumTypeBuilder_.getMessageOrBuilder(index); } public List<? extends EnumDescriptorProtoOrBuilder> getEnumTypeOrBuilderList() { if (this.enumTypeBuilder_ != null) return this.enumTypeBuilder_.getMessageOrBuilderList();  return Collections.unmodifiableList((List)this.enumType_); } public EnumDescriptorProto.Builder addEnumTypeBuilder() { return getEnumTypeFieldBuilder().addBuilder(EnumDescriptorProto.getDefaultInstance()); } public EnumDescriptorProto.Builder addEnumTypeBuilder(int index) { return getEnumTypeFieldBuilder().addBuilder(index, EnumDescriptorProto.getDefaultInstance()); } public List<EnumDescriptorProto.Builder> getEnumTypeBuilderList() { return getEnumTypeFieldBuilder().getBuilderList(); } private RepeatedFieldBuilderV3<EnumDescriptorProto, EnumDescriptorProto.Builder, EnumDescriptorProtoOrBuilder> getEnumTypeFieldBuilder() { if (this.enumTypeBuilder_ == null) { this.enumTypeBuilder_ = new RepeatedFieldBuilderV3<>(this.enumType_, ((this.bitField0_ & 0x40) != 0), getParentForChildren(), isClean()); this.enumType_ = null; }  return this.enumTypeBuilder_; } private void ensureServiceIsMutable() { if ((this.bitField0_ & 0x80) == 0) { this.service_ = new ArrayList<>(this.service_); this.bitField0_ |= 0x80; }  } public List<ServiceDescriptorProto> getServiceList() { if (this.serviceBuilder_ == null) return Collections.unmodifiableList(this.service_);  return this.serviceBuilder_.getMessageList(); } public int getServiceCount() { if (this.serviceBuilder_ == null) return this.service_.size();  return this.serviceBuilder_.getCount(); } public ServiceDescriptorProto getService(int index) { if (this.serviceBuilder_ == null) return this.service_.get(index);  return this.serviceBuilder_.getMessage(index); } public Builder setService(int index, ServiceDescriptorProto value) { if (this.serviceBuilder_ == null) { if (value == null) throw new NullPointerException();  ensureServiceIsMutable(); this.service_.set(index, value); onChanged(); } else { this.serviceBuilder_.setMessage(index, value); }  return this; } public Builder setService(int index, ServiceDescriptorProto.Builder builderForValue) { if (this.serviceBuilder_ == null) { ensureServiceIsMutable(); this.service_.set(index, builderForValue.build()); onChanged(); } else { this.serviceBuilder_.setMessage(index, builderForValue.build()); }  return this; } public Builder addService(ServiceDescriptorProto value) { if (this.serviceBuilder_ == null) { if (value == null) throw new NullPointerException();  ensureServiceIsMutable(); this.service_.add(value); onChanged(); } else { this.serviceBuilder_.addMessage(value); }  return this; } public Builder addService(int index, ServiceDescriptorProto value) { if (this.serviceBuilder_ == null) { if (value == null) throw new NullPointerException();  ensureServiceIsMutable(); this.service_.add(index, value); onChanged(); } else { this.serviceBuilder_.addMessage(index, value); }  return this; } public Builder addService(ServiceDescriptorProto.Builder builderForValue) { if (this.serviceBuilder_ == null) { ensureServiceIsMutable(); this.service_.add(builderForValue.build()); onChanged(); } else { this.serviceBuilder_.addMessage(builderForValue.build()); }  return this; } public Builder addService(int index, ServiceDescriptorProto.Builder builderForValue) { if (this.serviceBuilder_ == null) { ensureServiceIsMutable(); this.service_.add(index, builderForValue.build()); onChanged(); } else { this.serviceBuilder_.addMessage(index, builderForValue.build()); }  return this; } public Builder addAllService(Iterable<? extends ServiceDescriptorProto> values) { if (this.serviceBuilder_ == null) { ensureServiceIsMutable(); AbstractMessageLite.Builder.addAll(values, this.service_); onChanged(); } else { this.serviceBuilder_.addAllMessages(values); }  return this; } public Builder clearService() { if (this.serviceBuilder_ == null) { this.service_ = Collections.emptyList(); this.bitField0_ &= 0xFFFFFF7F; onChanged(); } else { this.serviceBuilder_.clear(); }  return this; } public Builder removeService(int index) { if (this.serviceBuilder_ == null) { ensureServiceIsMutable(); this.service_.remove(index); onChanged(); } else { this.serviceBuilder_.remove(index); }  return this; } public ServiceDescriptorProto.Builder getServiceBuilder(int index) { return getServiceFieldBuilder().getBuilder(index); } public ServiceDescriptorProtoOrBuilder getServiceOrBuilder(int index) { if (this.serviceBuilder_ == null) return this.service_.get(index);  return this.serviceBuilder_.getMessageOrBuilder(index); } public List<? extends ServiceDescriptorProtoOrBuilder> getServiceOrBuilderList() { if (this.serviceBuilder_ != null) return this.serviceBuilder_.getMessageOrBuilderList();  return Collections.unmodifiableList((List)this.service_); } public ServiceDescriptorProto.Builder addServiceBuilder() { return getServiceFieldBuilder().addBuilder(ServiceDescriptorProto.getDefaultInstance()); } public ServiceDescriptorProto.Builder addServiceBuilder(int index) { return getServiceFieldBuilder().addBuilder(index, ServiceDescriptorProto.getDefaultInstance()); } public List<ServiceDescriptorProto.Builder> getServiceBuilderList() { return getServiceFieldBuilder().getBuilderList(); } private RepeatedFieldBuilderV3<ServiceDescriptorProto, ServiceDescriptorProto.Builder, ServiceDescriptorProtoOrBuilder> getServiceFieldBuilder() { if (this.serviceBuilder_ == null) { this.serviceBuilder_ = new RepeatedFieldBuilderV3<>(this.service_, ((this.bitField0_ & 0x80) != 0), getParentForChildren(), isClean()); this.service_ = null; }  return this.serviceBuilder_; } private void ensureExtensionIsMutable() { if ((this.bitField0_ & 0x100) == 0) { this.extension_ = new ArrayList<>(this.extension_); this.bitField0_ |= 0x100; }  } public List<FieldDescriptorProto> getExtensionList() { if (this.extensionBuilder_ == null) return Collections.unmodifiableList(this.extension_);  return this.extensionBuilder_.getMessageList(); } public int getExtensionCount() { if (this.extensionBuilder_ == null) return this.extension_.size();  return this.extensionBuilder_.getCount(); } public FieldDescriptorProto getExtension(int index) { if (this.extensionBuilder_ == null) return this.extension_.get(index);  return this.extensionBuilder_.getMessage(index); } public Builder setExtension(int index, FieldDescriptorProto value) { if (this.extensionBuilder_ == null) { if (value == null) throw new NullPointerException();  ensureExtensionIsMutable(); this.extension_.set(index, value); onChanged(); } else { this.extensionBuilder_.setMessage(index, value); }  return this; } public Builder setExtension(int index, FieldDescriptorProto.Builder builderForValue) { if (this.extensionBuilder_ == null) { ensureExtensionIsMutable(); this.extension_.set(index, builderForValue.build()); onChanged(); } else { this.extensionBuilder_.setMessage(index, builderForValue.build()); }  return this; } public Builder addExtension(FieldDescriptorProto value) { if (this.extensionBuilder_ == null) { if (value == null) throw new NullPointerException();  ensureExtensionIsMutable(); this.extension_.add(value); onChanged(); } else { this.extensionBuilder_.addMessage(value); }  return this; } public Builder addExtension(int index, FieldDescriptorProto value) { if (this.extensionBuilder_ == null) { if (value == null) throw new NullPointerException();  ensureExtensionIsMutable(); this.extension_.add(index, value); onChanged(); } else { this.extensionBuilder_.addMessage(index, value); }  return this; } public Builder addExtension(FieldDescriptorProto.Builder builderForValue) { if (this.extensionBuilder_ == null) { ensureExtensionIsMutable(); this.extension_.add(builderForValue.build()); onChanged(); } else { this.extensionBuilder_.addMessage(builderForValue.build()); }  return this; } public Builder addExtension(int index, FieldDescriptorProto.Builder builderForValue) { if (this.extensionBuilder_ == null) { ensureExtensionIsMutable(); this.extension_.add(index, builderForValue.build()); onChanged(); } else { this.extensionBuilder_.addMessage(index, builderForValue.build()); }  return this; } public Builder addAllExtension(Iterable<? extends FieldDescriptorProto> values) { if (this.extensionBuilder_ == null) { ensureExtensionIsMutable(); AbstractMessageLite.Builder.addAll(values, this.extension_); onChanged(); } else { this.extensionBuilder_.addAllMessages(values); }  return this; } public Builder clearExtension() { if (this.extensionBuilder_ == null) { this.extension_ = Collections.emptyList(); this.bitField0_ &= 0xFFFFFEFF; onChanged(); } else { this.extensionBuilder_.clear(); }  return this; } public Builder removeExtension(int index) { if (this.extensionBuilder_ == null) { ensureExtensionIsMutable(); this.extension_.remove(index); onChanged(); } else { this.extensionBuilder_.remove(index); }  return this; } public FieldDescriptorProto.Builder getExtensionBuilder(int index) { return getExtensionFieldBuilder().getBuilder(index); } public FieldDescriptorProtoOrBuilder getExtensionOrBuilder(int index) { if (this.extensionBuilder_ == null) return this.extension_.get(index);  return this.extensionBuilder_.getMessageOrBuilder(index); } public List<? extends FieldDescriptorProtoOrBuilder> getExtensionOrBuilderList() { if (this.extensionBuilder_ != null) return this.extensionBuilder_.getMessageOrBuilderList();  return Collections.unmodifiableList((List)this.extension_); } public FieldDescriptorProto.Builder addExtensionBuilder() { return getExtensionFieldBuilder().addBuilder(FieldDescriptorProto.getDefaultInstance()); } public FieldDescriptorProto.Builder addExtensionBuilder(int index) { return getExtensionFieldBuilder().addBuilder(index, FieldDescriptorProto.getDefaultInstance()); } public List<FieldDescriptorProto.Builder> getExtensionBuilderList() { return getExtensionFieldBuilder().getBuilderList(); } private RepeatedFieldBuilderV3<FieldDescriptorProto, FieldDescriptorProto.Builder, FieldDescriptorProtoOrBuilder> getExtensionFieldBuilder() { if (this.extensionBuilder_ == null) { this.extensionBuilder_ = new RepeatedFieldBuilderV3<>(this.extension_, ((this.bitField0_ & 0x100) != 0), getParentForChildren(), isClean()); this.extension_ = null; }  return this.extensionBuilder_; } public boolean hasOptions() { return ((this.bitField0_ & 0x200) != 0); } public FileOptions getOptions() { if (this.optionsBuilder_ == null) return (this.options_ == null) ? FileOptions.getDefaultInstance() : this.options_;  return this.optionsBuilder_.getMessage(); } public Builder setOptions(FileOptions value) { if (this.optionsBuilder_ == null) { if (value == null) throw new NullPointerException();  this.options_ = value; onChanged(); } else { this.optionsBuilder_.setMessage(value); }  this.bitField0_ |= 0x200; return this; } public Builder setOptions(FileOptions.Builder builderForValue) { if (this.optionsBuilder_ == null) { this.options_ = builderForValue.build(); onChanged(); } else { this.optionsBuilder_.setMessage(builderForValue.build()); }  this.bitField0_ |= 0x200; return this; } public Builder mergeOptions(FileOptions value) { if (this.optionsBuilder_ == null) { if ((this.bitField0_ & 0x200) != 0 && this.options_ != null && this.options_ != FileOptions.getDefaultInstance()) { this.options_ = FileOptions.newBuilder(this.options_).mergeFrom(value).buildPartial(); } else { this.options_ = value; }  onChanged(); } else { this.optionsBuilder_.mergeFrom(value); }  this.bitField0_ |= 0x200; return this; } public Builder clearOptions() { if (this.optionsBuilder_ == null) { this.options_ = null; onChanged(); } else { this.optionsBuilder_.clear(); }  this.bitField0_ &= 0xFFFFFDFF; return this; } public FileOptions.Builder getOptionsBuilder() { this.bitField0_ |= 0x200; onChanged(); return getOptionsFieldBuilder().getBuilder(); }
/*       */       public FileOptionsOrBuilder getOptionsOrBuilder() { if (this.optionsBuilder_ != null) return this.optionsBuilder_.getMessageOrBuilder();  return (this.options_ == null) ? FileOptions.getDefaultInstance() : this.options_; }
/*       */       private SingleFieldBuilderV3<FileOptions, FileOptions.Builder, FileOptionsOrBuilder> getOptionsFieldBuilder() { if (this.optionsBuilder_ == null) { this.optionsBuilder_ = new SingleFieldBuilderV3<>(getOptions(), getParentForChildren(), isClean()); this.options_ = null; }  return this.optionsBuilder_; }
/*       */       public boolean hasSourceCodeInfo() { return ((this.bitField0_ & 0x400) != 0); }
/*       */       public SourceCodeInfo getSourceCodeInfo() { if (this.sourceCodeInfoBuilder_ == null) return (this.sourceCodeInfo_ == null) ? SourceCodeInfo.getDefaultInstance() : this.sourceCodeInfo_;  return this.sourceCodeInfoBuilder_.getMessage(); }
/*       */       public Builder setSourceCodeInfo(SourceCodeInfo value) { if (this.sourceCodeInfoBuilder_ == null) { if (value == null) throw new NullPointerException();  this.sourceCodeInfo_ = value; onChanged(); } else { this.sourceCodeInfoBuilder_.setMessage(value); }  this.bitField0_ |= 0x400; return this; }
/*       */       public Builder setSourceCodeInfo(SourceCodeInfo.Builder builderForValue) { if (this.sourceCodeInfoBuilder_ == null) { this.sourceCodeInfo_ = builderForValue.build(); onChanged(); } else { this.sourceCodeInfoBuilder_.setMessage(builderForValue.build()); }  this.bitField0_ |= 0x400; return this; }
/*       */       public Builder mergeSourceCodeInfo(SourceCodeInfo value) { if (this.sourceCodeInfoBuilder_ == null) { if ((this.bitField0_ & 0x400) != 0 && this.sourceCodeInfo_ != null && this.sourceCodeInfo_ != SourceCodeInfo.getDefaultInstance()) { this.sourceCodeInfo_ = SourceCodeInfo.newBuilder(this.sourceCodeInfo_).mergeFrom(value).buildPartial(); } else { this.sourceCodeInfo_ = value; }  onChanged(); } else { this.sourceCodeInfoBuilder_.mergeFrom(value); }  this.bitField0_ |= 0x400; return this; }
/*       */       public Builder clearSourceCodeInfo() { if (this.sourceCodeInfoBuilder_ == null) { this.sourceCodeInfo_ = null; onChanged(); } else { this.sourceCodeInfoBuilder_.clear(); }  this.bitField0_ &= 0xFFFFFBFF; return this; }
/*       */       public SourceCodeInfo.Builder getSourceCodeInfoBuilder() { this.bitField0_ |= 0x400; onChanged(); return getSourceCodeInfoFieldBuilder().getBuilder(); }
/*       */       public SourceCodeInfoOrBuilder getSourceCodeInfoOrBuilder() { if (this.sourceCodeInfoBuilder_ != null) return this.sourceCodeInfoBuilder_.getMessageOrBuilder();  return (this.sourceCodeInfo_ == null) ? SourceCodeInfo.getDefaultInstance() : this.sourceCodeInfo_; }
/*       */       private SingleFieldBuilderV3<SourceCodeInfo, SourceCodeInfo.Builder, SourceCodeInfoOrBuilder> getSourceCodeInfoFieldBuilder() { if (this.sourceCodeInfoBuilder_ == null) { this.sourceCodeInfoBuilder_ = new SingleFieldBuilderV3<>(getSourceCodeInfo(), getParentForChildren(), isClean()); this.sourceCodeInfo_ = null; }  return this.sourceCodeInfoBuilder_; }
/*  4765 */       public String getSyntax() { Object ref = this.syntax_;
/*  4766 */         if (!(ref instanceof String)) {
/*  4767 */           ByteString bs = (ByteString)ref;
/*       */           
/*  4769 */           String s = bs.toStringUtf8();
/*  4770 */           if (bs.isValidUtf8()) {
/*  4771 */             this.syntax_ = s;
/*       */           }
/*  4773 */           return s;
/*       */         } 
/*  4775 */         return (String)ref; }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public ByteString getSyntaxBytes() {
/*  4789 */         Object ref = this.syntax_;
/*  4790 */         if (ref instanceof String) {
/*       */           
/*  4792 */           ByteString b = ByteString.copyFromUtf8((String)ref);
/*       */           
/*  4794 */           this.syntax_ = b;
/*  4795 */           return b;
/*       */         } 
/*  4797 */         return (ByteString)ref;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setSyntax(String value) {
/*  4812 */         if (value == null) {
/*  4813 */           throw new NullPointerException();
/*       */         }
/*  4815 */         this.bitField0_ |= 0x800;
/*  4816 */         this.syntax_ = value;
/*  4817 */         onChanged();
/*  4818 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearSyntax() {
/*  4830 */         this.bitField0_ &= 0xFFFFF7FF;
/*  4831 */         this.syntax_ = FileDescriptorProto.getDefaultInstance().getSyntax();
/*  4832 */         onChanged();
/*  4833 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setSyntaxBytes(ByteString value) {
/*  4847 */         if (value == null) {
/*  4848 */           throw new NullPointerException();
/*       */         }
/*  4850 */         this.bitField0_ |= 0x800;
/*  4851 */         this.syntax_ = value;
/*  4852 */         onChanged();
/*  4853 */         return this;
/*       */       }
/*       */ 
/*       */       
/*       */       public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
/*  4858 */         return super.setUnknownFields(unknownFields);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
/*  4864 */         return super.mergeUnknownFields(unknownFields);
/*       */       } }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*  4874 */     private static final FileDescriptorProto DEFAULT_INSTANCE = new FileDescriptorProto();
/*       */ 
/*       */     
/*       */     public static FileDescriptorProto getDefaultInstance() {
/*  4878 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */     
/*       */     @Deprecated
/*  4882 */     public static final Parser<FileDescriptorProto> PARSER = new AbstractParser<FileDescriptorProto>()
/*       */       {
/*       */ 
/*       */         
/*       */         public FileDescriptorProto parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException
/*       */         {
/*  4888 */           return new FileDescriptorProto(input, extensionRegistry);
/*       */         }
/*       */       };
/*       */     
/*       */     public static Parser<FileDescriptorProto> parser() {
/*  4893 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public Parser<FileDescriptorProto> getParserForType() {
/*  4898 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public FileDescriptorProto getDefaultInstanceForType() {
/*  4903 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public static interface DescriptorProtoOrBuilder
/*       */     extends MessageOrBuilder
/*       */   {
/*       */     boolean hasName();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     String getName();
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getNameBytes();
/*       */ 
/*       */ 
/*       */     
/*       */     List<FieldDescriptorProto> getFieldList();
/*       */ 
/*       */ 
/*       */     
/*       */     FieldDescriptorProto getField(int param1Int);
/*       */ 
/*       */ 
/*       */     
/*       */     int getFieldCount();
/*       */ 
/*       */ 
/*       */     
/*       */     List<? extends FieldDescriptorProtoOrBuilder> getFieldOrBuilderList();
/*       */ 
/*       */ 
/*       */     
/*       */     FieldDescriptorProtoOrBuilder getFieldOrBuilder(int param1Int);
/*       */ 
/*       */ 
/*       */     
/*       */     List<FieldDescriptorProto> getExtensionList();
/*       */ 
/*       */ 
/*       */     
/*       */     FieldDescriptorProto getExtension(int param1Int);
/*       */ 
/*       */ 
/*       */     
/*       */     int getExtensionCount();
/*       */ 
/*       */ 
/*       */     
/*       */     List<? extends FieldDescriptorProtoOrBuilder> getExtensionOrBuilderList();
/*       */ 
/*       */ 
/*       */     
/*       */     FieldDescriptorProtoOrBuilder getExtensionOrBuilder(int param1Int);
/*       */ 
/*       */ 
/*       */     
/*       */     List<DescriptorProto> getNestedTypeList();
/*       */ 
/*       */ 
/*       */     
/*       */     DescriptorProto getNestedType(int param1Int);
/*       */ 
/*       */ 
/*       */     
/*       */     int getNestedTypeCount();
/*       */ 
/*       */ 
/*       */     
/*       */     List<? extends DescriptorProtoOrBuilder> getNestedTypeOrBuilderList();
/*       */ 
/*       */ 
/*       */     
/*       */     DescriptorProtoOrBuilder getNestedTypeOrBuilder(int param1Int);
/*       */ 
/*       */ 
/*       */     
/*       */     List<EnumDescriptorProto> getEnumTypeList();
/*       */ 
/*       */ 
/*       */     
/*       */     EnumDescriptorProto getEnumType(int param1Int);
/*       */ 
/*       */ 
/*       */     
/*       */     int getEnumTypeCount();
/*       */ 
/*       */ 
/*       */     
/*       */     List<? extends EnumDescriptorProtoOrBuilder> getEnumTypeOrBuilderList();
/*       */ 
/*       */ 
/*       */     
/*       */     EnumDescriptorProtoOrBuilder getEnumTypeOrBuilder(int param1Int);
/*       */ 
/*       */ 
/*       */     
/*       */     List<DescriptorProto.ExtensionRange> getExtensionRangeList();
/*       */ 
/*       */ 
/*       */     
/*       */     DescriptorProto.ExtensionRange getExtensionRange(int param1Int);
/*       */ 
/*       */ 
/*       */     
/*       */     int getExtensionRangeCount();
/*       */ 
/*       */ 
/*       */     
/*       */     List<? extends DescriptorProto.ExtensionRangeOrBuilder> getExtensionRangeOrBuilderList();
/*       */ 
/*       */ 
/*       */     
/*       */     DescriptorProto.ExtensionRangeOrBuilder getExtensionRangeOrBuilder(int param1Int);
/*       */ 
/*       */ 
/*       */     
/*       */     List<OneofDescriptorProto> getOneofDeclList();
/*       */ 
/*       */ 
/*       */     
/*       */     OneofDescriptorProto getOneofDecl(int param1Int);
/*       */ 
/*       */ 
/*       */     
/*       */     int getOneofDeclCount();
/*       */ 
/*       */ 
/*       */     
/*       */     List<? extends OneofDescriptorProtoOrBuilder> getOneofDeclOrBuilderList();
/*       */ 
/*       */ 
/*       */     
/*       */     OneofDescriptorProtoOrBuilder getOneofDeclOrBuilder(int param1Int);
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasOptions();
/*       */ 
/*       */ 
/*       */     
/*       */     MessageOptions getOptions();
/*       */ 
/*       */ 
/*       */     
/*       */     MessageOptionsOrBuilder getOptionsOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     List<DescriptorProto.ReservedRange> getReservedRangeList();
/*       */ 
/*       */ 
/*       */     
/*       */     DescriptorProto.ReservedRange getReservedRange(int param1Int);
/*       */ 
/*       */ 
/*       */     
/*       */     int getReservedRangeCount();
/*       */ 
/*       */ 
/*       */     
/*       */     List<? extends DescriptorProto.ReservedRangeOrBuilder> getReservedRangeOrBuilderList();
/*       */ 
/*       */ 
/*       */     
/*       */     DescriptorProto.ReservedRangeOrBuilder getReservedRangeOrBuilder(int param1Int);
/*       */ 
/*       */ 
/*       */     
/*       */     List<String> getReservedNameList();
/*       */ 
/*       */ 
/*       */     
/*       */     int getReservedNameCount();
/*       */ 
/*       */ 
/*       */     
/*       */     String getReservedName(int param1Int);
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getReservedNameBytes(int param1Int);
/*       */   }
/*       */ 
/*       */ 
/*       */   
/*       */   public static final class DescriptorProto
/*       */     extends GeneratedMessageV3
/*       */     implements DescriptorProtoOrBuilder
/*       */   {
/*       */     private static final long serialVersionUID = 0L;
/*       */ 
/*       */     
/*       */     private int bitField0_;
/*       */ 
/*       */     
/*       */     public static final int NAME_FIELD_NUMBER = 1;
/*       */ 
/*       */     
/*       */     private volatile Object name_;
/*       */ 
/*       */     
/*       */     public static final int FIELD_FIELD_NUMBER = 2;
/*       */ 
/*       */     
/*       */     private List<FieldDescriptorProto> field_;
/*       */ 
/*       */     
/*       */     public static final int EXTENSION_FIELD_NUMBER = 6;
/*       */ 
/*       */     
/*       */     private List<FieldDescriptorProto> extension_;
/*       */ 
/*       */     
/*       */     public static final int NESTED_TYPE_FIELD_NUMBER = 3;
/*       */ 
/*       */     
/*       */     private List<DescriptorProto> nestedType_;
/*       */ 
/*       */     
/*       */     public static final int ENUM_TYPE_FIELD_NUMBER = 4;
/*       */ 
/*       */     
/*       */     private List<EnumDescriptorProto> enumType_;
/*       */ 
/*       */     
/*       */     public static final int EXTENSION_RANGE_FIELD_NUMBER = 5;
/*       */ 
/*       */     
/*       */     private List<ExtensionRange> extensionRange_;
/*       */ 
/*       */     
/*       */     public static final int ONEOF_DECL_FIELD_NUMBER = 8;
/*       */ 
/*       */     
/*       */     private List<OneofDescriptorProto> oneofDecl_;
/*       */ 
/*       */     
/*       */     public static final int OPTIONS_FIELD_NUMBER = 7;
/*       */ 
/*       */     
/*       */     private MessageOptions options_;
/*       */ 
/*       */     
/*       */     public static final int RESERVED_RANGE_FIELD_NUMBER = 9;
/*       */ 
/*       */     
/*       */     private List<ReservedRange> reservedRange_;
/*       */ 
/*       */     
/*       */     public static final int RESERVED_NAME_FIELD_NUMBER = 10;
/*       */ 
/*       */     
/*       */     private LazyStringList reservedName_;
/*       */ 
/*       */     
/*       */     private byte memoizedIsInitialized;
/*       */ 
/*       */ 
/*       */     
/*       */     private DescriptorProto(GeneratedMessageV3.Builder<?> builder)
/*       */     {
/*  5171 */       super(builder);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*  7376 */       this.memoizedIsInitialized = -1; } protected Object newInstance(UnusedPrivateParameter unused) { return new DescriptorProto(); } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private DescriptorProto(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this(); if (extensionRegistry == null) throw new NullPointerException();  int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { ByteString byteString1; MessageOptions.Builder subBuilder; ByteString bs; int tag = input.readTag(); switch (tag) { case 0: done = true; continue;case 10: byteString1 = input.readBytes(); this.bitField0_ |= 0x1; this.name_ = byteString1; continue;case 18: if ((mutable_bitField0_ & 0x2) == 0) { this.field_ = new ArrayList<>(); mutable_bitField0_ |= 0x2; }  this.field_.add(input.readMessage(FieldDescriptorProto.PARSER, extensionRegistry)); continue;case 26: if ((mutable_bitField0_ & 0x8) == 0) { this.nestedType_ = new ArrayList<>(); mutable_bitField0_ |= 0x8; }  this.nestedType_.add(input.readMessage(PARSER, extensionRegistry)); continue;case 34: if ((mutable_bitField0_ & 0x10) == 0) { this.enumType_ = new ArrayList<>(); mutable_bitField0_ |= 0x10; }  this.enumType_.add(input.readMessage(EnumDescriptorProto.PARSER, extensionRegistry)); continue;case 42: if ((mutable_bitField0_ & 0x20) == 0) { this.extensionRange_ = new ArrayList<>(); mutable_bitField0_ |= 0x20; }  this.extensionRange_.add(input.readMessage(ExtensionRange.PARSER, extensionRegistry)); continue;case 50: if ((mutable_bitField0_ & 0x4) == 0) { this.extension_ = new ArrayList<>(); mutable_bitField0_ |= 0x4; }  this.extension_.add(input.readMessage(FieldDescriptorProto.PARSER, extensionRegistry)); continue;case 58: subBuilder = null; if ((this.bitField0_ & 0x2) != 0) subBuilder = this.options_.toBuilder();  this.options_ = input.<MessageOptions>readMessage(MessageOptions.PARSER, extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.options_); this.options_ = subBuilder.buildPartial(); }  this.bitField0_ |= 0x2; continue;case 66: if ((mutable_bitField0_ & 0x40) == 0) { this.oneofDecl_ = new ArrayList<>(); mutable_bitField0_ |= 0x40; }  this.oneofDecl_.add(input.readMessage(OneofDescriptorProto.PARSER, extensionRegistry)); continue;case 74: if ((mutable_bitField0_ & 0x100) == 0) { this.reservedRange_ = new ArrayList<>(); mutable_bitField0_ |= 0x100; }  this.reservedRange_.add(input.readMessage(ReservedRange.PARSER, extensionRegistry)); continue;case 82: bs = input.readBytes(); if ((mutable_bitField0_ & 0x200) == 0) { this.reservedName_ = new LazyStringArrayList(); mutable_bitField0_ |= 0x200; }  this.reservedName_.add(bs); continue; }  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this); } finally { if ((mutable_bitField0_ & 0x2) != 0) this.field_ = Collections.unmodifiableList(this.field_);  if ((mutable_bitField0_ & 0x8) != 0) this.nestedType_ = Collections.unmodifiableList(this.nestedType_);  if ((mutable_bitField0_ & 0x10) != 0) this.enumType_ = Collections.unmodifiableList(this.enumType_);  if ((mutable_bitField0_ & 0x20) != 0) this.extensionRange_ = Collections.unmodifiableList(this.extensionRange_);  if ((mutable_bitField0_ & 0x4) != 0) this.extension_ = Collections.unmodifiableList(this.extension_);  if ((mutable_bitField0_ & 0x40) != 0) this.oneofDecl_ = Collections.unmodifiableList(this.oneofDecl_);  if ((mutable_bitField0_ & 0x100) != 0) this.reservedRange_ = Collections.unmodifiableList(this.reservedRange_);  if ((mutable_bitField0_ & 0x200) != 0) this.reservedName_ = this.reservedName_.getUnmodifiableView();  this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return DescriptorProtos.internal_static_google_protobuf_DescriptorProto_descriptor; } protected FieldAccessorTable internalGetFieldAccessorTable() { return DescriptorProtos.internal_static_google_protobuf_DescriptorProto_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)DescriptorProto.class, (Class)Builder.class); } public static final class ExtensionRange extends GeneratedMessageV3 implements ExtensionRangeOrBuilder { private static final long serialVersionUID = 0L; private int bitField0_; public static final int START_FIELD_NUMBER = 1; private int start_; public static final int END_FIELD_NUMBER = 2; private int end_; public static final int OPTIONS_FIELD_NUMBER = 3; private ExtensionRangeOptions options_; private byte memoizedIsInitialized; private ExtensionRange(GeneratedMessageV3.Builder<?> builder) { super(builder); this.memoizedIsInitialized = -1; } private ExtensionRange() { this.memoizedIsInitialized = -1; } protected Object newInstance(UnusedPrivateParameter unused) { return new ExtensionRange(); } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private ExtensionRange(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this(); if (extensionRegistry == null) throw new NullPointerException();  int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { ExtensionRangeOptions.Builder subBuilder; int tag = input.readTag(); switch (tag) { case 0: done = true; continue;case 8: this.bitField0_ |= 0x1; this.start_ = input.readInt32(); continue;case 16: this.bitField0_ |= 0x2; this.end_ = input.readInt32(); continue;case 26: subBuilder = null; if ((this.bitField0_ & 0x4) != 0) subBuilder = this.options_.toBuilder();  this.options_ = input.<ExtensionRangeOptions>readMessage(ExtensionRangeOptions.PARSER, extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.options_); this.options_ = subBuilder.buildPartial(); }  this.bitField0_ |= 0x4; continue; }  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this); } finally { this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return DescriptorProtos.internal_static_google_protobuf_DescriptorProto_ExtensionRange_descriptor; } protected FieldAccessorTable internalGetFieldAccessorTable() { return DescriptorProtos.internal_static_google_protobuf_DescriptorProto_ExtensionRange_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)ExtensionRange.class, (Class)Builder.class); } public boolean hasStart() { return ((this.bitField0_ & 0x1) != 0); } public int getStart() { return this.start_; } public boolean hasEnd() { return ((this.bitField0_ & 0x2) != 0); } public int getEnd() { return this.end_; } public boolean hasOptions() { return ((this.bitField0_ & 0x4) != 0); } public ExtensionRangeOptions getOptions() { return (this.options_ == null) ? ExtensionRangeOptions.getDefaultInstance() : this.options_; } public ExtensionRangeOptionsOrBuilder getOptionsOrBuilder() { return (this.options_ == null) ? ExtensionRangeOptions.getDefaultInstance() : this.options_; } public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized; if (isInitialized == 1) return true;  if (isInitialized == 0) return false;  if (hasOptions() && !getOptions().isInitialized()) { this.memoizedIsInitialized = 0; return false; }  this.memoizedIsInitialized = 1; return true; } public void writeTo(CodedOutputStream output) throws IOException { if ((this.bitField0_ & 0x1) != 0) output.writeInt32(1, this.start_);  if ((this.bitField0_ & 0x2) != 0) output.writeInt32(2, this.end_);  if ((this.bitField0_ & 0x4) != 0) output.writeMessage(3, getOptions());  this.unknownFields.writeTo(output); } public int getSerializedSize() { int size = this.memoizedSize; if (size != -1) return size;  size = 0; if ((this.bitField0_ & 0x1) != 0) size += CodedOutputStream.computeInt32Size(1, this.start_);  if ((this.bitField0_ & 0x2) != 0) size += CodedOutputStream.computeInt32Size(2, this.end_);  if ((this.bitField0_ & 0x4) != 0) size += CodedOutputStream.computeMessageSize(3, getOptions());  size += this.unknownFields.getSerializedSize(); this.memoizedSize = size; return size; } public boolean equals(Object obj) { if (obj == this) return true;  if (!(obj instanceof ExtensionRange)) return super.equals(obj);  ExtensionRange other = (ExtensionRange)obj; if (hasStart() != other.hasStart()) return false;  if (hasStart() && getStart() != other.getStart()) return false;  if (hasEnd() != other.hasEnd()) return false;  if (hasEnd() && getEnd() != other.getEnd()) return false;  if (hasOptions() != other.hasOptions()) return false;  if (hasOptions() && !getOptions().equals(other.getOptions())) return false;  if (!this.unknownFields.equals(other.unknownFields)) return false;  return true; } public int hashCode() { if (this.memoizedHashCode != 0) return this.memoizedHashCode;  int hash = 41; hash = 19 * hash + getDescriptor().hashCode(); if (hasStart()) { hash = 37 * hash + 1; hash = 53 * hash + getStart(); }  if (hasEnd()) { hash = 37 * hash + 2; hash = 53 * hash + getEnd(); }  if (hasOptions()) { hash = 37 * hash + 3; hash = 53 * hash + getOptions().hashCode(); }  hash = 29 * hash + this.unknownFields.hashCode(); this.memoizedHashCode = hash; return hash; } public static ExtensionRange parseFrom(ByteBuffer data) throws InvalidProtocolBufferException { return PARSER.parseFrom(data); } public static ExtensionRange parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return PARSER.parseFrom(data, extensionRegistry); } public static ExtensionRange parseFrom(ByteString data) throws InvalidProtocolBufferException { return PARSER.parseFrom(data); } public static ExtensionRange parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return PARSER.parseFrom(data, extensionRegistry); } public static ExtensionRange parseFrom(byte[] data) throws InvalidProtocolBufferException { return PARSER.parseFrom(data); } public static ExtensionRange parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return PARSER.parseFrom(data, extensionRegistry); } public static ExtensionRange parseFrom(InputStream input) throws IOException { return GeneratedMessageV3.<ExtensionRange>parseWithIOException(PARSER, input); } public static ExtensionRange parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { return GeneratedMessageV3.<ExtensionRange>parseWithIOException(PARSER, input, extensionRegistry); } public static ExtensionRange parseDelimitedFrom(InputStream input) throws IOException { return GeneratedMessageV3.<ExtensionRange>parseDelimitedWithIOException(PARSER, input); } public static ExtensionRange parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { return GeneratedMessageV3.<ExtensionRange>parseDelimitedWithIOException(PARSER, input, extensionRegistry); } public static ExtensionRange parseFrom(CodedInputStream input) throws IOException { return GeneratedMessageV3.<ExtensionRange>parseWithIOException(PARSER, input); } public static ExtensionRange parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { return GeneratedMessageV3.<ExtensionRange>parseWithIOException(PARSER, input, extensionRegistry); } public Builder newBuilderForType() { return newBuilder(); } public static Builder newBuilder() { return DEFAULT_INSTANCE.toBuilder(); } public static Builder newBuilder(ExtensionRange prototype) { return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype); } public Builder toBuilder() { return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder()).mergeFrom(this); } protected Builder newBuilderForType(BuilderParent parent) { Builder builder = new Builder(parent); return builder; } public static final class Builder extends GeneratedMessageV3.Builder<Builder> implements ExtensionRangeOrBuilder { private int bitField0_; private int start_; private int end_; private ExtensionRangeOptions options_; private SingleFieldBuilderV3<ExtensionRangeOptions, ExtensionRangeOptions.Builder, ExtensionRangeOptionsOrBuilder> optionsBuilder_; public static final Descriptors.Descriptor getDescriptor() { return DescriptorProtos.internal_static_google_protobuf_DescriptorProto_ExtensionRange_descriptor; } protected FieldAccessorTable internalGetFieldAccessorTable() { return DescriptorProtos.internal_static_google_protobuf_DescriptorProto_ExtensionRange_fieldAccessorTable.ensureFieldAccessorsInitialized((Class) ExtensionRange.class, (Class)Builder.class); } private Builder() { maybeForceBuilderInitialization(); } private Builder(BuilderParent parent) { super(parent); maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (GeneratedMessageV3.alwaysUseFieldBuilders) getOptionsFieldBuilder();  } public Builder clear() { super.clear(); this.start_ = 0; this.bitField0_ &= 0xFFFFFFFE; this.end_ = 0; this.bitField0_ &= 0xFFFFFFFD; if (this.optionsBuilder_ == null) { this.options_ = null; } else { this.optionsBuilder_.clear(); }  this.bitField0_ &= 0xFFFFFFFB; return this; } public Descriptors.Descriptor getDescriptorForType() { return DescriptorProtos.internal_static_google_protobuf_DescriptorProto_ExtensionRange_descriptor; } public ExtensionRange getDefaultInstanceForType() { return ExtensionRange.getDefaultInstance(); } public ExtensionRange build() { ExtensionRange result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public ExtensionRange buildPartial() { ExtensionRange result = new ExtensionRange(this); int from_bitField0_ = this.bitField0_; int to_bitField0_ = 0; if ((from_bitField0_ & 0x1) != 0) { result.start_ = this.start_; to_bitField0_ |= 0x1; }  if ((from_bitField0_ & 0x2) != 0) { result.end_ = this.end_; to_bitField0_ |= 0x2; }  if ((from_bitField0_ & 0x4) != 0) { if (this.optionsBuilder_ == null) { result.options_ = this.options_; } else { result.options_ = this.optionsBuilder_.build(); }  to_bitField0_ |= 0x4; }  result.bitField0_ = to_bitField0_; onBuilt(); return result; } public Builder clone() { return super.clone(); } public Builder setField(Descriptors.FieldDescriptor field, Object value) { return super.setField(field, value); } public Builder clearField(Descriptors.FieldDescriptor field) { return super.clearField(field); } public Builder clearOneof(Descriptors.OneofDescriptor oneof) { return super.clearOneof(oneof); } public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) { return super.setRepeatedField(field, index, value); } public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) { return super.addRepeatedField(field, value); } public Builder mergeFrom(Message other) { if (other instanceof ExtensionRange) return mergeFrom((ExtensionRange)other);  super.mergeFrom(other); return this; } public Builder mergeFrom(ExtensionRange other) { if (other == ExtensionRange.getDefaultInstance()) return this;  if (other.hasStart()) setStart(other.getStart());  if (other.hasEnd()) setEnd(other.getEnd());  if (other.hasOptions()) mergeOptions(other.getOptions());  mergeUnknownFields(other.unknownFields); onChanged(); return this; } public final boolean isInitialized() { if (hasOptions() && !getOptions().isInitialized()) return false;  return true; } public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { ExtensionRange parsedMessage = null; try { parsedMessage = ExtensionRange.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (ExtensionRange)e.getUnfinishedMessage(); throw e.unwrapIOException(); } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; } public boolean hasStart() { return ((this.bitField0_ & 0x1) != 0); } public int getStart() { return this.start_; } public Builder setStart(int value) { this.bitField0_ |= 0x1; this.start_ = value; onChanged(); return this; } public Builder clearStart() { this.bitField0_ &= 0xFFFFFFFE; this.start_ = 0; onChanged(); return this; } public boolean hasEnd() { return ((this.bitField0_ & 0x2) != 0); } public int getEnd() { return this.end_; } public Builder setEnd(int value) { this.bitField0_ |= 0x2; this.end_ = value; onChanged(); return this; } public Builder clearEnd() { this.bitField0_ &= 0xFFFFFFFD; this.end_ = 0; onChanged(); return this; } public boolean hasOptions() { return ((this.bitField0_ & 0x4) != 0); } public ExtensionRangeOptions getOptions() { if (this.optionsBuilder_ == null) return (this.options_ == null) ? ExtensionRangeOptions.getDefaultInstance() : this.options_;  return this.optionsBuilder_.getMessage(); } public Builder setOptions(ExtensionRangeOptions value) { if (this.optionsBuilder_ == null) { if (value == null) throw new NullPointerException();  this.options_ = value; onChanged(); } else { this.optionsBuilder_.setMessage(value); }  this.bitField0_ |= 0x4; return this; } public Builder setOptions(ExtensionRangeOptions.Builder builderForValue) { if (this.optionsBuilder_ == null) { this.options_ = builderForValue.build(); onChanged(); } else { this.optionsBuilder_.setMessage(builderForValue.build()); }  this.bitField0_ |= 0x4; return this; } public Builder mergeOptions(ExtensionRangeOptions value) { if (this.optionsBuilder_ == null) { if ((this.bitField0_ & 0x4) != 0 && this.options_ != null && this.options_ != ExtensionRangeOptions.getDefaultInstance()) { this.options_ = ExtensionRangeOptions.newBuilder(this.options_).mergeFrom(value).buildPartial(); } else { this.options_ = value; }  onChanged(); } else { this.optionsBuilder_.mergeFrom(value); }  this.bitField0_ |= 0x4; return this; } public Builder clearOptions() { if (this.optionsBuilder_ == null) { this.options_ = null; onChanged(); } else { this.optionsBuilder_.clear(); }  this.bitField0_ &= 0xFFFFFFFB; return this; } public ExtensionRangeOptions.Builder getOptionsBuilder() { this.bitField0_ |= 0x4; onChanged(); return getOptionsFieldBuilder().getBuilder(); } public ExtensionRangeOptionsOrBuilder getOptionsOrBuilder() { if (this.optionsBuilder_ != null) return this.optionsBuilder_.getMessageOrBuilder();  return (this.options_ == null) ? ExtensionRangeOptions.getDefaultInstance() : this.options_; } private SingleFieldBuilderV3<ExtensionRangeOptions, ExtensionRangeOptions.Builder, ExtensionRangeOptionsOrBuilder> getOptionsFieldBuilder() { if (this.optionsBuilder_ == null) { this.optionsBuilder_ = new SingleFieldBuilderV3<>(getOptions(), getParentForChildren(), isClean()); this.options_ = null; }  return this.optionsBuilder_; } public final Builder setUnknownFields(UnknownFieldSet unknownFields) { return super.setUnknownFields(unknownFields); } public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) { return super.mergeUnknownFields(unknownFields); } } private static final ExtensionRange DEFAULT_INSTANCE = new ExtensionRange(); public static ExtensionRange getDefaultInstance() { return DEFAULT_INSTANCE; } @Deprecated public static final Parser<ExtensionRange> PARSER = new AbstractParser<ExtensionRange>() { public ExtensionRange parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return new ExtensionRange(input, extensionRegistry); } }; public static Parser<ExtensionRange> parser() { return PARSER; } public Parser<ExtensionRange> getParserForType() { return PARSER; } public ExtensionRange getDefaultInstanceForType() { return DEFAULT_INSTANCE; } } public static final class ReservedRange extends GeneratedMessageV3 implements ReservedRangeOrBuilder { private static final long serialVersionUID = 0L; private int bitField0_; public static final int START_FIELD_NUMBER = 1; private int start_; public static final int END_FIELD_NUMBER = 2; private int end_; private byte memoizedIsInitialized; private ReservedRange(GeneratedMessageV3.Builder<?> builder) { super(builder); this.memoizedIsInitialized = -1; } private ReservedRange() { this.memoizedIsInitialized = -1; } protected Object newInstance(UnusedPrivateParameter unused) { return new ReservedRange(); } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private ReservedRange(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this(); if (extensionRegistry == null) throw new NullPointerException();  int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { int tag = input.readTag(); switch (tag) { case 0: done = true; continue;case 8: this.bitField0_ |= 0x1; this.start_ = input.readInt32(); continue;case 16: this.bitField0_ |= 0x2; this.end_ = input.readInt32(); continue; }  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this); } finally { this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return DescriptorProtos.internal_static_google_protobuf_DescriptorProto_ReservedRange_descriptor; } protected FieldAccessorTable internalGetFieldAccessorTable() { return DescriptorProtos.internal_static_google_protobuf_DescriptorProto_ReservedRange_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)ReservedRange.class, (Class)Builder.class); } public boolean hasStart() { return ((this.bitField0_ & 0x1) != 0); } public int getStart() { return this.start_; } public boolean hasEnd() { return ((this.bitField0_ & 0x2) != 0); } public int getEnd() { return this.end_; } public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized; if (isInitialized == 1) return true;  if (isInitialized == 0) return false;  this.memoizedIsInitialized = 1; return true; } public void writeTo(CodedOutputStream output) throws IOException { if ((this.bitField0_ & 0x1) != 0) output.writeInt32(1, this.start_);  if ((this.bitField0_ & 0x2) != 0) output.writeInt32(2, this.end_);  this.unknownFields.writeTo(output); } public int getSerializedSize() { int size = this.memoizedSize; if (size != -1) return size;  size = 0; if ((this.bitField0_ & 0x1) != 0) size += CodedOutputStream.computeInt32Size(1, this.start_);  if ((this.bitField0_ & 0x2) != 0) size += CodedOutputStream.computeInt32Size(2, this.end_);  size += this.unknownFields.getSerializedSize(); this.memoizedSize = size; return size; } public boolean equals(Object obj) { if (obj == this) return true;  if (!(obj instanceof ReservedRange)) return super.equals(obj);  ReservedRange other = (ReservedRange)obj; if (hasStart() != other.hasStart()) return false;  if (hasStart() && getStart() != other.getStart()) return false;  if (hasEnd() != other.hasEnd()) return false;  if (hasEnd() && getEnd() != other.getEnd()) return false;  if (!this.unknownFields.equals(other.unknownFields)) return false;  return true; } public int hashCode() { if (this.memoizedHashCode != 0) return this.memoizedHashCode;  int hash = 41; hash = 19 * hash + getDescriptor().hashCode(); if (hasStart()) { hash = 37 * hash + 1; hash = 53 * hash + getStart(); }  if (hasEnd()) { hash = 37 * hash + 2; hash = 53 * hash + getEnd(); }  hash = 29 * hash + this.unknownFields.hashCode(); this.memoizedHashCode = hash; return hash; } public static ReservedRange parseFrom(ByteBuffer data) throws InvalidProtocolBufferException { return PARSER.parseFrom(data); } public static ReservedRange parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return PARSER.parseFrom(data, extensionRegistry); } public static ReservedRange parseFrom(ByteString data) throws InvalidProtocolBufferException { return PARSER.parseFrom(data); } public static ReservedRange parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return PARSER.parseFrom(data, extensionRegistry); } public static ReservedRange parseFrom(byte[] data) throws InvalidProtocolBufferException { return PARSER.parseFrom(data); } public static ReservedRange parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return PARSER.parseFrom(data, extensionRegistry); } public static ReservedRange parseFrom(InputStream input) throws IOException { return GeneratedMessageV3.<ReservedRange>parseWithIOException(PARSER, input); } public static ReservedRange parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { return GeneratedMessageV3.<ReservedRange>parseWithIOException(PARSER, input, extensionRegistry); } public static ReservedRange parseDelimitedFrom(InputStream input) throws IOException { return GeneratedMessageV3.<ReservedRange>parseDelimitedWithIOException(PARSER, input); } public static ReservedRange parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { return GeneratedMessageV3.<ReservedRange>parseDelimitedWithIOException(PARSER, input, extensionRegistry); } public static ReservedRange parseFrom(CodedInputStream input) throws IOException { return GeneratedMessageV3.<ReservedRange>parseWithIOException(PARSER, input); } public static ReservedRange parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { return GeneratedMessageV3.<ReservedRange>parseWithIOException(PARSER, input, extensionRegistry); } public Builder newBuilderForType() { return newBuilder(); } public static Builder newBuilder() { return DEFAULT_INSTANCE.toBuilder(); } public static Builder newBuilder(ReservedRange prototype) { return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype); } public Builder toBuilder() { return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder()).mergeFrom(this); } protected Builder newBuilderForType(BuilderParent parent) { Builder builder = new Builder(parent); return builder; } public static final class Builder extends GeneratedMessageV3.Builder<Builder> implements ReservedRangeOrBuilder { private int bitField0_; private int start_; private int end_; public static final Descriptors.Descriptor getDescriptor() { return DescriptorProtos.internal_static_google_protobuf_DescriptorProto_ReservedRange_descriptor; } protected FieldAccessorTable internalGetFieldAccessorTable() { return DescriptorProtos.internal_static_google_protobuf_DescriptorProto_ReservedRange_fieldAccessorTable.ensureFieldAccessorsInitialized((Class) ReservedRange.class, (Class)Builder.class); } private Builder() { maybeForceBuilderInitialization(); } private Builder(BuilderParent parent) { super(parent); maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (GeneratedMessageV3.alwaysUseFieldBuilders); } public Builder clear() { super.clear(); this.start_ = 0; this.bitField0_ &= 0xFFFFFFFE; this.end_ = 0; this.bitField0_ &= 0xFFFFFFFD; return this; } public Descriptors.Descriptor getDescriptorForType() { return DescriptorProtos.internal_static_google_protobuf_DescriptorProto_ReservedRange_descriptor; } public ReservedRange getDefaultInstanceForType() { return ReservedRange.getDefaultInstance(); } public ReservedRange build() { ReservedRange result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public ReservedRange buildPartial() { ReservedRange result = new ReservedRange(this); int from_bitField0_ = this.bitField0_; int to_bitField0_ = 0; if ((from_bitField0_ & 0x1) != 0) { result.start_ = this.start_; to_bitField0_ |= 0x1; }  if ((from_bitField0_ & 0x2) != 0) { result.end_ = this.end_; to_bitField0_ |= 0x2; }  result.bitField0_ = to_bitField0_; onBuilt(); return result; } public Builder clone() { return super.clone(); } public Builder setField(Descriptors.FieldDescriptor field, Object value) { return super.setField(field, value); } public Builder clearField(Descriptors.FieldDescriptor field) { return super.clearField(field); } public Builder clearOneof(Descriptors.OneofDescriptor oneof) { return super.clearOneof(oneof); } public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) { return super.setRepeatedField(field, index, value); } public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) { return super.addRepeatedField(field, value); } public Builder mergeFrom(Message other) { if (other instanceof ReservedRange) return mergeFrom((ReservedRange)other);  super.mergeFrom(other); return this; } public Builder mergeFrom(ReservedRange other) { if (other == ReservedRange.getDefaultInstance()) return this;  if (other.hasStart()) setStart(other.getStart());  if (other.hasEnd()) setEnd(other.getEnd());  mergeUnknownFields(other.unknownFields); onChanged(); return this; } public final boolean isInitialized() { return true; } public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { ReservedRange parsedMessage = null; try { parsedMessage = ReservedRange.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (ReservedRange)e.getUnfinishedMessage(); throw e.unwrapIOException(); } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; } public boolean hasStart() { return ((this.bitField0_ & 0x1) != 0); } public int getStart() { return this.start_; } public Builder setStart(int value) { this.bitField0_ |= 0x1; this.start_ = value; onChanged(); return this; } public Builder clearStart() { this.bitField0_ &= 0xFFFFFFFE; this.start_ = 0; onChanged(); return this; } public boolean hasEnd() { return ((this.bitField0_ & 0x2) != 0); } public int getEnd() { return this.end_; } public Builder setEnd(int value) { this.bitField0_ |= 0x2; this.end_ = value; onChanged(); return this; } public Builder clearEnd() { this.bitField0_ &= 0xFFFFFFFD; this.end_ = 0; onChanged(); return this; } public final Builder setUnknownFields(UnknownFieldSet unknownFields) { return super.setUnknownFields(unknownFields); } public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) { return super.mergeUnknownFields(unknownFields); } } private static final ReservedRange DEFAULT_INSTANCE = new ReservedRange(); public static ReservedRange getDefaultInstance() { return DEFAULT_INSTANCE; } @Deprecated public static final Parser<ReservedRange> PARSER = new AbstractParser<ReservedRange>() { public ReservedRange parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return new ReservedRange(input, extensionRegistry); } }; public static Parser<ReservedRange> parser() { return PARSER; } public Parser<ReservedRange> getParserForType() { return PARSER; } public ReservedRange getDefaultInstanceForType() { return DEFAULT_INSTANCE; } } public boolean hasName() { return ((this.bitField0_ & 0x1) != 0); } public String getName() { Object ref = this.name_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.name_ = s;  return s; } public ByteString getNameBytes() { Object ref = this.name_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.name_ = b; return b; }  return (ByteString)ref; } public List<FieldDescriptorProto> getFieldList() { return this.field_; } public List<? extends FieldDescriptorProtoOrBuilder> getFieldOrBuilderList() { return (List)this.field_; } public int getFieldCount() { return this.field_.size(); } private DescriptorProto() { this.memoizedIsInitialized = -1; this.name_ = ""; this.field_ = Collections.emptyList(); this.extension_ = Collections.emptyList(); this.nestedType_ = Collections.emptyList(); this.enumType_ = Collections.emptyList(); this.extensionRange_ = Collections.emptyList(); this.oneofDecl_ = Collections.emptyList(); this.reservedRange_ = Collections.emptyList(); this.reservedName_ = LazyStringArrayList.EMPTY; }
/*       */     public FieldDescriptorProto getField(int index) { return this.field_.get(index); }
/*       */     public FieldDescriptorProtoOrBuilder getFieldOrBuilder(int index) { return this.field_.get(index); }
/*  7379 */     public List<FieldDescriptorProto> getExtensionList() { return this.extension_; } public List<? extends FieldDescriptorProtoOrBuilder> getExtensionOrBuilderList() { return (List)this.extension_; } public int getExtensionCount() { return this.extension_.size(); } public FieldDescriptorProto getExtension(int index) { return this.extension_.get(index); } public FieldDescriptorProtoOrBuilder getExtensionOrBuilder(int index) { return this.extension_.get(index); } public List<DescriptorProto> getNestedTypeList() { return this.nestedType_; } public List<? extends DescriptorProtoOrBuilder> getNestedTypeOrBuilderList() { return (List)this.nestedType_; } public int getNestedTypeCount() { return this.nestedType_.size(); } public DescriptorProto getNestedType(int index) { return this.nestedType_.get(index); } public DescriptorProtoOrBuilder getNestedTypeOrBuilder(int index) { return this.nestedType_.get(index); } public List<EnumDescriptorProto> getEnumTypeList() { return this.enumType_; } public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized;
/*  7380 */       if (isInitialized == 1) return true; 
/*  7381 */       if (isInitialized == 0) return false; 
/*       */       int i;
/*  7383 */       for (i = 0; i < getFieldCount(); i++) {
/*  7384 */         if (!getField(i).isInitialized()) {
/*  7385 */           this.memoizedIsInitialized = 0;
/*  7386 */           return false;
/*       */         } 
/*       */       } 
/*  7389 */       for (i = 0; i < getExtensionCount(); i++) {
/*  7390 */         if (!getExtension(i).isInitialized()) {
/*  7391 */           this.memoizedIsInitialized = 0;
/*  7392 */           return false;
/*       */         } 
/*       */       } 
/*  7395 */       for (i = 0; i < getNestedTypeCount(); i++) {
/*  7396 */         if (!getNestedType(i).isInitialized()) {
/*  7397 */           this.memoizedIsInitialized = 0;
/*  7398 */           return false;
/*       */         } 
/*       */       } 
/*  7401 */       for (i = 0; i < getEnumTypeCount(); i++) {
/*  7402 */         if (!getEnumType(i).isInitialized()) {
/*  7403 */           this.memoizedIsInitialized = 0;
/*  7404 */           return false;
/*       */         } 
/*       */       } 
/*  7407 */       for (i = 0; i < getExtensionRangeCount(); i++) {
/*  7408 */         if (!getExtensionRange(i).isInitialized()) {
/*  7409 */           this.memoizedIsInitialized = 0;
/*  7410 */           return false;
/*       */         } 
/*       */       } 
/*  7413 */       for (i = 0; i < getOneofDeclCount(); i++) {
/*  7414 */         if (!getOneofDecl(i).isInitialized()) {
/*  7415 */           this.memoizedIsInitialized = 0;
/*  7416 */           return false;
/*       */         } 
/*       */       } 
/*  7419 */       if (hasOptions() && 
/*  7420 */         !getOptions().isInitialized()) {
/*  7421 */         this.memoizedIsInitialized = 0;
/*  7422 */         return false;
/*       */       } 
/*       */       
/*  7425 */       this.memoizedIsInitialized = 1;
/*  7426 */       return true; } public List<? extends EnumDescriptorProtoOrBuilder> getEnumTypeOrBuilderList() { return (List)this.enumType_; } public int getEnumTypeCount() { return this.enumType_.size(); } public EnumDescriptorProto getEnumType(int index) { return this.enumType_.get(index); } public EnumDescriptorProtoOrBuilder getEnumTypeOrBuilder(int index) { return this.enumType_.get(index); } public List<ExtensionRange> getExtensionRangeList() { return this.extensionRange_; } public List<? extends ExtensionRangeOrBuilder> getExtensionRangeOrBuilderList() { return (List)this.extensionRange_; } public int getExtensionRangeCount() { return this.extensionRange_.size(); } public ExtensionRange getExtensionRange(int index) { return this.extensionRange_.get(index); } public ExtensionRangeOrBuilder getExtensionRangeOrBuilder(int index) { return this.extensionRange_.get(index); } public List<OneofDescriptorProto> getOneofDeclList() { return this.oneofDecl_; } public List<? extends OneofDescriptorProtoOrBuilder> getOneofDeclOrBuilderList() { return (List)this.oneofDecl_; } public int getOneofDeclCount() { return this.oneofDecl_.size(); } public OneofDescriptorProto getOneofDecl(int index) { return this.oneofDecl_.get(index); } public OneofDescriptorProtoOrBuilder getOneofDeclOrBuilder(int index) { return this.oneofDecl_.get(index); } public boolean hasOptions() { return ((this.bitField0_ & 0x2) != 0); } public MessageOptions getOptions() { return (this.options_ == null) ? MessageOptions.getDefaultInstance() : this.options_; } public MessageOptionsOrBuilder getOptionsOrBuilder() { return (this.options_ == null) ? MessageOptions.getDefaultInstance() : this.options_; } public List<ReservedRange> getReservedRangeList() { return this.reservedRange_; } public List<? extends ReservedRangeOrBuilder> getReservedRangeOrBuilderList() { return (List)this.reservedRange_; } public int getReservedRangeCount() { return this.reservedRange_.size(); } public ReservedRange getReservedRange(int index) { return this.reservedRange_.get(index); }
/*       */     public ReservedRangeOrBuilder getReservedRangeOrBuilder(int index) { return this.reservedRange_.get(index); }
/*       */     public ProtocolStringList getReservedNameList() { return this.reservedName_; }
/*       */     public int getReservedNameCount() { return this.reservedName_.size(); }
/*       */     public String getReservedName(int index) { return this.reservedName_.get(index); }
/*       */     public ByteString getReservedNameBytes(int index) { return this.reservedName_.getByteString(index); }
/*  7432 */     public void writeTo(CodedOutputStream output) throws IOException { if ((this.bitField0_ & 0x1) != 0)
/*  7433 */         GeneratedMessageV3.writeString(output, 1, this.name_); 
/*       */       int i;
/*  7435 */       for (i = 0; i < this.field_.size(); i++) {
/*  7436 */         output.writeMessage(2, this.field_.get(i));
/*       */       }
/*  7438 */       for (i = 0; i < this.nestedType_.size(); i++) {
/*  7439 */         output.writeMessage(3, this.nestedType_.get(i));
/*       */       }
/*  7441 */       for (i = 0; i < this.enumType_.size(); i++) {
/*  7442 */         output.writeMessage(4, this.enumType_.get(i));
/*       */       }
/*  7444 */       for (i = 0; i < this.extensionRange_.size(); i++) {
/*  7445 */         output.writeMessage(5, this.extensionRange_.get(i));
/*       */       }
/*  7447 */       for (i = 0; i < this.extension_.size(); i++) {
/*  7448 */         output.writeMessage(6, this.extension_.get(i));
/*       */       }
/*  7450 */       if ((this.bitField0_ & 0x2) != 0) {
/*  7451 */         output.writeMessage(7, getOptions());
/*       */       }
/*  7453 */       for (i = 0; i < this.oneofDecl_.size(); i++) {
/*  7454 */         output.writeMessage(8, this.oneofDecl_.get(i));
/*       */       }
/*  7456 */       for (i = 0; i < this.reservedRange_.size(); i++) {
/*  7457 */         output.writeMessage(9, this.reservedRange_.get(i));
/*       */       }
/*  7459 */       for (i = 0; i < this.reservedName_.size(); i++) {
/*  7460 */         GeneratedMessageV3.writeString(output, 10, this.reservedName_.getRaw(i));
/*       */       }
/*  7462 */       this.unknownFields.writeTo(output); }
/*       */ 
/*       */ 
/*       */     
/*       */     public int getSerializedSize() {
/*  7467 */       int size = this.memoizedSize;
/*  7468 */       if (size != -1) return size;
/*       */       
/*  7470 */       size = 0;
/*  7471 */       if ((this.bitField0_ & 0x1) != 0)
/*  7472 */         size += GeneratedMessageV3.computeStringSize(1, this.name_); 
/*       */       int i;
/*  7474 */       for (i = 0; i < this.field_.size(); i++) {
/*  7475 */         size += 
/*  7476 */           CodedOutputStream.computeMessageSize(2, this.field_.get(i));
/*       */       }
/*  7478 */       for (i = 0; i < this.nestedType_.size(); i++) {
/*  7479 */         size += 
/*  7480 */           CodedOutputStream.computeMessageSize(3, this.nestedType_.get(i));
/*       */       }
/*  7482 */       for (i = 0; i < this.enumType_.size(); i++) {
/*  7483 */         size += 
/*  7484 */           CodedOutputStream.computeMessageSize(4, this.enumType_.get(i));
/*       */       }
/*  7486 */       for (i = 0; i < this.extensionRange_.size(); i++) {
/*  7487 */         size += 
/*  7488 */           CodedOutputStream.computeMessageSize(5, this.extensionRange_.get(i));
/*       */       }
/*  7490 */       for (i = 0; i < this.extension_.size(); i++) {
/*  7491 */         size += 
/*  7492 */           CodedOutputStream.computeMessageSize(6, this.extension_.get(i));
/*       */       }
/*  7494 */       if ((this.bitField0_ & 0x2) != 0) {
/*  7495 */         size += 
/*  7496 */           CodedOutputStream.computeMessageSize(7, getOptions());
/*       */       }
/*  7498 */       for (i = 0; i < this.oneofDecl_.size(); i++) {
/*  7499 */         size += 
/*  7500 */           CodedOutputStream.computeMessageSize(8, this.oneofDecl_.get(i));
/*       */       }
/*  7502 */       for (i = 0; i < this.reservedRange_.size(); i++) {
/*  7503 */         size += 
/*  7504 */           CodedOutputStream.computeMessageSize(9, this.reservedRange_.get(i));
/*       */       }
/*       */       
/*  7507 */       int dataSize = 0;
/*  7508 */       for (int j = 0; j < this.reservedName_.size(); j++) {
/*  7509 */         dataSize += computeStringSizeNoTag(this.reservedName_.getRaw(j));
/*       */       }
/*  7511 */       size += dataSize;
/*  7512 */       size += 1 * getReservedNameList().size();
/*       */       
/*  7514 */       size += this.unknownFields.getSerializedSize();
/*  7515 */       this.memoizedSize = size;
/*  7516 */       return size;
/*       */     }
/*       */ 
/*       */     
/*       */     public boolean equals(Object obj) {
/*  7521 */       if (obj == this) {
/*  7522 */         return true;
/*       */       }
/*  7524 */       if (!(obj instanceof DescriptorProto)) {
/*  7525 */         return super.equals(obj);
/*       */       }
/*  7527 */       DescriptorProto other = (DescriptorProto)obj;
/*       */       
/*  7529 */       if (hasName() != other.hasName()) return false; 
/*  7530 */       if (hasName() && 
/*       */         
/*  7532 */         !getName().equals(other.getName())) return false;
/*       */ 
/*       */       
/*  7535 */       if (!getFieldList().equals(other.getFieldList())) return false;
/*       */       
/*  7537 */       if (!getExtensionList().equals(other.getExtensionList())) return false;
/*       */       
/*  7539 */       if (!getNestedTypeList().equals(other.getNestedTypeList())) return false;
/*       */       
/*  7541 */       if (!getEnumTypeList().equals(other.getEnumTypeList())) return false;
/*       */       
/*  7543 */       if (!getExtensionRangeList().equals(other.getExtensionRangeList())) return false;
/*       */       
/*  7545 */       if (!getOneofDeclList().equals(other.getOneofDeclList())) return false; 
/*  7546 */       if (hasOptions() != other.hasOptions()) return false; 
/*  7547 */       if (hasOptions() && 
/*       */         
/*  7549 */         !getOptions().equals(other.getOptions())) return false;
/*       */ 
/*       */       
/*  7552 */       if (!getReservedRangeList().equals(other.getReservedRangeList())) return false;
/*       */       
/*  7554 */       if (!getReservedNameList().equals(other.getReservedNameList())) return false; 
/*  7555 */       if (!this.unknownFields.equals(other.unknownFields)) return false; 
/*  7556 */       return true;
/*       */     }
/*       */ 
/*       */     
/*       */     public int hashCode() {
/*  7561 */       if (this.memoizedHashCode != 0) {
/*  7562 */         return this.memoizedHashCode;
/*       */       }
/*  7564 */       int hash = 41;
/*  7565 */       hash = 19 * hash + getDescriptor().hashCode();
/*  7566 */       if (hasName()) {
/*  7567 */         hash = 37 * hash + 1;
/*  7568 */         hash = 53 * hash + getName().hashCode();
/*       */       } 
/*  7570 */       if (getFieldCount() > 0) {
/*  7571 */         hash = 37 * hash + 2;
/*  7572 */         hash = 53 * hash + getFieldList().hashCode();
/*       */       } 
/*  7574 */       if (getExtensionCount() > 0) {
/*  7575 */         hash = 37 * hash + 6;
/*  7576 */         hash = 53 * hash + getExtensionList().hashCode();
/*       */       } 
/*  7578 */       if (getNestedTypeCount() > 0) {
/*  7579 */         hash = 37 * hash + 3;
/*  7580 */         hash = 53 * hash + getNestedTypeList().hashCode();
/*       */       } 
/*  7582 */       if (getEnumTypeCount() > 0) {
/*  7583 */         hash = 37 * hash + 4;
/*  7584 */         hash = 53 * hash + getEnumTypeList().hashCode();
/*       */       } 
/*  7586 */       if (getExtensionRangeCount() > 0) {
/*  7587 */         hash = 37 * hash + 5;
/*  7588 */         hash = 53 * hash + getExtensionRangeList().hashCode();
/*       */       } 
/*  7590 */       if (getOneofDeclCount() > 0) {
/*  7591 */         hash = 37 * hash + 8;
/*  7592 */         hash = 53 * hash + getOneofDeclList().hashCode();
/*       */       } 
/*  7594 */       if (hasOptions()) {
/*  7595 */         hash = 37 * hash + 7;
/*  7596 */         hash = 53 * hash + getOptions().hashCode();
/*       */       } 
/*  7598 */       if (getReservedRangeCount() > 0) {
/*  7599 */         hash = 37 * hash + 9;
/*  7600 */         hash = 53 * hash + getReservedRangeList().hashCode();
/*       */       } 
/*  7602 */       if (getReservedNameCount() > 0) {
/*  7603 */         hash = 37 * hash + 10;
/*  7604 */         hash = 53 * hash + getReservedNameList().hashCode();
/*       */       } 
/*  7606 */       hash = 29 * hash + this.unknownFields.hashCode();
/*  7607 */       this.memoizedHashCode = hash;
/*  7608 */       return hash;
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static DescriptorProto parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
/*  7614 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static DescriptorProto parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*  7620 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static DescriptorProto parseFrom(ByteString data) throws InvalidProtocolBufferException {
/*  7625 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static DescriptorProto parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*  7631 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static DescriptorProto parseFrom(byte[] data) throws InvalidProtocolBufferException {
/*  7635 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static DescriptorProto parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*  7641 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static DescriptorProto parseFrom(InputStream input) throws IOException {
/*  7645 */       return 
/*  7646 */         GeneratedMessageV3.<DescriptorProto>parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static DescriptorProto parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*  7652 */       return 
/*  7653 */         GeneratedMessageV3.<DescriptorProto>parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static DescriptorProto parseDelimitedFrom(InputStream input) throws IOException {
/*  7657 */       return 
/*  7658 */         GeneratedMessageV3.<DescriptorProto>parseDelimitedWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static DescriptorProto parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*  7664 */       return 
/*  7665 */         GeneratedMessageV3.<DescriptorProto>parseDelimitedWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static DescriptorProto parseFrom(CodedInputStream input) throws IOException {
/*  7670 */       return 
/*  7671 */         GeneratedMessageV3.<DescriptorProto>parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static DescriptorProto parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*  7677 */       return 
/*  7678 */         GeneratedMessageV3.<DescriptorProto>parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public Builder newBuilderForType() {
/*  7682 */       return newBuilder();
/*       */     } public static Builder newBuilder() {
/*  7684 */       return DEFAULT_INSTANCE.toBuilder();
/*       */     }
/*       */     public static Builder newBuilder(DescriptorProto prototype) {
/*  7687 */       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
/*       */     }
/*       */     
/*       */     public Builder toBuilder() {
/*  7691 */       return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder())
/*  7692 */         .mergeFrom(this);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     protected Builder newBuilderForType(BuilderParent parent) {
/*  7698 */       Builder builder = new Builder(parent);
/*  7699 */       return builder;
/*       */     }
/*       */     public static final class Builder extends GeneratedMessageV3.Builder<Builder> implements DescriptorProtoOrBuilder { private int bitField0_; private Object name_; private List<FieldDescriptorProto> field_; private RepeatedFieldBuilderV3<FieldDescriptorProto, FieldDescriptorProto.Builder, FieldDescriptorProtoOrBuilder> fieldBuilder_; private List<FieldDescriptorProto> extension_; private RepeatedFieldBuilderV3<FieldDescriptorProto, FieldDescriptorProto.Builder, FieldDescriptorProtoOrBuilder> extensionBuilder_; private List<DescriptorProto> nestedType_; private RepeatedFieldBuilderV3<DescriptorProto, Builder, DescriptorProtoOrBuilder> nestedTypeBuilder_; private List<EnumDescriptorProto> enumType_;
/*       */       private RepeatedFieldBuilderV3<EnumDescriptorProto, EnumDescriptorProto.Builder, EnumDescriptorProtoOrBuilder> enumTypeBuilder_;
/*       */       private List<ExtensionRange> extensionRange_;
/*       */       private RepeatedFieldBuilderV3<ExtensionRange, ExtensionRange.Builder, ExtensionRangeOrBuilder> extensionRangeBuilder_;
/*       */       private List<OneofDescriptorProto> oneofDecl_;
/*       */       private RepeatedFieldBuilderV3<OneofDescriptorProto, OneofDescriptorProto.Builder, OneofDescriptorProtoOrBuilder> oneofDeclBuilder_;
/*       */       private MessageOptions options_;
/*       */       private SingleFieldBuilderV3<MessageOptions, MessageOptions.Builder, MessageOptionsOrBuilder> optionsBuilder_;
/*       */       private List<ReservedRange> reservedRange_;
/*       */       private RepeatedFieldBuilderV3<ReservedRange, ReservedRange.Builder, ReservedRangeOrBuilder> reservedRangeBuilder_;
/*       */       private LazyStringList reservedName_;
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/*  7714 */         return DescriptorProtos.internal_static_google_protobuf_DescriptorProto_descriptor;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       protected FieldAccessorTable internalGetFieldAccessorTable() {
/*  7720 */         return DescriptorProtos.internal_static_google_protobuf_DescriptorProto_fieldAccessorTable
/*  7721 */           .ensureFieldAccessorsInitialized((Class) DescriptorProto.class, (Class)Builder.class);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private Builder()
/*       */       {
/*  8225 */         this.name_ = "";
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/*  8309 */         this
/*  8310 */           .field_ = Collections.emptyList();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/*  8549 */         this
/*  8550 */           .extension_ = Collections.emptyList();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/*  8789 */         this
/*  8790 */           .nestedType_ = Collections.emptyList();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/*  9029 */         this
/*  9030 */           .enumType_ = Collections.emptyList();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/*  9269 */         this
/*  9270 */           .extensionRange_ = Collections.emptyList();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/*  9509 */         this
/*  9510 */           .oneofDecl_ = Collections.emptyList();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/*  9869 */         this
/*  9870 */           .reservedRange_ = Collections.emptyList();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 10109 */         this.reservedName_ = LazyStringArrayList.EMPTY; maybeForceBuilderInitialization(); } private Builder(BuilderParent parent) { super(parent); this.name_ = ""; this.field_ = Collections.emptyList(); this.extension_ = Collections.emptyList(); this.nestedType_ = Collections.emptyList(); this.enumType_ = Collections.emptyList(); this.extensionRange_ = Collections.emptyList(); this.oneofDecl_ = Collections.emptyList(); this.reservedRange_ = Collections.emptyList(); this.reservedName_ = LazyStringArrayList.EMPTY; maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (GeneratedMessageV3.alwaysUseFieldBuilders) { getFieldFieldBuilder(); getExtensionFieldBuilder(); getNestedTypeFieldBuilder(); getEnumTypeFieldBuilder(); getExtensionRangeFieldBuilder(); getOneofDeclFieldBuilder(); getOptionsFieldBuilder(); getReservedRangeFieldBuilder(); }  } public Builder clear() { super.clear(); this.name_ = ""; this.bitField0_ &= 0xFFFFFFFE; if (this.fieldBuilder_ == null) { this.field_ = Collections.emptyList(); this.bitField0_ &= 0xFFFFFFFD; } else { this.fieldBuilder_.clear(); }  if (this.extensionBuilder_ == null) { this.extension_ = Collections.emptyList(); this.bitField0_ &= 0xFFFFFFFB; } else { this.extensionBuilder_.clear(); }  if (this.nestedTypeBuilder_ == null) { this.nestedType_ = Collections.emptyList(); this.bitField0_ &= 0xFFFFFFF7; } else { this.nestedTypeBuilder_.clear(); }  if (this.enumTypeBuilder_ == null) { this.enumType_ = Collections.emptyList(); this.bitField0_ &= 0xFFFFFFEF; } else { this.enumTypeBuilder_.clear(); }  if (this.extensionRangeBuilder_ == null) { this.extensionRange_ = Collections.emptyList(); this.bitField0_ &= 0xFFFFFFDF; } else { this.extensionRangeBuilder_.clear(); }  if (this.oneofDeclBuilder_ == null) { this.oneofDecl_ = Collections.emptyList(); this.bitField0_ &= 0xFFFFFFBF; } else { this.oneofDeclBuilder_.clear(); }  if (this.optionsBuilder_ == null) { this.options_ = null; } else { this.optionsBuilder_.clear(); }  this.bitField0_ &= 0xFFFFFF7F; if (this.reservedRangeBuilder_ == null) { this.reservedRange_ = Collections.emptyList(); this.bitField0_ &= 0xFFFFFEFF; } else { this.reservedRangeBuilder_.clear(); }  this.reservedName_ = LazyStringArrayList.EMPTY; this.bitField0_ &= 0xFFFFFDFF; return this; } public Descriptors.Descriptor getDescriptorForType() { return DescriptorProtos.internal_static_google_protobuf_DescriptorProto_descriptor; } public DescriptorProto getDefaultInstanceForType() { return DescriptorProto.getDefaultInstance(); } public DescriptorProto build() { DescriptorProto result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public DescriptorProto buildPartial() { DescriptorProto result = new DescriptorProto(this); int from_bitField0_ = this.bitField0_; int to_bitField0_ = 0; if ((from_bitField0_ & 0x1) != 0) to_bitField0_ |= 0x1;  result.name_ = this.name_; if (this.fieldBuilder_ == null) { if ((this.bitField0_ & 0x2) != 0) { this.field_ = Collections.unmodifiableList(this.field_); this.bitField0_ &= 0xFFFFFFFD; }  result.field_ = this.field_; } else { result.field_ = this.fieldBuilder_.build(); }  if (this.extensionBuilder_ == null) { if ((this.bitField0_ & 0x4) != 0) { this.extension_ = Collections.unmodifiableList(this.extension_); this.bitField0_ &= 0xFFFFFFFB; }  result.extension_ = this.extension_; } else { result.extension_ = this.extensionBuilder_.build(); }  if (this.nestedTypeBuilder_ == null) { if ((this.bitField0_ & 0x8) != 0) { this.nestedType_ = Collections.unmodifiableList(this.nestedType_); this.bitField0_ &= 0xFFFFFFF7; }  result.nestedType_ = this.nestedType_; } else { result.nestedType_ = this.nestedTypeBuilder_.build(); }  if (this.enumTypeBuilder_ == null) { if ((this.bitField0_ & 0x10) != 0) { this.enumType_ = Collections.unmodifiableList(this.enumType_); this.bitField0_ &= 0xFFFFFFEF; }  result.enumType_ = this.enumType_; } else { result.enumType_ = this.enumTypeBuilder_.build(); }  if (this.extensionRangeBuilder_ == null) { if ((this.bitField0_ & 0x20) != 0) { this.extensionRange_ = Collections.unmodifiableList(this.extensionRange_); this.bitField0_ &= 0xFFFFFFDF; }  result.extensionRange_ = this.extensionRange_; } else { result.extensionRange_ = this.extensionRangeBuilder_.build(); }  if (this.oneofDeclBuilder_ == null) { if ((this.bitField0_ & 0x40) != 0) { this.oneofDecl_ = Collections.unmodifiableList(this.oneofDecl_); this.bitField0_ &= 0xFFFFFFBF; }  result.oneofDecl_ = this.oneofDecl_; } else { result.oneofDecl_ = this.oneofDeclBuilder_.build(); }  if ((from_bitField0_ & 0x80) != 0) { if (this.optionsBuilder_ == null) { result.options_ = this.options_; } else { result.options_ = this.optionsBuilder_.build(); }  to_bitField0_ |= 0x2; }  if (this.reservedRangeBuilder_ == null) { if ((this.bitField0_ & 0x100) != 0) { this.reservedRange_ = Collections.unmodifiableList(this.reservedRange_); this.bitField0_ &= 0xFFFFFEFF; }  result.reservedRange_ = this.reservedRange_; } else { result.reservedRange_ = this.reservedRangeBuilder_.build(); }  if ((this.bitField0_ & 0x200) != 0) { this.reservedName_ = this.reservedName_.getUnmodifiableView(); this.bitField0_ &= 0xFFFFFDFF; }  result.reservedName_ = this.reservedName_; result.bitField0_ = to_bitField0_; onBuilt(); return result; } public Builder clone() { return super.clone(); } public Builder setField(Descriptors.FieldDescriptor field, Object value) { return super.setField(field, value); } public Builder clearField(Descriptors.FieldDescriptor field) { return super.clearField(field); } public Builder clearOneof(Descriptors.OneofDescriptor oneof) { return super.clearOneof(oneof); } public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) { return super.setRepeatedField(field, index, value); } public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) { return super.addRepeatedField(field, value); } public Builder mergeFrom(Message other) { if (other instanceof DescriptorProto) return mergeFrom((DescriptorProto)other);  super.mergeFrom(other); return this; } public Builder mergeFrom(DescriptorProto other) { if (other == DescriptorProto.getDefaultInstance()) return this;  if (other.hasName()) { this.bitField0_ |= 0x1; this.name_ = other.name_; onChanged(); }  if (this.fieldBuilder_ == null) { if (!other.field_.isEmpty()) { if (this.field_.isEmpty()) { this.field_ = other.field_; this.bitField0_ &= 0xFFFFFFFD; } else { ensureFieldIsMutable(); this.field_.addAll(other.field_); }  onChanged(); }  } else if (!other.field_.isEmpty()) { if (this.fieldBuilder_.isEmpty()) { this.fieldBuilder_.dispose(); this.fieldBuilder_ = null; this.field_ = other.field_; this.bitField0_ &= 0xFFFFFFFD; this.fieldBuilder_ = GeneratedMessageV3.alwaysUseFieldBuilders ? getFieldFieldBuilder() : null; } else { this.fieldBuilder_.addAllMessages(other.field_); }  }  if (this.extensionBuilder_ == null) { if (!other.extension_.isEmpty()) { if (this.extension_.isEmpty()) { this.extension_ = other.extension_; this.bitField0_ &= 0xFFFFFFFB; } else { ensureExtensionIsMutable(); this.extension_.addAll(other.extension_); }  onChanged(); }  } else if (!other.extension_.isEmpty()) { if (this.extensionBuilder_.isEmpty()) { this.extensionBuilder_.dispose(); this.extensionBuilder_ = null; this.extension_ = other.extension_; this.bitField0_ &= 0xFFFFFFFB; this.extensionBuilder_ = GeneratedMessageV3.alwaysUseFieldBuilders ? getExtensionFieldBuilder() : null; } else { this.extensionBuilder_.addAllMessages(other.extension_); }  }  if (this.nestedTypeBuilder_ == null) { if (!other.nestedType_.isEmpty()) { if (this.nestedType_.isEmpty()) { this.nestedType_ = other.nestedType_; this.bitField0_ &= 0xFFFFFFF7; } else { ensureNestedTypeIsMutable(); this.nestedType_.addAll(other.nestedType_); }  onChanged(); }  } else if (!other.nestedType_.isEmpty()) { if (this.nestedTypeBuilder_.isEmpty()) { this.nestedTypeBuilder_.dispose(); this.nestedTypeBuilder_ = null; this.nestedType_ = other.nestedType_; this.bitField0_ &= 0xFFFFFFF7; this.nestedTypeBuilder_ = GeneratedMessageV3.alwaysUseFieldBuilders ? getNestedTypeFieldBuilder() : null; } else { this.nestedTypeBuilder_.addAllMessages(other.nestedType_); }  }  if (this.enumTypeBuilder_ == null) { if (!other.enumType_.isEmpty()) { if (this.enumType_.isEmpty()) { this.enumType_ = other.enumType_; this.bitField0_ &= 0xFFFFFFEF; } else { ensureEnumTypeIsMutable(); this.enumType_.addAll(other.enumType_); }  onChanged(); }  } else if (!other.enumType_.isEmpty()) { if (this.enumTypeBuilder_.isEmpty()) { this.enumTypeBuilder_.dispose(); this.enumTypeBuilder_ = null; this.enumType_ = other.enumType_; this.bitField0_ &= 0xFFFFFFEF; this.enumTypeBuilder_ = GeneratedMessageV3.alwaysUseFieldBuilders ? getEnumTypeFieldBuilder() : null; } else { this.enumTypeBuilder_.addAllMessages(other.enumType_); }  }  if (this.extensionRangeBuilder_ == null) { if (!other.extensionRange_.isEmpty()) { if (this.extensionRange_.isEmpty()) { this.extensionRange_ = other.extensionRange_; this.bitField0_ &= 0xFFFFFFDF; } else { ensureExtensionRangeIsMutable(); this.extensionRange_.addAll(other.extensionRange_); }  onChanged(); }  } else if (!other.extensionRange_.isEmpty()) { if (this.extensionRangeBuilder_.isEmpty()) { this.extensionRangeBuilder_.dispose(); this.extensionRangeBuilder_ = null; this.extensionRange_ = other.extensionRange_; this.bitField0_ &= 0xFFFFFFDF; this.extensionRangeBuilder_ = GeneratedMessageV3.alwaysUseFieldBuilders ? getExtensionRangeFieldBuilder() : null; } else { this.extensionRangeBuilder_.addAllMessages(other.extensionRange_); }  }  if (this.oneofDeclBuilder_ == null) { if (!other.oneofDecl_.isEmpty()) { if (this.oneofDecl_.isEmpty()) { this.oneofDecl_ = other.oneofDecl_; this.bitField0_ &= 0xFFFFFFBF; } else { ensureOneofDeclIsMutable(); this.oneofDecl_.addAll(other.oneofDecl_); }  onChanged(); }  } else if (!other.oneofDecl_.isEmpty()) { if (this.oneofDeclBuilder_.isEmpty()) { this.oneofDeclBuilder_.dispose(); this.oneofDeclBuilder_ = null; this.oneofDecl_ = other.oneofDecl_; this.bitField0_ &= 0xFFFFFFBF; this.oneofDeclBuilder_ = GeneratedMessageV3.alwaysUseFieldBuilders ? getOneofDeclFieldBuilder() : null; } else { this.oneofDeclBuilder_.addAllMessages(other.oneofDecl_); }  }  if (other.hasOptions()) mergeOptions(other.getOptions());  if (this.reservedRangeBuilder_ == null) { if (!other.reservedRange_.isEmpty()) { if (this.reservedRange_.isEmpty()) { this.reservedRange_ = other.reservedRange_; this.bitField0_ &= 0xFFFFFEFF; } else { ensureReservedRangeIsMutable(); this.reservedRange_.addAll(other.reservedRange_); }  onChanged(); }  } else if (!other.reservedRange_.isEmpty()) { if (this.reservedRangeBuilder_.isEmpty()) { this.reservedRangeBuilder_.dispose(); this.reservedRangeBuilder_ = null; this.reservedRange_ = other.reservedRange_; this.bitField0_ &= 0xFFFFFEFF; this.reservedRangeBuilder_ = GeneratedMessageV3.alwaysUseFieldBuilders ? getReservedRangeFieldBuilder() : null; } else { this.reservedRangeBuilder_.addAllMessages(other.reservedRange_); }  }  if (!other.reservedName_.isEmpty()) { if (this.reservedName_.isEmpty()) { this.reservedName_ = other.reservedName_; this.bitField0_ &= 0xFFFFFDFF; } else { ensureReservedNameIsMutable(); this.reservedName_.addAll(other.reservedName_); }  onChanged(); }  mergeUnknownFields(other.unknownFields); onChanged(); return this; } public final boolean isInitialized() { int i; for (i = 0; i < getFieldCount(); i++) { if (!getField(i).isInitialized()) return false;  }  for (i = 0; i < getExtensionCount(); i++) { if (!getExtension(i).isInitialized()) return false;  }  for (i = 0; i < getNestedTypeCount(); i++) { if (!getNestedType(i).isInitialized()) return false;  }  for (i = 0; i < getEnumTypeCount(); i++) { if (!getEnumType(i).isInitialized()) return false;  }  for (i = 0; i < getExtensionRangeCount(); i++) { if (!getExtensionRange(i).isInitialized()) return false;  }  for (i = 0; i < getOneofDeclCount(); i++) { if (!getOneofDecl(i).isInitialized()) return false;  }  if (hasOptions() && !getOptions().isInitialized()) return false;  return true; } public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { DescriptorProto parsedMessage = null; try { parsedMessage = DescriptorProto.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (DescriptorProto)e.getUnfinishedMessage(); throw e.unwrapIOException(); } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; } public boolean hasName() { return ((this.bitField0_ & 0x1) != 0); } public String getName() { Object ref = this.name_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.name_ = s;  return s; }  return (String)ref; } public ByteString getNameBytes() { Object ref = this.name_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.name_ = b; return b; }  return (ByteString)ref; } public Builder setName(String value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x1; this.name_ = value; onChanged(); return this; } public Builder clearName() { this.bitField0_ &= 0xFFFFFFFE; this.name_ = DescriptorProto.getDefaultInstance().getName(); onChanged(); return this; } public Builder setNameBytes(ByteString value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x1; this.name_ = value; onChanged(); return this; } private void ensureFieldIsMutable() { if ((this.bitField0_ & 0x2) == 0) { this.field_ = new ArrayList<>(this.field_); this.bitField0_ |= 0x2; }  } public List<FieldDescriptorProto> getFieldList() { if (this.fieldBuilder_ == null) return Collections.unmodifiableList(this.field_);  return this.fieldBuilder_.getMessageList(); } public int getFieldCount() { if (this.fieldBuilder_ == null) return this.field_.size();  return this.fieldBuilder_.getCount(); } public FieldDescriptorProto getField(int index) { if (this.fieldBuilder_ == null) return this.field_.get(index);  return this.fieldBuilder_.getMessage(index); } public Builder setField(int index, FieldDescriptorProto value) { if (this.fieldBuilder_ == null) { if (value == null) throw new NullPointerException();  ensureFieldIsMutable(); this.field_.set(index, value); onChanged(); } else { this.fieldBuilder_.setMessage(index, value); }  return this; } public Builder setField(int index, FieldDescriptorProto.Builder builderForValue) { if (this.fieldBuilder_ == null) { ensureFieldIsMutable(); this.field_.set(index, builderForValue.build()); onChanged(); } else { this.fieldBuilder_.setMessage(index, builderForValue.build()); }  return this; } public Builder addField(FieldDescriptorProto value) { if (this.fieldBuilder_ == null) { if (value == null) throw new NullPointerException();  ensureFieldIsMutable(); this.field_.add(value); onChanged(); } else { this.fieldBuilder_.addMessage(value); }  return this; } public Builder addField(int index, FieldDescriptorProto value) { if (this.fieldBuilder_ == null) { if (value == null) throw new NullPointerException();  ensureFieldIsMutable(); this.field_.add(index, value); onChanged(); } else { this.fieldBuilder_.addMessage(index, value); }  return this; } public Builder addField(FieldDescriptorProto.Builder builderForValue) { if (this.fieldBuilder_ == null) { ensureFieldIsMutable(); this.field_.add(builderForValue.build()); onChanged(); } else { this.fieldBuilder_.addMessage(builderForValue.build()); }  return this; } public Builder addField(int index, FieldDescriptorProto.Builder builderForValue) { if (this.fieldBuilder_ == null) { ensureFieldIsMutable(); this.field_.add(index, builderForValue.build()); onChanged(); } else { this.fieldBuilder_.addMessage(index, builderForValue.build()); }  return this; } public Builder addAllField(Iterable<? extends FieldDescriptorProto> values) { if (this.fieldBuilder_ == null) { ensureFieldIsMutable(); AbstractMessageLite.Builder.addAll(values, this.field_); onChanged(); } else { this.fieldBuilder_.addAllMessages(values); }  return this; } public Builder clearField() { if (this.fieldBuilder_ == null) { this.field_ = Collections.emptyList(); this.bitField0_ &= 0xFFFFFFFD; onChanged(); } else { this.fieldBuilder_.clear(); }  return this; } public Builder removeField(int index) { if (this.fieldBuilder_ == null) { ensureFieldIsMutable(); this.field_.remove(index); onChanged(); } else { this.fieldBuilder_.remove(index); }  return this; } public FieldDescriptorProto.Builder getFieldBuilder(int index) { return getFieldFieldBuilder().getBuilder(index); } public FieldDescriptorProtoOrBuilder getFieldOrBuilder(int index) { if (this.fieldBuilder_ == null) return this.field_.get(index);  return this.fieldBuilder_.getMessageOrBuilder(index); } public List<? extends FieldDescriptorProtoOrBuilder> getFieldOrBuilderList() { if (this.fieldBuilder_ != null) return this.fieldBuilder_.getMessageOrBuilderList();  return Collections.unmodifiableList((List)this.field_); } public FieldDescriptorProto.Builder addFieldBuilder() { return getFieldFieldBuilder().addBuilder(FieldDescriptorProto.getDefaultInstance()); } public FieldDescriptorProto.Builder addFieldBuilder(int index) { return getFieldFieldBuilder().addBuilder(index, FieldDescriptorProto.getDefaultInstance()); } public List<FieldDescriptorProto.Builder> getFieldBuilderList() { return getFieldFieldBuilder().getBuilderList(); } private RepeatedFieldBuilderV3<FieldDescriptorProto, FieldDescriptorProto.Builder, FieldDescriptorProtoOrBuilder> getFieldFieldBuilder() { if (this.fieldBuilder_ == null) { this.fieldBuilder_ = new RepeatedFieldBuilderV3<>(this.field_, ((this.bitField0_ & 0x2) != 0), getParentForChildren(), isClean()); this.field_ = null; }  return this.fieldBuilder_; } private void ensureExtensionIsMutable() { if ((this.bitField0_ & 0x4) == 0) { this.extension_ = new ArrayList<>(this.extension_); this.bitField0_ |= 0x4; }  } public List<FieldDescriptorProto> getExtensionList() { if (this.extensionBuilder_ == null) return Collections.unmodifiableList(this.extension_);  return this.extensionBuilder_.getMessageList(); } public int getExtensionCount() { if (this.extensionBuilder_ == null) return this.extension_.size();  return this.extensionBuilder_.getCount(); } public FieldDescriptorProto getExtension(int index) { if (this.extensionBuilder_ == null) return this.extension_.get(index);  return this.extensionBuilder_.getMessage(index); } public Builder setExtension(int index, FieldDescriptorProto value) { if (this.extensionBuilder_ == null) { if (value == null) throw new NullPointerException();  ensureExtensionIsMutable(); this.extension_.set(index, value); onChanged(); } else { this.extensionBuilder_.setMessage(index, value); }  return this; } public Builder setExtension(int index, FieldDescriptorProto.Builder builderForValue) { if (this.extensionBuilder_ == null) { ensureExtensionIsMutable(); this.extension_.set(index, builderForValue.build()); onChanged(); } else { this.extensionBuilder_.setMessage(index, builderForValue.build()); }  return this; } public Builder addExtension(FieldDescriptorProto value) { if (this.extensionBuilder_ == null) { if (value == null) throw new NullPointerException();  ensureExtensionIsMutable(); this.extension_.add(value); onChanged(); } else { this.extensionBuilder_.addMessage(value); }  return this; } public Builder addExtension(int index, FieldDescriptorProto value) { if (this.extensionBuilder_ == null) { if (value == null) throw new NullPointerException();  ensureExtensionIsMutable(); this.extension_.add(index, value); onChanged(); } else { this.extensionBuilder_.addMessage(index, value); }  return this; } public Builder addExtension(FieldDescriptorProto.Builder builderForValue) { if (this.extensionBuilder_ == null) { ensureExtensionIsMutable(); this.extension_.add(builderForValue.build()); onChanged(); } else { this.extensionBuilder_.addMessage(builderForValue.build()); }  return this; } public Builder addExtension(int index, FieldDescriptorProto.Builder builderForValue) { if (this.extensionBuilder_ == null) { ensureExtensionIsMutable(); this.extension_.add(index, builderForValue.build()); onChanged(); } else { this.extensionBuilder_.addMessage(index, builderForValue.build()); }  return this; } public Builder addAllExtension(Iterable<? extends FieldDescriptorProto> values) { if (this.extensionBuilder_ == null) { ensureExtensionIsMutable(); AbstractMessageLite.Builder.addAll(values, this.extension_); onChanged(); } else { this.extensionBuilder_.addAllMessages(values); }  return this; } public Builder clearExtension() { if (this.extensionBuilder_ == null) { this.extension_ = Collections.emptyList(); this.bitField0_ &= 0xFFFFFFFB; onChanged(); } else { this.extensionBuilder_.clear(); }  return this; } public Builder removeExtension(int index) { if (this.extensionBuilder_ == null) { ensureExtensionIsMutable(); this.extension_.remove(index); onChanged(); } else { this.extensionBuilder_.remove(index); }  return this; } public FieldDescriptorProto.Builder getExtensionBuilder(int index) { return getExtensionFieldBuilder().getBuilder(index); } public FieldDescriptorProtoOrBuilder getExtensionOrBuilder(int index) { if (this.extensionBuilder_ == null) return this.extension_.get(index);  return this.extensionBuilder_.getMessageOrBuilder(index); } public List<? extends FieldDescriptorProtoOrBuilder> getExtensionOrBuilderList() { if (this.extensionBuilder_ != null) return this.extensionBuilder_.getMessageOrBuilderList();  return Collections.unmodifiableList((List)this.extension_); } public FieldDescriptorProto.Builder addExtensionBuilder() { return getExtensionFieldBuilder().addBuilder(FieldDescriptorProto.getDefaultInstance()); } public FieldDescriptorProto.Builder addExtensionBuilder(int index) { return getExtensionFieldBuilder().addBuilder(index, FieldDescriptorProto.getDefaultInstance()); } public List<FieldDescriptorProto.Builder> getExtensionBuilderList() { return getExtensionFieldBuilder().getBuilderList(); } private RepeatedFieldBuilderV3<FieldDescriptorProto, FieldDescriptorProto.Builder, FieldDescriptorProtoOrBuilder> getExtensionFieldBuilder() { if (this.extensionBuilder_ == null) { this.extensionBuilder_ = new RepeatedFieldBuilderV3<>(this.extension_, ((this.bitField0_ & 0x4) != 0), getParentForChildren(), isClean()); this.extension_ = null; }  return this.extensionBuilder_; } private void ensureNestedTypeIsMutable() { if ((this.bitField0_ & 0x8) == 0) { this.nestedType_ = new ArrayList<>(this.nestedType_); this.bitField0_ |= 0x8; }  } public List<DescriptorProto> getNestedTypeList() { if (this.nestedTypeBuilder_ == null) return Collections.unmodifiableList(this.nestedType_);  return this.nestedTypeBuilder_.getMessageList(); } public int getNestedTypeCount() { if (this.nestedTypeBuilder_ == null) return this.nestedType_.size();  return this.nestedTypeBuilder_.getCount(); } public DescriptorProto getNestedType(int index) { if (this.nestedTypeBuilder_ == null) return this.nestedType_.get(index);  return this.nestedTypeBuilder_.getMessage(index); } public Builder setNestedType(int index, DescriptorProto value) { if (this.nestedTypeBuilder_ == null) { if (value == null) throw new NullPointerException();  ensureNestedTypeIsMutable(); this.nestedType_.set(index, value); onChanged(); } else { this.nestedTypeBuilder_.setMessage(index, value); }  return this; } public Builder setNestedType(int index, Builder builderForValue) { if (this.nestedTypeBuilder_ == null) { ensureNestedTypeIsMutable(); this.nestedType_.set(index, builderForValue.build()); onChanged(); } else { this.nestedTypeBuilder_.setMessage(index, builderForValue.build()); }  return this; } public Builder addNestedType(DescriptorProto value) { if (this.nestedTypeBuilder_ == null) { if (value == null) throw new NullPointerException();  ensureNestedTypeIsMutable(); this.nestedType_.add(value); onChanged(); } else { this.nestedTypeBuilder_.addMessage(value); }  return this; } public Builder addNestedType(int index, DescriptorProto value) { if (this.nestedTypeBuilder_ == null) { if (value == null) throw new NullPointerException();  ensureNestedTypeIsMutable(); this.nestedType_.add(index, value); onChanged(); } else { this.nestedTypeBuilder_.addMessage(index, value); }  return this; } public Builder addNestedType(Builder builderForValue) { if (this.nestedTypeBuilder_ == null) { ensureNestedTypeIsMutable(); this.nestedType_.add(builderForValue.build()); onChanged(); } else { this.nestedTypeBuilder_.addMessage(builderForValue.build()); }  return this; } public Builder addNestedType(int index, Builder builderForValue) { if (this.nestedTypeBuilder_ == null) { ensureNestedTypeIsMutable(); this.nestedType_.add(index, builderForValue.build()); onChanged(); } else { this.nestedTypeBuilder_.addMessage(index, builderForValue.build()); }  return this; } public Builder addAllNestedType(Iterable<? extends DescriptorProto> values) { if (this.nestedTypeBuilder_ == null) { ensureNestedTypeIsMutable(); AbstractMessageLite.Builder.addAll(values, this.nestedType_); onChanged(); } else { this.nestedTypeBuilder_.addAllMessages(values); }  return this; } public Builder clearNestedType() { if (this.nestedTypeBuilder_ == null) { this.nestedType_ = Collections.emptyList(); this.bitField0_ &= 0xFFFFFFF7; onChanged(); } else { this.nestedTypeBuilder_.clear(); }  return this; } public Builder removeNestedType(int index) { if (this.nestedTypeBuilder_ == null) { ensureNestedTypeIsMutable(); this.nestedType_.remove(index); onChanged(); } else { this.nestedTypeBuilder_.remove(index); }  return this; } public Builder getNestedTypeBuilder(int index) { return getNestedTypeFieldBuilder().getBuilder(index); } public DescriptorProtoOrBuilder getNestedTypeOrBuilder(int index) { if (this.nestedTypeBuilder_ == null) return this.nestedType_.get(index);  return this.nestedTypeBuilder_.getMessageOrBuilder(index); } public List<? extends DescriptorProtoOrBuilder> getNestedTypeOrBuilderList() { if (this.nestedTypeBuilder_ != null) return this.nestedTypeBuilder_.getMessageOrBuilderList();  return Collections.unmodifiableList((List)this.nestedType_); } public Builder addNestedTypeBuilder() { return getNestedTypeFieldBuilder().addBuilder(DescriptorProto.getDefaultInstance()); } public Builder addNestedTypeBuilder(int index) { return getNestedTypeFieldBuilder().addBuilder(index, DescriptorProto.getDefaultInstance()); } public List<Builder> getNestedTypeBuilderList() { return getNestedTypeFieldBuilder().getBuilderList(); } private RepeatedFieldBuilderV3<DescriptorProto, Builder, DescriptorProtoOrBuilder> getNestedTypeFieldBuilder() { if (this.nestedTypeBuilder_ == null) { this.nestedTypeBuilder_ = new RepeatedFieldBuilderV3<>(this.nestedType_, ((this.bitField0_ & 0x8) != 0), getParentForChildren(), isClean()); this.nestedType_ = null; }  return this.nestedTypeBuilder_; } private void ensureEnumTypeIsMutable() { if ((this.bitField0_ & 0x10) == 0) { this.enumType_ = new ArrayList<>(this.enumType_); this.bitField0_ |= 0x10; }  } public List<EnumDescriptorProto> getEnumTypeList() { if (this.enumTypeBuilder_ == null) return Collections.unmodifiableList(this.enumType_);  return this.enumTypeBuilder_.getMessageList(); }
/*       */       public int getEnumTypeCount() { if (this.enumTypeBuilder_ == null) return this.enumType_.size();  return this.enumTypeBuilder_.getCount(); }
/* 10111 */       private void ensureReservedNameIsMutable() { if ((this.bitField0_ & 0x200) == 0)
/* 10112 */         { this.reservedName_ = new LazyStringArrayList(this.reservedName_);
/* 10113 */           this.bitField0_ |= 0x200; }  } public EnumDescriptorProto getEnumType(int index) { if (this.enumTypeBuilder_ == null) return this.enumType_.get(index);  return this.enumTypeBuilder_.getMessage(index); } public Builder setEnumType(int index, EnumDescriptorProto value) { if (this.enumTypeBuilder_ == null) { if (value == null) throw new NullPointerException();  ensureEnumTypeIsMutable(); this.enumType_.set(index, value); onChanged(); } else { this.enumTypeBuilder_.setMessage(index, value); }  return this; } public Builder setEnumType(int index, EnumDescriptorProto.Builder builderForValue) { if (this.enumTypeBuilder_ == null) { ensureEnumTypeIsMutable(); this.enumType_.set(index, builderForValue.build()); onChanged(); } else { this.enumTypeBuilder_.setMessage(index, builderForValue.build()); }  return this; } public Builder addEnumType(EnumDescriptorProto value) { if (this.enumTypeBuilder_ == null) { if (value == null) throw new NullPointerException();  ensureEnumTypeIsMutable(); this.enumType_.add(value); onChanged(); } else { this.enumTypeBuilder_.addMessage(value); }  return this; } public Builder addEnumType(int index, EnumDescriptorProto value) { if (this.enumTypeBuilder_ == null) { if (value == null) throw new NullPointerException();  ensureEnumTypeIsMutable(); this.enumType_.add(index, value); onChanged(); } else { this.enumTypeBuilder_.addMessage(index, value); }  return this; } public Builder addEnumType(EnumDescriptorProto.Builder builderForValue) { if (this.enumTypeBuilder_ == null) { ensureEnumTypeIsMutable(); this.enumType_.add(builderForValue.build()); onChanged(); } else { this.enumTypeBuilder_.addMessage(builderForValue.build()); }  return this; } public Builder addEnumType(int index, EnumDescriptorProto.Builder builderForValue) { if (this.enumTypeBuilder_ == null) { ensureEnumTypeIsMutable(); this.enumType_.add(index, builderForValue.build()); onChanged(); } else { this.enumTypeBuilder_.addMessage(index, builderForValue.build()); }  return this; } public Builder addAllEnumType(Iterable<? extends EnumDescriptorProto> values) { if (this.enumTypeBuilder_ == null) { ensureEnumTypeIsMutable(); AbstractMessageLite.Builder.addAll(values, this.enumType_); onChanged(); } else { this.enumTypeBuilder_.addAllMessages(values); }  return this; } public Builder clearEnumType() { if (this.enumTypeBuilder_ == null) { this.enumType_ = Collections.emptyList(); this.bitField0_ &= 0xFFFFFFEF; onChanged(); } else { this.enumTypeBuilder_.clear(); }  return this; } public Builder removeEnumType(int index) { if (this.enumTypeBuilder_ == null) { ensureEnumTypeIsMutable(); this.enumType_.remove(index); onChanged(); } else { this.enumTypeBuilder_.remove(index); }  return this; } public EnumDescriptorProto.Builder getEnumTypeBuilder(int index) { return getEnumTypeFieldBuilder().getBuilder(index); } public EnumDescriptorProtoOrBuilder getEnumTypeOrBuilder(int index) { if (this.enumTypeBuilder_ == null) return this.enumType_.get(index);  return this.enumTypeBuilder_.getMessageOrBuilder(index); } public List<? extends EnumDescriptorProtoOrBuilder> getEnumTypeOrBuilderList() { if (this.enumTypeBuilder_ != null) return this.enumTypeBuilder_.getMessageOrBuilderList();  return Collections.unmodifiableList((List)this.enumType_); } public EnumDescriptorProto.Builder addEnumTypeBuilder() { return getEnumTypeFieldBuilder().addBuilder(EnumDescriptorProto.getDefaultInstance()); } public EnumDescriptorProto.Builder addEnumTypeBuilder(int index) { return getEnumTypeFieldBuilder().addBuilder(index, EnumDescriptorProto.getDefaultInstance()); } public List<EnumDescriptorProto.Builder> getEnumTypeBuilderList() { return getEnumTypeFieldBuilder().getBuilderList(); } private RepeatedFieldBuilderV3<EnumDescriptorProto, EnumDescriptorProto.Builder, EnumDescriptorProtoOrBuilder> getEnumTypeFieldBuilder() { if (this.enumTypeBuilder_ == null) { this.enumTypeBuilder_ = new RepeatedFieldBuilderV3<>(this.enumType_, ((this.bitField0_ & 0x10) != 0), getParentForChildren(), isClean()); this.enumType_ = null; }  return this.enumTypeBuilder_; } private void ensureExtensionRangeIsMutable() { if ((this.bitField0_ & 0x20) == 0) { this.extensionRange_ = new ArrayList<>(this.extensionRange_); this.bitField0_ |= 0x20; }  } public List<ExtensionRange> getExtensionRangeList() { if (this.extensionRangeBuilder_ == null) return Collections.unmodifiableList(this.extensionRange_);  return this.extensionRangeBuilder_.getMessageList(); } public int getExtensionRangeCount() { if (this.extensionRangeBuilder_ == null) return this.extensionRange_.size();  return this.extensionRangeBuilder_.getCount(); } public ExtensionRange getExtensionRange(int index) { if (this.extensionRangeBuilder_ == null) return this.extensionRange_.get(index);  return this.extensionRangeBuilder_.getMessage(index); } public Builder setExtensionRange(int index, ExtensionRange value) { if (this.extensionRangeBuilder_ == null) { if (value == null) throw new NullPointerException();  ensureExtensionRangeIsMutable(); this.extensionRange_.set(index, value); onChanged(); } else { this.extensionRangeBuilder_.setMessage(index, value); }  return this; } public Builder setExtensionRange(int index, ExtensionRange.Builder builderForValue) { if (this.extensionRangeBuilder_ == null) { ensureExtensionRangeIsMutable(); this.extensionRange_.set(index, builderForValue.build()); onChanged(); } else { this.extensionRangeBuilder_.setMessage(index, builderForValue.build()); }  return this; } public Builder addExtensionRange(ExtensionRange value) { if (this.extensionRangeBuilder_ == null) { if (value == null) throw new NullPointerException();  ensureExtensionRangeIsMutable(); this.extensionRange_.add(value); onChanged(); } else { this.extensionRangeBuilder_.addMessage(value); }  return this; } public Builder addExtensionRange(int index, ExtensionRange value) { if (this.extensionRangeBuilder_ == null) { if (value == null) throw new NullPointerException();  ensureExtensionRangeIsMutable(); this.extensionRange_.add(index, value); onChanged(); } else { this.extensionRangeBuilder_.addMessage(index, value); }  return this; } public Builder addExtensionRange(ExtensionRange.Builder builderForValue) { if (this.extensionRangeBuilder_ == null) { ensureExtensionRangeIsMutable(); this.extensionRange_.add(builderForValue.build()); onChanged(); } else { this.extensionRangeBuilder_.addMessage(builderForValue.build()); }  return this; } public Builder addExtensionRange(int index, ExtensionRange.Builder builderForValue) { if (this.extensionRangeBuilder_ == null) { ensureExtensionRangeIsMutable(); this.extensionRange_.add(index, builderForValue.build()); onChanged(); } else { this.extensionRangeBuilder_.addMessage(index, builderForValue.build()); }  return this; } public Builder addAllExtensionRange(Iterable<? extends ExtensionRange> values) { if (this.extensionRangeBuilder_ == null) { ensureExtensionRangeIsMutable(); AbstractMessageLite.Builder.addAll(values, this.extensionRange_); onChanged(); } else { this.extensionRangeBuilder_.addAllMessages(values); }  return this; } public Builder clearExtensionRange() { if (this.extensionRangeBuilder_ == null) { this.extensionRange_ = Collections.emptyList(); this.bitField0_ &= 0xFFFFFFDF; onChanged(); } else { this.extensionRangeBuilder_.clear(); }  return this; } public Builder removeExtensionRange(int index) { if (this.extensionRangeBuilder_ == null) { ensureExtensionRangeIsMutable(); this.extensionRange_.remove(index); onChanged(); } else { this.extensionRangeBuilder_.remove(index); }  return this; } public ExtensionRange.Builder getExtensionRangeBuilder(int index) { return getExtensionRangeFieldBuilder().getBuilder(index); } public ExtensionRangeOrBuilder getExtensionRangeOrBuilder(int index) { if (this.extensionRangeBuilder_ == null) return this.extensionRange_.get(index);  return this.extensionRangeBuilder_.getMessageOrBuilder(index); } public List<? extends ExtensionRangeOrBuilder> getExtensionRangeOrBuilderList() { if (this.extensionRangeBuilder_ != null) return this.extensionRangeBuilder_.getMessageOrBuilderList();  return Collections.unmodifiableList((List)this.extensionRange_); } public ExtensionRange.Builder addExtensionRangeBuilder() { return getExtensionRangeFieldBuilder().addBuilder(ExtensionRange.getDefaultInstance()); } public ExtensionRange.Builder addExtensionRangeBuilder(int index) { return getExtensionRangeFieldBuilder().addBuilder(index, ExtensionRange.getDefaultInstance()); } public List<ExtensionRange.Builder> getExtensionRangeBuilderList() { return getExtensionRangeFieldBuilder().getBuilderList(); } private RepeatedFieldBuilderV3<ExtensionRange, ExtensionRange.Builder, ExtensionRangeOrBuilder> getExtensionRangeFieldBuilder() { if (this.extensionRangeBuilder_ == null) { this.extensionRangeBuilder_ = new RepeatedFieldBuilderV3<>(this.extensionRange_, ((this.bitField0_ & 0x20) != 0), getParentForChildren(), isClean()); this.extensionRange_ = null; }  return this.extensionRangeBuilder_; } private void ensureOneofDeclIsMutable() { if ((this.bitField0_ & 0x40) == 0) { this.oneofDecl_ = new ArrayList<>(this.oneofDecl_); this.bitField0_ |= 0x40; }  } public List<OneofDescriptorProto> getOneofDeclList() { if (this.oneofDeclBuilder_ == null) return Collections.unmodifiableList(this.oneofDecl_);  return this.oneofDeclBuilder_.getMessageList(); } public int getOneofDeclCount() { if (this.oneofDeclBuilder_ == null) return this.oneofDecl_.size();  return this.oneofDeclBuilder_.getCount(); } public OneofDescriptorProto getOneofDecl(int index) { if (this.oneofDeclBuilder_ == null) return this.oneofDecl_.get(index);  return this.oneofDeclBuilder_.getMessage(index); } public Builder setOneofDecl(int index, OneofDescriptorProto value) { if (this.oneofDeclBuilder_ == null) { if (value == null) throw new NullPointerException();  ensureOneofDeclIsMutable(); this.oneofDecl_.set(index, value); onChanged(); } else { this.oneofDeclBuilder_.setMessage(index, value); }  return this; } public Builder setOneofDecl(int index, OneofDescriptorProto.Builder builderForValue) { if (this.oneofDeclBuilder_ == null) { ensureOneofDeclIsMutable(); this.oneofDecl_.set(index, builderForValue.build()); onChanged(); } else { this.oneofDeclBuilder_.setMessage(index, builderForValue.build()); }  return this; } public Builder addOneofDecl(OneofDescriptorProto value) { if (this.oneofDeclBuilder_ == null) { if (value == null) throw new NullPointerException();  ensureOneofDeclIsMutable(); this.oneofDecl_.add(value); onChanged(); } else { this.oneofDeclBuilder_.addMessage(value); }  return this; } public Builder addOneofDecl(int index, OneofDescriptorProto value) { if (this.oneofDeclBuilder_ == null) { if (value == null) throw new NullPointerException();  ensureOneofDeclIsMutable(); this.oneofDecl_.add(index, value); onChanged(); } else { this.oneofDeclBuilder_.addMessage(index, value); }  return this; } public Builder addOneofDecl(OneofDescriptorProto.Builder builderForValue) { if (this.oneofDeclBuilder_ == null) { ensureOneofDeclIsMutable(); this.oneofDecl_.add(builderForValue.build()); onChanged(); } else { this.oneofDeclBuilder_.addMessage(builderForValue.build()); }  return this; } public Builder addOneofDecl(int index, OneofDescriptorProto.Builder builderForValue) { if (this.oneofDeclBuilder_ == null) { ensureOneofDeclIsMutable(); this.oneofDecl_.add(index, builderForValue.build()); onChanged(); } else { this.oneofDeclBuilder_.addMessage(index, builderForValue.build()); }  return this; } public Builder addAllOneofDecl(Iterable<? extends OneofDescriptorProto> values) { if (this.oneofDeclBuilder_ == null) { ensureOneofDeclIsMutable(); AbstractMessageLite.Builder.addAll(values, this.oneofDecl_); onChanged(); } else { this.oneofDeclBuilder_.addAllMessages(values); }  return this; } public Builder clearOneofDecl() { if (this.oneofDeclBuilder_ == null) { this.oneofDecl_ = Collections.emptyList(); this.bitField0_ &= 0xFFFFFFBF; onChanged(); } else { this.oneofDeclBuilder_.clear(); }  return this; } public Builder removeOneofDecl(int index) { if (this.oneofDeclBuilder_ == null) { ensureOneofDeclIsMutable(); this.oneofDecl_.remove(index); onChanged(); } else { this.oneofDeclBuilder_.remove(index); }  return this; } public OneofDescriptorProto.Builder getOneofDeclBuilder(int index) { return getOneofDeclFieldBuilder().getBuilder(index); } public OneofDescriptorProtoOrBuilder getOneofDeclOrBuilder(int index) { if (this.oneofDeclBuilder_ == null) return this.oneofDecl_.get(index);  return this.oneofDeclBuilder_.getMessageOrBuilder(index); } public List<? extends OneofDescriptorProtoOrBuilder> getOneofDeclOrBuilderList() { if (this.oneofDeclBuilder_ != null) return this.oneofDeclBuilder_.getMessageOrBuilderList();  return Collections.unmodifiableList((List)this.oneofDecl_); } public OneofDescriptorProto.Builder addOneofDeclBuilder() { return getOneofDeclFieldBuilder().addBuilder(OneofDescriptorProto.getDefaultInstance()); } public OneofDescriptorProto.Builder addOneofDeclBuilder(int index) { return getOneofDeclFieldBuilder().addBuilder(index, OneofDescriptorProto.getDefaultInstance()); } public List<OneofDescriptorProto.Builder> getOneofDeclBuilderList() { return getOneofDeclFieldBuilder().getBuilderList(); } private RepeatedFieldBuilderV3<OneofDescriptorProto, OneofDescriptorProto.Builder, OneofDescriptorProtoOrBuilder> getOneofDeclFieldBuilder() { if (this.oneofDeclBuilder_ == null) { this.oneofDeclBuilder_ = new RepeatedFieldBuilderV3<>(this.oneofDecl_, ((this.bitField0_ & 0x40) != 0), getParentForChildren(), isClean()); this.oneofDecl_ = null; }  return this.oneofDeclBuilder_; } public boolean hasOptions() { return ((this.bitField0_ & 0x80) != 0); } public MessageOptions getOptions() { if (this.optionsBuilder_ == null) return (this.options_ == null) ? MessageOptions.getDefaultInstance() : this.options_;  return this.optionsBuilder_.getMessage(); } public Builder setOptions(MessageOptions value) { if (this.optionsBuilder_ == null) { if (value == null) throw new NullPointerException();  this.options_ = value; onChanged(); } else { this.optionsBuilder_.setMessage(value); }  this.bitField0_ |= 0x80; return this; } public Builder setOptions(MessageOptions.Builder builderForValue) { if (this.optionsBuilder_ == null) { this.options_ = builderForValue.build(); onChanged(); } else { this.optionsBuilder_.setMessage(builderForValue.build()); }  this.bitField0_ |= 0x80; return this; } public Builder mergeOptions(MessageOptions value) { if (this.optionsBuilder_ == null) { if ((this.bitField0_ & 0x80) != 0 && this.options_ != null && this.options_ != MessageOptions.getDefaultInstance()) { this.options_ = MessageOptions.newBuilder(this.options_).mergeFrom(value).buildPartial(); } else { this.options_ = value; }  onChanged(); } else { this.optionsBuilder_.mergeFrom(value); }  this.bitField0_ |= 0x80; return this; } public Builder clearOptions() { if (this.optionsBuilder_ == null) { this.options_ = null; onChanged(); } else { this.optionsBuilder_.clear(); }  this.bitField0_ &= 0xFFFFFF7F; return this; } public MessageOptions.Builder getOptionsBuilder() { this.bitField0_ |= 0x80; onChanged(); return getOptionsFieldBuilder().getBuilder(); } public MessageOptionsOrBuilder getOptionsOrBuilder() { if (this.optionsBuilder_ != null) return this.optionsBuilder_.getMessageOrBuilder();  return (this.options_ == null) ? MessageOptions.getDefaultInstance() : this.options_; } private SingleFieldBuilderV3<MessageOptions, MessageOptions.Builder, MessageOptionsOrBuilder> getOptionsFieldBuilder() { if (this.optionsBuilder_ == null) { this.optionsBuilder_ = new SingleFieldBuilderV3<>(getOptions(), getParentForChildren(), isClean()); this.options_ = null; }  return this.optionsBuilder_; } private void ensureReservedRangeIsMutable() { if ((this.bitField0_ & 0x100) == 0) { this.reservedRange_ = new ArrayList<>(this.reservedRange_); this.bitField0_ |= 0x100; }  } public List<ReservedRange> getReservedRangeList() { if (this.reservedRangeBuilder_ == null) return Collections.unmodifiableList(this.reservedRange_);  return this.reservedRangeBuilder_.getMessageList(); } public int getReservedRangeCount() { if (this.reservedRangeBuilder_ == null) return this.reservedRange_.size();  return this.reservedRangeBuilder_.getCount(); } public ReservedRange getReservedRange(int index) { if (this.reservedRangeBuilder_ == null) return this.reservedRange_.get(index);  return this.reservedRangeBuilder_.getMessage(index); } public Builder setReservedRange(int index, ReservedRange value) { if (this.reservedRangeBuilder_ == null) { if (value == null) throw new NullPointerException();  ensureReservedRangeIsMutable(); this.reservedRange_.set(index, value); onChanged(); } else { this.reservedRangeBuilder_.setMessage(index, value); }  return this; } public Builder setReservedRange(int index, ReservedRange.Builder builderForValue) { if (this.reservedRangeBuilder_ == null) { ensureReservedRangeIsMutable(); this.reservedRange_.set(index, builderForValue.build()); onChanged(); } else { this.reservedRangeBuilder_.setMessage(index, builderForValue.build()); }  return this; } public Builder addReservedRange(ReservedRange value) { if (this.reservedRangeBuilder_ == null) { if (value == null) throw new NullPointerException();  ensureReservedRangeIsMutable(); this.reservedRange_.add(value); onChanged(); } else { this.reservedRangeBuilder_.addMessage(value); }  return this; }
/*       */       public Builder addReservedRange(int index, ReservedRange value) { if (this.reservedRangeBuilder_ == null) { if (value == null) throw new NullPointerException();  ensureReservedRangeIsMutable(); this.reservedRange_.add(index, value); onChanged(); } else { this.reservedRangeBuilder_.addMessage(index, value); }  return this; }
/*       */       public Builder addReservedRange(ReservedRange.Builder builderForValue) { if (this.reservedRangeBuilder_ == null) { ensureReservedRangeIsMutable(); this.reservedRange_.add(builderForValue.build()); onChanged(); } else { this.reservedRangeBuilder_.addMessage(builderForValue.build()); }  return this; }
/*       */       public Builder addReservedRange(int index, ReservedRange.Builder builderForValue) { if (this.reservedRangeBuilder_ == null) { ensureReservedRangeIsMutable(); this.reservedRange_.add(index, builderForValue.build()); onChanged(); } else { this.reservedRangeBuilder_.addMessage(index, builderForValue.build()); }  return this; }
/*       */       public Builder addAllReservedRange(Iterable<? extends ReservedRange> values) { if (this.reservedRangeBuilder_ == null) { ensureReservedRangeIsMutable(); AbstractMessageLite.Builder.addAll(values, this.reservedRange_); onChanged(); } else { this.reservedRangeBuilder_.addAllMessages(values); }  return this; }
/*       */       public Builder clearReservedRange() { if (this.reservedRangeBuilder_ == null) { this.reservedRange_ = Collections.emptyList(); this.bitField0_ &= 0xFFFFFEFF; onChanged(); } else { this.reservedRangeBuilder_.clear(); }  return this; }
/*       */       public Builder removeReservedRange(int index) { if (this.reservedRangeBuilder_ == null) { ensureReservedRangeIsMutable(); this.reservedRange_.remove(index); onChanged(); } else { this.reservedRangeBuilder_.remove(index); }  return this; }
/*       */       public ReservedRange.Builder getReservedRangeBuilder(int index) { return getReservedRangeFieldBuilder().getBuilder(index); }
/*       */       public ReservedRangeOrBuilder getReservedRangeOrBuilder(int index) { if (this.reservedRangeBuilder_ == null) return this.reservedRange_.get(index);  return this.reservedRangeBuilder_.getMessageOrBuilder(index); }
/*       */       public List<? extends ReservedRangeOrBuilder> getReservedRangeOrBuilderList() { if (this.reservedRangeBuilder_ != null) return this.reservedRangeBuilder_.getMessageOrBuilderList();  return Collections.unmodifiableList((List)this.reservedRange_); }
/*       */       public ReservedRange.Builder addReservedRangeBuilder() { return getReservedRangeFieldBuilder().addBuilder(ReservedRange.getDefaultInstance()); }
/*       */       public ReservedRange.Builder addReservedRangeBuilder(int index) { return getReservedRangeFieldBuilder().addBuilder(index, ReservedRange.getDefaultInstance()); }
/*       */       public List<ReservedRange.Builder> getReservedRangeBuilderList() { return getReservedRangeFieldBuilder().getBuilderList(); }
/*       */       private RepeatedFieldBuilderV3<ReservedRange, ReservedRange.Builder, ReservedRangeOrBuilder> getReservedRangeFieldBuilder() { if (this.reservedRangeBuilder_ == null) { this.reservedRangeBuilder_ = new RepeatedFieldBuilderV3<>(this.reservedRange_, ((this.bitField0_ & 0x100) != 0), getParentForChildren(), isClean()); this.reservedRange_ = null; }  return this.reservedRangeBuilder_; }
/* 10127 */       public ProtocolStringList getReservedNameList() { return this.reservedName_.getUnmodifiableView(); }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getReservedNameCount() {
/* 10139 */         return this.reservedName_.size();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public String getReservedName(int index) {
/* 10152 */         return this.reservedName_.get(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public ByteString getReservedNameBytes(int index) {
/* 10166 */         return this.reservedName_.getByteString(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setReservedName(int index, String value) {
/* 10181 */         if (value == null) {
/* 10182 */           throw new NullPointerException();
/*       */         }
/* 10184 */         ensureReservedNameIsMutable();
/* 10185 */         this.reservedName_.set(index, value);
/* 10186 */         onChanged();
/* 10187 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addReservedName(String value) {
/* 10201 */         if (value == null) {
/* 10202 */           throw new NullPointerException();
/*       */         }
/* 10204 */         ensureReservedNameIsMutable();
/* 10205 */         this.reservedName_.add(value);
/* 10206 */         onChanged();
/* 10207 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addAllReservedName(Iterable<String> values) {
/* 10221 */         ensureReservedNameIsMutable();
/* 10222 */         AbstractMessageLite.Builder.addAll(values, this.reservedName_);
/*       */         
/* 10224 */         onChanged();
/* 10225 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearReservedName() {
/* 10237 */         this.reservedName_ = LazyStringArrayList.EMPTY;
/* 10238 */         this.bitField0_ &= 0xFFFFFDFF;
/* 10239 */         onChanged();
/* 10240 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addReservedNameBytes(ByteString value) {
/* 10254 */         if (value == null) {
/* 10255 */           throw new NullPointerException();
/*       */         }
/* 10257 */         ensureReservedNameIsMutable();
/* 10258 */         this.reservedName_.add(value);
/* 10259 */         onChanged();
/* 10260 */         return this;
/*       */       }
/*       */ 
/*       */       
/*       */       public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
/* 10265 */         return super.setUnknownFields(unknownFields);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
/* 10271 */         return super.mergeUnknownFields(unknownFields);
/*       */       } }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 10281 */     private static final DescriptorProto DEFAULT_INSTANCE = new DescriptorProto();
/*       */ 
/*       */     
/*       */     public static DescriptorProto getDefaultInstance() {
/* 10285 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */     
/*       */     @Deprecated
/* 10289 */     public static final Parser<DescriptorProto> PARSER = new AbstractParser<DescriptorProto>()
/*       */       {
/*       */ 
/*       */         
/*       */         public DescriptorProto parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException
/*       */         {
/* 10295 */           return new DescriptorProto(input, extensionRegistry);
/*       */         }
/*       */       };
/*       */     
/*       */     public static Parser<DescriptorProto> parser() {
/* 10300 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public Parser<DescriptorProto> getParserForType() {
/* 10305 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public DescriptorProto getDefaultInstanceForType() {
/* 10310 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */ 
/*       */     
/*       */     public static interface ReservedRangeOrBuilder
/*       */       extends MessageOrBuilder
/*       */     {
/*       */       boolean hasStart();
/*       */ 
/*       */       
/*       */       int getStart();
/*       */ 
/*       */       
/*       */       boolean hasEnd();
/*       */ 
/*       */       
/*       */       int getEnd();
/*       */     }
/*       */ 
/*       */     
/*       */     public static interface ExtensionRangeOrBuilder
/*       */       extends MessageOrBuilder
/*       */     {
/*       */       boolean hasStart();
/*       */ 
/*       */       
/*       */       int getStart();
/*       */       
/*       */       boolean hasEnd();
/*       */       
/*       */       int getEnd();
/*       */       
/*       */       boolean hasOptions();
/*       */       
/*       */       ExtensionRangeOptions getOptions();
/*       */       
/*       */       ExtensionRangeOptionsOrBuilder getOptionsOrBuilder();
/*       */     }
/*       */   }
/*       */   
/*       */   public static interface ExtensionRangeOptionsOrBuilder
/*       */     extends GeneratedMessageV3.ExtendableMessageOrBuilder<ExtensionRangeOptions>
/*       */   {
/*       */     List<UninterpretedOption> getUninterpretedOptionList();
/*       */     
/*       */     UninterpretedOption getUninterpretedOption(int param1Int);
/*       */     
/*       */     int getUninterpretedOptionCount();
/*       */     
/*       */     List<? extends UninterpretedOptionOrBuilder> getUninterpretedOptionOrBuilderList();
/*       */     
/*       */     UninterpretedOptionOrBuilder getUninterpretedOptionOrBuilder(int param1Int);
/*       */   }
/*       */   
/*       */   public static final class ExtensionRangeOptions
/*       */     extends GeneratedMessageV3.ExtendableMessage<ExtensionRangeOptions>
/*       */     implements ExtensionRangeOptionsOrBuilder
/*       */   {
/*       */     private static final long serialVersionUID = 0L;
/*       */     public static final int UNINTERPRETED_OPTION_FIELD_NUMBER = 999;
/*       */     private List<UninterpretedOption> uninterpretedOption_;
/*       */     private byte memoizedIsInitialized;
/*       */     
/*       */     private ExtensionRangeOptions(GeneratedMessageV3.ExtendableBuilder<ExtensionRangeOptions, ?> builder)
/*       */     {
/* 10375 */       super(builder);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/* 10516 */       this.memoizedIsInitialized = -1; } private ExtensionRangeOptions() { this.memoizedIsInitialized = -1; this.uninterpretedOption_ = Collections.emptyList(); } protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) { return new ExtensionRangeOptions(); } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private ExtensionRangeOptions(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this(); if (extensionRegistry == null) throw new NullPointerException();  int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { int tag = input.readTag(); switch (tag) { case 0: done = true; continue;case 7994: if ((mutable_bitField0_ & 0x1) == 0) { this.uninterpretedOption_ = new ArrayList<>(); mutable_bitField0_ |= 0x1; }  this.uninterpretedOption_.add(input.readMessage(UninterpretedOption.PARSER, extensionRegistry)); continue; }  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this); } finally { if ((mutable_bitField0_ & 0x1) != 0) this.uninterpretedOption_ = Collections.unmodifiableList(this.uninterpretedOption_);  this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return DescriptorProtos.internal_static_google_protobuf_ExtensionRangeOptions_descriptor; } protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() { return DescriptorProtos.internal_static_google_protobuf_ExtensionRangeOptions_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)ExtensionRangeOptions.class, (Class)Builder.class); } public List<UninterpretedOption> getUninterpretedOptionList() { return this.uninterpretedOption_; } public List<? extends UninterpretedOptionOrBuilder> getUninterpretedOptionOrBuilderList() { return (List)this.uninterpretedOption_; } public int getUninterpretedOptionCount() { return this.uninterpretedOption_.size(); }
/*       */     public UninterpretedOption getUninterpretedOption(int index) { return this.uninterpretedOption_.get(index); }
/*       */     public UninterpretedOptionOrBuilder getUninterpretedOptionOrBuilder(int index) { return this.uninterpretedOption_.get(index); }
/* 10519 */     public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized;
/* 10520 */       if (isInitialized == 1) return true; 
/* 10521 */       if (isInitialized == 0) return false;
/*       */       
/* 10523 */       for (int i = 0; i < getUninterpretedOptionCount(); i++) {
/* 10524 */         if (!getUninterpretedOption(i).isInitialized()) {
/* 10525 */           this.memoizedIsInitialized = 0;
/* 10526 */           return false;
/*       */         } 
/*       */       } 
/* 10529 */       if (!extensionsAreInitialized()) {
/* 10530 */         this.memoizedIsInitialized = 0;
/* 10531 */         return false;
/*       */       } 
/* 10533 */       this.memoizedIsInitialized = 1;
/* 10534 */       return true; }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/* 10542 */       GeneratedMessageV3.ExtendableMessage<ExtensionRangeOptions>.ExtensionWriter extensionWriter = newExtensionWriter();
/* 10543 */       for (int i = 0; i < this.uninterpretedOption_.size(); i++) {
/* 10544 */         output.writeMessage(999, this.uninterpretedOption_.get(i));
/*       */       }
/* 10546 */       extensionWriter.writeUntil(536870912, output);
/* 10547 */       this.unknownFields.writeTo(output);
/*       */     }
/*       */ 
/*       */     
/*       */     public int getSerializedSize() {
/* 10552 */       int size = this.memoizedSize;
/* 10553 */       if (size != -1) return size;
/*       */       
/* 10555 */       size = 0;
/* 10556 */       for (int i = 0; i < this.uninterpretedOption_.size(); i++) {
/* 10557 */         size += 
/* 10558 */           CodedOutputStream.computeMessageSize(999, this.uninterpretedOption_.get(i));
/*       */       }
/* 10560 */       size += extensionsSerializedSize();
/* 10561 */       size += this.unknownFields.getSerializedSize();
/* 10562 */       this.memoizedSize = size;
/* 10563 */       return size;
/*       */     }
/*       */ 
/*       */     
/*       */     public boolean equals(Object obj) {
/* 10568 */       if (obj == this) {
/* 10569 */         return true;
/*       */       }
/* 10571 */       if (!(obj instanceof ExtensionRangeOptions)) {
/* 10572 */         return super.equals(obj);
/*       */       }
/* 10574 */       ExtensionRangeOptions other = (ExtensionRangeOptions)obj;
/*       */ 
/*       */       
/* 10577 */       if (!getUninterpretedOptionList().equals(other.getUninterpretedOptionList())) return false; 
/* 10578 */       if (!this.unknownFields.equals(other.unknownFields)) return false; 
/* 10579 */       if (!getExtensionFields().equals(other.getExtensionFields()))
/* 10580 */         return false; 
/* 10581 */       return true;
/*       */     }
/*       */ 
/*       */     
/*       */     public int hashCode() {
/* 10586 */       if (this.memoizedHashCode != 0) {
/* 10587 */         return this.memoizedHashCode;
/*       */       }
/* 10589 */       int hash = 41;
/* 10590 */       hash = 19 * hash + getDescriptor().hashCode();
/* 10591 */       if (getUninterpretedOptionCount() > 0) {
/* 10592 */         hash = 37 * hash + 999;
/* 10593 */         hash = 53 * hash + getUninterpretedOptionList().hashCode();
/*       */       } 
/* 10595 */       hash = hashFields(hash, getExtensionFields());
/* 10596 */       hash = 29 * hash + this.unknownFields.hashCode();
/* 10597 */       this.memoizedHashCode = hash;
/* 10598 */       return hash;
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static ExtensionRangeOptions parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
/* 10604 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static ExtensionRangeOptions parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 10610 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static ExtensionRangeOptions parseFrom(ByteString data) throws InvalidProtocolBufferException {
/* 10615 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static ExtensionRangeOptions parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 10621 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static ExtensionRangeOptions parseFrom(byte[] data) throws InvalidProtocolBufferException {
/* 10625 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static ExtensionRangeOptions parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 10631 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static ExtensionRangeOptions parseFrom(InputStream input) throws IOException {
/* 10635 */       return 
/* 10636 */         GeneratedMessageV3.<ExtensionRangeOptions>parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static ExtensionRangeOptions parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 10642 */       return 
/* 10643 */         GeneratedMessageV3.<ExtensionRangeOptions>parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static ExtensionRangeOptions parseDelimitedFrom(InputStream input) throws IOException {
/* 10647 */       return 
/* 10648 */         GeneratedMessageV3.<ExtensionRangeOptions>parseDelimitedWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static ExtensionRangeOptions parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 10654 */       return 
/* 10655 */         GeneratedMessageV3.<ExtensionRangeOptions>parseDelimitedWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static ExtensionRangeOptions parseFrom(CodedInputStream input) throws IOException {
/* 10660 */       return 
/* 10661 */         GeneratedMessageV3.<ExtensionRangeOptions>parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static ExtensionRangeOptions parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 10667 */       return 
/* 10668 */         GeneratedMessageV3.<ExtensionRangeOptions>parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public Builder newBuilderForType() {
/* 10672 */       return newBuilder();
/*       */     } public static Builder newBuilder() {
/* 10674 */       return DEFAULT_INSTANCE.toBuilder();
/*       */     }
/*       */     public static Builder newBuilder(ExtensionRangeOptions prototype) {
/* 10677 */       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
/*       */     }
/*       */     
/*       */     public Builder toBuilder() {
/* 10681 */       return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder())
/* 10682 */         .mergeFrom(this);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
/* 10688 */       Builder builder = new Builder(parent);
/* 10689 */       return builder;
/*       */     }
/*       */     
/*       */     public static final class Builder
/*       */       extends GeneratedMessageV3.ExtendableBuilder<ExtensionRangeOptions, Builder>
/*       */       implements ExtensionRangeOptionsOrBuilder
/*       */     {
/*       */       private int bitField0_;
/*       */       private List<UninterpretedOption> uninterpretedOption_;
/*       */       private RepeatedFieldBuilderV3<UninterpretedOption, UninterpretedOption.Builder, UninterpretedOptionOrBuilder> uninterpretedOptionBuilder_;
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/* 10701 */         return DescriptorProtos.internal_static_google_protobuf_ExtensionRangeOptions_descriptor;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
/* 10707 */         return DescriptorProtos.internal_static_google_protobuf_ExtensionRangeOptions_fieldAccessorTable
/* 10708 */           .ensureFieldAccessorsInitialized((Class) ExtensionRangeOptions.class, (Class)Builder.class);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private Builder()
/*       */       {
/* 10913 */         this
/* 10914 */           .uninterpretedOption_ = Collections.emptyList(); maybeForceBuilderInitialization(); } private Builder(GeneratedMessageV3.BuilderParent parent) { super(parent); this.uninterpretedOption_ = Collections.emptyList(); maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (GeneratedMessageV3.alwaysUseFieldBuilders) getUninterpretedOptionFieldBuilder();  } public Builder clear() { super.clear(); if (this.uninterpretedOptionBuilder_ == null) { this.uninterpretedOption_ = Collections.emptyList(); this.bitField0_ &= 0xFFFFFFFE; } else { this.uninterpretedOptionBuilder_.clear(); }  return this; } public Descriptors.Descriptor getDescriptorForType() { return DescriptorProtos.internal_static_google_protobuf_ExtensionRangeOptions_descriptor; } public ExtensionRangeOptions getDefaultInstanceForType() { return ExtensionRangeOptions.getDefaultInstance(); } public ExtensionRangeOptions build() { ExtensionRangeOptions result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public ExtensionRangeOptions buildPartial() { ExtensionRangeOptions result = new ExtensionRangeOptions(this); int from_bitField0_ = this.bitField0_; if (this.uninterpretedOptionBuilder_ == null) { if ((this.bitField0_ & 0x1) != 0) { this.uninterpretedOption_ = Collections.unmodifiableList(this.uninterpretedOption_); this.bitField0_ &= 0xFFFFFFFE; }  result.uninterpretedOption_ = this.uninterpretedOption_; } else { result.uninterpretedOption_ = this.uninterpretedOptionBuilder_.build(); }  onBuilt(); return result; } public Builder clone() { return super.clone(); } public Builder setField(Descriptors.FieldDescriptor field, Object value) { return super.setField(field, value); } public Builder clearField(Descriptors.FieldDescriptor field) { return super.clearField(field); } public Builder clearOneof(Descriptors.OneofDescriptor oneof) { return super.clearOneof(oneof); } public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) { return super.setRepeatedField(field, index, value); } public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) { return super.addRepeatedField(field, value); } public <Type> Builder setExtension(GeneratedMessage.GeneratedExtension<ExtensionRangeOptions, Type> extension, Type value) { return super.<Type>setExtension(extension, value); } public <Type> Builder setExtension(GeneratedMessage.GeneratedExtension<ExtensionRangeOptions, List<Type>> extension, int index, Type value) { return super.<Type>setExtension(extension, index, value); } public <Type> Builder addExtension(GeneratedMessage.GeneratedExtension<ExtensionRangeOptions, List<Type>> extension, Type value) { return super.<Type>addExtension(extension, value); } public <Type> Builder clearExtension(GeneratedMessage.GeneratedExtension<ExtensionRangeOptions, ?> extension) { return super.clearExtension(extension); } public Builder mergeFrom(Message other) { if (other instanceof ExtensionRangeOptions) return mergeFrom((ExtensionRangeOptions)other);  super.mergeFrom(other); return this; } public Builder mergeFrom(ExtensionRangeOptions other) { if (other == ExtensionRangeOptions.getDefaultInstance()) return this;  if (this.uninterpretedOptionBuilder_ == null) { if (!other.uninterpretedOption_.isEmpty()) { if (this.uninterpretedOption_.isEmpty()) { this.uninterpretedOption_ = other.uninterpretedOption_; this.bitField0_ &= 0xFFFFFFFE; } else { ensureUninterpretedOptionIsMutable(); this.uninterpretedOption_.addAll(other.uninterpretedOption_); }  onChanged(); }  } else if (!other.uninterpretedOption_.isEmpty()) { if (this.uninterpretedOptionBuilder_.isEmpty()) { this.uninterpretedOptionBuilder_.dispose(); this.uninterpretedOptionBuilder_ = null; this.uninterpretedOption_ = other.uninterpretedOption_; this.bitField0_ &= 0xFFFFFFFE; this.uninterpretedOptionBuilder_ = GeneratedMessageV3.alwaysUseFieldBuilders ? getUninterpretedOptionFieldBuilder() : null; } else { this.uninterpretedOptionBuilder_.addAllMessages(other.uninterpretedOption_); }  }  mergeExtensionFields(other); mergeUnknownFields(other.unknownFields); onChanged(); return this; } public final boolean isInitialized() { for (int i = 0; i < getUninterpretedOptionCount(); i++) { if (!getUninterpretedOption(i).isInitialized()) return false;  }  if (!extensionsAreInitialized()) return false;  return true; }
/*       */       public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { ExtensionRangeOptions parsedMessage = null; try { parsedMessage = ExtensionRangeOptions.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (ExtensionRangeOptions)e.getUnfinishedMessage(); throw e.unwrapIOException(); } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; }
/* 10916 */       private void ensureUninterpretedOptionIsMutable() { if ((this.bitField0_ & 0x1) == 0) {
/* 10917 */           this.uninterpretedOption_ = new ArrayList<>(this.uninterpretedOption_);
/* 10918 */           this.bitField0_ |= 0x1;
/*       */         }  }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public List<UninterpretedOption> getUninterpretedOptionList() {
/* 10933 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 10934 */           return Collections.unmodifiableList(this.uninterpretedOption_);
/*       */         }
/* 10936 */         return this.uninterpretedOptionBuilder_.getMessageList();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getUninterpretedOptionCount() {
/* 10947 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 10948 */           return this.uninterpretedOption_.size();
/*       */         }
/* 10950 */         return this.uninterpretedOptionBuilder_.getCount();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public UninterpretedOption getUninterpretedOption(int index) {
/* 10961 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 10962 */           return this.uninterpretedOption_.get(index);
/*       */         }
/* 10964 */         return this.uninterpretedOptionBuilder_.getMessage(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setUninterpretedOption(int index, UninterpretedOption value) {
/* 10976 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 10977 */           if (value == null) {
/* 10978 */             throw new NullPointerException();
/*       */           }
/* 10980 */           ensureUninterpretedOptionIsMutable();
/* 10981 */           this.uninterpretedOption_.set(index, value);
/* 10982 */           onChanged();
/*       */         } else {
/* 10984 */           this.uninterpretedOptionBuilder_.setMessage(index, value);
/*       */         } 
/* 10986 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setUninterpretedOption(int index, UninterpretedOption.Builder builderForValue) {
/* 10997 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 10998 */           ensureUninterpretedOptionIsMutable();
/* 10999 */           this.uninterpretedOption_.set(index, builderForValue.build());
/* 11000 */           onChanged();
/*       */         } else {
/* 11002 */           this.uninterpretedOptionBuilder_.setMessage(index, builderForValue.build());
/*       */         } 
/* 11004 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addUninterpretedOption(UninterpretedOption value) {
/* 11014 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 11015 */           if (value == null) {
/* 11016 */             throw new NullPointerException();
/*       */           }
/* 11018 */           ensureUninterpretedOptionIsMutable();
/* 11019 */           this.uninterpretedOption_.add(value);
/* 11020 */           onChanged();
/*       */         } else {
/* 11022 */           this.uninterpretedOptionBuilder_.addMessage(value);
/*       */         } 
/* 11024 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addUninterpretedOption(int index, UninterpretedOption value) {
/* 11035 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 11036 */           if (value == null) {
/* 11037 */             throw new NullPointerException();
/*       */           }
/* 11039 */           ensureUninterpretedOptionIsMutable();
/* 11040 */           this.uninterpretedOption_.add(index, value);
/* 11041 */           onChanged();
/*       */         } else {
/* 11043 */           this.uninterpretedOptionBuilder_.addMessage(index, value);
/*       */         } 
/* 11045 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addUninterpretedOption(UninterpretedOption.Builder builderForValue) {
/* 11056 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 11057 */           ensureUninterpretedOptionIsMutable();
/* 11058 */           this.uninterpretedOption_.add(builderForValue.build());
/* 11059 */           onChanged();
/*       */         } else {
/* 11061 */           this.uninterpretedOptionBuilder_.addMessage(builderForValue.build());
/*       */         } 
/* 11063 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addUninterpretedOption(int index, UninterpretedOption.Builder builderForValue) {
/* 11074 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 11075 */           ensureUninterpretedOptionIsMutable();
/* 11076 */           this.uninterpretedOption_.add(index, builderForValue.build());
/* 11077 */           onChanged();
/*       */         } else {
/* 11079 */           this.uninterpretedOptionBuilder_.addMessage(index, builderForValue.build());
/*       */         } 
/* 11081 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addAllUninterpretedOption(Iterable<? extends UninterpretedOption> values) {
/* 11092 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 11093 */           ensureUninterpretedOptionIsMutable();
/* 11094 */           AbstractMessageLite.Builder.addAll(values, this.uninterpretedOption_);
/*       */           
/* 11096 */           onChanged();
/*       */         } else {
/* 11098 */           this.uninterpretedOptionBuilder_.addAllMessages(values);
/*       */         } 
/* 11100 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearUninterpretedOption() {
/* 11110 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 11111 */           this.uninterpretedOption_ = Collections.emptyList();
/* 11112 */           this.bitField0_ &= 0xFFFFFFFE;
/* 11113 */           onChanged();
/*       */         } else {
/* 11115 */           this.uninterpretedOptionBuilder_.clear();
/*       */         } 
/* 11117 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder removeUninterpretedOption(int index) {
/* 11127 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 11128 */           ensureUninterpretedOptionIsMutable();
/* 11129 */           this.uninterpretedOption_.remove(index);
/* 11130 */           onChanged();
/*       */         } else {
/* 11132 */           this.uninterpretedOptionBuilder_.remove(index);
/*       */         } 
/* 11134 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public UninterpretedOption.Builder getUninterpretedOptionBuilder(int index) {
/* 11145 */         return getUninterpretedOptionFieldBuilder().getBuilder(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public UninterpretedOptionOrBuilder getUninterpretedOptionOrBuilder(int index) {
/* 11156 */         if (this.uninterpretedOptionBuilder_ == null)
/* 11157 */           return this.uninterpretedOption_.get(index); 
/* 11158 */         return this.uninterpretedOptionBuilder_.getMessageOrBuilder(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public List<? extends UninterpretedOptionOrBuilder> getUninterpretedOptionOrBuilderList() {
/* 11170 */         if (this.uninterpretedOptionBuilder_ != null) {
/* 11171 */           return this.uninterpretedOptionBuilder_.getMessageOrBuilderList();
/*       */         }
/* 11173 */         return Collections.unmodifiableList((List)this.uninterpretedOption_);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public UninterpretedOption.Builder addUninterpretedOptionBuilder() {
/* 11184 */         return getUninterpretedOptionFieldBuilder().addBuilder(
/* 11185 */             UninterpretedOption.getDefaultInstance());
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public UninterpretedOption.Builder addUninterpretedOptionBuilder(int index) {
/* 11196 */         return getUninterpretedOptionFieldBuilder().addBuilder(index, 
/* 11197 */             UninterpretedOption.getDefaultInstance());
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public List<UninterpretedOption.Builder> getUninterpretedOptionBuilderList() {
/* 11208 */         return getUninterpretedOptionFieldBuilder().getBuilderList();
/*       */       }
/*       */ 
/*       */       
/*       */       private RepeatedFieldBuilderV3<UninterpretedOption, UninterpretedOption.Builder, UninterpretedOptionOrBuilder> getUninterpretedOptionFieldBuilder() {
/* 11213 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 11214 */           this
/*       */ 
/*       */ 
/*       */ 
/*       */             
/* 11219 */             .uninterpretedOptionBuilder_ = new RepeatedFieldBuilderV3<>(this.uninterpretedOption_, ((this.bitField0_ & 0x1) != 0), getParentForChildren(), isClean());
/* 11220 */           this.uninterpretedOption_ = null;
/*       */         } 
/* 11222 */         return this.uninterpretedOptionBuilder_;
/*       */       }
/*       */ 
/*       */       
/*       */       public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
/* 11227 */         return super.setUnknownFields(unknownFields);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
/* 11233 */         return super.mergeUnknownFields(unknownFields);
/*       */       }
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 11243 */     private static final ExtensionRangeOptions DEFAULT_INSTANCE = new ExtensionRangeOptions();
/*       */ 
/*       */     
/*       */     public static ExtensionRangeOptions getDefaultInstance() {
/* 11247 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */     
/*       */     @Deprecated
/* 11251 */     public static final Parser<ExtensionRangeOptions> PARSER = new AbstractParser<ExtensionRangeOptions>()
/*       */       {
/*       */ 
/*       */         
/*       */         public ExtensionRangeOptions parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException
/*       */         {
/* 11257 */           return new ExtensionRangeOptions(input, extensionRegistry);
/*       */         }
/*       */       };
/*       */     
/*       */     public static Parser<ExtensionRangeOptions> parser() {
/* 11262 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public Parser<ExtensionRangeOptions> getParserForType() {
/* 11267 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public ExtensionRangeOptions getDefaultInstanceForType() {
/* 11272 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public static interface FieldDescriptorProtoOrBuilder
/*       */     extends MessageOrBuilder
/*       */   {
/*       */     boolean hasName();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     String getName();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getNameBytes();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasNumber();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getNumber();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasLabel();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     FieldDescriptorProto.Label getLabel();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasType();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     FieldDescriptorProto.Type getType();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasTypeName();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     String getTypeName();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getTypeNameBytes();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasExtendee();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     String getExtendee();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getExtendeeBytes();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasDefaultValue();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     String getDefaultValue();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getDefaultValueBytes();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasOneofIndex();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getOneofIndex();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasJsonName();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     String getJsonName();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getJsonNameBytes();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasOptions();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     FieldOptions getOptions();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     FieldOptionsOrBuilder getOptionsOrBuilder();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasProto3Optional();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean getProto3Optional();
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public static final class FieldDescriptorProto
/*       */     extends GeneratedMessageV3
/*       */     implements FieldDescriptorProtoOrBuilder
/*       */   {
/*       */     private static final long serialVersionUID = 0L;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private int bitField0_;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int NAME_FIELD_NUMBER = 1;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private volatile Object name_;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int NUMBER_FIELD_NUMBER = 3;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private int number_;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int LABEL_FIELD_NUMBER = 4;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private int label_;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int TYPE_FIELD_NUMBER = 5;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private int type_;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int TYPE_NAME_FIELD_NUMBER = 6;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private volatile Object typeName_;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int EXTENDEE_FIELD_NUMBER = 2;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private volatile Object extendee_;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int DEFAULT_VALUE_FIELD_NUMBER = 7;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private volatile Object defaultValue_;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int ONEOF_INDEX_FIELD_NUMBER = 9;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private int oneofIndex_;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int JSON_NAME_FIELD_NUMBER = 10;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private volatile Object jsonName_;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int OPTIONS_FIELD_NUMBER = 8;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private FieldOptions options_;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int PROTO3_OPTIONAL_FIELD_NUMBER = 17;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private boolean proto3Optional_;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private byte memoizedIsInitialized;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private FieldDescriptorProto(GeneratedMessageV3.Builder<?> builder)
/*       */     {
/* 11596 */       super(builder);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/* 12690 */       this.memoizedIsInitialized = -1; } private FieldDescriptorProto() { this.memoizedIsInitialized = -1; this.name_ = ""; this.label_ = 1; this.type_ = 1; this.typeName_ = ""; this.extendee_ = ""; this.defaultValue_ = ""; this.jsonName_ = ""; } protected Object newInstance(UnusedPrivateParameter unused) { return new FieldDescriptorProto(); } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private FieldDescriptorProto(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this(); if (extensionRegistry == null) throw new NullPointerException();  int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { ByteString byteString2; int rawValue; ByteString byteString1; FieldOptions.Builder subBuilder; ByteString bs; Label label; Type value; int tag = input.readTag(); switch (tag) { case 0: done = true; continue;case 10: byteString2 = input.readBytes(); this.bitField0_ |= 0x1; this.name_ = byteString2; continue;case 18: byteString2 = input.readBytes(); this.bitField0_ |= 0x20; this.extendee_ = byteString2; continue;case 24: this.bitField0_ |= 0x2; this.number_ = input.readInt32(); continue;case 32: rawValue = input.readEnum(); label = Label.valueOf(rawValue); if (label == null) { unknownFields.mergeVarintField(4, rawValue); continue; }  this.bitField0_ |= 0x4; this.label_ = rawValue; continue;case 40: rawValue = input.readEnum(); value = Type.valueOf(rawValue); if (value == null) { unknownFields.mergeVarintField(5, rawValue); continue; }  this.bitField0_ |= 0x8; this.type_ = rawValue; continue;case 50: byteString1 = input.readBytes(); this.bitField0_ |= 0x10; this.typeName_ = byteString1; continue;case 58: byteString1 = input.readBytes(); this.bitField0_ |= 0x40; this.defaultValue_ = byteString1; continue;case 66: subBuilder = null; if ((this.bitField0_ & 0x200) != 0) subBuilder = this.options_.toBuilder();  this.options_ = input.<FieldOptions>readMessage(FieldOptions.PARSER, extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.options_); this.options_ = subBuilder.buildPartial(); }  this.bitField0_ |= 0x200; continue;case 72: this.bitField0_ |= 0x80; this.oneofIndex_ = input.readInt32(); continue;case 82: bs = input.readBytes(); this.bitField0_ |= 0x100; this.jsonName_ = bs; continue;case 136: this.bitField0_ |= 0x400; this.proto3Optional_ = input.readBool(); continue; }  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this); } finally { this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return DescriptorProtos.internal_static_google_protobuf_FieldDescriptorProto_descriptor; } protected FieldAccessorTable internalGetFieldAccessorTable() { return DescriptorProtos.internal_static_google_protobuf_FieldDescriptorProto_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)FieldDescriptorProto.class, (Class)Builder.class); } public enum Type implements ProtocolMessageEnum {
/*       */       TYPE_DOUBLE(1), TYPE_FLOAT(2), TYPE_INT64(3), TYPE_UINT64(4), TYPE_INT32(5), TYPE_FIXED64(6), TYPE_FIXED32(7), TYPE_BOOL(8), TYPE_STRING(9), TYPE_GROUP(10), TYPE_MESSAGE(11), TYPE_BYTES(12), TYPE_UINT32(13), TYPE_ENUM(14), TYPE_SFIXED32(15), TYPE_SFIXED64(16), TYPE_SINT32(17), TYPE_SINT64(18); public static final int TYPE_DOUBLE_VALUE = 1; public static final int TYPE_FLOAT_VALUE = 2; public static final int TYPE_INT64_VALUE = 3; public static final int TYPE_UINT64_VALUE = 4; public static final int TYPE_INT32_VALUE = 5; public static final int TYPE_FIXED64_VALUE = 6; public static final int TYPE_FIXED32_VALUE = 7; public static final int TYPE_BOOL_VALUE = 8; public static final int TYPE_STRING_VALUE = 9; public static final int TYPE_GROUP_VALUE = 10; public static final int TYPE_MESSAGE_VALUE = 11; public static final int TYPE_BYTES_VALUE = 12; public static final int TYPE_UINT32_VALUE = 13; public static final int TYPE_ENUM_VALUE = 14; public static final int TYPE_SFIXED32_VALUE = 15; public static final int TYPE_SFIXED64_VALUE = 16; public static final int TYPE_SINT32_VALUE = 17; public static final int TYPE_SINT64_VALUE = 18; private static final Internal.EnumLiteMap<Type> internalValueMap = new Internal.EnumLiteMap<Type>() { public Type findValueByNumber(int number) { return Type.forNumber(number); } }
/*       */       ; private static final Type[] VALUES = values(); private final int value; public final int getNumber() { return this.value; } public static Type forNumber(int value) { switch (value) { case 1: return TYPE_DOUBLE;case 2: return TYPE_FLOAT;case 3: return TYPE_INT64;case 4: return TYPE_UINT64;case 5: return TYPE_INT32;case 6: return TYPE_FIXED64;case 7: return TYPE_FIXED32;case 8: return TYPE_BOOL;case 9: return TYPE_STRING;case 10: return TYPE_GROUP;case 11: return TYPE_MESSAGE;case 12: return TYPE_BYTES;case 13: return TYPE_UINT32;case 14: return TYPE_ENUM;case 15: return TYPE_SFIXED32;case 16: return TYPE_SFIXED64;case 17: return TYPE_SINT32;case 18: return TYPE_SINT64; }  return null; } public static Internal.EnumLiteMap<Type> internalGetValueMap() { return internalValueMap; } static {  } public final Descriptors.EnumValueDescriptor getValueDescriptor() { return getDescriptor().getValues().get(ordinal()); } public final Descriptors.EnumDescriptor getDescriptorForType() { return getDescriptor(); } public static final Descriptors.EnumDescriptor getDescriptor() { return FieldDescriptorProto.getDescriptor().getEnumTypes().get(0); } Type(int value) { this.value = value; } } public enum Label implements ProtocolMessageEnum {
/* 12693 */       LABEL_OPTIONAL(1), LABEL_REQUIRED(2), LABEL_REPEATED(3); public static final int LABEL_OPTIONAL_VALUE = 1; public static final int LABEL_REQUIRED_VALUE = 2; public static final int LABEL_REPEATED_VALUE = 3; private static final Internal.EnumLiteMap<Label> internalValueMap = new Internal.EnumLiteMap<Label>() { public Label findValueByNumber(int number) { return Label.forNumber(number); } }; private static final Label[] VALUES = values(); private final int value; public final int getNumber() { return this.value; } public static Label forNumber(int value) { switch (value) { case 1: return LABEL_OPTIONAL;case 2: return LABEL_REQUIRED;case 3: return LABEL_REPEATED; }  return null; } public static Internal.EnumLiteMap<Label> internalGetValueMap() { return internalValueMap; } static {  } public final Descriptors.EnumValueDescriptor getValueDescriptor() { return getDescriptor().getValues().get(ordinal()); } public final Descriptors.EnumDescriptor getDescriptorForType() { return getDescriptor(); } public static final Descriptors.EnumDescriptor getDescriptor() { return FieldDescriptorProto.getDescriptor().getEnumTypes().get(1); } Label(int value) { this.value = value; } } public boolean hasName() { return ((this.bitField0_ & 0x1) != 0); } public String getName() { Object ref = this.name_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.name_ = s;  return s; } public ByteString getNameBytes() { Object ref = this.name_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.name_ = b; return b; }  return (ByteString)ref; } public boolean hasNumber() { return ((this.bitField0_ & 0x2) != 0); } public int getNumber() { return this.number_; } public boolean hasLabel() { return ((this.bitField0_ & 0x4) != 0); } public Label getLabel() { Label result = Label.valueOf(this.label_); return (result == null) ? Label.LABEL_OPTIONAL : result; } public boolean hasType() { return ((this.bitField0_ & 0x8) != 0); } public Type getType() { Type result = Type.valueOf(this.type_); return (result == null) ? Type.TYPE_DOUBLE : result; } public boolean hasTypeName() { return ((this.bitField0_ & 0x10) != 0); } public String getTypeName() { Object ref = this.typeName_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.typeName_ = s;  return s; } public ByteString getTypeNameBytes() { Object ref = this.typeName_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.typeName_ = b; return b; }  return (ByteString)ref; } public boolean hasExtendee() { return ((this.bitField0_ & 0x20) != 0); } public String getExtendee() { Object ref = this.extendee_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.extendee_ = s;  return s; } public ByteString getExtendeeBytes() { Object ref = this.extendee_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.extendee_ = b; return b; }  return (ByteString)ref; } public boolean hasDefaultValue() { return ((this.bitField0_ & 0x40) != 0); } public String getDefaultValue() { Object ref = this.defaultValue_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.defaultValue_ = s;  return s; } public ByteString getDefaultValueBytes() { Object ref = this.defaultValue_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.defaultValue_ = b; return b; }  return (ByteString)ref; } public boolean hasOneofIndex() { return ((this.bitField0_ & 0x80) != 0); } public int getOneofIndex() { return this.oneofIndex_; } public boolean hasJsonName() { return ((this.bitField0_ & 0x100) != 0); } public String getJsonName() { Object ref = this.jsonName_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.jsonName_ = s;  return s; } public ByteString getJsonNameBytes() { Object ref = this.jsonName_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.jsonName_ = b; return b; }  return (ByteString)ref; } public boolean hasOptions() { return ((this.bitField0_ & 0x200) != 0); } public FieldOptions getOptions() { return (this.options_ == null) ? FieldOptions.getDefaultInstance() : this.options_; } public FieldOptionsOrBuilder getOptionsOrBuilder() { return (this.options_ == null) ? FieldOptions.getDefaultInstance() : this.options_; } public boolean hasProto3Optional() { return ((this.bitField0_ & 0x400) != 0); } public boolean getProto3Optional() { return this.proto3Optional_; } public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized;
/* 12694 */       if (isInitialized == 1) return true; 
/* 12695 */       if (isInitialized == 0) return false;
/*       */       
/* 12697 */       if (hasOptions() && 
/* 12698 */         !getOptions().isInitialized()) {
/* 12699 */         this.memoizedIsInitialized = 0;
/* 12700 */         return false;
/*       */       } 
/*       */       
/* 12703 */       this.memoizedIsInitialized = 1;
/* 12704 */       return true; }
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/* 12710 */       if ((this.bitField0_ & 0x1) != 0) {
/* 12711 */         GeneratedMessageV3.writeString(output, 1, this.name_);
/*       */       }
/* 12713 */       if ((this.bitField0_ & 0x20) != 0) {
/* 12714 */         GeneratedMessageV3.writeString(output, 2, this.extendee_);
/*       */       }
/* 12716 */       if ((this.bitField0_ & 0x2) != 0) {
/* 12717 */         output.writeInt32(3, this.number_);
/*       */       }
/* 12719 */       if ((this.bitField0_ & 0x4) != 0) {
/* 12720 */         output.writeEnum(4, this.label_);
/*       */       }
/* 12722 */       if ((this.bitField0_ & 0x8) != 0) {
/* 12723 */         output.writeEnum(5, this.type_);
/*       */       }
/* 12725 */       if ((this.bitField0_ & 0x10) != 0) {
/* 12726 */         GeneratedMessageV3.writeString(output, 6, this.typeName_);
/*       */       }
/* 12728 */       if ((this.bitField0_ & 0x40) != 0) {
/* 12729 */         GeneratedMessageV3.writeString(output, 7, this.defaultValue_);
/*       */       }
/* 12731 */       if ((this.bitField0_ & 0x200) != 0) {
/* 12732 */         output.writeMessage(8, getOptions());
/*       */       }
/* 12734 */       if ((this.bitField0_ & 0x80) != 0) {
/* 12735 */         output.writeInt32(9, this.oneofIndex_);
/*       */       }
/* 12737 */       if ((this.bitField0_ & 0x100) != 0) {
/* 12738 */         GeneratedMessageV3.writeString(output, 10, this.jsonName_);
/*       */       }
/* 12740 */       if ((this.bitField0_ & 0x400) != 0) {
/* 12741 */         output.writeBool(17, this.proto3Optional_);
/*       */       }
/* 12743 */       this.unknownFields.writeTo(output);
/*       */     }
/*       */ 
/*       */     
/*       */     public int getSerializedSize() {
/* 12748 */       int size = this.memoizedSize;
/* 12749 */       if (size != -1) return size;
/*       */       
/* 12751 */       size = 0;
/* 12752 */       if ((this.bitField0_ & 0x1) != 0) {
/* 12753 */         size += GeneratedMessageV3.computeStringSize(1, this.name_);
/*       */       }
/* 12755 */       if ((this.bitField0_ & 0x20) != 0) {
/* 12756 */         size += GeneratedMessageV3.computeStringSize(2, this.extendee_);
/*       */       }
/* 12758 */       if ((this.bitField0_ & 0x2) != 0) {
/* 12759 */         size += 
/* 12760 */           CodedOutputStream.computeInt32Size(3, this.number_);
/*       */       }
/* 12762 */       if ((this.bitField0_ & 0x4) != 0) {
/* 12763 */         size += 
/* 12764 */           CodedOutputStream.computeEnumSize(4, this.label_);
/*       */       }
/* 12766 */       if ((this.bitField0_ & 0x8) != 0) {
/* 12767 */         size += 
/* 12768 */           CodedOutputStream.computeEnumSize(5, this.type_);
/*       */       }
/* 12770 */       if ((this.bitField0_ & 0x10) != 0) {
/* 12771 */         size += GeneratedMessageV3.computeStringSize(6, this.typeName_);
/*       */       }
/* 12773 */       if ((this.bitField0_ & 0x40) != 0) {
/* 12774 */         size += GeneratedMessageV3.computeStringSize(7, this.defaultValue_);
/*       */       }
/* 12776 */       if ((this.bitField0_ & 0x200) != 0) {
/* 12777 */         size += 
/* 12778 */           CodedOutputStream.computeMessageSize(8, getOptions());
/*       */       }
/* 12780 */       if ((this.bitField0_ & 0x80) != 0) {
/* 12781 */         size += 
/* 12782 */           CodedOutputStream.computeInt32Size(9, this.oneofIndex_);
/*       */       }
/* 12784 */       if ((this.bitField0_ & 0x100) != 0) {
/* 12785 */         size += GeneratedMessageV3.computeStringSize(10, this.jsonName_);
/*       */       }
/* 12787 */       if ((this.bitField0_ & 0x400) != 0) {
/* 12788 */         size += 
/* 12789 */           CodedOutputStream.computeBoolSize(17, this.proto3Optional_);
/*       */       }
/* 12791 */       size += this.unknownFields.getSerializedSize();
/* 12792 */       this.memoizedSize = size;
/* 12793 */       return size;
/*       */     }
/*       */ 
/*       */     
/*       */     public boolean equals(Object obj) {
/* 12798 */       if (obj == this) {
/* 12799 */         return true;
/*       */       }
/* 12801 */       if (!(obj instanceof FieldDescriptorProto)) {
/* 12802 */         return super.equals(obj);
/*       */       }
/* 12804 */       FieldDescriptorProto other = (FieldDescriptorProto)obj;
/*       */       
/* 12806 */       if (hasName() != other.hasName()) return false; 
/* 12807 */       if (hasName() && 
/*       */         
/* 12809 */         !getName().equals(other.getName())) return false;
/*       */       
/* 12811 */       if (hasNumber() != other.hasNumber()) return false; 
/* 12812 */       if (hasNumber() && 
/* 12813 */         getNumber() != other
/* 12814 */         .getNumber()) return false;
/*       */       
/* 12816 */       if (hasLabel() != other.hasLabel()) return false; 
/* 12817 */       if (hasLabel() && 
/* 12818 */         this.label_ != other.label_) return false;
/*       */       
/* 12820 */       if (hasType() != other.hasType()) return false; 
/* 12821 */       if (hasType() && 
/* 12822 */         this.type_ != other.type_) return false;
/*       */       
/* 12824 */       if (hasTypeName() != other.hasTypeName()) return false; 
/* 12825 */       if (hasTypeName() && 
/*       */         
/* 12827 */         !getTypeName().equals(other.getTypeName())) return false;
/*       */       
/* 12829 */       if (hasExtendee() != other.hasExtendee()) return false; 
/* 12830 */       if (hasExtendee() && 
/*       */         
/* 12832 */         !getExtendee().equals(other.getExtendee())) return false;
/*       */       
/* 12834 */       if (hasDefaultValue() != other.hasDefaultValue()) return false; 
/* 12835 */       if (hasDefaultValue() && 
/*       */         
/* 12837 */         !getDefaultValue().equals(other.getDefaultValue())) return false;
/*       */       
/* 12839 */       if (hasOneofIndex() != other.hasOneofIndex()) return false; 
/* 12840 */       if (hasOneofIndex() && 
/* 12841 */         getOneofIndex() != other
/* 12842 */         .getOneofIndex()) return false;
/*       */       
/* 12844 */       if (hasJsonName() != other.hasJsonName()) return false; 
/* 12845 */       if (hasJsonName() && 
/*       */         
/* 12847 */         !getJsonName().equals(other.getJsonName())) return false;
/*       */       
/* 12849 */       if (hasOptions() != other.hasOptions()) return false; 
/* 12850 */       if (hasOptions() && 
/*       */         
/* 12852 */         !getOptions().equals(other.getOptions())) return false;
/*       */       
/* 12854 */       if (hasProto3Optional() != other.hasProto3Optional()) return false; 
/* 12855 */       if (hasProto3Optional() && 
/* 12856 */         getProto3Optional() != other
/* 12857 */         .getProto3Optional()) return false;
/*       */       
/* 12859 */       if (!this.unknownFields.equals(other.unknownFields)) return false; 
/* 12860 */       return true;
/*       */     }
/*       */ 
/*       */     
/*       */     public int hashCode() {
/* 12865 */       if (this.memoizedHashCode != 0) {
/* 12866 */         return this.memoizedHashCode;
/*       */       }
/* 12868 */       int hash = 41;
/* 12869 */       hash = 19 * hash + getDescriptor().hashCode();
/* 12870 */       if (hasName()) {
/* 12871 */         hash = 37 * hash + 1;
/* 12872 */         hash = 53 * hash + getName().hashCode();
/*       */       } 
/* 12874 */       if (hasNumber()) {
/* 12875 */         hash = 37 * hash + 3;
/* 12876 */         hash = 53 * hash + getNumber();
/*       */       } 
/* 12878 */       if (hasLabel()) {
/* 12879 */         hash = 37 * hash + 4;
/* 12880 */         hash = 53 * hash + this.label_;
/*       */       } 
/* 12882 */       if (hasType()) {
/* 12883 */         hash = 37 * hash + 5;
/* 12884 */         hash = 53 * hash + this.type_;
/*       */       } 
/* 12886 */       if (hasTypeName()) {
/* 12887 */         hash = 37 * hash + 6;
/* 12888 */         hash = 53 * hash + getTypeName().hashCode();
/*       */       } 
/* 12890 */       if (hasExtendee()) {
/* 12891 */         hash = 37 * hash + 2;
/* 12892 */         hash = 53 * hash + getExtendee().hashCode();
/*       */       } 
/* 12894 */       if (hasDefaultValue()) {
/* 12895 */         hash = 37 * hash + 7;
/* 12896 */         hash = 53 * hash + getDefaultValue().hashCode();
/*       */       } 
/* 12898 */       if (hasOneofIndex()) {
/* 12899 */         hash = 37 * hash + 9;
/* 12900 */         hash = 53 * hash + getOneofIndex();
/*       */       } 
/* 12902 */       if (hasJsonName()) {
/* 12903 */         hash = 37 * hash + 10;
/* 12904 */         hash = 53 * hash + getJsonName().hashCode();
/*       */       } 
/* 12906 */       if (hasOptions()) {
/* 12907 */         hash = 37 * hash + 8;
/* 12908 */         hash = 53 * hash + getOptions().hashCode();
/*       */       } 
/* 12910 */       if (hasProto3Optional()) {
/* 12911 */         hash = 37 * hash + 17;
/* 12912 */         hash = 53 * hash + Internal.hashBoolean(
/* 12913 */             getProto3Optional());
/*       */       } 
/* 12915 */       hash = 29 * hash + this.unknownFields.hashCode();
/* 12916 */       this.memoizedHashCode = hash;
/* 12917 */       return hash;
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static FieldDescriptorProto parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
/* 12923 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static FieldDescriptorProto parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 12929 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static FieldDescriptorProto parseFrom(ByteString data) throws InvalidProtocolBufferException {
/* 12934 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static FieldDescriptorProto parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 12940 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static FieldDescriptorProto parseFrom(byte[] data) throws InvalidProtocolBufferException {
/* 12944 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static FieldDescriptorProto parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 12950 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static FieldDescriptorProto parseFrom(InputStream input) throws IOException {
/* 12954 */       return 
/* 12955 */         GeneratedMessageV3.<FieldDescriptorProto>parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static FieldDescriptorProto parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 12961 */       return 
/* 12962 */         GeneratedMessageV3.<FieldDescriptorProto>parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static FieldDescriptorProto parseDelimitedFrom(InputStream input) throws IOException {
/* 12966 */       return 
/* 12967 */         GeneratedMessageV3.<FieldDescriptorProto>parseDelimitedWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static FieldDescriptorProto parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 12973 */       return 
/* 12974 */         GeneratedMessageV3.<FieldDescriptorProto>parseDelimitedWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static FieldDescriptorProto parseFrom(CodedInputStream input) throws IOException {
/* 12979 */       return 
/* 12980 */         GeneratedMessageV3.<FieldDescriptorProto>parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static FieldDescriptorProto parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 12986 */       return 
/* 12987 */         GeneratedMessageV3.<FieldDescriptorProto>parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public Builder newBuilderForType() {
/* 12991 */       return newBuilder();
/*       */     } public static Builder newBuilder() {
/* 12993 */       return DEFAULT_INSTANCE.toBuilder();
/*       */     }
/*       */     public static Builder newBuilder(FieldDescriptorProto prototype) {
/* 12996 */       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
/*       */     }
/*       */     
/*       */     public Builder toBuilder() {
/* 13000 */       return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder())
/* 13001 */         .mergeFrom(this);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     protected Builder newBuilderForType(BuilderParent parent) {
/* 13007 */       Builder builder = new Builder(parent);
/* 13008 */       return builder;
/*       */     }
/*       */     public static final class Builder extends GeneratedMessageV3.Builder<Builder> implements FieldDescriptorProtoOrBuilder { private int bitField0_; private Object name_; private int number_;
/*       */       private int label_;
/*       */       private int type_;
/*       */       private Object typeName_;
/*       */       private Object extendee_;
/*       */       private Object defaultValue_;
/*       */       private int oneofIndex_;
/*       */       private Object jsonName_;
/*       */       private FieldOptions options_;
/*       */       private SingleFieldBuilderV3<FieldOptions, FieldOptions.Builder, FieldOptionsOrBuilder> optionsBuilder_;
/*       */       private boolean proto3Optional_;
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/* 13023 */         return DescriptorProtos.internal_static_google_protobuf_FieldDescriptorProto_descriptor;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       protected FieldAccessorTable internalGetFieldAccessorTable() {
/* 13029 */         return DescriptorProtos.internal_static_google_protobuf_FieldDescriptorProto_fieldAccessorTable
/* 13030 */           .ensureFieldAccessorsInitialized((Class) FieldDescriptorProto.class, (Class)Builder.class);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private Builder()
/*       */       {
/* 13282 */         this.name_ = "";
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 13405 */         this.label_ = 1;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 13448 */         this.type_ = 1;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 13511 */         this.typeName_ = "";
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 13643 */         this.extendee_ = "";
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 13757 */         this.defaultValue_ = "";
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 13948 */         this.jsonName_ = ""; maybeForceBuilderInitialization(); } private Builder(BuilderParent parent) { super(parent); this.name_ = ""; this.label_ = 1; this.type_ = 1; this.typeName_ = ""; this.extendee_ = ""; this.defaultValue_ = ""; this.jsonName_ = ""; maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (GeneratedMessageV3.alwaysUseFieldBuilders) getOptionsFieldBuilder();  } public Builder clear() { super.clear(); this.name_ = ""; this.bitField0_ &= 0xFFFFFFFE; this.number_ = 0; this.bitField0_ &= 0xFFFFFFFD; this.label_ = 1; this.bitField0_ &= 0xFFFFFFFB; this.type_ = 1; this.bitField0_ &= 0xFFFFFFF7; this.typeName_ = ""; this.bitField0_ &= 0xFFFFFFEF; this.extendee_ = ""; this.bitField0_ &= 0xFFFFFFDF; this.defaultValue_ = ""; this.bitField0_ &= 0xFFFFFFBF; this.oneofIndex_ = 0; this.bitField0_ &= 0xFFFFFF7F; this.jsonName_ = ""; this.bitField0_ &= 0xFFFFFEFF; if (this.optionsBuilder_ == null) { this.options_ = null; } else { this.optionsBuilder_.clear(); }  this.bitField0_ &= 0xFFFFFDFF; this.proto3Optional_ = false; this.bitField0_ &= 0xFFFFFBFF; return this; } public Descriptors.Descriptor getDescriptorForType() { return DescriptorProtos.internal_static_google_protobuf_FieldDescriptorProto_descriptor; } public FieldDescriptorProto getDefaultInstanceForType() { return FieldDescriptorProto.getDefaultInstance(); } public FieldDescriptorProto build() { FieldDescriptorProto result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public FieldDescriptorProto buildPartial() { FieldDescriptorProto result = new FieldDescriptorProto(this); int from_bitField0_ = this.bitField0_; int to_bitField0_ = 0; if ((from_bitField0_ & 0x1) != 0) to_bitField0_ |= 0x1;  result.name_ = this.name_; if ((from_bitField0_ & 0x2) != 0) { result.number_ = this.number_; to_bitField0_ |= 0x2; }  if ((from_bitField0_ & 0x4) != 0) to_bitField0_ |= 0x4;  result.label_ = this.label_; if ((from_bitField0_ & 0x8) != 0) to_bitField0_ |= 0x8;  result.type_ = this.type_; if ((from_bitField0_ & 0x10) != 0) to_bitField0_ |= 0x10;  result.typeName_ = this.typeName_; if ((from_bitField0_ & 0x20) != 0) to_bitField0_ |= 0x20;  result.extendee_ = this.extendee_; if ((from_bitField0_ & 0x40) != 0) to_bitField0_ |= 0x40;  result.defaultValue_ = this.defaultValue_; if ((from_bitField0_ & 0x80) != 0) { result.oneofIndex_ = this.oneofIndex_; to_bitField0_ |= 0x80; }  if ((from_bitField0_ & 0x100) != 0) to_bitField0_ |= 0x100;  result.jsonName_ = this.jsonName_; if ((from_bitField0_ & 0x200) != 0) { if (this.optionsBuilder_ == null) { result.options_ = this.options_; } else { result.options_ = this.optionsBuilder_.build(); }  to_bitField0_ |= 0x200; }  if ((from_bitField0_ & 0x400) != 0) { result.proto3Optional_ = this.proto3Optional_; to_bitField0_ |= 0x400; }  result.bitField0_ = to_bitField0_; onBuilt(); return result; } public Builder clone() { return super.clone(); } public Builder setField(Descriptors.FieldDescriptor field, Object value) { return super.setField(field, value); } public Builder clearField(Descriptors.FieldDescriptor field) { return super.clearField(field); } public Builder clearOneof(Descriptors.OneofDescriptor oneof) { return super.clearOneof(oneof); } public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) { return super.setRepeatedField(field, index, value); } public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) { return super.addRepeatedField(field, value); } public Builder mergeFrom(Message other) { if (other instanceof FieldDescriptorProto) return mergeFrom((FieldDescriptorProto)other);  super.mergeFrom(other); return this; } public Builder mergeFrom(FieldDescriptorProto other) { if (other == FieldDescriptorProto.getDefaultInstance()) return this;  if (other.hasName()) { this.bitField0_ |= 0x1; this.name_ = other.name_; onChanged(); }  if (other.hasNumber()) setNumber(other.getNumber());  if (other.hasLabel()) setLabel(other.getLabel());  if (other.hasType()) setType(other.getType());  if (other.hasTypeName()) { this.bitField0_ |= 0x10; this.typeName_ = other.typeName_; onChanged(); }  if (other.hasExtendee()) { this.bitField0_ |= 0x20; this.extendee_ = other.extendee_; onChanged(); }  if (other.hasDefaultValue()) { this.bitField0_ |= 0x40; this.defaultValue_ = other.defaultValue_; onChanged(); }  if (other.hasOneofIndex()) setOneofIndex(other.getOneofIndex());  if (other.hasJsonName()) { this.bitField0_ |= 0x100; this.jsonName_ = other.jsonName_; onChanged(); }  if (other.hasOptions()) mergeOptions(other.getOptions());  if (other.hasProto3Optional()) setProto3Optional(other.getProto3Optional());  mergeUnknownFields(other.unknownFields); onChanged(); return this; } public final boolean isInitialized() { if (hasOptions() && !getOptions().isInitialized()) return false;  return true; } public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { FieldDescriptorProto parsedMessage = null; try { parsedMessage = FieldDescriptorProto.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (FieldDescriptorProto)e.getUnfinishedMessage(); throw e.unwrapIOException(); } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; } public boolean hasName() { return ((this.bitField0_ & 0x1) != 0); } public String getName() { Object ref = this.name_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.name_ = s;  return s; }  return (String)ref; } public ByteString getNameBytes() { Object ref = this.name_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.name_ = b; return b; }  return (ByteString)ref; } public Builder setName(String value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x1; this.name_ = value; onChanged(); return this; } public Builder clearName() { this.bitField0_ &= 0xFFFFFFFE; this.name_ = FieldDescriptorProto.getDefaultInstance().getName(); onChanged(); return this; } public Builder setNameBytes(ByteString value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x1; this.name_ = value; onChanged(); return this; } public boolean hasNumber() { return ((this.bitField0_ & 0x2) != 0); } public int getNumber() { return this.number_; } public Builder setNumber(int value) { this.bitField0_ |= 0x2; this.number_ = value; onChanged(); return this; } public Builder clearNumber() { this.bitField0_ &= 0xFFFFFFFD; this.number_ = 0; onChanged(); return this; } public boolean hasLabel() { return ((this.bitField0_ & 0x4) != 0); } public Label getLabel() { Label result = Label.valueOf(this.label_); return (result == null) ? Label.LABEL_OPTIONAL : result; } public Builder setLabel(Label value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x4; this.label_ = value.getNumber(); onChanged(); return this; } public Builder clearLabel() { this.bitField0_ &= 0xFFFFFFFB; this.label_ = 1; onChanged(); return this; } public boolean hasType() { return ((this.bitField0_ & 0x8) != 0); } public Type getType() { Type result = Type.valueOf(this.type_); return (result == null) ? Type.TYPE_DOUBLE : result; } public Builder setType(Type value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x8; this.type_ = value.getNumber(); onChanged(); return this; } public Builder clearType() { this.bitField0_ &= 0xFFFFFFF7; this.type_ = 1; onChanged(); return this; } public boolean hasTypeName() { return ((this.bitField0_ & 0x10) != 0); } public String getTypeName() { Object ref = this.typeName_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.typeName_ = s;  return s; }  return (String)ref; } public ByteString getTypeNameBytes() { Object ref = this.typeName_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.typeName_ = b; return b; }  return (ByteString)ref; } public Builder setTypeName(String value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x10; this.typeName_ = value; onChanged(); return this; } public Builder clearTypeName() { this.bitField0_ &= 0xFFFFFFEF; this.typeName_ = FieldDescriptorProto.getDefaultInstance().getTypeName(); onChanged(); return this; } public Builder setTypeNameBytes(ByteString value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x10; this.typeName_ = value; onChanged(); return this; } public boolean hasExtendee() { return ((this.bitField0_ & 0x20) != 0); } public String getExtendee() { Object ref = this.extendee_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.extendee_ = s;  return s; }  return (String)ref; } public ByteString getExtendeeBytes() { Object ref = this.extendee_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.extendee_ = b; return b; }  return (ByteString)ref; } public Builder setExtendee(String value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x20; this.extendee_ = value; onChanged(); return this; }
/*       */       public Builder clearExtendee() { this.bitField0_ &= 0xFFFFFFDF; this.extendee_ = FieldDescriptorProto.getDefaultInstance().getExtendee(); onChanged(); return this; }
/*       */       public Builder setExtendeeBytes(ByteString value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x20; this.extendee_ = value; onChanged(); return this; }
/*       */       public boolean hasDefaultValue() { return ((this.bitField0_ & 0x40) != 0); }
/*       */       public String getDefaultValue() { Object ref = this.defaultValue_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.defaultValue_ = s;  return s; }  return (String)ref; }
/*       */       public ByteString getDefaultValueBytes() { Object ref = this.defaultValue_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.defaultValue_ = b; return b; }  return (ByteString)ref; }
/*       */       public Builder setDefaultValue(String value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x40; this.defaultValue_ = value; onChanged(); return this; }
/*       */       public Builder clearDefaultValue() { this.bitField0_ &= 0xFFFFFFBF; this.defaultValue_ = FieldDescriptorProto.getDefaultInstance().getDefaultValue(); onChanged(); return this; }
/*       */       public Builder setDefaultValueBytes(ByteString value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x40; this.defaultValue_ = value; onChanged(); return this; }
/*       */       public boolean hasOneofIndex() { return ((this.bitField0_ & 0x80) != 0); }
/*       */       public int getOneofIndex() { return this.oneofIndex_; }
/*       */       public Builder setOneofIndex(int value) { this.bitField0_ |= 0x80; this.oneofIndex_ = value; onChanged(); return this; }
/*       */       public Builder clearOneofIndex() { this.bitField0_ &= 0xFFFFFF7F; this.oneofIndex_ = 0; onChanged(); return this; }
/* 13961 */       public boolean hasJsonName() { return ((this.bitField0_ & 0x100) != 0); }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public String getJsonName() {
/* 13975 */         Object ref = this.jsonName_;
/* 13976 */         if (!(ref instanceof String)) {
/* 13977 */           ByteString bs = (ByteString)ref;
/*       */           
/* 13979 */           String s = bs.toStringUtf8();
/* 13980 */           if (bs.isValidUtf8()) {
/* 13981 */             this.jsonName_ = s;
/*       */           }
/* 13983 */           return s;
/*       */         } 
/* 13985 */         return (String)ref;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public ByteString getJsonNameBytes() {
/* 14001 */         Object ref = this.jsonName_;
/* 14002 */         if (ref instanceof String) {
/*       */           
/* 14004 */           ByteString b = ByteString.copyFromUtf8((String)ref);
/*       */           
/* 14006 */           this.jsonName_ = b;
/* 14007 */           return b;
/*       */         } 
/* 14009 */         return (ByteString)ref;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setJsonName(String value) {
/* 14026 */         if (value == null) {
/* 14027 */           throw new NullPointerException();
/*       */         }
/* 14029 */         this.bitField0_ |= 0x100;
/* 14030 */         this.jsonName_ = value;
/* 14031 */         onChanged();
/* 14032 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearJsonName() {
/* 14046 */         this.bitField0_ &= 0xFFFFFEFF;
/* 14047 */         this.jsonName_ = FieldDescriptorProto.getDefaultInstance().getJsonName();
/* 14048 */         onChanged();
/* 14049 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setJsonNameBytes(ByteString value) {
/* 14065 */         if (value == null) {
/* 14066 */           throw new NullPointerException();
/*       */         }
/* 14068 */         this.bitField0_ |= 0x100;
/* 14069 */         this.jsonName_ = value;
/* 14070 */         onChanged();
/* 14071 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasOptions() {
/* 14082 */         return ((this.bitField0_ & 0x200) != 0);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public FieldOptions getOptions() {
/* 14089 */         if (this.optionsBuilder_ == null) {
/* 14090 */           return (this.options_ == null) ? FieldOptions.getDefaultInstance() : this.options_;
/*       */         }
/* 14092 */         return this.optionsBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setOptions(FieldOptions value) {
/* 14099 */         if (this.optionsBuilder_ == null) {
/* 14100 */           if (value == null) {
/* 14101 */             throw new NullPointerException();
/*       */           }
/* 14103 */           this.options_ = value;
/* 14104 */           onChanged();
/*       */         } else {
/* 14106 */           this.optionsBuilder_.setMessage(value);
/*       */         } 
/* 14108 */         this.bitField0_ |= 0x200;
/* 14109 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setOptions(FieldOptions.Builder builderForValue) {
/* 14116 */         if (this.optionsBuilder_ == null) {
/* 14117 */           this.options_ = builderForValue.build();
/* 14118 */           onChanged();
/*       */         } else {
/* 14120 */           this.optionsBuilder_.setMessage(builderForValue.build());
/*       */         } 
/* 14122 */         this.bitField0_ |= 0x200;
/* 14123 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeOptions(FieldOptions value) {
/* 14129 */         if (this.optionsBuilder_ == null) {
/* 14130 */           if ((this.bitField0_ & 0x200) != 0 && this.options_ != null && this.options_ != 
/*       */             
/* 14132 */             FieldOptions.getDefaultInstance()) {
/* 14133 */             this
/* 14134 */               .options_ = FieldOptions.newBuilder(this.options_).mergeFrom(value).buildPartial();
/*       */           } else {
/* 14136 */             this.options_ = value;
/*       */           } 
/* 14138 */           onChanged();
/*       */         } else {
/* 14140 */           this.optionsBuilder_.mergeFrom(value);
/*       */         } 
/* 14142 */         this.bitField0_ |= 0x200;
/* 14143 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearOptions() {
/* 14149 */         if (this.optionsBuilder_ == null) {
/* 14150 */           this.options_ = null;
/* 14151 */           onChanged();
/*       */         } else {
/* 14153 */           this.optionsBuilder_.clear();
/*       */         } 
/* 14155 */         this.bitField0_ &= 0xFFFFFDFF;
/* 14156 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public FieldOptions.Builder getOptionsBuilder() {
/* 14162 */         this.bitField0_ |= 0x200;
/* 14163 */         onChanged();
/* 14164 */         return getOptionsFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public FieldOptionsOrBuilder getOptionsOrBuilder() {
/* 14170 */         if (this.optionsBuilder_ != null) {
/* 14171 */           return this.optionsBuilder_.getMessageOrBuilder();
/*       */         }
/* 14173 */         return (this.options_ == null) ? 
/* 14174 */           FieldOptions.getDefaultInstance() : this.options_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<FieldOptions, FieldOptions.Builder, FieldOptionsOrBuilder> getOptionsFieldBuilder() {
/* 14183 */         if (this.optionsBuilder_ == null) {
/* 14184 */           this
/*       */ 
/*       */ 
/*       */             
/* 14188 */             .optionsBuilder_ = new SingleFieldBuilderV3<>(getOptions(), getParentForChildren(), isClean());
/* 14189 */           this.options_ = null;
/*       */         } 
/* 14191 */         return this.optionsBuilder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasProto3Optional() {
/* 14222 */         return ((this.bitField0_ & 0x400) != 0);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean getProto3Optional() {
/* 14251 */         return this.proto3Optional_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setProto3Optional(boolean value) {
/* 14280 */         this.bitField0_ |= 0x400;
/* 14281 */         this.proto3Optional_ = value;
/* 14282 */         onChanged();
/* 14283 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearProto3Optional() {
/* 14311 */         this.bitField0_ &= 0xFFFFFBFF;
/* 14312 */         this.proto3Optional_ = false;
/* 14313 */         onChanged();
/* 14314 */         return this;
/*       */       }
/*       */ 
/*       */       
/*       */       public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
/* 14319 */         return super.setUnknownFields(unknownFields);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
/* 14325 */         return super.mergeUnknownFields(unknownFields);
/*       */       } }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 14335 */     private static final FieldDescriptorProto DEFAULT_INSTANCE = new FieldDescriptorProto();
/*       */ 
/*       */     
/*       */     public static FieldDescriptorProto getDefaultInstance() {
/* 14339 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */     
/*       */     @Deprecated
/* 14343 */     public static final Parser<FieldDescriptorProto> PARSER = new AbstractParser<FieldDescriptorProto>()
/*       */       {
/*       */ 
/*       */         
/*       */         public FieldDescriptorProto parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException
/*       */         {
/* 14349 */           return new FieldDescriptorProto(input, extensionRegistry);
/*       */         }
/*       */       };
/*       */     
/*       */     public static Parser<FieldDescriptorProto> parser() {
/* 14354 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public Parser<FieldDescriptorProto> getParserForType() {
/* 14359 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public FieldDescriptorProto getDefaultInstanceForType() {
/* 14364 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */   }
/*       */ 
/*       */ 
/*       */   
/*       */   public static interface OneofDescriptorProtoOrBuilder
/*       */     extends MessageOrBuilder
/*       */   {
/*       */     boolean hasName();
/*       */ 
/*       */ 
/*       */     
/*       */     String getName();
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getNameBytes();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasOptions();
/*       */ 
/*       */ 
/*       */     
/*       */     OneofOptions getOptions();
/*       */ 
/*       */ 
/*       */     
/*       */     OneofOptionsOrBuilder getOptionsOrBuilder();
/*       */   }
/*       */ 
/*       */ 
/*       */   
/*       */   public static final class OneofDescriptorProto
/*       */     extends GeneratedMessageV3
/*       */     implements OneofDescriptorProtoOrBuilder
/*       */   {
/*       */     private static final long serialVersionUID = 0L;
/*       */     
/*       */     private int bitField0_;
/*       */     
/*       */     public static final int NAME_FIELD_NUMBER = 1;
/*       */     
/*       */     private volatile Object name_;
/*       */     
/*       */     public static final int OPTIONS_FIELD_NUMBER = 2;
/*       */     
/*       */     private OneofOptions options_;
/*       */     
/*       */     private byte memoizedIsInitialized;
/*       */ 
/*       */     
/*       */     private OneofDescriptorProto(GeneratedMessageV3.Builder<?> builder)
/*       */     {
/* 14419 */       super(builder);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/* 14582 */       this.memoizedIsInitialized = -1; } private OneofDescriptorProto() { this.memoizedIsInitialized = -1; this.name_ = ""; } protected Object newInstance(UnusedPrivateParameter unused) { return new OneofDescriptorProto(); } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private OneofDescriptorProto(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this(); if (extensionRegistry == null) throw new NullPointerException();  int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { ByteString bs; OneofOptions.Builder subBuilder; int tag = input.readTag(); switch (tag) { case 0: done = true; continue;case 10: bs = input.readBytes(); this.bitField0_ |= 0x1; this.name_ = bs; continue;case 18: subBuilder = null; if ((this.bitField0_ & 0x2) != 0) subBuilder = this.options_.toBuilder();  this.options_ = input.<OneofOptions>readMessage(OneofOptions.PARSER, extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.options_); this.options_ = subBuilder.buildPartial(); }  this.bitField0_ |= 0x2; continue; }  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this); } finally { this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return DescriptorProtos.internal_static_google_protobuf_OneofDescriptorProto_descriptor; } protected FieldAccessorTable internalGetFieldAccessorTable() { return DescriptorProtos.internal_static_google_protobuf_OneofDescriptorProto_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)OneofDescriptorProto.class, (Class)Builder.class); } public boolean hasName() { return ((this.bitField0_ & 0x1) != 0); } public String getName() { Object ref = this.name_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.name_ = s;  return s; } public ByteString getNameBytes() { Object ref = this.name_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.name_ = b; return b; }  return (ByteString)ref; } public boolean hasOptions() { return ((this.bitField0_ & 0x2) != 0); }
/*       */     public OneofOptions getOptions() { return (this.options_ == null) ? OneofOptions.getDefaultInstance() : this.options_; }
/*       */     public OneofOptionsOrBuilder getOptionsOrBuilder() { return (this.options_ == null) ? OneofOptions.getDefaultInstance() : this.options_; }
/* 14585 */     public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized;
/* 14586 */       if (isInitialized == 1) return true; 
/* 14587 */       if (isInitialized == 0) return false;
/*       */       
/* 14589 */       if (hasOptions() && 
/* 14590 */         !getOptions().isInitialized()) {
/* 14591 */         this.memoizedIsInitialized = 0;
/* 14592 */         return false;
/*       */       } 
/*       */       
/* 14595 */       this.memoizedIsInitialized = 1;
/* 14596 */       return true; }
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/* 14602 */       if ((this.bitField0_ & 0x1) != 0) {
/* 14603 */         GeneratedMessageV3.writeString(output, 1, this.name_);
/*       */       }
/* 14605 */       if ((this.bitField0_ & 0x2) != 0) {
/* 14606 */         output.writeMessage(2, getOptions());
/*       */       }
/* 14608 */       this.unknownFields.writeTo(output);
/*       */     }
/*       */ 
/*       */     
/*       */     public int getSerializedSize() {
/* 14613 */       int size = this.memoizedSize;
/* 14614 */       if (size != -1) return size;
/*       */       
/* 14616 */       size = 0;
/* 14617 */       if ((this.bitField0_ & 0x1) != 0) {
/* 14618 */         size += GeneratedMessageV3.computeStringSize(1, this.name_);
/*       */       }
/* 14620 */       if ((this.bitField0_ & 0x2) != 0) {
/* 14621 */         size += 
/* 14622 */           CodedOutputStream.computeMessageSize(2, getOptions());
/*       */       }
/* 14624 */       size += this.unknownFields.getSerializedSize();
/* 14625 */       this.memoizedSize = size;
/* 14626 */       return size;
/*       */     }
/*       */ 
/*       */     
/*       */     public boolean equals(Object obj) {
/* 14631 */       if (obj == this) {
/* 14632 */         return true;
/*       */       }
/* 14634 */       if (!(obj instanceof OneofDescriptorProto)) {
/* 14635 */         return super.equals(obj);
/*       */       }
/* 14637 */       OneofDescriptorProto other = (OneofDescriptorProto)obj;
/*       */       
/* 14639 */       if (hasName() != other.hasName()) return false; 
/* 14640 */       if (hasName() && 
/*       */         
/* 14642 */         !getName().equals(other.getName())) return false;
/*       */       
/* 14644 */       if (hasOptions() != other.hasOptions()) return false; 
/* 14645 */       if (hasOptions() && 
/*       */         
/* 14647 */         !getOptions().equals(other.getOptions())) return false;
/*       */       
/* 14649 */       if (!this.unknownFields.equals(other.unknownFields)) return false; 
/* 14650 */       return true;
/*       */     }
/*       */ 
/*       */     
/*       */     public int hashCode() {
/* 14655 */       if (this.memoizedHashCode != 0) {
/* 14656 */         return this.memoizedHashCode;
/*       */       }
/* 14658 */       int hash = 41;
/* 14659 */       hash = 19 * hash + getDescriptor().hashCode();
/* 14660 */       if (hasName()) {
/* 14661 */         hash = 37 * hash + 1;
/* 14662 */         hash = 53 * hash + getName().hashCode();
/*       */       } 
/* 14664 */       if (hasOptions()) {
/* 14665 */         hash = 37 * hash + 2;
/* 14666 */         hash = 53 * hash + getOptions().hashCode();
/*       */       } 
/* 14668 */       hash = 29 * hash + this.unknownFields.hashCode();
/* 14669 */       this.memoizedHashCode = hash;
/* 14670 */       return hash;
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static OneofDescriptorProto parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
/* 14676 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static OneofDescriptorProto parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 14682 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static OneofDescriptorProto parseFrom(ByteString data) throws InvalidProtocolBufferException {
/* 14687 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static OneofDescriptorProto parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 14693 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static OneofDescriptorProto parseFrom(byte[] data) throws InvalidProtocolBufferException {
/* 14697 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static OneofDescriptorProto parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 14703 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static OneofDescriptorProto parseFrom(InputStream input) throws IOException {
/* 14707 */       return 
/* 14708 */         GeneratedMessageV3.<OneofDescriptorProto>parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static OneofDescriptorProto parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 14714 */       return 
/* 14715 */         GeneratedMessageV3.<OneofDescriptorProto>parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static OneofDescriptorProto parseDelimitedFrom(InputStream input) throws IOException {
/* 14719 */       return 
/* 14720 */         GeneratedMessageV3.<OneofDescriptorProto>parseDelimitedWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static OneofDescriptorProto parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 14726 */       return 
/* 14727 */         GeneratedMessageV3.<OneofDescriptorProto>parseDelimitedWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static OneofDescriptorProto parseFrom(CodedInputStream input) throws IOException {
/* 14732 */       return 
/* 14733 */         GeneratedMessageV3.<OneofDescriptorProto>parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static OneofDescriptorProto parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 14739 */       return 
/* 14740 */         GeneratedMessageV3.<OneofDescriptorProto>parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public Builder newBuilderForType() {
/* 14744 */       return newBuilder();
/*       */     } public static Builder newBuilder() {
/* 14746 */       return DEFAULT_INSTANCE.toBuilder();
/*       */     }
/*       */     public static Builder newBuilder(OneofDescriptorProto prototype) {
/* 14749 */       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
/*       */     }
/*       */     
/*       */     public Builder toBuilder() {
/* 14753 */       return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder())
/* 14754 */         .mergeFrom(this);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     protected Builder newBuilderForType(BuilderParent parent) {
/* 14760 */       Builder builder = new Builder(parent);
/* 14761 */       return builder;
/*       */     }
/*       */ 
/*       */     
/*       */     public static final class Builder
/*       */       extends GeneratedMessageV3.Builder<Builder>
/*       */       implements OneofDescriptorProtoOrBuilder
/*       */     {
/*       */       private int bitField0_;
/*       */       
/*       */       private Object name_;
/*       */       private OneofOptions options_;
/*       */       private SingleFieldBuilderV3<OneofOptions, OneofOptions.Builder, OneofOptionsOrBuilder> optionsBuilder_;
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/* 14776 */         return DescriptorProtos.internal_static_google_protobuf_OneofDescriptorProto_descriptor;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       protected FieldAccessorTable internalGetFieldAccessorTable() {
/* 14782 */         return DescriptorProtos.internal_static_google_protobuf_OneofDescriptorProto_fieldAccessorTable
/* 14783 */           .ensureFieldAccessorsInitialized((Class) OneofDescriptorProto.class, (Class)Builder.class);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private Builder()
/*       */       {
/* 14946 */         this.name_ = ""; maybeForceBuilderInitialization(); } private Builder(BuilderParent parent) { super(parent); this.name_ = ""; maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (GeneratedMessageV3.alwaysUseFieldBuilders) getOptionsFieldBuilder();  } public Builder clear() { super.clear(); this.name_ = ""; this.bitField0_ &= 0xFFFFFFFE; if (this.optionsBuilder_ == null) { this.options_ = null; } else { this.optionsBuilder_.clear(); }  this.bitField0_ &= 0xFFFFFFFD; return this; } public Descriptors.Descriptor getDescriptorForType() { return DescriptorProtos.internal_static_google_protobuf_OneofDescriptorProto_descriptor; } public OneofDescriptorProto getDefaultInstanceForType() { return OneofDescriptorProto.getDefaultInstance(); } public OneofDescriptorProto build() { OneofDescriptorProto result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public OneofDescriptorProto buildPartial() { OneofDescriptorProto result = new OneofDescriptorProto(this); int from_bitField0_ = this.bitField0_; int to_bitField0_ = 0; if ((from_bitField0_ & 0x1) != 0) to_bitField0_ |= 0x1;  result.name_ = this.name_; if ((from_bitField0_ & 0x2) != 0) { if (this.optionsBuilder_ == null) { result.options_ = this.options_; } else { result.options_ = this.optionsBuilder_.build(); }  to_bitField0_ |= 0x2; }  result.bitField0_ = to_bitField0_; onBuilt(); return result; } public Builder clone() { return super.clone(); } public Builder setField(Descriptors.FieldDescriptor field, Object value) { return super.setField(field, value); } public Builder clearField(Descriptors.FieldDescriptor field) { return super.clearField(field); } public Builder clearOneof(Descriptors.OneofDescriptor oneof) { return super.clearOneof(oneof); } public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) { return super.setRepeatedField(field, index, value); }
/*       */       public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) { return super.addRepeatedField(field, value); }
/*       */       public Builder mergeFrom(Message other) { if (other instanceof OneofDescriptorProto) return mergeFrom((OneofDescriptorProto)other);  super.mergeFrom(other); return this; }
/*       */       public Builder mergeFrom(OneofDescriptorProto other) { if (other == OneofDescriptorProto.getDefaultInstance()) return this;  if (other.hasName()) { this.bitField0_ |= 0x1; this.name_ = other.name_; onChanged(); }  if (other.hasOptions()) mergeOptions(other.getOptions());  mergeUnknownFields(other.unknownFields); onChanged(); return this; }
/*       */       public final boolean isInitialized() { if (hasOptions() && !getOptions().isInitialized()) return false;  return true; }
/*       */       public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { OneofDescriptorProto parsedMessage = null; try { parsedMessage = OneofDescriptorProto.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (OneofDescriptorProto)e.getUnfinishedMessage(); throw e.unwrapIOException(); } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; }
/* 14952 */       public boolean hasName() { return ((this.bitField0_ & 0x1) != 0); }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public String getName() {
/* 14959 */         Object ref = this.name_;
/* 14960 */         if (!(ref instanceof String)) {
/* 14961 */           ByteString bs = (ByteString)ref;
/*       */           
/* 14963 */           String s = bs.toStringUtf8();
/* 14964 */           if (bs.isValidUtf8()) {
/* 14965 */             this.name_ = s;
/*       */           }
/* 14967 */           return s;
/*       */         } 
/* 14969 */         return (String)ref;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public ByteString getNameBytes() {
/* 14978 */         Object ref = this.name_;
/* 14979 */         if (ref instanceof String) {
/*       */           
/* 14981 */           ByteString b = ByteString.copyFromUtf8((String)ref);
/*       */           
/* 14983 */           this.name_ = b;
/* 14984 */           return b;
/*       */         } 
/* 14986 */         return (ByteString)ref;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setName(String value) {
/* 14996 */         if (value == null) {
/* 14997 */           throw new NullPointerException();
/*       */         }
/* 14999 */         this.bitField0_ |= 0x1;
/* 15000 */         this.name_ = value;
/* 15001 */         onChanged();
/* 15002 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearName() {
/* 15009 */         this.bitField0_ &= 0xFFFFFFFE;
/* 15010 */         this.name_ = OneofDescriptorProto.getDefaultInstance().getName();
/* 15011 */         onChanged();
/* 15012 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setNameBytes(ByteString value) {
/* 15021 */         if (value == null) {
/* 15022 */           throw new NullPointerException();
/*       */         }
/* 15024 */         this.bitField0_ |= 0x1;
/* 15025 */         this.name_ = value;
/* 15026 */         onChanged();
/* 15027 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasOptions() {
/* 15038 */         return ((this.bitField0_ & 0x2) != 0);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public OneofOptions getOptions() {
/* 15045 */         if (this.optionsBuilder_ == null) {
/* 15046 */           return (this.options_ == null) ? OneofOptions.getDefaultInstance() : this.options_;
/*       */         }
/* 15048 */         return this.optionsBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setOptions(OneofOptions value) {
/* 15055 */         if (this.optionsBuilder_ == null) {
/* 15056 */           if (value == null) {
/* 15057 */             throw new NullPointerException();
/*       */           }
/* 15059 */           this.options_ = value;
/* 15060 */           onChanged();
/*       */         } else {
/* 15062 */           this.optionsBuilder_.setMessage(value);
/*       */         } 
/* 15064 */         this.bitField0_ |= 0x2;
/* 15065 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setOptions(OneofOptions.Builder builderForValue) {
/* 15072 */         if (this.optionsBuilder_ == null) {
/* 15073 */           this.options_ = builderForValue.build();
/* 15074 */           onChanged();
/*       */         } else {
/* 15076 */           this.optionsBuilder_.setMessage(builderForValue.build());
/*       */         } 
/* 15078 */         this.bitField0_ |= 0x2;
/* 15079 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeOptions(OneofOptions value) {
/* 15085 */         if (this.optionsBuilder_ == null) {
/* 15086 */           if ((this.bitField0_ & 0x2) != 0 && this.options_ != null && this.options_ != 
/*       */             
/* 15088 */             OneofOptions.getDefaultInstance()) {
/* 15089 */             this
/* 15090 */               .options_ = OneofOptions.newBuilder(this.options_).mergeFrom(value).buildPartial();
/*       */           } else {
/* 15092 */             this.options_ = value;
/*       */           } 
/* 15094 */           onChanged();
/*       */         } else {
/* 15096 */           this.optionsBuilder_.mergeFrom(value);
/*       */         } 
/* 15098 */         this.bitField0_ |= 0x2;
/* 15099 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearOptions() {
/* 15105 */         if (this.optionsBuilder_ == null) {
/* 15106 */           this.options_ = null;
/* 15107 */           onChanged();
/*       */         } else {
/* 15109 */           this.optionsBuilder_.clear();
/*       */         } 
/* 15111 */         this.bitField0_ &= 0xFFFFFFFD;
/* 15112 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public OneofOptions.Builder getOptionsBuilder() {
/* 15118 */         this.bitField0_ |= 0x2;
/* 15119 */         onChanged();
/* 15120 */         return getOptionsFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public OneofOptionsOrBuilder getOptionsOrBuilder() {
/* 15126 */         if (this.optionsBuilder_ != null) {
/* 15127 */           return this.optionsBuilder_.getMessageOrBuilder();
/*       */         }
/* 15129 */         return (this.options_ == null) ? 
/* 15130 */           OneofOptions.getDefaultInstance() : this.options_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<OneofOptions, OneofOptions.Builder, OneofOptionsOrBuilder> getOptionsFieldBuilder() {
/* 15139 */         if (this.optionsBuilder_ == null) {
/* 15140 */           this
/*       */ 
/*       */ 
/*       */             
/* 15144 */             .optionsBuilder_ = new SingleFieldBuilderV3<>(getOptions(), getParentForChildren(), isClean());
/* 15145 */           this.options_ = null;
/*       */         } 
/* 15147 */         return this.optionsBuilder_;
/*       */       }
/*       */ 
/*       */       
/*       */       public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
/* 15152 */         return super.setUnknownFields(unknownFields);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
/* 15158 */         return super.mergeUnknownFields(unknownFields);
/*       */       }
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 15168 */     private static final OneofDescriptorProto DEFAULT_INSTANCE = new OneofDescriptorProto();
/*       */ 
/*       */     
/*       */     public static OneofDescriptorProto getDefaultInstance() {
/* 15172 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */     
/*       */     @Deprecated
/* 15176 */     public static final Parser<OneofDescriptorProto> PARSER = new AbstractParser<OneofDescriptorProto>()
/*       */       {
/*       */ 
/*       */         
/*       */         public OneofDescriptorProto parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException
/*       */         {
/* 15182 */           return new OneofDescriptorProto(input, extensionRegistry);
/*       */         }
/*       */       };
/*       */     
/*       */     public static Parser<OneofDescriptorProto> parser() {
/* 15187 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public Parser<OneofDescriptorProto> getParserForType() {
/* 15192 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public OneofDescriptorProto getDefaultInstanceForType() {
/* 15197 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public static interface EnumDescriptorProtoOrBuilder
/*       */     extends MessageOrBuilder
/*       */   {
/*       */     boolean hasName();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     String getName();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getNameBytes();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     List<EnumValueDescriptorProto> getValueList();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     EnumValueDescriptorProto getValue(int param1Int);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getValueCount();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     List<? extends EnumValueDescriptorProtoOrBuilder> getValueOrBuilderList();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     EnumValueDescriptorProtoOrBuilder getValueOrBuilder(int param1Int);
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasOptions();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     EnumOptions getOptions();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     EnumOptionsOrBuilder getOptionsOrBuilder();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     List<EnumDescriptorProto.EnumReservedRange> getReservedRangeList();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     EnumDescriptorProto.EnumReservedRange getReservedRange(int param1Int);
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getReservedRangeCount();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     List<? extends EnumDescriptorProto.EnumReservedRangeOrBuilder> getReservedRangeOrBuilderList();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     EnumDescriptorProto.EnumReservedRangeOrBuilder getReservedRangeOrBuilder(int param1Int);
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     List<String> getReservedNameList();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getReservedNameCount();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     String getReservedName(int param1Int);
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getReservedNameBytes(int param1Int);
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public static final class EnumDescriptorProto
/*       */     extends GeneratedMessageV3
/*       */     implements EnumDescriptorProtoOrBuilder
/*       */   {
/*       */     private static final long serialVersionUID = 0L;
/*       */ 
/*       */ 
/*       */     
/*       */     private int bitField0_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int NAME_FIELD_NUMBER = 1;
/*       */ 
/*       */ 
/*       */     
/*       */     private volatile Object name_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int VALUE_FIELD_NUMBER = 2;
/*       */ 
/*       */ 
/*       */     
/*       */     private List<EnumValueDescriptorProto> value_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int OPTIONS_FIELD_NUMBER = 3;
/*       */ 
/*       */ 
/*       */     
/*       */     private EnumOptions options_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int RESERVED_RANGE_FIELD_NUMBER = 4;
/*       */ 
/*       */ 
/*       */     
/*       */     private List<EnumReservedRange> reservedRange_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int RESERVED_NAME_FIELD_NUMBER = 5;
/*       */ 
/*       */ 
/*       */     
/*       */     private LazyStringList reservedName_;
/*       */ 
/*       */ 
/*       */     
/*       */     private byte memoizedIsInitialized;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private EnumDescriptorProto(GeneratedMessageV3.Builder<?> builder)
/*       */     {
/* 15375 */       super(builder);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/* 16444 */       this.memoizedIsInitialized = -1; } private EnumDescriptorProto() { this.memoizedIsInitialized = -1; this.name_ = ""; this.value_ = Collections.emptyList(); this.reservedRange_ = Collections.emptyList(); this.reservedName_ = LazyStringArrayList.EMPTY; } protected Object newInstance(UnusedPrivateParameter unused) { return new EnumDescriptorProto(); } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private EnumDescriptorProto(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this(); if (extensionRegistry == null) throw new NullPointerException();  int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { ByteString byteString1; EnumOptions.Builder subBuilder; ByteString bs; int tag = input.readTag(); switch (tag) { case 0: done = true; continue;case 10: byteString1 = input.readBytes(); this.bitField0_ |= 0x1; this.name_ = byteString1; continue;case 18: if ((mutable_bitField0_ & 0x2) == 0) { this.value_ = new ArrayList<>(); mutable_bitField0_ |= 0x2; }  this.value_.add(input.readMessage(EnumValueDescriptorProto.PARSER, extensionRegistry)); continue;case 26: subBuilder = null; if ((this.bitField0_ & 0x2) != 0) subBuilder = this.options_.toBuilder();  this.options_ = input.<EnumOptions>readMessage(EnumOptions.PARSER, extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.options_); this.options_ = subBuilder.buildPartial(); }  this.bitField0_ |= 0x2; continue;case 34: if ((mutable_bitField0_ & 0x8) == 0) { this.reservedRange_ = new ArrayList<>(); mutable_bitField0_ |= 0x8; }  this.reservedRange_.add(input.readMessage(EnumReservedRange.PARSER, extensionRegistry)); continue;case 42: bs = input.readBytes(); if ((mutable_bitField0_ & 0x10) == 0) { this.reservedName_ = new LazyStringArrayList(); mutable_bitField0_ |= 0x10; }  this.reservedName_.add(bs); continue; }  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this); } finally { if ((mutable_bitField0_ & 0x2) != 0) this.value_ = Collections.unmodifiableList(this.value_);  if ((mutable_bitField0_ & 0x8) != 0) this.reservedRange_ = Collections.unmodifiableList(this.reservedRange_);  if ((mutable_bitField0_ & 0x10) != 0) this.reservedName_ = this.reservedName_.getUnmodifiableView();  this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return DescriptorProtos.internal_static_google_protobuf_EnumDescriptorProto_descriptor; } protected FieldAccessorTable internalGetFieldAccessorTable() { return DescriptorProtos.internal_static_google_protobuf_EnumDescriptorProto_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)EnumDescriptorProto.class, (Class)Builder.class); } public static final class EnumReservedRange extends GeneratedMessageV3 implements EnumReservedRangeOrBuilder {
/*       */       private static final long serialVersionUID = 0L; private int bitField0_; public static final int START_FIELD_NUMBER = 1; private int start_; public static final int END_FIELD_NUMBER = 2; private int end_; private byte memoizedIsInitialized; private EnumReservedRange(GeneratedMessageV3.Builder<?> builder) { super(builder); this.memoizedIsInitialized = -1; } private EnumReservedRange() { this.memoizedIsInitialized = -1; } protected Object newInstance(UnusedPrivateParameter unused) { return new EnumReservedRange(); } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private EnumReservedRange(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this(); if (extensionRegistry == null) throw new NullPointerException();  int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { int tag = input.readTag(); switch (tag) { case 0: done = true; continue;case 8: this.bitField0_ |= 0x1; this.start_ = input.readInt32(); continue;case 16: this.bitField0_ |= 0x2; this.end_ = input.readInt32(); continue; }  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this); } finally { this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return DescriptorProtos.internal_static_google_protobuf_EnumDescriptorProto_EnumReservedRange_descriptor; } protected FieldAccessorTable internalGetFieldAccessorTable() { return DescriptorProtos.internal_static_google_protobuf_EnumDescriptorProto_EnumReservedRange_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)EnumReservedRange.class, (Class)Builder.class); } public boolean hasStart() { return ((this.bitField0_ & 0x1) != 0); } public int getStart() { return this.start_; } public boolean hasEnd() { return ((this.bitField0_ & 0x2) != 0); } public int getEnd() { return this.end_; } public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized; if (isInitialized == 1) return true;  if (isInitialized == 0) return false;  this.memoizedIsInitialized = 1; return true; } public void writeTo(CodedOutputStream output) throws IOException { if ((this.bitField0_ & 0x1) != 0) output.writeInt32(1, this.start_);  if ((this.bitField0_ & 0x2) != 0) output.writeInt32(2, this.end_);  this.unknownFields.writeTo(output); } public int getSerializedSize() { int size = this.memoizedSize; if (size != -1) return size;  size = 0; if ((this.bitField0_ & 0x1) != 0) size += CodedOutputStream.computeInt32Size(1, this.start_);  if ((this.bitField0_ & 0x2) != 0) size += CodedOutputStream.computeInt32Size(2, this.end_);  size += this.unknownFields.getSerializedSize(); this.memoizedSize = size; return size; } public boolean equals(Object obj) { if (obj == this) return true;  if (!(obj instanceof EnumReservedRange)) return super.equals(obj);  EnumReservedRange other = (EnumReservedRange)obj; if (hasStart() != other.hasStart()) return false;  if (hasStart() && getStart() != other.getStart()) return false;  if (hasEnd() != other.hasEnd()) return false;  if (hasEnd() && getEnd() != other.getEnd()) return false;  if (!this.unknownFields.equals(other.unknownFields)) return false;  return true; } public int hashCode() { if (this.memoizedHashCode != 0) return this.memoizedHashCode;  int hash = 41; hash = 19 * hash + getDescriptor().hashCode(); if (hasStart()) { hash = 37 * hash + 1; hash = 53 * hash + getStart(); }  if (hasEnd()) { hash = 37 * hash + 2; hash = 53 * hash + getEnd(); }  hash = 29 * hash + this.unknownFields.hashCode(); this.memoizedHashCode = hash; return hash; } public static EnumReservedRange parseFrom(ByteBuffer data) throws InvalidProtocolBufferException { return PARSER.parseFrom(data); } public static EnumReservedRange parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return PARSER.parseFrom(data, extensionRegistry); } public static EnumReservedRange parseFrom(ByteString data) throws InvalidProtocolBufferException { return PARSER.parseFrom(data); } public static EnumReservedRange parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return PARSER.parseFrom(data, extensionRegistry); } public static EnumReservedRange parseFrom(byte[] data) throws InvalidProtocolBufferException { return PARSER.parseFrom(data); } public static EnumReservedRange parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return PARSER.parseFrom(data, extensionRegistry); } public static EnumReservedRange parseFrom(InputStream input) throws IOException { return GeneratedMessageV3.<EnumReservedRange>parseWithIOException(PARSER, input); } public static EnumReservedRange parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { return GeneratedMessageV3.<EnumReservedRange>parseWithIOException(PARSER, input, extensionRegistry); } public static EnumReservedRange parseDelimitedFrom(InputStream input) throws IOException { return GeneratedMessageV3.<EnumReservedRange>parseDelimitedWithIOException(PARSER, input); } public static EnumReservedRange parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { return GeneratedMessageV3.<EnumReservedRange>parseDelimitedWithIOException(PARSER, input, extensionRegistry); } public static EnumReservedRange parseFrom(CodedInputStream input) throws IOException { return GeneratedMessageV3.<EnumReservedRange>parseWithIOException(PARSER, input); } public static EnumReservedRange parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { return GeneratedMessageV3.<EnumReservedRange>parseWithIOException(PARSER, input, extensionRegistry); } public Builder newBuilderForType() { return newBuilder(); } public static Builder newBuilder() { return DEFAULT_INSTANCE.toBuilder(); } public static Builder newBuilder(EnumReservedRange prototype) { return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype); } public Builder toBuilder() { return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder()).mergeFrom(this); } protected Builder newBuilderForType(BuilderParent parent) { Builder builder = new Builder(parent); return builder; } public static final class Builder extends GeneratedMessageV3.Builder<Builder> implements EnumReservedRangeOrBuilder {
/*       */         private int bitField0_; private int start_; private int end_; public static final Descriptors.Descriptor getDescriptor() { return DescriptorProtos.internal_static_google_protobuf_EnumDescriptorProto_EnumReservedRange_descriptor; } protected FieldAccessorTable internalGetFieldAccessorTable() { return DescriptorProtos.internal_static_google_protobuf_EnumDescriptorProto_EnumReservedRange_fieldAccessorTable.ensureFieldAccessorsInitialized((Class) EnumReservedRange.class, (Class)Builder.class); } private Builder() { maybeForceBuilderInitialization(); } private Builder(BuilderParent parent) { super(parent); maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (GeneratedMessageV3.alwaysUseFieldBuilders); } public Builder clear() { super.clear(); this.start_ = 0; this.bitField0_ &= 0xFFFFFFFE; this.end_ = 0; this.bitField0_ &= 0xFFFFFFFD; return this; } public Descriptors.Descriptor getDescriptorForType() { return DescriptorProtos.internal_static_google_protobuf_EnumDescriptorProto_EnumReservedRange_descriptor; } public EnumReservedRange getDefaultInstanceForType() { return EnumReservedRange.getDefaultInstance(); } public EnumReservedRange build() { EnumReservedRange result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public EnumReservedRange buildPartial() { EnumReservedRange result = new EnumReservedRange(this); int from_bitField0_ = this.bitField0_; int to_bitField0_ = 0; if ((from_bitField0_ & 0x1) != 0) { result.start_ = this.start_; to_bitField0_ |= 0x1; }  if ((from_bitField0_ & 0x2) != 0) { result.end_ = this.end_; to_bitField0_ |= 0x2; }  result.bitField0_ = to_bitField0_; onBuilt(); return result; } public Builder clone() { return super.clone(); } public Builder setField(Descriptors.FieldDescriptor field, Object value) { return super.setField(field, value); } public Builder clearField(Descriptors.FieldDescriptor field) { return super.clearField(field); } public Builder clearOneof(Descriptors.OneofDescriptor oneof) { return super.clearOneof(oneof); } public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) { return super.setRepeatedField(field, index, value); } public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) { return super.addRepeatedField(field, value); } public Builder mergeFrom(Message other) { if (other instanceof EnumReservedRange) return mergeFrom((EnumReservedRange)other);  super.mergeFrom(other); return this; } public Builder mergeFrom(EnumReservedRange other) { if (other == EnumReservedRange.getDefaultInstance()) return this;  if (other.hasStart()) setStart(other.getStart());  if (other.hasEnd()) setEnd(other.getEnd());  mergeUnknownFields(other.unknownFields); onChanged(); return this; } public final boolean isInitialized() { return true; } public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { EnumReservedRange parsedMessage = null; try { parsedMessage = EnumReservedRange.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (EnumReservedRange)e.getUnfinishedMessage(); throw e.unwrapIOException(); } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; } public boolean hasStart() { return ((this.bitField0_ & 0x1) != 0); } public int getStart() { return this.start_; } public Builder setStart(int value) { this.bitField0_ |= 0x1; this.start_ = value; onChanged(); return this; } public Builder clearStart() { this.bitField0_ &= 0xFFFFFFFE; this.start_ = 0; onChanged(); return this; } public boolean hasEnd() { return ((this.bitField0_ & 0x2) != 0); } public int getEnd() { return this.end_; } public Builder setEnd(int value) { this.bitField0_ |= 0x2; this.end_ = value; onChanged(); return this; } public Builder clearEnd() { this.bitField0_ &= 0xFFFFFFFD; this.end_ = 0; onChanged(); return this; } public final Builder setUnknownFields(UnknownFieldSet unknownFields) { return super.setUnknownFields(unknownFields); } public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) { return super.mergeUnknownFields(unknownFields); } } private static final EnumReservedRange DEFAULT_INSTANCE = new EnumReservedRange(); public static EnumReservedRange getDefaultInstance() { return DEFAULT_INSTANCE; } @Deprecated public static final Parser<EnumReservedRange> PARSER = new AbstractParser<EnumReservedRange>() { public EnumReservedRange parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return new EnumReservedRange(input, extensionRegistry); } }
/* 16447 */       ; public static Parser<EnumReservedRange> parser() { return PARSER; } public Parser<EnumReservedRange> getParserForType() { return PARSER; } public EnumReservedRange getDefaultInstanceForType() { return DEFAULT_INSTANCE; } } public boolean hasName() { return ((this.bitField0_ & 0x1) != 0); } public String getName() { Object ref = this.name_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.name_ = s;  return s; } public ByteString getNameBytes() { Object ref = this.name_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.name_ = b; return b; }  return (ByteString)ref; } public List<EnumValueDescriptorProto> getValueList() { return this.value_; } public List<? extends EnumValueDescriptorProtoOrBuilder> getValueOrBuilderList() { return (List)this.value_; } public int getValueCount() { return this.value_.size(); } public EnumValueDescriptorProto getValue(int index) { return this.value_.get(index); } public EnumValueDescriptorProtoOrBuilder getValueOrBuilder(int index) { return this.value_.get(index); } public boolean hasOptions() { return ((this.bitField0_ & 0x2) != 0); } public EnumOptions getOptions() { return (this.options_ == null) ? EnumOptions.getDefaultInstance() : this.options_; } public EnumOptionsOrBuilder getOptionsOrBuilder() { return (this.options_ == null) ? EnumOptions.getDefaultInstance() : this.options_; } public List<EnumReservedRange> getReservedRangeList() { return this.reservedRange_; } public List<? extends EnumReservedRangeOrBuilder> getReservedRangeOrBuilderList() { return (List)this.reservedRange_; } public int getReservedRangeCount() { return this.reservedRange_.size(); } public EnumReservedRange getReservedRange(int index) { return this.reservedRange_.get(index); } public EnumReservedRangeOrBuilder getReservedRangeOrBuilder(int index) { return this.reservedRange_.get(index); } public ProtocolStringList getReservedNameList() { return this.reservedName_; } public int getReservedNameCount() { return this.reservedName_.size(); } public String getReservedName(int index) { return this.reservedName_.get(index); } public ByteString getReservedNameBytes(int index) { return this.reservedName_.getByteString(index); } public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized;
/* 16448 */       if (isInitialized == 1) return true; 
/* 16449 */       if (isInitialized == 0) return false;
/*       */       
/* 16451 */       for (int i = 0; i < getValueCount(); i++) {
/* 16452 */         if (!getValue(i).isInitialized()) {
/* 16453 */           this.memoizedIsInitialized = 0;
/* 16454 */           return false;
/*       */         } 
/*       */       } 
/* 16457 */       if (hasOptions() && 
/* 16458 */         !getOptions().isInitialized()) {
/* 16459 */         this.memoizedIsInitialized = 0;
/* 16460 */         return false;
/*       */       } 
/*       */       
/* 16463 */       this.memoizedIsInitialized = 1;
/* 16464 */       return true; }
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/* 16470 */       if ((this.bitField0_ & 0x1) != 0)
/* 16471 */         GeneratedMessageV3.writeString(output, 1, this.name_); 
/*       */       int i;
/* 16473 */       for (i = 0; i < this.value_.size(); i++) {
/* 16474 */         output.writeMessage(2, this.value_.get(i));
/*       */       }
/* 16476 */       if ((this.bitField0_ & 0x2) != 0) {
/* 16477 */         output.writeMessage(3, getOptions());
/*       */       }
/* 16479 */       for (i = 0; i < this.reservedRange_.size(); i++) {
/* 16480 */         output.writeMessage(4, this.reservedRange_.get(i));
/*       */       }
/* 16482 */       for (i = 0; i < this.reservedName_.size(); i++) {
/* 16483 */         GeneratedMessageV3.writeString(output, 5, this.reservedName_.getRaw(i));
/*       */       }
/* 16485 */       this.unknownFields.writeTo(output);
/*       */     }
/*       */ 
/*       */     
/*       */     public int getSerializedSize() {
/* 16490 */       int size = this.memoizedSize;
/* 16491 */       if (size != -1) return size;
/*       */       
/* 16493 */       size = 0;
/* 16494 */       if ((this.bitField0_ & 0x1) != 0)
/* 16495 */         size += GeneratedMessageV3.computeStringSize(1, this.name_); 
/*       */       int i;
/* 16497 */       for (i = 0; i < this.value_.size(); i++) {
/* 16498 */         size += 
/* 16499 */           CodedOutputStream.computeMessageSize(2, this.value_.get(i));
/*       */       }
/* 16501 */       if ((this.bitField0_ & 0x2) != 0) {
/* 16502 */         size += 
/* 16503 */           CodedOutputStream.computeMessageSize(3, getOptions());
/*       */       }
/* 16505 */       for (i = 0; i < this.reservedRange_.size(); i++) {
/* 16506 */         size += 
/* 16507 */           CodedOutputStream.computeMessageSize(4, this.reservedRange_.get(i));
/*       */       }
/*       */       
/* 16510 */       int dataSize = 0;
/* 16511 */       for (int j = 0; j < this.reservedName_.size(); j++) {
/* 16512 */         dataSize += computeStringSizeNoTag(this.reservedName_.getRaw(j));
/*       */       }
/* 16514 */       size += dataSize;
/* 16515 */       size += 1 * getReservedNameList().size();
/*       */       
/* 16517 */       size += this.unknownFields.getSerializedSize();
/* 16518 */       this.memoizedSize = size;
/* 16519 */       return size;
/*       */     }
/*       */ 
/*       */     
/*       */     public boolean equals(Object obj) {
/* 16524 */       if (obj == this) {
/* 16525 */         return true;
/*       */       }
/* 16527 */       if (!(obj instanceof EnumDescriptorProto)) {
/* 16528 */         return super.equals(obj);
/*       */       }
/* 16530 */       EnumDescriptorProto other = (EnumDescriptorProto)obj;
/*       */       
/* 16532 */       if (hasName() != other.hasName()) return false; 
/* 16533 */       if (hasName() && 
/*       */         
/* 16535 */         !getName().equals(other.getName())) return false;
/*       */ 
/*       */       
/* 16538 */       if (!getValueList().equals(other.getValueList())) return false; 
/* 16539 */       if (hasOptions() != other.hasOptions()) return false; 
/* 16540 */       if (hasOptions() && 
/*       */         
/* 16542 */         !getOptions().equals(other.getOptions())) return false;
/*       */ 
/*       */       
/* 16545 */       if (!getReservedRangeList().equals(other.getReservedRangeList())) return false;
/*       */       
/* 16547 */       if (!getReservedNameList().equals(other.getReservedNameList())) return false; 
/* 16548 */       if (!this.unknownFields.equals(other.unknownFields)) return false; 
/* 16549 */       return true;
/*       */     }
/*       */ 
/*       */     
/*       */     public int hashCode() {
/* 16554 */       if (this.memoizedHashCode != 0) {
/* 16555 */         return this.memoizedHashCode;
/*       */       }
/* 16557 */       int hash = 41;
/* 16558 */       hash = 19 * hash + getDescriptor().hashCode();
/* 16559 */       if (hasName()) {
/* 16560 */         hash = 37 * hash + 1;
/* 16561 */         hash = 53 * hash + getName().hashCode();
/*       */       } 
/* 16563 */       if (getValueCount() > 0) {
/* 16564 */         hash = 37 * hash + 2;
/* 16565 */         hash = 53 * hash + getValueList().hashCode();
/*       */       } 
/* 16567 */       if (hasOptions()) {
/* 16568 */         hash = 37 * hash + 3;
/* 16569 */         hash = 53 * hash + getOptions().hashCode();
/*       */       } 
/* 16571 */       if (getReservedRangeCount() > 0) {
/* 16572 */         hash = 37 * hash + 4;
/* 16573 */         hash = 53 * hash + getReservedRangeList().hashCode();
/*       */       } 
/* 16575 */       if (getReservedNameCount() > 0) {
/* 16576 */         hash = 37 * hash + 5;
/* 16577 */         hash = 53 * hash + getReservedNameList().hashCode();
/*       */       } 
/* 16579 */       hash = 29 * hash + this.unknownFields.hashCode();
/* 16580 */       this.memoizedHashCode = hash;
/* 16581 */       return hash;
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static EnumDescriptorProto parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
/* 16587 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static EnumDescriptorProto parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 16593 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static EnumDescriptorProto parseFrom(ByteString data) throws InvalidProtocolBufferException {
/* 16598 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static EnumDescriptorProto parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 16604 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static EnumDescriptorProto parseFrom(byte[] data) throws InvalidProtocolBufferException {
/* 16608 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static EnumDescriptorProto parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 16614 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static EnumDescriptorProto parseFrom(InputStream input) throws IOException {
/* 16618 */       return 
/* 16619 */         GeneratedMessageV3.<EnumDescriptorProto>parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static EnumDescriptorProto parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 16625 */       return 
/* 16626 */         GeneratedMessageV3.<EnumDescriptorProto>parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static EnumDescriptorProto parseDelimitedFrom(InputStream input) throws IOException {
/* 16630 */       return 
/* 16631 */         GeneratedMessageV3.<EnumDescriptorProto>parseDelimitedWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static EnumDescriptorProto parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 16637 */       return 
/* 16638 */         GeneratedMessageV3.<EnumDescriptorProto>parseDelimitedWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static EnumDescriptorProto parseFrom(CodedInputStream input) throws IOException {
/* 16643 */       return 
/* 16644 */         GeneratedMessageV3.<EnumDescriptorProto>parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static EnumDescriptorProto parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 16650 */       return 
/* 16651 */         GeneratedMessageV3.<EnumDescriptorProto>parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public Builder newBuilderForType() {
/* 16655 */       return newBuilder();
/*       */     } public static Builder newBuilder() {
/* 16657 */       return DEFAULT_INSTANCE.toBuilder();
/*       */     }
/*       */     public static Builder newBuilder(EnumDescriptorProto prototype) {
/* 16660 */       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
/*       */     }
/*       */     
/*       */     public Builder toBuilder() {
/* 16664 */       return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder())
/* 16665 */         .mergeFrom(this);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     protected Builder newBuilderForType(BuilderParent parent) {
/* 16671 */       Builder builder = new Builder(parent);
/* 16672 */       return builder;
/*       */     }
/*       */     
/*       */     public static final class Builder extends GeneratedMessageV3.Builder<Builder> implements EnumDescriptorProtoOrBuilder {
/*       */       private int bitField0_;
/*       */       private Object name_;
/*       */       private List<EnumValueDescriptorProto> value_;
/*       */       private RepeatedFieldBuilderV3<EnumValueDescriptorProto, EnumValueDescriptorProto.Builder, EnumValueDescriptorProtoOrBuilder> valueBuilder_;
/*       */       private EnumOptions options_;
/*       */       private SingleFieldBuilderV3<EnumOptions, EnumOptions.Builder, EnumOptionsOrBuilder> optionsBuilder_;
/*       */       private List<EnumReservedRange> reservedRange_;
/*       */       private RepeatedFieldBuilderV3<EnumReservedRange, EnumReservedRange.Builder, EnumReservedRangeOrBuilder> reservedRangeBuilder_;
/*       */       private LazyStringList reservedName_;
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/* 16687 */         return DescriptorProtos.internal_static_google_protobuf_EnumDescriptorProto_descriptor;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       protected FieldAccessorTable internalGetFieldAccessorTable() {
/* 16693 */         return DescriptorProtos.internal_static_google_protobuf_EnumDescriptorProto_fieldAccessorTable
/* 16694 */           .ensureFieldAccessorsInitialized((Class) EnumDescriptorProto.class, (Class)Builder.class);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private Builder()
/*       */       {
/* 16963 */         this.name_ = "";
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 17047 */         this
/* 17048 */           .value_ = Collections.emptyList();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 17407 */         this
/* 17408 */           .reservedRange_ = Collections.emptyList();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 17755 */         this.reservedName_ = LazyStringArrayList.EMPTY; maybeForceBuilderInitialization(); } private Builder(BuilderParent parent) { super(parent); this.name_ = ""; this.value_ = Collections.emptyList(); this.reservedRange_ = Collections.emptyList(); this.reservedName_ = LazyStringArrayList.EMPTY; maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (GeneratedMessageV3.alwaysUseFieldBuilders) { getValueFieldBuilder(); getOptionsFieldBuilder(); getReservedRangeFieldBuilder(); }  } public Builder clear() { super.clear(); this.name_ = ""; this.bitField0_ &= 0xFFFFFFFE; if (this.valueBuilder_ == null) { this.value_ = Collections.emptyList(); this.bitField0_ &= 0xFFFFFFFD; } else { this.valueBuilder_.clear(); }  if (this.optionsBuilder_ == null) { this.options_ = null; } else { this.optionsBuilder_.clear(); }  this.bitField0_ &= 0xFFFFFFFB; if (this.reservedRangeBuilder_ == null) { this.reservedRange_ = Collections.emptyList(); this.bitField0_ &= 0xFFFFFFF7; } else { this.reservedRangeBuilder_.clear(); }  this.reservedName_ = LazyStringArrayList.EMPTY; this.bitField0_ &= 0xFFFFFFEF; return this; } public Descriptors.Descriptor getDescriptorForType() { return DescriptorProtos.internal_static_google_protobuf_EnumDescriptorProto_descriptor; } public EnumDescriptorProto getDefaultInstanceForType() { return EnumDescriptorProto.getDefaultInstance(); } public EnumDescriptorProto build() { EnumDescriptorProto result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public EnumDescriptorProto buildPartial() { EnumDescriptorProto result = new EnumDescriptorProto(this); int from_bitField0_ = this.bitField0_; int to_bitField0_ = 0; if ((from_bitField0_ & 0x1) != 0) to_bitField0_ |= 0x1;  result.name_ = this.name_; if (this.valueBuilder_ == null) { if ((this.bitField0_ & 0x2) != 0) { this.value_ = Collections.unmodifiableList(this.value_); this.bitField0_ &= 0xFFFFFFFD; }  result.value_ = this.value_; } else { result.value_ = this.valueBuilder_.build(); }  if ((from_bitField0_ & 0x4) != 0) { if (this.optionsBuilder_ == null) { result.options_ = this.options_; } else { result.options_ = this.optionsBuilder_.build(); }  to_bitField0_ |= 0x2; }  if (this.reservedRangeBuilder_ == null) { if ((this.bitField0_ & 0x8) != 0) { this.reservedRange_ = Collections.unmodifiableList(this.reservedRange_); this.bitField0_ &= 0xFFFFFFF7; }  result.reservedRange_ = this.reservedRange_; } else { result.reservedRange_ = this.reservedRangeBuilder_.build(); }  if ((this.bitField0_ & 0x10) != 0) { this.reservedName_ = this.reservedName_.getUnmodifiableView(); this.bitField0_ &= 0xFFFFFFEF; }  result.reservedName_ = this.reservedName_; result.bitField0_ = to_bitField0_; onBuilt(); return result; } public Builder clone() { return super.clone(); } public Builder setField(Descriptors.FieldDescriptor field, Object value) { return super.setField(field, value); } public Builder clearField(Descriptors.FieldDescriptor field) { return super.clearField(field); } public Builder clearOneof(Descriptors.OneofDescriptor oneof) { return super.clearOneof(oneof); } public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) { return super.setRepeatedField(field, index, value); } public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) { return super.addRepeatedField(field, value); } public Builder mergeFrom(Message other) { if (other instanceof EnumDescriptorProto) return mergeFrom((EnumDescriptorProto)other);  super.mergeFrom(other); return this; } public Builder mergeFrom(EnumDescriptorProto other) { if (other == EnumDescriptorProto.getDefaultInstance()) return this;  if (other.hasName()) { this.bitField0_ |= 0x1; this.name_ = other.name_; onChanged(); }  if (this.valueBuilder_ == null) { if (!other.value_.isEmpty()) { if (this.value_.isEmpty()) { this.value_ = other.value_; this.bitField0_ &= 0xFFFFFFFD; } else { ensureValueIsMutable(); this.value_.addAll(other.value_); }  onChanged(); }  } else if (!other.value_.isEmpty()) { if (this.valueBuilder_.isEmpty()) { this.valueBuilder_.dispose(); this.valueBuilder_ = null; this.value_ = other.value_; this.bitField0_ &= 0xFFFFFFFD; this.valueBuilder_ = GeneratedMessageV3.alwaysUseFieldBuilders ? getValueFieldBuilder() : null; } else { this.valueBuilder_.addAllMessages(other.value_); }  }  if (other.hasOptions()) mergeOptions(other.getOptions());  if (this.reservedRangeBuilder_ == null) { if (!other.reservedRange_.isEmpty()) { if (this.reservedRange_.isEmpty()) { this.reservedRange_ = other.reservedRange_; this.bitField0_ &= 0xFFFFFFF7; } else { ensureReservedRangeIsMutable(); this.reservedRange_.addAll(other.reservedRange_); }  onChanged(); }  } else if (!other.reservedRange_.isEmpty()) { if (this.reservedRangeBuilder_.isEmpty()) { this.reservedRangeBuilder_.dispose(); this.reservedRangeBuilder_ = null; this.reservedRange_ = other.reservedRange_; this.bitField0_ &= 0xFFFFFFF7; this.reservedRangeBuilder_ = GeneratedMessageV3.alwaysUseFieldBuilders ? getReservedRangeFieldBuilder() : null; } else { this.reservedRangeBuilder_.addAllMessages(other.reservedRange_); }  }  if (!other.reservedName_.isEmpty()) { if (this.reservedName_.isEmpty()) { this.reservedName_ = other.reservedName_; this.bitField0_ &= 0xFFFFFFEF; } else { ensureReservedNameIsMutable(); this.reservedName_.addAll(other.reservedName_); }  onChanged(); }  mergeUnknownFields(other.unknownFields); onChanged(); return this; } public final boolean isInitialized() { for (int i = 0; i < getValueCount(); i++) { if (!getValue(i).isInitialized()) return false;  }  if (hasOptions() && !getOptions().isInitialized()) return false;  return true; } public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { EnumDescriptorProto parsedMessage = null; try { parsedMessage = EnumDescriptorProto.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (EnumDescriptorProto)e.getUnfinishedMessage(); throw e.unwrapIOException(); } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; } public boolean hasName() { return ((this.bitField0_ & 0x1) != 0); } public String getName() { Object ref = this.name_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.name_ = s;  return s; }  return (String)ref; } public ByteString getNameBytes() { Object ref = this.name_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.name_ = b; return b; }  return (ByteString)ref; } public Builder setName(String value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x1; this.name_ = value; onChanged(); return this; } public Builder clearName() { this.bitField0_ &= 0xFFFFFFFE; this.name_ = EnumDescriptorProto.getDefaultInstance().getName(); onChanged(); return this; } public Builder setNameBytes(ByteString value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x1; this.name_ = value; onChanged(); return this; } private void ensureValueIsMutable() { if ((this.bitField0_ & 0x2) == 0) { this.value_ = new ArrayList<>(this.value_); this.bitField0_ |= 0x2; }  } public List<EnumValueDescriptorProto> getValueList() { if (this.valueBuilder_ == null) return Collections.unmodifiableList(this.value_);  return this.valueBuilder_.getMessageList(); } public int getValueCount() { if (this.valueBuilder_ == null) return this.value_.size();  return this.valueBuilder_.getCount(); } public EnumValueDescriptorProto getValue(int index) { if (this.valueBuilder_ == null) return this.value_.get(index);  return this.valueBuilder_.getMessage(index); } public Builder setValue(int index, EnumValueDescriptorProto value) { if (this.valueBuilder_ == null) { if (value == null) throw new NullPointerException();  ensureValueIsMutable(); this.value_.set(index, value); onChanged(); } else { this.valueBuilder_.setMessage(index, value); }  return this; } public Builder setValue(int index, EnumValueDescriptorProto.Builder builderForValue) { if (this.valueBuilder_ == null) { ensureValueIsMutable(); this.value_.set(index, builderForValue.build()); onChanged(); } else { this.valueBuilder_.setMessage(index, builderForValue.build()); }  return this; } public Builder addValue(EnumValueDescriptorProto value) { if (this.valueBuilder_ == null) { if (value == null) throw new NullPointerException();  ensureValueIsMutable(); this.value_.add(value); onChanged(); } else { this.valueBuilder_.addMessage(value); }  return this; } public Builder addValue(int index, EnumValueDescriptorProto value) { if (this.valueBuilder_ == null) { if (value == null) throw new NullPointerException();  ensureValueIsMutable(); this.value_.add(index, value); onChanged(); } else { this.valueBuilder_.addMessage(index, value); }  return this; } public Builder addValue(EnumValueDescriptorProto.Builder builderForValue) { if (this.valueBuilder_ == null) { ensureValueIsMutable(); this.value_.add(builderForValue.build()); onChanged(); } else { this.valueBuilder_.addMessage(builderForValue.build()); }  return this; } public Builder addValue(int index, EnumValueDescriptorProto.Builder builderForValue) { if (this.valueBuilder_ == null) { ensureValueIsMutable(); this.value_.add(index, builderForValue.build()); onChanged(); } else { this.valueBuilder_.addMessage(index, builderForValue.build()); }  return this; } public Builder addAllValue(Iterable<? extends EnumValueDescriptorProto> values) { if (this.valueBuilder_ == null) { ensureValueIsMutable(); AbstractMessageLite.Builder.addAll(values, this.value_); onChanged(); } else { this.valueBuilder_.addAllMessages(values); }  return this; } public Builder clearValue() { if (this.valueBuilder_ == null) { this.value_ = Collections.emptyList(); this.bitField0_ &= 0xFFFFFFFD; onChanged(); } else { this.valueBuilder_.clear(); }  return this; } public Builder removeValue(int index) { if (this.valueBuilder_ == null) { ensureValueIsMutable(); this.value_.remove(index); onChanged(); } else { this.valueBuilder_.remove(index); }  return this; } public EnumValueDescriptorProto.Builder getValueBuilder(int index) { return getValueFieldBuilder().getBuilder(index); } public EnumValueDescriptorProtoOrBuilder getValueOrBuilder(int index) { if (this.valueBuilder_ == null) return this.value_.get(index);  return this.valueBuilder_.getMessageOrBuilder(index); } public List<? extends EnumValueDescriptorProtoOrBuilder> getValueOrBuilderList() { if (this.valueBuilder_ != null) return this.valueBuilder_.getMessageOrBuilderList();  return Collections.unmodifiableList((List)this.value_); } public EnumValueDescriptorProto.Builder addValueBuilder() { return getValueFieldBuilder().addBuilder(EnumValueDescriptorProto.getDefaultInstance()); } public EnumValueDescriptorProto.Builder addValueBuilder(int index) { return getValueFieldBuilder().addBuilder(index, EnumValueDescriptorProto.getDefaultInstance()); } public List<EnumValueDescriptorProto.Builder> getValueBuilderList() { return getValueFieldBuilder().getBuilderList(); } private RepeatedFieldBuilderV3<EnumValueDescriptorProto, EnumValueDescriptorProto.Builder, EnumValueDescriptorProtoOrBuilder> getValueFieldBuilder() { if (this.valueBuilder_ == null) { this.valueBuilder_ = new RepeatedFieldBuilderV3<>(this.value_, ((this.bitField0_ & 0x2) != 0), getParentForChildren(), isClean()); this.value_ = null; }  return this.valueBuilder_; } public boolean hasOptions() { return ((this.bitField0_ & 0x4) != 0); } public EnumOptions getOptions() { if (this.optionsBuilder_ == null) return (this.options_ == null) ? EnumOptions.getDefaultInstance() : this.options_;  return this.optionsBuilder_.getMessage(); } public Builder setOptions(EnumOptions value) { if (this.optionsBuilder_ == null) { if (value == null) throw new NullPointerException();  this.options_ = value; onChanged(); } else { this.optionsBuilder_.setMessage(value); }  this.bitField0_ |= 0x4; return this; } public Builder setOptions(EnumOptions.Builder builderForValue) { if (this.optionsBuilder_ == null) { this.options_ = builderForValue.build(); onChanged(); } else { this.optionsBuilder_.setMessage(builderForValue.build()); }  this.bitField0_ |= 0x4; return this; } public Builder mergeOptions(EnumOptions value) { if (this.optionsBuilder_ == null) { if ((this.bitField0_ & 0x4) != 0 && this.options_ != null && this.options_ != EnumOptions.getDefaultInstance()) { this.options_ = EnumOptions.newBuilder(this.options_).mergeFrom(value).buildPartial(); } else { this.options_ = value; }  onChanged(); } else { this.optionsBuilder_.mergeFrom(value); }  this.bitField0_ |= 0x4; return this; } public Builder clearOptions() { if (this.optionsBuilder_ == null) { this.options_ = null; onChanged(); } else { this.optionsBuilder_.clear(); }  this.bitField0_ &= 0xFFFFFFFB; return this; } public EnumOptions.Builder getOptionsBuilder() { this.bitField0_ |= 0x4; onChanged(); return getOptionsFieldBuilder().getBuilder(); } public EnumOptionsOrBuilder getOptionsOrBuilder() { if (this.optionsBuilder_ != null) return this.optionsBuilder_.getMessageOrBuilder();  return (this.options_ == null) ? EnumOptions.getDefaultInstance() : this.options_; } private SingleFieldBuilderV3<EnumOptions, EnumOptions.Builder, EnumOptionsOrBuilder> getOptionsFieldBuilder() { if (this.optionsBuilder_ == null) { this.optionsBuilder_ = new SingleFieldBuilderV3<>(getOptions(), getParentForChildren(), isClean()); this.options_ = null; }  return this.optionsBuilder_; } private void ensureReservedRangeIsMutable() { if ((this.bitField0_ & 0x8) == 0) { this.reservedRange_ = new ArrayList<>(this.reservedRange_); this.bitField0_ |= 0x8; }  } public List<EnumReservedRange> getReservedRangeList() { if (this.reservedRangeBuilder_ == null) return Collections.unmodifiableList(this.reservedRange_);  return this.reservedRangeBuilder_.getMessageList(); } public int getReservedRangeCount() { if (this.reservedRangeBuilder_ == null) return this.reservedRange_.size();  return this.reservedRangeBuilder_.getCount(); } public EnumReservedRange getReservedRange(int index) { if (this.reservedRangeBuilder_ == null) return this.reservedRange_.get(index);  return this.reservedRangeBuilder_.getMessage(index); } public Builder setReservedRange(int index, EnumReservedRange value) { if (this.reservedRangeBuilder_ == null) { if (value == null) throw new NullPointerException();  ensureReservedRangeIsMutable(); this.reservedRange_.set(index, value); onChanged(); } else { this.reservedRangeBuilder_.setMessage(index, value); }  return this; } public Builder setReservedRange(int index, EnumReservedRange.Builder builderForValue) { if (this.reservedRangeBuilder_ == null) { ensureReservedRangeIsMutable(); this.reservedRange_.set(index, builderForValue.build()); onChanged(); } else { this.reservedRangeBuilder_.setMessage(index, builderForValue.build()); }  return this; } public Builder addReservedRange(EnumReservedRange value) { if (this.reservedRangeBuilder_ == null) { if (value == null) throw new NullPointerException();  ensureReservedRangeIsMutable(); this.reservedRange_.add(value); onChanged(); } else { this.reservedRangeBuilder_.addMessage(value); }  return this; } public Builder addReservedRange(int index, EnumReservedRange value) { if (this.reservedRangeBuilder_ == null) { if (value == null) throw new NullPointerException();  ensureReservedRangeIsMutable(); this.reservedRange_.add(index, value); onChanged(); } else { this.reservedRangeBuilder_.addMessage(index, value); }  return this; } public Builder addReservedRange(EnumReservedRange.Builder builderForValue) { if (this.reservedRangeBuilder_ == null) { ensureReservedRangeIsMutable(); this.reservedRange_.add(builderForValue.build()); onChanged(); } else { this.reservedRangeBuilder_.addMessage(builderForValue.build()); }  return this; } public Builder addReservedRange(int index, EnumReservedRange.Builder builderForValue) { if (this.reservedRangeBuilder_ == null) { ensureReservedRangeIsMutable(); this.reservedRange_.add(index, builderForValue.build()); onChanged(); } else { this.reservedRangeBuilder_.addMessage(index, builderForValue.build()); }  return this; } public Builder addAllReservedRange(Iterable<? extends EnumReservedRange> values) { if (this.reservedRangeBuilder_ == null) { ensureReservedRangeIsMutable(); AbstractMessageLite.Builder.addAll(values, this.reservedRange_); onChanged(); } else { this.reservedRangeBuilder_.addAllMessages(values); }  return this; } public Builder clearReservedRange() { if (this.reservedRangeBuilder_ == null) { this.reservedRange_ = Collections.emptyList(); this.bitField0_ &= 0xFFFFFFF7; onChanged(); } else { this.reservedRangeBuilder_.clear(); }  return this; } public Builder removeReservedRange(int index) { if (this.reservedRangeBuilder_ == null) { ensureReservedRangeIsMutable(); this.reservedRange_.remove(index); onChanged(); } else { this.reservedRangeBuilder_.remove(index); }  return this; } public EnumReservedRange.Builder getReservedRangeBuilder(int index) { return getReservedRangeFieldBuilder().getBuilder(index); } public EnumReservedRangeOrBuilder getReservedRangeOrBuilder(int index) { if (this.reservedRangeBuilder_ == null) return this.reservedRange_.get(index);  return this.reservedRangeBuilder_.getMessageOrBuilder(index); } public List<? extends EnumReservedRangeOrBuilder> getReservedRangeOrBuilderList() { if (this.reservedRangeBuilder_ != null) return this.reservedRangeBuilder_.getMessageOrBuilderList();  return Collections.unmodifiableList((List)this.reservedRange_); } public EnumReservedRange.Builder addReservedRangeBuilder() { return getReservedRangeFieldBuilder().addBuilder(EnumReservedRange.getDefaultInstance()); } public EnumReservedRange.Builder addReservedRangeBuilder(int index) { return getReservedRangeFieldBuilder().addBuilder(index, EnumReservedRange.getDefaultInstance()); } public List<EnumReservedRange.Builder> getReservedRangeBuilderList() { return getReservedRangeFieldBuilder().getBuilderList(); }
/*       */       private RepeatedFieldBuilderV3<EnumReservedRange, EnumReservedRange.Builder, EnumReservedRangeOrBuilder> getReservedRangeFieldBuilder() { if (this.reservedRangeBuilder_ == null) { this.reservedRangeBuilder_ = new RepeatedFieldBuilderV3<>(this.reservedRange_, ((this.bitField0_ & 0x8) != 0), getParentForChildren(), isClean()); this.reservedRange_ = null; }  return this.reservedRangeBuilder_; }
/* 17757 */       private void ensureReservedNameIsMutable() { if ((this.bitField0_ & 0x10) == 0) {
/* 17758 */           this.reservedName_ = new LazyStringArrayList(this.reservedName_);
/* 17759 */           this.bitField0_ |= 0x10;
/*       */         }  }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public ProtocolStringList getReservedNameList() {
/* 17773 */         return this.reservedName_.getUnmodifiableView();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getReservedNameCount() {
/* 17785 */         return this.reservedName_.size();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public String getReservedName(int index) {
/* 17798 */         return this.reservedName_.get(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public ByteString getReservedNameBytes(int index) {
/* 17812 */         return this.reservedName_.getByteString(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setReservedName(int index, String value) {
/* 17827 */         if (value == null) {
/* 17828 */           throw new NullPointerException();
/*       */         }
/* 17830 */         ensureReservedNameIsMutable();
/* 17831 */         this.reservedName_.set(index, value);
/* 17832 */         onChanged();
/* 17833 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addReservedName(String value) {
/* 17847 */         if (value == null) {
/* 17848 */           throw new NullPointerException();
/*       */         }
/* 17850 */         ensureReservedNameIsMutable();
/* 17851 */         this.reservedName_.add(value);
/* 17852 */         onChanged();
/* 17853 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addAllReservedName(Iterable<String> values) {
/* 17867 */         ensureReservedNameIsMutable();
/* 17868 */         AbstractMessageLite.Builder.addAll(values, this.reservedName_);
/*       */         
/* 17870 */         onChanged();
/* 17871 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearReservedName() {
/* 17883 */         this.reservedName_ = LazyStringArrayList.EMPTY;
/* 17884 */         this.bitField0_ &= 0xFFFFFFEF;
/* 17885 */         onChanged();
/* 17886 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addReservedNameBytes(ByteString value) {
/* 17900 */         if (value == null) {
/* 17901 */           throw new NullPointerException();
/*       */         }
/* 17903 */         ensureReservedNameIsMutable();
/* 17904 */         this.reservedName_.add(value);
/* 17905 */         onChanged();
/* 17906 */         return this;
/*       */       }
/*       */ 
/*       */       
/*       */       public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
/* 17911 */         return super.setUnknownFields(unknownFields);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
/* 17917 */         return super.mergeUnknownFields(unknownFields);
/*       */       }
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 17927 */     private static final EnumDescriptorProto DEFAULT_INSTANCE = new EnumDescriptorProto();
/*       */ 
/*       */     
/*       */     public static EnumDescriptorProto getDefaultInstance() {
/* 17931 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */     
/*       */     @Deprecated
/* 17935 */     public static final Parser<EnumDescriptorProto> PARSER = new AbstractParser<EnumDescriptorProto>()
/*       */       {
/*       */ 
/*       */         
/*       */         public EnumDescriptorProto parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException
/*       */         {
/* 17941 */           return new EnumDescriptorProto(input, extensionRegistry);
/*       */         }
/*       */       };
/*       */     
/*       */     public static Parser<EnumDescriptorProto> parser() {
/* 17946 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public Parser<EnumDescriptorProto> getParserForType() {
/* 17951 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public EnumDescriptorProto getDefaultInstanceForType() {
/* 17956 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */ 
/*       */     
/*       */     public static interface EnumReservedRangeOrBuilder
/*       */       extends MessageOrBuilder
/*       */     {
/*       */       boolean hasStart();
/*       */ 
/*       */       
/*       */       int getStart();
/*       */ 
/*       */       
/*       */       boolean hasEnd();
/*       */ 
/*       */       
/*       */       int getEnd();
/*       */     }
/*       */   }
/*       */ 
/*       */   
/*       */   public static interface EnumValueDescriptorProtoOrBuilder
/*       */     extends MessageOrBuilder
/*       */   {
/*       */     boolean hasName();
/*       */ 
/*       */     
/*       */     String getName();
/*       */ 
/*       */     
/*       */     ByteString getNameBytes();
/*       */ 
/*       */     
/*       */     boolean hasNumber();
/*       */ 
/*       */     
/*       */     int getNumber();
/*       */ 
/*       */     
/*       */     boolean hasOptions();
/*       */ 
/*       */     
/*       */     EnumValueOptions getOptions();
/*       */ 
/*       */     
/*       */     EnumValueOptionsOrBuilder getOptionsOrBuilder();
/*       */   }
/*       */ 
/*       */   
/*       */   public static final class EnumValueDescriptorProto
/*       */     extends GeneratedMessageV3
/*       */     implements EnumValueDescriptorProtoOrBuilder
/*       */   {
/*       */     private static final long serialVersionUID = 0L;
/*       */     
/*       */     private int bitField0_;
/*       */     public static final int NAME_FIELD_NUMBER = 1;
/*       */     private volatile Object name_;
/*       */     public static final int NUMBER_FIELD_NUMBER = 2;
/*       */     private int number_;
/*       */     public static final int OPTIONS_FIELD_NUMBER = 3;
/*       */     private EnumValueOptions options_;
/*       */     private byte memoizedIsInitialized;
/*       */     
/*       */     private EnumValueDescriptorProto(GeneratedMessageV3.Builder<?> builder)
/*       */     {
/* 18022 */       super(builder);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/* 18209 */       this.memoizedIsInitialized = -1; } private EnumValueDescriptorProto() { this.memoizedIsInitialized = -1; this.name_ = ""; } protected Object newInstance(UnusedPrivateParameter unused) { return new EnumValueDescriptorProto(); } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private EnumValueDescriptorProto(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this(); if (extensionRegistry == null) throw new NullPointerException();  int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { ByteString bs; EnumValueOptions.Builder subBuilder; int tag = input.readTag(); switch (tag) { case 0: done = true; continue;case 10: bs = input.readBytes(); this.bitField0_ |= 0x1; this.name_ = bs; continue;case 16: this.bitField0_ |= 0x2; this.number_ = input.readInt32(); continue;case 26: subBuilder = null; if ((this.bitField0_ & 0x4) != 0) subBuilder = this.options_.toBuilder();  this.options_ = input.<EnumValueOptions>readMessage(EnumValueOptions.PARSER, extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.options_); this.options_ = subBuilder.buildPartial(); }  this.bitField0_ |= 0x4; continue; }  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this); } finally { this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return DescriptorProtos.internal_static_google_protobuf_EnumValueDescriptorProto_descriptor; } protected FieldAccessorTable internalGetFieldAccessorTable() { return DescriptorProtos.internal_static_google_protobuf_EnumValueDescriptorProto_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)EnumValueDescriptorProto.class, (Class)Builder.class); } public boolean hasName() { return ((this.bitField0_ & 0x1) != 0); } public String getName() { Object ref = this.name_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.name_ = s;  return s; } public ByteString getNameBytes() { Object ref = this.name_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.name_ = b; return b; }  return (ByteString)ref; } public boolean hasNumber() { return ((this.bitField0_ & 0x2) != 0); } public int getNumber() { return this.number_; } public boolean hasOptions() { return ((this.bitField0_ & 0x4) != 0); }
/*       */     public EnumValueOptions getOptions() { return (this.options_ == null) ? EnumValueOptions.getDefaultInstance() : this.options_; }
/*       */     public EnumValueOptionsOrBuilder getOptionsOrBuilder() { return (this.options_ == null) ? EnumValueOptions.getDefaultInstance() : this.options_; }
/* 18212 */     public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized;
/* 18213 */       if (isInitialized == 1) return true; 
/* 18214 */       if (isInitialized == 0) return false;
/*       */       
/* 18216 */       if (hasOptions() && 
/* 18217 */         !getOptions().isInitialized()) {
/* 18218 */         this.memoizedIsInitialized = 0;
/* 18219 */         return false;
/*       */       } 
/*       */       
/* 18222 */       this.memoizedIsInitialized = 1;
/* 18223 */       return true; }
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/* 18229 */       if ((this.bitField0_ & 0x1) != 0) {
/* 18230 */         GeneratedMessageV3.writeString(output, 1, this.name_);
/*       */       }
/* 18232 */       if ((this.bitField0_ & 0x2) != 0) {
/* 18233 */         output.writeInt32(2, this.number_);
/*       */       }
/* 18235 */       if ((this.bitField0_ & 0x4) != 0) {
/* 18236 */         output.writeMessage(3, getOptions());
/*       */       }
/* 18238 */       this.unknownFields.writeTo(output);
/*       */     }
/*       */ 
/*       */     
/*       */     public int getSerializedSize() {
/* 18243 */       int size = this.memoizedSize;
/* 18244 */       if (size != -1) return size;
/*       */       
/* 18246 */       size = 0;
/* 18247 */       if ((this.bitField0_ & 0x1) != 0) {
/* 18248 */         size += GeneratedMessageV3.computeStringSize(1, this.name_);
/*       */       }
/* 18250 */       if ((this.bitField0_ & 0x2) != 0) {
/* 18251 */         size += 
/* 18252 */           CodedOutputStream.computeInt32Size(2, this.number_);
/*       */       }
/* 18254 */       if ((this.bitField0_ & 0x4) != 0) {
/* 18255 */         size += 
/* 18256 */           CodedOutputStream.computeMessageSize(3, getOptions());
/*       */       }
/* 18258 */       size += this.unknownFields.getSerializedSize();
/* 18259 */       this.memoizedSize = size;
/* 18260 */       return size;
/*       */     }
/*       */ 
/*       */     
/*       */     public boolean equals(Object obj) {
/* 18265 */       if (obj == this) {
/* 18266 */         return true;
/*       */       }
/* 18268 */       if (!(obj instanceof EnumValueDescriptorProto)) {
/* 18269 */         return super.equals(obj);
/*       */       }
/* 18271 */       EnumValueDescriptorProto other = (EnumValueDescriptorProto)obj;
/*       */       
/* 18273 */       if (hasName() != other.hasName()) return false; 
/* 18274 */       if (hasName() && 
/*       */         
/* 18276 */         !getName().equals(other.getName())) return false;
/*       */       
/* 18278 */       if (hasNumber() != other.hasNumber()) return false; 
/* 18279 */       if (hasNumber() && 
/* 18280 */         getNumber() != other
/* 18281 */         .getNumber()) return false;
/*       */       
/* 18283 */       if (hasOptions() != other.hasOptions()) return false; 
/* 18284 */       if (hasOptions() && 
/*       */         
/* 18286 */         !getOptions().equals(other.getOptions())) return false;
/*       */       
/* 18288 */       if (!this.unknownFields.equals(other.unknownFields)) return false; 
/* 18289 */       return true;
/*       */     }
/*       */ 
/*       */     
/*       */     public int hashCode() {
/* 18294 */       if (this.memoizedHashCode != 0) {
/* 18295 */         return this.memoizedHashCode;
/*       */       }
/* 18297 */       int hash = 41;
/* 18298 */       hash = 19 * hash + getDescriptor().hashCode();
/* 18299 */       if (hasName()) {
/* 18300 */         hash = 37 * hash + 1;
/* 18301 */         hash = 53 * hash + getName().hashCode();
/*       */       } 
/* 18303 */       if (hasNumber()) {
/* 18304 */         hash = 37 * hash + 2;
/* 18305 */         hash = 53 * hash + getNumber();
/*       */       } 
/* 18307 */       if (hasOptions()) {
/* 18308 */         hash = 37 * hash + 3;
/* 18309 */         hash = 53 * hash + getOptions().hashCode();
/*       */       } 
/* 18311 */       hash = 29 * hash + this.unknownFields.hashCode();
/* 18312 */       this.memoizedHashCode = hash;
/* 18313 */       return hash;
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static EnumValueDescriptorProto parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
/* 18319 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static EnumValueDescriptorProto parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 18325 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static EnumValueDescriptorProto parseFrom(ByteString data) throws InvalidProtocolBufferException {
/* 18330 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static EnumValueDescriptorProto parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 18336 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static EnumValueDescriptorProto parseFrom(byte[] data) throws InvalidProtocolBufferException {
/* 18340 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static EnumValueDescriptorProto parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 18346 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static EnumValueDescriptorProto parseFrom(InputStream input) throws IOException {
/* 18350 */       return 
/* 18351 */         GeneratedMessageV3.<EnumValueDescriptorProto>parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static EnumValueDescriptorProto parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 18357 */       return 
/* 18358 */         GeneratedMessageV3.<EnumValueDescriptorProto>parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static EnumValueDescriptorProto parseDelimitedFrom(InputStream input) throws IOException {
/* 18362 */       return 
/* 18363 */         GeneratedMessageV3.<EnumValueDescriptorProto>parseDelimitedWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static EnumValueDescriptorProto parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 18369 */       return 
/* 18370 */         GeneratedMessageV3.<EnumValueDescriptorProto>parseDelimitedWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static EnumValueDescriptorProto parseFrom(CodedInputStream input) throws IOException {
/* 18375 */       return 
/* 18376 */         GeneratedMessageV3.<EnumValueDescriptorProto>parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static EnumValueDescriptorProto parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 18382 */       return 
/* 18383 */         GeneratedMessageV3.<EnumValueDescriptorProto>parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public Builder newBuilderForType() {
/* 18387 */       return newBuilder();
/*       */     } public static Builder newBuilder() {
/* 18389 */       return DEFAULT_INSTANCE.toBuilder();
/*       */     }
/*       */     public static Builder newBuilder(EnumValueDescriptorProto prototype) {
/* 18392 */       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
/*       */     }
/*       */     
/*       */     public Builder toBuilder() {
/* 18396 */       return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder())
/* 18397 */         .mergeFrom(this);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     protected Builder newBuilderForType(BuilderParent parent) {
/* 18403 */       Builder builder = new Builder(parent);
/* 18404 */       return builder;
/*       */     }
/*       */ 
/*       */     
/*       */     public static final class Builder
/*       */       extends GeneratedMessageV3.Builder<Builder>
/*       */       implements EnumValueDescriptorProtoOrBuilder
/*       */     {
/*       */       private int bitField0_;
/*       */       private Object name_;
/*       */       private int number_;
/*       */       private EnumValueOptions options_;
/*       */       private SingleFieldBuilderV3<EnumValueOptions, EnumValueOptions.Builder, EnumValueOptionsOrBuilder> optionsBuilder_;
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/* 18419 */         return DescriptorProtos.internal_static_google_protobuf_EnumValueDescriptorProto_descriptor;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       protected FieldAccessorTable internalGetFieldAccessorTable() {
/* 18425 */         return DescriptorProtos.internal_static_google_protobuf_EnumValueDescriptorProto_fieldAccessorTable
/* 18426 */           .ensureFieldAccessorsInitialized((Class) EnumValueDescriptorProto.class, (Class)Builder.class);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private Builder()
/*       */       {
/* 18598 */         this.name_ = ""; maybeForceBuilderInitialization(); } private Builder(BuilderParent parent) { super(parent); this.name_ = ""; maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (GeneratedMessageV3.alwaysUseFieldBuilders) getOptionsFieldBuilder();  } public Builder clear() { super.clear(); this.name_ = ""; this.bitField0_ &= 0xFFFFFFFE; this.number_ = 0; this.bitField0_ &= 0xFFFFFFFD; if (this.optionsBuilder_ == null) { this.options_ = null; } else { this.optionsBuilder_.clear(); }  this.bitField0_ &= 0xFFFFFFFB; return this; } public Descriptors.Descriptor getDescriptorForType() { return DescriptorProtos.internal_static_google_protobuf_EnumValueDescriptorProto_descriptor; } public EnumValueDescriptorProto getDefaultInstanceForType() { return EnumValueDescriptorProto.getDefaultInstance(); } public EnumValueDescriptorProto build() { EnumValueDescriptorProto result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public EnumValueDescriptorProto buildPartial() { EnumValueDescriptorProto result = new EnumValueDescriptorProto(this); int from_bitField0_ = this.bitField0_; int to_bitField0_ = 0; if ((from_bitField0_ & 0x1) != 0) to_bitField0_ |= 0x1;  result.name_ = this.name_; if ((from_bitField0_ & 0x2) != 0) { result.number_ = this.number_; to_bitField0_ |= 0x2; }  if ((from_bitField0_ & 0x4) != 0) { if (this.optionsBuilder_ == null) { result.options_ = this.options_; } else { result.options_ = this.optionsBuilder_.build(); }  to_bitField0_ |= 0x4; }  result.bitField0_ = to_bitField0_; onBuilt(); return result; } public Builder clone() { return super.clone(); } public Builder setField(Descriptors.FieldDescriptor field, Object value) { return super.setField(field, value); } public Builder clearField(Descriptors.FieldDescriptor field) { return super.clearField(field); } public Builder clearOneof(Descriptors.OneofDescriptor oneof) { return super.clearOneof(oneof); } public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) { return super.setRepeatedField(field, index, value); }
/*       */       public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) { return super.addRepeatedField(field, value); }
/*       */       public Builder mergeFrom(Message other) { if (other instanceof EnumValueDescriptorProto) return mergeFrom((EnumValueDescriptorProto)other);  super.mergeFrom(other); return this; }
/*       */       public Builder mergeFrom(EnumValueDescriptorProto other) { if (other == EnumValueDescriptorProto.getDefaultInstance()) return this;  if (other.hasName()) { this.bitField0_ |= 0x1; this.name_ = other.name_; onChanged(); }  if (other.hasNumber()) setNumber(other.getNumber());  if (other.hasOptions()) mergeOptions(other.getOptions());  mergeUnknownFields(other.unknownFields); onChanged(); return this; }
/*       */       public final boolean isInitialized() { if (hasOptions() && !getOptions().isInitialized()) return false;  return true; }
/*       */       public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { EnumValueDescriptorProto parsedMessage = null; try { parsedMessage = EnumValueDescriptorProto.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (EnumValueDescriptorProto)e.getUnfinishedMessage(); throw e.unwrapIOException(); } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; }
/* 18604 */       public boolean hasName() { return ((this.bitField0_ & 0x1) != 0); }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public String getName() {
/* 18611 */         Object ref = this.name_;
/* 18612 */         if (!(ref instanceof String)) {
/* 18613 */           ByteString bs = (ByteString)ref;
/*       */           
/* 18615 */           String s = bs.toStringUtf8();
/* 18616 */           if (bs.isValidUtf8()) {
/* 18617 */             this.name_ = s;
/*       */           }
/* 18619 */           return s;
/*       */         } 
/* 18621 */         return (String)ref;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public ByteString getNameBytes() {
/* 18630 */         Object ref = this.name_;
/* 18631 */         if (ref instanceof String) {
/*       */           
/* 18633 */           ByteString b = ByteString.copyFromUtf8((String)ref);
/*       */           
/* 18635 */           this.name_ = b;
/* 18636 */           return b;
/*       */         } 
/* 18638 */         return (ByteString)ref;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setName(String value) {
/* 18648 */         if (value == null) {
/* 18649 */           throw new NullPointerException();
/*       */         }
/* 18651 */         this.bitField0_ |= 0x1;
/* 18652 */         this.name_ = value;
/* 18653 */         onChanged();
/* 18654 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearName() {
/* 18661 */         this.bitField0_ &= 0xFFFFFFFE;
/* 18662 */         this.name_ = EnumValueDescriptorProto.getDefaultInstance().getName();
/* 18663 */         onChanged();
/* 18664 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setNameBytes(ByteString value) {
/* 18673 */         if (value == null) {
/* 18674 */           throw new NullPointerException();
/*       */         }
/* 18676 */         this.bitField0_ |= 0x1;
/* 18677 */         this.name_ = value;
/* 18678 */         onChanged();
/* 18679 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasNumber() {
/* 18689 */         return ((this.bitField0_ & 0x2) != 0);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getNumber() {
/* 18697 */         return this.number_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setNumber(int value) {
/* 18705 */         this.bitField0_ |= 0x2;
/* 18706 */         this.number_ = value;
/* 18707 */         onChanged();
/* 18708 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearNumber() {
/* 18715 */         this.bitField0_ &= 0xFFFFFFFD;
/* 18716 */         this.number_ = 0;
/* 18717 */         onChanged();
/* 18718 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasOptions() {
/* 18729 */         return ((this.bitField0_ & 0x4) != 0);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public EnumValueOptions getOptions() {
/* 18736 */         if (this.optionsBuilder_ == null) {
/* 18737 */           return (this.options_ == null) ? EnumValueOptions.getDefaultInstance() : this.options_;
/*       */         }
/* 18739 */         return this.optionsBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setOptions(EnumValueOptions value) {
/* 18746 */         if (this.optionsBuilder_ == null) {
/* 18747 */           if (value == null) {
/* 18748 */             throw new NullPointerException();
/*       */           }
/* 18750 */           this.options_ = value;
/* 18751 */           onChanged();
/*       */         } else {
/* 18753 */           this.optionsBuilder_.setMessage(value);
/*       */         } 
/* 18755 */         this.bitField0_ |= 0x4;
/* 18756 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setOptions(EnumValueOptions.Builder builderForValue) {
/* 18763 */         if (this.optionsBuilder_ == null) {
/* 18764 */           this.options_ = builderForValue.build();
/* 18765 */           onChanged();
/*       */         } else {
/* 18767 */           this.optionsBuilder_.setMessage(builderForValue.build());
/*       */         } 
/* 18769 */         this.bitField0_ |= 0x4;
/* 18770 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeOptions(EnumValueOptions value) {
/* 18776 */         if (this.optionsBuilder_ == null) {
/* 18777 */           if ((this.bitField0_ & 0x4) != 0 && this.options_ != null && this.options_ != 
/*       */             
/* 18779 */             EnumValueOptions.getDefaultInstance()) {
/* 18780 */             this
/* 18781 */               .options_ = EnumValueOptions.newBuilder(this.options_).mergeFrom(value).buildPartial();
/*       */           } else {
/* 18783 */             this.options_ = value;
/*       */           } 
/* 18785 */           onChanged();
/*       */         } else {
/* 18787 */           this.optionsBuilder_.mergeFrom(value);
/*       */         } 
/* 18789 */         this.bitField0_ |= 0x4;
/* 18790 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearOptions() {
/* 18796 */         if (this.optionsBuilder_ == null) {
/* 18797 */           this.options_ = null;
/* 18798 */           onChanged();
/*       */         } else {
/* 18800 */           this.optionsBuilder_.clear();
/*       */         } 
/* 18802 */         this.bitField0_ &= 0xFFFFFFFB;
/* 18803 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public EnumValueOptions.Builder getOptionsBuilder() {
/* 18809 */         this.bitField0_ |= 0x4;
/* 18810 */         onChanged();
/* 18811 */         return getOptionsFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public EnumValueOptionsOrBuilder getOptionsOrBuilder() {
/* 18817 */         if (this.optionsBuilder_ != null) {
/* 18818 */           return this.optionsBuilder_.getMessageOrBuilder();
/*       */         }
/* 18820 */         return (this.options_ == null) ? 
/* 18821 */           EnumValueOptions.getDefaultInstance() : this.options_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<EnumValueOptions, EnumValueOptions.Builder, EnumValueOptionsOrBuilder> getOptionsFieldBuilder() {
/* 18830 */         if (this.optionsBuilder_ == null) {
/* 18831 */           this
/*       */ 
/*       */ 
/*       */             
/* 18835 */             .optionsBuilder_ = new SingleFieldBuilderV3<>(getOptions(), getParentForChildren(), isClean());
/* 18836 */           this.options_ = null;
/*       */         } 
/* 18838 */         return this.optionsBuilder_;
/*       */       }
/*       */ 
/*       */       
/*       */       public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
/* 18843 */         return super.setUnknownFields(unknownFields);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
/* 18849 */         return super.mergeUnknownFields(unknownFields);
/*       */       }
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 18859 */     private static final EnumValueDescriptorProto DEFAULT_INSTANCE = new EnumValueDescriptorProto();
/*       */ 
/*       */     
/*       */     public static EnumValueDescriptorProto getDefaultInstance() {
/* 18863 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */     
/*       */     @Deprecated
/* 18867 */     public static final Parser<EnumValueDescriptorProto> PARSER = new AbstractParser<EnumValueDescriptorProto>()
/*       */       {
/*       */ 
/*       */         
/*       */         public EnumValueDescriptorProto parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException
/*       */         {
/* 18873 */           return new EnumValueDescriptorProto(input, extensionRegistry);
/*       */         }
/*       */       };
/*       */     
/*       */     public static Parser<EnumValueDescriptorProto> parser() {
/* 18878 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public Parser<EnumValueDescriptorProto> getParserForType() {
/* 18883 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public EnumValueDescriptorProto getDefaultInstanceForType() {
/* 18888 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */   }
/*       */ 
/*       */ 
/*       */   
/*       */   public static interface ServiceDescriptorProtoOrBuilder
/*       */     extends MessageOrBuilder
/*       */   {
/*       */     boolean hasName();
/*       */ 
/*       */ 
/*       */     
/*       */     String getName();
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getNameBytes();
/*       */ 
/*       */ 
/*       */     
/*       */     List<MethodDescriptorProto> getMethodList();
/*       */ 
/*       */ 
/*       */     
/*       */     MethodDescriptorProto getMethod(int param1Int);
/*       */ 
/*       */ 
/*       */     
/*       */     int getMethodCount();
/*       */ 
/*       */ 
/*       */     
/*       */     List<? extends MethodDescriptorProtoOrBuilder> getMethodOrBuilderList();
/*       */ 
/*       */ 
/*       */     
/*       */     MethodDescriptorProtoOrBuilder getMethodOrBuilder(int param1Int);
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasOptions();
/*       */ 
/*       */ 
/*       */     
/*       */     ServiceOptions getOptions();
/*       */ 
/*       */ 
/*       */     
/*       */     ServiceOptionsOrBuilder getOptionsOrBuilder();
/*       */   }
/*       */ 
/*       */ 
/*       */   
/*       */   public static final class ServiceDescriptorProto
/*       */     extends GeneratedMessageV3
/*       */     implements ServiceDescriptorProtoOrBuilder
/*       */   {
/*       */     private static final long serialVersionUID = 0L;
/*       */     
/*       */     private int bitField0_;
/*       */     
/*       */     public static final int NAME_FIELD_NUMBER = 1;
/*       */     
/*       */     private volatile Object name_;
/*       */     
/*       */     public static final int METHOD_FIELD_NUMBER = 2;
/*       */     
/*       */     private List<MethodDescriptorProto> method_;
/*       */     
/*       */     public static final int OPTIONS_FIELD_NUMBER = 3;
/*       */     
/*       */     private ServiceOptions options_;
/*       */     
/*       */     private byte memoizedIsInitialized;
/*       */ 
/*       */     
/*       */     private ServiceDescriptorProto(GeneratedMessageV3.Builder<?> builder)
/*       */     {
/* 18967 */       super(builder);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/* 19183 */       this.memoizedIsInitialized = -1; } private ServiceDescriptorProto() { this.memoizedIsInitialized = -1; this.name_ = ""; this.method_ = Collections.emptyList(); } protected Object newInstance(UnusedPrivateParameter unused) { return new ServiceDescriptorProto(); } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private ServiceDescriptorProto(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this(); if (extensionRegistry == null) throw new NullPointerException();  int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { ByteString bs; ServiceOptions.Builder subBuilder; int tag = input.readTag(); switch (tag) { case 0: done = true; continue;case 10: bs = input.readBytes(); this.bitField0_ |= 0x1; this.name_ = bs; continue;case 18: if ((mutable_bitField0_ & 0x2) == 0) { this.method_ = new ArrayList<>(); mutable_bitField0_ |= 0x2; }  this.method_.add(input.readMessage(MethodDescriptorProto.PARSER, extensionRegistry)); continue;case 26: subBuilder = null; if ((this.bitField0_ & 0x2) != 0) subBuilder = this.options_.toBuilder();  this.options_ = input.<ServiceOptions>readMessage(ServiceOptions.PARSER, extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.options_); this.options_ = subBuilder.buildPartial(); }  this.bitField0_ |= 0x2; continue; }  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this); } finally { if ((mutable_bitField0_ & 0x2) != 0) this.method_ = Collections.unmodifiableList(this.method_);  this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return DescriptorProtos.internal_static_google_protobuf_ServiceDescriptorProto_descriptor; } protected FieldAccessorTable internalGetFieldAccessorTable() { return DescriptorProtos.internal_static_google_protobuf_ServiceDescriptorProto_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)ServiceDescriptorProto.class, (Class)Builder.class); } public boolean hasName() { return ((this.bitField0_ & 0x1) != 0); } public String getName() { Object ref = this.name_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.name_ = s;  return s; } public ByteString getNameBytes() { Object ref = this.name_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.name_ = b; return b; }  return (ByteString)ref; } public List<MethodDescriptorProto> getMethodList() { return this.method_; } public List<? extends MethodDescriptorProtoOrBuilder> getMethodOrBuilderList() { return (List)this.method_; } public int getMethodCount() { return this.method_.size(); } public MethodDescriptorProto getMethod(int index) { return this.method_.get(index); } public MethodDescriptorProtoOrBuilder getMethodOrBuilder(int index) { return this.method_.get(index); } public boolean hasOptions() { return ((this.bitField0_ & 0x2) != 0); }
/*       */     public ServiceOptions getOptions() { return (this.options_ == null) ? ServiceOptions.getDefaultInstance() : this.options_; }
/*       */     public ServiceOptionsOrBuilder getOptionsOrBuilder() { return (this.options_ == null) ? ServiceOptions.getDefaultInstance() : this.options_; }
/* 19186 */     public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized;
/* 19187 */       if (isInitialized == 1) return true; 
/* 19188 */       if (isInitialized == 0) return false;
/*       */       
/* 19190 */       for (int i = 0; i < getMethodCount(); i++) {
/* 19191 */         if (!getMethod(i).isInitialized()) {
/* 19192 */           this.memoizedIsInitialized = 0;
/* 19193 */           return false;
/*       */         } 
/*       */       } 
/* 19196 */       if (hasOptions() && 
/* 19197 */         !getOptions().isInitialized()) {
/* 19198 */         this.memoizedIsInitialized = 0;
/* 19199 */         return false;
/*       */       } 
/*       */       
/* 19202 */       this.memoizedIsInitialized = 1;
/* 19203 */       return true; }
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/* 19209 */       if ((this.bitField0_ & 0x1) != 0) {
/* 19210 */         GeneratedMessageV3.writeString(output, 1, this.name_);
/*       */       }
/* 19212 */       for (int i = 0; i < this.method_.size(); i++) {
/* 19213 */         output.writeMessage(2, this.method_.get(i));
/*       */       }
/* 19215 */       if ((this.bitField0_ & 0x2) != 0) {
/* 19216 */         output.writeMessage(3, getOptions());
/*       */       }
/* 19218 */       this.unknownFields.writeTo(output);
/*       */     }
/*       */ 
/*       */     
/*       */     public int getSerializedSize() {
/* 19223 */       int size = this.memoizedSize;
/* 19224 */       if (size != -1) return size;
/*       */       
/* 19226 */       size = 0;
/* 19227 */       if ((this.bitField0_ & 0x1) != 0) {
/* 19228 */         size += GeneratedMessageV3.computeStringSize(1, this.name_);
/*       */       }
/* 19230 */       for (int i = 0; i < this.method_.size(); i++) {
/* 19231 */         size += 
/* 19232 */           CodedOutputStream.computeMessageSize(2, this.method_.get(i));
/*       */       }
/* 19234 */       if ((this.bitField0_ & 0x2) != 0) {
/* 19235 */         size += 
/* 19236 */           CodedOutputStream.computeMessageSize(3, getOptions());
/*       */       }
/* 19238 */       size += this.unknownFields.getSerializedSize();
/* 19239 */       this.memoizedSize = size;
/* 19240 */       return size;
/*       */     }
/*       */ 
/*       */     
/*       */     public boolean equals(Object obj) {
/* 19245 */       if (obj == this) {
/* 19246 */         return true;
/*       */       }
/* 19248 */       if (!(obj instanceof ServiceDescriptorProto)) {
/* 19249 */         return super.equals(obj);
/*       */       }
/* 19251 */       ServiceDescriptorProto other = (ServiceDescriptorProto)obj;
/*       */       
/* 19253 */       if (hasName() != other.hasName()) return false; 
/* 19254 */       if (hasName() && 
/*       */         
/* 19256 */         !getName().equals(other.getName())) return false;
/*       */ 
/*       */       
/* 19259 */       if (!getMethodList().equals(other.getMethodList())) return false; 
/* 19260 */       if (hasOptions() != other.hasOptions()) return false; 
/* 19261 */       if (hasOptions() && 
/*       */         
/* 19263 */         !getOptions().equals(other.getOptions())) return false;
/*       */       
/* 19265 */       if (!this.unknownFields.equals(other.unknownFields)) return false; 
/* 19266 */       return true;
/*       */     }
/*       */ 
/*       */     
/*       */     public int hashCode() {
/* 19271 */       if (this.memoizedHashCode != 0) {
/* 19272 */         return this.memoizedHashCode;
/*       */       }
/* 19274 */       int hash = 41;
/* 19275 */       hash = 19 * hash + getDescriptor().hashCode();
/* 19276 */       if (hasName()) {
/* 19277 */         hash = 37 * hash + 1;
/* 19278 */         hash = 53 * hash + getName().hashCode();
/*       */       } 
/* 19280 */       if (getMethodCount() > 0) {
/* 19281 */         hash = 37 * hash + 2;
/* 19282 */         hash = 53 * hash + getMethodList().hashCode();
/*       */       } 
/* 19284 */       if (hasOptions()) {
/* 19285 */         hash = 37 * hash + 3;
/* 19286 */         hash = 53 * hash + getOptions().hashCode();
/*       */       } 
/* 19288 */       hash = 29 * hash + this.unknownFields.hashCode();
/* 19289 */       this.memoizedHashCode = hash;
/* 19290 */       return hash;
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static ServiceDescriptorProto parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
/* 19296 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static ServiceDescriptorProto parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 19302 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static ServiceDescriptorProto parseFrom(ByteString data) throws InvalidProtocolBufferException {
/* 19307 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static ServiceDescriptorProto parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 19313 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static ServiceDescriptorProto parseFrom(byte[] data) throws InvalidProtocolBufferException {
/* 19317 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static ServiceDescriptorProto parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 19323 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static ServiceDescriptorProto parseFrom(InputStream input) throws IOException {
/* 19327 */       return 
/* 19328 */         GeneratedMessageV3.<ServiceDescriptorProto>parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static ServiceDescriptorProto parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 19334 */       return 
/* 19335 */         GeneratedMessageV3.<ServiceDescriptorProto>parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static ServiceDescriptorProto parseDelimitedFrom(InputStream input) throws IOException {
/* 19339 */       return 
/* 19340 */         GeneratedMessageV3.<ServiceDescriptorProto>parseDelimitedWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static ServiceDescriptorProto parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 19346 */       return 
/* 19347 */         GeneratedMessageV3.<ServiceDescriptorProto>parseDelimitedWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static ServiceDescriptorProto parseFrom(CodedInputStream input) throws IOException {
/* 19352 */       return 
/* 19353 */         GeneratedMessageV3.<ServiceDescriptorProto>parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static ServiceDescriptorProto parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 19359 */       return 
/* 19360 */         GeneratedMessageV3.<ServiceDescriptorProto>parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public Builder newBuilderForType() {
/* 19364 */       return newBuilder();
/*       */     } public static Builder newBuilder() {
/* 19366 */       return DEFAULT_INSTANCE.toBuilder();
/*       */     }
/*       */     public static Builder newBuilder(ServiceDescriptorProto prototype) {
/* 19369 */       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
/*       */     }
/*       */     
/*       */     public Builder toBuilder() {
/* 19373 */       return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder())
/* 19374 */         .mergeFrom(this);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     protected Builder newBuilderForType(BuilderParent parent) {
/* 19380 */       Builder builder = new Builder(parent);
/* 19381 */       return builder;
/*       */     }
/*       */     
/*       */     public static final class Builder
/*       */       extends GeneratedMessageV3.Builder<Builder>
/*       */       implements ServiceDescriptorProtoOrBuilder
/*       */     {
/*       */       private int bitField0_;
/*       */       private Object name_;
/*       */       private List<MethodDescriptorProto> method_;
/*       */       private RepeatedFieldBuilderV3<MethodDescriptorProto, MethodDescriptorProto.Builder, MethodDescriptorProtoOrBuilder> methodBuilder_;
/*       */       private ServiceOptions options_;
/*       */       private SingleFieldBuilderV3<ServiceOptions, ServiceOptions.Builder, ServiceOptionsOrBuilder> optionsBuilder_;
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/* 19396 */         return DescriptorProtos.internal_static_google_protobuf_ServiceDescriptorProto_descriptor;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       protected FieldAccessorTable internalGetFieldAccessorTable() {
/* 19402 */         return DescriptorProtos.internal_static_google_protobuf_ServiceDescriptorProto_fieldAccessorTable
/* 19403 */           .ensureFieldAccessorsInitialized((Class) ServiceDescriptorProto.class, (Class)Builder.class);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private Builder()
/*       */       {
/* 19613 */         this.name_ = "";
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 19697 */         this
/* 19698 */           .method_ = Collections.emptyList(); maybeForceBuilderInitialization(); } private Builder(BuilderParent parent) { super(parent); this.name_ = ""; this.method_ = Collections.emptyList(); maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (GeneratedMessageV3.alwaysUseFieldBuilders) { getMethodFieldBuilder(); getOptionsFieldBuilder(); }  } public Builder clear() { super.clear(); this.name_ = ""; this.bitField0_ &= 0xFFFFFFFE; if (this.methodBuilder_ == null) { this.method_ = Collections.emptyList(); this.bitField0_ &= 0xFFFFFFFD; } else { this.methodBuilder_.clear(); }  if (this.optionsBuilder_ == null) { this.options_ = null; } else { this.optionsBuilder_.clear(); }  this.bitField0_ &= 0xFFFFFFFB; return this; } public Descriptors.Descriptor getDescriptorForType() { return DescriptorProtos.internal_static_google_protobuf_ServiceDescriptorProto_descriptor; } public ServiceDescriptorProto getDefaultInstanceForType() { return ServiceDescriptorProto.getDefaultInstance(); } public ServiceDescriptorProto build() { ServiceDescriptorProto result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public ServiceDescriptorProto buildPartial() { ServiceDescriptorProto result = new ServiceDescriptorProto(this); int from_bitField0_ = this.bitField0_; int to_bitField0_ = 0; if ((from_bitField0_ & 0x1) != 0) to_bitField0_ |= 0x1;  result.name_ = this.name_; if (this.methodBuilder_ == null) { if ((this.bitField0_ & 0x2) != 0) { this.method_ = Collections.unmodifiableList(this.method_); this.bitField0_ &= 0xFFFFFFFD; }  result.method_ = this.method_; } else { result.method_ = this.methodBuilder_.build(); }  if ((from_bitField0_ & 0x4) != 0) { if (this.optionsBuilder_ == null) { result.options_ = this.options_; } else { result.options_ = this.optionsBuilder_.build(); }  to_bitField0_ |= 0x2; }  result.bitField0_ = to_bitField0_; onBuilt(); return result; } public Builder clone() { return super.clone(); } public Builder setField(Descriptors.FieldDescriptor field, Object value) { return super.setField(field, value); } public Builder clearField(Descriptors.FieldDescriptor field) { return super.clearField(field); } public Builder clearOneof(Descriptors.OneofDescriptor oneof) { return super.clearOneof(oneof); } public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) { return super.setRepeatedField(field, index, value); } public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) { return super.addRepeatedField(field, value); } public Builder mergeFrom(Message other) { if (other instanceof ServiceDescriptorProto) return mergeFrom((ServiceDescriptorProto)other);  super.mergeFrom(other); return this; } public Builder mergeFrom(ServiceDescriptorProto other) { if (other == ServiceDescriptorProto.getDefaultInstance()) return this;  if (other.hasName()) { this.bitField0_ |= 0x1; this.name_ = other.name_; onChanged(); }  if (this.methodBuilder_ == null) { if (!other.method_.isEmpty()) { if (this.method_.isEmpty()) { this.method_ = other.method_; this.bitField0_ &= 0xFFFFFFFD; } else { ensureMethodIsMutable(); this.method_.addAll(other.method_); }  onChanged(); }  } else if (!other.method_.isEmpty()) { if (this.methodBuilder_.isEmpty()) { this.methodBuilder_.dispose(); this.methodBuilder_ = null; this.method_ = other.method_; this.bitField0_ &= 0xFFFFFFFD; this.methodBuilder_ = GeneratedMessageV3.alwaysUseFieldBuilders ? getMethodFieldBuilder() : null; } else { this.methodBuilder_.addAllMessages(other.method_); }  }  if (other.hasOptions()) mergeOptions(other.getOptions());  mergeUnknownFields(other.unknownFields); onChanged(); return this; } public final boolean isInitialized() { for (int i = 0; i < getMethodCount(); i++) { if (!getMethod(i).isInitialized()) return false;  }  if (hasOptions() && !getOptions().isInitialized()) return false;  return true; } public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { ServiceDescriptorProto parsedMessage = null; try { parsedMessage = ServiceDescriptorProto.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (ServiceDescriptorProto)e.getUnfinishedMessage(); throw e.unwrapIOException(); } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; } public boolean hasName() { return ((this.bitField0_ & 0x1) != 0); } public String getName() { Object ref = this.name_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.name_ = s;  return s; }  return (String)ref; } public ByteString getNameBytes() { Object ref = this.name_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.name_ = b; return b; }  return (ByteString)ref; } public Builder setName(String value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x1; this.name_ = value; onChanged(); return this; } public Builder clearName() { this.bitField0_ &= 0xFFFFFFFE; this.name_ = ServiceDescriptorProto.getDefaultInstance().getName(); onChanged(); return this; }
/*       */       public Builder setNameBytes(ByteString value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x1; this.name_ = value; onChanged(); return this; }
/* 19700 */       private void ensureMethodIsMutable() { if ((this.bitField0_ & 0x2) == 0) {
/* 19701 */           this.method_ = new ArrayList<>(this.method_);
/* 19702 */           this.bitField0_ |= 0x2;
/*       */         }  }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public List<MethodDescriptorProto> getMethodList() {
/* 19713 */         if (this.methodBuilder_ == null) {
/* 19714 */           return Collections.unmodifiableList(this.method_);
/*       */         }
/* 19716 */         return this.methodBuilder_.getMessageList();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getMethodCount() {
/* 19723 */         if (this.methodBuilder_ == null) {
/* 19724 */           return this.method_.size();
/*       */         }
/* 19726 */         return this.methodBuilder_.getCount();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public MethodDescriptorProto getMethod(int index) {
/* 19733 */         if (this.methodBuilder_ == null) {
/* 19734 */           return this.method_.get(index);
/*       */         }
/* 19736 */         return this.methodBuilder_.getMessage(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setMethod(int index, MethodDescriptorProto value) {
/* 19744 */         if (this.methodBuilder_ == null) {
/* 19745 */           if (value == null) {
/* 19746 */             throw new NullPointerException();
/*       */           }
/* 19748 */           ensureMethodIsMutable();
/* 19749 */           this.method_.set(index, value);
/* 19750 */           onChanged();
/*       */         } else {
/* 19752 */           this.methodBuilder_.setMessage(index, value);
/*       */         } 
/* 19754 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setMethod(int index, MethodDescriptorProto.Builder builderForValue) {
/* 19761 */         if (this.methodBuilder_ == null) {
/* 19762 */           ensureMethodIsMutable();
/* 19763 */           this.method_.set(index, builderForValue.build());
/* 19764 */           onChanged();
/*       */         } else {
/* 19766 */           this.methodBuilder_.setMessage(index, builderForValue.build());
/*       */         } 
/* 19768 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addMethod(MethodDescriptorProto value) {
/* 19774 */         if (this.methodBuilder_ == null) {
/* 19775 */           if (value == null) {
/* 19776 */             throw new NullPointerException();
/*       */           }
/* 19778 */           ensureMethodIsMutable();
/* 19779 */           this.method_.add(value);
/* 19780 */           onChanged();
/*       */         } else {
/* 19782 */           this.methodBuilder_.addMessage(value);
/*       */         } 
/* 19784 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addMethod(int index, MethodDescriptorProto value) {
/* 19791 */         if (this.methodBuilder_ == null) {
/* 19792 */           if (value == null) {
/* 19793 */             throw new NullPointerException();
/*       */           }
/* 19795 */           ensureMethodIsMutable();
/* 19796 */           this.method_.add(index, value);
/* 19797 */           onChanged();
/*       */         } else {
/* 19799 */           this.methodBuilder_.addMessage(index, value);
/*       */         } 
/* 19801 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addMethod(MethodDescriptorProto.Builder builderForValue) {
/* 19808 */         if (this.methodBuilder_ == null) {
/* 19809 */           ensureMethodIsMutable();
/* 19810 */           this.method_.add(builderForValue.build());
/* 19811 */           onChanged();
/*       */         } else {
/* 19813 */           this.methodBuilder_.addMessage(builderForValue.build());
/*       */         } 
/* 19815 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addMethod(int index, MethodDescriptorProto.Builder builderForValue) {
/* 19822 */         if (this.methodBuilder_ == null) {
/* 19823 */           ensureMethodIsMutable();
/* 19824 */           this.method_.add(index, builderForValue.build());
/* 19825 */           onChanged();
/*       */         } else {
/* 19827 */           this.methodBuilder_.addMessage(index, builderForValue.build());
/*       */         } 
/* 19829 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addAllMethod(Iterable<? extends MethodDescriptorProto> values) {
/* 19836 */         if (this.methodBuilder_ == null) {
/* 19837 */           ensureMethodIsMutable();
/* 19838 */           AbstractMessageLite.Builder.addAll(values, this.method_);
/*       */           
/* 19840 */           onChanged();
/*       */         } else {
/* 19842 */           this.methodBuilder_.addAllMessages(values);
/*       */         } 
/* 19844 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearMethod() {
/* 19850 */         if (this.methodBuilder_ == null) {
/* 19851 */           this.method_ = Collections.emptyList();
/* 19852 */           this.bitField0_ &= 0xFFFFFFFD;
/* 19853 */           onChanged();
/*       */         } else {
/* 19855 */           this.methodBuilder_.clear();
/*       */         } 
/* 19857 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder removeMethod(int index) {
/* 19863 */         if (this.methodBuilder_ == null) {
/* 19864 */           ensureMethodIsMutable();
/* 19865 */           this.method_.remove(index);
/* 19866 */           onChanged();
/*       */         } else {
/* 19868 */           this.methodBuilder_.remove(index);
/*       */         } 
/* 19870 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public MethodDescriptorProto.Builder getMethodBuilder(int index) {
/* 19877 */         return getMethodFieldBuilder().getBuilder(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public MethodDescriptorProtoOrBuilder getMethodOrBuilder(int index) {
/* 19884 */         if (this.methodBuilder_ == null)
/* 19885 */           return this.method_.get(index); 
/* 19886 */         return this.methodBuilder_.getMessageOrBuilder(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public List<? extends MethodDescriptorProtoOrBuilder> getMethodOrBuilderList() {
/* 19894 */         if (this.methodBuilder_ != null) {
/* 19895 */           return this.methodBuilder_.getMessageOrBuilderList();
/*       */         }
/* 19897 */         return Collections.unmodifiableList((List)this.method_);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public MethodDescriptorProto.Builder addMethodBuilder() {
/* 19904 */         return getMethodFieldBuilder().addBuilder(
/* 19905 */             MethodDescriptorProto.getDefaultInstance());
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public MethodDescriptorProto.Builder addMethodBuilder(int index) {
/* 19912 */         return getMethodFieldBuilder().addBuilder(index, 
/* 19913 */             MethodDescriptorProto.getDefaultInstance());
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public List<MethodDescriptorProto.Builder> getMethodBuilderList() {
/* 19920 */         return getMethodFieldBuilder().getBuilderList();
/*       */       }
/*       */ 
/*       */       
/*       */       private RepeatedFieldBuilderV3<MethodDescriptorProto, MethodDescriptorProto.Builder, MethodDescriptorProtoOrBuilder> getMethodFieldBuilder() {
/* 19925 */         if (this.methodBuilder_ == null) {
/* 19926 */           this
/*       */ 
/*       */ 
/*       */ 
/*       */             
/* 19931 */             .methodBuilder_ = new RepeatedFieldBuilderV3<>(this.method_, ((this.bitField0_ & 0x2) != 0), getParentForChildren(), isClean());
/* 19932 */           this.method_ = null;
/*       */         } 
/* 19934 */         return this.methodBuilder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasOptions() {
/* 19945 */         return ((this.bitField0_ & 0x4) != 0);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public ServiceOptions getOptions() {
/* 19952 */         if (this.optionsBuilder_ == null) {
/* 19953 */           return (this.options_ == null) ? ServiceOptions.getDefaultInstance() : this.options_;
/*       */         }
/* 19955 */         return this.optionsBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setOptions(ServiceOptions value) {
/* 19962 */         if (this.optionsBuilder_ == null) {
/* 19963 */           if (value == null) {
/* 19964 */             throw new NullPointerException();
/*       */           }
/* 19966 */           this.options_ = value;
/* 19967 */           onChanged();
/*       */         } else {
/* 19969 */           this.optionsBuilder_.setMessage(value);
/*       */         } 
/* 19971 */         this.bitField0_ |= 0x4;
/* 19972 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setOptions(ServiceOptions.Builder builderForValue) {
/* 19979 */         if (this.optionsBuilder_ == null) {
/* 19980 */           this.options_ = builderForValue.build();
/* 19981 */           onChanged();
/*       */         } else {
/* 19983 */           this.optionsBuilder_.setMessage(builderForValue.build());
/*       */         } 
/* 19985 */         this.bitField0_ |= 0x4;
/* 19986 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeOptions(ServiceOptions value) {
/* 19992 */         if (this.optionsBuilder_ == null) {
/* 19993 */           if ((this.bitField0_ & 0x4) != 0 && this.options_ != null && this.options_ != 
/*       */             
/* 19995 */             ServiceOptions.getDefaultInstance()) {
/* 19996 */             this
/* 19997 */               .options_ = ServiceOptions.newBuilder(this.options_).mergeFrom(value).buildPartial();
/*       */           } else {
/* 19999 */             this.options_ = value;
/*       */           } 
/* 20001 */           onChanged();
/*       */         } else {
/* 20003 */           this.optionsBuilder_.mergeFrom(value);
/*       */         } 
/* 20005 */         this.bitField0_ |= 0x4;
/* 20006 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearOptions() {
/* 20012 */         if (this.optionsBuilder_ == null) {
/* 20013 */           this.options_ = null;
/* 20014 */           onChanged();
/*       */         } else {
/* 20016 */           this.optionsBuilder_.clear();
/*       */         } 
/* 20018 */         this.bitField0_ &= 0xFFFFFFFB;
/* 20019 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public ServiceOptions.Builder getOptionsBuilder() {
/* 20025 */         this.bitField0_ |= 0x4;
/* 20026 */         onChanged();
/* 20027 */         return getOptionsFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public ServiceOptionsOrBuilder getOptionsOrBuilder() {
/* 20033 */         if (this.optionsBuilder_ != null) {
/* 20034 */           return this.optionsBuilder_.getMessageOrBuilder();
/*       */         }
/* 20036 */         return (this.options_ == null) ? 
/* 20037 */           ServiceOptions.getDefaultInstance() : this.options_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<ServiceOptions, ServiceOptions.Builder, ServiceOptionsOrBuilder> getOptionsFieldBuilder() {
/* 20046 */         if (this.optionsBuilder_ == null) {
/* 20047 */           this
/*       */ 
/*       */ 
/*       */             
/* 20051 */             .optionsBuilder_ = new SingleFieldBuilderV3<>(getOptions(), getParentForChildren(), isClean());
/* 20052 */           this.options_ = null;
/*       */         } 
/* 20054 */         return this.optionsBuilder_;
/*       */       }
/*       */ 
/*       */       
/*       */       public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
/* 20059 */         return super.setUnknownFields(unknownFields);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
/* 20065 */         return super.mergeUnknownFields(unknownFields);
/*       */       }
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 20075 */     private static final ServiceDescriptorProto DEFAULT_INSTANCE = new ServiceDescriptorProto();
/*       */ 
/*       */     
/*       */     public static ServiceDescriptorProto getDefaultInstance() {
/* 20079 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */     
/*       */     @Deprecated
/* 20083 */     public static final Parser<ServiceDescriptorProto> PARSER = new AbstractParser<ServiceDescriptorProto>()
/*       */       {
/*       */ 
/*       */         
/*       */         public ServiceDescriptorProto parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException
/*       */         {
/* 20089 */           return new ServiceDescriptorProto(input, extensionRegistry);
/*       */         }
/*       */       };
/*       */     
/*       */     public static Parser<ServiceDescriptorProto> parser() {
/* 20094 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public Parser<ServiceDescriptorProto> getParserForType() {
/* 20099 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public ServiceDescriptorProto getDefaultInstanceForType() {
/* 20104 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public static interface MethodDescriptorProtoOrBuilder
/*       */     extends MessageOrBuilder
/*       */   {
/*       */     boolean hasName();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     String getName();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getNameBytes();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasInputType();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     String getInputType();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getInputTypeBytes();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasOutputType();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     String getOutputType();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getOutputTypeBytes();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasOptions();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     MethodOptions getOptions();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     MethodOptionsOrBuilder getOptionsOrBuilder();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasClientStreaming();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean getClientStreaming();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasServerStreaming();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean getServerStreaming();
/*       */   }
/*       */ 
/*       */ 
/*       */   
/*       */   public static final class MethodDescriptorProto
/*       */     extends GeneratedMessageV3
/*       */     implements MethodDescriptorProtoOrBuilder
/*       */   {
/*       */     private static final long serialVersionUID = 0L;
/*       */ 
/*       */     
/*       */     private int bitField0_;
/*       */ 
/*       */     
/*       */     public static final int NAME_FIELD_NUMBER = 1;
/*       */ 
/*       */     
/*       */     private volatile Object name_;
/*       */ 
/*       */     
/*       */     public static final int INPUT_TYPE_FIELD_NUMBER = 2;
/*       */ 
/*       */     
/*       */     private volatile Object inputType_;
/*       */ 
/*       */     
/*       */     public static final int OUTPUT_TYPE_FIELD_NUMBER = 3;
/*       */ 
/*       */     
/*       */     private volatile Object outputType_;
/*       */ 
/*       */     
/*       */     public static final int OPTIONS_FIELD_NUMBER = 4;
/*       */ 
/*       */     
/*       */     private MethodOptions options_;
/*       */ 
/*       */     
/*       */     public static final int CLIENT_STREAMING_FIELD_NUMBER = 5;
/*       */ 
/*       */     
/*       */     private boolean clientStreaming_;
/*       */ 
/*       */     
/*       */     public static final int SERVER_STREAMING_FIELD_NUMBER = 6;
/*       */ 
/*       */     
/*       */     private boolean serverStreaming_;
/*       */ 
/*       */     
/*       */     private byte memoizedIsInitialized;
/*       */ 
/*       */ 
/*       */     
/*       */     private MethodDescriptorProto(GeneratedMessageV3.Builder<?> builder)
/*       */     {
/* 20246 */       super(builder);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/* 20598 */       this.memoizedIsInitialized = -1; } private MethodDescriptorProto() { this.memoizedIsInitialized = -1; this.name_ = ""; this.inputType_ = ""; this.outputType_ = ""; } protected Object newInstance(UnusedPrivateParameter unused) { return new MethodDescriptorProto(); } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private MethodDescriptorProto(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this(); if (extensionRegistry == null) throw new NullPointerException();  int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { ByteString bs; MethodOptions.Builder subBuilder; int tag = input.readTag(); switch (tag) { case 0: done = true; continue;case 10: bs = input.readBytes(); this.bitField0_ |= 0x1; this.name_ = bs; continue;case 18: bs = input.readBytes(); this.bitField0_ |= 0x2; this.inputType_ = bs; continue;case 26: bs = input.readBytes(); this.bitField0_ |= 0x4; this.outputType_ = bs; continue;case 34: subBuilder = null; if ((this.bitField0_ & 0x8) != 0) subBuilder = this.options_.toBuilder();  this.options_ = input.<MethodOptions>readMessage(MethodOptions.PARSER, extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.options_); this.options_ = subBuilder.buildPartial(); }  this.bitField0_ |= 0x8; continue;case 40: this.bitField0_ |= 0x10; this.clientStreaming_ = input.readBool(); continue;case 48: this.bitField0_ |= 0x20; this.serverStreaming_ = input.readBool(); continue; }  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this); } finally { this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return DescriptorProtos.internal_static_google_protobuf_MethodDescriptorProto_descriptor; } protected FieldAccessorTable internalGetFieldAccessorTable() { return DescriptorProtos.internal_static_google_protobuf_MethodDescriptorProto_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)MethodDescriptorProto.class, (Class)Builder.class); } public boolean hasName() { return ((this.bitField0_ & 0x1) != 0); } public String getName() { Object ref = this.name_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.name_ = s;  return s; } public ByteString getNameBytes() { Object ref = this.name_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.name_ = b; return b; }  return (ByteString)ref; } public boolean hasInputType() { return ((this.bitField0_ & 0x2) != 0); } public String getInputType() { Object ref = this.inputType_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.inputType_ = s;  return s; } public ByteString getInputTypeBytes() { Object ref = this.inputType_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.inputType_ = b; return b; }  return (ByteString)ref; } public boolean hasOutputType() { return ((this.bitField0_ & 0x4) != 0); } public String getOutputType() { Object ref = this.outputType_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.outputType_ = s;  return s; } public ByteString getOutputTypeBytes() { Object ref = this.outputType_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.outputType_ = b; return b; }  return (ByteString)ref; } public boolean hasOptions() { return ((this.bitField0_ & 0x8) != 0); } public MethodOptions getOptions() { return (this.options_ == null) ? MethodOptions.getDefaultInstance() : this.options_; } public MethodOptionsOrBuilder getOptionsOrBuilder() { return (this.options_ == null) ? MethodOptions.getDefaultInstance() : this.options_; } public boolean hasClientStreaming() { return ((this.bitField0_ & 0x10) != 0); } public boolean getClientStreaming() { return this.clientStreaming_; }
/*       */     public boolean hasServerStreaming() { return ((this.bitField0_ & 0x20) != 0); }
/*       */     public boolean getServerStreaming() { return this.serverStreaming_; }
/* 20601 */     public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized;
/* 20602 */       if (isInitialized == 1) return true; 
/* 20603 */       if (isInitialized == 0) return false;
/*       */       
/* 20605 */       if (hasOptions() && 
/* 20606 */         !getOptions().isInitialized()) {
/* 20607 */         this.memoizedIsInitialized = 0;
/* 20608 */         return false;
/*       */       } 
/*       */       
/* 20611 */       this.memoizedIsInitialized = 1;
/* 20612 */       return true; }
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/* 20618 */       if ((this.bitField0_ & 0x1) != 0) {
/* 20619 */         GeneratedMessageV3.writeString(output, 1, this.name_);
/*       */       }
/* 20621 */       if ((this.bitField0_ & 0x2) != 0) {
/* 20622 */         GeneratedMessageV3.writeString(output, 2, this.inputType_);
/*       */       }
/* 20624 */       if ((this.bitField0_ & 0x4) != 0) {
/* 20625 */         GeneratedMessageV3.writeString(output, 3, this.outputType_);
/*       */       }
/* 20627 */       if ((this.bitField0_ & 0x8) != 0) {
/* 20628 */         output.writeMessage(4, getOptions());
/*       */       }
/* 20630 */       if ((this.bitField0_ & 0x10) != 0) {
/* 20631 */         output.writeBool(5, this.clientStreaming_);
/*       */       }
/* 20633 */       if ((this.bitField0_ & 0x20) != 0) {
/* 20634 */         output.writeBool(6, this.serverStreaming_);
/*       */       }
/* 20636 */       this.unknownFields.writeTo(output);
/*       */     }
/*       */ 
/*       */     
/*       */     public int getSerializedSize() {
/* 20641 */       int size = this.memoizedSize;
/* 20642 */       if (size != -1) return size;
/*       */       
/* 20644 */       size = 0;
/* 20645 */       if ((this.bitField0_ & 0x1) != 0) {
/* 20646 */         size += GeneratedMessageV3.computeStringSize(1, this.name_);
/*       */       }
/* 20648 */       if ((this.bitField0_ & 0x2) != 0) {
/* 20649 */         size += GeneratedMessageV3.computeStringSize(2, this.inputType_);
/*       */       }
/* 20651 */       if ((this.bitField0_ & 0x4) != 0) {
/* 20652 */         size += GeneratedMessageV3.computeStringSize(3, this.outputType_);
/*       */       }
/* 20654 */       if ((this.bitField0_ & 0x8) != 0) {
/* 20655 */         size += 
/* 20656 */           CodedOutputStream.computeMessageSize(4, getOptions());
/*       */       }
/* 20658 */       if ((this.bitField0_ & 0x10) != 0) {
/* 20659 */         size += 
/* 20660 */           CodedOutputStream.computeBoolSize(5, this.clientStreaming_);
/*       */       }
/* 20662 */       if ((this.bitField0_ & 0x20) != 0) {
/* 20663 */         size += 
/* 20664 */           CodedOutputStream.computeBoolSize(6, this.serverStreaming_);
/*       */       }
/* 20666 */       size += this.unknownFields.getSerializedSize();
/* 20667 */       this.memoizedSize = size;
/* 20668 */       return size;
/*       */     }
/*       */ 
/*       */     
/*       */     public boolean equals(Object obj) {
/* 20673 */       if (obj == this) {
/* 20674 */         return true;
/*       */       }
/* 20676 */       if (!(obj instanceof MethodDescriptorProto)) {
/* 20677 */         return super.equals(obj);
/*       */       }
/* 20679 */       MethodDescriptorProto other = (MethodDescriptorProto)obj;
/*       */       
/* 20681 */       if (hasName() != other.hasName()) return false; 
/* 20682 */       if (hasName() && 
/*       */         
/* 20684 */         !getName().equals(other.getName())) return false;
/*       */       
/* 20686 */       if (hasInputType() != other.hasInputType()) return false; 
/* 20687 */       if (hasInputType() && 
/*       */         
/* 20689 */         !getInputType().equals(other.getInputType())) return false;
/*       */       
/* 20691 */       if (hasOutputType() != other.hasOutputType()) return false; 
/* 20692 */       if (hasOutputType() && 
/*       */         
/* 20694 */         !getOutputType().equals(other.getOutputType())) return false;
/*       */       
/* 20696 */       if (hasOptions() != other.hasOptions()) return false; 
/* 20697 */       if (hasOptions() && 
/*       */         
/* 20699 */         !getOptions().equals(other.getOptions())) return false;
/*       */       
/* 20701 */       if (hasClientStreaming() != other.hasClientStreaming()) return false; 
/* 20702 */       if (hasClientStreaming() && 
/* 20703 */         getClientStreaming() != other
/* 20704 */         .getClientStreaming()) return false;
/*       */       
/* 20706 */       if (hasServerStreaming() != other.hasServerStreaming()) return false; 
/* 20707 */       if (hasServerStreaming() && 
/* 20708 */         getServerStreaming() != other
/* 20709 */         .getServerStreaming()) return false;
/*       */       
/* 20711 */       if (!this.unknownFields.equals(other.unknownFields)) return false; 
/* 20712 */       return true;
/*       */     }
/*       */ 
/*       */     
/*       */     public int hashCode() {
/* 20717 */       if (this.memoizedHashCode != 0) {
/* 20718 */         return this.memoizedHashCode;
/*       */       }
/* 20720 */       int hash = 41;
/* 20721 */       hash = 19 * hash + getDescriptor().hashCode();
/* 20722 */       if (hasName()) {
/* 20723 */         hash = 37 * hash + 1;
/* 20724 */         hash = 53 * hash + getName().hashCode();
/*       */       } 
/* 20726 */       if (hasInputType()) {
/* 20727 */         hash = 37 * hash + 2;
/* 20728 */         hash = 53 * hash + getInputType().hashCode();
/*       */       } 
/* 20730 */       if (hasOutputType()) {
/* 20731 */         hash = 37 * hash + 3;
/* 20732 */         hash = 53 * hash + getOutputType().hashCode();
/*       */       } 
/* 20734 */       if (hasOptions()) {
/* 20735 */         hash = 37 * hash + 4;
/* 20736 */         hash = 53 * hash + getOptions().hashCode();
/*       */       } 
/* 20738 */       if (hasClientStreaming()) {
/* 20739 */         hash = 37 * hash + 5;
/* 20740 */         hash = 53 * hash + Internal.hashBoolean(
/* 20741 */             getClientStreaming());
/*       */       } 
/* 20743 */       if (hasServerStreaming()) {
/* 20744 */         hash = 37 * hash + 6;
/* 20745 */         hash = 53 * hash + Internal.hashBoolean(
/* 20746 */             getServerStreaming());
/*       */       } 
/* 20748 */       hash = 29 * hash + this.unknownFields.hashCode();
/* 20749 */       this.memoizedHashCode = hash;
/* 20750 */       return hash;
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static MethodDescriptorProto parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
/* 20756 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static MethodDescriptorProto parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 20762 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static MethodDescriptorProto parseFrom(ByteString data) throws InvalidProtocolBufferException {
/* 20767 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static MethodDescriptorProto parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 20773 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static MethodDescriptorProto parseFrom(byte[] data) throws InvalidProtocolBufferException {
/* 20777 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static MethodDescriptorProto parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 20783 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static MethodDescriptorProto parseFrom(InputStream input) throws IOException {
/* 20787 */       return 
/* 20788 */         GeneratedMessageV3.<MethodDescriptorProto>parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static MethodDescriptorProto parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 20794 */       return 
/* 20795 */         GeneratedMessageV3.<MethodDescriptorProto>parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static MethodDescriptorProto parseDelimitedFrom(InputStream input) throws IOException {
/* 20799 */       return 
/* 20800 */         GeneratedMessageV3.<MethodDescriptorProto>parseDelimitedWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static MethodDescriptorProto parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 20806 */       return 
/* 20807 */         GeneratedMessageV3.<MethodDescriptorProto>parseDelimitedWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static MethodDescriptorProto parseFrom(CodedInputStream input) throws IOException {
/* 20812 */       return 
/* 20813 */         GeneratedMessageV3.<MethodDescriptorProto>parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static MethodDescriptorProto parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 20819 */       return 
/* 20820 */         GeneratedMessageV3.<MethodDescriptorProto>parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public Builder newBuilderForType() {
/* 20824 */       return newBuilder();
/*       */     } public static Builder newBuilder() {
/* 20826 */       return DEFAULT_INSTANCE.toBuilder();
/*       */     }
/*       */     public static Builder newBuilder(MethodDescriptorProto prototype) {
/* 20829 */       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
/*       */     }
/*       */     
/*       */     public Builder toBuilder() {
/* 20833 */       return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder())
/* 20834 */         .mergeFrom(this);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     protected Builder newBuilderForType(BuilderParent parent) {
/* 20840 */       Builder builder = new Builder(parent);
/* 20841 */       return builder;
/*       */     }
/*       */     
/*       */     public static final class Builder
/*       */       extends GeneratedMessageV3.Builder<Builder> implements MethodDescriptorProtoOrBuilder {
/*       */       private int bitField0_;
/*       */       private Object name_;
/*       */       private Object inputType_;
/*       */       private Object outputType_;
/*       */       private MethodOptions options_;
/*       */       private SingleFieldBuilderV3<MethodOptions, MethodOptions.Builder, MethodOptionsOrBuilder> optionsBuilder_;
/*       */       private boolean clientStreaming_;
/*       */       private boolean serverStreaming_;
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/* 20856 */         return DescriptorProtos.internal_static_google_protobuf_MethodDescriptorProto_descriptor;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       protected FieldAccessorTable internalGetFieldAccessorTable() {
/* 20862 */         return DescriptorProtos.internal_static_google_protobuf_MethodDescriptorProto_fieldAccessorTable
/* 20863 */           .ensureFieldAccessorsInitialized((Class) MethodDescriptorProto.class, (Class)Builder.class);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private Builder()
/*       */       {
/* 21066 */         this.name_ = "";
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 21150 */         this.inputType_ = "";
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 21264 */         this.outputType_ = ""; maybeForceBuilderInitialization(); } private Builder(BuilderParent parent) { super(parent); this.name_ = ""; this.inputType_ = ""; this.outputType_ = ""; maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (GeneratedMessageV3.alwaysUseFieldBuilders) getOptionsFieldBuilder();  } public Builder clear() { super.clear(); this.name_ = ""; this.bitField0_ &= 0xFFFFFFFE; this.inputType_ = ""; this.bitField0_ &= 0xFFFFFFFD; this.outputType_ = ""; this.bitField0_ &= 0xFFFFFFFB; if (this.optionsBuilder_ == null) { this.options_ = null; } else { this.optionsBuilder_.clear(); }  this.bitField0_ &= 0xFFFFFFF7; this.clientStreaming_ = false; this.bitField0_ &= 0xFFFFFFEF; this.serverStreaming_ = false; this.bitField0_ &= 0xFFFFFFDF; return this; } public Descriptors.Descriptor getDescriptorForType() { return DescriptorProtos.internal_static_google_protobuf_MethodDescriptorProto_descriptor; } public MethodDescriptorProto getDefaultInstanceForType() { return MethodDescriptorProto.getDefaultInstance(); } public MethodDescriptorProto build() { MethodDescriptorProto result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public MethodDescriptorProto buildPartial() { MethodDescriptorProto result = new MethodDescriptorProto(this); int from_bitField0_ = this.bitField0_; int to_bitField0_ = 0; if ((from_bitField0_ & 0x1) != 0) to_bitField0_ |= 0x1;  result.name_ = this.name_; if ((from_bitField0_ & 0x2) != 0) to_bitField0_ |= 0x2;  result.inputType_ = this.inputType_; if ((from_bitField0_ & 0x4) != 0) to_bitField0_ |= 0x4;  result.outputType_ = this.outputType_; if ((from_bitField0_ & 0x8) != 0) { if (this.optionsBuilder_ == null) { result.options_ = this.options_; } else { result.options_ = this.optionsBuilder_.build(); }  to_bitField0_ |= 0x8; }  if ((from_bitField0_ & 0x10) != 0) { result.clientStreaming_ = this.clientStreaming_; to_bitField0_ |= 0x10; }  if ((from_bitField0_ & 0x20) != 0) { result.serverStreaming_ = this.serverStreaming_; to_bitField0_ |= 0x20; }  result.bitField0_ = to_bitField0_; onBuilt(); return result; } public Builder clone() { return super.clone(); } public Builder setField(Descriptors.FieldDescriptor field, Object value) { return super.setField(field, value); } public Builder clearField(Descriptors.FieldDescriptor field) { return super.clearField(field); } public Builder clearOneof(Descriptors.OneofDescriptor oneof) { return super.clearOneof(oneof); } public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) { return super.setRepeatedField(field, index, value); } public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) { return super.addRepeatedField(field, value); } public Builder mergeFrom(Message other) { if (other instanceof MethodDescriptorProto) return mergeFrom((MethodDescriptorProto)other);  super.mergeFrom(other); return this; } public Builder mergeFrom(MethodDescriptorProto other) { if (other == MethodDescriptorProto.getDefaultInstance()) return this;  if (other.hasName()) { this.bitField0_ |= 0x1; this.name_ = other.name_; onChanged(); }  if (other.hasInputType()) { this.bitField0_ |= 0x2; this.inputType_ = other.inputType_; onChanged(); }  if (other.hasOutputType()) { this.bitField0_ |= 0x4; this.outputType_ = other.outputType_; onChanged(); }  if (other.hasOptions()) mergeOptions(other.getOptions());  if (other.hasClientStreaming()) setClientStreaming(other.getClientStreaming());  if (other.hasServerStreaming()) setServerStreaming(other.getServerStreaming());  mergeUnknownFields(other.unknownFields); onChanged(); return this; } public final boolean isInitialized() { if (hasOptions() && !getOptions().isInitialized()) return false;  return true; } public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { MethodDescriptorProto parsedMessage = null; try { parsedMessage = MethodDescriptorProto.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (MethodDescriptorProto)e.getUnfinishedMessage(); throw e.unwrapIOException(); } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; } public boolean hasName() { return ((this.bitField0_ & 0x1) != 0); } public String getName() { Object ref = this.name_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.name_ = s;  return s; }  return (String)ref; } public ByteString getNameBytes() { Object ref = this.name_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.name_ = b; return b; }  return (ByteString)ref; } public Builder setName(String value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x1; this.name_ = value; onChanged(); return this; } public Builder clearName() { this.bitField0_ &= 0xFFFFFFFE; this.name_ = MethodDescriptorProto.getDefaultInstance().getName(); onChanged(); return this; } public Builder setNameBytes(ByteString value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x1; this.name_ = value; onChanged(); return this; } public boolean hasInputType() { return ((this.bitField0_ & 0x2) != 0); }
/*       */       public String getInputType() { Object ref = this.inputType_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.inputType_ = s;  return s; }  return (String)ref; }
/*       */       public ByteString getInputTypeBytes() { Object ref = this.inputType_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.inputType_ = b; return b; }  return (ByteString)ref; }
/*       */       public Builder setInputType(String value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x2; this.inputType_ = value; onChanged(); return this; }
/*       */       public Builder clearInputType() { this.bitField0_ &= 0xFFFFFFFD; this.inputType_ = MethodDescriptorProto.getDefaultInstance().getInputType(); onChanged(); return this; }
/*       */       public Builder setInputTypeBytes(ByteString value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x2; this.inputType_ = value; onChanged(); return this; }
/* 21270 */       public boolean hasOutputType() { return ((this.bitField0_ & 0x4) != 0); }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public String getOutputType() {
/* 21277 */         Object ref = this.outputType_;
/* 21278 */         if (!(ref instanceof String)) {
/* 21279 */           ByteString bs = (ByteString)ref;
/*       */           
/* 21281 */           String s = bs.toStringUtf8();
/* 21282 */           if (bs.isValidUtf8()) {
/* 21283 */             this.outputType_ = s;
/*       */           }
/* 21285 */           return s;
/*       */         } 
/* 21287 */         return (String)ref;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public ByteString getOutputTypeBytes() {
/* 21296 */         Object ref = this.outputType_;
/* 21297 */         if (ref instanceof String) {
/*       */           
/* 21299 */           ByteString b = ByteString.copyFromUtf8((String)ref);
/*       */           
/* 21301 */           this.outputType_ = b;
/* 21302 */           return b;
/*       */         } 
/* 21304 */         return (ByteString)ref;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setOutputType(String value) {
/* 21314 */         if (value == null) {
/* 21315 */           throw new NullPointerException();
/*       */         }
/* 21317 */         this.bitField0_ |= 0x4;
/* 21318 */         this.outputType_ = value;
/* 21319 */         onChanged();
/* 21320 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearOutputType() {
/* 21327 */         this.bitField0_ &= 0xFFFFFFFB;
/* 21328 */         this.outputType_ = MethodDescriptorProto.getDefaultInstance().getOutputType();
/* 21329 */         onChanged();
/* 21330 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setOutputTypeBytes(ByteString value) {
/* 21339 */         if (value == null) {
/* 21340 */           throw new NullPointerException();
/*       */         }
/* 21342 */         this.bitField0_ |= 0x4;
/* 21343 */         this.outputType_ = value;
/* 21344 */         onChanged();
/* 21345 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasOptions() {
/* 21356 */         return ((this.bitField0_ & 0x8) != 0);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public MethodOptions getOptions() {
/* 21363 */         if (this.optionsBuilder_ == null) {
/* 21364 */           return (this.options_ == null) ? MethodOptions.getDefaultInstance() : this.options_;
/*       */         }
/* 21366 */         return this.optionsBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setOptions(MethodOptions value) {
/* 21373 */         if (this.optionsBuilder_ == null) {
/* 21374 */           if (value == null) {
/* 21375 */             throw new NullPointerException();
/*       */           }
/* 21377 */           this.options_ = value;
/* 21378 */           onChanged();
/*       */         } else {
/* 21380 */           this.optionsBuilder_.setMessage(value);
/*       */         } 
/* 21382 */         this.bitField0_ |= 0x8;
/* 21383 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setOptions(MethodOptions.Builder builderForValue) {
/* 21390 */         if (this.optionsBuilder_ == null) {
/* 21391 */           this.options_ = builderForValue.build();
/* 21392 */           onChanged();
/*       */         } else {
/* 21394 */           this.optionsBuilder_.setMessage(builderForValue.build());
/*       */         } 
/* 21396 */         this.bitField0_ |= 0x8;
/* 21397 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeOptions(MethodOptions value) {
/* 21403 */         if (this.optionsBuilder_ == null) {
/* 21404 */           if ((this.bitField0_ & 0x8) != 0 && this.options_ != null && this.options_ != 
/*       */             
/* 21406 */             MethodOptions.getDefaultInstance()) {
/* 21407 */             this
/* 21408 */               .options_ = MethodOptions.newBuilder(this.options_).mergeFrom(value).buildPartial();
/*       */           } else {
/* 21410 */             this.options_ = value;
/*       */           } 
/* 21412 */           onChanged();
/*       */         } else {
/* 21414 */           this.optionsBuilder_.mergeFrom(value);
/*       */         } 
/* 21416 */         this.bitField0_ |= 0x8;
/* 21417 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearOptions() {
/* 21423 */         if (this.optionsBuilder_ == null) {
/* 21424 */           this.options_ = null;
/* 21425 */           onChanged();
/*       */         } else {
/* 21427 */           this.optionsBuilder_.clear();
/*       */         } 
/* 21429 */         this.bitField0_ &= 0xFFFFFFF7;
/* 21430 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public MethodOptions.Builder getOptionsBuilder() {
/* 21436 */         this.bitField0_ |= 0x8;
/* 21437 */         onChanged();
/* 21438 */         return getOptionsFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public MethodOptionsOrBuilder getOptionsOrBuilder() {
/* 21444 */         if (this.optionsBuilder_ != null) {
/* 21445 */           return this.optionsBuilder_.getMessageOrBuilder();
/*       */         }
/* 21447 */         return (this.options_ == null) ? 
/* 21448 */           MethodOptions.getDefaultInstance() : this.options_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<MethodOptions, MethodOptions.Builder, MethodOptionsOrBuilder> getOptionsFieldBuilder() {
/* 21457 */         if (this.optionsBuilder_ == null) {
/* 21458 */           this
/*       */ 
/*       */ 
/*       */             
/* 21462 */             .optionsBuilder_ = new SingleFieldBuilderV3<>(getOptions(), getParentForChildren(), isClean());
/* 21463 */           this.options_ = null;
/*       */         } 
/* 21465 */         return this.optionsBuilder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasClientStreaming() {
/* 21479 */         return ((this.bitField0_ & 0x10) != 0);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean getClientStreaming() {
/* 21491 */         return this.clientStreaming_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setClientStreaming(boolean value) {
/* 21503 */         this.bitField0_ |= 0x10;
/* 21504 */         this.clientStreaming_ = value;
/* 21505 */         onChanged();
/* 21506 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearClientStreaming() {
/* 21517 */         this.bitField0_ &= 0xFFFFFFEF;
/* 21518 */         this.clientStreaming_ = false;
/* 21519 */         onChanged();
/* 21520 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasServerStreaming() {
/* 21534 */         return ((this.bitField0_ & 0x20) != 0);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean getServerStreaming() {
/* 21546 */         return this.serverStreaming_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setServerStreaming(boolean value) {
/* 21558 */         this.bitField0_ |= 0x20;
/* 21559 */         this.serverStreaming_ = value;
/* 21560 */         onChanged();
/* 21561 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearServerStreaming() {
/* 21572 */         this.bitField0_ &= 0xFFFFFFDF;
/* 21573 */         this.serverStreaming_ = false;
/* 21574 */         onChanged();
/* 21575 */         return this;
/*       */       }
/*       */ 
/*       */       
/*       */       public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
/* 21580 */         return super.setUnknownFields(unknownFields);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
/* 21586 */         return super.mergeUnknownFields(unknownFields);
/*       */       }
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 21596 */     private static final MethodDescriptorProto DEFAULT_INSTANCE = new MethodDescriptorProto();
/*       */ 
/*       */     
/*       */     public static MethodDescriptorProto getDefaultInstance() {
/* 21600 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */     
/*       */     @Deprecated
/* 21604 */     public static final Parser<MethodDescriptorProto> PARSER = new AbstractParser<MethodDescriptorProto>()
/*       */       {
/*       */ 
/*       */         
/*       */         public MethodDescriptorProto parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException
/*       */         {
/* 21610 */           return new MethodDescriptorProto(input, extensionRegistry);
/*       */         }
/*       */       };
/*       */     
/*       */     public static Parser<MethodDescriptorProto> parser() {
/* 21615 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public Parser<MethodDescriptorProto> getParserForType() {
/* 21620 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public MethodDescriptorProto getDefaultInstanceForType() {
/* 21625 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public static interface FileOptionsOrBuilder
/*       */     extends GeneratedMessageV3.ExtendableMessageOrBuilder<FileOptions>
/*       */   {
/*       */     boolean hasJavaPackage();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     String getJavaPackage();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getJavaPackageBytes();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasJavaOuterClassname();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     String getJavaOuterClassname();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getJavaOuterClassnameBytes();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasJavaMultipleFiles();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean getJavaMultipleFiles();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     @Deprecated
/*       */     boolean hasJavaGenerateEqualsAndHash();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     @Deprecated
/*       */     boolean getJavaGenerateEqualsAndHash();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasJavaStringCheckUtf8();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean getJavaStringCheckUtf8();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasOptimizeFor();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     FileOptions.OptimizeMode getOptimizeFor();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasGoPackage();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     String getGoPackage();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getGoPackageBytes();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasCcGenericServices();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean getCcGenericServices();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasJavaGenericServices();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean getJavaGenericServices();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasPyGenericServices();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean getPyGenericServices();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasPhpGenericServices();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean getPhpGenericServices();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasDeprecated();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean getDeprecated();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasCcEnableArenas();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean getCcEnableArenas();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasObjcClassPrefix();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     String getObjcClassPrefix();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getObjcClassPrefixBytes();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasCsharpNamespace();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     String getCsharpNamespace();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getCsharpNamespaceBytes();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasSwiftPrefix();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     String getSwiftPrefix();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getSwiftPrefixBytes();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasPhpClassPrefix();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     String getPhpClassPrefix();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getPhpClassPrefixBytes();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasPhpNamespace();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     String getPhpNamespace();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getPhpNamespaceBytes();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasPhpMetadataNamespace();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     String getPhpMetadataNamespace();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getPhpMetadataNamespaceBytes();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasRubyPackage();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     String getRubyPackage();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getRubyPackageBytes();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     List<UninterpretedOption> getUninterpretedOptionList();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     UninterpretedOption getUninterpretedOption(int param1Int);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getUninterpretedOptionCount();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     List<? extends UninterpretedOptionOrBuilder> getUninterpretedOptionOrBuilderList();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     UninterpretedOptionOrBuilder getUninterpretedOptionOrBuilder(int param1Int);
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public static final class FileOptions
/*       */     extends GeneratedMessageV3.ExtendableMessage<FileOptions>
/*       */     implements FileOptionsOrBuilder
/*       */   {
/*       */     private static final long serialVersionUID = 0L;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private int bitField0_;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int JAVA_PACKAGE_FIELD_NUMBER = 1;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private volatile Object javaPackage_;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int JAVA_OUTER_CLASSNAME_FIELD_NUMBER = 8;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private volatile Object javaOuterClassname_;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int JAVA_MULTIPLE_FILES_FIELD_NUMBER = 10;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private boolean javaMultipleFiles_;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int JAVA_GENERATE_EQUALS_AND_HASH_FIELD_NUMBER = 20;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private boolean javaGenerateEqualsAndHash_;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int JAVA_STRING_CHECK_UTF8_FIELD_NUMBER = 27;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private boolean javaStringCheckUtf8_;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int OPTIMIZE_FOR_FIELD_NUMBER = 9;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private int optimizeFor_;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int GO_PACKAGE_FIELD_NUMBER = 11;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private volatile Object goPackage_;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int CC_GENERIC_SERVICES_FIELD_NUMBER = 16;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private boolean ccGenericServices_;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int JAVA_GENERIC_SERVICES_FIELD_NUMBER = 17;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private boolean javaGenericServices_;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int PY_GENERIC_SERVICES_FIELD_NUMBER = 18;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private boolean pyGenericServices_;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int PHP_GENERIC_SERVICES_FIELD_NUMBER = 42;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private boolean phpGenericServices_;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int DEPRECATED_FIELD_NUMBER = 23;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private boolean deprecated_;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int CC_ENABLE_ARENAS_FIELD_NUMBER = 31;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private boolean ccEnableArenas_;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int OBJC_CLASS_PREFIX_FIELD_NUMBER = 36;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private volatile Object objcClassPrefix_;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int CSHARP_NAMESPACE_FIELD_NUMBER = 37;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private volatile Object csharpNamespace_;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int SWIFT_PREFIX_FIELD_NUMBER = 39;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private volatile Object swiftPrefix_;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int PHP_CLASS_PREFIX_FIELD_NUMBER = 40;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private volatile Object phpClassPrefix_;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int PHP_NAMESPACE_FIELD_NUMBER = 41;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private volatile Object phpNamespace_;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int PHP_METADATA_NAMESPACE_FIELD_NUMBER = 44;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private volatile Object phpMetadataNamespace_;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int RUBY_PACKAGE_FIELD_NUMBER = 45;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private volatile Object rubyPackage_;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int UNINTERPRETED_OPTION_FIELD_NUMBER = 999;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private List<UninterpretedOption> uninterpretedOption_;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private byte memoizedIsInitialized;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private FileOptions(GeneratedMessageV3.ExtendableBuilder<FileOptions, ?> builder)
/*       */     {
/* 22253 */       super(builder);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/* 23610 */       this.memoizedIsInitialized = -1; } private FileOptions() { this.memoizedIsInitialized = -1; this.javaPackage_ = ""; this.javaOuterClassname_ = ""; this.optimizeFor_ = 1; this.goPackage_ = ""; this.ccEnableArenas_ = true; this.objcClassPrefix_ = ""; this.csharpNamespace_ = ""; this.swiftPrefix_ = ""; this.phpClassPrefix_ = ""; this.phpNamespace_ = ""; this.phpMetadataNamespace_ = ""; this.rubyPackage_ = ""; this.uninterpretedOption_ = Collections.emptyList(); } protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) { return new FileOptions(); } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private FileOptions(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this(); if (extensionRegistry == null) throw new NullPointerException();  int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { ByteString byteString1; int rawValue; ByteString bs; OptimizeMode value; int tag = input.readTag(); switch (tag) { case 0: done = true; continue;case 10: byteString1 = input.readBytes(); this.bitField0_ |= 0x1; this.javaPackage_ = byteString1; continue;case 66: byteString1 = input.readBytes(); this.bitField0_ |= 0x2; this.javaOuterClassname_ = byteString1; continue;case 72: rawValue = input.readEnum(); value = OptimizeMode.valueOf(rawValue); if (value == null) { unknownFields.mergeVarintField(9, rawValue); continue; }  this.bitField0_ |= 0x20; this.optimizeFor_ = rawValue; continue;case 80: this.bitField0_ |= 0x4; this.javaMultipleFiles_ = input.readBool(); continue;case 90: bs = input.readBytes(); this.bitField0_ |= 0x40; this.goPackage_ = bs; continue;case 128: this.bitField0_ |= 0x80; this.ccGenericServices_ = input.readBool(); continue;case 136: this.bitField0_ |= 0x100; this.javaGenericServices_ = input.readBool(); continue;case 144: this.bitField0_ |= 0x200; this.pyGenericServices_ = input.readBool(); continue;case 160: this.bitField0_ |= 0x8; this.javaGenerateEqualsAndHash_ = input.readBool(); continue;case 184: this.bitField0_ |= 0x800; this.deprecated_ = input.readBool(); continue;case 216: this.bitField0_ |= 0x10; this.javaStringCheckUtf8_ = input.readBool(); continue;case 248: this.bitField0_ |= 0x1000; this.ccEnableArenas_ = input.readBool(); continue;case 290: bs = input.readBytes(); this.bitField0_ |= 0x2000; this.objcClassPrefix_ = bs; continue;case 298: bs = input.readBytes(); this.bitField0_ |= 0x4000; this.csharpNamespace_ = bs; continue;case 314: bs = input.readBytes(); this.bitField0_ |= 0x8000; this.swiftPrefix_ = bs; continue;case 322: bs = input.readBytes(); this.bitField0_ |= 0x10000; this.phpClassPrefix_ = bs; continue;case 330: bs = input.readBytes(); this.bitField0_ |= 0x20000; this.phpNamespace_ = bs; continue;case 336: this.bitField0_ |= 0x400; this.phpGenericServices_ = input.readBool(); continue;case 354: bs = input.readBytes(); this.bitField0_ |= 0x40000; this.phpMetadataNamespace_ = bs; continue;case 362: bs = input.readBytes(); this.bitField0_ |= 0x80000; this.rubyPackage_ = bs; continue;case 7994: if ((mutable_bitField0_ & 0x100000) == 0) { this.uninterpretedOption_ = new ArrayList<>(); mutable_bitField0_ |= 0x100000; }  this.uninterpretedOption_.add(input.readMessage(UninterpretedOption.PARSER, extensionRegistry)); continue; }  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this); } finally { if ((mutable_bitField0_ & 0x100000) != 0) this.uninterpretedOption_ = Collections.unmodifiableList(this.uninterpretedOption_);  this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return DescriptorProtos.internal_static_google_protobuf_FileOptions_descriptor; } protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() { return DescriptorProtos.internal_static_google_protobuf_FileOptions_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)FileOptions.class, (Class)Builder.class); } public enum OptimizeMode implements ProtocolMessageEnum {
/*       */       SPEED(1), CODE_SIZE(2), LITE_RUNTIME(3); public static final int SPEED_VALUE = 1; public static final int CODE_SIZE_VALUE = 2; public static final int LITE_RUNTIME_VALUE = 3; private static final Internal.EnumLiteMap<OptimizeMode> internalValueMap = new Internal.EnumLiteMap<OptimizeMode>() { public OptimizeMode findValueByNumber(int number) { return OptimizeMode.forNumber(number); } }
/*       */       ; private static final OptimizeMode[] VALUES = values(); private final int value; public final int getNumber() { return this.value; } public static OptimizeMode forNumber(int value) { switch (value) { case 1: return SPEED;case 2: return CODE_SIZE;case 3: return LITE_RUNTIME; }  return null; } public static Internal.EnumLiteMap<OptimizeMode> internalGetValueMap() { return internalValueMap; } static {  } public final Descriptors.EnumValueDescriptor getValueDescriptor() { return getDescriptor().getValues().get(ordinal()); } public final Descriptors.EnumDescriptor getDescriptorForType() { return getDescriptor(); } public static final Descriptors.EnumDescriptor getDescriptor() { return FileOptions.getDescriptor().getEnumTypes().get(0); } OptimizeMode(int value) { this.value = value; } } public boolean hasJavaPackage() { return ((this.bitField0_ & 0x1) != 0); } public String getJavaPackage() { Object ref = this.javaPackage_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.javaPackage_ = s;  return s; } public ByteString getJavaPackageBytes() { Object ref = this.javaPackage_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.javaPackage_ = b; return b; }  return (ByteString)ref; } public boolean hasJavaOuterClassname() { return ((this.bitField0_ & 0x2) != 0); } public String getJavaOuterClassname() { Object ref = this.javaOuterClassname_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.javaOuterClassname_ = s;  return s; } public ByteString getJavaOuterClassnameBytes() { Object ref = this.javaOuterClassname_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.javaOuterClassname_ = b; return b; }  return (ByteString)ref; } public boolean hasJavaMultipleFiles() { return ((this.bitField0_ & 0x4) != 0); } public boolean getJavaMultipleFiles() { return this.javaMultipleFiles_; } @Deprecated public boolean hasJavaGenerateEqualsAndHash() { return ((this.bitField0_ & 0x8) != 0); } @Deprecated public boolean getJavaGenerateEqualsAndHash() { return this.javaGenerateEqualsAndHash_; } public boolean hasJavaStringCheckUtf8() { return ((this.bitField0_ & 0x10) != 0); } public boolean getJavaStringCheckUtf8() { return this.javaStringCheckUtf8_; } public boolean hasOptimizeFor() { return ((this.bitField0_ & 0x20) != 0); } public OptimizeMode getOptimizeFor() { OptimizeMode result = OptimizeMode.valueOf(this.optimizeFor_); return (result == null) ? OptimizeMode.SPEED : result; } public boolean hasGoPackage() { return ((this.bitField0_ & 0x40) != 0); } public String getGoPackage() { Object ref = this.goPackage_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.goPackage_ = s;  return s; } public ByteString getGoPackageBytes() { Object ref = this.goPackage_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.goPackage_ = b; return b; }  return (ByteString)ref; } public boolean hasCcGenericServices() { return ((this.bitField0_ & 0x80) != 0); } public boolean getCcGenericServices() { return this.ccGenericServices_; } public boolean hasJavaGenericServices() { return ((this.bitField0_ & 0x100) != 0); } public boolean getJavaGenericServices() { return this.javaGenericServices_; } public boolean hasPyGenericServices() { return ((this.bitField0_ & 0x200) != 0); } public boolean getPyGenericServices() { return this.pyGenericServices_; } public boolean hasPhpGenericServices() { return ((this.bitField0_ & 0x400) != 0); } public boolean getPhpGenericServices() { return this.phpGenericServices_; } public boolean hasDeprecated() { return ((this.bitField0_ & 0x800) != 0); } public boolean getDeprecated() { return this.deprecated_; } public boolean hasCcEnableArenas() { return ((this.bitField0_ & 0x1000) != 0); } public boolean getCcEnableArenas() { return this.ccEnableArenas_; } public boolean hasObjcClassPrefix() { return ((this.bitField0_ & 0x2000) != 0); } public String getObjcClassPrefix() { Object ref = this.objcClassPrefix_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.objcClassPrefix_ = s;  return s; } public ByteString getObjcClassPrefixBytes() { Object ref = this.objcClassPrefix_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.objcClassPrefix_ = b; return b; }  return (ByteString)ref; } public boolean hasCsharpNamespace() { return ((this.bitField0_ & 0x4000) != 0); } public String getCsharpNamespace() { Object ref = this.csharpNamespace_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.csharpNamespace_ = s;  return s; } public ByteString getCsharpNamespaceBytes() { Object ref = this.csharpNamespace_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.csharpNamespace_ = b; return b; }  return (ByteString)ref; } public boolean hasSwiftPrefix() { return ((this.bitField0_ & 0x8000) != 0); } public String getSwiftPrefix() { Object ref = this.swiftPrefix_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.swiftPrefix_ = s;  return s; } public ByteString getSwiftPrefixBytes() { Object ref = this.swiftPrefix_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.swiftPrefix_ = b; return b; }  return (ByteString)ref; } public boolean hasPhpClassPrefix() { return ((this.bitField0_ & 0x10000) != 0); } public String getPhpClassPrefix() { Object ref = this.phpClassPrefix_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.phpClassPrefix_ = s;  return s; } public ByteString getPhpClassPrefixBytes() { Object ref = this.phpClassPrefix_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.phpClassPrefix_ = b; return b; }  return (ByteString)ref; } public boolean hasPhpNamespace() { return ((this.bitField0_ & 0x20000) != 0); } public String getPhpNamespace() { Object ref = this.phpNamespace_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.phpNamespace_ = s;  return s; } public ByteString getPhpNamespaceBytes() { Object ref = this.phpNamespace_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.phpNamespace_ = b; return b; }  return (ByteString)ref; } public boolean hasPhpMetadataNamespace() { return ((this.bitField0_ & 0x40000) != 0); } public String getPhpMetadataNamespace() { Object ref = this.phpMetadataNamespace_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.phpMetadataNamespace_ = s;  return s; } public ByteString getPhpMetadataNamespaceBytes() { Object ref = this.phpMetadataNamespace_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.phpMetadataNamespace_ = b; return b; }  return (ByteString)ref; } public boolean hasRubyPackage() { return ((this.bitField0_ & 0x80000) != 0); } public String getRubyPackage() { Object ref = this.rubyPackage_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.rubyPackage_ = s;  return s; } public ByteString getRubyPackageBytes() { Object ref = this.rubyPackage_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.rubyPackage_ = b; return b; }  return (ByteString)ref; } public List<UninterpretedOption> getUninterpretedOptionList() { return this.uninterpretedOption_; } public List<? extends UninterpretedOptionOrBuilder> getUninterpretedOptionOrBuilderList() { return (List)this.uninterpretedOption_; } public int getUninterpretedOptionCount() { return this.uninterpretedOption_.size(); } public UninterpretedOption getUninterpretedOption(int index) { return this.uninterpretedOption_.get(index); } public UninterpretedOptionOrBuilder getUninterpretedOptionOrBuilder(int index) { return this.uninterpretedOption_.get(index); }
/* 23613 */     public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized;
/* 23614 */       if (isInitialized == 1) return true; 
/* 23615 */       if (isInitialized == 0) return false;
/*       */       
/* 23617 */       for (int i = 0; i < getUninterpretedOptionCount(); i++) {
/* 23618 */         if (!getUninterpretedOption(i).isInitialized()) {
/* 23619 */           this.memoizedIsInitialized = 0;
/* 23620 */           return false;
/*       */         } 
/*       */       } 
/* 23623 */       if (!extensionsAreInitialized()) {
/* 23624 */         this.memoizedIsInitialized = 0;
/* 23625 */         return false;
/*       */       } 
/* 23627 */       this.memoizedIsInitialized = 1;
/* 23628 */       return true; }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/* 23636 */       GeneratedMessageV3.ExtendableMessage<FileOptions>.ExtensionWriter extensionWriter = newExtensionWriter();
/* 23637 */       if ((this.bitField0_ & 0x1) != 0) {
/* 23638 */         GeneratedMessageV3.writeString(output, 1, this.javaPackage_);
/*       */       }
/* 23640 */       if ((this.bitField0_ & 0x2) != 0) {
/* 23641 */         GeneratedMessageV3.writeString(output, 8, this.javaOuterClassname_);
/*       */       }
/* 23643 */       if ((this.bitField0_ & 0x20) != 0) {
/* 23644 */         output.writeEnum(9, this.optimizeFor_);
/*       */       }
/* 23646 */       if ((this.bitField0_ & 0x4) != 0) {
/* 23647 */         output.writeBool(10, this.javaMultipleFiles_);
/*       */       }
/* 23649 */       if ((this.bitField0_ & 0x40) != 0) {
/* 23650 */         GeneratedMessageV3.writeString(output, 11, this.goPackage_);
/*       */       }
/* 23652 */       if ((this.bitField0_ & 0x80) != 0) {
/* 23653 */         output.writeBool(16, this.ccGenericServices_);
/*       */       }
/* 23655 */       if ((this.bitField0_ & 0x100) != 0) {
/* 23656 */         output.writeBool(17, this.javaGenericServices_);
/*       */       }
/* 23658 */       if ((this.bitField0_ & 0x200) != 0) {
/* 23659 */         output.writeBool(18, this.pyGenericServices_);
/*       */       }
/* 23661 */       if ((this.bitField0_ & 0x8) != 0) {
/* 23662 */         output.writeBool(20, this.javaGenerateEqualsAndHash_);
/*       */       }
/* 23664 */       if ((this.bitField0_ & 0x800) != 0) {
/* 23665 */         output.writeBool(23, this.deprecated_);
/*       */       }
/* 23667 */       if ((this.bitField0_ & 0x10) != 0) {
/* 23668 */         output.writeBool(27, this.javaStringCheckUtf8_);
/*       */       }
/* 23670 */       if ((this.bitField0_ & 0x1000) != 0) {
/* 23671 */         output.writeBool(31, this.ccEnableArenas_);
/*       */       }
/* 23673 */       if ((this.bitField0_ & 0x2000) != 0) {
/* 23674 */         GeneratedMessageV3.writeString(output, 36, this.objcClassPrefix_);
/*       */       }
/* 23676 */       if ((this.bitField0_ & 0x4000) != 0) {
/* 23677 */         GeneratedMessageV3.writeString(output, 37, this.csharpNamespace_);
/*       */       }
/* 23679 */       if ((this.bitField0_ & 0x8000) != 0) {
/* 23680 */         GeneratedMessageV3.writeString(output, 39, this.swiftPrefix_);
/*       */       }
/* 23682 */       if ((this.bitField0_ & 0x10000) != 0) {
/* 23683 */         GeneratedMessageV3.writeString(output, 40, this.phpClassPrefix_);
/*       */       }
/* 23685 */       if ((this.bitField0_ & 0x20000) != 0) {
/* 23686 */         GeneratedMessageV3.writeString(output, 41, this.phpNamespace_);
/*       */       }
/* 23688 */       if ((this.bitField0_ & 0x400) != 0) {
/* 23689 */         output.writeBool(42, this.phpGenericServices_);
/*       */       }
/* 23691 */       if ((this.bitField0_ & 0x40000) != 0) {
/* 23692 */         GeneratedMessageV3.writeString(output, 44, this.phpMetadataNamespace_);
/*       */       }
/* 23694 */       if ((this.bitField0_ & 0x80000) != 0) {
/* 23695 */         GeneratedMessageV3.writeString(output, 45, this.rubyPackage_);
/*       */       }
/* 23697 */       for (int i = 0; i < this.uninterpretedOption_.size(); i++) {
/* 23698 */         output.writeMessage(999, this.uninterpretedOption_.get(i));
/*       */       }
/* 23700 */       extensionWriter.writeUntil(536870912, output);
/* 23701 */       this.unknownFields.writeTo(output);
/*       */     }
/*       */ 
/*       */     
/*       */     public int getSerializedSize() {
/* 23706 */       int size = this.memoizedSize;
/* 23707 */       if (size != -1) return size;
/*       */       
/* 23709 */       size = 0;
/* 23710 */       if ((this.bitField0_ & 0x1) != 0) {
/* 23711 */         size += GeneratedMessageV3.computeStringSize(1, this.javaPackage_);
/*       */       }
/* 23713 */       if ((this.bitField0_ & 0x2) != 0) {
/* 23714 */         size += GeneratedMessageV3.computeStringSize(8, this.javaOuterClassname_);
/*       */       }
/* 23716 */       if ((this.bitField0_ & 0x20) != 0) {
/* 23717 */         size += 
/* 23718 */           CodedOutputStream.computeEnumSize(9, this.optimizeFor_);
/*       */       }
/* 23720 */       if ((this.bitField0_ & 0x4) != 0) {
/* 23721 */         size += 
/* 23722 */           CodedOutputStream.computeBoolSize(10, this.javaMultipleFiles_);
/*       */       }
/* 23724 */       if ((this.bitField0_ & 0x40) != 0) {
/* 23725 */         size += GeneratedMessageV3.computeStringSize(11, this.goPackage_);
/*       */       }
/* 23727 */       if ((this.bitField0_ & 0x80) != 0) {
/* 23728 */         size += 
/* 23729 */           CodedOutputStream.computeBoolSize(16, this.ccGenericServices_);
/*       */       }
/* 23731 */       if ((this.bitField0_ & 0x100) != 0) {
/* 23732 */         size += 
/* 23733 */           CodedOutputStream.computeBoolSize(17, this.javaGenericServices_);
/*       */       }
/* 23735 */       if ((this.bitField0_ & 0x200) != 0) {
/* 23736 */         size += 
/* 23737 */           CodedOutputStream.computeBoolSize(18, this.pyGenericServices_);
/*       */       }
/* 23739 */       if ((this.bitField0_ & 0x8) != 0) {
/* 23740 */         size += 
/* 23741 */           CodedOutputStream.computeBoolSize(20, this.javaGenerateEqualsAndHash_);
/*       */       }
/* 23743 */       if ((this.bitField0_ & 0x800) != 0) {
/* 23744 */         size += 
/* 23745 */           CodedOutputStream.computeBoolSize(23, this.deprecated_);
/*       */       }
/* 23747 */       if ((this.bitField0_ & 0x10) != 0) {
/* 23748 */         size += 
/* 23749 */           CodedOutputStream.computeBoolSize(27, this.javaStringCheckUtf8_);
/*       */       }
/* 23751 */       if ((this.bitField0_ & 0x1000) != 0) {
/* 23752 */         size += 
/* 23753 */           CodedOutputStream.computeBoolSize(31, this.ccEnableArenas_);
/*       */       }
/* 23755 */       if ((this.bitField0_ & 0x2000) != 0) {
/* 23756 */         size += GeneratedMessageV3.computeStringSize(36, this.objcClassPrefix_);
/*       */       }
/* 23758 */       if ((this.bitField0_ & 0x4000) != 0) {
/* 23759 */         size += GeneratedMessageV3.computeStringSize(37, this.csharpNamespace_);
/*       */       }
/* 23761 */       if ((this.bitField0_ & 0x8000) != 0) {
/* 23762 */         size += GeneratedMessageV3.computeStringSize(39, this.swiftPrefix_);
/*       */       }
/* 23764 */       if ((this.bitField0_ & 0x10000) != 0) {
/* 23765 */         size += GeneratedMessageV3.computeStringSize(40, this.phpClassPrefix_);
/*       */       }
/* 23767 */       if ((this.bitField0_ & 0x20000) != 0) {
/* 23768 */         size += GeneratedMessageV3.computeStringSize(41, this.phpNamespace_);
/*       */       }
/* 23770 */       if ((this.bitField0_ & 0x400) != 0) {
/* 23771 */         size += 
/* 23772 */           CodedOutputStream.computeBoolSize(42, this.phpGenericServices_);
/*       */       }
/* 23774 */       if ((this.bitField0_ & 0x40000) != 0) {
/* 23775 */         size += GeneratedMessageV3.computeStringSize(44, this.phpMetadataNamespace_);
/*       */       }
/* 23777 */       if ((this.bitField0_ & 0x80000) != 0) {
/* 23778 */         size += GeneratedMessageV3.computeStringSize(45, this.rubyPackage_);
/*       */       }
/* 23780 */       for (int i = 0; i < this.uninterpretedOption_.size(); i++) {
/* 23781 */         size += 
/* 23782 */           CodedOutputStream.computeMessageSize(999, this.uninterpretedOption_.get(i));
/*       */       }
/* 23784 */       size += extensionsSerializedSize();
/* 23785 */       size += this.unknownFields.getSerializedSize();
/* 23786 */       this.memoizedSize = size;
/* 23787 */       return size;
/*       */     }
/*       */ 
/*       */     
/*       */     public boolean equals(Object obj) {
/* 23792 */       if (obj == this) {
/* 23793 */         return true;
/*       */       }
/* 23795 */       if (!(obj instanceof FileOptions)) {
/* 23796 */         return super.equals(obj);
/*       */       }
/* 23798 */       FileOptions other = (FileOptions)obj;
/*       */       
/* 23800 */       if (hasJavaPackage() != other.hasJavaPackage()) return false; 
/* 23801 */       if (hasJavaPackage() && 
/*       */         
/* 23803 */         !getJavaPackage().equals(other.getJavaPackage())) return false;
/*       */       
/* 23805 */       if (hasJavaOuterClassname() != other.hasJavaOuterClassname()) return false; 
/* 23806 */       if (hasJavaOuterClassname() && 
/*       */         
/* 23808 */         !getJavaOuterClassname().equals(other.getJavaOuterClassname())) return false;
/*       */       
/* 23810 */       if (hasJavaMultipleFiles() != other.hasJavaMultipleFiles()) return false; 
/* 23811 */       if (hasJavaMultipleFiles() && 
/* 23812 */         getJavaMultipleFiles() != other
/* 23813 */         .getJavaMultipleFiles()) return false;
/*       */       
/* 23815 */       if (hasJavaGenerateEqualsAndHash() != other.hasJavaGenerateEqualsAndHash()) return false; 
/* 23816 */       if (hasJavaGenerateEqualsAndHash() && 
/* 23817 */         getJavaGenerateEqualsAndHash() != other
/* 23818 */         .getJavaGenerateEqualsAndHash()) return false;
/*       */       
/* 23820 */       if (hasJavaStringCheckUtf8() != other.hasJavaStringCheckUtf8()) return false; 
/* 23821 */       if (hasJavaStringCheckUtf8() && 
/* 23822 */         getJavaStringCheckUtf8() != other
/* 23823 */         .getJavaStringCheckUtf8()) return false;
/*       */       
/* 23825 */       if (hasOptimizeFor() != other.hasOptimizeFor()) return false; 
/* 23826 */       if (hasOptimizeFor() && 
/* 23827 */         this.optimizeFor_ != other.optimizeFor_) return false;
/*       */       
/* 23829 */       if (hasGoPackage() != other.hasGoPackage()) return false; 
/* 23830 */       if (hasGoPackage() && 
/*       */         
/* 23832 */         !getGoPackage().equals(other.getGoPackage())) return false;
/*       */       
/* 23834 */       if (hasCcGenericServices() != other.hasCcGenericServices()) return false; 
/* 23835 */       if (hasCcGenericServices() && 
/* 23836 */         getCcGenericServices() != other
/* 23837 */         .getCcGenericServices()) return false;
/*       */       
/* 23839 */       if (hasJavaGenericServices() != other.hasJavaGenericServices()) return false; 
/* 23840 */       if (hasJavaGenericServices() && 
/* 23841 */         getJavaGenericServices() != other
/* 23842 */         .getJavaGenericServices()) return false;
/*       */       
/* 23844 */       if (hasPyGenericServices() != other.hasPyGenericServices()) return false; 
/* 23845 */       if (hasPyGenericServices() && 
/* 23846 */         getPyGenericServices() != other
/* 23847 */         .getPyGenericServices()) return false;
/*       */       
/* 23849 */       if (hasPhpGenericServices() != other.hasPhpGenericServices()) return false; 
/* 23850 */       if (hasPhpGenericServices() && 
/* 23851 */         getPhpGenericServices() != other
/* 23852 */         .getPhpGenericServices()) return false;
/*       */       
/* 23854 */       if (hasDeprecated() != other.hasDeprecated()) return false; 
/* 23855 */       if (hasDeprecated() && 
/* 23856 */         getDeprecated() != other
/* 23857 */         .getDeprecated()) return false;
/*       */       
/* 23859 */       if (hasCcEnableArenas() != other.hasCcEnableArenas()) return false; 
/* 23860 */       if (hasCcEnableArenas() && 
/* 23861 */         getCcEnableArenas() != other
/* 23862 */         .getCcEnableArenas()) return false;
/*       */       
/* 23864 */       if (hasObjcClassPrefix() != other.hasObjcClassPrefix()) return false; 
/* 23865 */       if (hasObjcClassPrefix() && 
/*       */         
/* 23867 */         !getObjcClassPrefix().equals(other.getObjcClassPrefix())) return false;
/*       */       
/* 23869 */       if (hasCsharpNamespace() != other.hasCsharpNamespace()) return false; 
/* 23870 */       if (hasCsharpNamespace() && 
/*       */         
/* 23872 */         !getCsharpNamespace().equals(other.getCsharpNamespace())) return false;
/*       */       
/* 23874 */       if (hasSwiftPrefix() != other.hasSwiftPrefix()) return false; 
/* 23875 */       if (hasSwiftPrefix() && 
/*       */         
/* 23877 */         !getSwiftPrefix().equals(other.getSwiftPrefix())) return false;
/*       */       
/* 23879 */       if (hasPhpClassPrefix() != other.hasPhpClassPrefix()) return false; 
/* 23880 */       if (hasPhpClassPrefix() && 
/*       */         
/* 23882 */         !getPhpClassPrefix().equals(other.getPhpClassPrefix())) return false;
/*       */       
/* 23884 */       if (hasPhpNamespace() != other.hasPhpNamespace()) return false; 
/* 23885 */       if (hasPhpNamespace() && 
/*       */         
/* 23887 */         !getPhpNamespace().equals(other.getPhpNamespace())) return false;
/*       */       
/* 23889 */       if (hasPhpMetadataNamespace() != other.hasPhpMetadataNamespace()) return false; 
/* 23890 */       if (hasPhpMetadataNamespace() && 
/*       */         
/* 23892 */         !getPhpMetadataNamespace().equals(other.getPhpMetadataNamespace())) return false;
/*       */       
/* 23894 */       if (hasRubyPackage() != other.hasRubyPackage()) return false; 
/* 23895 */       if (hasRubyPackage() && 
/*       */         
/* 23897 */         !getRubyPackage().equals(other.getRubyPackage())) return false;
/*       */ 
/*       */       
/* 23900 */       if (!getUninterpretedOptionList().equals(other.getUninterpretedOptionList())) return false; 
/* 23901 */       if (!this.unknownFields.equals(other.unknownFields)) return false; 
/* 23902 */       if (!getExtensionFields().equals(other.getExtensionFields()))
/* 23903 */         return false; 
/* 23904 */       return true;
/*       */     }
/*       */ 
/*       */     
/*       */     public int hashCode() {
/* 23909 */       if (this.memoizedHashCode != 0) {
/* 23910 */         return this.memoizedHashCode;
/*       */       }
/* 23912 */       int hash = 41;
/* 23913 */       hash = 19 * hash + getDescriptor().hashCode();
/* 23914 */       if (hasJavaPackage()) {
/* 23915 */         hash = 37 * hash + 1;
/* 23916 */         hash = 53 * hash + getJavaPackage().hashCode();
/*       */       } 
/* 23918 */       if (hasJavaOuterClassname()) {
/* 23919 */         hash = 37 * hash + 8;
/* 23920 */         hash = 53 * hash + getJavaOuterClassname().hashCode();
/*       */       } 
/* 23922 */       if (hasJavaMultipleFiles()) {
/* 23923 */         hash = 37 * hash + 10;
/* 23924 */         hash = 53 * hash + Internal.hashBoolean(
/* 23925 */             getJavaMultipleFiles());
/*       */       } 
/* 23927 */       if (hasJavaGenerateEqualsAndHash()) {
/* 23928 */         hash = 37 * hash + 20;
/* 23929 */         hash = 53 * hash + Internal.hashBoolean(
/* 23930 */             getJavaGenerateEqualsAndHash());
/*       */       } 
/* 23932 */       if (hasJavaStringCheckUtf8()) {
/* 23933 */         hash = 37 * hash + 27;
/* 23934 */         hash = 53 * hash + Internal.hashBoolean(
/* 23935 */             getJavaStringCheckUtf8());
/*       */       } 
/* 23937 */       if (hasOptimizeFor()) {
/* 23938 */         hash = 37 * hash + 9;
/* 23939 */         hash = 53 * hash + this.optimizeFor_;
/*       */       } 
/* 23941 */       if (hasGoPackage()) {
/* 23942 */         hash = 37 * hash + 11;
/* 23943 */         hash = 53 * hash + getGoPackage().hashCode();
/*       */       } 
/* 23945 */       if (hasCcGenericServices()) {
/* 23946 */         hash = 37 * hash + 16;
/* 23947 */         hash = 53 * hash + Internal.hashBoolean(
/* 23948 */             getCcGenericServices());
/*       */       } 
/* 23950 */       if (hasJavaGenericServices()) {
/* 23951 */         hash = 37 * hash + 17;
/* 23952 */         hash = 53 * hash + Internal.hashBoolean(
/* 23953 */             getJavaGenericServices());
/*       */       } 
/* 23955 */       if (hasPyGenericServices()) {
/* 23956 */         hash = 37 * hash + 18;
/* 23957 */         hash = 53 * hash + Internal.hashBoolean(
/* 23958 */             getPyGenericServices());
/*       */       } 
/* 23960 */       if (hasPhpGenericServices()) {
/* 23961 */         hash = 37 * hash + 42;
/* 23962 */         hash = 53 * hash + Internal.hashBoolean(
/* 23963 */             getPhpGenericServices());
/*       */       } 
/* 23965 */       if (hasDeprecated()) {
/* 23966 */         hash = 37 * hash + 23;
/* 23967 */         hash = 53 * hash + Internal.hashBoolean(
/* 23968 */             getDeprecated());
/*       */       } 
/* 23970 */       if (hasCcEnableArenas()) {
/* 23971 */         hash = 37 * hash + 31;
/* 23972 */         hash = 53 * hash + Internal.hashBoolean(
/* 23973 */             getCcEnableArenas());
/*       */       } 
/* 23975 */       if (hasObjcClassPrefix()) {
/* 23976 */         hash = 37 * hash + 36;
/* 23977 */         hash = 53 * hash + getObjcClassPrefix().hashCode();
/*       */       } 
/* 23979 */       if (hasCsharpNamespace()) {
/* 23980 */         hash = 37 * hash + 37;
/* 23981 */         hash = 53 * hash + getCsharpNamespace().hashCode();
/*       */       } 
/* 23983 */       if (hasSwiftPrefix()) {
/* 23984 */         hash = 37 * hash + 39;
/* 23985 */         hash = 53 * hash + getSwiftPrefix().hashCode();
/*       */       } 
/* 23987 */       if (hasPhpClassPrefix()) {
/* 23988 */         hash = 37 * hash + 40;
/* 23989 */         hash = 53 * hash + getPhpClassPrefix().hashCode();
/*       */       } 
/* 23991 */       if (hasPhpNamespace()) {
/* 23992 */         hash = 37 * hash + 41;
/* 23993 */         hash = 53 * hash + getPhpNamespace().hashCode();
/*       */       } 
/* 23995 */       if (hasPhpMetadataNamespace()) {
/* 23996 */         hash = 37 * hash + 44;
/* 23997 */         hash = 53 * hash + getPhpMetadataNamespace().hashCode();
/*       */       } 
/* 23999 */       if (hasRubyPackage()) {
/* 24000 */         hash = 37 * hash + 45;
/* 24001 */         hash = 53 * hash + getRubyPackage().hashCode();
/*       */       } 
/* 24003 */       if (getUninterpretedOptionCount() > 0) {
/* 24004 */         hash = 37 * hash + 999;
/* 24005 */         hash = 53 * hash + getUninterpretedOptionList().hashCode();
/*       */       } 
/* 24007 */       hash = hashFields(hash, getExtensionFields());
/* 24008 */       hash = 29 * hash + this.unknownFields.hashCode();
/* 24009 */       this.memoizedHashCode = hash;
/* 24010 */       return hash;
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static FileOptions parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
/* 24016 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static FileOptions parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 24022 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static FileOptions parseFrom(ByteString data) throws InvalidProtocolBufferException {
/* 24027 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static FileOptions parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 24033 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static FileOptions parseFrom(byte[] data) throws InvalidProtocolBufferException {
/* 24037 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static FileOptions parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 24043 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static FileOptions parseFrom(InputStream input) throws IOException {
/* 24047 */       return 
/* 24048 */         GeneratedMessageV3.<FileOptions>parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static FileOptions parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 24054 */       return 
/* 24055 */         GeneratedMessageV3.<FileOptions>parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static FileOptions parseDelimitedFrom(InputStream input) throws IOException {
/* 24059 */       return 
/* 24060 */         GeneratedMessageV3.<FileOptions>parseDelimitedWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static FileOptions parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 24066 */       return 
/* 24067 */         GeneratedMessageV3.<FileOptions>parseDelimitedWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static FileOptions parseFrom(CodedInputStream input) throws IOException {
/* 24072 */       return 
/* 24073 */         GeneratedMessageV3.<FileOptions>parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static FileOptions parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 24079 */       return 
/* 24080 */         GeneratedMessageV3.<FileOptions>parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public Builder newBuilderForType() {
/* 24084 */       return newBuilder();
/*       */     } public static Builder newBuilder() {
/* 24086 */       return DEFAULT_INSTANCE.toBuilder();
/*       */     }
/*       */     public static Builder newBuilder(FileOptions prototype) {
/* 24089 */       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
/*       */     }
/*       */     
/*       */     public Builder toBuilder() {
/* 24093 */       return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder())
/* 24094 */         .mergeFrom(this);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
/* 24100 */       Builder builder = new Builder(parent);
/* 24101 */       return builder;
/*       */     }
/*       */     public static final class Builder extends GeneratedMessageV3.ExtendableBuilder<FileOptions, Builder> implements FileOptionsOrBuilder { private int bitField0_; private Object javaPackage_; private Object javaOuterClassname_; private boolean javaMultipleFiles_; private boolean javaGenerateEqualsAndHash_; private boolean javaStringCheckUtf8_; private int optimizeFor_; private Object goPackage_; private boolean ccGenericServices_; private boolean javaGenericServices_; private boolean pyGenericServices_; private boolean phpGenericServices_; private boolean deprecated_; private boolean ccEnableArenas_; private Object objcClassPrefix_; private Object csharpNamespace_;
/*       */       private Object swiftPrefix_;
/*       */       private Object phpClassPrefix_;
/*       */       private Object phpNamespace_;
/*       */       private Object phpMetadataNamespace_;
/*       */       private Object rubyPackage_;
/*       */       private List<UninterpretedOption> uninterpretedOption_;
/*       */       private RepeatedFieldBuilderV3<UninterpretedOption, UninterpretedOption.Builder, UninterpretedOptionOrBuilder> uninterpretedOptionBuilder_;
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/* 24113 */         return DescriptorProtos.internal_static_google_protobuf_FileOptions_descriptor;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
/* 24119 */         return DescriptorProtos.internal_static_google_protobuf_FileOptions_fieldAccessorTable
/* 24120 */           .ensureFieldAccessorsInitialized((Class) FileOptions.class, (Class)Builder.class);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private Builder()
/*       */       {
/* 24527 */         this.javaPackage_ = "";
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 24653 */         this.javaOuterClassname_ = "";
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 24990 */         this.optimizeFor_ = 1;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 25033 */         this.goPackage_ = "";
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 25436 */         this.ccEnableArenas_ = true;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 25495 */         this.objcClassPrefix_ = "";
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 25609 */         this.csharpNamespace_ = "";
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 25717 */         this.swiftPrefix_ = "";
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 25843 */         this.phpClassPrefix_ = "";
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 25957 */         this.phpNamespace_ = "";
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 26077 */         this.phpMetadataNamespace_ = "";
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 26197 */         this.rubyPackage_ = "";
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 26317 */         this
/* 26318 */           .uninterpretedOption_ = Collections.emptyList(); maybeForceBuilderInitialization(); } private Builder(GeneratedMessageV3.BuilderParent parent) { super(parent); this.javaPackage_ = ""; this.javaOuterClassname_ = ""; this.optimizeFor_ = 1; this.goPackage_ = ""; this.ccEnableArenas_ = true; this.objcClassPrefix_ = ""; this.csharpNamespace_ = ""; this.swiftPrefix_ = ""; this.phpClassPrefix_ = ""; this.phpNamespace_ = ""; this.phpMetadataNamespace_ = ""; this.rubyPackage_ = ""; this.uninterpretedOption_ = Collections.emptyList(); maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (GeneratedMessageV3.alwaysUseFieldBuilders) getUninterpretedOptionFieldBuilder();  } public Builder clear() { super.clear(); this.javaPackage_ = ""; this.bitField0_ &= 0xFFFFFFFE; this.javaOuterClassname_ = ""; this.bitField0_ &= 0xFFFFFFFD; this.javaMultipleFiles_ = false; this.bitField0_ &= 0xFFFFFFFB; this.javaGenerateEqualsAndHash_ = false; this.bitField0_ &= 0xFFFFFFF7; this.javaStringCheckUtf8_ = false; this.bitField0_ &= 0xFFFFFFEF; this.optimizeFor_ = 1; this.bitField0_ &= 0xFFFFFFDF; this.goPackage_ = ""; this.bitField0_ &= 0xFFFFFFBF; this.ccGenericServices_ = false; this.bitField0_ &= 0xFFFFFF7F; this.javaGenericServices_ = false; this.bitField0_ &= 0xFFFFFEFF; this.pyGenericServices_ = false; this.bitField0_ &= 0xFFFFFDFF; this.phpGenericServices_ = false; this.bitField0_ &= 0xFFFFFBFF; this.deprecated_ = false; this.bitField0_ &= 0xFFFFF7FF; this.ccEnableArenas_ = true; this.bitField0_ &= 0xFFFFEFFF; this.objcClassPrefix_ = ""; this.bitField0_ &= 0xFFFFDFFF; this.csharpNamespace_ = ""; this.bitField0_ &= 0xFFFFBFFF; this.swiftPrefix_ = ""; this.bitField0_ &= 0xFFFF7FFF; this.phpClassPrefix_ = ""; this.bitField0_ &= 0xFFFEFFFF; this.phpNamespace_ = ""; this.bitField0_ &= 0xFFFDFFFF; this.phpMetadataNamespace_ = ""; this.bitField0_ &= 0xFFFBFFFF; this.rubyPackage_ = ""; this.bitField0_ &= 0xFFF7FFFF; if (this.uninterpretedOptionBuilder_ == null) { this.uninterpretedOption_ = Collections.emptyList(); this.bitField0_ &= 0xFFEFFFFF; } else { this.uninterpretedOptionBuilder_.clear(); }  return this; } public Descriptors.Descriptor getDescriptorForType() { return DescriptorProtos.internal_static_google_protobuf_FileOptions_descriptor; } public FileOptions getDefaultInstanceForType() { return FileOptions.getDefaultInstance(); } public FileOptions build() { FileOptions result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public FileOptions buildPartial() { FileOptions result = new FileOptions(this); int from_bitField0_ = this.bitField0_; int to_bitField0_ = 0; if ((from_bitField0_ & 0x1) != 0) to_bitField0_ |= 0x1;  result.javaPackage_ = this.javaPackage_; if ((from_bitField0_ & 0x2) != 0) to_bitField0_ |= 0x2;  result.javaOuterClassname_ = this.javaOuterClassname_; if ((from_bitField0_ & 0x4) != 0) { result.javaMultipleFiles_ = this.javaMultipleFiles_; to_bitField0_ |= 0x4; }  if ((from_bitField0_ & 0x8) != 0) { result.javaGenerateEqualsAndHash_ = this.javaGenerateEqualsAndHash_; to_bitField0_ |= 0x8; }  if ((from_bitField0_ & 0x10) != 0) { result.javaStringCheckUtf8_ = this.javaStringCheckUtf8_; to_bitField0_ |= 0x10; }  if ((from_bitField0_ & 0x20) != 0) to_bitField0_ |= 0x20;  result.optimizeFor_ = this.optimizeFor_; if ((from_bitField0_ & 0x40) != 0) to_bitField0_ |= 0x40;  result.goPackage_ = this.goPackage_; if ((from_bitField0_ & 0x80) != 0) { result.ccGenericServices_ = this.ccGenericServices_; to_bitField0_ |= 0x80; }  if ((from_bitField0_ & 0x100) != 0) { result.javaGenericServices_ = this.javaGenericServices_; to_bitField0_ |= 0x100; }  if ((from_bitField0_ & 0x200) != 0) { result.pyGenericServices_ = this.pyGenericServices_; to_bitField0_ |= 0x200; }  if ((from_bitField0_ & 0x400) != 0) { result.phpGenericServices_ = this.phpGenericServices_; to_bitField0_ |= 0x400; }  if ((from_bitField0_ & 0x800) != 0) { result.deprecated_ = this.deprecated_; to_bitField0_ |= 0x800; }  if ((from_bitField0_ & 0x1000) != 0) to_bitField0_ |= 0x1000;  result.ccEnableArenas_ = this.ccEnableArenas_; if ((from_bitField0_ & 0x2000) != 0) to_bitField0_ |= 0x2000;  result.objcClassPrefix_ = this.objcClassPrefix_; if ((from_bitField0_ & 0x4000) != 0) to_bitField0_ |= 0x4000;  result.csharpNamespace_ = this.csharpNamespace_; if ((from_bitField0_ & 0x8000) != 0) to_bitField0_ |= 0x8000;  result.swiftPrefix_ = this.swiftPrefix_; if ((from_bitField0_ & 0x10000) != 0) to_bitField0_ |= 0x10000;  result.phpClassPrefix_ = this.phpClassPrefix_; if ((from_bitField0_ & 0x20000) != 0) to_bitField0_ |= 0x20000;  result.phpNamespace_ = this.phpNamespace_; if ((from_bitField0_ & 0x40000) != 0) to_bitField0_ |= 0x40000;  result.phpMetadataNamespace_ = this.phpMetadataNamespace_; if ((from_bitField0_ & 0x80000) != 0) to_bitField0_ |= 0x80000;  result.rubyPackage_ = this.rubyPackage_; if (this.uninterpretedOptionBuilder_ == null) { if ((this.bitField0_ & 0x100000) != 0) { this.uninterpretedOption_ = Collections.unmodifiableList(this.uninterpretedOption_); this.bitField0_ &= 0xFFEFFFFF; }  result.uninterpretedOption_ = this.uninterpretedOption_; } else { result.uninterpretedOption_ = this.uninterpretedOptionBuilder_.build(); }  result.bitField0_ = to_bitField0_; onBuilt(); return result; } public Builder clone() { return super.clone(); } public Builder setField(Descriptors.FieldDescriptor field, Object value) { return super.setField(field, value); } public Builder clearField(Descriptors.FieldDescriptor field) { return super.clearField(field); } public Builder clearOneof(Descriptors.OneofDescriptor oneof) { return super.clearOneof(oneof); } public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) { return super.setRepeatedField(field, index, value); } public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) { return super.addRepeatedField(field, value); } public <Type> Builder setExtension(GeneratedMessage.GeneratedExtension<FileOptions, Type> extension, Type value) { return super.<Type>setExtension(extension, value); } public <Type> Builder setExtension(GeneratedMessage.GeneratedExtension<FileOptions, List<Type>> extension, int index, Type value) { return super.<Type>setExtension(extension, index, value); } public <Type> Builder addExtension(GeneratedMessage.GeneratedExtension<FileOptions, List<Type>> extension, Type value) { return super.<Type>addExtension(extension, value); } public <Type> Builder clearExtension(GeneratedMessage.GeneratedExtension<FileOptions, ?> extension) { return super.clearExtension(extension); } public Builder mergeFrom(Message other) { if (other instanceof FileOptions) return mergeFrom((FileOptions)other);  super.mergeFrom(other); return this; } public Builder mergeFrom(FileOptions other) { if (other == FileOptions.getDefaultInstance()) return this;  if (other.hasJavaPackage()) { this.bitField0_ |= 0x1; this.javaPackage_ = other.javaPackage_; onChanged(); }  if (other.hasJavaOuterClassname()) { this.bitField0_ |= 0x2; this.javaOuterClassname_ = other.javaOuterClassname_; onChanged(); }  if (other.hasJavaMultipleFiles()) setJavaMultipleFiles(other.getJavaMultipleFiles());  if (other.hasJavaGenerateEqualsAndHash()) setJavaGenerateEqualsAndHash(other.getJavaGenerateEqualsAndHash());  if (other.hasJavaStringCheckUtf8()) setJavaStringCheckUtf8(other.getJavaStringCheckUtf8());  if (other.hasOptimizeFor()) setOptimizeFor(other.getOptimizeFor());  if (other.hasGoPackage()) { this.bitField0_ |= 0x40; this.goPackage_ = other.goPackage_; onChanged(); }  if (other.hasCcGenericServices()) setCcGenericServices(other.getCcGenericServices());  if (other.hasJavaGenericServices()) setJavaGenericServices(other.getJavaGenericServices());  if (other.hasPyGenericServices()) setPyGenericServices(other.getPyGenericServices());  if (other.hasPhpGenericServices()) setPhpGenericServices(other.getPhpGenericServices());  if (other.hasDeprecated()) setDeprecated(other.getDeprecated());  if (other.hasCcEnableArenas()) setCcEnableArenas(other.getCcEnableArenas());  if (other.hasObjcClassPrefix()) { this.bitField0_ |= 0x2000; this.objcClassPrefix_ = other.objcClassPrefix_; onChanged(); }  if (other.hasCsharpNamespace()) { this.bitField0_ |= 0x4000; this.csharpNamespace_ = other.csharpNamespace_; onChanged(); }  if (other.hasSwiftPrefix()) { this.bitField0_ |= 0x8000; this.swiftPrefix_ = other.swiftPrefix_; onChanged(); }  if (other.hasPhpClassPrefix()) { this.bitField0_ |= 0x10000; this.phpClassPrefix_ = other.phpClassPrefix_; onChanged(); }  if (other.hasPhpNamespace()) { this.bitField0_ |= 0x20000; this.phpNamespace_ = other.phpNamespace_; onChanged(); }  if (other.hasPhpMetadataNamespace()) { this.bitField0_ |= 0x40000; this.phpMetadataNamespace_ = other.phpMetadataNamespace_; onChanged(); }  if (other.hasRubyPackage()) { this.bitField0_ |= 0x80000; this.rubyPackage_ = other.rubyPackage_; onChanged(); }  if (this.uninterpretedOptionBuilder_ == null) { if (!other.uninterpretedOption_.isEmpty()) { if (this.uninterpretedOption_.isEmpty()) { this.uninterpretedOption_ = other.uninterpretedOption_; this.bitField0_ &= 0xFFEFFFFF; } else { ensureUninterpretedOptionIsMutable(); this.uninterpretedOption_.addAll(other.uninterpretedOption_); }  onChanged(); }  } else if (!other.uninterpretedOption_.isEmpty()) { if (this.uninterpretedOptionBuilder_.isEmpty()) { this.uninterpretedOptionBuilder_.dispose(); this.uninterpretedOptionBuilder_ = null; this.uninterpretedOption_ = other.uninterpretedOption_; this.bitField0_ &= 0xFFEFFFFF; this.uninterpretedOptionBuilder_ = GeneratedMessageV3.alwaysUseFieldBuilders ? getUninterpretedOptionFieldBuilder() : null; } else { this.uninterpretedOptionBuilder_.addAllMessages(other.uninterpretedOption_); }  }  mergeExtensionFields(other); mergeUnknownFields(other.unknownFields); onChanged(); return this; } public final boolean isInitialized() { for (int i = 0; i < getUninterpretedOptionCount(); i++) { if (!getUninterpretedOption(i).isInitialized()) return false;  }  if (!extensionsAreInitialized()) return false;  return true; } public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { FileOptions parsedMessage = null; try { parsedMessage = FileOptions.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (FileOptions)e.getUnfinishedMessage(); throw e.unwrapIOException(); } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; } public boolean hasJavaPackage() { return ((this.bitField0_ & 0x1) != 0); } public String getJavaPackage() { Object ref = this.javaPackage_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.javaPackage_ = s;  return s; }  return (String)ref; } public ByteString getJavaPackageBytes() { Object ref = this.javaPackage_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.javaPackage_ = b; return b; }  return (ByteString)ref; } public Builder setJavaPackage(String value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x1; this.javaPackage_ = value; onChanged(); return this; } public Builder clearJavaPackage() { this.bitField0_ &= 0xFFFFFFFE; this.javaPackage_ = FileOptions.getDefaultInstance().getJavaPackage(); onChanged(); return this; } public Builder setJavaPackageBytes(ByteString value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x1; this.javaPackage_ = value; onChanged(); return this; } public boolean hasJavaOuterClassname() { return ((this.bitField0_ & 0x2) != 0); } public String getJavaOuterClassname() { Object ref = this.javaOuterClassname_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.javaOuterClassname_ = s;  return s; }  return (String)ref; } public ByteString getJavaOuterClassnameBytes() { Object ref = this.javaOuterClassname_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.javaOuterClassname_ = b; return b; }  return (ByteString)ref; } public Builder setJavaOuterClassname(String value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x2; this.javaOuterClassname_ = value; onChanged(); return this; } public Builder clearJavaOuterClassname() { this.bitField0_ &= 0xFFFFFFFD; this.javaOuterClassname_ = FileOptions.getDefaultInstance().getJavaOuterClassname(); onChanged(); return this; } public Builder setJavaOuterClassnameBytes(ByteString value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x2; this.javaOuterClassname_ = value; onChanged(); return this; } public boolean hasJavaMultipleFiles() { return ((this.bitField0_ & 0x4) != 0); } public boolean getJavaMultipleFiles() { return this.javaMultipleFiles_; } public Builder setJavaMultipleFiles(boolean value) { this.bitField0_ |= 0x4; this.javaMultipleFiles_ = value; onChanged(); return this; } public Builder clearJavaMultipleFiles() { this.bitField0_ &= 0xFFFFFFFB; this.javaMultipleFiles_ = false; onChanged(); return this; } @Deprecated public boolean hasJavaGenerateEqualsAndHash() { return ((this.bitField0_ & 0x8) != 0); } @Deprecated public boolean getJavaGenerateEqualsAndHash() { return this.javaGenerateEqualsAndHash_; } @Deprecated public Builder setJavaGenerateEqualsAndHash(boolean value) { this.bitField0_ |= 0x8; this.javaGenerateEqualsAndHash_ = value; onChanged(); return this; } @Deprecated public Builder clearJavaGenerateEqualsAndHash() { this.bitField0_ &= 0xFFFFFFF7; this.javaGenerateEqualsAndHash_ = false; onChanged(); return this; } public boolean hasJavaStringCheckUtf8() { return ((this.bitField0_ & 0x10) != 0); } public boolean getJavaStringCheckUtf8() { return this.javaStringCheckUtf8_; } public Builder setJavaStringCheckUtf8(boolean value) { this.bitField0_ |= 0x10; this.javaStringCheckUtf8_ = value; onChanged(); return this; } public Builder clearJavaStringCheckUtf8() { this.bitField0_ &= 0xFFFFFFEF; this.javaStringCheckUtf8_ = false; onChanged(); return this; } public boolean hasOptimizeFor() { return ((this.bitField0_ & 0x20) != 0); } public OptimizeMode getOptimizeFor() { OptimizeMode result = OptimizeMode.valueOf(this.optimizeFor_); return (result == null) ? OptimizeMode.SPEED : result; } public Builder setOptimizeFor(OptimizeMode value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x20; this.optimizeFor_ = value.getNumber(); onChanged(); return this; } public Builder clearOptimizeFor() { this.bitField0_ &= 0xFFFFFFDF; this.optimizeFor_ = 1; onChanged(); return this; } public boolean hasGoPackage() { return ((this.bitField0_ & 0x40) != 0); } public String getGoPackage() { Object ref = this.goPackage_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.goPackage_ = s;  return s; }  return (String)ref; } public ByteString getGoPackageBytes() { Object ref = this.goPackage_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.goPackage_ = b; return b; }  return (ByteString)ref; } public Builder setGoPackage(String value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x40; this.goPackage_ = value; onChanged(); return this; } public Builder clearGoPackage() { this.bitField0_ &= 0xFFFFFFBF; this.goPackage_ = FileOptions.getDefaultInstance().getGoPackage(); onChanged(); return this; } public Builder setGoPackageBytes(ByteString value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x40; this.goPackage_ = value; onChanged(); return this; } public boolean hasCcGenericServices() { return ((this.bitField0_ & 0x80) != 0); } public boolean getCcGenericServices() { return this.ccGenericServices_; } public Builder setCcGenericServices(boolean value) { this.bitField0_ |= 0x80; this.ccGenericServices_ = value; onChanged(); return this; } public Builder clearCcGenericServices() { this.bitField0_ &= 0xFFFFFF7F; this.ccGenericServices_ = false; onChanged(); return this; } public boolean hasJavaGenericServices() { return ((this.bitField0_ & 0x100) != 0); } public boolean getJavaGenericServices() { return this.javaGenericServices_; } public Builder setJavaGenericServices(boolean value) { this.bitField0_ |= 0x100; this.javaGenericServices_ = value; onChanged(); return this; } public Builder clearJavaGenericServices() { this.bitField0_ &= 0xFFFFFEFF; this.javaGenericServices_ = false; onChanged(); return this; } public boolean hasPyGenericServices() { return ((this.bitField0_ & 0x200) != 0); } public boolean getPyGenericServices() { return this.pyGenericServices_; } public Builder setPyGenericServices(boolean value) { this.bitField0_ |= 0x200; this.pyGenericServices_ = value; onChanged(); return this; } public Builder clearPyGenericServices() { this.bitField0_ &= 0xFFFFFDFF; this.pyGenericServices_ = false; onChanged(); return this; } public boolean hasPhpGenericServices() { return ((this.bitField0_ & 0x400) != 0); } public boolean getPhpGenericServices() { return this.phpGenericServices_; } public Builder setPhpGenericServices(boolean value) { this.bitField0_ |= 0x400; this.phpGenericServices_ = value; onChanged(); return this; } public Builder clearPhpGenericServices() { this.bitField0_ &= 0xFFFFFBFF; this.phpGenericServices_ = false; onChanged(); return this; } public boolean hasDeprecated() { return ((this.bitField0_ & 0x800) != 0); } public boolean getDeprecated() { return this.deprecated_; } public Builder setDeprecated(boolean value) { this.bitField0_ |= 0x800; this.deprecated_ = value; onChanged(); return this; } public Builder clearDeprecated() { this.bitField0_ &= 0xFFFFF7FF; this.deprecated_ = false; onChanged(); return this; } public boolean hasCcEnableArenas() { return ((this.bitField0_ & 0x1000) != 0); } public boolean getCcEnableArenas() { return this.ccEnableArenas_; } public Builder setCcEnableArenas(boolean value) { this.bitField0_ |= 0x1000; this.ccEnableArenas_ = value; onChanged(); return this; } public Builder clearCcEnableArenas() { this.bitField0_ &= 0xFFFFEFFF; this.ccEnableArenas_ = true; onChanged(); return this; } public boolean hasObjcClassPrefix() { return ((this.bitField0_ & 0x2000) != 0); } public String getObjcClassPrefix() { Object ref = this.objcClassPrefix_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.objcClassPrefix_ = s;  return s; }  return (String)ref; } public ByteString getObjcClassPrefixBytes() { Object ref = this.objcClassPrefix_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.objcClassPrefix_ = b; return b; }  return (ByteString)ref; } public Builder setObjcClassPrefix(String value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x2000; this.objcClassPrefix_ = value; onChanged(); return this; } public Builder clearObjcClassPrefix() { this.bitField0_ &= 0xFFFFDFFF; this.objcClassPrefix_ = FileOptions.getDefaultInstance().getObjcClassPrefix(); onChanged(); return this; } public Builder setObjcClassPrefixBytes(ByteString value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x2000; this.objcClassPrefix_ = value; onChanged(); return this; } public boolean hasCsharpNamespace() { return ((this.bitField0_ & 0x4000) != 0); } public String getCsharpNamespace() { Object ref = this.csharpNamespace_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.csharpNamespace_ = s;  return s; }  return (String)ref; } public ByteString getCsharpNamespaceBytes() { Object ref = this.csharpNamespace_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.csharpNamespace_ = b; return b; }  return (ByteString)ref; } public Builder setCsharpNamespace(String value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x4000; this.csharpNamespace_ = value; onChanged(); return this; } public Builder clearCsharpNamespace() { this.bitField0_ &= 0xFFFFBFFF; this.csharpNamespace_ = FileOptions.getDefaultInstance().getCsharpNamespace(); onChanged(); return this; } public Builder setCsharpNamespaceBytes(ByteString value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x4000; this.csharpNamespace_ = value; onChanged(); return this; } public boolean hasSwiftPrefix() { return ((this.bitField0_ & 0x8000) != 0); } public String getSwiftPrefix() { Object ref = this.swiftPrefix_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.swiftPrefix_ = s;  return s; }  return (String)ref; } public ByteString getSwiftPrefixBytes() { Object ref = this.swiftPrefix_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.swiftPrefix_ = b; return b; }  return (ByteString)ref; } public Builder setSwiftPrefix(String value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x8000; this.swiftPrefix_ = value; onChanged(); return this; } public Builder clearSwiftPrefix() { this.bitField0_ &= 0xFFFF7FFF; this.swiftPrefix_ = FileOptions.getDefaultInstance().getSwiftPrefix(); onChanged(); return this; } public Builder setSwiftPrefixBytes(ByteString value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x8000; this.swiftPrefix_ = value; onChanged(); return this; } public boolean hasPhpClassPrefix() { return ((this.bitField0_ & 0x10000) != 0); } public String getPhpClassPrefix() { Object ref = this.phpClassPrefix_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.phpClassPrefix_ = s;  return s; }  return (String)ref; } public ByteString getPhpClassPrefixBytes() { Object ref = this.phpClassPrefix_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.phpClassPrefix_ = b; return b; }  return (ByteString)ref; } public Builder setPhpClassPrefix(String value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x10000; this.phpClassPrefix_ = value; onChanged(); return this; } public Builder clearPhpClassPrefix() { this.bitField0_ &= 0xFFFEFFFF; this.phpClassPrefix_ = FileOptions.getDefaultInstance().getPhpClassPrefix(); onChanged(); return this; } public Builder setPhpClassPrefixBytes(ByteString value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x10000; this.phpClassPrefix_ = value; onChanged(); return this; } public boolean hasPhpNamespace() { return ((this.bitField0_ & 0x20000) != 0); } public String getPhpNamespace() { Object ref = this.phpNamespace_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.phpNamespace_ = s;  return s; }  return (String)ref; } public ByteString getPhpNamespaceBytes() { Object ref = this.phpNamespace_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.phpNamespace_ = b; return b; }  return (ByteString)ref; } public Builder setPhpNamespace(String value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x20000; this.phpNamespace_ = value; onChanged(); return this; } public Builder clearPhpNamespace() { this.bitField0_ &= 0xFFFDFFFF; this.phpNamespace_ = FileOptions.getDefaultInstance().getPhpNamespace(); onChanged(); return this; } public Builder setPhpNamespaceBytes(ByteString value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x20000; this.phpNamespace_ = value; onChanged(); return this; } public boolean hasPhpMetadataNamespace() { return ((this.bitField0_ & 0x40000) != 0); } public String getPhpMetadataNamespace() { Object ref = this.phpMetadataNamespace_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.phpMetadataNamespace_ = s;  return s; }  return (String)ref; } public ByteString getPhpMetadataNamespaceBytes() { Object ref = this.phpMetadataNamespace_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.phpMetadataNamespace_ = b; return b; }  return (ByteString)ref; } public Builder setPhpMetadataNamespace(String value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x40000; this.phpMetadataNamespace_ = value; onChanged(); return this; } public Builder clearPhpMetadataNamespace() { this.bitField0_ &= 0xFFFBFFFF; this.phpMetadataNamespace_ = FileOptions.getDefaultInstance().getPhpMetadataNamespace(); onChanged(); return this; } public Builder setPhpMetadataNamespaceBytes(ByteString value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x40000; this.phpMetadataNamespace_ = value; onChanged(); return this; } public boolean hasRubyPackage() { return ((this.bitField0_ & 0x80000) != 0); } public String getRubyPackage() { Object ref = this.rubyPackage_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.rubyPackage_ = s;  return s; }  return (String)ref; } public ByteString getRubyPackageBytes() { Object ref = this.rubyPackage_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.rubyPackage_ = b; return b; }  return (ByteString)ref; } public Builder setRubyPackage(String value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x80000; this.rubyPackage_ = value; onChanged(); return this; } public Builder clearRubyPackage() { this.bitField0_ &= 0xFFF7FFFF; this.rubyPackage_ = FileOptions.getDefaultInstance().getRubyPackage(); onChanged(); return this; }
/*       */       public Builder setRubyPackageBytes(ByteString value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x80000; this.rubyPackage_ = value; onChanged(); return this; }
/* 26320 */       private void ensureUninterpretedOptionIsMutable() { if ((this.bitField0_ & 0x100000) == 0) {
/* 26321 */           this.uninterpretedOption_ = new ArrayList<>(this.uninterpretedOption_);
/* 26322 */           this.bitField0_ |= 0x100000;
/*       */         }  }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public List<UninterpretedOption> getUninterpretedOptionList() {
/* 26338 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 26339 */           return Collections.unmodifiableList(this.uninterpretedOption_);
/*       */         }
/* 26341 */         return this.uninterpretedOptionBuilder_.getMessageList();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getUninterpretedOptionCount() {
/* 26353 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 26354 */           return this.uninterpretedOption_.size();
/*       */         }
/* 26356 */         return this.uninterpretedOptionBuilder_.getCount();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public UninterpretedOption getUninterpretedOption(int index) {
/* 26368 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 26369 */           return this.uninterpretedOption_.get(index);
/*       */         }
/* 26371 */         return this.uninterpretedOptionBuilder_.getMessage(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setUninterpretedOption(int index, UninterpretedOption value) {
/* 26384 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 26385 */           if (value == null) {
/* 26386 */             throw new NullPointerException();
/*       */           }
/* 26388 */           ensureUninterpretedOptionIsMutable();
/* 26389 */           this.uninterpretedOption_.set(index, value);
/* 26390 */           onChanged();
/*       */         } else {
/* 26392 */           this.uninterpretedOptionBuilder_.setMessage(index, value);
/*       */         } 
/* 26394 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setUninterpretedOption(int index, UninterpretedOption.Builder builderForValue) {
/* 26406 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 26407 */           ensureUninterpretedOptionIsMutable();
/* 26408 */           this.uninterpretedOption_.set(index, builderForValue.build());
/* 26409 */           onChanged();
/*       */         } else {
/* 26411 */           this.uninterpretedOptionBuilder_.setMessage(index, builderForValue.build());
/*       */         } 
/* 26413 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addUninterpretedOption(UninterpretedOption value) {
/* 26424 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 26425 */           if (value == null) {
/* 26426 */             throw new NullPointerException();
/*       */           }
/* 26428 */           ensureUninterpretedOptionIsMutable();
/* 26429 */           this.uninterpretedOption_.add(value);
/* 26430 */           onChanged();
/*       */         } else {
/* 26432 */           this.uninterpretedOptionBuilder_.addMessage(value);
/*       */         } 
/* 26434 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addUninterpretedOption(int index, UninterpretedOption value) {
/* 26446 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 26447 */           if (value == null) {
/* 26448 */             throw new NullPointerException();
/*       */           }
/* 26450 */           ensureUninterpretedOptionIsMutable();
/* 26451 */           this.uninterpretedOption_.add(index, value);
/* 26452 */           onChanged();
/*       */         } else {
/* 26454 */           this.uninterpretedOptionBuilder_.addMessage(index, value);
/*       */         } 
/* 26456 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addUninterpretedOption(UninterpretedOption.Builder builderForValue) {
/* 26468 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 26469 */           ensureUninterpretedOptionIsMutable();
/* 26470 */           this.uninterpretedOption_.add(builderForValue.build());
/* 26471 */           onChanged();
/*       */         } else {
/* 26473 */           this.uninterpretedOptionBuilder_.addMessage(builderForValue.build());
/*       */         } 
/* 26475 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addUninterpretedOption(int index, UninterpretedOption.Builder builderForValue) {
/* 26487 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 26488 */           ensureUninterpretedOptionIsMutable();
/* 26489 */           this.uninterpretedOption_.add(index, builderForValue.build());
/* 26490 */           onChanged();
/*       */         } else {
/* 26492 */           this.uninterpretedOptionBuilder_.addMessage(index, builderForValue.build());
/*       */         } 
/* 26494 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addAllUninterpretedOption(Iterable<? extends UninterpretedOption> values) {
/* 26506 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 26507 */           ensureUninterpretedOptionIsMutable();
/* 26508 */           AbstractMessageLite.Builder.addAll(values, this.uninterpretedOption_);
/*       */           
/* 26510 */           onChanged();
/*       */         } else {
/* 26512 */           this.uninterpretedOptionBuilder_.addAllMessages(values);
/*       */         } 
/* 26514 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearUninterpretedOption() {
/* 26525 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 26526 */           this.uninterpretedOption_ = Collections.emptyList();
/* 26527 */           this.bitField0_ &= 0xFFEFFFFF;
/* 26528 */           onChanged();
/*       */         } else {
/* 26530 */           this.uninterpretedOptionBuilder_.clear();
/*       */         } 
/* 26532 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder removeUninterpretedOption(int index) {
/* 26543 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 26544 */           ensureUninterpretedOptionIsMutable();
/* 26545 */           this.uninterpretedOption_.remove(index);
/* 26546 */           onChanged();
/*       */         } else {
/* 26548 */           this.uninterpretedOptionBuilder_.remove(index);
/*       */         } 
/* 26550 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public UninterpretedOption.Builder getUninterpretedOptionBuilder(int index) {
/* 26562 */         return getUninterpretedOptionFieldBuilder().getBuilder(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public UninterpretedOptionOrBuilder getUninterpretedOptionOrBuilder(int index) {
/* 26574 */         if (this.uninterpretedOptionBuilder_ == null)
/* 26575 */           return this.uninterpretedOption_.get(index); 
/* 26576 */         return this.uninterpretedOptionBuilder_.getMessageOrBuilder(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public List<? extends UninterpretedOptionOrBuilder> getUninterpretedOptionOrBuilderList() {
/* 26589 */         if (this.uninterpretedOptionBuilder_ != null) {
/* 26590 */           return this.uninterpretedOptionBuilder_.getMessageOrBuilderList();
/*       */         }
/* 26592 */         return Collections.unmodifiableList((List)this.uninterpretedOption_);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public UninterpretedOption.Builder addUninterpretedOptionBuilder() {
/* 26604 */         return getUninterpretedOptionFieldBuilder().addBuilder(
/* 26605 */             UninterpretedOption.getDefaultInstance());
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public UninterpretedOption.Builder addUninterpretedOptionBuilder(int index) {
/* 26617 */         return getUninterpretedOptionFieldBuilder().addBuilder(index, 
/* 26618 */             UninterpretedOption.getDefaultInstance());
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public List<UninterpretedOption.Builder> getUninterpretedOptionBuilderList() {
/* 26630 */         return getUninterpretedOptionFieldBuilder().getBuilderList();
/*       */       }
/*       */ 
/*       */       
/*       */       private RepeatedFieldBuilderV3<UninterpretedOption, UninterpretedOption.Builder, UninterpretedOptionOrBuilder> getUninterpretedOptionFieldBuilder() {
/* 26635 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 26636 */           this
/*       */ 
/*       */ 
/*       */ 
/*       */             
/* 26641 */             .uninterpretedOptionBuilder_ = new RepeatedFieldBuilderV3<>(this.uninterpretedOption_, ((this.bitField0_ & 0x100000) != 0), getParentForChildren(), isClean());
/* 26642 */           this.uninterpretedOption_ = null;
/*       */         } 
/* 26644 */         return this.uninterpretedOptionBuilder_;
/*       */       }
/*       */ 
/*       */       
/*       */       public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
/* 26649 */         return super.setUnknownFields(unknownFields);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
/* 26655 */         return super.mergeUnknownFields(unknownFields);
/*       */       } }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 26665 */     private static final FileOptions DEFAULT_INSTANCE = new FileOptions();
/*       */ 
/*       */     
/*       */     public static FileOptions getDefaultInstance() {
/* 26669 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */     
/*       */     @Deprecated
/* 26673 */     public static final Parser<FileOptions> PARSER = new AbstractParser<FileOptions>()
/*       */       {
/*       */ 
/*       */         
/*       */         public FileOptions parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException
/*       */         {
/* 26679 */           return new FileOptions(input, extensionRegistry);
/*       */         }
/*       */       };
/*       */     
/*       */     public static Parser<FileOptions> parser() {
/* 26684 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public Parser<FileOptions> getParserForType() {
/* 26689 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public FileOptions getDefaultInstanceForType() {
/* 26694 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public static interface MessageOptionsOrBuilder
/*       */     extends GeneratedMessageV3.ExtendableMessageOrBuilder<MessageOptions>
/*       */   {
/*       */     boolean hasMessageSetWireFormat();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean getMessageSetWireFormat();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasNoStandardDescriptorAccessor();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean getNoStandardDescriptorAccessor();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasDeprecated();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean getDeprecated();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasMapEntry();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean getMapEntry();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     List<UninterpretedOption> getUninterpretedOptionList();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     UninterpretedOption getUninterpretedOption(int param1Int);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getUninterpretedOptionCount();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     List<? extends UninterpretedOptionOrBuilder> getUninterpretedOptionOrBuilderList();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     UninterpretedOptionOrBuilder getUninterpretedOptionOrBuilder(int param1Int);
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public static final class MessageOptions
/*       */     extends GeneratedMessageV3.ExtendableMessage<MessageOptions>
/*       */     implements MessageOptionsOrBuilder
/*       */   {
/*       */     private static final long serialVersionUID = 0L;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private int bitField0_;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int MESSAGE_SET_WIRE_FORMAT_FIELD_NUMBER = 1;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private boolean messageSetWireFormat_;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int NO_STANDARD_DESCRIPTOR_ACCESSOR_FIELD_NUMBER = 2;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private boolean noStandardDescriptorAccessor_;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int DEPRECATED_FIELD_NUMBER = 3;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private boolean deprecated_;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int MAP_ENTRY_FIELD_NUMBER = 7;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private boolean mapEntry_;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int UNINTERPRETED_OPTION_FIELD_NUMBER = 999;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private List<UninterpretedOption> uninterpretedOption_;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private byte memoizedIsInitialized;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private MessageOptions(GeneratedMessageV3.ExtendableBuilder<MessageOptions, ?> builder)
/*       */     {
/* 26907 */       super(builder);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/* 27249 */       this.memoizedIsInitialized = -1; } private MessageOptions() { this.memoizedIsInitialized = -1; this.uninterpretedOption_ = Collections.emptyList(); } protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) { return new MessageOptions(); } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private MessageOptions(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this(); if (extensionRegistry == null) throw new NullPointerException();  int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { int tag = input.readTag(); switch (tag) { case 0: done = true; continue;case 8: this.bitField0_ |= 0x1; this.messageSetWireFormat_ = input.readBool(); continue;case 16: this.bitField0_ |= 0x2; this.noStandardDescriptorAccessor_ = input.readBool(); continue;case 24: this.bitField0_ |= 0x4; this.deprecated_ = input.readBool(); continue;case 56: this.bitField0_ |= 0x8; this.mapEntry_ = input.readBool(); continue;case 7994: if ((mutable_bitField0_ & 0x10) == 0) { this.uninterpretedOption_ = new ArrayList<>(); mutable_bitField0_ |= 0x10; }  this.uninterpretedOption_.add(input.readMessage(UninterpretedOption.PARSER, extensionRegistry)); continue; }  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this); } finally { if ((mutable_bitField0_ & 0x10) != 0) this.uninterpretedOption_ = Collections.unmodifiableList(this.uninterpretedOption_);  this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return DescriptorProtos.internal_static_google_protobuf_MessageOptions_descriptor; } protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() { return DescriptorProtos.internal_static_google_protobuf_MessageOptions_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)MessageOptions.class, (Class)Builder.class); } public boolean hasMessageSetWireFormat() { return ((this.bitField0_ & 0x1) != 0); } public boolean getMessageSetWireFormat() { return this.messageSetWireFormat_; } public boolean hasNoStandardDescriptorAccessor() { return ((this.bitField0_ & 0x2) != 0); } public boolean getNoStandardDescriptorAccessor() { return this.noStandardDescriptorAccessor_; } public boolean hasDeprecated() { return ((this.bitField0_ & 0x4) != 0); } public boolean getDeprecated() { return this.deprecated_; } public boolean hasMapEntry() { return ((this.bitField0_ & 0x8) != 0); } public boolean getMapEntry() { return this.mapEntry_; } public List<UninterpretedOption> getUninterpretedOptionList() { return this.uninterpretedOption_; } public List<? extends UninterpretedOptionOrBuilder> getUninterpretedOptionOrBuilderList() { return (List)this.uninterpretedOption_; } public int getUninterpretedOptionCount() { return this.uninterpretedOption_.size(); }
/*       */     public UninterpretedOption getUninterpretedOption(int index) { return this.uninterpretedOption_.get(index); }
/*       */     public UninterpretedOptionOrBuilder getUninterpretedOptionOrBuilder(int index) { return this.uninterpretedOption_.get(index); }
/* 27252 */     public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized;
/* 27253 */       if (isInitialized == 1) return true; 
/* 27254 */       if (isInitialized == 0) return false;
/*       */       
/* 27256 */       for (int i = 0; i < getUninterpretedOptionCount(); i++) {
/* 27257 */         if (!getUninterpretedOption(i).isInitialized()) {
/* 27258 */           this.memoizedIsInitialized = 0;
/* 27259 */           return false;
/*       */         } 
/*       */       } 
/* 27262 */       if (!extensionsAreInitialized()) {
/* 27263 */         this.memoizedIsInitialized = 0;
/* 27264 */         return false;
/*       */       } 
/* 27266 */       this.memoizedIsInitialized = 1;
/* 27267 */       return true; }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/* 27275 */       GeneratedMessageV3.ExtendableMessage<MessageOptions>.ExtensionWriter extensionWriter = newExtensionWriter();
/* 27276 */       if ((this.bitField0_ & 0x1) != 0) {
/* 27277 */         output.writeBool(1, this.messageSetWireFormat_);
/*       */       }
/* 27279 */       if ((this.bitField0_ & 0x2) != 0) {
/* 27280 */         output.writeBool(2, this.noStandardDescriptorAccessor_);
/*       */       }
/* 27282 */       if ((this.bitField0_ & 0x4) != 0) {
/* 27283 */         output.writeBool(3, this.deprecated_);
/*       */       }
/* 27285 */       if ((this.bitField0_ & 0x8) != 0) {
/* 27286 */         output.writeBool(7, this.mapEntry_);
/*       */       }
/* 27288 */       for (int i = 0; i < this.uninterpretedOption_.size(); i++) {
/* 27289 */         output.writeMessage(999, this.uninterpretedOption_.get(i));
/*       */       }
/* 27291 */       extensionWriter.writeUntil(536870912, output);
/* 27292 */       this.unknownFields.writeTo(output);
/*       */     }
/*       */ 
/*       */     
/*       */     public int getSerializedSize() {
/* 27297 */       int size = this.memoizedSize;
/* 27298 */       if (size != -1) return size;
/*       */       
/* 27300 */       size = 0;
/* 27301 */       if ((this.bitField0_ & 0x1) != 0) {
/* 27302 */         size += 
/* 27303 */           CodedOutputStream.computeBoolSize(1, this.messageSetWireFormat_);
/*       */       }
/* 27305 */       if ((this.bitField0_ & 0x2) != 0) {
/* 27306 */         size += 
/* 27307 */           CodedOutputStream.computeBoolSize(2, this.noStandardDescriptorAccessor_);
/*       */       }
/* 27309 */       if ((this.bitField0_ & 0x4) != 0) {
/* 27310 */         size += 
/* 27311 */           CodedOutputStream.computeBoolSize(3, this.deprecated_);
/*       */       }
/* 27313 */       if ((this.bitField0_ & 0x8) != 0) {
/* 27314 */         size += 
/* 27315 */           CodedOutputStream.computeBoolSize(7, this.mapEntry_);
/*       */       }
/* 27317 */       for (int i = 0; i < this.uninterpretedOption_.size(); i++) {
/* 27318 */         size += 
/* 27319 */           CodedOutputStream.computeMessageSize(999, this.uninterpretedOption_.get(i));
/*       */       }
/* 27321 */       size += extensionsSerializedSize();
/* 27322 */       size += this.unknownFields.getSerializedSize();
/* 27323 */       this.memoizedSize = size;
/* 27324 */       return size;
/*       */     }
/*       */ 
/*       */     
/*       */     public boolean equals(Object obj) {
/* 27329 */       if (obj == this) {
/* 27330 */         return true;
/*       */       }
/* 27332 */       if (!(obj instanceof MessageOptions)) {
/* 27333 */         return super.equals(obj);
/*       */       }
/* 27335 */       MessageOptions other = (MessageOptions)obj;
/*       */       
/* 27337 */       if (hasMessageSetWireFormat() != other.hasMessageSetWireFormat()) return false; 
/* 27338 */       if (hasMessageSetWireFormat() && 
/* 27339 */         getMessageSetWireFormat() != other
/* 27340 */         .getMessageSetWireFormat()) return false;
/*       */       
/* 27342 */       if (hasNoStandardDescriptorAccessor() != other.hasNoStandardDescriptorAccessor()) return false; 
/* 27343 */       if (hasNoStandardDescriptorAccessor() && 
/* 27344 */         getNoStandardDescriptorAccessor() != other
/* 27345 */         .getNoStandardDescriptorAccessor()) return false;
/*       */       
/* 27347 */       if (hasDeprecated() != other.hasDeprecated()) return false; 
/* 27348 */       if (hasDeprecated() && 
/* 27349 */         getDeprecated() != other
/* 27350 */         .getDeprecated()) return false;
/*       */       
/* 27352 */       if (hasMapEntry() != other.hasMapEntry()) return false; 
/* 27353 */       if (hasMapEntry() && 
/* 27354 */         getMapEntry() != other
/* 27355 */         .getMapEntry()) return false;
/*       */ 
/*       */       
/* 27358 */       if (!getUninterpretedOptionList().equals(other.getUninterpretedOptionList())) return false; 
/* 27359 */       if (!this.unknownFields.equals(other.unknownFields)) return false; 
/* 27360 */       if (!getExtensionFields().equals(other.getExtensionFields()))
/* 27361 */         return false; 
/* 27362 */       return true;
/*       */     }
/*       */ 
/*       */     
/*       */     public int hashCode() {
/* 27367 */       if (this.memoizedHashCode != 0) {
/* 27368 */         return this.memoizedHashCode;
/*       */       }
/* 27370 */       int hash = 41;
/* 27371 */       hash = 19 * hash + getDescriptor().hashCode();
/* 27372 */       if (hasMessageSetWireFormat()) {
/* 27373 */         hash = 37 * hash + 1;
/* 27374 */         hash = 53 * hash + Internal.hashBoolean(
/* 27375 */             getMessageSetWireFormat());
/*       */       } 
/* 27377 */       if (hasNoStandardDescriptorAccessor()) {
/* 27378 */         hash = 37 * hash + 2;
/* 27379 */         hash = 53 * hash + Internal.hashBoolean(
/* 27380 */             getNoStandardDescriptorAccessor());
/*       */       } 
/* 27382 */       if (hasDeprecated()) {
/* 27383 */         hash = 37 * hash + 3;
/* 27384 */         hash = 53 * hash + Internal.hashBoolean(
/* 27385 */             getDeprecated());
/*       */       } 
/* 27387 */       if (hasMapEntry()) {
/* 27388 */         hash = 37 * hash + 7;
/* 27389 */         hash = 53 * hash + Internal.hashBoolean(
/* 27390 */             getMapEntry());
/*       */       } 
/* 27392 */       if (getUninterpretedOptionCount() > 0) {
/* 27393 */         hash = 37 * hash + 999;
/* 27394 */         hash = 53 * hash + getUninterpretedOptionList().hashCode();
/*       */       } 
/* 27396 */       hash = hashFields(hash, getExtensionFields());
/* 27397 */       hash = 29 * hash + this.unknownFields.hashCode();
/* 27398 */       this.memoizedHashCode = hash;
/* 27399 */       return hash;
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static MessageOptions parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
/* 27405 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static MessageOptions parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 27411 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static MessageOptions parseFrom(ByteString data) throws InvalidProtocolBufferException {
/* 27416 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static MessageOptions parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 27422 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static MessageOptions parseFrom(byte[] data) throws InvalidProtocolBufferException {
/* 27426 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static MessageOptions parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 27432 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static MessageOptions parseFrom(InputStream input) throws IOException {
/* 27436 */       return 
/* 27437 */         GeneratedMessageV3.<MessageOptions>parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static MessageOptions parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 27443 */       return 
/* 27444 */         GeneratedMessageV3.<MessageOptions>parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static MessageOptions parseDelimitedFrom(InputStream input) throws IOException {
/* 27448 */       return 
/* 27449 */         GeneratedMessageV3.<MessageOptions>parseDelimitedWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static MessageOptions parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 27455 */       return 
/* 27456 */         GeneratedMessageV3.<MessageOptions>parseDelimitedWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static MessageOptions parseFrom(CodedInputStream input) throws IOException {
/* 27461 */       return 
/* 27462 */         GeneratedMessageV3.<MessageOptions>parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static MessageOptions parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 27468 */       return 
/* 27469 */         GeneratedMessageV3.<MessageOptions>parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public Builder newBuilderForType() {
/* 27473 */       return newBuilder();
/*       */     } public static Builder newBuilder() {
/* 27475 */       return DEFAULT_INSTANCE.toBuilder();
/*       */     }
/*       */     public static Builder newBuilder(MessageOptions prototype) {
/* 27478 */       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
/*       */     }
/*       */     
/*       */     public Builder toBuilder() {
/* 27482 */       return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder())
/* 27483 */         .mergeFrom(this);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
/* 27489 */       Builder builder = new Builder(parent);
/* 27490 */       return builder;
/*       */     }
/*       */     
/*       */     public static final class Builder extends GeneratedMessageV3.ExtendableBuilder<MessageOptions, Builder> implements MessageOptionsOrBuilder { private int bitField0_;
/*       */       private boolean messageSetWireFormat_;
/*       */       private boolean noStandardDescriptorAccessor_;
/*       */       private boolean deprecated_;
/*       */       private boolean mapEntry_;
/*       */       private List<UninterpretedOption> uninterpretedOption_;
/*       */       private RepeatedFieldBuilderV3<UninterpretedOption, UninterpretedOption.Builder, UninterpretedOptionOrBuilder> uninterpretedOptionBuilder_;
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/* 27502 */         return DescriptorProtos.internal_static_google_protobuf_MessageOptions_descriptor;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
/* 27508 */         return DescriptorProtos.internal_static_google_protobuf_MessageOptions_fieldAccessorTable
/* 27509 */           .ensureFieldAccessorsInitialized((Class) MessageOptions.class, (Class)Builder.class);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private Builder()
/*       */       {
/* 28116 */         this
/* 28117 */           .uninterpretedOption_ = Collections.emptyList(); maybeForceBuilderInitialization(); } private Builder(GeneratedMessageV3.BuilderParent parent) { super(parent); this.uninterpretedOption_ = Collections.emptyList(); maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (GeneratedMessageV3.alwaysUseFieldBuilders) getUninterpretedOptionFieldBuilder();  } public Builder clear() { super.clear(); this.messageSetWireFormat_ = false; this.bitField0_ &= 0xFFFFFFFE; this.noStandardDescriptorAccessor_ = false; this.bitField0_ &= 0xFFFFFFFD; this.deprecated_ = false; this.bitField0_ &= 0xFFFFFFFB; this.mapEntry_ = false; this.bitField0_ &= 0xFFFFFFF7; if (this.uninterpretedOptionBuilder_ == null) { this.uninterpretedOption_ = Collections.emptyList(); this.bitField0_ &= 0xFFFFFFEF; } else { this.uninterpretedOptionBuilder_.clear(); }  return this; } public Descriptors.Descriptor getDescriptorForType() { return DescriptorProtos.internal_static_google_protobuf_MessageOptions_descriptor; } public MessageOptions getDefaultInstanceForType() { return MessageOptions.getDefaultInstance(); } public MessageOptions build() { MessageOptions result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public MessageOptions buildPartial() { MessageOptions result = new MessageOptions(this); int from_bitField0_ = this.bitField0_; int to_bitField0_ = 0; if ((from_bitField0_ & 0x1) != 0) { result.messageSetWireFormat_ = this.messageSetWireFormat_; to_bitField0_ |= 0x1; }  if ((from_bitField0_ & 0x2) != 0) { result.noStandardDescriptorAccessor_ = this.noStandardDescriptorAccessor_; to_bitField0_ |= 0x2; }  if ((from_bitField0_ & 0x4) != 0) { result.deprecated_ = this.deprecated_; to_bitField0_ |= 0x4; }  if ((from_bitField0_ & 0x8) != 0) { result.mapEntry_ = this.mapEntry_; to_bitField0_ |= 0x8; }  if (this.uninterpretedOptionBuilder_ == null) { if ((this.bitField0_ & 0x10) != 0) { this.uninterpretedOption_ = Collections.unmodifiableList(this.uninterpretedOption_); this.bitField0_ &= 0xFFFFFFEF; }  result.uninterpretedOption_ = this.uninterpretedOption_; } else { result.uninterpretedOption_ = this.uninterpretedOptionBuilder_.build(); }  result.bitField0_ = to_bitField0_; onBuilt(); return result; } public Builder clone() { return super.clone(); } public Builder setField(Descriptors.FieldDescriptor field, Object value) { return super.setField(field, value); } public Builder clearField(Descriptors.FieldDescriptor field) { return super.clearField(field); } public Builder clearOneof(Descriptors.OneofDescriptor oneof) { return super.clearOneof(oneof); } public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) { return super.setRepeatedField(field, index, value); } public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) { return super.addRepeatedField(field, value); } public <Type> Builder setExtension(GeneratedMessage.GeneratedExtension<MessageOptions, Type> extension, Type value) { return super.<Type>setExtension(extension, value); } public <Type> Builder setExtension(GeneratedMessage.GeneratedExtension<MessageOptions, List<Type>> extension, int index, Type value) { return super.<Type>setExtension(extension, index, value); } public <Type> Builder addExtension(GeneratedMessage.GeneratedExtension<MessageOptions, List<Type>> extension, Type value) { return super.<Type>addExtension(extension, value); } public <Type> Builder clearExtension(GeneratedMessage.GeneratedExtension<MessageOptions, ?> extension) { return super.clearExtension(extension); } public Builder mergeFrom(Message other) { if (other instanceof MessageOptions) return mergeFrom((MessageOptions)other);  super.mergeFrom(other); return this; } public Builder mergeFrom(MessageOptions other) { if (other == MessageOptions.getDefaultInstance()) return this;  if (other.hasMessageSetWireFormat()) setMessageSetWireFormat(other.getMessageSetWireFormat());  if (other.hasNoStandardDescriptorAccessor()) setNoStandardDescriptorAccessor(other.getNoStandardDescriptorAccessor());  if (other.hasDeprecated()) setDeprecated(other.getDeprecated());  if (other.hasMapEntry()) setMapEntry(other.getMapEntry());  if (this.uninterpretedOptionBuilder_ == null) { if (!other.uninterpretedOption_.isEmpty()) { if (this.uninterpretedOption_.isEmpty()) { this.uninterpretedOption_ = other.uninterpretedOption_; this.bitField0_ &= 0xFFFFFFEF; } else { ensureUninterpretedOptionIsMutable(); this.uninterpretedOption_.addAll(other.uninterpretedOption_); }  onChanged(); }  } else if (!other.uninterpretedOption_.isEmpty()) { if (this.uninterpretedOptionBuilder_.isEmpty()) { this.uninterpretedOptionBuilder_.dispose(); this.uninterpretedOptionBuilder_ = null; this.uninterpretedOption_ = other.uninterpretedOption_; this.bitField0_ &= 0xFFFFFFEF; this.uninterpretedOptionBuilder_ = GeneratedMessageV3.alwaysUseFieldBuilders ? getUninterpretedOptionFieldBuilder() : null; } else { this.uninterpretedOptionBuilder_.addAllMessages(other.uninterpretedOption_); }  }  mergeExtensionFields(other); mergeUnknownFields(other.unknownFields); onChanged(); return this; } public final boolean isInitialized() { for (int i = 0; i < getUninterpretedOptionCount(); i++) { if (!getUninterpretedOption(i).isInitialized()) return false;  }  if (!extensionsAreInitialized()) return false;  return true; } public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { MessageOptions parsedMessage = null; try { parsedMessage = MessageOptions.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (MessageOptions)e.getUnfinishedMessage(); throw e.unwrapIOException(); } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; } public boolean hasMessageSetWireFormat() { return ((this.bitField0_ & 0x1) != 0); } public boolean getMessageSetWireFormat() { return this.messageSetWireFormat_; } public Builder setMessageSetWireFormat(boolean value) { this.bitField0_ |= 0x1; this.messageSetWireFormat_ = value; onChanged(); return this; } public Builder clearMessageSetWireFormat() { this.bitField0_ &= 0xFFFFFFFE; this.messageSetWireFormat_ = false; onChanged(); return this; } public boolean hasNoStandardDescriptorAccessor() { return ((this.bitField0_ & 0x2) != 0); } public boolean getNoStandardDescriptorAccessor() { return this.noStandardDescriptorAccessor_; } public Builder setNoStandardDescriptorAccessor(boolean value) { this.bitField0_ |= 0x2; this.noStandardDescriptorAccessor_ = value; onChanged(); return this; } public Builder clearNoStandardDescriptorAccessor() { this.bitField0_ &= 0xFFFFFFFD; this.noStandardDescriptorAccessor_ = false; onChanged(); return this; } public boolean hasDeprecated() { return ((this.bitField0_ & 0x4) != 0); } public boolean getDeprecated() { return this.deprecated_; } public Builder setDeprecated(boolean value) { this.bitField0_ |= 0x4; this.deprecated_ = value; onChanged(); return this; } public Builder clearDeprecated() { this.bitField0_ &= 0xFFFFFFFB; this.deprecated_ = false; onChanged(); return this; } public boolean hasMapEntry() { return ((this.bitField0_ & 0x8) != 0); } public boolean getMapEntry() { return this.mapEntry_; } public Builder setMapEntry(boolean value) { this.bitField0_ |= 0x8; this.mapEntry_ = value; onChanged(); return this; }
/*       */       public Builder clearMapEntry() { this.bitField0_ &= 0xFFFFFFF7; this.mapEntry_ = false; onChanged(); return this; }
/* 28119 */       private void ensureUninterpretedOptionIsMutable() { if ((this.bitField0_ & 0x10) == 0) {
/* 28120 */           this.uninterpretedOption_ = new ArrayList<>(this.uninterpretedOption_);
/* 28121 */           this.bitField0_ |= 0x10;
/*       */         }  }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public List<UninterpretedOption> getUninterpretedOptionList() {
/* 28136 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 28137 */           return Collections.unmodifiableList(this.uninterpretedOption_);
/*       */         }
/* 28139 */         return this.uninterpretedOptionBuilder_.getMessageList();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getUninterpretedOptionCount() {
/* 28150 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 28151 */           return this.uninterpretedOption_.size();
/*       */         }
/* 28153 */         return this.uninterpretedOptionBuilder_.getCount();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public UninterpretedOption getUninterpretedOption(int index) {
/* 28164 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 28165 */           return this.uninterpretedOption_.get(index);
/*       */         }
/* 28167 */         return this.uninterpretedOptionBuilder_.getMessage(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setUninterpretedOption(int index, UninterpretedOption value) {
/* 28179 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 28180 */           if (value == null) {
/* 28181 */             throw new NullPointerException();
/*       */           }
/* 28183 */           ensureUninterpretedOptionIsMutable();
/* 28184 */           this.uninterpretedOption_.set(index, value);
/* 28185 */           onChanged();
/*       */         } else {
/* 28187 */           this.uninterpretedOptionBuilder_.setMessage(index, value);
/*       */         } 
/* 28189 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setUninterpretedOption(int index, UninterpretedOption.Builder builderForValue) {
/* 28200 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 28201 */           ensureUninterpretedOptionIsMutable();
/* 28202 */           this.uninterpretedOption_.set(index, builderForValue.build());
/* 28203 */           onChanged();
/*       */         } else {
/* 28205 */           this.uninterpretedOptionBuilder_.setMessage(index, builderForValue.build());
/*       */         } 
/* 28207 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addUninterpretedOption(UninterpretedOption value) {
/* 28217 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 28218 */           if (value == null) {
/* 28219 */             throw new NullPointerException();
/*       */           }
/* 28221 */           ensureUninterpretedOptionIsMutable();
/* 28222 */           this.uninterpretedOption_.add(value);
/* 28223 */           onChanged();
/*       */         } else {
/* 28225 */           this.uninterpretedOptionBuilder_.addMessage(value);
/*       */         } 
/* 28227 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addUninterpretedOption(int index, UninterpretedOption value) {
/* 28238 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 28239 */           if (value == null) {
/* 28240 */             throw new NullPointerException();
/*       */           }
/* 28242 */           ensureUninterpretedOptionIsMutable();
/* 28243 */           this.uninterpretedOption_.add(index, value);
/* 28244 */           onChanged();
/*       */         } else {
/* 28246 */           this.uninterpretedOptionBuilder_.addMessage(index, value);
/*       */         } 
/* 28248 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addUninterpretedOption(UninterpretedOption.Builder builderForValue) {
/* 28259 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 28260 */           ensureUninterpretedOptionIsMutable();
/* 28261 */           this.uninterpretedOption_.add(builderForValue.build());
/* 28262 */           onChanged();
/*       */         } else {
/* 28264 */           this.uninterpretedOptionBuilder_.addMessage(builderForValue.build());
/*       */         } 
/* 28266 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addUninterpretedOption(int index, UninterpretedOption.Builder builderForValue) {
/* 28277 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 28278 */           ensureUninterpretedOptionIsMutable();
/* 28279 */           this.uninterpretedOption_.add(index, builderForValue.build());
/* 28280 */           onChanged();
/*       */         } else {
/* 28282 */           this.uninterpretedOptionBuilder_.addMessage(index, builderForValue.build());
/*       */         } 
/* 28284 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addAllUninterpretedOption(Iterable<? extends UninterpretedOption> values) {
/* 28295 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 28296 */           ensureUninterpretedOptionIsMutable();
/* 28297 */           AbstractMessageLite.Builder.addAll(values, this.uninterpretedOption_);
/*       */           
/* 28299 */           onChanged();
/*       */         } else {
/* 28301 */           this.uninterpretedOptionBuilder_.addAllMessages(values);
/*       */         } 
/* 28303 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearUninterpretedOption() {
/* 28313 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 28314 */           this.uninterpretedOption_ = Collections.emptyList();
/* 28315 */           this.bitField0_ &= 0xFFFFFFEF;
/* 28316 */           onChanged();
/*       */         } else {
/* 28318 */           this.uninterpretedOptionBuilder_.clear();
/*       */         } 
/* 28320 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder removeUninterpretedOption(int index) {
/* 28330 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 28331 */           ensureUninterpretedOptionIsMutable();
/* 28332 */           this.uninterpretedOption_.remove(index);
/* 28333 */           onChanged();
/*       */         } else {
/* 28335 */           this.uninterpretedOptionBuilder_.remove(index);
/*       */         } 
/* 28337 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public UninterpretedOption.Builder getUninterpretedOptionBuilder(int index) {
/* 28348 */         return getUninterpretedOptionFieldBuilder().getBuilder(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public UninterpretedOptionOrBuilder getUninterpretedOptionOrBuilder(int index) {
/* 28359 */         if (this.uninterpretedOptionBuilder_ == null)
/* 28360 */           return this.uninterpretedOption_.get(index); 
/* 28361 */         return this.uninterpretedOptionBuilder_.getMessageOrBuilder(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public List<? extends UninterpretedOptionOrBuilder> getUninterpretedOptionOrBuilderList() {
/* 28373 */         if (this.uninterpretedOptionBuilder_ != null) {
/* 28374 */           return this.uninterpretedOptionBuilder_.getMessageOrBuilderList();
/*       */         }
/* 28376 */         return Collections.unmodifiableList((List)this.uninterpretedOption_);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public UninterpretedOption.Builder addUninterpretedOptionBuilder() {
/* 28387 */         return getUninterpretedOptionFieldBuilder().addBuilder(
/* 28388 */             UninterpretedOption.getDefaultInstance());
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public UninterpretedOption.Builder addUninterpretedOptionBuilder(int index) {
/* 28399 */         return getUninterpretedOptionFieldBuilder().addBuilder(index, 
/* 28400 */             UninterpretedOption.getDefaultInstance());
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public List<UninterpretedOption.Builder> getUninterpretedOptionBuilderList() {
/* 28411 */         return getUninterpretedOptionFieldBuilder().getBuilderList();
/*       */       }
/*       */ 
/*       */       
/*       */       private RepeatedFieldBuilderV3<UninterpretedOption, UninterpretedOption.Builder, UninterpretedOptionOrBuilder> getUninterpretedOptionFieldBuilder() {
/* 28416 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 28417 */           this
/*       */ 
/*       */ 
/*       */ 
/*       */             
/* 28422 */             .uninterpretedOptionBuilder_ = new RepeatedFieldBuilderV3<>(this.uninterpretedOption_, ((this.bitField0_ & 0x10) != 0), getParentForChildren(), isClean());
/* 28423 */           this.uninterpretedOption_ = null;
/*       */         } 
/* 28425 */         return this.uninterpretedOptionBuilder_;
/*       */       }
/*       */ 
/*       */       
/*       */       public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
/* 28430 */         return super.setUnknownFields(unknownFields);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
/* 28436 */         return super.mergeUnknownFields(unknownFields);
/*       */       } }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 28446 */     private static final MessageOptions DEFAULT_INSTANCE = new MessageOptions();
/*       */ 
/*       */     
/*       */     public static MessageOptions getDefaultInstance() {
/* 28450 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */     
/*       */     @Deprecated
/* 28454 */     public static final Parser<MessageOptions> PARSER = new AbstractParser<MessageOptions>()
/*       */       {
/*       */ 
/*       */         
/*       */         public MessageOptions parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException
/*       */         {
/* 28460 */           return new MessageOptions(input, extensionRegistry);
/*       */         }
/*       */       };
/*       */     
/*       */     public static Parser<MessageOptions> parser() {
/* 28465 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public Parser<MessageOptions> getParserForType() {
/* 28470 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public MessageOptions getDefaultInstanceForType() {
/* 28475 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public static interface FieldOptionsOrBuilder
/*       */     extends GeneratedMessageV3.ExtendableMessageOrBuilder<FieldOptions>
/*       */   {
/*       */     boolean hasCtype();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     FieldOptions.CType getCtype();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasPacked();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean getPacked();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasJstype();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     FieldOptions.JSType getJstype();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasLazy();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean getLazy();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasDeprecated();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean getDeprecated();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasWeak();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean getWeak();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     List<UninterpretedOption> getUninterpretedOptionList();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     UninterpretedOption getUninterpretedOption(int param1Int);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getUninterpretedOptionCount();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     List<? extends UninterpretedOptionOrBuilder> getUninterpretedOptionOrBuilderList();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     UninterpretedOptionOrBuilder getUninterpretedOptionOrBuilder(int param1Int);
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public static final class FieldOptions
/*       */     extends GeneratedMessageV3.ExtendableMessage<FieldOptions>
/*       */     implements FieldOptionsOrBuilder
/*       */   {
/*       */     private static final long serialVersionUID = 0L;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private int bitField0_;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int CTYPE_FIELD_NUMBER = 1;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private int ctype_;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int PACKED_FIELD_NUMBER = 2;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private boolean packed_;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int JSTYPE_FIELD_NUMBER = 6;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private int jstype_;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int LAZY_FIELD_NUMBER = 5;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private boolean lazy_;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int DEPRECATED_FIELD_NUMBER = 3;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private boolean deprecated_;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int WEAK_FIELD_NUMBER = 10;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private boolean weak_;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int UNINTERPRETED_OPTION_FIELD_NUMBER = 999;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private List<UninterpretedOption> uninterpretedOption_;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private byte memoizedIsInitialized;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private FieldOptions(GeneratedMessageV3.ExtendableBuilder<FieldOptions, ?> builder)
/*       */     {
/* 28738 */       super(builder);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/* 29414 */       this.memoizedIsInitialized = -1; } private FieldOptions() { this.memoizedIsInitialized = -1; this.ctype_ = 0; this.jstype_ = 0; this.uninterpretedOption_ = Collections.emptyList(); } protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) { return new FieldOptions(); } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private FieldOptions(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this(); if (extensionRegistry == null) throw new NullPointerException();  int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { int rawValue; CType cType; JSType value; int tag = input.readTag(); switch (tag) { case 0: done = true; continue;case 8: rawValue = input.readEnum(); cType = CType.valueOf(rawValue); if (cType == null) { unknownFields.mergeVarintField(1, rawValue); continue; }  this.bitField0_ |= 0x1; this.ctype_ = rawValue; continue;case 16: this.bitField0_ |= 0x2; this.packed_ = input.readBool(); continue;case 24: this.bitField0_ |= 0x10; this.deprecated_ = input.readBool(); continue;case 40: this.bitField0_ |= 0x8; this.lazy_ = input.readBool(); continue;case 48: rawValue = input.readEnum(); value = JSType.valueOf(rawValue); if (value == null) { unknownFields.mergeVarintField(6, rawValue); continue; }  this.bitField0_ |= 0x4; this.jstype_ = rawValue; continue;case 80: this.bitField0_ |= 0x20; this.weak_ = input.readBool(); continue;case 7994: if ((mutable_bitField0_ & 0x40) == 0) { this.uninterpretedOption_ = new ArrayList<>(); mutable_bitField0_ |= 0x40; }  this.uninterpretedOption_.add(input.readMessage(UninterpretedOption.PARSER, extensionRegistry)); continue; }  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this); } finally { if ((mutable_bitField0_ & 0x40) != 0) this.uninterpretedOption_ = Collections.unmodifiableList(this.uninterpretedOption_);  this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return DescriptorProtos.internal_static_google_protobuf_FieldOptions_descriptor; } protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() { return DescriptorProtos.internal_static_google_protobuf_FieldOptions_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)FieldOptions.class, (Class)Builder.class); } public enum CType implements ProtocolMessageEnum {
/*       */       STRING(0), CORD(1), STRING_PIECE(2); public static final int STRING_VALUE = 0; public static final int CORD_VALUE = 1; public static final int STRING_PIECE_VALUE = 2; private static final Internal.EnumLiteMap<CType> internalValueMap = new Internal.EnumLiteMap<CType>() { public CType findValueByNumber(int number) { return CType.forNumber(number); } }
/*       */       ; private static final CType[] VALUES = values(); private final int value; public final int getNumber() { return this.value; } public static CType forNumber(int value) { switch (value) { case 0: return STRING;case 1: return CORD;case 2: return STRING_PIECE; }  return null; } public static Internal.EnumLiteMap<CType> internalGetValueMap() { return internalValueMap; } static {  } public final Descriptors.EnumValueDescriptor getValueDescriptor() { return getDescriptor().getValues().get(ordinal()); } public final Descriptors.EnumDescriptor getDescriptorForType() { return getDescriptor(); } public static final Descriptors.EnumDescriptor getDescriptor() { return FieldOptions.getDescriptor().getEnumTypes().get(0); } CType(int value) { this.value = value; } } public enum JSType implements ProtocolMessageEnum {
/* 29417 */       JS_NORMAL(0), JS_STRING(1), JS_NUMBER(2); public static final int JS_NORMAL_VALUE = 0; public static final int JS_STRING_VALUE = 1; public static final int JS_NUMBER_VALUE = 2; private static final Internal.EnumLiteMap<JSType> internalValueMap = new Internal.EnumLiteMap<JSType>() { public JSType findValueByNumber(int number) { return JSType.forNumber(number); } }; private static final JSType[] VALUES = values(); private final int value; public final int getNumber() { return this.value; } public static JSType forNumber(int value) { switch (value) { case 0: return JS_NORMAL;case 1: return JS_STRING;case 2: return JS_NUMBER; }  return null; } public static Internal.EnumLiteMap<JSType> internalGetValueMap() { return internalValueMap; } static {  } public final Descriptors.EnumValueDescriptor getValueDescriptor() { return getDescriptor().getValues().get(ordinal()); } public final Descriptors.EnumDescriptor getDescriptorForType() { return getDescriptor(); } public static final Descriptors.EnumDescriptor getDescriptor() { return FieldOptions.getDescriptor().getEnumTypes().get(1); } JSType(int value) { this.value = value; } } public boolean hasCtype() { return ((this.bitField0_ & 0x1) != 0); } public CType getCtype() { CType result = CType.valueOf(this.ctype_); return (result == null) ? CType.STRING : result; } public boolean hasPacked() { return ((this.bitField0_ & 0x2) != 0); } public boolean getPacked() { return this.packed_; } public boolean hasJstype() { return ((this.bitField0_ & 0x4) != 0); } public JSType getJstype() { JSType result = JSType.valueOf(this.jstype_); return (result == null) ? JSType.JS_NORMAL : result; } public boolean hasLazy() { return ((this.bitField0_ & 0x8) != 0); } public boolean getLazy() { return this.lazy_; } public boolean hasDeprecated() { return ((this.bitField0_ & 0x10) != 0); } public boolean getDeprecated() { return this.deprecated_; } public boolean hasWeak() { return ((this.bitField0_ & 0x20) != 0); } public boolean getWeak() { return this.weak_; } public List<UninterpretedOption> getUninterpretedOptionList() { return this.uninterpretedOption_; } public List<? extends UninterpretedOptionOrBuilder> getUninterpretedOptionOrBuilderList() { return (List)this.uninterpretedOption_; } public int getUninterpretedOptionCount() { return this.uninterpretedOption_.size(); } public UninterpretedOption getUninterpretedOption(int index) { return this.uninterpretedOption_.get(index); } public UninterpretedOptionOrBuilder getUninterpretedOptionOrBuilder(int index) { return this.uninterpretedOption_.get(index); } public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized;
/* 29418 */       if (isInitialized == 1) return true; 
/* 29419 */       if (isInitialized == 0) return false;
/*       */       
/* 29421 */       for (int i = 0; i < getUninterpretedOptionCount(); i++) {
/* 29422 */         if (!getUninterpretedOption(i).isInitialized()) {
/* 29423 */           this.memoizedIsInitialized = 0;
/* 29424 */           return false;
/*       */         } 
/*       */       } 
/* 29427 */       if (!extensionsAreInitialized()) {
/* 29428 */         this.memoizedIsInitialized = 0;
/* 29429 */         return false;
/*       */       } 
/* 29431 */       this.memoizedIsInitialized = 1;
/* 29432 */       return true; }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/* 29440 */       GeneratedMessageV3.ExtendableMessage<FieldOptions>.ExtensionWriter extensionWriter = newExtensionWriter();
/* 29441 */       if ((this.bitField0_ & 0x1) != 0) {
/* 29442 */         output.writeEnum(1, this.ctype_);
/*       */       }
/* 29444 */       if ((this.bitField0_ & 0x2) != 0) {
/* 29445 */         output.writeBool(2, this.packed_);
/*       */       }
/* 29447 */       if ((this.bitField0_ & 0x10) != 0) {
/* 29448 */         output.writeBool(3, this.deprecated_);
/*       */       }
/* 29450 */       if ((this.bitField0_ & 0x8) != 0) {
/* 29451 */         output.writeBool(5, this.lazy_);
/*       */       }
/* 29453 */       if ((this.bitField0_ & 0x4) != 0) {
/* 29454 */         output.writeEnum(6, this.jstype_);
/*       */       }
/* 29456 */       if ((this.bitField0_ & 0x20) != 0) {
/* 29457 */         output.writeBool(10, this.weak_);
/*       */       }
/* 29459 */       for (int i = 0; i < this.uninterpretedOption_.size(); i++) {
/* 29460 */         output.writeMessage(999, this.uninterpretedOption_.get(i));
/*       */       }
/* 29462 */       extensionWriter.writeUntil(536870912, output);
/* 29463 */       this.unknownFields.writeTo(output);
/*       */     }
/*       */ 
/*       */     
/*       */     public int getSerializedSize() {
/* 29468 */       int size = this.memoizedSize;
/* 29469 */       if (size != -1) return size;
/*       */       
/* 29471 */       size = 0;
/* 29472 */       if ((this.bitField0_ & 0x1) != 0) {
/* 29473 */         size += 
/* 29474 */           CodedOutputStream.computeEnumSize(1, this.ctype_);
/*       */       }
/* 29476 */       if ((this.bitField0_ & 0x2) != 0) {
/* 29477 */         size += 
/* 29478 */           CodedOutputStream.computeBoolSize(2, this.packed_);
/*       */       }
/* 29480 */       if ((this.bitField0_ & 0x10) != 0) {
/* 29481 */         size += 
/* 29482 */           CodedOutputStream.computeBoolSize(3, this.deprecated_);
/*       */       }
/* 29484 */       if ((this.bitField0_ & 0x8) != 0) {
/* 29485 */         size += 
/* 29486 */           CodedOutputStream.computeBoolSize(5, this.lazy_);
/*       */       }
/* 29488 */       if ((this.bitField0_ & 0x4) != 0) {
/* 29489 */         size += 
/* 29490 */           CodedOutputStream.computeEnumSize(6, this.jstype_);
/*       */       }
/* 29492 */       if ((this.bitField0_ & 0x20) != 0) {
/* 29493 */         size += 
/* 29494 */           CodedOutputStream.computeBoolSize(10, this.weak_);
/*       */       }
/* 29496 */       for (int i = 0; i < this.uninterpretedOption_.size(); i++) {
/* 29497 */         size += 
/* 29498 */           CodedOutputStream.computeMessageSize(999, this.uninterpretedOption_.get(i));
/*       */       }
/* 29500 */       size += extensionsSerializedSize();
/* 29501 */       size += this.unknownFields.getSerializedSize();
/* 29502 */       this.memoizedSize = size;
/* 29503 */       return size;
/*       */     }
/*       */ 
/*       */     
/*       */     public boolean equals(Object obj) {
/* 29508 */       if (obj == this) {
/* 29509 */         return true;
/*       */       }
/* 29511 */       if (!(obj instanceof FieldOptions)) {
/* 29512 */         return super.equals(obj);
/*       */       }
/* 29514 */       FieldOptions other = (FieldOptions)obj;
/*       */       
/* 29516 */       if (hasCtype() != other.hasCtype()) return false; 
/* 29517 */       if (hasCtype() && 
/* 29518 */         this.ctype_ != other.ctype_) return false;
/*       */       
/* 29520 */       if (hasPacked() != other.hasPacked()) return false; 
/* 29521 */       if (hasPacked() && 
/* 29522 */         getPacked() != other
/* 29523 */         .getPacked()) return false;
/*       */       
/* 29525 */       if (hasJstype() != other.hasJstype()) return false; 
/* 29526 */       if (hasJstype() && 
/* 29527 */         this.jstype_ != other.jstype_) return false;
/*       */       
/* 29529 */       if (hasLazy() != other.hasLazy()) return false; 
/* 29530 */       if (hasLazy() && 
/* 29531 */         getLazy() != other
/* 29532 */         .getLazy()) return false;
/*       */       
/* 29534 */       if (hasDeprecated() != other.hasDeprecated()) return false; 
/* 29535 */       if (hasDeprecated() && 
/* 29536 */         getDeprecated() != other
/* 29537 */         .getDeprecated()) return false;
/*       */       
/* 29539 */       if (hasWeak() != other.hasWeak()) return false; 
/* 29540 */       if (hasWeak() && 
/* 29541 */         getWeak() != other
/* 29542 */         .getWeak()) return false;
/*       */ 
/*       */       
/* 29545 */       if (!getUninterpretedOptionList().equals(other.getUninterpretedOptionList())) return false; 
/* 29546 */       if (!this.unknownFields.equals(other.unknownFields)) return false; 
/* 29547 */       if (!getExtensionFields().equals(other.getExtensionFields()))
/* 29548 */         return false; 
/* 29549 */       return true;
/*       */     }
/*       */ 
/*       */     
/*       */     public int hashCode() {
/* 29554 */       if (this.memoizedHashCode != 0) {
/* 29555 */         return this.memoizedHashCode;
/*       */       }
/* 29557 */       int hash = 41;
/* 29558 */       hash = 19 * hash + getDescriptor().hashCode();
/* 29559 */       if (hasCtype()) {
/* 29560 */         hash = 37 * hash + 1;
/* 29561 */         hash = 53 * hash + this.ctype_;
/*       */       } 
/* 29563 */       if (hasPacked()) {
/* 29564 */         hash = 37 * hash + 2;
/* 29565 */         hash = 53 * hash + Internal.hashBoolean(
/* 29566 */             getPacked());
/*       */       } 
/* 29568 */       if (hasJstype()) {
/* 29569 */         hash = 37 * hash + 6;
/* 29570 */         hash = 53 * hash + this.jstype_;
/*       */       } 
/* 29572 */       if (hasLazy()) {
/* 29573 */         hash = 37 * hash + 5;
/* 29574 */         hash = 53 * hash + Internal.hashBoolean(
/* 29575 */             getLazy());
/*       */       } 
/* 29577 */       if (hasDeprecated()) {
/* 29578 */         hash = 37 * hash + 3;
/* 29579 */         hash = 53 * hash + Internal.hashBoolean(
/* 29580 */             getDeprecated());
/*       */       } 
/* 29582 */       if (hasWeak()) {
/* 29583 */         hash = 37 * hash + 10;
/* 29584 */         hash = 53 * hash + Internal.hashBoolean(
/* 29585 */             getWeak());
/*       */       } 
/* 29587 */       if (getUninterpretedOptionCount() > 0) {
/* 29588 */         hash = 37 * hash + 999;
/* 29589 */         hash = 53 * hash + getUninterpretedOptionList().hashCode();
/*       */       } 
/* 29591 */       hash = hashFields(hash, getExtensionFields());
/* 29592 */       hash = 29 * hash + this.unknownFields.hashCode();
/* 29593 */       this.memoizedHashCode = hash;
/* 29594 */       return hash;
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static FieldOptions parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
/* 29600 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static FieldOptions parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 29606 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static FieldOptions parseFrom(ByteString data) throws InvalidProtocolBufferException {
/* 29611 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static FieldOptions parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 29617 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static FieldOptions parseFrom(byte[] data) throws InvalidProtocolBufferException {
/* 29621 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static FieldOptions parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 29627 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static FieldOptions parseFrom(InputStream input) throws IOException {
/* 29631 */       return 
/* 29632 */         GeneratedMessageV3.<FieldOptions>parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static FieldOptions parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 29638 */       return 
/* 29639 */         GeneratedMessageV3.<FieldOptions>parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static FieldOptions parseDelimitedFrom(InputStream input) throws IOException {
/* 29643 */       return 
/* 29644 */         GeneratedMessageV3.<FieldOptions>parseDelimitedWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static FieldOptions parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 29650 */       return 
/* 29651 */         GeneratedMessageV3.<FieldOptions>parseDelimitedWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static FieldOptions parseFrom(CodedInputStream input) throws IOException {
/* 29656 */       return 
/* 29657 */         GeneratedMessageV3.<FieldOptions>parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static FieldOptions parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 29663 */       return 
/* 29664 */         GeneratedMessageV3.<FieldOptions>parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public Builder newBuilderForType() {
/* 29668 */       return newBuilder();
/*       */     } public static Builder newBuilder() {
/* 29670 */       return DEFAULT_INSTANCE.toBuilder();
/*       */     }
/*       */     public static Builder newBuilder(FieldOptions prototype) {
/* 29673 */       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
/*       */     }
/*       */     
/*       */     public Builder toBuilder() {
/* 29677 */       return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder())
/* 29678 */         .mergeFrom(this);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
/* 29684 */       Builder builder = new Builder(parent);
/* 29685 */       return builder;
/*       */     }
/*       */     public static final class Builder extends GeneratedMessageV3.ExtendableBuilder<FieldOptions, Builder> implements FieldOptionsOrBuilder { private int bitField0_; private int ctype_;
/*       */       private boolean packed_;
/*       */       private int jstype_;
/*       */       private boolean lazy_;
/*       */       private boolean deprecated_;
/*       */       private boolean weak_;
/*       */       private List<UninterpretedOption> uninterpretedOption_;
/*       */       private RepeatedFieldBuilderV3<UninterpretedOption, UninterpretedOption.Builder, UninterpretedOptionOrBuilder> uninterpretedOptionBuilder_;
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/* 29697 */         return DescriptorProtos.internal_static_google_protobuf_FieldOptions_descriptor;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
/* 29703 */         return DescriptorProtos.internal_static_google_protobuf_FieldOptions_fieldAccessorTable
/* 29704 */           .ensureFieldAccessorsInitialized((Class) FieldOptions.class, (Class)Builder.class);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private Builder()
/*       */       {
/* 29965 */         this.ctype_ = 0;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 30107 */         this.jstype_ = 0;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 30471 */         this
/* 30472 */           .uninterpretedOption_ = Collections.emptyList(); maybeForceBuilderInitialization(); } private Builder(GeneratedMessageV3.BuilderParent parent) { super(parent); this.ctype_ = 0; this.jstype_ = 0; this.uninterpretedOption_ = Collections.emptyList(); maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (GeneratedMessageV3.alwaysUseFieldBuilders) getUninterpretedOptionFieldBuilder();  } public Builder clear() { super.clear(); this.ctype_ = 0; this.bitField0_ &= 0xFFFFFFFE; this.packed_ = false; this.bitField0_ &= 0xFFFFFFFD; this.jstype_ = 0; this.bitField0_ &= 0xFFFFFFFB; this.lazy_ = false; this.bitField0_ &= 0xFFFFFFF7; this.deprecated_ = false; this.bitField0_ &= 0xFFFFFFEF; this.weak_ = false; this.bitField0_ &= 0xFFFFFFDF; if (this.uninterpretedOptionBuilder_ == null) { this.uninterpretedOption_ = Collections.emptyList(); this.bitField0_ &= 0xFFFFFFBF; } else { this.uninterpretedOptionBuilder_.clear(); }  return this; } public Descriptors.Descriptor getDescriptorForType() { return DescriptorProtos.internal_static_google_protobuf_FieldOptions_descriptor; } public FieldOptions getDefaultInstanceForType() { return FieldOptions.getDefaultInstance(); } public FieldOptions build() { FieldOptions result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public FieldOptions buildPartial() { FieldOptions result = new FieldOptions(this); int from_bitField0_ = this.bitField0_; int to_bitField0_ = 0; if ((from_bitField0_ & 0x1) != 0) to_bitField0_ |= 0x1;  result.ctype_ = this.ctype_; if ((from_bitField0_ & 0x2) != 0) { result.packed_ = this.packed_; to_bitField0_ |= 0x2; }  if ((from_bitField0_ & 0x4) != 0) to_bitField0_ |= 0x4;  result.jstype_ = this.jstype_; if ((from_bitField0_ & 0x8) != 0) { result.lazy_ = this.lazy_; to_bitField0_ |= 0x8; }  if ((from_bitField0_ & 0x10) != 0) { result.deprecated_ = this.deprecated_; to_bitField0_ |= 0x10; }  if ((from_bitField0_ & 0x20) != 0) { result.weak_ = this.weak_; to_bitField0_ |= 0x20; }  if (this.uninterpretedOptionBuilder_ == null) { if ((this.bitField0_ & 0x40) != 0) { this.uninterpretedOption_ = Collections.unmodifiableList(this.uninterpretedOption_); this.bitField0_ &= 0xFFFFFFBF; }  result.uninterpretedOption_ = this.uninterpretedOption_; } else { result.uninterpretedOption_ = this.uninterpretedOptionBuilder_.build(); }  result.bitField0_ = to_bitField0_; onBuilt(); return result; } public Builder clone() { return super.clone(); } public Builder setField(Descriptors.FieldDescriptor field, Object value) { return super.setField(field, value); } public Builder clearField(Descriptors.FieldDescriptor field) { return super.clearField(field); } public Builder clearOneof(Descriptors.OneofDescriptor oneof) { return super.clearOneof(oneof); } public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) { return super.setRepeatedField(field, index, value); } public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) { return super.addRepeatedField(field, value); } public <Type> Builder setExtension(GeneratedMessage.GeneratedExtension<FieldOptions, Type> extension, Type value) { return super.<Type>setExtension(extension, value); } public <Type> Builder setExtension(GeneratedMessage.GeneratedExtension<FieldOptions, List<Type>> extension, int index, Type value) { return super.<Type>setExtension(extension, index, value); } public <Type> Builder addExtension(GeneratedMessage.GeneratedExtension<FieldOptions, List<Type>> extension, Type value) { return super.<Type>addExtension(extension, value); } public <Type> Builder clearExtension(GeneratedMessage.GeneratedExtension<FieldOptions, ?> extension) { return super.clearExtension(extension); } public Builder mergeFrom(Message other) { if (other instanceof FieldOptions) return mergeFrom((FieldOptions)other);  super.mergeFrom(other); return this; } public Builder mergeFrom(FieldOptions other) { if (other == FieldOptions.getDefaultInstance()) return this;  if (other.hasCtype()) setCtype(other.getCtype());  if (other.hasPacked()) setPacked(other.getPacked());  if (other.hasJstype()) setJstype(other.getJstype());  if (other.hasLazy()) setLazy(other.getLazy());  if (other.hasDeprecated()) setDeprecated(other.getDeprecated());  if (other.hasWeak()) setWeak(other.getWeak());  if (this.uninterpretedOptionBuilder_ == null) { if (!other.uninterpretedOption_.isEmpty()) { if (this.uninterpretedOption_.isEmpty()) { this.uninterpretedOption_ = other.uninterpretedOption_; this.bitField0_ &= 0xFFFFFFBF; } else { ensureUninterpretedOptionIsMutable(); this.uninterpretedOption_.addAll(other.uninterpretedOption_); }  onChanged(); }  } else if (!other.uninterpretedOption_.isEmpty()) { if (this.uninterpretedOptionBuilder_.isEmpty()) { this.uninterpretedOptionBuilder_.dispose(); this.uninterpretedOptionBuilder_ = null; this.uninterpretedOption_ = other.uninterpretedOption_; this.bitField0_ &= 0xFFFFFFBF; this.uninterpretedOptionBuilder_ = GeneratedMessageV3.alwaysUseFieldBuilders ? getUninterpretedOptionFieldBuilder() : null; } else { this.uninterpretedOptionBuilder_.addAllMessages(other.uninterpretedOption_); }  }  mergeExtensionFields(other); mergeUnknownFields(other.unknownFields); onChanged(); return this; } public final boolean isInitialized() { for (int i = 0; i < getUninterpretedOptionCount(); i++) { if (!getUninterpretedOption(i).isInitialized()) return false;  }  if (!extensionsAreInitialized()) return false;  return true; } public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { FieldOptions parsedMessage = null; try { parsedMessage = FieldOptions.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (FieldOptions)e.getUnfinishedMessage(); throw e.unwrapIOException(); } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; } public boolean hasCtype() { return ((this.bitField0_ & 0x1) != 0); } public CType getCtype() { CType result = CType.valueOf(this.ctype_); return (result == null) ? CType.STRING : result; } public Builder setCtype(CType value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x1; this.ctype_ = value.getNumber(); onChanged(); return this; } public Builder clearCtype() { this.bitField0_ &= 0xFFFFFFFE; this.ctype_ = 0; onChanged(); return this; } public boolean hasPacked() { return ((this.bitField0_ & 0x2) != 0); } public boolean getPacked() { return this.packed_; } public Builder setPacked(boolean value) { this.bitField0_ |= 0x2; this.packed_ = value; onChanged(); return this; } public Builder clearPacked() { this.bitField0_ &= 0xFFFFFFFD; this.packed_ = false; onChanged(); return this; } public boolean hasJstype() { return ((this.bitField0_ & 0x4) != 0); } public JSType getJstype() { JSType result = JSType.valueOf(this.jstype_); return (result == null) ? JSType.JS_NORMAL : result; } public Builder setJstype(JSType value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x4; this.jstype_ = value.getNumber(); onChanged(); return this; } public Builder clearJstype() { this.bitField0_ &= 0xFFFFFFFB; this.jstype_ = 0; onChanged(); return this; } public boolean hasLazy() { return ((this.bitField0_ & 0x8) != 0); } public boolean getLazy() { return this.lazy_; } public Builder setLazy(boolean value) { this.bitField0_ |= 0x8; this.lazy_ = value; onChanged(); return this; } public Builder clearLazy() { this.bitField0_ &= 0xFFFFFFF7; this.lazy_ = false; onChanged(); return this; } public boolean hasDeprecated() { return ((this.bitField0_ & 0x10) != 0); } public boolean getDeprecated() { return this.deprecated_; } public Builder setDeprecated(boolean value) { this.bitField0_ |= 0x10; this.deprecated_ = value; onChanged(); return this; } public Builder clearDeprecated() { this.bitField0_ &= 0xFFFFFFEF; this.deprecated_ = false; onChanged(); return this; } public boolean hasWeak() { return ((this.bitField0_ & 0x20) != 0); } public boolean getWeak() { return this.weak_; } public Builder setWeak(boolean value) { this.bitField0_ |= 0x20; this.weak_ = value; onChanged(); return this; }
/*       */       public Builder clearWeak() { this.bitField0_ &= 0xFFFFFFDF; this.weak_ = false; onChanged(); return this; }
/* 30474 */       private void ensureUninterpretedOptionIsMutable() { if ((this.bitField0_ & 0x40) == 0) {
/* 30475 */           this.uninterpretedOption_ = new ArrayList<>(this.uninterpretedOption_);
/* 30476 */           this.bitField0_ |= 0x40;
/*       */         }  }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public List<UninterpretedOption> getUninterpretedOptionList() {
/* 30491 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 30492 */           return Collections.unmodifiableList(this.uninterpretedOption_);
/*       */         }
/* 30494 */         return this.uninterpretedOptionBuilder_.getMessageList();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getUninterpretedOptionCount() {
/* 30505 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 30506 */           return this.uninterpretedOption_.size();
/*       */         }
/* 30508 */         return this.uninterpretedOptionBuilder_.getCount();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public UninterpretedOption getUninterpretedOption(int index) {
/* 30519 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 30520 */           return this.uninterpretedOption_.get(index);
/*       */         }
/* 30522 */         return this.uninterpretedOptionBuilder_.getMessage(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setUninterpretedOption(int index, UninterpretedOption value) {
/* 30534 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 30535 */           if (value == null) {
/* 30536 */             throw new NullPointerException();
/*       */           }
/* 30538 */           ensureUninterpretedOptionIsMutable();
/* 30539 */           this.uninterpretedOption_.set(index, value);
/* 30540 */           onChanged();
/*       */         } else {
/* 30542 */           this.uninterpretedOptionBuilder_.setMessage(index, value);
/*       */         } 
/* 30544 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setUninterpretedOption(int index, UninterpretedOption.Builder builderForValue) {
/* 30555 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 30556 */           ensureUninterpretedOptionIsMutable();
/* 30557 */           this.uninterpretedOption_.set(index, builderForValue.build());
/* 30558 */           onChanged();
/*       */         } else {
/* 30560 */           this.uninterpretedOptionBuilder_.setMessage(index, builderForValue.build());
/*       */         } 
/* 30562 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addUninterpretedOption(UninterpretedOption value) {
/* 30572 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 30573 */           if (value == null) {
/* 30574 */             throw new NullPointerException();
/*       */           }
/* 30576 */           ensureUninterpretedOptionIsMutable();
/* 30577 */           this.uninterpretedOption_.add(value);
/* 30578 */           onChanged();
/*       */         } else {
/* 30580 */           this.uninterpretedOptionBuilder_.addMessage(value);
/*       */         } 
/* 30582 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addUninterpretedOption(int index, UninterpretedOption value) {
/* 30593 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 30594 */           if (value == null) {
/* 30595 */             throw new NullPointerException();
/*       */           }
/* 30597 */           ensureUninterpretedOptionIsMutable();
/* 30598 */           this.uninterpretedOption_.add(index, value);
/* 30599 */           onChanged();
/*       */         } else {
/* 30601 */           this.uninterpretedOptionBuilder_.addMessage(index, value);
/*       */         } 
/* 30603 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addUninterpretedOption(UninterpretedOption.Builder builderForValue) {
/* 30614 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 30615 */           ensureUninterpretedOptionIsMutable();
/* 30616 */           this.uninterpretedOption_.add(builderForValue.build());
/* 30617 */           onChanged();
/*       */         } else {
/* 30619 */           this.uninterpretedOptionBuilder_.addMessage(builderForValue.build());
/*       */         } 
/* 30621 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addUninterpretedOption(int index, UninterpretedOption.Builder builderForValue) {
/* 30632 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 30633 */           ensureUninterpretedOptionIsMutable();
/* 30634 */           this.uninterpretedOption_.add(index, builderForValue.build());
/* 30635 */           onChanged();
/*       */         } else {
/* 30637 */           this.uninterpretedOptionBuilder_.addMessage(index, builderForValue.build());
/*       */         } 
/* 30639 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addAllUninterpretedOption(Iterable<? extends UninterpretedOption> values) {
/* 30650 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 30651 */           ensureUninterpretedOptionIsMutable();
/* 30652 */           AbstractMessageLite.Builder.addAll(values, this.uninterpretedOption_);
/*       */           
/* 30654 */           onChanged();
/*       */         } else {
/* 30656 */           this.uninterpretedOptionBuilder_.addAllMessages(values);
/*       */         } 
/* 30658 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearUninterpretedOption() {
/* 30668 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 30669 */           this.uninterpretedOption_ = Collections.emptyList();
/* 30670 */           this.bitField0_ &= 0xFFFFFFBF;
/* 30671 */           onChanged();
/*       */         } else {
/* 30673 */           this.uninterpretedOptionBuilder_.clear();
/*       */         } 
/* 30675 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder removeUninterpretedOption(int index) {
/* 30685 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 30686 */           ensureUninterpretedOptionIsMutable();
/* 30687 */           this.uninterpretedOption_.remove(index);
/* 30688 */           onChanged();
/*       */         } else {
/* 30690 */           this.uninterpretedOptionBuilder_.remove(index);
/*       */         } 
/* 30692 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public UninterpretedOption.Builder getUninterpretedOptionBuilder(int index) {
/* 30703 */         return getUninterpretedOptionFieldBuilder().getBuilder(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public UninterpretedOptionOrBuilder getUninterpretedOptionOrBuilder(int index) {
/* 30714 */         if (this.uninterpretedOptionBuilder_ == null)
/* 30715 */           return this.uninterpretedOption_.get(index); 
/* 30716 */         return this.uninterpretedOptionBuilder_.getMessageOrBuilder(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public List<? extends UninterpretedOptionOrBuilder> getUninterpretedOptionOrBuilderList() {
/* 30728 */         if (this.uninterpretedOptionBuilder_ != null) {
/* 30729 */           return this.uninterpretedOptionBuilder_.getMessageOrBuilderList();
/*       */         }
/* 30731 */         return Collections.unmodifiableList((List)this.uninterpretedOption_);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public UninterpretedOption.Builder addUninterpretedOptionBuilder() {
/* 30742 */         return getUninterpretedOptionFieldBuilder().addBuilder(
/* 30743 */             UninterpretedOption.getDefaultInstance());
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public UninterpretedOption.Builder addUninterpretedOptionBuilder(int index) {
/* 30754 */         return getUninterpretedOptionFieldBuilder().addBuilder(index, 
/* 30755 */             UninterpretedOption.getDefaultInstance());
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public List<UninterpretedOption.Builder> getUninterpretedOptionBuilderList() {
/* 30766 */         return getUninterpretedOptionFieldBuilder().getBuilderList();
/*       */       }
/*       */ 
/*       */       
/*       */       private RepeatedFieldBuilderV3<UninterpretedOption, UninterpretedOption.Builder, UninterpretedOptionOrBuilder> getUninterpretedOptionFieldBuilder() {
/* 30771 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 30772 */           this
/*       */ 
/*       */ 
/*       */ 
/*       */             
/* 30777 */             .uninterpretedOptionBuilder_ = new RepeatedFieldBuilderV3<>(this.uninterpretedOption_, ((this.bitField0_ & 0x40) != 0), getParentForChildren(), isClean());
/* 30778 */           this.uninterpretedOption_ = null;
/*       */         } 
/* 30780 */         return this.uninterpretedOptionBuilder_;
/*       */       }
/*       */ 
/*       */       
/*       */       public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
/* 30785 */         return super.setUnknownFields(unknownFields);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
/* 30791 */         return super.mergeUnknownFields(unknownFields);
/*       */       } }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 30801 */     private static final FieldOptions DEFAULT_INSTANCE = new FieldOptions();
/*       */ 
/*       */     
/*       */     public static FieldOptions getDefaultInstance() {
/* 30805 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */     
/*       */     @Deprecated
/* 30809 */     public static final Parser<FieldOptions> PARSER = new AbstractParser<FieldOptions>()
/*       */       {
/*       */ 
/*       */         
/*       */         public FieldOptions parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException
/*       */         {
/* 30815 */           return new FieldOptions(input, extensionRegistry);
/*       */         }
/*       */       };
/*       */     
/*       */     public static Parser<FieldOptions> parser() {
/* 30820 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public Parser<FieldOptions> getParserForType() {
/* 30825 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public FieldOptions getDefaultInstanceForType() {
/* 30830 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public static interface OneofOptionsOrBuilder
/*       */     extends GeneratedMessageV3.ExtendableMessageOrBuilder<OneofOptions>
/*       */   {
/*       */     List<UninterpretedOption> getUninterpretedOptionList();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     UninterpretedOption getUninterpretedOption(int param1Int);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getUninterpretedOptionCount();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     List<? extends UninterpretedOptionOrBuilder> getUninterpretedOptionOrBuilderList();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     UninterpretedOptionOrBuilder getUninterpretedOptionOrBuilder(int param1Int);
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public static final class OneofOptions
/*       */     extends GeneratedMessageV3.ExtendableMessage<OneofOptions>
/*       */     implements OneofOptionsOrBuilder
/*       */   {
/*       */     private static final long serialVersionUID = 0L;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int UNINTERPRETED_OPTION_FIELD_NUMBER = 999;
/*       */ 
/*       */ 
/*       */     
/*       */     private List<UninterpretedOption> uninterpretedOption_;
/*       */ 
/*       */ 
/*       */     
/*       */     private byte memoizedIsInitialized;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private OneofOptions(GeneratedMessageV3.ExtendableBuilder<OneofOptions, ?> builder)
/*       */     {
/* 30895 */       super(builder);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/* 31036 */       this.memoizedIsInitialized = -1; } private OneofOptions() { this.memoizedIsInitialized = -1; this.uninterpretedOption_ = Collections.emptyList(); } protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) { return new OneofOptions(); } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private OneofOptions(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this(); if (extensionRegistry == null) throw new NullPointerException();  int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { int tag = input.readTag(); switch (tag) { case 0: done = true; continue;case 7994: if ((mutable_bitField0_ & 0x1) == 0) { this.uninterpretedOption_ = new ArrayList<>(); mutable_bitField0_ |= 0x1; }  this.uninterpretedOption_.add(input.readMessage(UninterpretedOption.PARSER, extensionRegistry)); continue; }  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this); } finally { if ((mutable_bitField0_ & 0x1) != 0) this.uninterpretedOption_ = Collections.unmodifiableList(this.uninterpretedOption_);  this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return DescriptorProtos.internal_static_google_protobuf_OneofOptions_descriptor; } protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() { return DescriptorProtos.internal_static_google_protobuf_OneofOptions_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)OneofOptions.class, (Class)Builder.class); } public List<UninterpretedOption> getUninterpretedOptionList() { return this.uninterpretedOption_; } public List<? extends UninterpretedOptionOrBuilder> getUninterpretedOptionOrBuilderList() { return (List)this.uninterpretedOption_; } public int getUninterpretedOptionCount() { return this.uninterpretedOption_.size(); }
/*       */     public UninterpretedOption getUninterpretedOption(int index) { return this.uninterpretedOption_.get(index); }
/*       */     public UninterpretedOptionOrBuilder getUninterpretedOptionOrBuilder(int index) { return this.uninterpretedOption_.get(index); }
/* 31039 */     public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized;
/* 31040 */       if (isInitialized == 1) return true; 
/* 31041 */       if (isInitialized == 0) return false;
/*       */       
/* 31043 */       for (int i = 0; i < getUninterpretedOptionCount(); i++) {
/* 31044 */         if (!getUninterpretedOption(i).isInitialized()) {
/* 31045 */           this.memoizedIsInitialized = 0;
/* 31046 */           return false;
/*       */         } 
/*       */       } 
/* 31049 */       if (!extensionsAreInitialized()) {
/* 31050 */         this.memoizedIsInitialized = 0;
/* 31051 */         return false;
/*       */       } 
/* 31053 */       this.memoizedIsInitialized = 1;
/* 31054 */       return true; }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/* 31062 */       GeneratedMessageV3.ExtendableMessage<OneofOptions>.ExtensionWriter extensionWriter = newExtensionWriter();
/* 31063 */       for (int i = 0; i < this.uninterpretedOption_.size(); i++) {
/* 31064 */         output.writeMessage(999, this.uninterpretedOption_.get(i));
/*       */       }
/* 31066 */       extensionWriter.writeUntil(536870912, output);
/* 31067 */       this.unknownFields.writeTo(output);
/*       */     }
/*       */ 
/*       */     
/*       */     public int getSerializedSize() {
/* 31072 */       int size = this.memoizedSize;
/* 31073 */       if (size != -1) return size;
/*       */       
/* 31075 */       size = 0;
/* 31076 */       for (int i = 0; i < this.uninterpretedOption_.size(); i++) {
/* 31077 */         size += 
/* 31078 */           CodedOutputStream.computeMessageSize(999, this.uninterpretedOption_.get(i));
/*       */       }
/* 31080 */       size += extensionsSerializedSize();
/* 31081 */       size += this.unknownFields.getSerializedSize();
/* 31082 */       this.memoizedSize = size;
/* 31083 */       return size;
/*       */     }
/*       */ 
/*       */     
/*       */     public boolean equals(Object obj) {
/* 31088 */       if (obj == this) {
/* 31089 */         return true;
/*       */       }
/* 31091 */       if (!(obj instanceof OneofOptions)) {
/* 31092 */         return super.equals(obj);
/*       */       }
/* 31094 */       OneofOptions other = (OneofOptions)obj;
/*       */ 
/*       */       
/* 31097 */       if (!getUninterpretedOptionList().equals(other.getUninterpretedOptionList())) return false; 
/* 31098 */       if (!this.unknownFields.equals(other.unknownFields)) return false; 
/* 31099 */       if (!getExtensionFields().equals(other.getExtensionFields()))
/* 31100 */         return false; 
/* 31101 */       return true;
/*       */     }
/*       */ 
/*       */     
/*       */     public int hashCode() {
/* 31106 */       if (this.memoizedHashCode != 0) {
/* 31107 */         return this.memoizedHashCode;
/*       */       }
/* 31109 */       int hash = 41;
/* 31110 */       hash = 19 * hash + getDescriptor().hashCode();
/* 31111 */       if (getUninterpretedOptionCount() > 0) {
/* 31112 */         hash = 37 * hash + 999;
/* 31113 */         hash = 53 * hash + getUninterpretedOptionList().hashCode();
/*       */       } 
/* 31115 */       hash = hashFields(hash, getExtensionFields());
/* 31116 */       hash = 29 * hash + this.unknownFields.hashCode();
/* 31117 */       this.memoizedHashCode = hash;
/* 31118 */       return hash;
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static OneofOptions parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
/* 31124 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static OneofOptions parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 31130 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static OneofOptions parseFrom(ByteString data) throws InvalidProtocolBufferException {
/* 31135 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static OneofOptions parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 31141 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static OneofOptions parseFrom(byte[] data) throws InvalidProtocolBufferException {
/* 31145 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static OneofOptions parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 31151 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static OneofOptions parseFrom(InputStream input) throws IOException {
/* 31155 */       return 
/* 31156 */         GeneratedMessageV3.<OneofOptions>parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static OneofOptions parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 31162 */       return 
/* 31163 */         GeneratedMessageV3.<OneofOptions>parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static OneofOptions parseDelimitedFrom(InputStream input) throws IOException {
/* 31167 */       return 
/* 31168 */         GeneratedMessageV3.<OneofOptions>parseDelimitedWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static OneofOptions parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 31174 */       return 
/* 31175 */         GeneratedMessageV3.<OneofOptions>parseDelimitedWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static OneofOptions parseFrom(CodedInputStream input) throws IOException {
/* 31180 */       return 
/* 31181 */         GeneratedMessageV3.<OneofOptions>parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static OneofOptions parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 31187 */       return 
/* 31188 */         GeneratedMessageV3.<OneofOptions>parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public Builder newBuilderForType() {
/* 31192 */       return newBuilder();
/*       */     } public static Builder newBuilder() {
/* 31194 */       return DEFAULT_INSTANCE.toBuilder();
/*       */     }
/*       */     public static Builder newBuilder(OneofOptions prototype) {
/* 31197 */       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
/*       */     }
/*       */     
/*       */     public Builder toBuilder() {
/* 31201 */       return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder())
/* 31202 */         .mergeFrom(this);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
/* 31208 */       Builder builder = new Builder(parent);
/* 31209 */       return builder;
/*       */     }
/*       */     
/*       */     public static final class Builder
/*       */       extends GeneratedMessageV3.ExtendableBuilder<OneofOptions, Builder>
/*       */       implements OneofOptionsOrBuilder
/*       */     {
/*       */       private int bitField0_;
/*       */       private List<UninterpretedOption> uninterpretedOption_;
/*       */       private RepeatedFieldBuilderV3<UninterpretedOption, UninterpretedOption.Builder, UninterpretedOptionOrBuilder> uninterpretedOptionBuilder_;
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/* 31221 */         return DescriptorProtos.internal_static_google_protobuf_OneofOptions_descriptor;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
/* 31227 */         return DescriptorProtos.internal_static_google_protobuf_OneofOptions_fieldAccessorTable
/* 31228 */           .ensureFieldAccessorsInitialized((Class) OneofOptions.class, (Class)Builder.class);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private Builder()
/*       */       {
/* 31433 */         this
/* 31434 */           .uninterpretedOption_ = Collections.emptyList(); maybeForceBuilderInitialization(); } private Builder(GeneratedMessageV3.BuilderParent parent) { super(parent); this.uninterpretedOption_ = Collections.emptyList(); maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (GeneratedMessageV3.alwaysUseFieldBuilders) getUninterpretedOptionFieldBuilder();  } public Builder clear() { super.clear(); if (this.uninterpretedOptionBuilder_ == null) { this.uninterpretedOption_ = Collections.emptyList(); this.bitField0_ &= 0xFFFFFFFE; } else { this.uninterpretedOptionBuilder_.clear(); }  return this; } public Descriptors.Descriptor getDescriptorForType() { return DescriptorProtos.internal_static_google_protobuf_OneofOptions_descriptor; } public OneofOptions getDefaultInstanceForType() { return OneofOptions.getDefaultInstance(); } public OneofOptions build() { OneofOptions result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public OneofOptions buildPartial() { OneofOptions result = new OneofOptions(this); int from_bitField0_ = this.bitField0_; if (this.uninterpretedOptionBuilder_ == null) { if ((this.bitField0_ & 0x1) != 0) { this.uninterpretedOption_ = Collections.unmodifiableList(this.uninterpretedOption_); this.bitField0_ &= 0xFFFFFFFE; }  result.uninterpretedOption_ = this.uninterpretedOption_; } else { result.uninterpretedOption_ = this.uninterpretedOptionBuilder_.build(); }  onBuilt(); return result; } public Builder clone() { return super.clone(); } public Builder setField(Descriptors.FieldDescriptor field, Object value) { return super.setField(field, value); } public Builder clearField(Descriptors.FieldDescriptor field) { return super.clearField(field); } public Builder clearOneof(Descriptors.OneofDescriptor oneof) { return super.clearOneof(oneof); } public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) { return super.setRepeatedField(field, index, value); } public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) { return super.addRepeatedField(field, value); } public <Type> Builder setExtension(GeneratedMessage.GeneratedExtension<OneofOptions, Type> extension, Type value) { return super.<Type>setExtension(extension, value); } public <Type> Builder setExtension(GeneratedMessage.GeneratedExtension<OneofOptions, List<Type>> extension, int index, Type value) { return super.<Type>setExtension(extension, index, value); } public <Type> Builder addExtension(GeneratedMessage.GeneratedExtension<OneofOptions, List<Type>> extension, Type value) { return super.<Type>addExtension(extension, value); } public <Type> Builder clearExtension(GeneratedMessage.GeneratedExtension<OneofOptions, ?> extension) { return super.clearExtension(extension); } public Builder mergeFrom(Message other) { if (other instanceof OneofOptions) return mergeFrom((OneofOptions)other);  super.mergeFrom(other); return this; } public Builder mergeFrom(OneofOptions other) { if (other == OneofOptions.getDefaultInstance()) return this;  if (this.uninterpretedOptionBuilder_ == null) { if (!other.uninterpretedOption_.isEmpty()) { if (this.uninterpretedOption_.isEmpty()) { this.uninterpretedOption_ = other.uninterpretedOption_; this.bitField0_ &= 0xFFFFFFFE; } else { ensureUninterpretedOptionIsMutable(); this.uninterpretedOption_.addAll(other.uninterpretedOption_); }  onChanged(); }  } else if (!other.uninterpretedOption_.isEmpty()) { if (this.uninterpretedOptionBuilder_.isEmpty()) { this.uninterpretedOptionBuilder_.dispose(); this.uninterpretedOptionBuilder_ = null; this.uninterpretedOption_ = other.uninterpretedOption_; this.bitField0_ &= 0xFFFFFFFE; this.uninterpretedOptionBuilder_ = GeneratedMessageV3.alwaysUseFieldBuilders ? getUninterpretedOptionFieldBuilder() : null; } else { this.uninterpretedOptionBuilder_.addAllMessages(other.uninterpretedOption_); }  }  mergeExtensionFields(other); mergeUnknownFields(other.unknownFields); onChanged(); return this; } public final boolean isInitialized() { for (int i = 0; i < getUninterpretedOptionCount(); i++) { if (!getUninterpretedOption(i).isInitialized()) return false;  }  if (!extensionsAreInitialized()) return false;  return true; }
/*       */       public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { OneofOptions parsedMessage = null; try { parsedMessage = OneofOptions.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (OneofOptions)e.getUnfinishedMessage(); throw e.unwrapIOException(); } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; }
/* 31436 */       private void ensureUninterpretedOptionIsMutable() { if ((this.bitField0_ & 0x1) == 0) {
/* 31437 */           this.uninterpretedOption_ = new ArrayList<>(this.uninterpretedOption_);
/* 31438 */           this.bitField0_ |= 0x1;
/*       */         }  }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public List<UninterpretedOption> getUninterpretedOptionList() {
/* 31453 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 31454 */           return Collections.unmodifiableList(this.uninterpretedOption_);
/*       */         }
/* 31456 */         return this.uninterpretedOptionBuilder_.getMessageList();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getUninterpretedOptionCount() {
/* 31467 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 31468 */           return this.uninterpretedOption_.size();
/*       */         }
/* 31470 */         return this.uninterpretedOptionBuilder_.getCount();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public UninterpretedOption getUninterpretedOption(int index) {
/* 31481 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 31482 */           return this.uninterpretedOption_.get(index);
/*       */         }
/* 31484 */         return this.uninterpretedOptionBuilder_.getMessage(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setUninterpretedOption(int index, UninterpretedOption value) {
/* 31496 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 31497 */           if (value == null) {
/* 31498 */             throw new NullPointerException();
/*       */           }
/* 31500 */           ensureUninterpretedOptionIsMutable();
/* 31501 */           this.uninterpretedOption_.set(index, value);
/* 31502 */           onChanged();
/*       */         } else {
/* 31504 */           this.uninterpretedOptionBuilder_.setMessage(index, value);
/*       */         } 
/* 31506 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setUninterpretedOption(int index, UninterpretedOption.Builder builderForValue) {
/* 31517 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 31518 */           ensureUninterpretedOptionIsMutable();
/* 31519 */           this.uninterpretedOption_.set(index, builderForValue.build());
/* 31520 */           onChanged();
/*       */         } else {
/* 31522 */           this.uninterpretedOptionBuilder_.setMessage(index, builderForValue.build());
/*       */         } 
/* 31524 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addUninterpretedOption(UninterpretedOption value) {
/* 31534 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 31535 */           if (value == null) {
/* 31536 */             throw new NullPointerException();
/*       */           }
/* 31538 */           ensureUninterpretedOptionIsMutable();
/* 31539 */           this.uninterpretedOption_.add(value);
/* 31540 */           onChanged();
/*       */         } else {
/* 31542 */           this.uninterpretedOptionBuilder_.addMessage(value);
/*       */         } 
/* 31544 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addUninterpretedOption(int index, UninterpretedOption value) {
/* 31555 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 31556 */           if (value == null) {
/* 31557 */             throw new NullPointerException();
/*       */           }
/* 31559 */           ensureUninterpretedOptionIsMutable();
/* 31560 */           this.uninterpretedOption_.add(index, value);
/* 31561 */           onChanged();
/*       */         } else {
/* 31563 */           this.uninterpretedOptionBuilder_.addMessage(index, value);
/*       */         } 
/* 31565 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addUninterpretedOption(UninterpretedOption.Builder builderForValue) {
/* 31576 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 31577 */           ensureUninterpretedOptionIsMutable();
/* 31578 */           this.uninterpretedOption_.add(builderForValue.build());
/* 31579 */           onChanged();
/*       */         } else {
/* 31581 */           this.uninterpretedOptionBuilder_.addMessage(builderForValue.build());
/*       */         } 
/* 31583 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addUninterpretedOption(int index, UninterpretedOption.Builder builderForValue) {
/* 31594 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 31595 */           ensureUninterpretedOptionIsMutable();
/* 31596 */           this.uninterpretedOption_.add(index, builderForValue.build());
/* 31597 */           onChanged();
/*       */         } else {
/* 31599 */           this.uninterpretedOptionBuilder_.addMessage(index, builderForValue.build());
/*       */         } 
/* 31601 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addAllUninterpretedOption(Iterable<? extends UninterpretedOption> values) {
/* 31612 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 31613 */           ensureUninterpretedOptionIsMutable();
/* 31614 */           AbstractMessageLite.Builder.addAll(values, this.uninterpretedOption_);
/*       */           
/* 31616 */           onChanged();
/*       */         } else {
/* 31618 */           this.uninterpretedOptionBuilder_.addAllMessages(values);
/*       */         } 
/* 31620 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearUninterpretedOption() {
/* 31630 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 31631 */           this.uninterpretedOption_ = Collections.emptyList();
/* 31632 */           this.bitField0_ &= 0xFFFFFFFE;
/* 31633 */           onChanged();
/*       */         } else {
/* 31635 */           this.uninterpretedOptionBuilder_.clear();
/*       */         } 
/* 31637 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder removeUninterpretedOption(int index) {
/* 31647 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 31648 */           ensureUninterpretedOptionIsMutable();
/* 31649 */           this.uninterpretedOption_.remove(index);
/* 31650 */           onChanged();
/*       */         } else {
/* 31652 */           this.uninterpretedOptionBuilder_.remove(index);
/*       */         } 
/* 31654 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public UninterpretedOption.Builder getUninterpretedOptionBuilder(int index) {
/* 31665 */         return getUninterpretedOptionFieldBuilder().getBuilder(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public UninterpretedOptionOrBuilder getUninterpretedOptionOrBuilder(int index) {
/* 31676 */         if (this.uninterpretedOptionBuilder_ == null)
/* 31677 */           return this.uninterpretedOption_.get(index); 
/* 31678 */         return this.uninterpretedOptionBuilder_.getMessageOrBuilder(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public List<? extends UninterpretedOptionOrBuilder> getUninterpretedOptionOrBuilderList() {
/* 31690 */         if (this.uninterpretedOptionBuilder_ != null) {
/* 31691 */           return this.uninterpretedOptionBuilder_.getMessageOrBuilderList();
/*       */         }
/* 31693 */         return Collections.unmodifiableList((List)this.uninterpretedOption_);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public UninterpretedOption.Builder addUninterpretedOptionBuilder() {
/* 31704 */         return getUninterpretedOptionFieldBuilder().addBuilder(
/* 31705 */             UninterpretedOption.getDefaultInstance());
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public UninterpretedOption.Builder addUninterpretedOptionBuilder(int index) {
/* 31716 */         return getUninterpretedOptionFieldBuilder().addBuilder(index, 
/* 31717 */             UninterpretedOption.getDefaultInstance());
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public List<UninterpretedOption.Builder> getUninterpretedOptionBuilderList() {
/* 31728 */         return getUninterpretedOptionFieldBuilder().getBuilderList();
/*       */       }
/*       */ 
/*       */       
/*       */       private RepeatedFieldBuilderV3<UninterpretedOption, UninterpretedOption.Builder, UninterpretedOptionOrBuilder> getUninterpretedOptionFieldBuilder() {
/* 31733 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 31734 */           this
/*       */ 
/*       */ 
/*       */ 
/*       */             
/* 31739 */             .uninterpretedOptionBuilder_ = new RepeatedFieldBuilderV3<>(this.uninterpretedOption_, ((this.bitField0_ & 0x1) != 0), getParentForChildren(), isClean());
/* 31740 */           this.uninterpretedOption_ = null;
/*       */         } 
/* 31742 */         return this.uninterpretedOptionBuilder_;
/*       */       }
/*       */ 
/*       */       
/*       */       public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
/* 31747 */         return super.setUnknownFields(unknownFields);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
/* 31753 */         return super.mergeUnknownFields(unknownFields);
/*       */       }
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 31763 */     private static final OneofOptions DEFAULT_INSTANCE = new OneofOptions();
/*       */ 
/*       */     
/*       */     public static OneofOptions getDefaultInstance() {
/* 31767 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */     
/*       */     @Deprecated
/* 31771 */     public static final Parser<OneofOptions> PARSER = new AbstractParser<OneofOptions>()
/*       */       {
/*       */ 
/*       */         
/*       */         public OneofOptions parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException
/*       */         {
/* 31777 */           return new OneofOptions(input, extensionRegistry);
/*       */         }
/*       */       };
/*       */     
/*       */     public static Parser<OneofOptions> parser() {
/* 31782 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public Parser<OneofOptions> getParserForType() {
/* 31787 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public OneofOptions getDefaultInstanceForType() {
/* 31792 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public static interface EnumOptionsOrBuilder
/*       */     extends GeneratedMessageV3.ExtendableMessageOrBuilder<EnumOptions>
/*       */   {
/*       */     boolean hasAllowAlias();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean getAllowAlias();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasDeprecated();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean getDeprecated();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     List<UninterpretedOption> getUninterpretedOptionList();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     UninterpretedOption getUninterpretedOption(int param1Int);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getUninterpretedOptionCount();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     List<? extends UninterpretedOptionOrBuilder> getUninterpretedOptionOrBuilderList();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     UninterpretedOptionOrBuilder getUninterpretedOptionOrBuilder(int param1Int);
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public static final class EnumOptions
/*       */     extends GeneratedMessageV3.ExtendableMessage<EnumOptions>
/*       */     implements EnumOptionsOrBuilder
/*       */   {
/*       */     private static final long serialVersionUID = 0L;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private int bitField0_;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int ALLOW_ALIAS_FIELD_NUMBER = 2;
/*       */ 
/*       */ 
/*       */     
/*       */     private boolean allowAlias_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int DEPRECATED_FIELD_NUMBER = 3;
/*       */ 
/*       */ 
/*       */     
/*       */     private boolean deprecated_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int UNINTERPRETED_OPTION_FIELD_NUMBER = 999;
/*       */ 
/*       */ 
/*       */     
/*       */     private List<UninterpretedOption> uninterpretedOption_;
/*       */ 
/*       */ 
/*       */     
/*       */     private byte memoizedIsInitialized;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private EnumOptions(GeneratedMessageV3.ExtendableBuilder<EnumOptions, ?> builder)
/*       */     {
/* 31903 */       super(builder);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/* 32117 */       this.memoizedIsInitialized = -1; } private EnumOptions() { this.memoizedIsInitialized = -1; this.uninterpretedOption_ = Collections.emptyList(); } protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) { return new EnumOptions(); } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private EnumOptions(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this(); if (extensionRegistry == null) throw new NullPointerException();  int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { int tag = input.readTag(); switch (tag) { case 0: done = true; continue;case 16: this.bitField0_ |= 0x1; this.allowAlias_ = input.readBool(); continue;case 24: this.bitField0_ |= 0x2; this.deprecated_ = input.readBool(); continue;case 7994: if ((mutable_bitField0_ & 0x4) == 0) { this.uninterpretedOption_ = new ArrayList<>(); mutable_bitField0_ |= 0x4; }  this.uninterpretedOption_.add(input.readMessage(UninterpretedOption.PARSER, extensionRegistry)); continue; }  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this); } finally { if ((mutable_bitField0_ & 0x4) != 0) this.uninterpretedOption_ = Collections.unmodifiableList(this.uninterpretedOption_);  this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return DescriptorProtos.internal_static_google_protobuf_EnumOptions_descriptor; } protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() { return DescriptorProtos.internal_static_google_protobuf_EnumOptions_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)EnumOptions.class, (Class)Builder.class); } public boolean hasAllowAlias() { return ((this.bitField0_ & 0x1) != 0); } public boolean getAllowAlias() { return this.allowAlias_; } public boolean hasDeprecated() { return ((this.bitField0_ & 0x2) != 0); } public boolean getDeprecated() { return this.deprecated_; } public List<UninterpretedOption> getUninterpretedOptionList() { return this.uninterpretedOption_; } public List<? extends UninterpretedOptionOrBuilder> getUninterpretedOptionOrBuilderList() { return (List)this.uninterpretedOption_; } public int getUninterpretedOptionCount() { return this.uninterpretedOption_.size(); }
/*       */     public UninterpretedOption getUninterpretedOption(int index) { return this.uninterpretedOption_.get(index); }
/*       */     public UninterpretedOptionOrBuilder getUninterpretedOptionOrBuilder(int index) { return this.uninterpretedOption_.get(index); }
/* 32120 */     public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized;
/* 32121 */       if (isInitialized == 1) return true; 
/* 32122 */       if (isInitialized == 0) return false;
/*       */       
/* 32124 */       for (int i = 0; i < getUninterpretedOptionCount(); i++) {
/* 32125 */         if (!getUninterpretedOption(i).isInitialized()) {
/* 32126 */           this.memoizedIsInitialized = 0;
/* 32127 */           return false;
/*       */         } 
/*       */       } 
/* 32130 */       if (!extensionsAreInitialized()) {
/* 32131 */         this.memoizedIsInitialized = 0;
/* 32132 */         return false;
/*       */       } 
/* 32134 */       this.memoizedIsInitialized = 1;
/* 32135 */       return true; }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/* 32143 */       GeneratedMessageV3.ExtendableMessage<EnumOptions>.ExtensionWriter extensionWriter = newExtensionWriter();
/* 32144 */       if ((this.bitField0_ & 0x1) != 0) {
/* 32145 */         output.writeBool(2, this.allowAlias_);
/*       */       }
/* 32147 */       if ((this.bitField0_ & 0x2) != 0) {
/* 32148 */         output.writeBool(3, this.deprecated_);
/*       */       }
/* 32150 */       for (int i = 0; i < this.uninterpretedOption_.size(); i++) {
/* 32151 */         output.writeMessage(999, this.uninterpretedOption_.get(i));
/*       */       }
/* 32153 */       extensionWriter.writeUntil(536870912, output);
/* 32154 */       this.unknownFields.writeTo(output);
/*       */     }
/*       */ 
/*       */     
/*       */     public int getSerializedSize() {
/* 32159 */       int size = this.memoizedSize;
/* 32160 */       if (size != -1) return size;
/*       */       
/* 32162 */       size = 0;
/* 32163 */       if ((this.bitField0_ & 0x1) != 0) {
/* 32164 */         size += 
/* 32165 */           CodedOutputStream.computeBoolSize(2, this.allowAlias_);
/*       */       }
/* 32167 */       if ((this.bitField0_ & 0x2) != 0) {
/* 32168 */         size += 
/* 32169 */           CodedOutputStream.computeBoolSize(3, this.deprecated_);
/*       */       }
/* 32171 */       for (int i = 0; i < this.uninterpretedOption_.size(); i++) {
/* 32172 */         size += 
/* 32173 */           CodedOutputStream.computeMessageSize(999, this.uninterpretedOption_.get(i));
/*       */       }
/* 32175 */       size += extensionsSerializedSize();
/* 32176 */       size += this.unknownFields.getSerializedSize();
/* 32177 */       this.memoizedSize = size;
/* 32178 */       return size;
/*       */     }
/*       */ 
/*       */     
/*       */     public boolean equals(Object obj) {
/* 32183 */       if (obj == this) {
/* 32184 */         return true;
/*       */       }
/* 32186 */       if (!(obj instanceof EnumOptions)) {
/* 32187 */         return super.equals(obj);
/*       */       }
/* 32189 */       EnumOptions other = (EnumOptions)obj;
/*       */       
/* 32191 */       if (hasAllowAlias() != other.hasAllowAlias()) return false; 
/* 32192 */       if (hasAllowAlias() && 
/* 32193 */         getAllowAlias() != other
/* 32194 */         .getAllowAlias()) return false;
/*       */       
/* 32196 */       if (hasDeprecated() != other.hasDeprecated()) return false; 
/* 32197 */       if (hasDeprecated() && 
/* 32198 */         getDeprecated() != other
/* 32199 */         .getDeprecated()) return false;
/*       */ 
/*       */       
/* 32202 */       if (!getUninterpretedOptionList().equals(other.getUninterpretedOptionList())) return false; 
/* 32203 */       if (!this.unknownFields.equals(other.unknownFields)) return false; 
/* 32204 */       if (!getExtensionFields().equals(other.getExtensionFields()))
/* 32205 */         return false; 
/* 32206 */       return true;
/*       */     }
/*       */ 
/*       */     
/*       */     public int hashCode() {
/* 32211 */       if (this.memoizedHashCode != 0) {
/* 32212 */         return this.memoizedHashCode;
/*       */       }
/* 32214 */       int hash = 41;
/* 32215 */       hash = 19 * hash + getDescriptor().hashCode();
/* 32216 */       if (hasAllowAlias()) {
/* 32217 */         hash = 37 * hash + 2;
/* 32218 */         hash = 53 * hash + Internal.hashBoolean(
/* 32219 */             getAllowAlias());
/*       */       } 
/* 32221 */       if (hasDeprecated()) {
/* 32222 */         hash = 37 * hash + 3;
/* 32223 */         hash = 53 * hash + Internal.hashBoolean(
/* 32224 */             getDeprecated());
/*       */       } 
/* 32226 */       if (getUninterpretedOptionCount() > 0) {
/* 32227 */         hash = 37 * hash + 999;
/* 32228 */         hash = 53 * hash + getUninterpretedOptionList().hashCode();
/*       */       } 
/* 32230 */       hash = hashFields(hash, getExtensionFields());
/* 32231 */       hash = 29 * hash + this.unknownFields.hashCode();
/* 32232 */       this.memoizedHashCode = hash;
/* 32233 */       return hash;
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static EnumOptions parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
/* 32239 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static EnumOptions parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 32245 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static EnumOptions parseFrom(ByteString data) throws InvalidProtocolBufferException {
/* 32250 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static EnumOptions parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 32256 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static EnumOptions parseFrom(byte[] data) throws InvalidProtocolBufferException {
/* 32260 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static EnumOptions parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 32266 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static EnumOptions parseFrom(InputStream input) throws IOException {
/* 32270 */       return 
/* 32271 */         GeneratedMessageV3.<EnumOptions>parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static EnumOptions parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 32277 */       return 
/* 32278 */         GeneratedMessageV3.<EnumOptions>parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static EnumOptions parseDelimitedFrom(InputStream input) throws IOException {
/* 32282 */       return 
/* 32283 */         GeneratedMessageV3.<EnumOptions>parseDelimitedWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static EnumOptions parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 32289 */       return 
/* 32290 */         GeneratedMessageV3.<EnumOptions>parseDelimitedWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static EnumOptions parseFrom(CodedInputStream input) throws IOException {
/* 32295 */       return 
/* 32296 */         GeneratedMessageV3.<EnumOptions>parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static EnumOptions parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 32302 */       return 
/* 32303 */         GeneratedMessageV3.<EnumOptions>parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public Builder newBuilderForType() {
/* 32307 */       return newBuilder();
/*       */     } public static Builder newBuilder() {
/* 32309 */       return DEFAULT_INSTANCE.toBuilder();
/*       */     }
/*       */     public static Builder newBuilder(EnumOptions prototype) {
/* 32312 */       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
/*       */     }
/*       */     
/*       */     public Builder toBuilder() {
/* 32316 */       return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder())
/* 32317 */         .mergeFrom(this);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
/* 32323 */       Builder builder = new Builder(parent);
/* 32324 */       return builder;
/*       */     }
/*       */     
/*       */     public static final class Builder
/*       */       extends GeneratedMessageV3.ExtendableBuilder<EnumOptions, Builder> implements EnumOptionsOrBuilder {
/*       */       private int bitField0_;
/*       */       private boolean allowAlias_;
/*       */       private boolean deprecated_;
/*       */       private List<UninterpretedOption> uninterpretedOption_;
/*       */       private RepeatedFieldBuilderV3<UninterpretedOption, UninterpretedOption.Builder, UninterpretedOptionOrBuilder> uninterpretedOptionBuilder_;
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/* 32336 */         return DescriptorProtos.internal_static_google_protobuf_EnumOptions_descriptor;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
/* 32342 */         return DescriptorProtos.internal_static_google_protobuf_EnumOptions_fieldAccessorTable
/* 32343 */           .ensureFieldAccessorsInitialized((Class) EnumOptions.class, (Class)Builder.class);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private Builder()
/*       */       {
/* 32694 */         this
/* 32695 */           .uninterpretedOption_ = Collections.emptyList(); maybeForceBuilderInitialization(); } private Builder(GeneratedMessageV3.BuilderParent parent) { super(parent); this.uninterpretedOption_ = Collections.emptyList(); maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (GeneratedMessageV3.alwaysUseFieldBuilders) getUninterpretedOptionFieldBuilder();  } public Builder clear() { super.clear(); this.allowAlias_ = false; this.bitField0_ &= 0xFFFFFFFE; this.deprecated_ = false; this.bitField0_ &= 0xFFFFFFFD; if (this.uninterpretedOptionBuilder_ == null) { this.uninterpretedOption_ = Collections.emptyList(); this.bitField0_ &= 0xFFFFFFFB; } else { this.uninterpretedOptionBuilder_.clear(); }  return this; } public Descriptors.Descriptor getDescriptorForType() { return DescriptorProtos.internal_static_google_protobuf_EnumOptions_descriptor; } public EnumOptions getDefaultInstanceForType() { return EnumOptions.getDefaultInstance(); } public EnumOptions build() { EnumOptions result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public EnumOptions buildPartial() { EnumOptions result = new EnumOptions(this); int from_bitField0_ = this.bitField0_; int to_bitField0_ = 0; if ((from_bitField0_ & 0x1) != 0) { result.allowAlias_ = this.allowAlias_; to_bitField0_ |= 0x1; }  if ((from_bitField0_ & 0x2) != 0) { result.deprecated_ = this.deprecated_; to_bitField0_ |= 0x2; }  if (this.uninterpretedOptionBuilder_ == null) { if ((this.bitField0_ & 0x4) != 0) { this.uninterpretedOption_ = Collections.unmodifiableList(this.uninterpretedOption_); this.bitField0_ &= 0xFFFFFFFB; }  result.uninterpretedOption_ = this.uninterpretedOption_; } else { result.uninterpretedOption_ = this.uninterpretedOptionBuilder_.build(); }  result.bitField0_ = to_bitField0_; onBuilt(); return result; } public Builder clone() { return super.clone(); } public Builder setField(Descriptors.FieldDescriptor field, Object value) { return super.setField(field, value); } public Builder clearField(Descriptors.FieldDescriptor field) { return super.clearField(field); } public Builder clearOneof(Descriptors.OneofDescriptor oneof) { return super.clearOneof(oneof); } public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) { return super.setRepeatedField(field, index, value); } public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) { return super.addRepeatedField(field, value); } public <Type> Builder setExtension(GeneratedMessage.GeneratedExtension<EnumOptions, Type> extension, Type value) { return super.<Type>setExtension(extension, value); } public <Type> Builder setExtension(GeneratedMessage.GeneratedExtension<EnumOptions, List<Type>> extension, int index, Type value) { return super.<Type>setExtension(extension, index, value); } public <Type> Builder addExtension(GeneratedMessage.GeneratedExtension<EnumOptions, List<Type>> extension, Type value) { return super.<Type>addExtension(extension, value); } public <Type> Builder clearExtension(GeneratedMessage.GeneratedExtension<EnumOptions, ?> extension) { return super.clearExtension(extension); } public Builder mergeFrom(Message other) { if (other instanceof EnumOptions) return mergeFrom((EnumOptions)other);  super.mergeFrom(other); return this; } public Builder mergeFrom(EnumOptions other) { if (other == EnumOptions.getDefaultInstance()) return this;  if (other.hasAllowAlias()) setAllowAlias(other.getAllowAlias());  if (other.hasDeprecated()) setDeprecated(other.getDeprecated());  if (this.uninterpretedOptionBuilder_ == null) { if (!other.uninterpretedOption_.isEmpty()) { if (this.uninterpretedOption_.isEmpty()) { this.uninterpretedOption_ = other.uninterpretedOption_; this.bitField0_ &= 0xFFFFFFFB; } else { ensureUninterpretedOptionIsMutable(); this.uninterpretedOption_.addAll(other.uninterpretedOption_); }  onChanged(); }  } else if (!other.uninterpretedOption_.isEmpty()) { if (this.uninterpretedOptionBuilder_.isEmpty()) { this.uninterpretedOptionBuilder_.dispose(); this.uninterpretedOptionBuilder_ = null; this.uninterpretedOption_ = other.uninterpretedOption_; this.bitField0_ &= 0xFFFFFFFB; this.uninterpretedOptionBuilder_ = GeneratedMessageV3.alwaysUseFieldBuilders ? getUninterpretedOptionFieldBuilder() : null; } else { this.uninterpretedOptionBuilder_.addAllMessages(other.uninterpretedOption_); }  }  mergeExtensionFields(other); mergeUnknownFields(other.unknownFields); onChanged(); return this; } public final boolean isInitialized() { for (int i = 0; i < getUninterpretedOptionCount(); i++) { if (!getUninterpretedOption(i).isInitialized()) return false;  }  if (!extensionsAreInitialized()) return false;  return true; } public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { EnumOptions parsedMessage = null; try { parsedMessage = EnumOptions.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (EnumOptions)e.getUnfinishedMessage(); throw e.unwrapIOException(); } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; } public boolean hasAllowAlias() { return ((this.bitField0_ & 0x1) != 0); } public boolean getAllowAlias() { return this.allowAlias_; } public Builder setAllowAlias(boolean value) { this.bitField0_ |= 0x1; this.allowAlias_ = value; onChanged(); return this; } public Builder clearAllowAlias() { this.bitField0_ &= 0xFFFFFFFE; this.allowAlias_ = false; onChanged(); return this; } public boolean hasDeprecated() { return ((this.bitField0_ & 0x2) != 0); } public boolean getDeprecated() { return this.deprecated_; } public Builder setDeprecated(boolean value) { this.bitField0_ |= 0x2; this.deprecated_ = value; onChanged(); return this; }
/*       */       public Builder clearDeprecated() { this.bitField0_ &= 0xFFFFFFFD; this.deprecated_ = false; onChanged(); return this; }
/* 32697 */       private void ensureUninterpretedOptionIsMutable() { if ((this.bitField0_ & 0x4) == 0) {
/* 32698 */           this.uninterpretedOption_ = new ArrayList<>(this.uninterpretedOption_);
/* 32699 */           this.bitField0_ |= 0x4;
/*       */         }  }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public List<UninterpretedOption> getUninterpretedOptionList() {
/* 32714 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 32715 */           return Collections.unmodifiableList(this.uninterpretedOption_);
/*       */         }
/* 32717 */         return this.uninterpretedOptionBuilder_.getMessageList();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getUninterpretedOptionCount() {
/* 32728 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 32729 */           return this.uninterpretedOption_.size();
/*       */         }
/* 32731 */         return this.uninterpretedOptionBuilder_.getCount();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public UninterpretedOption getUninterpretedOption(int index) {
/* 32742 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 32743 */           return this.uninterpretedOption_.get(index);
/*       */         }
/* 32745 */         return this.uninterpretedOptionBuilder_.getMessage(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setUninterpretedOption(int index, UninterpretedOption value) {
/* 32757 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 32758 */           if (value == null) {
/* 32759 */             throw new NullPointerException();
/*       */           }
/* 32761 */           ensureUninterpretedOptionIsMutable();
/* 32762 */           this.uninterpretedOption_.set(index, value);
/* 32763 */           onChanged();
/*       */         } else {
/* 32765 */           this.uninterpretedOptionBuilder_.setMessage(index, value);
/*       */         } 
/* 32767 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setUninterpretedOption(int index, UninterpretedOption.Builder builderForValue) {
/* 32778 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 32779 */           ensureUninterpretedOptionIsMutable();
/* 32780 */           this.uninterpretedOption_.set(index, builderForValue.build());
/* 32781 */           onChanged();
/*       */         } else {
/* 32783 */           this.uninterpretedOptionBuilder_.setMessage(index, builderForValue.build());
/*       */         } 
/* 32785 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addUninterpretedOption(UninterpretedOption value) {
/* 32795 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 32796 */           if (value == null) {
/* 32797 */             throw new NullPointerException();
/*       */           }
/* 32799 */           ensureUninterpretedOptionIsMutable();
/* 32800 */           this.uninterpretedOption_.add(value);
/* 32801 */           onChanged();
/*       */         } else {
/* 32803 */           this.uninterpretedOptionBuilder_.addMessage(value);
/*       */         } 
/* 32805 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addUninterpretedOption(int index, UninterpretedOption value) {
/* 32816 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 32817 */           if (value == null) {
/* 32818 */             throw new NullPointerException();
/*       */           }
/* 32820 */           ensureUninterpretedOptionIsMutable();
/* 32821 */           this.uninterpretedOption_.add(index, value);
/* 32822 */           onChanged();
/*       */         } else {
/* 32824 */           this.uninterpretedOptionBuilder_.addMessage(index, value);
/*       */         } 
/* 32826 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addUninterpretedOption(UninterpretedOption.Builder builderForValue) {
/* 32837 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 32838 */           ensureUninterpretedOptionIsMutable();
/* 32839 */           this.uninterpretedOption_.add(builderForValue.build());
/* 32840 */           onChanged();
/*       */         } else {
/* 32842 */           this.uninterpretedOptionBuilder_.addMessage(builderForValue.build());
/*       */         } 
/* 32844 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addUninterpretedOption(int index, UninterpretedOption.Builder builderForValue) {
/* 32855 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 32856 */           ensureUninterpretedOptionIsMutable();
/* 32857 */           this.uninterpretedOption_.add(index, builderForValue.build());
/* 32858 */           onChanged();
/*       */         } else {
/* 32860 */           this.uninterpretedOptionBuilder_.addMessage(index, builderForValue.build());
/*       */         } 
/* 32862 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addAllUninterpretedOption(Iterable<? extends UninterpretedOption> values) {
/* 32873 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 32874 */           ensureUninterpretedOptionIsMutable();
/* 32875 */           AbstractMessageLite.Builder.addAll(values, this.uninterpretedOption_);
/*       */           
/* 32877 */           onChanged();
/*       */         } else {
/* 32879 */           this.uninterpretedOptionBuilder_.addAllMessages(values);
/*       */         } 
/* 32881 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearUninterpretedOption() {
/* 32891 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 32892 */           this.uninterpretedOption_ = Collections.emptyList();
/* 32893 */           this.bitField0_ &= 0xFFFFFFFB;
/* 32894 */           onChanged();
/*       */         } else {
/* 32896 */           this.uninterpretedOptionBuilder_.clear();
/*       */         } 
/* 32898 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder removeUninterpretedOption(int index) {
/* 32908 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 32909 */           ensureUninterpretedOptionIsMutable();
/* 32910 */           this.uninterpretedOption_.remove(index);
/* 32911 */           onChanged();
/*       */         } else {
/* 32913 */           this.uninterpretedOptionBuilder_.remove(index);
/*       */         } 
/* 32915 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public UninterpretedOption.Builder getUninterpretedOptionBuilder(int index) {
/* 32926 */         return getUninterpretedOptionFieldBuilder().getBuilder(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public UninterpretedOptionOrBuilder getUninterpretedOptionOrBuilder(int index) {
/* 32937 */         if (this.uninterpretedOptionBuilder_ == null)
/* 32938 */           return this.uninterpretedOption_.get(index); 
/* 32939 */         return this.uninterpretedOptionBuilder_.getMessageOrBuilder(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public List<? extends UninterpretedOptionOrBuilder> getUninterpretedOptionOrBuilderList() {
/* 32951 */         if (this.uninterpretedOptionBuilder_ != null) {
/* 32952 */           return this.uninterpretedOptionBuilder_.getMessageOrBuilderList();
/*       */         }
/* 32954 */         return Collections.unmodifiableList((List)this.uninterpretedOption_);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public UninterpretedOption.Builder addUninterpretedOptionBuilder() {
/* 32965 */         return getUninterpretedOptionFieldBuilder().addBuilder(
/* 32966 */             UninterpretedOption.getDefaultInstance());
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public UninterpretedOption.Builder addUninterpretedOptionBuilder(int index) {
/* 32977 */         return getUninterpretedOptionFieldBuilder().addBuilder(index, 
/* 32978 */             UninterpretedOption.getDefaultInstance());
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public List<UninterpretedOption.Builder> getUninterpretedOptionBuilderList() {
/* 32989 */         return getUninterpretedOptionFieldBuilder().getBuilderList();
/*       */       }
/*       */ 
/*       */       
/*       */       private RepeatedFieldBuilderV3<UninterpretedOption, UninterpretedOption.Builder, UninterpretedOptionOrBuilder> getUninterpretedOptionFieldBuilder() {
/* 32994 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 32995 */           this
/*       */ 
/*       */ 
/*       */ 
/*       */             
/* 33000 */             .uninterpretedOptionBuilder_ = new RepeatedFieldBuilderV3<>(this.uninterpretedOption_, ((this.bitField0_ & 0x4) != 0), getParentForChildren(), isClean());
/* 33001 */           this.uninterpretedOption_ = null;
/*       */         } 
/* 33003 */         return this.uninterpretedOptionBuilder_;
/*       */       }
/*       */ 
/*       */       
/*       */       public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
/* 33008 */         return super.setUnknownFields(unknownFields);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
/* 33014 */         return super.mergeUnknownFields(unknownFields);
/*       */       }
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 33024 */     private static final EnumOptions DEFAULT_INSTANCE = new EnumOptions();
/*       */ 
/*       */     
/*       */     public static EnumOptions getDefaultInstance() {
/* 33028 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */     
/*       */     @Deprecated
/* 33032 */     public static final Parser<EnumOptions> PARSER = new AbstractParser<EnumOptions>()
/*       */       {
/*       */ 
/*       */         
/*       */         public EnumOptions parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException
/*       */         {
/* 33038 */           return new EnumOptions(input, extensionRegistry);
/*       */         }
/*       */       };
/*       */     
/*       */     public static Parser<EnumOptions> parser() {
/* 33043 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public Parser<EnumOptions> getParserForType() {
/* 33048 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public EnumOptions getDefaultInstanceForType() {
/* 33053 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public static interface EnumValueOptionsOrBuilder
/*       */     extends GeneratedMessageV3.ExtendableMessageOrBuilder<EnumValueOptions>
/*       */   {
/*       */     boolean hasDeprecated();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean getDeprecated();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     List<UninterpretedOption> getUninterpretedOptionList();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     UninterpretedOption getUninterpretedOption(int param1Int);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getUninterpretedOptionCount();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     List<? extends UninterpretedOptionOrBuilder> getUninterpretedOptionOrBuilderList();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     UninterpretedOptionOrBuilder getUninterpretedOptionOrBuilder(int param1Int);
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public static final class EnumValueOptions
/*       */     extends GeneratedMessageV3.ExtendableMessage<EnumValueOptions>
/*       */     implements EnumValueOptionsOrBuilder
/*       */   {
/*       */     private static final long serialVersionUID = 0L;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private int bitField0_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int DEPRECATED_FIELD_NUMBER = 1;
/*       */ 
/*       */ 
/*       */     
/*       */     private boolean deprecated_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int UNINTERPRETED_OPTION_FIELD_NUMBER = 999;
/*       */ 
/*       */ 
/*       */     
/*       */     private List<UninterpretedOption> uninterpretedOption_;
/*       */ 
/*       */ 
/*       */     
/*       */     private byte memoizedIsInitialized;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private EnumValueOptions(GeneratedMessageV3.ExtendableBuilder<EnumValueOptions, ?> builder)
/*       */     {
/* 33143 */       super(builder);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/* 33323 */       this.memoizedIsInitialized = -1; } private EnumValueOptions() { this.memoizedIsInitialized = -1; this.uninterpretedOption_ = Collections.emptyList(); } protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) { return new EnumValueOptions(); } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private EnumValueOptions(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this(); if (extensionRegistry == null) throw new NullPointerException();  int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { int tag = input.readTag(); switch (tag) { case 0: done = true; continue;case 8: this.bitField0_ |= 0x1; this.deprecated_ = input.readBool(); continue;case 7994: if ((mutable_bitField0_ & 0x2) == 0) { this.uninterpretedOption_ = new ArrayList<>(); mutable_bitField0_ |= 0x2; }  this.uninterpretedOption_.add(input.readMessage(UninterpretedOption.PARSER, extensionRegistry)); continue; }  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this); } finally { if ((mutable_bitField0_ & 0x2) != 0) this.uninterpretedOption_ = Collections.unmodifiableList(this.uninterpretedOption_);  this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return DescriptorProtos.internal_static_google_protobuf_EnumValueOptions_descriptor; } protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() { return DescriptorProtos.internal_static_google_protobuf_EnumValueOptions_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)EnumValueOptions.class, (Class)Builder.class); } public boolean hasDeprecated() { return ((this.bitField0_ & 0x1) != 0); } public boolean getDeprecated() { return this.deprecated_; } public List<UninterpretedOption> getUninterpretedOptionList() { return this.uninterpretedOption_; } public List<? extends UninterpretedOptionOrBuilder> getUninterpretedOptionOrBuilderList() { return (List)this.uninterpretedOption_; } public int getUninterpretedOptionCount() { return this.uninterpretedOption_.size(); }
/*       */     public UninterpretedOption getUninterpretedOption(int index) { return this.uninterpretedOption_.get(index); }
/*       */     public UninterpretedOptionOrBuilder getUninterpretedOptionOrBuilder(int index) { return this.uninterpretedOption_.get(index); }
/* 33326 */     public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized;
/* 33327 */       if (isInitialized == 1) return true; 
/* 33328 */       if (isInitialized == 0) return false;
/*       */       
/* 33330 */       for (int i = 0; i < getUninterpretedOptionCount(); i++) {
/* 33331 */         if (!getUninterpretedOption(i).isInitialized()) {
/* 33332 */           this.memoizedIsInitialized = 0;
/* 33333 */           return false;
/*       */         } 
/*       */       } 
/* 33336 */       if (!extensionsAreInitialized()) {
/* 33337 */         this.memoizedIsInitialized = 0;
/* 33338 */         return false;
/*       */       } 
/* 33340 */       this.memoizedIsInitialized = 1;
/* 33341 */       return true; }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/* 33349 */       GeneratedMessageV3.ExtendableMessage<EnumValueOptions>.ExtensionWriter extensionWriter = newExtensionWriter();
/* 33350 */       if ((this.bitField0_ & 0x1) != 0) {
/* 33351 */         output.writeBool(1, this.deprecated_);
/*       */       }
/* 33353 */       for (int i = 0; i < this.uninterpretedOption_.size(); i++) {
/* 33354 */         output.writeMessage(999, this.uninterpretedOption_.get(i));
/*       */       }
/* 33356 */       extensionWriter.writeUntil(536870912, output);
/* 33357 */       this.unknownFields.writeTo(output);
/*       */     }
/*       */ 
/*       */     
/*       */     public int getSerializedSize() {
/* 33362 */       int size = this.memoizedSize;
/* 33363 */       if (size != -1) return size;
/*       */       
/* 33365 */       size = 0;
/* 33366 */       if ((this.bitField0_ & 0x1) != 0) {
/* 33367 */         size += 
/* 33368 */           CodedOutputStream.computeBoolSize(1, this.deprecated_);
/*       */       }
/* 33370 */       for (int i = 0; i < this.uninterpretedOption_.size(); i++) {
/* 33371 */         size += 
/* 33372 */           CodedOutputStream.computeMessageSize(999, this.uninterpretedOption_.get(i));
/*       */       }
/* 33374 */       size += extensionsSerializedSize();
/* 33375 */       size += this.unknownFields.getSerializedSize();
/* 33376 */       this.memoizedSize = size;
/* 33377 */       return size;
/*       */     }
/*       */ 
/*       */     
/*       */     public boolean equals(Object obj) {
/* 33382 */       if (obj == this) {
/* 33383 */         return true;
/*       */       }
/* 33385 */       if (!(obj instanceof EnumValueOptions)) {
/* 33386 */         return super.equals(obj);
/*       */       }
/* 33388 */       EnumValueOptions other = (EnumValueOptions)obj;
/*       */       
/* 33390 */       if (hasDeprecated() != other.hasDeprecated()) return false; 
/* 33391 */       if (hasDeprecated() && 
/* 33392 */         getDeprecated() != other
/* 33393 */         .getDeprecated()) return false;
/*       */ 
/*       */       
/* 33396 */       if (!getUninterpretedOptionList().equals(other.getUninterpretedOptionList())) return false; 
/* 33397 */       if (!this.unknownFields.equals(other.unknownFields)) return false; 
/* 33398 */       if (!getExtensionFields().equals(other.getExtensionFields()))
/* 33399 */         return false; 
/* 33400 */       return true;
/*       */     }
/*       */ 
/*       */     
/*       */     public int hashCode() {
/* 33405 */       if (this.memoizedHashCode != 0) {
/* 33406 */         return this.memoizedHashCode;
/*       */       }
/* 33408 */       int hash = 41;
/* 33409 */       hash = 19 * hash + getDescriptor().hashCode();
/* 33410 */       if (hasDeprecated()) {
/* 33411 */         hash = 37 * hash + 1;
/* 33412 */         hash = 53 * hash + Internal.hashBoolean(
/* 33413 */             getDeprecated());
/*       */       } 
/* 33415 */       if (getUninterpretedOptionCount() > 0) {
/* 33416 */         hash = 37 * hash + 999;
/* 33417 */         hash = 53 * hash + getUninterpretedOptionList().hashCode();
/*       */       } 
/* 33419 */       hash = hashFields(hash, getExtensionFields());
/* 33420 */       hash = 29 * hash + this.unknownFields.hashCode();
/* 33421 */       this.memoizedHashCode = hash;
/* 33422 */       return hash;
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static EnumValueOptions parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
/* 33428 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static EnumValueOptions parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 33434 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static EnumValueOptions parseFrom(ByteString data) throws InvalidProtocolBufferException {
/* 33439 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static EnumValueOptions parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 33445 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static EnumValueOptions parseFrom(byte[] data) throws InvalidProtocolBufferException {
/* 33449 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static EnumValueOptions parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 33455 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static EnumValueOptions parseFrom(InputStream input) throws IOException {
/* 33459 */       return 
/* 33460 */         GeneratedMessageV3.<EnumValueOptions>parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static EnumValueOptions parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 33466 */       return 
/* 33467 */         GeneratedMessageV3.<EnumValueOptions>parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static EnumValueOptions parseDelimitedFrom(InputStream input) throws IOException {
/* 33471 */       return 
/* 33472 */         GeneratedMessageV3.<EnumValueOptions>parseDelimitedWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static EnumValueOptions parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 33478 */       return 
/* 33479 */         GeneratedMessageV3.<EnumValueOptions>parseDelimitedWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static EnumValueOptions parseFrom(CodedInputStream input) throws IOException {
/* 33484 */       return 
/* 33485 */         GeneratedMessageV3.<EnumValueOptions>parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static EnumValueOptions parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 33491 */       return 
/* 33492 */         GeneratedMessageV3.<EnumValueOptions>parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public Builder newBuilderForType() {
/* 33496 */       return newBuilder();
/*       */     } public static Builder newBuilder() {
/* 33498 */       return DEFAULT_INSTANCE.toBuilder();
/*       */     }
/*       */     public static Builder newBuilder(EnumValueOptions prototype) {
/* 33501 */       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
/*       */     }
/*       */     
/*       */     public Builder toBuilder() {
/* 33505 */       return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder())
/* 33506 */         .mergeFrom(this);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
/* 33512 */       Builder builder = new Builder(parent);
/* 33513 */       return builder;
/*       */     }
/*       */     
/*       */     public static final class Builder
/*       */       extends GeneratedMessageV3.ExtendableBuilder<EnumValueOptions, Builder>
/*       */       implements EnumValueOptionsOrBuilder {
/*       */       private int bitField0_;
/*       */       private boolean deprecated_;
/*       */       private List<UninterpretedOption> uninterpretedOption_;
/*       */       private RepeatedFieldBuilderV3<UninterpretedOption, UninterpretedOption.Builder, UninterpretedOptionOrBuilder> uninterpretedOptionBuilder_;
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/* 33525 */         return DescriptorProtos.internal_static_google_protobuf_EnumValueOptions_descriptor;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
/* 33531 */         return DescriptorProtos.internal_static_google_protobuf_EnumValueOptions_fieldAccessorTable
/* 33532 */           .ensureFieldAccessorsInitialized((Class) EnumValueOptions.class, (Class)Builder.class);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private Builder()
/*       */       {
/* 33815 */         this
/* 33816 */           .uninterpretedOption_ = Collections.emptyList(); maybeForceBuilderInitialization(); } private Builder(GeneratedMessageV3.BuilderParent parent) { super(parent); this.uninterpretedOption_ = Collections.emptyList(); maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (GeneratedMessageV3.alwaysUseFieldBuilders) getUninterpretedOptionFieldBuilder();  } public Builder clear() { super.clear(); this.deprecated_ = false; this.bitField0_ &= 0xFFFFFFFE; if (this.uninterpretedOptionBuilder_ == null) { this.uninterpretedOption_ = Collections.emptyList(); this.bitField0_ &= 0xFFFFFFFD; } else { this.uninterpretedOptionBuilder_.clear(); }  return this; } public Descriptors.Descriptor getDescriptorForType() { return DescriptorProtos.internal_static_google_protobuf_EnumValueOptions_descriptor; } public EnumValueOptions getDefaultInstanceForType() { return EnumValueOptions.getDefaultInstance(); } public EnumValueOptions build() { EnumValueOptions result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public EnumValueOptions buildPartial() { EnumValueOptions result = new EnumValueOptions(this); int from_bitField0_ = this.bitField0_; int to_bitField0_ = 0; if ((from_bitField0_ & 0x1) != 0) { result.deprecated_ = this.deprecated_; to_bitField0_ |= 0x1; }  if (this.uninterpretedOptionBuilder_ == null) { if ((this.bitField0_ & 0x2) != 0) { this.uninterpretedOption_ = Collections.unmodifiableList(this.uninterpretedOption_); this.bitField0_ &= 0xFFFFFFFD; }  result.uninterpretedOption_ = this.uninterpretedOption_; } else { result.uninterpretedOption_ = this.uninterpretedOptionBuilder_.build(); }  result.bitField0_ = to_bitField0_; onBuilt(); return result; } public Builder clone() { return super.clone(); } public Builder setField(Descriptors.FieldDescriptor field, Object value) { return super.setField(field, value); } public Builder clearField(Descriptors.FieldDescriptor field) { return super.clearField(field); } public Builder clearOneof(Descriptors.OneofDescriptor oneof) { return super.clearOneof(oneof); } public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) { return super.setRepeatedField(field, index, value); } public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) { return super.addRepeatedField(field, value); } public <Type> Builder setExtension(GeneratedMessage.GeneratedExtension<EnumValueOptions, Type> extension, Type value) { return super.<Type>setExtension(extension, value); } public <Type> Builder setExtension(GeneratedMessage.GeneratedExtension<EnumValueOptions, List<Type>> extension, int index, Type value) { return super.<Type>setExtension(extension, index, value); } public <Type> Builder addExtension(GeneratedMessage.GeneratedExtension<EnumValueOptions, List<Type>> extension, Type value) { return super.<Type>addExtension(extension, value); } public <Type> Builder clearExtension(GeneratedMessage.GeneratedExtension<EnumValueOptions, ?> extension) { return super.clearExtension(extension); } public Builder mergeFrom(Message other) { if (other instanceof EnumValueOptions) return mergeFrom((EnumValueOptions)other);  super.mergeFrom(other); return this; } public Builder mergeFrom(EnumValueOptions other) { if (other == EnumValueOptions.getDefaultInstance()) return this;  if (other.hasDeprecated()) setDeprecated(other.getDeprecated());  if (this.uninterpretedOptionBuilder_ == null) { if (!other.uninterpretedOption_.isEmpty()) { if (this.uninterpretedOption_.isEmpty()) { this.uninterpretedOption_ = other.uninterpretedOption_; this.bitField0_ &= 0xFFFFFFFD; } else { ensureUninterpretedOptionIsMutable(); this.uninterpretedOption_.addAll(other.uninterpretedOption_); }  onChanged(); }  } else if (!other.uninterpretedOption_.isEmpty()) { if (this.uninterpretedOptionBuilder_.isEmpty()) { this.uninterpretedOptionBuilder_.dispose(); this.uninterpretedOptionBuilder_ = null; this.uninterpretedOption_ = other.uninterpretedOption_; this.bitField0_ &= 0xFFFFFFFD; this.uninterpretedOptionBuilder_ = GeneratedMessageV3.alwaysUseFieldBuilders ? getUninterpretedOptionFieldBuilder() : null; } else { this.uninterpretedOptionBuilder_.addAllMessages(other.uninterpretedOption_); }  }  mergeExtensionFields(other); mergeUnknownFields(other.unknownFields); onChanged(); return this; } public final boolean isInitialized() { for (int i = 0; i < getUninterpretedOptionCount(); i++) { if (!getUninterpretedOption(i).isInitialized()) return false;  }  if (!extensionsAreInitialized()) return false;  return true; } public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { EnumValueOptions parsedMessage = null; try { parsedMessage = EnumValueOptions.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (EnumValueOptions)e.getUnfinishedMessage(); throw e.unwrapIOException(); } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; } public boolean hasDeprecated() { return ((this.bitField0_ & 0x1) != 0); } public boolean getDeprecated() { return this.deprecated_; } public Builder setDeprecated(boolean value) { this.bitField0_ |= 0x1; this.deprecated_ = value; onChanged(); return this; }
/*       */       public Builder clearDeprecated() { this.bitField0_ &= 0xFFFFFFFE; this.deprecated_ = false; onChanged(); return this; }
/* 33818 */       private void ensureUninterpretedOptionIsMutable() { if ((this.bitField0_ & 0x2) == 0) {
/* 33819 */           this.uninterpretedOption_ = new ArrayList<>(this.uninterpretedOption_);
/* 33820 */           this.bitField0_ |= 0x2;
/*       */         }  }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public List<UninterpretedOption> getUninterpretedOptionList() {
/* 33835 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 33836 */           return Collections.unmodifiableList(this.uninterpretedOption_);
/*       */         }
/* 33838 */         return this.uninterpretedOptionBuilder_.getMessageList();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getUninterpretedOptionCount() {
/* 33849 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 33850 */           return this.uninterpretedOption_.size();
/*       */         }
/* 33852 */         return this.uninterpretedOptionBuilder_.getCount();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public UninterpretedOption getUninterpretedOption(int index) {
/* 33863 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 33864 */           return this.uninterpretedOption_.get(index);
/*       */         }
/* 33866 */         return this.uninterpretedOptionBuilder_.getMessage(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setUninterpretedOption(int index, UninterpretedOption value) {
/* 33878 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 33879 */           if (value == null) {
/* 33880 */             throw new NullPointerException();
/*       */           }
/* 33882 */           ensureUninterpretedOptionIsMutable();
/* 33883 */           this.uninterpretedOption_.set(index, value);
/* 33884 */           onChanged();
/*       */         } else {
/* 33886 */           this.uninterpretedOptionBuilder_.setMessage(index, value);
/*       */         } 
/* 33888 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setUninterpretedOption(int index, UninterpretedOption.Builder builderForValue) {
/* 33899 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 33900 */           ensureUninterpretedOptionIsMutable();
/* 33901 */           this.uninterpretedOption_.set(index, builderForValue.build());
/* 33902 */           onChanged();
/*       */         } else {
/* 33904 */           this.uninterpretedOptionBuilder_.setMessage(index, builderForValue.build());
/*       */         } 
/* 33906 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addUninterpretedOption(UninterpretedOption value) {
/* 33916 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 33917 */           if (value == null) {
/* 33918 */             throw new NullPointerException();
/*       */           }
/* 33920 */           ensureUninterpretedOptionIsMutable();
/* 33921 */           this.uninterpretedOption_.add(value);
/* 33922 */           onChanged();
/*       */         } else {
/* 33924 */           this.uninterpretedOptionBuilder_.addMessage(value);
/*       */         } 
/* 33926 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addUninterpretedOption(int index, UninterpretedOption value) {
/* 33937 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 33938 */           if (value == null) {
/* 33939 */             throw new NullPointerException();
/*       */           }
/* 33941 */           ensureUninterpretedOptionIsMutable();
/* 33942 */           this.uninterpretedOption_.add(index, value);
/* 33943 */           onChanged();
/*       */         } else {
/* 33945 */           this.uninterpretedOptionBuilder_.addMessage(index, value);
/*       */         } 
/* 33947 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addUninterpretedOption(UninterpretedOption.Builder builderForValue) {
/* 33958 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 33959 */           ensureUninterpretedOptionIsMutable();
/* 33960 */           this.uninterpretedOption_.add(builderForValue.build());
/* 33961 */           onChanged();
/*       */         } else {
/* 33963 */           this.uninterpretedOptionBuilder_.addMessage(builderForValue.build());
/*       */         } 
/* 33965 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addUninterpretedOption(int index, UninterpretedOption.Builder builderForValue) {
/* 33976 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 33977 */           ensureUninterpretedOptionIsMutable();
/* 33978 */           this.uninterpretedOption_.add(index, builderForValue.build());
/* 33979 */           onChanged();
/*       */         } else {
/* 33981 */           this.uninterpretedOptionBuilder_.addMessage(index, builderForValue.build());
/*       */         } 
/* 33983 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addAllUninterpretedOption(Iterable<? extends UninterpretedOption> values) {
/* 33994 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 33995 */           ensureUninterpretedOptionIsMutable();
/* 33996 */           AbstractMessageLite.Builder.addAll(values, this.uninterpretedOption_);
/*       */           
/* 33998 */           onChanged();
/*       */         } else {
/* 34000 */           this.uninterpretedOptionBuilder_.addAllMessages(values);
/*       */         } 
/* 34002 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearUninterpretedOption() {
/* 34012 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 34013 */           this.uninterpretedOption_ = Collections.emptyList();
/* 34014 */           this.bitField0_ &= 0xFFFFFFFD;
/* 34015 */           onChanged();
/*       */         } else {
/* 34017 */           this.uninterpretedOptionBuilder_.clear();
/*       */         } 
/* 34019 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder removeUninterpretedOption(int index) {
/* 34029 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 34030 */           ensureUninterpretedOptionIsMutable();
/* 34031 */           this.uninterpretedOption_.remove(index);
/* 34032 */           onChanged();
/*       */         } else {
/* 34034 */           this.uninterpretedOptionBuilder_.remove(index);
/*       */         } 
/* 34036 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public UninterpretedOption.Builder getUninterpretedOptionBuilder(int index) {
/* 34047 */         return getUninterpretedOptionFieldBuilder().getBuilder(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public UninterpretedOptionOrBuilder getUninterpretedOptionOrBuilder(int index) {
/* 34058 */         if (this.uninterpretedOptionBuilder_ == null)
/* 34059 */           return this.uninterpretedOption_.get(index); 
/* 34060 */         return this.uninterpretedOptionBuilder_.getMessageOrBuilder(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public List<? extends UninterpretedOptionOrBuilder> getUninterpretedOptionOrBuilderList() {
/* 34072 */         if (this.uninterpretedOptionBuilder_ != null) {
/* 34073 */           return this.uninterpretedOptionBuilder_.getMessageOrBuilderList();
/*       */         }
/* 34075 */         return Collections.unmodifiableList((List)this.uninterpretedOption_);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public UninterpretedOption.Builder addUninterpretedOptionBuilder() {
/* 34086 */         return getUninterpretedOptionFieldBuilder().addBuilder(
/* 34087 */             UninterpretedOption.getDefaultInstance());
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public UninterpretedOption.Builder addUninterpretedOptionBuilder(int index) {
/* 34098 */         return getUninterpretedOptionFieldBuilder().addBuilder(index, 
/* 34099 */             UninterpretedOption.getDefaultInstance());
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public List<UninterpretedOption.Builder> getUninterpretedOptionBuilderList() {
/* 34110 */         return getUninterpretedOptionFieldBuilder().getBuilderList();
/*       */       }
/*       */ 
/*       */       
/*       */       private RepeatedFieldBuilderV3<UninterpretedOption, UninterpretedOption.Builder, UninterpretedOptionOrBuilder> getUninterpretedOptionFieldBuilder() {
/* 34115 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 34116 */           this
/*       */ 
/*       */ 
/*       */ 
/*       */             
/* 34121 */             .uninterpretedOptionBuilder_ = new RepeatedFieldBuilderV3<>(this.uninterpretedOption_, ((this.bitField0_ & 0x2) != 0), getParentForChildren(), isClean());
/* 34122 */           this.uninterpretedOption_ = null;
/*       */         } 
/* 34124 */         return this.uninterpretedOptionBuilder_;
/*       */       }
/*       */ 
/*       */       
/*       */       public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
/* 34129 */         return super.setUnknownFields(unknownFields);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
/* 34135 */         return super.mergeUnknownFields(unknownFields);
/*       */       }
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 34145 */     private static final EnumValueOptions DEFAULT_INSTANCE = new EnumValueOptions();
/*       */ 
/*       */     
/*       */     public static EnumValueOptions getDefaultInstance() {
/* 34149 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */     
/*       */     @Deprecated
/* 34153 */     public static final Parser<EnumValueOptions> PARSER = new AbstractParser<EnumValueOptions>()
/*       */       {
/*       */ 
/*       */         
/*       */         public EnumValueOptions parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException
/*       */         {
/* 34159 */           return new EnumValueOptions(input, extensionRegistry);
/*       */         }
/*       */       };
/*       */     
/*       */     public static Parser<EnumValueOptions> parser() {
/* 34164 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public Parser<EnumValueOptions> getParserForType() {
/* 34169 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public EnumValueOptions getDefaultInstanceForType() {
/* 34174 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public static interface ServiceOptionsOrBuilder
/*       */     extends GeneratedMessageV3.ExtendableMessageOrBuilder<ServiceOptions>
/*       */   {
/*       */     boolean hasDeprecated();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean getDeprecated();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     List<UninterpretedOption> getUninterpretedOptionList();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     UninterpretedOption getUninterpretedOption(int param1Int);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getUninterpretedOptionCount();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     List<? extends UninterpretedOptionOrBuilder> getUninterpretedOptionOrBuilderList();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     UninterpretedOptionOrBuilder getUninterpretedOptionOrBuilder(int param1Int);
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public static final class ServiceOptions
/*       */     extends GeneratedMessageV3.ExtendableMessage<ServiceOptions>
/*       */     implements ServiceOptionsOrBuilder
/*       */   {
/*       */     private static final long serialVersionUID = 0L;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private int bitField0_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int DEPRECATED_FIELD_NUMBER = 33;
/*       */ 
/*       */ 
/*       */     
/*       */     private boolean deprecated_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int UNINTERPRETED_OPTION_FIELD_NUMBER = 999;
/*       */ 
/*       */ 
/*       */     
/*       */     private List<UninterpretedOption> uninterpretedOption_;
/*       */ 
/*       */ 
/*       */     
/*       */     private byte memoizedIsInitialized;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private ServiceOptions(GeneratedMessageV3.ExtendableBuilder<ServiceOptions, ?> builder)
/*       */     {
/* 34264 */       super(builder);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/* 34444 */       this.memoizedIsInitialized = -1; } private ServiceOptions() { this.memoizedIsInitialized = -1; this.uninterpretedOption_ = Collections.emptyList(); } protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) { return new ServiceOptions(); } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private ServiceOptions(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this(); if (extensionRegistry == null) throw new NullPointerException();  int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { int tag = input.readTag(); switch (tag) { case 0: done = true; continue;case 264: this.bitField0_ |= 0x1; this.deprecated_ = input.readBool(); continue;case 7994: if ((mutable_bitField0_ & 0x2) == 0) { this.uninterpretedOption_ = new ArrayList<>(); mutable_bitField0_ |= 0x2; }  this.uninterpretedOption_.add(input.readMessage(UninterpretedOption.PARSER, extensionRegistry)); continue; }  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this); } finally { if ((mutable_bitField0_ & 0x2) != 0) this.uninterpretedOption_ = Collections.unmodifiableList(this.uninterpretedOption_);  this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return DescriptorProtos.internal_static_google_protobuf_ServiceOptions_descriptor; } protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() { return DescriptorProtos.internal_static_google_protobuf_ServiceOptions_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)ServiceOptions.class, (Class)Builder.class); } public boolean hasDeprecated() { return ((this.bitField0_ & 0x1) != 0); } public boolean getDeprecated() { return this.deprecated_; } public List<UninterpretedOption> getUninterpretedOptionList() { return this.uninterpretedOption_; } public List<? extends UninterpretedOptionOrBuilder> getUninterpretedOptionOrBuilderList() { return (List)this.uninterpretedOption_; } public int getUninterpretedOptionCount() { return this.uninterpretedOption_.size(); }
/*       */     public UninterpretedOption getUninterpretedOption(int index) { return this.uninterpretedOption_.get(index); }
/*       */     public UninterpretedOptionOrBuilder getUninterpretedOptionOrBuilder(int index) { return this.uninterpretedOption_.get(index); }
/* 34447 */     public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized;
/* 34448 */       if (isInitialized == 1) return true; 
/* 34449 */       if (isInitialized == 0) return false;
/*       */       
/* 34451 */       for (int i = 0; i < getUninterpretedOptionCount(); i++) {
/* 34452 */         if (!getUninterpretedOption(i).isInitialized()) {
/* 34453 */           this.memoizedIsInitialized = 0;
/* 34454 */           return false;
/*       */         } 
/*       */       } 
/* 34457 */       if (!extensionsAreInitialized()) {
/* 34458 */         this.memoizedIsInitialized = 0;
/* 34459 */         return false;
/*       */       } 
/* 34461 */       this.memoizedIsInitialized = 1;
/* 34462 */       return true; }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/* 34470 */       GeneratedMessageV3.ExtendableMessage<ServiceOptions>.ExtensionWriter extensionWriter = newExtensionWriter();
/* 34471 */       if ((this.bitField0_ & 0x1) != 0) {
/* 34472 */         output.writeBool(33, this.deprecated_);
/*       */       }
/* 34474 */       for (int i = 0; i < this.uninterpretedOption_.size(); i++) {
/* 34475 */         output.writeMessage(999, this.uninterpretedOption_.get(i));
/*       */       }
/* 34477 */       extensionWriter.writeUntil(536870912, output);
/* 34478 */       this.unknownFields.writeTo(output);
/*       */     }
/*       */ 
/*       */     
/*       */     public int getSerializedSize() {
/* 34483 */       int size = this.memoizedSize;
/* 34484 */       if (size != -1) return size;
/*       */       
/* 34486 */       size = 0;
/* 34487 */       if ((this.bitField0_ & 0x1) != 0) {
/* 34488 */         size += 
/* 34489 */           CodedOutputStream.computeBoolSize(33, this.deprecated_);
/*       */       }
/* 34491 */       for (int i = 0; i < this.uninterpretedOption_.size(); i++) {
/* 34492 */         size += 
/* 34493 */           CodedOutputStream.computeMessageSize(999, this.uninterpretedOption_.get(i));
/*       */       }
/* 34495 */       size += extensionsSerializedSize();
/* 34496 */       size += this.unknownFields.getSerializedSize();
/* 34497 */       this.memoizedSize = size;
/* 34498 */       return size;
/*       */     }
/*       */ 
/*       */     
/*       */     public boolean equals(Object obj) {
/* 34503 */       if (obj == this) {
/* 34504 */         return true;
/*       */       }
/* 34506 */       if (!(obj instanceof ServiceOptions)) {
/* 34507 */         return super.equals(obj);
/*       */       }
/* 34509 */       ServiceOptions other = (ServiceOptions)obj;
/*       */       
/* 34511 */       if (hasDeprecated() != other.hasDeprecated()) return false; 
/* 34512 */       if (hasDeprecated() && 
/* 34513 */         getDeprecated() != other
/* 34514 */         .getDeprecated()) return false;
/*       */ 
/*       */       
/* 34517 */       if (!getUninterpretedOptionList().equals(other.getUninterpretedOptionList())) return false; 
/* 34518 */       if (!this.unknownFields.equals(other.unknownFields)) return false; 
/* 34519 */       if (!getExtensionFields().equals(other.getExtensionFields()))
/* 34520 */         return false; 
/* 34521 */       return true;
/*       */     }
/*       */ 
/*       */     
/*       */     public int hashCode() {
/* 34526 */       if (this.memoizedHashCode != 0) {
/* 34527 */         return this.memoizedHashCode;
/*       */       }
/* 34529 */       int hash = 41;
/* 34530 */       hash = 19 * hash + getDescriptor().hashCode();
/* 34531 */       if (hasDeprecated()) {
/* 34532 */         hash = 37 * hash + 33;
/* 34533 */         hash = 53 * hash + Internal.hashBoolean(
/* 34534 */             getDeprecated());
/*       */       } 
/* 34536 */       if (getUninterpretedOptionCount() > 0) {
/* 34537 */         hash = 37 * hash + 999;
/* 34538 */         hash = 53 * hash + getUninterpretedOptionList().hashCode();
/*       */       } 
/* 34540 */       hash = hashFields(hash, getExtensionFields());
/* 34541 */       hash = 29 * hash + this.unknownFields.hashCode();
/* 34542 */       this.memoizedHashCode = hash;
/* 34543 */       return hash;
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static ServiceOptions parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
/* 34549 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static ServiceOptions parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 34555 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static ServiceOptions parseFrom(ByteString data) throws InvalidProtocolBufferException {
/* 34560 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static ServiceOptions parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 34566 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static ServiceOptions parseFrom(byte[] data) throws InvalidProtocolBufferException {
/* 34570 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static ServiceOptions parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 34576 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static ServiceOptions parseFrom(InputStream input) throws IOException {
/* 34580 */       return 
/* 34581 */         GeneratedMessageV3.<ServiceOptions>parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static ServiceOptions parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 34587 */       return 
/* 34588 */         GeneratedMessageV3.<ServiceOptions>parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static ServiceOptions parseDelimitedFrom(InputStream input) throws IOException {
/* 34592 */       return 
/* 34593 */         GeneratedMessageV3.<ServiceOptions>parseDelimitedWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static ServiceOptions parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 34599 */       return 
/* 34600 */         GeneratedMessageV3.<ServiceOptions>parseDelimitedWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static ServiceOptions parseFrom(CodedInputStream input) throws IOException {
/* 34605 */       return 
/* 34606 */         GeneratedMessageV3.<ServiceOptions>parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static ServiceOptions parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 34612 */       return 
/* 34613 */         GeneratedMessageV3.<ServiceOptions>parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public Builder newBuilderForType() {
/* 34617 */       return newBuilder();
/*       */     } public static Builder newBuilder() {
/* 34619 */       return DEFAULT_INSTANCE.toBuilder();
/*       */     }
/*       */     public static Builder newBuilder(ServiceOptions prototype) {
/* 34622 */       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
/*       */     }
/*       */     
/*       */     public Builder toBuilder() {
/* 34626 */       return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder())
/* 34627 */         .mergeFrom(this);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
/* 34633 */       Builder builder = new Builder(parent);
/* 34634 */       return builder;
/*       */     }
/*       */     
/*       */     public static final class Builder
/*       */       extends GeneratedMessageV3.ExtendableBuilder<ServiceOptions, Builder>
/*       */       implements ServiceOptionsOrBuilder {
/*       */       private int bitField0_;
/*       */       private boolean deprecated_;
/*       */       private List<UninterpretedOption> uninterpretedOption_;
/*       */       private RepeatedFieldBuilderV3<UninterpretedOption, UninterpretedOption.Builder, UninterpretedOptionOrBuilder> uninterpretedOptionBuilder_;
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/* 34646 */         return DescriptorProtos.internal_static_google_protobuf_ServiceOptions_descriptor;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
/* 34652 */         return DescriptorProtos.internal_static_google_protobuf_ServiceOptions_fieldAccessorTable
/* 34653 */           .ensureFieldAccessorsInitialized((Class) ServiceOptions.class, (Class)Builder.class);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private Builder()
/*       */       {
/* 34936 */         this
/* 34937 */           .uninterpretedOption_ = Collections.emptyList(); maybeForceBuilderInitialization(); } private Builder(GeneratedMessageV3.BuilderParent parent) { super(parent); this.uninterpretedOption_ = Collections.emptyList(); maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (GeneratedMessageV3.alwaysUseFieldBuilders) getUninterpretedOptionFieldBuilder();  } public Builder clear() { super.clear(); this.deprecated_ = false; this.bitField0_ &= 0xFFFFFFFE; if (this.uninterpretedOptionBuilder_ == null) { this.uninterpretedOption_ = Collections.emptyList(); this.bitField0_ &= 0xFFFFFFFD; } else { this.uninterpretedOptionBuilder_.clear(); }  return this; } public Descriptors.Descriptor getDescriptorForType() { return DescriptorProtos.internal_static_google_protobuf_ServiceOptions_descriptor; } public ServiceOptions getDefaultInstanceForType() { return ServiceOptions.getDefaultInstance(); } public ServiceOptions build() { ServiceOptions result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public ServiceOptions buildPartial() { ServiceOptions result = new ServiceOptions(this); int from_bitField0_ = this.bitField0_; int to_bitField0_ = 0; if ((from_bitField0_ & 0x1) != 0) { result.deprecated_ = this.deprecated_; to_bitField0_ |= 0x1; }  if (this.uninterpretedOptionBuilder_ == null) { if ((this.bitField0_ & 0x2) != 0) { this.uninterpretedOption_ = Collections.unmodifiableList(this.uninterpretedOption_); this.bitField0_ &= 0xFFFFFFFD; }  result.uninterpretedOption_ = this.uninterpretedOption_; } else { result.uninterpretedOption_ = this.uninterpretedOptionBuilder_.build(); }  result.bitField0_ = to_bitField0_; onBuilt(); return result; } public Builder clone() { return super.clone(); } public Builder setField(Descriptors.FieldDescriptor field, Object value) { return super.setField(field, value); } public Builder clearField(Descriptors.FieldDescriptor field) { return super.clearField(field); } public Builder clearOneof(Descriptors.OneofDescriptor oneof) { return super.clearOneof(oneof); } public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) { return super.setRepeatedField(field, index, value); } public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) { return super.addRepeatedField(field, value); } public <Type> Builder setExtension(GeneratedMessage.GeneratedExtension<ServiceOptions, Type> extension, Type value) { return super.<Type>setExtension(extension, value); } public <Type> Builder setExtension(GeneratedMessage.GeneratedExtension<ServiceOptions, List<Type>> extension, int index, Type value) { return super.<Type>setExtension(extension, index, value); } public <Type> Builder addExtension(GeneratedMessage.GeneratedExtension<ServiceOptions, List<Type>> extension, Type value) { return super.<Type>addExtension(extension, value); } public <Type> Builder clearExtension(GeneratedMessage.GeneratedExtension<ServiceOptions, ?> extension) { return super.clearExtension(extension); } public Builder mergeFrom(Message other) { if (other instanceof ServiceOptions) return mergeFrom((ServiceOptions)other);  super.mergeFrom(other); return this; } public Builder mergeFrom(ServiceOptions other) { if (other == ServiceOptions.getDefaultInstance()) return this;  if (other.hasDeprecated()) setDeprecated(other.getDeprecated());  if (this.uninterpretedOptionBuilder_ == null) { if (!other.uninterpretedOption_.isEmpty()) { if (this.uninterpretedOption_.isEmpty()) { this.uninterpretedOption_ = other.uninterpretedOption_; this.bitField0_ &= 0xFFFFFFFD; } else { ensureUninterpretedOptionIsMutable(); this.uninterpretedOption_.addAll(other.uninterpretedOption_); }  onChanged(); }  } else if (!other.uninterpretedOption_.isEmpty()) { if (this.uninterpretedOptionBuilder_.isEmpty()) { this.uninterpretedOptionBuilder_.dispose(); this.uninterpretedOptionBuilder_ = null; this.uninterpretedOption_ = other.uninterpretedOption_; this.bitField0_ &= 0xFFFFFFFD; this.uninterpretedOptionBuilder_ = GeneratedMessageV3.alwaysUseFieldBuilders ? getUninterpretedOptionFieldBuilder() : null; } else { this.uninterpretedOptionBuilder_.addAllMessages(other.uninterpretedOption_); }  }  mergeExtensionFields(other); mergeUnknownFields(other.unknownFields); onChanged(); return this; } public final boolean isInitialized() { for (int i = 0; i < getUninterpretedOptionCount(); i++) { if (!getUninterpretedOption(i).isInitialized()) return false;  }  if (!extensionsAreInitialized()) return false;  return true; } public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { ServiceOptions parsedMessage = null; try { parsedMessage = ServiceOptions.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (ServiceOptions)e.getUnfinishedMessage(); throw e.unwrapIOException(); } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; } public boolean hasDeprecated() { return ((this.bitField0_ & 0x1) != 0); } public boolean getDeprecated() { return this.deprecated_; } public Builder setDeprecated(boolean value) { this.bitField0_ |= 0x1; this.deprecated_ = value; onChanged(); return this; }
/*       */       public Builder clearDeprecated() { this.bitField0_ &= 0xFFFFFFFE; this.deprecated_ = false; onChanged(); return this; }
/* 34939 */       private void ensureUninterpretedOptionIsMutable() { if ((this.bitField0_ & 0x2) == 0) {
/* 34940 */           this.uninterpretedOption_ = new ArrayList<>(this.uninterpretedOption_);
/* 34941 */           this.bitField0_ |= 0x2;
/*       */         }  }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public List<UninterpretedOption> getUninterpretedOptionList() {
/* 34956 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 34957 */           return Collections.unmodifiableList(this.uninterpretedOption_);
/*       */         }
/* 34959 */         return this.uninterpretedOptionBuilder_.getMessageList();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getUninterpretedOptionCount() {
/* 34970 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 34971 */           return this.uninterpretedOption_.size();
/*       */         }
/* 34973 */         return this.uninterpretedOptionBuilder_.getCount();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public UninterpretedOption getUninterpretedOption(int index) {
/* 34984 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 34985 */           return this.uninterpretedOption_.get(index);
/*       */         }
/* 34987 */         return this.uninterpretedOptionBuilder_.getMessage(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setUninterpretedOption(int index, UninterpretedOption value) {
/* 34999 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 35000 */           if (value == null) {
/* 35001 */             throw new NullPointerException();
/*       */           }
/* 35003 */           ensureUninterpretedOptionIsMutable();
/* 35004 */           this.uninterpretedOption_.set(index, value);
/* 35005 */           onChanged();
/*       */         } else {
/* 35007 */           this.uninterpretedOptionBuilder_.setMessage(index, value);
/*       */         } 
/* 35009 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setUninterpretedOption(int index, UninterpretedOption.Builder builderForValue) {
/* 35020 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 35021 */           ensureUninterpretedOptionIsMutable();
/* 35022 */           this.uninterpretedOption_.set(index, builderForValue.build());
/* 35023 */           onChanged();
/*       */         } else {
/* 35025 */           this.uninterpretedOptionBuilder_.setMessage(index, builderForValue.build());
/*       */         } 
/* 35027 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addUninterpretedOption(UninterpretedOption value) {
/* 35037 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 35038 */           if (value == null) {
/* 35039 */             throw new NullPointerException();
/*       */           }
/* 35041 */           ensureUninterpretedOptionIsMutable();
/* 35042 */           this.uninterpretedOption_.add(value);
/* 35043 */           onChanged();
/*       */         } else {
/* 35045 */           this.uninterpretedOptionBuilder_.addMessage(value);
/*       */         } 
/* 35047 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addUninterpretedOption(int index, UninterpretedOption value) {
/* 35058 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 35059 */           if (value == null) {
/* 35060 */             throw new NullPointerException();
/*       */           }
/* 35062 */           ensureUninterpretedOptionIsMutable();
/* 35063 */           this.uninterpretedOption_.add(index, value);
/* 35064 */           onChanged();
/*       */         } else {
/* 35066 */           this.uninterpretedOptionBuilder_.addMessage(index, value);
/*       */         } 
/* 35068 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addUninterpretedOption(UninterpretedOption.Builder builderForValue) {
/* 35079 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 35080 */           ensureUninterpretedOptionIsMutable();
/* 35081 */           this.uninterpretedOption_.add(builderForValue.build());
/* 35082 */           onChanged();
/*       */         } else {
/* 35084 */           this.uninterpretedOptionBuilder_.addMessage(builderForValue.build());
/*       */         } 
/* 35086 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addUninterpretedOption(int index, UninterpretedOption.Builder builderForValue) {
/* 35097 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 35098 */           ensureUninterpretedOptionIsMutable();
/* 35099 */           this.uninterpretedOption_.add(index, builderForValue.build());
/* 35100 */           onChanged();
/*       */         } else {
/* 35102 */           this.uninterpretedOptionBuilder_.addMessage(index, builderForValue.build());
/*       */         } 
/* 35104 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addAllUninterpretedOption(Iterable<? extends UninterpretedOption> values) {
/* 35115 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 35116 */           ensureUninterpretedOptionIsMutable();
/* 35117 */           AbstractMessageLite.Builder.addAll(values, this.uninterpretedOption_);
/*       */           
/* 35119 */           onChanged();
/*       */         } else {
/* 35121 */           this.uninterpretedOptionBuilder_.addAllMessages(values);
/*       */         } 
/* 35123 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearUninterpretedOption() {
/* 35133 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 35134 */           this.uninterpretedOption_ = Collections.emptyList();
/* 35135 */           this.bitField0_ &= 0xFFFFFFFD;
/* 35136 */           onChanged();
/*       */         } else {
/* 35138 */           this.uninterpretedOptionBuilder_.clear();
/*       */         } 
/* 35140 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder removeUninterpretedOption(int index) {
/* 35150 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 35151 */           ensureUninterpretedOptionIsMutable();
/* 35152 */           this.uninterpretedOption_.remove(index);
/* 35153 */           onChanged();
/*       */         } else {
/* 35155 */           this.uninterpretedOptionBuilder_.remove(index);
/*       */         } 
/* 35157 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public UninterpretedOption.Builder getUninterpretedOptionBuilder(int index) {
/* 35168 */         return getUninterpretedOptionFieldBuilder().getBuilder(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public UninterpretedOptionOrBuilder getUninterpretedOptionOrBuilder(int index) {
/* 35179 */         if (this.uninterpretedOptionBuilder_ == null)
/* 35180 */           return this.uninterpretedOption_.get(index); 
/* 35181 */         return this.uninterpretedOptionBuilder_.getMessageOrBuilder(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public List<? extends UninterpretedOptionOrBuilder> getUninterpretedOptionOrBuilderList() {
/* 35193 */         if (this.uninterpretedOptionBuilder_ != null) {
/* 35194 */           return this.uninterpretedOptionBuilder_.getMessageOrBuilderList();
/*       */         }
/* 35196 */         return Collections.unmodifiableList((List)this.uninterpretedOption_);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public UninterpretedOption.Builder addUninterpretedOptionBuilder() {
/* 35207 */         return getUninterpretedOptionFieldBuilder().addBuilder(
/* 35208 */             UninterpretedOption.getDefaultInstance());
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public UninterpretedOption.Builder addUninterpretedOptionBuilder(int index) {
/* 35219 */         return getUninterpretedOptionFieldBuilder().addBuilder(index, 
/* 35220 */             UninterpretedOption.getDefaultInstance());
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public List<UninterpretedOption.Builder> getUninterpretedOptionBuilderList() {
/* 35231 */         return getUninterpretedOptionFieldBuilder().getBuilderList();
/*       */       }
/*       */ 
/*       */       
/*       */       private RepeatedFieldBuilderV3<UninterpretedOption, UninterpretedOption.Builder, UninterpretedOptionOrBuilder> getUninterpretedOptionFieldBuilder() {
/* 35236 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 35237 */           this
/*       */ 
/*       */ 
/*       */ 
/*       */             
/* 35242 */             .uninterpretedOptionBuilder_ = new RepeatedFieldBuilderV3<>(this.uninterpretedOption_, ((this.bitField0_ & 0x2) != 0), getParentForChildren(), isClean());
/* 35243 */           this.uninterpretedOption_ = null;
/*       */         } 
/* 35245 */         return this.uninterpretedOptionBuilder_;
/*       */       }
/*       */ 
/*       */       
/*       */       public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
/* 35250 */         return super.setUnknownFields(unknownFields);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
/* 35256 */         return super.mergeUnknownFields(unknownFields);
/*       */       }
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 35266 */     private static final ServiceOptions DEFAULT_INSTANCE = new ServiceOptions();
/*       */ 
/*       */     
/*       */     public static ServiceOptions getDefaultInstance() {
/* 35270 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */     
/*       */     @Deprecated
/* 35274 */     public static final Parser<ServiceOptions> PARSER = new AbstractParser<ServiceOptions>()
/*       */       {
/*       */ 
/*       */         
/*       */         public ServiceOptions parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException
/*       */         {
/* 35280 */           return new ServiceOptions(input, extensionRegistry);
/*       */         }
/*       */       };
/*       */     
/*       */     public static Parser<ServiceOptions> parser() {
/* 35285 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public Parser<ServiceOptions> getParserForType() {
/* 35290 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public ServiceOptions getDefaultInstanceForType() {
/* 35295 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public static interface MethodOptionsOrBuilder
/*       */     extends GeneratedMessageV3.ExtendableMessageOrBuilder<MethodOptions>
/*       */   {
/*       */     boolean hasDeprecated();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean getDeprecated();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIdempotencyLevel();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     MethodOptions.IdempotencyLevel getIdempotencyLevel();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     List<UninterpretedOption> getUninterpretedOptionList();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     UninterpretedOption getUninterpretedOption(int param1Int);
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getUninterpretedOptionCount();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     List<? extends UninterpretedOptionOrBuilder> getUninterpretedOptionOrBuilderList();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     UninterpretedOptionOrBuilder getUninterpretedOptionOrBuilder(int param1Int);
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public static final class MethodOptions
/*       */     extends GeneratedMessageV3.ExtendableMessage<MethodOptions>
/*       */     implements MethodOptionsOrBuilder
/*       */   {
/*       */     private static final long serialVersionUID = 0L;
/*       */ 
/*       */ 
/*       */     
/*       */     private int bitField0_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int DEPRECATED_FIELD_NUMBER = 33;
/*       */ 
/*       */ 
/*       */     
/*       */     private boolean deprecated_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int IDEMPOTENCY_LEVEL_FIELD_NUMBER = 34;
/*       */ 
/*       */ 
/*       */     
/*       */     private int idempotencyLevel_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int UNINTERPRETED_OPTION_FIELD_NUMBER = 999;
/*       */ 
/*       */ 
/*       */     
/*       */     private List<UninterpretedOption> uninterpretedOption_;
/*       */ 
/*       */ 
/*       */     
/*       */     private byte memoizedIsInitialized;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private MethodOptions(GeneratedMessageV3.ExtendableBuilder<MethodOptions, ?> builder)
/*       */     {
/* 35396 */       super(builder);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/* 35735 */       this.memoizedIsInitialized = -1; } private MethodOptions() { this.memoizedIsInitialized = -1; this.idempotencyLevel_ = 0; this.uninterpretedOption_ = Collections.emptyList(); } protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) { return new MethodOptions(); } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private MethodOptions(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this(); if (extensionRegistry == null) throw new NullPointerException();  int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { int rawValue; IdempotencyLevel value; int tag = input.readTag(); switch (tag) { case 0: done = true; continue;case 264: this.bitField0_ |= 0x1; this.deprecated_ = input.readBool(); continue;case 272: rawValue = input.readEnum(); value = IdempotencyLevel.valueOf(rawValue); if (value == null) { unknownFields.mergeVarintField(34, rawValue); continue; }  this.bitField0_ |= 0x2; this.idempotencyLevel_ = rawValue; continue;case 7994: if ((mutable_bitField0_ & 0x4) == 0) { this.uninterpretedOption_ = new ArrayList<>(); mutable_bitField0_ |= 0x4; }  this.uninterpretedOption_.add(input.readMessage(UninterpretedOption.PARSER, extensionRegistry)); continue; }  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this); } finally { if ((mutable_bitField0_ & 0x4) != 0) this.uninterpretedOption_ = Collections.unmodifiableList(this.uninterpretedOption_);  this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return DescriptorProtos.internal_static_google_protobuf_MethodOptions_descriptor; } protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() { return DescriptorProtos.internal_static_google_protobuf_MethodOptions_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)MethodOptions.class, (Class)Builder.class); } public enum IdempotencyLevel implements ProtocolMessageEnum {
/*       */       IDEMPOTENCY_UNKNOWN(0), NO_SIDE_EFFECTS(1), IDEMPOTENT(2); public static final int IDEMPOTENCY_UNKNOWN_VALUE = 0; public static final int NO_SIDE_EFFECTS_VALUE = 1; public static final int IDEMPOTENT_VALUE = 2; private static final Internal.EnumLiteMap<IdempotencyLevel> internalValueMap = new Internal.EnumLiteMap<IdempotencyLevel>() { public IdempotencyLevel findValueByNumber(int number) { return IdempotencyLevel.forNumber(number); } }
/*       */       ; private static final IdempotencyLevel[] VALUES = values(); private final int value; public final int getNumber() { return this.value; } public static IdempotencyLevel forNumber(int value) { switch (value) { case 0: return IDEMPOTENCY_UNKNOWN;case 1: return NO_SIDE_EFFECTS;case 2: return IDEMPOTENT; }  return null; } public static Internal.EnumLiteMap<IdempotencyLevel> internalGetValueMap() { return internalValueMap; } static {  } public final Descriptors.EnumValueDescriptor getValueDescriptor() { return getDescriptor().getValues().get(ordinal()); } public final Descriptors.EnumDescriptor getDescriptorForType() { return getDescriptor(); } public static final Descriptors.EnumDescriptor getDescriptor() { return MethodOptions.getDescriptor().getEnumTypes().get(0); } IdempotencyLevel(int value) { this.value = value; } } public boolean hasDeprecated() { return ((this.bitField0_ & 0x1) != 0); } public boolean getDeprecated() { return this.deprecated_; } public boolean hasIdempotencyLevel() { return ((this.bitField0_ & 0x2) != 0); } public IdempotencyLevel getIdempotencyLevel() { IdempotencyLevel result = IdempotencyLevel.valueOf(this.idempotencyLevel_); return (result == null) ? IdempotencyLevel.IDEMPOTENCY_UNKNOWN : result; } public List<UninterpretedOption> getUninterpretedOptionList() { return this.uninterpretedOption_; } public List<? extends UninterpretedOptionOrBuilder> getUninterpretedOptionOrBuilderList() { return (List)this.uninterpretedOption_; } public int getUninterpretedOptionCount() { return this.uninterpretedOption_.size(); } public UninterpretedOption getUninterpretedOption(int index) { return this.uninterpretedOption_.get(index); } public UninterpretedOptionOrBuilder getUninterpretedOptionOrBuilder(int index) { return this.uninterpretedOption_.get(index); }
/* 35738 */     public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized;
/* 35739 */       if (isInitialized == 1) return true; 
/* 35740 */       if (isInitialized == 0) return false;
/*       */       
/* 35742 */       for (int i = 0; i < getUninterpretedOptionCount(); i++) {
/* 35743 */         if (!getUninterpretedOption(i).isInitialized()) {
/* 35744 */           this.memoizedIsInitialized = 0;
/* 35745 */           return false;
/*       */         } 
/*       */       } 
/* 35748 */       if (!extensionsAreInitialized()) {
/* 35749 */         this.memoizedIsInitialized = 0;
/* 35750 */         return false;
/*       */       } 
/* 35752 */       this.memoizedIsInitialized = 1;
/* 35753 */       return true; }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/* 35761 */       GeneratedMessageV3.ExtendableMessage<MethodOptions>.ExtensionWriter extensionWriter = newExtensionWriter();
/* 35762 */       if ((this.bitField0_ & 0x1) != 0) {
/* 35763 */         output.writeBool(33, this.deprecated_);
/*       */       }
/* 35765 */       if ((this.bitField0_ & 0x2) != 0) {
/* 35766 */         output.writeEnum(34, this.idempotencyLevel_);
/*       */       }
/* 35768 */       for (int i = 0; i < this.uninterpretedOption_.size(); i++) {
/* 35769 */         output.writeMessage(999, this.uninterpretedOption_.get(i));
/*       */       }
/* 35771 */       extensionWriter.writeUntil(536870912, output);
/* 35772 */       this.unknownFields.writeTo(output);
/*       */     }
/*       */ 
/*       */     
/*       */     public int getSerializedSize() {
/* 35777 */       int size = this.memoizedSize;
/* 35778 */       if (size != -1) return size;
/*       */       
/* 35780 */       size = 0;
/* 35781 */       if ((this.bitField0_ & 0x1) != 0) {
/* 35782 */         size += 
/* 35783 */           CodedOutputStream.computeBoolSize(33, this.deprecated_);
/*       */       }
/* 35785 */       if ((this.bitField0_ & 0x2) != 0) {
/* 35786 */         size += 
/* 35787 */           CodedOutputStream.computeEnumSize(34, this.idempotencyLevel_);
/*       */       }
/* 35789 */       for (int i = 0; i < this.uninterpretedOption_.size(); i++) {
/* 35790 */         size += 
/* 35791 */           CodedOutputStream.computeMessageSize(999, this.uninterpretedOption_.get(i));
/*       */       }
/* 35793 */       size += extensionsSerializedSize();
/* 35794 */       size += this.unknownFields.getSerializedSize();
/* 35795 */       this.memoizedSize = size;
/* 35796 */       return size;
/*       */     }
/*       */ 
/*       */     
/*       */     public boolean equals(Object obj) {
/* 35801 */       if (obj == this) {
/* 35802 */         return true;
/*       */       }
/* 35804 */       if (!(obj instanceof MethodOptions)) {
/* 35805 */         return super.equals(obj);
/*       */       }
/* 35807 */       MethodOptions other = (MethodOptions)obj;
/*       */       
/* 35809 */       if (hasDeprecated() != other.hasDeprecated()) return false; 
/* 35810 */       if (hasDeprecated() && 
/* 35811 */         getDeprecated() != other
/* 35812 */         .getDeprecated()) return false;
/*       */       
/* 35814 */       if (hasIdempotencyLevel() != other.hasIdempotencyLevel()) return false; 
/* 35815 */       if (hasIdempotencyLevel() && 
/* 35816 */         this.idempotencyLevel_ != other.idempotencyLevel_) return false;
/*       */ 
/*       */       
/* 35819 */       if (!getUninterpretedOptionList().equals(other.getUninterpretedOptionList())) return false; 
/* 35820 */       if (!this.unknownFields.equals(other.unknownFields)) return false; 
/* 35821 */       if (!getExtensionFields().equals(other.getExtensionFields()))
/* 35822 */         return false; 
/* 35823 */       return true;
/*       */     }
/*       */ 
/*       */     
/*       */     public int hashCode() {
/* 35828 */       if (this.memoizedHashCode != 0) {
/* 35829 */         return this.memoizedHashCode;
/*       */       }
/* 35831 */       int hash = 41;
/* 35832 */       hash = 19 * hash + getDescriptor().hashCode();
/* 35833 */       if (hasDeprecated()) {
/* 35834 */         hash = 37 * hash + 33;
/* 35835 */         hash = 53 * hash + Internal.hashBoolean(
/* 35836 */             getDeprecated());
/*       */       } 
/* 35838 */       if (hasIdempotencyLevel()) {
/* 35839 */         hash = 37 * hash + 34;
/* 35840 */         hash = 53 * hash + this.idempotencyLevel_;
/*       */       } 
/* 35842 */       if (getUninterpretedOptionCount() > 0) {
/* 35843 */         hash = 37 * hash + 999;
/* 35844 */         hash = 53 * hash + getUninterpretedOptionList().hashCode();
/*       */       } 
/* 35846 */       hash = hashFields(hash, getExtensionFields());
/* 35847 */       hash = 29 * hash + this.unknownFields.hashCode();
/* 35848 */       this.memoizedHashCode = hash;
/* 35849 */       return hash;
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static MethodOptions parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
/* 35855 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static MethodOptions parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 35861 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static MethodOptions parseFrom(ByteString data) throws InvalidProtocolBufferException {
/* 35866 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static MethodOptions parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 35872 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static MethodOptions parseFrom(byte[] data) throws InvalidProtocolBufferException {
/* 35876 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static MethodOptions parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 35882 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static MethodOptions parseFrom(InputStream input) throws IOException {
/* 35886 */       return 
/* 35887 */         GeneratedMessageV3.<MethodOptions>parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static MethodOptions parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 35893 */       return 
/* 35894 */         GeneratedMessageV3.<MethodOptions>parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static MethodOptions parseDelimitedFrom(InputStream input) throws IOException {
/* 35898 */       return 
/* 35899 */         GeneratedMessageV3.<MethodOptions>parseDelimitedWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static MethodOptions parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 35905 */       return 
/* 35906 */         GeneratedMessageV3.<MethodOptions>parseDelimitedWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static MethodOptions parseFrom(CodedInputStream input) throws IOException {
/* 35911 */       return 
/* 35912 */         GeneratedMessageV3.<MethodOptions>parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static MethodOptions parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 35918 */       return 
/* 35919 */         GeneratedMessageV3.<MethodOptions>parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public Builder newBuilderForType() {
/* 35923 */       return newBuilder();
/*       */     } public static Builder newBuilder() {
/* 35925 */       return DEFAULT_INSTANCE.toBuilder();
/*       */     }
/*       */     public static Builder newBuilder(MethodOptions prototype) {
/* 35928 */       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
/*       */     }
/*       */     
/*       */     public Builder toBuilder() {
/* 35932 */       return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder())
/* 35933 */         .mergeFrom(this);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
/* 35939 */       Builder builder = new Builder(parent);
/* 35940 */       return builder;
/*       */     }
/*       */     
/*       */     public static final class Builder
/*       */       extends GeneratedMessageV3.ExtendableBuilder<MethodOptions, Builder> implements MethodOptionsOrBuilder {
/*       */       private int bitField0_;
/*       */       private boolean deprecated_;
/*       */       private int idempotencyLevel_;
/*       */       private List<UninterpretedOption> uninterpretedOption_;
/*       */       private RepeatedFieldBuilderV3<UninterpretedOption, UninterpretedOption.Builder, UninterpretedOptionOrBuilder> uninterpretedOptionBuilder_;
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/* 35952 */         return DescriptorProtos.internal_static_google_protobuf_MethodOptions_descriptor;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
/* 35958 */         return DescriptorProtos.internal_static_google_protobuf_MethodOptions_fieldAccessorTable
/* 35959 */           .ensureFieldAccessorsInitialized((Class) MethodOptions.class, (Class)Builder.class);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private Builder()
/*       */       {
/* 36251 */         this.idempotencyLevel_ = 0;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 36294 */         this
/* 36295 */           .uninterpretedOption_ = Collections.emptyList(); maybeForceBuilderInitialization(); } private Builder(GeneratedMessageV3.BuilderParent parent) { super(parent); this.idempotencyLevel_ = 0; this.uninterpretedOption_ = Collections.emptyList(); maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (GeneratedMessageV3.alwaysUseFieldBuilders) getUninterpretedOptionFieldBuilder();  } public Builder clear() { super.clear(); this.deprecated_ = false; this.bitField0_ &= 0xFFFFFFFE; this.idempotencyLevel_ = 0; this.bitField0_ &= 0xFFFFFFFD; if (this.uninterpretedOptionBuilder_ == null) { this.uninterpretedOption_ = Collections.emptyList(); this.bitField0_ &= 0xFFFFFFFB; } else { this.uninterpretedOptionBuilder_.clear(); }  return this; } public Descriptors.Descriptor getDescriptorForType() { return DescriptorProtos.internal_static_google_protobuf_MethodOptions_descriptor; } public MethodOptions getDefaultInstanceForType() { return MethodOptions.getDefaultInstance(); } public MethodOptions build() { MethodOptions result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public MethodOptions buildPartial() { MethodOptions result = new MethodOptions(this); int from_bitField0_ = this.bitField0_; int to_bitField0_ = 0; if ((from_bitField0_ & 0x1) != 0) { result.deprecated_ = this.deprecated_; to_bitField0_ |= 0x1; }  if ((from_bitField0_ & 0x2) != 0) to_bitField0_ |= 0x2;  result.idempotencyLevel_ = this.idempotencyLevel_; if (this.uninterpretedOptionBuilder_ == null) { if ((this.bitField0_ & 0x4) != 0) { this.uninterpretedOption_ = Collections.unmodifiableList(this.uninterpretedOption_); this.bitField0_ &= 0xFFFFFFFB; }  result.uninterpretedOption_ = this.uninterpretedOption_; } else { result.uninterpretedOption_ = this.uninterpretedOptionBuilder_.build(); }  result.bitField0_ = to_bitField0_; onBuilt(); return result; } public Builder clone() { return super.clone(); } public Builder setField(Descriptors.FieldDescriptor field, Object value) { return super.setField(field, value); } public Builder clearField(Descriptors.FieldDescriptor field) { return super.clearField(field); } public Builder clearOneof(Descriptors.OneofDescriptor oneof) { return super.clearOneof(oneof); } public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) { return super.setRepeatedField(field, index, value); } public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) { return super.addRepeatedField(field, value); } public <Type> Builder setExtension(GeneratedMessage.GeneratedExtension<MethodOptions, Type> extension, Type value) { return super.<Type>setExtension(extension, value); } public <Type> Builder setExtension(GeneratedMessage.GeneratedExtension<MethodOptions, List<Type>> extension, int index, Type value) { return super.<Type>setExtension(extension, index, value); } public <Type> Builder addExtension(GeneratedMessage.GeneratedExtension<MethodOptions, List<Type>> extension, Type value) { return super.<Type>addExtension(extension, value); } public <Type> Builder clearExtension(GeneratedMessage.GeneratedExtension<MethodOptions, ?> extension) { return super.clearExtension(extension); } public Builder mergeFrom(Message other) { if (other instanceof MethodOptions) return mergeFrom((MethodOptions)other);  super.mergeFrom(other); return this; } public Builder mergeFrom(MethodOptions other) { if (other == MethodOptions.getDefaultInstance()) return this;  if (other.hasDeprecated()) setDeprecated(other.getDeprecated());  if (other.hasIdempotencyLevel()) setIdempotencyLevel(other.getIdempotencyLevel());  if (this.uninterpretedOptionBuilder_ == null) { if (!other.uninterpretedOption_.isEmpty()) { if (this.uninterpretedOption_.isEmpty()) { this.uninterpretedOption_ = other.uninterpretedOption_; this.bitField0_ &= 0xFFFFFFFB; } else { ensureUninterpretedOptionIsMutable(); this.uninterpretedOption_.addAll(other.uninterpretedOption_); }  onChanged(); }  } else if (!other.uninterpretedOption_.isEmpty()) { if (this.uninterpretedOptionBuilder_.isEmpty()) { this.uninterpretedOptionBuilder_.dispose(); this.uninterpretedOptionBuilder_ = null; this.uninterpretedOption_ = other.uninterpretedOption_; this.bitField0_ &= 0xFFFFFFFB; this.uninterpretedOptionBuilder_ = GeneratedMessageV3.alwaysUseFieldBuilders ? getUninterpretedOptionFieldBuilder() : null; } else { this.uninterpretedOptionBuilder_.addAllMessages(other.uninterpretedOption_); }  }  mergeExtensionFields(other); mergeUnknownFields(other.unknownFields); onChanged(); return this; } public final boolean isInitialized() { for (int i = 0; i < getUninterpretedOptionCount(); i++) { if (!getUninterpretedOption(i).isInitialized()) return false;  }  if (!extensionsAreInitialized()) return false;  return true; } public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { MethodOptions parsedMessage = null; try { parsedMessage = MethodOptions.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (MethodOptions)e.getUnfinishedMessage(); throw e.unwrapIOException(); } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; } public boolean hasDeprecated() { return ((this.bitField0_ & 0x1) != 0); } public boolean getDeprecated() { return this.deprecated_; } public Builder setDeprecated(boolean value) { this.bitField0_ |= 0x1; this.deprecated_ = value; onChanged(); return this; } public Builder clearDeprecated() { this.bitField0_ &= 0xFFFFFFFE; this.deprecated_ = false; onChanged(); return this; } public boolean hasIdempotencyLevel() { return ((this.bitField0_ & 0x2) != 0); } public IdempotencyLevel getIdempotencyLevel() { IdempotencyLevel result = IdempotencyLevel.valueOf(this.idempotencyLevel_); return (result == null) ? IdempotencyLevel.IDEMPOTENCY_UNKNOWN : result; } public Builder setIdempotencyLevel(IdempotencyLevel value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x2; this.idempotencyLevel_ = value.getNumber(); onChanged(); return this; }
/*       */       public Builder clearIdempotencyLevel() { this.bitField0_ &= 0xFFFFFFFD; this.idempotencyLevel_ = 0; onChanged(); return this; }
/* 36297 */       private void ensureUninterpretedOptionIsMutable() { if ((this.bitField0_ & 0x4) == 0) {
/* 36298 */           this.uninterpretedOption_ = new ArrayList<>(this.uninterpretedOption_);
/* 36299 */           this.bitField0_ |= 0x4;
/*       */         }  }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public List<UninterpretedOption> getUninterpretedOptionList() {
/* 36314 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 36315 */           return Collections.unmodifiableList(this.uninterpretedOption_);
/*       */         }
/* 36317 */         return this.uninterpretedOptionBuilder_.getMessageList();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getUninterpretedOptionCount() {
/* 36328 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 36329 */           return this.uninterpretedOption_.size();
/*       */         }
/* 36331 */         return this.uninterpretedOptionBuilder_.getCount();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public UninterpretedOption getUninterpretedOption(int index) {
/* 36342 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 36343 */           return this.uninterpretedOption_.get(index);
/*       */         }
/* 36345 */         return this.uninterpretedOptionBuilder_.getMessage(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setUninterpretedOption(int index, UninterpretedOption value) {
/* 36357 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 36358 */           if (value == null) {
/* 36359 */             throw new NullPointerException();
/*       */           }
/* 36361 */           ensureUninterpretedOptionIsMutable();
/* 36362 */           this.uninterpretedOption_.set(index, value);
/* 36363 */           onChanged();
/*       */         } else {
/* 36365 */           this.uninterpretedOptionBuilder_.setMessage(index, value);
/*       */         } 
/* 36367 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setUninterpretedOption(int index, UninterpretedOption.Builder builderForValue) {
/* 36378 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 36379 */           ensureUninterpretedOptionIsMutable();
/* 36380 */           this.uninterpretedOption_.set(index, builderForValue.build());
/* 36381 */           onChanged();
/*       */         } else {
/* 36383 */           this.uninterpretedOptionBuilder_.setMessage(index, builderForValue.build());
/*       */         } 
/* 36385 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addUninterpretedOption(UninterpretedOption value) {
/* 36395 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 36396 */           if (value == null) {
/* 36397 */             throw new NullPointerException();
/*       */           }
/* 36399 */           ensureUninterpretedOptionIsMutable();
/* 36400 */           this.uninterpretedOption_.add(value);
/* 36401 */           onChanged();
/*       */         } else {
/* 36403 */           this.uninterpretedOptionBuilder_.addMessage(value);
/*       */         } 
/* 36405 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addUninterpretedOption(int index, UninterpretedOption value) {
/* 36416 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 36417 */           if (value == null) {
/* 36418 */             throw new NullPointerException();
/*       */           }
/* 36420 */           ensureUninterpretedOptionIsMutable();
/* 36421 */           this.uninterpretedOption_.add(index, value);
/* 36422 */           onChanged();
/*       */         } else {
/* 36424 */           this.uninterpretedOptionBuilder_.addMessage(index, value);
/*       */         } 
/* 36426 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addUninterpretedOption(UninterpretedOption.Builder builderForValue) {
/* 36437 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 36438 */           ensureUninterpretedOptionIsMutable();
/* 36439 */           this.uninterpretedOption_.add(builderForValue.build());
/* 36440 */           onChanged();
/*       */         } else {
/* 36442 */           this.uninterpretedOptionBuilder_.addMessage(builderForValue.build());
/*       */         } 
/* 36444 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addUninterpretedOption(int index, UninterpretedOption.Builder builderForValue) {
/* 36455 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 36456 */           ensureUninterpretedOptionIsMutable();
/* 36457 */           this.uninterpretedOption_.add(index, builderForValue.build());
/* 36458 */           onChanged();
/*       */         } else {
/* 36460 */           this.uninterpretedOptionBuilder_.addMessage(index, builderForValue.build());
/*       */         } 
/* 36462 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addAllUninterpretedOption(Iterable<? extends UninterpretedOption> values) {
/* 36473 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 36474 */           ensureUninterpretedOptionIsMutable();
/* 36475 */           AbstractMessageLite.Builder.addAll(values, this.uninterpretedOption_);
/*       */           
/* 36477 */           onChanged();
/*       */         } else {
/* 36479 */           this.uninterpretedOptionBuilder_.addAllMessages(values);
/*       */         } 
/* 36481 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearUninterpretedOption() {
/* 36491 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 36492 */           this.uninterpretedOption_ = Collections.emptyList();
/* 36493 */           this.bitField0_ &= 0xFFFFFFFB;
/* 36494 */           onChanged();
/*       */         } else {
/* 36496 */           this.uninterpretedOptionBuilder_.clear();
/*       */         } 
/* 36498 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder removeUninterpretedOption(int index) {
/* 36508 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 36509 */           ensureUninterpretedOptionIsMutable();
/* 36510 */           this.uninterpretedOption_.remove(index);
/* 36511 */           onChanged();
/*       */         } else {
/* 36513 */           this.uninterpretedOptionBuilder_.remove(index);
/*       */         } 
/* 36515 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public UninterpretedOption.Builder getUninterpretedOptionBuilder(int index) {
/* 36526 */         return getUninterpretedOptionFieldBuilder().getBuilder(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public UninterpretedOptionOrBuilder getUninterpretedOptionOrBuilder(int index) {
/* 36537 */         if (this.uninterpretedOptionBuilder_ == null)
/* 36538 */           return this.uninterpretedOption_.get(index); 
/* 36539 */         return this.uninterpretedOptionBuilder_.getMessageOrBuilder(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public List<? extends UninterpretedOptionOrBuilder> getUninterpretedOptionOrBuilderList() {
/* 36551 */         if (this.uninterpretedOptionBuilder_ != null) {
/* 36552 */           return this.uninterpretedOptionBuilder_.getMessageOrBuilderList();
/*       */         }
/* 36554 */         return Collections.unmodifiableList((List)this.uninterpretedOption_);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public UninterpretedOption.Builder addUninterpretedOptionBuilder() {
/* 36565 */         return getUninterpretedOptionFieldBuilder().addBuilder(
/* 36566 */             UninterpretedOption.getDefaultInstance());
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public UninterpretedOption.Builder addUninterpretedOptionBuilder(int index) {
/* 36577 */         return getUninterpretedOptionFieldBuilder().addBuilder(index, 
/* 36578 */             UninterpretedOption.getDefaultInstance());
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public List<UninterpretedOption.Builder> getUninterpretedOptionBuilderList() {
/* 36589 */         return getUninterpretedOptionFieldBuilder().getBuilderList();
/*       */       }
/*       */ 
/*       */       
/*       */       private RepeatedFieldBuilderV3<UninterpretedOption, UninterpretedOption.Builder, UninterpretedOptionOrBuilder> getUninterpretedOptionFieldBuilder() {
/* 36594 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 36595 */           this
/*       */ 
/*       */ 
/*       */ 
/*       */             
/* 36600 */             .uninterpretedOptionBuilder_ = new RepeatedFieldBuilderV3<>(this.uninterpretedOption_, ((this.bitField0_ & 0x4) != 0), getParentForChildren(), isClean());
/* 36601 */           this.uninterpretedOption_ = null;
/*       */         } 
/* 36603 */         return this.uninterpretedOptionBuilder_;
/*       */       }
/*       */ 
/*       */       
/*       */       public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
/* 36608 */         return super.setUnknownFields(unknownFields);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
/* 36614 */         return super.mergeUnknownFields(unknownFields);
/*       */       }
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 36624 */     private static final MethodOptions DEFAULT_INSTANCE = new MethodOptions();
/*       */ 
/*       */     
/*       */     public static MethodOptions getDefaultInstance() {
/* 36628 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */     
/*       */     @Deprecated
/* 36632 */     public static final Parser<MethodOptions> PARSER = new AbstractParser<MethodOptions>()
/*       */       {
/*       */ 
/*       */         
/*       */         public MethodOptions parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException
/*       */         {
/* 36638 */           return new MethodOptions(input, extensionRegistry);
/*       */         }
/*       */       };
/*       */     
/*       */     public static Parser<MethodOptions> parser() {
/* 36643 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public Parser<MethodOptions> getParserForType() {
/* 36648 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public MethodOptions getDefaultInstanceForType() {
/* 36653 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public static interface UninterpretedOptionOrBuilder
/*       */     extends MessageOrBuilder
/*       */   {
/*       */     List<UninterpretedOption.NamePart> getNameList();
/*       */ 
/*       */ 
/*       */     
/*       */     UninterpretedOption.NamePart getName(int param1Int);
/*       */ 
/*       */ 
/*       */     
/*       */     int getNameCount();
/*       */ 
/*       */ 
/*       */     
/*       */     List<? extends UninterpretedOption.NamePartOrBuilder> getNameOrBuilderList();
/*       */ 
/*       */ 
/*       */     
/*       */     UninterpretedOption.NamePartOrBuilder getNameOrBuilder(int param1Int);
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIdentifierValue();
/*       */ 
/*       */ 
/*       */     
/*       */     String getIdentifierValue();
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getIdentifierValueBytes();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasPositiveIntValue();
/*       */ 
/*       */ 
/*       */     
/*       */     long getPositiveIntValue();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasNegativeIntValue();
/*       */ 
/*       */ 
/*       */     
/*       */     long getNegativeIntValue();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasDoubleValue();
/*       */ 
/*       */ 
/*       */     
/*       */     double getDoubleValue();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasStringValue();
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getStringValue();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasAggregateValue();
/*       */ 
/*       */ 
/*       */     
/*       */     String getAggregateValue();
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getAggregateValueBytes();
/*       */   }
/*       */ 
/*       */ 
/*       */   
/*       */   public static final class UninterpretedOption
/*       */     extends GeneratedMessageV3
/*       */     implements UninterpretedOptionOrBuilder
/*       */   {
/*       */     private static final long serialVersionUID = 0L;
/*       */ 
/*       */     
/*       */     private int bitField0_;
/*       */ 
/*       */     
/*       */     public static final int NAME_FIELD_NUMBER = 2;
/*       */ 
/*       */     
/*       */     private List<NamePart> name_;
/*       */ 
/*       */     
/*       */     public static final int IDENTIFIER_VALUE_FIELD_NUMBER = 3;
/*       */ 
/*       */     
/*       */     private volatile Object identifierValue_;
/*       */ 
/*       */     
/*       */     public static final int POSITIVE_INT_VALUE_FIELD_NUMBER = 4;
/*       */ 
/*       */     
/*       */     private long positiveIntValue_;
/*       */ 
/*       */     
/*       */     public static final int NEGATIVE_INT_VALUE_FIELD_NUMBER = 5;
/*       */ 
/*       */     
/*       */     private long negativeIntValue_;
/*       */ 
/*       */     
/*       */     public static final int DOUBLE_VALUE_FIELD_NUMBER = 6;
/*       */ 
/*       */     
/*       */     private double doubleValue_;
/*       */ 
/*       */     
/*       */     public static final int STRING_VALUE_FIELD_NUMBER = 7;
/*       */ 
/*       */     
/*       */     private ByteString stringValue_;
/*       */ 
/*       */     
/*       */     public static final int AGGREGATE_VALUE_FIELD_NUMBER = 8;
/*       */ 
/*       */     
/*       */     private volatile Object aggregateValue_;
/*       */ 
/*       */     
/*       */     private byte memoizedIsInitialized;
/*       */ 
/*       */ 
/*       */     
/*       */     private UninterpretedOption(GeneratedMessageV3.Builder<?> builder)
/*       */     {
/* 36798 */       super(builder);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/* 37878 */       this.memoizedIsInitialized = -1; } private UninterpretedOption() { this.memoizedIsInitialized = -1; this.name_ = Collections.emptyList(); this.identifierValue_ = ""; this.stringValue_ = ByteString.EMPTY; this.aggregateValue_ = ""; } protected Object newInstance(UnusedPrivateParameter unused) { return new UninterpretedOption(); } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private UninterpretedOption(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this(); if (extensionRegistry == null) throw new NullPointerException();  int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { ByteString bs; int tag = input.readTag(); switch (tag) { case 0: done = true; continue;case 18: if ((mutable_bitField0_ & 0x1) == 0) { this.name_ = new ArrayList<>(); mutable_bitField0_ |= 0x1; }  this.name_.add(input.readMessage(NamePart.PARSER, extensionRegistry)); continue;case 26: bs = input.readBytes(); this.bitField0_ |= 0x1; this.identifierValue_ = bs; continue;case 32: this.bitField0_ |= 0x2; this.positiveIntValue_ = input.readUInt64(); continue;case 40: this.bitField0_ |= 0x4; this.negativeIntValue_ = input.readInt64(); continue;case 49: this.bitField0_ |= 0x8; this.doubleValue_ = input.readDouble(); continue;case 58: this.bitField0_ |= 0x10; this.stringValue_ = input.readBytes(); continue;case 66: bs = input.readBytes(); this.bitField0_ |= 0x20; this.aggregateValue_ = bs; continue; }  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this); } finally { if ((mutable_bitField0_ & 0x1) != 0) this.name_ = Collections.unmodifiableList(this.name_);  this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return DescriptorProtos.internal_static_google_protobuf_UninterpretedOption_descriptor; } protected FieldAccessorTable internalGetFieldAccessorTable() { return DescriptorProtos.internal_static_google_protobuf_UninterpretedOption_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)UninterpretedOption.class, (Class)Builder.class); } public static final class NamePart extends GeneratedMessageV3 implements NamePartOrBuilder {
/*       */       private static final long serialVersionUID = 0L; private int bitField0_; public static final int NAME_PART_FIELD_NUMBER = 1; private volatile Object namePart_; public static final int IS_EXTENSION_FIELD_NUMBER = 2; private boolean isExtension_; private byte memoizedIsInitialized; private NamePart(GeneratedMessageV3.Builder<?> builder) { super(builder); this.memoizedIsInitialized = -1; } private NamePart() { this.memoizedIsInitialized = -1; this.namePart_ = ""; } protected Object newInstance(UnusedPrivateParameter unused) { return new NamePart(); } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private NamePart(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this(); if (extensionRegistry == null) throw new NullPointerException();  int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { ByteString bs; int tag = input.readTag(); switch (tag) { case 0: done = true; continue;case 10: bs = input.readBytes(); this.bitField0_ |= 0x1; this.namePart_ = bs; continue;case 16: this.bitField0_ |= 0x2; this.isExtension_ = input.readBool(); continue; }  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this); } finally { this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return DescriptorProtos.internal_static_google_protobuf_UninterpretedOption_NamePart_descriptor; } protected FieldAccessorTable internalGetFieldAccessorTable() { return DescriptorProtos.internal_static_google_protobuf_UninterpretedOption_NamePart_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)NamePart.class, (Class)Builder.class); } public boolean hasNamePart() { return ((this.bitField0_ & 0x1) != 0); } public String getNamePart() { Object ref = this.namePart_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.namePart_ = s;  return s; } public ByteString getNamePartBytes() { Object ref = this.namePart_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.namePart_ = b; return b; }  return (ByteString)ref; } public boolean hasIsExtension() { return ((this.bitField0_ & 0x2) != 0); } public boolean getIsExtension() { return this.isExtension_; } public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized; if (isInitialized == 1) return true;  if (isInitialized == 0) return false;  if (!hasNamePart()) { this.memoizedIsInitialized = 0; return false; }  if (!hasIsExtension()) { this.memoizedIsInitialized = 0; return false; }  this.memoizedIsInitialized = 1; return true; } public void writeTo(CodedOutputStream output) throws IOException { if ((this.bitField0_ & 0x1) != 0) GeneratedMessageV3.writeString(output, 1, this.namePart_);  if ((this.bitField0_ & 0x2) != 0) output.writeBool(2, this.isExtension_);  this.unknownFields.writeTo(output); } public int getSerializedSize() { int size = this.memoizedSize; if (size != -1) return size;  size = 0; if ((this.bitField0_ & 0x1) != 0) size += GeneratedMessageV3.computeStringSize(1, this.namePart_);  if ((this.bitField0_ & 0x2) != 0) size += CodedOutputStream.computeBoolSize(2, this.isExtension_);  size += this.unknownFields.getSerializedSize(); this.memoizedSize = size; return size; } public boolean equals(Object obj) { if (obj == this) return true;  if (!(obj instanceof NamePart)) return super.equals(obj);  NamePart other = (NamePart)obj; if (hasNamePart() != other.hasNamePart()) return false;  if (hasNamePart() && !getNamePart().equals(other.getNamePart())) return false;  if (hasIsExtension() != other.hasIsExtension()) return false;  if (hasIsExtension() && getIsExtension() != other.getIsExtension()) return false;  if (!this.unknownFields.equals(other.unknownFields)) return false;  return true; } public int hashCode() { if (this.memoizedHashCode != 0) return this.memoizedHashCode;  int hash = 41; hash = 19 * hash + getDescriptor().hashCode(); if (hasNamePart()) { hash = 37 * hash + 1; hash = 53 * hash + getNamePart().hashCode(); }  if (hasIsExtension()) { hash = 37 * hash + 2; hash = 53 * hash + Internal.hashBoolean(getIsExtension()); }  hash = 29 * hash + this.unknownFields.hashCode(); this.memoizedHashCode = hash; return hash; } public static NamePart parseFrom(ByteBuffer data) throws InvalidProtocolBufferException { return PARSER.parseFrom(data); } public static NamePart parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return PARSER.parseFrom(data, extensionRegistry); } public static NamePart parseFrom(ByteString data) throws InvalidProtocolBufferException { return PARSER.parseFrom(data); } public static NamePart parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return PARSER.parseFrom(data, extensionRegistry); } public static NamePart parseFrom(byte[] data) throws InvalidProtocolBufferException { return PARSER.parseFrom(data); } public static NamePart parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return PARSER.parseFrom(data, extensionRegistry); } public static NamePart parseFrom(InputStream input) throws IOException { return GeneratedMessageV3.<NamePart>parseWithIOException(PARSER, input); } public static NamePart parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { return GeneratedMessageV3.<NamePart>parseWithIOException(PARSER, input, extensionRegistry); } public static NamePart parseDelimitedFrom(InputStream input) throws IOException { return GeneratedMessageV3.<NamePart>parseDelimitedWithIOException(PARSER, input); } public static NamePart parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { return GeneratedMessageV3.<NamePart>parseDelimitedWithIOException(PARSER, input, extensionRegistry); } public static NamePart parseFrom(CodedInputStream input) throws IOException { return GeneratedMessageV3.<NamePart>parseWithIOException(PARSER, input); } public static NamePart parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { return GeneratedMessageV3.<NamePart>parseWithIOException(PARSER, input, extensionRegistry); } public Builder newBuilderForType() { return newBuilder(); } public static Builder newBuilder() { return DEFAULT_INSTANCE.toBuilder(); } public static Builder newBuilder(NamePart prototype) { return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype); } public Builder toBuilder() { return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder()).mergeFrom(this); } protected Builder newBuilderForType(BuilderParent parent) { Builder builder = new Builder(parent); return builder; } public static final class Builder extends GeneratedMessageV3.Builder<Builder> implements NamePartOrBuilder {
/*       */         private int bitField0_; private Object namePart_; private boolean isExtension_; public static final Descriptors.Descriptor getDescriptor() { return DescriptorProtos.internal_static_google_protobuf_UninterpretedOption_NamePart_descriptor; } protected FieldAccessorTable internalGetFieldAccessorTable() { return DescriptorProtos.internal_static_google_protobuf_UninterpretedOption_NamePart_fieldAccessorTable.ensureFieldAccessorsInitialized((Class) NamePart.class, (Class)Builder.class); } private Builder() { this.namePart_ = ""; maybeForceBuilderInitialization(); } private Builder(BuilderParent parent) { super(parent); this.namePart_ = ""; maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (GeneratedMessageV3.alwaysUseFieldBuilders); } public Builder clear() { super.clear(); this.namePart_ = ""; this.bitField0_ &= 0xFFFFFFFE; this.isExtension_ = false; this.bitField0_ &= 0xFFFFFFFD; return this; } public Descriptors.Descriptor getDescriptorForType() { return DescriptorProtos.internal_static_google_protobuf_UninterpretedOption_NamePart_descriptor; } public NamePart getDefaultInstanceForType() { return NamePart.getDefaultInstance(); } public NamePart build() { NamePart result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public NamePart buildPartial() { NamePart result = new NamePart(this); int from_bitField0_ = this.bitField0_; int to_bitField0_ = 0; if ((from_bitField0_ & 0x1) != 0) to_bitField0_ |= 0x1;  result.namePart_ = this.namePart_; if ((from_bitField0_ & 0x2) != 0) { result.isExtension_ = this.isExtension_; to_bitField0_ |= 0x2; }  result.bitField0_ = to_bitField0_; onBuilt(); return result; } public Builder clone() { return super.clone(); } public Builder setField(Descriptors.FieldDescriptor field, Object value) { return super.setField(field, value); } public Builder clearField(Descriptors.FieldDescriptor field) { return super.clearField(field); } public Builder clearOneof(Descriptors.OneofDescriptor oneof) { return super.clearOneof(oneof); } public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) { return super.setRepeatedField(field, index, value); } public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) { return super.addRepeatedField(field, value); } public Builder mergeFrom(Message other) { if (other instanceof NamePart) return mergeFrom((NamePart)other);  super.mergeFrom(other); return this; } public Builder mergeFrom(NamePart other) { if (other == NamePart.getDefaultInstance()) return this;  if (other.hasNamePart()) { this.bitField0_ |= 0x1; this.namePart_ = other.namePart_; onChanged(); }  if (other.hasIsExtension()) setIsExtension(other.getIsExtension());  mergeUnknownFields(other.unknownFields); onChanged(); return this; } public final boolean isInitialized() { if (!hasNamePart()) return false;  if (!hasIsExtension()) return false;  return true; } public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { NamePart parsedMessage = null; try { parsedMessage = NamePart.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (NamePart)e.getUnfinishedMessage(); throw e.unwrapIOException(); } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; } public boolean hasNamePart() { return ((this.bitField0_ & 0x1) != 0); } public String getNamePart() { Object ref = this.namePart_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.namePart_ = s;  return s; }  return (String)ref; } public ByteString getNamePartBytes() { Object ref = this.namePart_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.namePart_ = b; return b; }  return (ByteString)ref; } public Builder setNamePart(String value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x1; this.namePart_ = value; onChanged(); return this; } public Builder clearNamePart() { this.bitField0_ &= 0xFFFFFFFE; this.namePart_ = NamePart.getDefaultInstance().getNamePart(); onChanged(); return this; } public Builder setNamePartBytes(ByteString value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x1; this.namePart_ = value; onChanged(); return this; } public boolean hasIsExtension() { return ((this.bitField0_ & 0x2) != 0); } public boolean getIsExtension() { return this.isExtension_; } public Builder setIsExtension(boolean value) { this.bitField0_ |= 0x2; this.isExtension_ = value; onChanged(); return this; } public Builder clearIsExtension() { this.bitField0_ &= 0xFFFFFFFD; this.isExtension_ = false; onChanged(); return this; } public final Builder setUnknownFields(UnknownFieldSet unknownFields) { return super.setUnknownFields(unknownFields); } public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) { return super.mergeUnknownFields(unknownFields); } } private static final NamePart DEFAULT_INSTANCE = new NamePart(); public static NamePart getDefaultInstance() { return DEFAULT_INSTANCE; } @Deprecated public static final Parser<NamePart> PARSER = new AbstractParser<NamePart>() { public NamePart parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return new NamePart(input, extensionRegistry); } }
/* 37881 */       ; public static Parser<NamePart> parser() { return PARSER; } public Parser<NamePart> getParserForType() { return PARSER; } public NamePart getDefaultInstanceForType() { return DEFAULT_INSTANCE; } } public List<NamePart> getNameList() { return this.name_; } public List<? extends NamePartOrBuilder> getNameOrBuilderList() { return (List)this.name_; } public int getNameCount() { return this.name_.size(); } public NamePart getName(int index) { return this.name_.get(index); } public NamePartOrBuilder getNameOrBuilder(int index) { return this.name_.get(index); } public boolean hasIdentifierValue() { return ((this.bitField0_ & 0x1) != 0); } public String getIdentifierValue() { Object ref = this.identifierValue_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.identifierValue_ = s;  return s; } public ByteString getIdentifierValueBytes() { Object ref = this.identifierValue_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.identifierValue_ = b; return b; }  return (ByteString)ref; } public boolean hasPositiveIntValue() { return ((this.bitField0_ & 0x2) != 0); } public long getPositiveIntValue() { return this.positiveIntValue_; } public boolean hasNegativeIntValue() { return ((this.bitField0_ & 0x4) != 0); } public long getNegativeIntValue() { return this.negativeIntValue_; } public boolean hasDoubleValue() { return ((this.bitField0_ & 0x8) != 0); } public double getDoubleValue() { return this.doubleValue_; } public boolean hasStringValue() { return ((this.bitField0_ & 0x10) != 0); } public ByteString getStringValue() { return this.stringValue_; } public boolean hasAggregateValue() { return ((this.bitField0_ & 0x20) != 0); } public String getAggregateValue() { Object ref = this.aggregateValue_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.aggregateValue_ = s;  return s; } public ByteString getAggregateValueBytes() { Object ref = this.aggregateValue_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.aggregateValue_ = b; return b; }  return (ByteString)ref; } public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized;
/* 37882 */       if (isInitialized == 1) return true; 
/* 37883 */       if (isInitialized == 0) return false;
/*       */       
/* 37885 */       for (int i = 0; i < getNameCount(); i++) {
/* 37886 */         if (!getName(i).isInitialized()) {
/* 37887 */           this.memoizedIsInitialized = 0;
/* 37888 */           return false;
/*       */         } 
/*       */       } 
/* 37891 */       this.memoizedIsInitialized = 1;
/* 37892 */       return true; }
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/* 37898 */       for (int i = 0; i < this.name_.size(); i++) {
/* 37899 */         output.writeMessage(2, this.name_.get(i));
/*       */       }
/* 37901 */       if ((this.bitField0_ & 0x1) != 0) {
/* 37902 */         GeneratedMessageV3.writeString(output, 3, this.identifierValue_);
/*       */       }
/* 37904 */       if ((this.bitField0_ & 0x2) != 0) {
/* 37905 */         output.writeUInt64(4, this.positiveIntValue_);
/*       */       }
/* 37907 */       if ((this.bitField0_ & 0x4) != 0) {
/* 37908 */         output.writeInt64(5, this.negativeIntValue_);
/*       */       }
/* 37910 */       if ((this.bitField0_ & 0x8) != 0) {
/* 37911 */         output.writeDouble(6, this.doubleValue_);
/*       */       }
/* 37913 */       if ((this.bitField0_ & 0x10) != 0) {
/* 37914 */         output.writeBytes(7, this.stringValue_);
/*       */       }
/* 37916 */       if ((this.bitField0_ & 0x20) != 0) {
/* 37917 */         GeneratedMessageV3.writeString(output, 8, this.aggregateValue_);
/*       */       }
/* 37919 */       this.unknownFields.writeTo(output);
/*       */     }
/*       */ 
/*       */     
/*       */     public int getSerializedSize() {
/* 37924 */       int size = this.memoizedSize;
/* 37925 */       if (size != -1) return size;
/*       */       
/* 37927 */       size = 0;
/* 37928 */       for (int i = 0; i < this.name_.size(); i++) {
/* 37929 */         size += 
/* 37930 */           CodedOutputStream.computeMessageSize(2, this.name_.get(i));
/*       */       }
/* 37932 */       if ((this.bitField0_ & 0x1) != 0) {
/* 37933 */         size += GeneratedMessageV3.computeStringSize(3, this.identifierValue_);
/*       */       }
/* 37935 */       if ((this.bitField0_ & 0x2) != 0) {
/* 37936 */         size += 
/* 37937 */           CodedOutputStream.computeUInt64Size(4, this.positiveIntValue_);
/*       */       }
/* 37939 */       if ((this.bitField0_ & 0x4) != 0) {
/* 37940 */         size += 
/* 37941 */           CodedOutputStream.computeInt64Size(5, this.negativeIntValue_);
/*       */       }
/* 37943 */       if ((this.bitField0_ & 0x8) != 0) {
/* 37944 */         size += 
/* 37945 */           CodedOutputStream.computeDoubleSize(6, this.doubleValue_);
/*       */       }
/* 37947 */       if ((this.bitField0_ & 0x10) != 0) {
/* 37948 */         size += 
/* 37949 */           CodedOutputStream.computeBytesSize(7, this.stringValue_);
/*       */       }
/* 37951 */       if ((this.bitField0_ & 0x20) != 0) {
/* 37952 */         size += GeneratedMessageV3.computeStringSize(8, this.aggregateValue_);
/*       */       }
/* 37954 */       size += this.unknownFields.getSerializedSize();
/* 37955 */       this.memoizedSize = size;
/* 37956 */       return size;
/*       */     }
/*       */ 
/*       */     
/*       */     public boolean equals(Object obj) {
/* 37961 */       if (obj == this) {
/* 37962 */         return true;
/*       */       }
/* 37964 */       if (!(obj instanceof UninterpretedOption)) {
/* 37965 */         return super.equals(obj);
/*       */       }
/* 37967 */       UninterpretedOption other = (UninterpretedOption)obj;
/*       */ 
/*       */       
/* 37970 */       if (!getNameList().equals(other.getNameList())) return false; 
/* 37971 */       if (hasIdentifierValue() != other.hasIdentifierValue()) return false; 
/* 37972 */       if (hasIdentifierValue() && 
/*       */         
/* 37974 */         !getIdentifierValue().equals(other.getIdentifierValue())) return false;
/*       */       
/* 37976 */       if (hasPositiveIntValue() != other.hasPositiveIntValue()) return false; 
/* 37977 */       if (hasPositiveIntValue() && 
/* 37978 */         getPositiveIntValue() != other
/* 37979 */         .getPositiveIntValue()) return false;
/*       */       
/* 37981 */       if (hasNegativeIntValue() != other.hasNegativeIntValue()) return false; 
/* 37982 */       if (hasNegativeIntValue() && 
/* 37983 */         getNegativeIntValue() != other
/* 37984 */         .getNegativeIntValue()) return false;
/*       */       
/* 37986 */       if (hasDoubleValue() != other.hasDoubleValue()) return false; 
/* 37987 */       if (hasDoubleValue() && 
/* 37988 */         Double.doubleToLongBits(getDoubleValue()) != 
/* 37989 */         Double.doubleToLongBits(other
/* 37990 */           .getDoubleValue())) return false;
/*       */       
/* 37992 */       if (hasStringValue() != other.hasStringValue()) return false; 
/* 37993 */       if (hasStringValue() && 
/*       */         
/* 37995 */         !getStringValue().equals(other.getStringValue())) return false;
/*       */       
/* 37997 */       if (hasAggregateValue() != other.hasAggregateValue()) return false; 
/* 37998 */       if (hasAggregateValue() && 
/*       */         
/* 38000 */         !getAggregateValue().equals(other.getAggregateValue())) return false;
/*       */       
/* 38002 */       if (!this.unknownFields.equals(other.unknownFields)) return false; 
/* 38003 */       return true;
/*       */     }
/*       */ 
/*       */     
/*       */     public int hashCode() {
/* 38008 */       if (this.memoizedHashCode != 0) {
/* 38009 */         return this.memoizedHashCode;
/*       */       }
/* 38011 */       int hash = 41;
/* 38012 */       hash = 19 * hash + getDescriptor().hashCode();
/* 38013 */       if (getNameCount() > 0) {
/* 38014 */         hash = 37 * hash + 2;
/* 38015 */         hash = 53 * hash + getNameList().hashCode();
/*       */       } 
/* 38017 */       if (hasIdentifierValue()) {
/* 38018 */         hash = 37 * hash + 3;
/* 38019 */         hash = 53 * hash + getIdentifierValue().hashCode();
/*       */       } 
/* 38021 */       if (hasPositiveIntValue()) {
/* 38022 */         hash = 37 * hash + 4;
/* 38023 */         hash = 53 * hash + Internal.hashLong(
/* 38024 */             getPositiveIntValue());
/*       */       } 
/* 38026 */       if (hasNegativeIntValue()) {
/* 38027 */         hash = 37 * hash + 5;
/* 38028 */         hash = 53 * hash + Internal.hashLong(
/* 38029 */             getNegativeIntValue());
/*       */       } 
/* 38031 */       if (hasDoubleValue()) {
/* 38032 */         hash = 37 * hash + 6;
/* 38033 */         hash = 53 * hash + Internal.hashLong(
/* 38034 */             Double.doubleToLongBits(getDoubleValue()));
/*       */       } 
/* 38036 */       if (hasStringValue()) {
/* 38037 */         hash = 37 * hash + 7;
/* 38038 */         hash = 53 * hash + getStringValue().hashCode();
/*       */       } 
/* 38040 */       if (hasAggregateValue()) {
/* 38041 */         hash = 37 * hash + 8;
/* 38042 */         hash = 53 * hash + getAggregateValue().hashCode();
/*       */       } 
/* 38044 */       hash = 29 * hash + this.unknownFields.hashCode();
/* 38045 */       this.memoizedHashCode = hash;
/* 38046 */       return hash;
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static UninterpretedOption parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
/* 38052 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static UninterpretedOption parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 38058 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static UninterpretedOption parseFrom(ByteString data) throws InvalidProtocolBufferException {
/* 38063 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static UninterpretedOption parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 38069 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static UninterpretedOption parseFrom(byte[] data) throws InvalidProtocolBufferException {
/* 38073 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static UninterpretedOption parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 38079 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static UninterpretedOption parseFrom(InputStream input) throws IOException {
/* 38083 */       return 
/* 38084 */         GeneratedMessageV3.<UninterpretedOption>parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static UninterpretedOption parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 38090 */       return 
/* 38091 */         GeneratedMessageV3.<UninterpretedOption>parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static UninterpretedOption parseDelimitedFrom(InputStream input) throws IOException {
/* 38095 */       return 
/* 38096 */         GeneratedMessageV3.<UninterpretedOption>parseDelimitedWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static UninterpretedOption parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 38102 */       return 
/* 38103 */         GeneratedMessageV3.<UninterpretedOption>parseDelimitedWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static UninterpretedOption parseFrom(CodedInputStream input) throws IOException {
/* 38108 */       return 
/* 38109 */         GeneratedMessageV3.<UninterpretedOption>parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static UninterpretedOption parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 38115 */       return 
/* 38116 */         GeneratedMessageV3.<UninterpretedOption>parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public Builder newBuilderForType() {
/* 38120 */       return newBuilder();
/*       */     } public static Builder newBuilder() {
/* 38122 */       return DEFAULT_INSTANCE.toBuilder();
/*       */     }
/*       */     public static Builder newBuilder(UninterpretedOption prototype) {
/* 38125 */       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
/*       */     }
/*       */     
/*       */     public Builder toBuilder() {
/* 38129 */       return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder())
/* 38130 */         .mergeFrom(this);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     protected Builder newBuilderForType(BuilderParent parent) {
/* 38136 */       Builder builder = new Builder(parent);
/* 38137 */       return builder;
/*       */     }
/*       */ 
/*       */     
/*       */     public static final class Builder
/*       */       extends GeneratedMessageV3.Builder<Builder>
/*       */       implements UninterpretedOptionOrBuilder
/*       */     {
/*       */       private int bitField0_;
/*       */       
/*       */       private List<NamePart> name_;
/*       */       private RepeatedFieldBuilderV3<NamePart, NamePart.Builder, NamePartOrBuilder> nameBuilder_;
/*       */       private Object identifierValue_;
/*       */       private long positiveIntValue_;
/*       */       private long negativeIntValue_;
/*       */       private double doubleValue_;
/*       */       private ByteString stringValue_;
/*       */       private Object aggregateValue_;
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/* 38157 */         return DescriptorProtos.internal_static_google_protobuf_UninterpretedOption_descriptor;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       protected FieldAccessorTable internalGetFieldAccessorTable() {
/* 38163 */         return DescriptorProtos.internal_static_google_protobuf_UninterpretedOption_fieldAccessorTable
/* 38164 */           .ensureFieldAccessorsInitialized((Class) UninterpretedOption.class, (Class)Builder.class);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private Builder()
/*       */       {
/* 38398 */         this
/* 38399 */           .name_ = Collections.emptyList();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 38638 */         this.identifierValue_ = "";
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 38869 */         this.stringValue_ = ByteString.EMPTY;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 38911 */         this.aggregateValue_ = ""; maybeForceBuilderInitialization(); } private Builder(BuilderParent parent) { super(parent); this.name_ = Collections.emptyList(); this.identifierValue_ = ""; this.stringValue_ = ByteString.EMPTY; this.aggregateValue_ = ""; maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (GeneratedMessageV3.alwaysUseFieldBuilders) getNameFieldBuilder();  } public Builder clear() { super.clear(); if (this.nameBuilder_ == null) { this.name_ = Collections.emptyList(); this.bitField0_ &= 0xFFFFFFFE; } else { this.nameBuilder_.clear(); }  this.identifierValue_ = ""; this.bitField0_ &= 0xFFFFFFFD; this.positiveIntValue_ = 0L; this.bitField0_ &= 0xFFFFFFFB; this.negativeIntValue_ = 0L; this.bitField0_ &= 0xFFFFFFF7; this.doubleValue_ = 0.0D; this.bitField0_ &= 0xFFFFFFEF; this.stringValue_ = ByteString.EMPTY; this.bitField0_ &= 0xFFFFFFDF; this.aggregateValue_ = ""; this.bitField0_ &= 0xFFFFFFBF; return this; } public Descriptors.Descriptor getDescriptorForType() { return DescriptorProtos.internal_static_google_protobuf_UninterpretedOption_descriptor; } public UninterpretedOption getDefaultInstanceForType() { return UninterpretedOption.getDefaultInstance(); } public UninterpretedOption build() { UninterpretedOption result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public UninterpretedOption buildPartial() { UninterpretedOption result = new UninterpretedOption(this); int from_bitField0_ = this.bitField0_; int to_bitField0_ = 0; if (this.nameBuilder_ == null) { if ((this.bitField0_ & 0x1) != 0) { this.name_ = Collections.unmodifiableList(this.name_); this.bitField0_ &= 0xFFFFFFFE; }  result.name_ = this.name_; } else { result.name_ = this.nameBuilder_.build(); }  if ((from_bitField0_ & 0x2) != 0) to_bitField0_ |= 0x1;  result.identifierValue_ = this.identifierValue_; if ((from_bitField0_ & 0x4) != 0) { result.positiveIntValue_ = this.positiveIntValue_; to_bitField0_ |= 0x2; }  if ((from_bitField0_ & 0x8) != 0) { result.negativeIntValue_ = this.negativeIntValue_; to_bitField0_ |= 0x4; }  if ((from_bitField0_ & 0x10) != 0) { result.doubleValue_ = this.doubleValue_; to_bitField0_ |= 0x8; }  if ((from_bitField0_ & 0x20) != 0) to_bitField0_ |= 0x10;  result.stringValue_ = this.stringValue_; if ((from_bitField0_ & 0x40) != 0) to_bitField0_ |= 0x20;  result.aggregateValue_ = this.aggregateValue_; result.bitField0_ = to_bitField0_; onBuilt(); return result; } public Builder clone() { return super.clone(); } public Builder setField(Descriptors.FieldDescriptor field, Object value) { return super.setField(field, value); } public Builder clearField(Descriptors.FieldDescriptor field) { return super.clearField(field); } public Builder clearOneof(Descriptors.OneofDescriptor oneof) { return super.clearOneof(oneof); } public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) { return super.setRepeatedField(field, index, value); } public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) { return super.addRepeatedField(field, value); } public Builder mergeFrom(Message other) { if (other instanceof UninterpretedOption) return mergeFrom((UninterpretedOption)other);  super.mergeFrom(other); return this; } public Builder mergeFrom(UninterpretedOption other) { if (other == UninterpretedOption.getDefaultInstance()) return this;  if (this.nameBuilder_ == null) { if (!other.name_.isEmpty()) { if (this.name_.isEmpty()) { this.name_ = other.name_; this.bitField0_ &= 0xFFFFFFFE; } else { ensureNameIsMutable(); this.name_.addAll(other.name_); }  onChanged(); }  } else if (!other.name_.isEmpty()) { if (this.nameBuilder_.isEmpty()) { this.nameBuilder_.dispose(); this.nameBuilder_ = null; this.name_ = other.name_; this.bitField0_ &= 0xFFFFFFFE; this.nameBuilder_ = GeneratedMessageV3.alwaysUseFieldBuilders ? getNameFieldBuilder() : null; } else { this.nameBuilder_.addAllMessages(other.name_); }  }  if (other.hasIdentifierValue()) { this.bitField0_ |= 0x2; this.identifierValue_ = other.identifierValue_; onChanged(); }  if (other.hasPositiveIntValue()) setPositiveIntValue(other.getPositiveIntValue());  if (other.hasNegativeIntValue()) setNegativeIntValue(other.getNegativeIntValue());  if (other.hasDoubleValue()) setDoubleValue(other.getDoubleValue());  if (other.hasStringValue()) setStringValue(other.getStringValue());  if (other.hasAggregateValue()) { this.bitField0_ |= 0x40; this.aggregateValue_ = other.aggregateValue_; onChanged(); }  mergeUnknownFields(other.unknownFields); onChanged(); return this; } public final boolean isInitialized() { for (int i = 0; i < getNameCount(); i++) { if (!getName(i).isInitialized()) return false;  }  return true; } public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { UninterpretedOption parsedMessage = null; try { parsedMessage = UninterpretedOption.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (UninterpretedOption)e.getUnfinishedMessage(); throw e.unwrapIOException(); } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; } private void ensureNameIsMutable() { if ((this.bitField0_ & 0x1) == 0) { this.name_ = new ArrayList<>(this.name_); this.bitField0_ |= 0x1; }  } public List<NamePart> getNameList() { if (this.nameBuilder_ == null) return Collections.unmodifiableList(this.name_);  return this.nameBuilder_.getMessageList(); } public int getNameCount() { if (this.nameBuilder_ == null) return this.name_.size();  return this.nameBuilder_.getCount(); } public NamePart getName(int index) { if (this.nameBuilder_ == null) return this.name_.get(index);  return this.nameBuilder_.getMessage(index); } public Builder setName(int index, NamePart value) { if (this.nameBuilder_ == null) { if (value == null) throw new NullPointerException();  ensureNameIsMutable(); this.name_.set(index, value); onChanged(); } else { this.nameBuilder_.setMessage(index, value); }  return this; } public Builder setName(int index, NamePart.Builder builderForValue) { if (this.nameBuilder_ == null) { ensureNameIsMutable(); this.name_.set(index, builderForValue.build()); onChanged(); } else { this.nameBuilder_.setMessage(index, builderForValue.build()); }  return this; } public Builder addName(NamePart value) { if (this.nameBuilder_ == null) { if (value == null) throw new NullPointerException();  ensureNameIsMutable(); this.name_.add(value); onChanged(); } else { this.nameBuilder_.addMessage(value); }  return this; } public Builder addName(int index, NamePart value) { if (this.nameBuilder_ == null) { if (value == null) throw new NullPointerException();  ensureNameIsMutable(); this.name_.add(index, value); onChanged(); } else { this.nameBuilder_.addMessage(index, value); }  return this; } public Builder addName(NamePart.Builder builderForValue) { if (this.nameBuilder_ == null) { ensureNameIsMutable(); this.name_.add(builderForValue.build()); onChanged(); } else { this.nameBuilder_.addMessage(builderForValue.build()); }  return this; } public Builder addName(int index, NamePart.Builder builderForValue) { if (this.nameBuilder_ == null) { ensureNameIsMutable(); this.name_.add(index, builderForValue.build()); onChanged(); } else { this.nameBuilder_.addMessage(index, builderForValue.build()); }  return this; } public Builder addAllName(Iterable<? extends NamePart> values) { if (this.nameBuilder_ == null) { ensureNameIsMutable(); AbstractMessageLite.Builder.addAll(values, this.name_); onChanged(); } else { this.nameBuilder_.addAllMessages(values); }  return this; } public Builder clearName() { if (this.nameBuilder_ == null) { this.name_ = Collections.emptyList(); this.bitField0_ &= 0xFFFFFFFE; onChanged(); } else { this.nameBuilder_.clear(); }  return this; } public Builder removeName(int index) { if (this.nameBuilder_ == null) { ensureNameIsMutable(); this.name_.remove(index); onChanged(); } else { this.nameBuilder_.remove(index); }  return this; } public NamePart.Builder getNameBuilder(int index) { return getNameFieldBuilder().getBuilder(index); } public NamePartOrBuilder getNameOrBuilder(int index) { if (this.nameBuilder_ == null) return this.name_.get(index);  return this.nameBuilder_.getMessageOrBuilder(index); } public List<? extends NamePartOrBuilder> getNameOrBuilderList() { if (this.nameBuilder_ != null) return this.nameBuilder_.getMessageOrBuilderList();  return Collections.unmodifiableList((List)this.name_); } public NamePart.Builder addNameBuilder() { return getNameFieldBuilder().addBuilder(NamePart.getDefaultInstance()); } public NamePart.Builder addNameBuilder(int index) { return getNameFieldBuilder().addBuilder(index, NamePart.getDefaultInstance()); } public List<NamePart.Builder> getNameBuilderList() { return getNameFieldBuilder().getBuilderList(); } private RepeatedFieldBuilderV3<NamePart, NamePart.Builder, NamePartOrBuilder> getNameFieldBuilder() { if (this.nameBuilder_ == null) { this.nameBuilder_ = new RepeatedFieldBuilderV3<>(this.name_, ((this.bitField0_ & 0x1) != 0), getParentForChildren(), isClean()); this.name_ = null; }  return this.nameBuilder_; } public boolean hasIdentifierValue() { return ((this.bitField0_ & 0x2) != 0); } public String getIdentifierValue() { Object ref = this.identifierValue_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.identifierValue_ = s;  return s; }  return (String)ref; } public ByteString getIdentifierValueBytes() { Object ref = this.identifierValue_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.identifierValue_ = b; return b; }  return (ByteString)ref; } public Builder setIdentifierValue(String value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x2; this.identifierValue_ = value; onChanged(); return this; } public Builder clearIdentifierValue() { this.bitField0_ &= 0xFFFFFFFD; this.identifierValue_ = UninterpretedOption.getDefaultInstance().getIdentifierValue(); onChanged(); return this; } public Builder setIdentifierValueBytes(ByteString value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x2; this.identifierValue_ = value; onChanged(); return this; } public boolean hasPositiveIntValue() { return ((this.bitField0_ & 0x4) != 0); } public long getPositiveIntValue() { return this.positiveIntValue_; } public Builder setPositiveIntValue(long value) { this.bitField0_ |= 0x4; this.positiveIntValue_ = value; onChanged(); return this; } public Builder clearPositiveIntValue() { this.bitField0_ &= 0xFFFFFFFB; this.positiveIntValue_ = 0L; onChanged(); return this; } public boolean hasNegativeIntValue() { return ((this.bitField0_ & 0x8) != 0); } public long getNegativeIntValue() { return this.negativeIntValue_; } public Builder setNegativeIntValue(long value) { this.bitField0_ |= 0x8; this.negativeIntValue_ = value; onChanged(); return this; } public Builder clearNegativeIntValue() { this.bitField0_ &= 0xFFFFFFF7; this.negativeIntValue_ = 0L; onChanged(); return this; } public boolean hasDoubleValue() { return ((this.bitField0_ & 0x10) != 0); } public double getDoubleValue() { return this.doubleValue_; } public Builder setDoubleValue(double value) { this.bitField0_ |= 0x10; this.doubleValue_ = value; onChanged(); return this; }
/*       */       public Builder clearDoubleValue() { this.bitField0_ &= 0xFFFFFFEF; this.doubleValue_ = 0.0D; onChanged(); return this; }
/*       */       public boolean hasStringValue() { return ((this.bitField0_ & 0x20) != 0); }
/*       */       public ByteString getStringValue() { return this.stringValue_; }
/*       */       public Builder setStringValue(ByteString value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x20; this.stringValue_ = value; onChanged(); return this; }
/*       */       public Builder clearStringValue() { this.bitField0_ &= 0xFFFFFFDF; this.stringValue_ = UninterpretedOption.getDefaultInstance().getStringValue(); onChanged(); return this; }
/* 38917 */       public boolean hasAggregateValue() { return ((this.bitField0_ & 0x40) != 0); }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public String getAggregateValue() {
/* 38924 */         Object ref = this.aggregateValue_;
/* 38925 */         if (!(ref instanceof String)) {
/* 38926 */           ByteString bs = (ByteString)ref;
/*       */           
/* 38928 */           String s = bs.toStringUtf8();
/* 38929 */           if (bs.isValidUtf8()) {
/* 38930 */             this.aggregateValue_ = s;
/*       */           }
/* 38932 */           return s;
/*       */         } 
/* 38934 */         return (String)ref;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public ByteString getAggregateValueBytes() {
/* 38943 */         Object ref = this.aggregateValue_;
/* 38944 */         if (ref instanceof String) {
/*       */           
/* 38946 */           ByteString b = ByteString.copyFromUtf8((String)ref);
/*       */           
/* 38948 */           this.aggregateValue_ = b;
/* 38949 */           return b;
/*       */         } 
/* 38951 */         return (ByteString)ref;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setAggregateValue(String value) {
/* 38961 */         if (value == null) {
/* 38962 */           throw new NullPointerException();
/*       */         }
/* 38964 */         this.bitField0_ |= 0x40;
/* 38965 */         this.aggregateValue_ = value;
/* 38966 */         onChanged();
/* 38967 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearAggregateValue() {
/* 38974 */         this.bitField0_ &= 0xFFFFFFBF;
/* 38975 */         this.aggregateValue_ = UninterpretedOption.getDefaultInstance().getAggregateValue();
/* 38976 */         onChanged();
/* 38977 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setAggregateValueBytes(ByteString value) {
/* 38986 */         if (value == null) {
/* 38987 */           throw new NullPointerException();
/*       */         }
/* 38989 */         this.bitField0_ |= 0x40;
/* 38990 */         this.aggregateValue_ = value;
/* 38991 */         onChanged();
/* 38992 */         return this;
/*       */       }
/*       */ 
/*       */       
/*       */       public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
/* 38997 */         return super.setUnknownFields(unknownFields);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
/* 39003 */         return super.mergeUnknownFields(unknownFields);
/*       */       }
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 39013 */     private static final UninterpretedOption DEFAULT_INSTANCE = new UninterpretedOption();
/*       */ 
/*       */     
/*       */     public static UninterpretedOption getDefaultInstance() {
/* 39017 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */     
/*       */     @Deprecated
/* 39021 */     public static final Parser<UninterpretedOption> PARSER = new AbstractParser<UninterpretedOption>()
/*       */       {
/*       */ 
/*       */         
/*       */         public UninterpretedOption parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException
/*       */         {
/* 39027 */           return new UninterpretedOption(input, extensionRegistry);
/*       */         }
/*       */       };
/*       */     
/*       */     public static Parser<UninterpretedOption> parser() {
/* 39032 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public Parser<UninterpretedOption> getParserForType() {
/* 39037 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public UninterpretedOption getDefaultInstanceForType() {
/* 39042 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static interface NamePartOrBuilder
/*       */       extends MessageOrBuilder
/*       */     {
/*       */       boolean hasNamePart();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       String getNamePart();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       ByteString getNamePartBytes();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       boolean hasIsExtension();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       boolean getIsExtension();
/*       */     }
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public static interface SourceCodeInfoOrBuilder
/*       */     extends MessageOrBuilder
/*       */   {
/*       */     List<SourceCodeInfo.Location> getLocationList();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     SourceCodeInfo.Location getLocation(int param1Int);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getLocationCount();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     List<? extends SourceCodeInfo.LocationOrBuilder> getLocationOrBuilderList();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     SourceCodeInfo.LocationOrBuilder getLocationOrBuilder(int param1Int);
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public static final class SourceCodeInfo
/*       */     extends GeneratedMessageV3
/*       */     implements SourceCodeInfoOrBuilder
/*       */   {
/*       */     private static final long serialVersionUID = 0L;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int LOCATION_FIELD_NUMBER = 1;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private List<Location> location_;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private byte memoizedIsInitialized;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private SourceCodeInfo(GeneratedMessageV3.Builder<?> builder)
/*       */     {
/* 39310 */       super(builder);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/* 41926 */       this.memoizedIsInitialized = -1; } private SourceCodeInfo() { this.memoizedIsInitialized = -1; this.location_ = Collections.emptyList(); } protected Object newInstance(UnusedPrivateParameter unused) { return new SourceCodeInfo(); } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private SourceCodeInfo(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this(); if (extensionRegistry == null) throw new NullPointerException();  int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { int tag = input.readTag(); switch (tag) { case 0: done = true; continue;case 10: if ((mutable_bitField0_ & 0x1) == 0) { this.location_ = new ArrayList<>(); mutable_bitField0_ |= 0x1; }  this.location_.add(input.readMessage(Location.PARSER, extensionRegistry)); continue; }  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this); } finally { if ((mutable_bitField0_ & 0x1) != 0) this.location_ = Collections.unmodifiableList(this.location_);  this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return DescriptorProtos.internal_static_google_protobuf_SourceCodeInfo_descriptor; } protected FieldAccessorTable internalGetFieldAccessorTable() { return DescriptorProtos.internal_static_google_protobuf_SourceCodeInfo_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)SourceCodeInfo.class, (Class)Builder.class); } public static final class Location extends GeneratedMessageV3 implements LocationOrBuilder {
/*       */       private static final long serialVersionUID = 0L; private int bitField0_; public static final int PATH_FIELD_NUMBER = 1; private Internal.IntList path_; private int pathMemoizedSerializedSize; public static final int SPAN_FIELD_NUMBER = 2; private Internal.IntList span_; private int spanMemoizedSerializedSize; public static final int LEADING_COMMENTS_FIELD_NUMBER = 3; private volatile Object leadingComments_; public static final int TRAILING_COMMENTS_FIELD_NUMBER = 4; private volatile Object trailingComments_; public static final int LEADING_DETACHED_COMMENTS_FIELD_NUMBER = 6; private LazyStringList leadingDetachedComments_; private byte memoizedIsInitialized; private Location(GeneratedMessageV3.Builder<?> builder) { super(builder); this.pathMemoizedSerializedSize = -1; this.spanMemoizedSerializedSize = -1; this.memoizedIsInitialized = -1; } private Location() { this.pathMemoizedSerializedSize = -1; this.spanMemoizedSerializedSize = -1; this.memoizedIsInitialized = -1; this.path_ = emptyIntList(); this.span_ = emptyIntList(); this.leadingComments_ = ""; this.trailingComments_ = ""; this.leadingDetachedComments_ = LazyStringArrayList.EMPTY; } protected Object newInstance(UnusedPrivateParameter unused) { return new Location(); } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private Location(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this(); if (extensionRegistry == null) throw new NullPointerException();  int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { int length; ByteString bs; int limit, tag = input.readTag(); switch (tag) { case 0: done = true; continue;case 8: if ((mutable_bitField0_ & 0x1) == 0) { this.path_ = newIntList(); mutable_bitField0_ |= 0x1; }  this.path_.addInt(input.readInt32()); continue;case 10: length = input.readRawVarint32(); limit = input.pushLimit(length); if ((mutable_bitField0_ & 0x1) == 0 && input.getBytesUntilLimit() > 0) { this.path_ = newIntList(); mutable_bitField0_ |= 0x1; }  while (input.getBytesUntilLimit() > 0) this.path_.addInt(input.readInt32());  input.popLimit(limit); continue;case 16: if ((mutable_bitField0_ & 0x2) == 0) { this.span_ = newIntList(); mutable_bitField0_ |= 0x2; }  this.span_.addInt(input.readInt32()); continue;case 18: length = input.readRawVarint32(); limit = input.pushLimit(length); if ((mutable_bitField0_ & 0x2) == 0 && input.getBytesUntilLimit() > 0) { this.span_ = newIntList(); mutable_bitField0_ |= 0x2; }  while (input.getBytesUntilLimit() > 0) this.span_.addInt(input.readInt32());  input.popLimit(limit); continue;case 26: bs = input.readBytes(); this.bitField0_ |= 0x1; this.leadingComments_ = bs; continue;case 34: bs = input.readBytes(); this.bitField0_ |= 0x2; this.trailingComments_ = bs; continue;case 50: bs = input.readBytes(); if ((mutable_bitField0_ & 0x10) == 0) { this.leadingDetachedComments_ = new LazyStringArrayList(); mutable_bitField0_ |= 0x10; }  this.leadingDetachedComments_.add(bs); continue; }  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this); } finally { if ((mutable_bitField0_ & 0x1) != 0) this.path_.makeImmutable();  if ((mutable_bitField0_ & 0x2) != 0) this.span_.makeImmutable();  if ((mutable_bitField0_ & 0x10) != 0) this.leadingDetachedComments_ = this.leadingDetachedComments_.getUnmodifiableView();  this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return DescriptorProtos.internal_static_google_protobuf_SourceCodeInfo_Location_descriptor; } protected FieldAccessorTable internalGetFieldAccessorTable() { return DescriptorProtos.internal_static_google_protobuf_SourceCodeInfo_Location_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)Location.class, (Class)Builder.class); } public List<Integer> getPathList() { return this.path_; } public int getPathCount() { return this.path_.size(); } public int getPath(int index) { return this.path_.getInt(index); } public List<Integer> getSpanList() { return this.span_; } public int getSpanCount() { return this.span_.size(); } public int getSpan(int index) { return this.span_.getInt(index); } public boolean hasLeadingComments() { return ((this.bitField0_ & 0x1) != 0); } public String getLeadingComments() { Object ref = this.leadingComments_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.leadingComments_ = s;  return s; } public ByteString getLeadingCommentsBytes() { Object ref = this.leadingComments_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.leadingComments_ = b; return b; }  return (ByteString)ref; } public boolean hasTrailingComments() { return ((this.bitField0_ & 0x2) != 0); } public String getTrailingComments() { Object ref = this.trailingComments_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.trailingComments_ = s;  return s; } public ByteString getTrailingCommentsBytes() { Object ref = this.trailingComments_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.trailingComments_ = b; return b; }  return (ByteString)ref; } public ProtocolStringList getLeadingDetachedCommentsList() { return this.leadingDetachedComments_; } public int getLeadingDetachedCommentsCount() { return this.leadingDetachedComments_.size(); } public String getLeadingDetachedComments(int index) { return this.leadingDetachedComments_.get(index); } public ByteString getLeadingDetachedCommentsBytes(int index) { return this.leadingDetachedComments_.getByteString(index); } public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized; if (isInitialized == 1) return true;  if (isInitialized == 0) return false;  this.memoizedIsInitialized = 1; return true; } public void writeTo(CodedOutputStream output) throws IOException { getSerializedSize(); if (getPathList().size() > 0) { output.writeUInt32NoTag(10); output.writeUInt32NoTag(this.pathMemoizedSerializedSize); }  int i; for (i = 0; i < this.path_.size(); i++) output.writeInt32NoTag(this.path_.getInt(i));  if (getSpanList().size() > 0) { output.writeUInt32NoTag(18); output.writeUInt32NoTag(this.spanMemoizedSerializedSize); }  for (i = 0; i < this.span_.size(); i++) output.writeInt32NoTag(this.span_.getInt(i));  if ((this.bitField0_ & 0x1) != 0) GeneratedMessageV3.writeString(output, 3, this.leadingComments_);  if ((this.bitField0_ & 0x2) != 0) GeneratedMessageV3.writeString(output, 4, this.trailingComments_);  for (i = 0; i < this.leadingDetachedComments_.size(); i++) GeneratedMessageV3.writeString(output, 6, this.leadingDetachedComments_.getRaw(i));  this.unknownFields.writeTo(output); } public int getSerializedSize() { int size = this.memoizedSize; if (size != -1) return size;  size = 0; int dataSize = 0; int i; for (i = 0; i < this.path_.size(); i++) dataSize += CodedOutputStream.computeInt32SizeNoTag(this.path_.getInt(i));  size += dataSize; if (!getPathList().isEmpty()) { size++; size += CodedOutputStream.computeInt32SizeNoTag(dataSize); }  this.pathMemoizedSerializedSize = dataSize; dataSize = 0; for (i = 0; i < this.span_.size(); i++) dataSize += CodedOutputStream.computeInt32SizeNoTag(this.span_.getInt(i));  size += dataSize; if (!getSpanList().isEmpty()) { size++; size += CodedOutputStream.computeInt32SizeNoTag(dataSize); }  this.spanMemoizedSerializedSize = dataSize; if ((this.bitField0_ & 0x1) != 0) size += GeneratedMessageV3.computeStringSize(3, this.leadingComments_);  if ((this.bitField0_ & 0x2) != 0) size += GeneratedMessageV3.computeStringSize(4, this.trailingComments_);  dataSize = 0; for (i = 0; i < this.leadingDetachedComments_.size(); i++) dataSize += computeStringSizeNoTag(this.leadingDetachedComments_.getRaw(i));  size += dataSize; size += 1 * getLeadingDetachedCommentsList().size(); size += this.unknownFields.getSerializedSize(); this.memoizedSize = size; return size; } public boolean equals(Object obj) { if (obj == this) return true;  if (!(obj instanceof Location)) return super.equals(obj);  Location other = (Location)obj; if (!getPathList().equals(other.getPathList())) return false;  if (!getSpanList().equals(other.getSpanList())) return false;  if (hasLeadingComments() != other.hasLeadingComments()) return false;  if (hasLeadingComments() && !getLeadingComments().equals(other.getLeadingComments())) return false;  if (hasTrailingComments() != other.hasTrailingComments()) return false;  if (hasTrailingComments() && !getTrailingComments().equals(other.getTrailingComments())) return false;  if (!getLeadingDetachedCommentsList().equals(other.getLeadingDetachedCommentsList())) return false;  if (!this.unknownFields.equals(other.unknownFields)) return false;  return true; } public int hashCode() { if (this.memoizedHashCode != 0) return this.memoizedHashCode;  int hash = 41; hash = 19 * hash + getDescriptor().hashCode(); if (getPathCount() > 0) { hash = 37 * hash + 1; hash = 53 * hash + getPathList().hashCode(); }  if (getSpanCount() > 0) { hash = 37 * hash + 2; hash = 53 * hash + getSpanList().hashCode(); }  if (hasLeadingComments()) { hash = 37 * hash + 3; hash = 53 * hash + getLeadingComments().hashCode(); }  if (hasTrailingComments()) { hash = 37 * hash + 4; hash = 53 * hash + getTrailingComments().hashCode(); }  if (getLeadingDetachedCommentsCount() > 0) { hash = 37 * hash + 6; hash = 53 * hash + getLeadingDetachedCommentsList().hashCode(); }  hash = 29 * hash + this.unknownFields.hashCode(); this.memoizedHashCode = hash; return hash; } public static Location parseFrom(ByteBuffer data) throws InvalidProtocolBufferException { return PARSER.parseFrom(data); } public static Location parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return PARSER.parseFrom(data, extensionRegistry); } public static Location parseFrom(ByteString data) throws InvalidProtocolBufferException { return PARSER.parseFrom(data); } public static Location parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return PARSER.parseFrom(data, extensionRegistry); } public static Location parseFrom(byte[] data) throws InvalidProtocolBufferException { return PARSER.parseFrom(data); } public static Location parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return PARSER.parseFrom(data, extensionRegistry); } public static Location parseFrom(InputStream input) throws IOException { return GeneratedMessageV3.<Location>parseWithIOException(PARSER, input); } public static Location parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { return GeneratedMessageV3.<Location>parseWithIOException(PARSER, input, extensionRegistry); } public static Location parseDelimitedFrom(InputStream input) throws IOException { return GeneratedMessageV3.<Location>parseDelimitedWithIOException(PARSER, input); } public static Location parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { return GeneratedMessageV3.<Location>parseDelimitedWithIOException(PARSER, input, extensionRegistry); } public static Location parseFrom(CodedInputStream input) throws IOException { return GeneratedMessageV3.<Location>parseWithIOException(PARSER, input); } public static Location parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { return GeneratedMessageV3.<Location>parseWithIOException(PARSER, input, extensionRegistry); } public Builder newBuilderForType() { return newBuilder(); } public static Builder newBuilder() { return DEFAULT_INSTANCE.toBuilder(); } public static Builder newBuilder(Location prototype) { return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype); } public Builder toBuilder() { return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder()).mergeFrom(this); } protected Builder newBuilderForType(BuilderParent parent) { Builder builder = new Builder(parent); return builder; } public static final class Builder extends GeneratedMessageV3.Builder<Builder> implements LocationOrBuilder {
/*       */         private int bitField0_; private Internal.IntList path_; private Internal.IntList span_; private Object leadingComments_; private Object trailingComments_; private LazyStringList leadingDetachedComments_; public static final Descriptors.Descriptor getDescriptor() { return DescriptorProtos.internal_static_google_protobuf_SourceCodeInfo_Location_descriptor; } protected FieldAccessorTable internalGetFieldAccessorTable() { return DescriptorProtos.internal_static_google_protobuf_SourceCodeInfo_Location_fieldAccessorTable.ensureFieldAccessorsInitialized((Class) Location.class, (Class)Builder.class); } private Builder() { this.path_ = GeneratedMessageV3.emptyIntList(); this.span_ = GeneratedMessageV3.emptyIntList(); this.leadingComments_ = ""; this.trailingComments_ = ""; this.leadingDetachedComments_ = LazyStringArrayList.EMPTY; maybeForceBuilderInitialization(); } private Builder(BuilderParent parent) { super(parent); this.path_ = GeneratedMessageV3.emptyIntList(); this.span_ = GeneratedMessageV3.emptyIntList(); this.leadingComments_ = ""; this.trailingComments_ = ""; this.leadingDetachedComments_ = LazyStringArrayList.EMPTY; maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (GeneratedMessageV3.alwaysUseFieldBuilders); } public Builder clear() { super.clear(); this.path_ = GeneratedMessageV3.emptyIntList(); this.bitField0_ &= 0xFFFFFFFE; this.span_ = GeneratedMessageV3.emptyIntList(); this.bitField0_ &= 0xFFFFFFFD; this.leadingComments_ = ""; this.bitField0_ &= 0xFFFFFFFB; this.trailingComments_ = ""; this.bitField0_ &= 0xFFFFFFF7; this.leadingDetachedComments_ = LazyStringArrayList.EMPTY; this.bitField0_ &= 0xFFFFFFEF; return this; } public Descriptors.Descriptor getDescriptorForType() { return DescriptorProtos.internal_static_google_protobuf_SourceCodeInfo_Location_descriptor; } public Location getDefaultInstanceForType() { return Location.getDefaultInstance(); } public Location build() { Location result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public Location buildPartial() { Location result = new Location(this); int from_bitField0_ = this.bitField0_; int to_bitField0_ = 0; if ((this.bitField0_ & 0x1) != 0) { this.path_.makeImmutable(); this.bitField0_ &= 0xFFFFFFFE; }  result.path_ = this.path_; if ((this.bitField0_ & 0x2) != 0) { this.span_.makeImmutable(); this.bitField0_ &= 0xFFFFFFFD; }  result.span_ = this.span_; if ((from_bitField0_ & 0x4) != 0) to_bitField0_ |= 0x1;  result.leadingComments_ = this.leadingComments_; if ((from_bitField0_ & 0x8) != 0) to_bitField0_ |= 0x2;  result.trailingComments_ = this.trailingComments_; if ((this.bitField0_ & 0x10) != 0) { this.leadingDetachedComments_ = this.leadingDetachedComments_.getUnmodifiableView(); this.bitField0_ &= 0xFFFFFFEF; }  result.leadingDetachedComments_ = this.leadingDetachedComments_; result.bitField0_ = to_bitField0_; onBuilt(); return result; } public Builder clone() { return super.clone(); } public Builder setField(Descriptors.FieldDescriptor field, Object value) { return super.setField(field, value); } public Builder clearField(Descriptors.FieldDescriptor field) { return super.clearField(field); } public Builder clearOneof(Descriptors.OneofDescriptor oneof) { return super.clearOneof(oneof); } public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) { return super.setRepeatedField(field, index, value); } public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) { return super.addRepeatedField(field, value); } public Builder mergeFrom(Message other) { if (other instanceof Location) return mergeFrom((Location)other);  super.mergeFrom(other); return this; } public Builder mergeFrom(Location other) { if (other == Location.getDefaultInstance()) return this;  if (!other.path_.isEmpty()) { if (this.path_.isEmpty()) { this.path_ = other.path_; this.bitField0_ &= 0xFFFFFFFE; } else { ensurePathIsMutable(); this.path_.addAll(other.path_); }  onChanged(); }  if (!other.span_.isEmpty()) { if (this.span_.isEmpty()) { this.span_ = other.span_; this.bitField0_ &= 0xFFFFFFFD; } else { ensureSpanIsMutable(); this.span_.addAll(other.span_); }  onChanged(); }  if (other.hasLeadingComments()) { this.bitField0_ |= 0x4; this.leadingComments_ = other.leadingComments_; onChanged(); }  if (other.hasTrailingComments()) { this.bitField0_ |= 0x8; this.trailingComments_ = other.trailingComments_; onChanged(); }  if (!other.leadingDetachedComments_.isEmpty()) { if (this.leadingDetachedComments_.isEmpty()) { this.leadingDetachedComments_ = other.leadingDetachedComments_; this.bitField0_ &= 0xFFFFFFEF; } else { ensureLeadingDetachedCommentsIsMutable(); this.leadingDetachedComments_.addAll(other.leadingDetachedComments_); }  onChanged(); }  mergeUnknownFields(other.unknownFields); onChanged(); return this; } public final boolean isInitialized() { return true; } public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { Location parsedMessage = null; try { parsedMessage = Location.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (Location)e.getUnfinishedMessage(); throw e.unwrapIOException(); } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; } private void ensurePathIsMutable() { if ((this.bitField0_ & 0x1) == 0) { this.path_ = GeneratedMessageV3.mutableCopy(this.path_); this.bitField0_ |= 0x1; }  } public List<Integer> getPathList() { return ((this.bitField0_ & 0x1) != 0) ? Collections.<Integer>unmodifiableList(this.path_) : this.path_; } public int getPathCount() { return this.path_.size(); } public int getPath(int index) { return this.path_.getInt(index); } public Builder setPath(int index, int value) { ensurePathIsMutable(); this.path_.setInt(index, value); onChanged(); return this; } public Builder addPath(int value) { ensurePathIsMutable(); this.path_.addInt(value); onChanged(); return this; } public Builder addAllPath(Iterable<? extends Integer> values) { ensurePathIsMutable(); AbstractMessageLite.Builder.addAll(values, this.path_); onChanged(); return this; } public Builder clearPath() { this.path_ = GeneratedMessageV3.emptyIntList(); this.bitField0_ &= 0xFFFFFFFE; onChanged(); return this; } private void ensureSpanIsMutable() { if ((this.bitField0_ & 0x2) == 0) { this.span_ = GeneratedMessageV3.mutableCopy(this.span_); this.bitField0_ |= 0x2; }  } public List<Integer> getSpanList() { return ((this.bitField0_ & 0x2) != 0) ? Collections.<Integer>unmodifiableList(this.span_) : this.span_; } public int getSpanCount() { return this.span_.size(); } public int getSpan(int index) { return this.span_.getInt(index); } public Builder setSpan(int index, int value) { ensureSpanIsMutable(); this.span_.setInt(index, value); onChanged(); return this; } public Builder addSpan(int value) { ensureSpanIsMutable(); this.span_.addInt(value); onChanged(); return this; } public Builder addAllSpan(Iterable<? extends Integer> values) { ensureSpanIsMutable(); AbstractMessageLite.Builder.addAll(values, this.span_); onChanged(); return this; } public Builder clearSpan() { this.span_ = GeneratedMessageV3.emptyIntList(); this.bitField0_ &= 0xFFFFFFFD; onChanged(); return this; } public boolean hasLeadingComments() { return ((this.bitField0_ & 0x4) != 0); } public String getLeadingComments() { Object ref = this.leadingComments_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.leadingComments_ = s;  return s; }  return (String)ref; } public ByteString getLeadingCommentsBytes() { Object ref = this.leadingComments_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.leadingComments_ = b; return b; }  return (ByteString)ref; } public Builder setLeadingComments(String value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x4; this.leadingComments_ = value; onChanged(); return this; } public Builder clearLeadingComments() { this.bitField0_ &= 0xFFFFFFFB; this.leadingComments_ = Location.getDefaultInstance().getLeadingComments(); onChanged(); return this; } public Builder setLeadingCommentsBytes(ByteString value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x4; this.leadingComments_ = value; onChanged(); return this; } public boolean hasTrailingComments() { return ((this.bitField0_ & 0x8) != 0); } public String getTrailingComments() { Object ref = this.trailingComments_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.trailingComments_ = s;  return s; }  return (String)ref; } public ByteString getTrailingCommentsBytes() { Object ref = this.trailingComments_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.trailingComments_ = b; return b; }  return (ByteString)ref; } public Builder setTrailingComments(String value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x8; this.trailingComments_ = value; onChanged(); return this; } public Builder clearTrailingComments() { this.bitField0_ &= 0xFFFFFFF7; this.trailingComments_ = Location.getDefaultInstance().getTrailingComments(); onChanged(); return this; } public Builder setTrailingCommentsBytes(ByteString value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x8; this.trailingComments_ = value; onChanged(); return this; } private void ensureLeadingDetachedCommentsIsMutable() { if ((this.bitField0_ & 0x10) == 0) { this.leadingDetachedComments_ = new LazyStringArrayList(this.leadingDetachedComments_); this.bitField0_ |= 0x10; }  } public ProtocolStringList getLeadingDetachedCommentsList() { return this.leadingDetachedComments_.getUnmodifiableView(); } public int getLeadingDetachedCommentsCount() { return this.leadingDetachedComments_.size(); } public String getLeadingDetachedComments(int index) { return this.leadingDetachedComments_.get(index); } public ByteString getLeadingDetachedCommentsBytes(int index) { return this.leadingDetachedComments_.getByteString(index); } public Builder setLeadingDetachedComments(int index, String value) { if (value == null) throw new NullPointerException();  ensureLeadingDetachedCommentsIsMutable(); this.leadingDetachedComments_.set(index, value); onChanged(); return this; } public Builder addLeadingDetachedComments(String value) { if (value == null) throw new NullPointerException();  ensureLeadingDetachedCommentsIsMutable(); this.leadingDetachedComments_.add(value); onChanged(); return this; } public Builder addAllLeadingDetachedComments(Iterable<String> values) { ensureLeadingDetachedCommentsIsMutable(); AbstractMessageLite.Builder.addAll(values, this.leadingDetachedComments_); onChanged(); return this; } public Builder clearLeadingDetachedComments() { this.leadingDetachedComments_ = LazyStringArrayList.EMPTY; this.bitField0_ &= 0xFFFFFFEF; onChanged(); return this; } public Builder addLeadingDetachedCommentsBytes(ByteString value) { if (value == null) throw new NullPointerException();  ensureLeadingDetachedCommentsIsMutable(); this.leadingDetachedComments_.add(value); onChanged(); return this; } public final Builder setUnknownFields(UnknownFieldSet unknownFields) { return super.setUnknownFields(unknownFields); } public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) { return super.mergeUnknownFields(unknownFields); } } private static final Location DEFAULT_INSTANCE = new Location(); public static Location getDefaultInstance() { return DEFAULT_INSTANCE; } @Deprecated public static final Parser<Location> PARSER = new AbstractParser<Location>() { public Location parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return new Location(input, extensionRegistry); } }
/* 41929 */       ; public static Parser<Location> parser() { return PARSER; } public Parser<Location> getParserForType() { return PARSER; } public Location getDefaultInstanceForType() { return DEFAULT_INSTANCE; } } public List<Location> getLocationList() { return this.location_; } public List<? extends LocationOrBuilder> getLocationOrBuilderList() { return (List)this.location_; } public int getLocationCount() { return this.location_.size(); } public Location getLocation(int index) { return this.location_.get(index); } public LocationOrBuilder getLocationOrBuilder(int index) { return this.location_.get(index); } public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized;
/* 41930 */       if (isInitialized == 1) return true; 
/* 41931 */       if (isInitialized == 0) return false;
/*       */       
/* 41933 */       this.memoizedIsInitialized = 1;
/* 41934 */       return true; }
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/* 41940 */       for (int i = 0; i < this.location_.size(); i++) {
/* 41941 */         output.writeMessage(1, this.location_.get(i));
/*       */       }
/* 41943 */       this.unknownFields.writeTo(output);
/*       */     }
/*       */ 
/*       */     
/*       */     public int getSerializedSize() {
/* 41948 */       int size = this.memoizedSize;
/* 41949 */       if (size != -1) return size;
/*       */       
/* 41951 */       size = 0;
/* 41952 */       for (int i = 0; i < this.location_.size(); i++) {
/* 41953 */         size += 
/* 41954 */           CodedOutputStream.computeMessageSize(1, this.location_.get(i));
/*       */       }
/* 41956 */       size += this.unknownFields.getSerializedSize();
/* 41957 */       this.memoizedSize = size;
/* 41958 */       return size;
/*       */     }
/*       */ 
/*       */     
/*       */     public boolean equals(Object obj) {
/* 41963 */       if (obj == this) {
/* 41964 */         return true;
/*       */       }
/* 41966 */       if (!(obj instanceof SourceCodeInfo)) {
/* 41967 */         return super.equals(obj);
/*       */       }
/* 41969 */       SourceCodeInfo other = (SourceCodeInfo)obj;
/*       */ 
/*       */       
/* 41972 */       if (!getLocationList().equals(other.getLocationList())) return false; 
/* 41973 */       if (!this.unknownFields.equals(other.unknownFields)) return false; 
/* 41974 */       return true;
/*       */     }
/*       */ 
/*       */     
/*       */     public int hashCode() {
/* 41979 */       if (this.memoizedHashCode != 0) {
/* 41980 */         return this.memoizedHashCode;
/*       */       }
/* 41982 */       int hash = 41;
/* 41983 */       hash = 19 * hash + getDescriptor().hashCode();
/* 41984 */       if (getLocationCount() > 0) {
/* 41985 */         hash = 37 * hash + 1;
/* 41986 */         hash = 53 * hash + getLocationList().hashCode();
/*       */       } 
/* 41988 */       hash = 29 * hash + this.unknownFields.hashCode();
/* 41989 */       this.memoizedHashCode = hash;
/* 41990 */       return hash;
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static SourceCodeInfo parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
/* 41996 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static SourceCodeInfo parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 42002 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static SourceCodeInfo parseFrom(ByteString data) throws InvalidProtocolBufferException {
/* 42007 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static SourceCodeInfo parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 42013 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static SourceCodeInfo parseFrom(byte[] data) throws InvalidProtocolBufferException {
/* 42017 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static SourceCodeInfo parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 42023 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static SourceCodeInfo parseFrom(InputStream input) throws IOException {
/* 42027 */       return 
/* 42028 */         GeneratedMessageV3.<SourceCodeInfo>parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static SourceCodeInfo parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 42034 */       return 
/* 42035 */         GeneratedMessageV3.<SourceCodeInfo>parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static SourceCodeInfo parseDelimitedFrom(InputStream input) throws IOException {
/* 42039 */       return 
/* 42040 */         GeneratedMessageV3.<SourceCodeInfo>parseDelimitedWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static SourceCodeInfo parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 42046 */       return 
/* 42047 */         GeneratedMessageV3.<SourceCodeInfo>parseDelimitedWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static SourceCodeInfo parseFrom(CodedInputStream input) throws IOException {
/* 42052 */       return 
/* 42053 */         GeneratedMessageV3.<SourceCodeInfo>parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static SourceCodeInfo parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 42059 */       return 
/* 42060 */         GeneratedMessageV3.<SourceCodeInfo>parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public Builder newBuilderForType() {
/* 42064 */       return newBuilder();
/*       */     } public static Builder newBuilder() {
/* 42066 */       return DEFAULT_INSTANCE.toBuilder();
/*       */     }
/*       */     public static Builder newBuilder(SourceCodeInfo prototype) {
/* 42069 */       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
/*       */     }
/*       */     
/*       */     public Builder toBuilder() {
/* 42073 */       return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder())
/* 42074 */         .mergeFrom(this);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     protected Builder newBuilderForType(BuilderParent parent) {
/* 42080 */       Builder builder = new Builder(parent);
/* 42081 */       return builder;
/*       */     }
/*       */ 
/*       */     
/*       */     public static final class Builder
/*       */       extends GeneratedMessageV3.Builder<Builder>
/*       */       implements SourceCodeInfoOrBuilder
/*       */     {
/*       */       private int bitField0_;
/*       */       
/*       */       private List<Location> location_;
/*       */       
/*       */       private RepeatedFieldBuilderV3<Location, Location.Builder, LocationOrBuilder> locationBuilder_;
/*       */ 
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/* 42097 */         return DescriptorProtos.internal_static_google_protobuf_SourceCodeInfo_descriptor;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       protected FieldAccessorTable internalGetFieldAccessorTable() {
/* 42103 */         return DescriptorProtos.internal_static_google_protobuf_SourceCodeInfo_fieldAccessorTable
/* 42104 */           .ensureFieldAccessorsInitialized((Class) SourceCodeInfo.class, (Class)Builder.class);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private Builder()
/*       */       {
/* 42273 */         this
/* 42274 */           .location_ = Collections.emptyList(); maybeForceBuilderInitialization(); } private Builder(BuilderParent parent) { super(parent); this.location_ = Collections.emptyList(); maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (GeneratedMessageV3.alwaysUseFieldBuilders) getLocationFieldBuilder();  } public Builder clear() { super.clear(); if (this.locationBuilder_ == null) { this.location_ = Collections.emptyList(); this.bitField0_ &= 0xFFFFFFFE; } else { this.locationBuilder_.clear(); }  return this; } public Descriptors.Descriptor getDescriptorForType() { return DescriptorProtos.internal_static_google_protobuf_SourceCodeInfo_descriptor; } public SourceCodeInfo getDefaultInstanceForType() { return SourceCodeInfo.getDefaultInstance(); } public SourceCodeInfo build() { SourceCodeInfo result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public SourceCodeInfo buildPartial() { SourceCodeInfo result = new SourceCodeInfo(this); int from_bitField0_ = this.bitField0_; if (this.locationBuilder_ == null) { if ((this.bitField0_ & 0x1) != 0) { this.location_ = Collections.unmodifiableList(this.location_); this.bitField0_ &= 0xFFFFFFFE; }  result.location_ = this.location_; } else { result.location_ = this.locationBuilder_.build(); }  onBuilt(); return result; } public Builder clone() { return super.clone(); } public Builder setField(Descriptors.FieldDescriptor field, Object value) { return super.setField(field, value); } public Builder clearField(Descriptors.FieldDescriptor field) { return super.clearField(field); } public Builder clearOneof(Descriptors.OneofDescriptor oneof) { return super.clearOneof(oneof); } public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) { return super.setRepeatedField(field, index, value); } public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) { return super.addRepeatedField(field, value); } public Builder mergeFrom(Message other) { if (other instanceof SourceCodeInfo) return mergeFrom((SourceCodeInfo)other);  super.mergeFrom(other); return this; } public Builder mergeFrom(SourceCodeInfo other) { if (other == SourceCodeInfo.getDefaultInstance()) return this;  if (this.locationBuilder_ == null) { if (!other.location_.isEmpty()) { if (this.location_.isEmpty()) { this.location_ = other.location_; this.bitField0_ &= 0xFFFFFFFE; } else { ensureLocationIsMutable(); this.location_.addAll(other.location_); }  onChanged(); }  } else if (!other.location_.isEmpty()) { if (this.locationBuilder_.isEmpty()) { this.locationBuilder_.dispose(); this.locationBuilder_ = null; this.location_ = other.location_; this.bitField0_ &= 0xFFFFFFFE; this.locationBuilder_ = GeneratedMessageV3.alwaysUseFieldBuilders ? getLocationFieldBuilder() : null; } else { this.locationBuilder_.addAllMessages(other.location_); }  }  mergeUnknownFields(other.unknownFields); onChanged(); return this; } public final boolean isInitialized() { return true; }
/*       */       public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { SourceCodeInfo parsedMessage = null; try { parsedMessage = SourceCodeInfo.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (SourceCodeInfo)e.getUnfinishedMessage(); throw e.unwrapIOException(); } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; }
/* 42276 */       private void ensureLocationIsMutable() { if ((this.bitField0_ & 0x1) == 0) {
/* 42277 */           this.location_ = new ArrayList<>(this.location_);
/* 42278 */           this.bitField0_ |= 0x1;
/*       */         }  }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public List<Location> getLocationList() {
/* 42333 */         if (this.locationBuilder_ == null) {
/* 42334 */           return Collections.unmodifiableList(this.location_);
/*       */         }
/* 42336 */         return this.locationBuilder_.getMessageList();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getLocationCount() {
/* 42387 */         if (this.locationBuilder_ == null) {
/* 42388 */           return this.location_.size();
/*       */         }
/* 42390 */         return this.locationBuilder_.getCount();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Location getLocation(int index) {
/* 42441 */         if (this.locationBuilder_ == null) {
/* 42442 */           return this.location_.get(index);
/*       */         }
/* 42444 */         return this.locationBuilder_.getMessage(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setLocation(int index, Location value) {
/* 42496 */         if (this.locationBuilder_ == null) {
/* 42497 */           if (value == null) {
/* 42498 */             throw new NullPointerException();
/*       */           }
/* 42500 */           ensureLocationIsMutable();
/* 42501 */           this.location_.set(index, value);
/* 42502 */           onChanged();
/*       */         } else {
/* 42504 */           this.locationBuilder_.setMessage(index, value);
/*       */         } 
/* 42506 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setLocation(int index, Location.Builder builderForValue) {
/* 42557 */         if (this.locationBuilder_ == null) {
/* 42558 */           ensureLocationIsMutable();
/* 42559 */           this.location_.set(index, builderForValue.build());
/* 42560 */           onChanged();
/*       */         } else {
/* 42562 */           this.locationBuilder_.setMessage(index, builderForValue.build());
/*       */         } 
/* 42564 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addLocation(Location value) {
/* 42614 */         if (this.locationBuilder_ == null) {
/* 42615 */           if (value == null) {
/* 42616 */             throw new NullPointerException();
/*       */           }
/* 42618 */           ensureLocationIsMutable();
/* 42619 */           this.location_.add(value);
/* 42620 */           onChanged();
/*       */         } else {
/* 42622 */           this.locationBuilder_.addMessage(value);
/*       */         } 
/* 42624 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addLocation(int index, Location value) {
/* 42675 */         if (this.locationBuilder_ == null) {
/* 42676 */           if (value == null) {
/* 42677 */             throw new NullPointerException();
/*       */           }
/* 42679 */           ensureLocationIsMutable();
/* 42680 */           this.location_.add(index, value);
/* 42681 */           onChanged();
/*       */         } else {
/* 42683 */           this.locationBuilder_.addMessage(index, value);
/*       */         } 
/* 42685 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addLocation(Location.Builder builderForValue) {
/* 42736 */         if (this.locationBuilder_ == null) {
/* 42737 */           ensureLocationIsMutable();
/* 42738 */           this.location_.add(builderForValue.build());
/* 42739 */           onChanged();
/*       */         } else {
/* 42741 */           this.locationBuilder_.addMessage(builderForValue.build());
/*       */         } 
/* 42743 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addLocation(int index, Location.Builder builderForValue) {
/* 42794 */         if (this.locationBuilder_ == null) {
/* 42795 */           ensureLocationIsMutable();
/* 42796 */           this.location_.add(index, builderForValue.build());
/* 42797 */           onChanged();
/*       */         } else {
/* 42799 */           this.locationBuilder_.addMessage(index, builderForValue.build());
/*       */         } 
/* 42801 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addAllLocation(Iterable<? extends Location> values) {
/* 42852 */         if (this.locationBuilder_ == null) {
/* 42853 */           ensureLocationIsMutable();
/* 42854 */           AbstractMessageLite.Builder.addAll(values, this.location_);
/*       */           
/* 42856 */           onChanged();
/*       */         } else {
/* 42858 */           this.locationBuilder_.addAllMessages(values);
/*       */         } 
/* 42860 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearLocation() {
/* 42910 */         if (this.locationBuilder_ == null) {
/* 42911 */           this.location_ = Collections.emptyList();
/* 42912 */           this.bitField0_ &= 0xFFFFFFFE;
/* 42913 */           onChanged();
/*       */         } else {
/* 42915 */           this.locationBuilder_.clear();
/*       */         } 
/* 42917 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder removeLocation(int index) {
/* 42967 */         if (this.locationBuilder_ == null) {
/* 42968 */           ensureLocationIsMutable();
/* 42969 */           this.location_.remove(index);
/* 42970 */           onChanged();
/*       */         } else {
/* 42972 */           this.locationBuilder_.remove(index);
/*       */         } 
/* 42974 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Location.Builder getLocationBuilder(int index) {
/* 43025 */         return getLocationFieldBuilder().getBuilder(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public LocationOrBuilder getLocationOrBuilder(int index) {
/* 43076 */         if (this.locationBuilder_ == null)
/* 43077 */           return this.location_.get(index); 
/* 43078 */         return this.locationBuilder_.getMessageOrBuilder(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public List<? extends LocationOrBuilder> getLocationOrBuilderList() {
/* 43130 */         if (this.locationBuilder_ != null) {
/* 43131 */           return this.locationBuilder_.getMessageOrBuilderList();
/*       */         }
/* 43133 */         return Collections.unmodifiableList((List)this.location_);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Location.Builder addLocationBuilder() {
/* 43184 */         return getLocationFieldBuilder().addBuilder(
/* 43185 */             Location.getDefaultInstance());
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Location.Builder addLocationBuilder(int index) {
/* 43236 */         return getLocationFieldBuilder().addBuilder(index, 
/* 43237 */             Location.getDefaultInstance());
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public List<Location.Builder> getLocationBuilderList() {
/* 43288 */         return getLocationFieldBuilder().getBuilderList();
/*       */       }
/*       */ 
/*       */       
/*       */       private RepeatedFieldBuilderV3<Location, Location.Builder, LocationOrBuilder> getLocationFieldBuilder() {
/* 43293 */         if (this.locationBuilder_ == null) {
/* 43294 */           this
/*       */ 
/*       */ 
/*       */ 
/*       */             
/* 43299 */             .locationBuilder_ = new RepeatedFieldBuilderV3<>(this.location_, ((this.bitField0_ & 0x1) != 0), getParentForChildren(), isClean());
/* 43300 */           this.location_ = null;
/*       */         } 
/* 43302 */         return this.locationBuilder_;
/*       */       }
/*       */ 
/*       */       
/*       */       public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
/* 43307 */         return super.setUnknownFields(unknownFields);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
/* 43313 */         return super.mergeUnknownFields(unknownFields);
/*       */       }
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 43323 */     private static final SourceCodeInfo DEFAULT_INSTANCE = new SourceCodeInfo();
/*       */ 
/*       */     
/*       */     public static SourceCodeInfo getDefaultInstance() {
/* 43327 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */     
/*       */     @Deprecated
/* 43331 */     public static final Parser<SourceCodeInfo> PARSER = new AbstractParser<SourceCodeInfo>()
/*       */       {
/*       */ 
/*       */         
/*       */         public SourceCodeInfo parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException
/*       */         {
/* 43337 */           return new SourceCodeInfo(input, extensionRegistry);
/*       */         }
/*       */       };
/*       */     
/*       */     public static Parser<SourceCodeInfo> parser() {
/* 43342 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public Parser<SourceCodeInfo> getParserForType() {
/* 43347 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public SourceCodeInfo getDefaultInstanceForType() {
/* 43352 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */ 
/*       */     
/*       */     public static interface LocationOrBuilder
/*       */       extends MessageOrBuilder
/*       */     {
/*       */       List<Integer> getPathList();
/*       */ 
/*       */       
/*       */       int getPathCount();
/*       */ 
/*       */       
/*       */       int getPath(int param2Int);
/*       */ 
/*       */       
/*       */       List<Integer> getSpanList();
/*       */ 
/*       */       
/*       */       int getSpanCount();
/*       */ 
/*       */       
/*       */       int getSpan(int param2Int);
/*       */ 
/*       */       
/*       */       boolean hasLeadingComments();
/*       */ 
/*       */       
/*       */       String getLeadingComments();
/*       */ 
/*       */       
/*       */       ByteString getLeadingCommentsBytes();
/*       */       
/*       */       boolean hasTrailingComments();
/*       */       
/*       */       String getTrailingComments();
/*       */       
/*       */       ByteString getTrailingCommentsBytes();
/*       */       
/*       */       List<String> getLeadingDetachedCommentsList();
/*       */       
/*       */       int getLeadingDetachedCommentsCount();
/*       */       
/*       */       String getLeadingDetachedComments(int param2Int);
/*       */       
/*       */       ByteString getLeadingDetachedCommentsBytes(int param2Int);
/*       */     }
/*       */   }
/*       */   
/*       */   public static interface GeneratedCodeInfoOrBuilder
/*       */     extends MessageOrBuilder
/*       */   {
/*       */     List<GeneratedCodeInfo.Annotation> getAnnotationList();
/*       */     
/*       */     GeneratedCodeInfo.Annotation getAnnotation(int param1Int);
/*       */     
/*       */     int getAnnotationCount();
/*       */     
/*       */     List<? extends GeneratedCodeInfo.AnnotationOrBuilder> getAnnotationOrBuilderList();
/*       */     
/*       */     GeneratedCodeInfo.AnnotationOrBuilder getAnnotationOrBuilder(int param1Int);
/*       */   }
/*       */   
/*       */   public static final class GeneratedCodeInfo
/*       */     extends GeneratedMessageV3
/*       */     implements GeneratedCodeInfoOrBuilder
/*       */   {
/*       */     private static final long serialVersionUID = 0L;
/*       */     public static final int ANNOTATION_FIELD_NUMBER = 1;
/*       */     private List<Annotation> annotation_;
/*       */     private byte memoizedIsInitialized;
/*       */     
/*       */     private GeneratedCodeInfo(GeneratedMessageV3.Builder<?> builder)
/*       */     {
/* 43426 */       super(builder);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/* 44771 */       this.memoizedIsInitialized = -1; } private GeneratedCodeInfo() { this.memoizedIsInitialized = -1; this.annotation_ = Collections.emptyList(); } protected Object newInstance(UnusedPrivateParameter unused) { return new GeneratedCodeInfo(); } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private GeneratedCodeInfo(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this(); if (extensionRegistry == null) throw new NullPointerException();  int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { int tag = input.readTag(); switch (tag) { case 0: done = true; continue;case 10: if ((mutable_bitField0_ & 0x1) == 0) { this.annotation_ = new ArrayList<>(); mutable_bitField0_ |= 0x1; }  this.annotation_.add(input.readMessage(Annotation.PARSER, extensionRegistry)); continue; }  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this); } finally { if ((mutable_bitField0_ & 0x1) != 0) this.annotation_ = Collections.unmodifiableList(this.annotation_);  this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return DescriptorProtos.internal_static_google_protobuf_GeneratedCodeInfo_descriptor; } protected FieldAccessorTable internalGetFieldAccessorTable() { return DescriptorProtos.internal_static_google_protobuf_GeneratedCodeInfo_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)GeneratedCodeInfo.class, (Class)Builder.class); } public static final class Annotation extends GeneratedMessageV3 implements AnnotationOrBuilder {
/*       */       private static final long serialVersionUID = 0L; private int bitField0_; public static final int PATH_FIELD_NUMBER = 1; private Internal.IntList path_; private int pathMemoizedSerializedSize; public static final int SOURCE_FILE_FIELD_NUMBER = 2; private volatile Object sourceFile_; public static final int BEGIN_FIELD_NUMBER = 3; private int begin_; public static final int END_FIELD_NUMBER = 4; private int end_; private byte memoizedIsInitialized; private Annotation(GeneratedMessageV3.Builder<?> builder) { super(builder); this.pathMemoizedSerializedSize = -1; this.memoizedIsInitialized = -1; } private Annotation() { this.pathMemoizedSerializedSize = -1; this.memoizedIsInitialized = -1; this.path_ = emptyIntList(); this.sourceFile_ = ""; } protected Object newInstance(UnusedPrivateParameter unused) { return new Annotation(); } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private Annotation(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this(); if (extensionRegistry == null) throw new NullPointerException();  int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { int length; ByteString bs; int limit, tag = input.readTag(); switch (tag) { case 0: done = true; continue;case 8: if ((mutable_bitField0_ & 0x1) == 0) { this.path_ = newIntList(); mutable_bitField0_ |= 0x1; }  this.path_.addInt(input.readInt32()); continue;case 10: length = input.readRawVarint32(); limit = input.pushLimit(length); if ((mutable_bitField0_ & 0x1) == 0 && input.getBytesUntilLimit() > 0) { this.path_ = newIntList(); mutable_bitField0_ |= 0x1; }  while (input.getBytesUntilLimit() > 0) this.path_.addInt(input.readInt32());  input.popLimit(limit); continue;case 18: bs = input.readBytes(); this.bitField0_ |= 0x1; this.sourceFile_ = bs; continue;case 24: this.bitField0_ |= 0x2; this.begin_ = input.readInt32(); continue;case 32: this.bitField0_ |= 0x4; this.end_ = input.readInt32(); continue; }  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this); } finally { if ((mutable_bitField0_ & 0x1) != 0) this.path_.makeImmutable();  this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return DescriptorProtos.internal_static_google_protobuf_GeneratedCodeInfo_Annotation_descriptor; } protected FieldAccessorTable internalGetFieldAccessorTable() { return DescriptorProtos.internal_static_google_protobuf_GeneratedCodeInfo_Annotation_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)Annotation.class, (Class)Builder.class); } public List<Integer> getPathList() { return this.path_; } public int getPathCount() { return this.path_.size(); } public int getPath(int index) { return this.path_.getInt(index); } public boolean hasSourceFile() { return ((this.bitField0_ & 0x1) != 0); } public String getSourceFile() { Object ref = this.sourceFile_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.sourceFile_ = s;  return s; } public ByteString getSourceFileBytes() { Object ref = this.sourceFile_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.sourceFile_ = b; return b; }  return (ByteString)ref; } public boolean hasBegin() { return ((this.bitField0_ & 0x2) != 0); } public int getBegin() { return this.begin_; } public boolean hasEnd() { return ((this.bitField0_ & 0x4) != 0); } public int getEnd() { return this.end_; } public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized; if (isInitialized == 1) return true;  if (isInitialized == 0) return false;  this.memoizedIsInitialized = 1; return true; } public void writeTo(CodedOutputStream output) throws IOException { getSerializedSize(); if (getPathList().size() > 0) { output.writeUInt32NoTag(10); output.writeUInt32NoTag(this.pathMemoizedSerializedSize); }  for (int i = 0; i < this.path_.size(); i++) output.writeInt32NoTag(this.path_.getInt(i));  if ((this.bitField0_ & 0x1) != 0) GeneratedMessageV3.writeString(output, 2, this.sourceFile_);  if ((this.bitField0_ & 0x2) != 0) output.writeInt32(3, this.begin_);  if ((this.bitField0_ & 0x4) != 0) output.writeInt32(4, this.end_);  this.unknownFields.writeTo(output); } public int getSerializedSize() { int size = this.memoizedSize; if (size != -1) return size;  size = 0; int dataSize = 0; for (int i = 0; i < this.path_.size(); i++) dataSize += CodedOutputStream.computeInt32SizeNoTag(this.path_.getInt(i));  size += dataSize; if (!getPathList().isEmpty()) { size++; size += CodedOutputStream.computeInt32SizeNoTag(dataSize); }  this.pathMemoizedSerializedSize = dataSize; if ((this.bitField0_ & 0x1) != 0) size += GeneratedMessageV3.computeStringSize(2, this.sourceFile_);  if ((this.bitField0_ & 0x2) != 0) size += CodedOutputStream.computeInt32Size(3, this.begin_);  if ((this.bitField0_ & 0x4) != 0) size += CodedOutputStream.computeInt32Size(4, this.end_);  size += this.unknownFields.getSerializedSize(); this.memoizedSize = size; return size; } public boolean equals(Object obj) { if (obj == this) return true;  if (!(obj instanceof Annotation)) return super.equals(obj);  Annotation other = (Annotation)obj; if (!getPathList().equals(other.getPathList())) return false;  if (hasSourceFile() != other.hasSourceFile()) return false;  if (hasSourceFile() && !getSourceFile().equals(other.getSourceFile())) return false;  if (hasBegin() != other.hasBegin()) return false;  if (hasBegin() && getBegin() != other.getBegin()) return false;  if (hasEnd() != other.hasEnd()) return false;  if (hasEnd() && getEnd() != other.getEnd()) return false;  if (!this.unknownFields.equals(other.unknownFields)) return false;  return true; } public int hashCode() { if (this.memoizedHashCode != 0) return this.memoizedHashCode;  int hash = 41; hash = 19 * hash + getDescriptor().hashCode(); if (getPathCount() > 0) { hash = 37 * hash + 1; hash = 53 * hash + getPathList().hashCode(); }  if (hasSourceFile()) { hash = 37 * hash + 2; hash = 53 * hash + getSourceFile().hashCode(); }  if (hasBegin()) { hash = 37 * hash + 3; hash = 53 * hash + getBegin(); }  if (hasEnd()) { hash = 37 * hash + 4; hash = 53 * hash + getEnd(); }  hash = 29 * hash + this.unknownFields.hashCode(); this.memoizedHashCode = hash; return hash; } public static Annotation parseFrom(ByteBuffer data) throws InvalidProtocolBufferException { return PARSER.parseFrom(data); } public static Annotation parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return PARSER.parseFrom(data, extensionRegistry); } public static Annotation parseFrom(ByteString data) throws InvalidProtocolBufferException { return PARSER.parseFrom(data); } public static Annotation parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return PARSER.parseFrom(data, extensionRegistry); } public static Annotation parseFrom(byte[] data) throws InvalidProtocolBufferException { return PARSER.parseFrom(data); } public static Annotation parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return PARSER.parseFrom(data, extensionRegistry); } public static Annotation parseFrom(InputStream input) throws IOException { return GeneratedMessageV3.<Annotation>parseWithIOException(PARSER, input); } public static Annotation parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { return GeneratedMessageV3.<Annotation>parseWithIOException(PARSER, input, extensionRegistry); } public static Annotation parseDelimitedFrom(InputStream input) throws IOException { return GeneratedMessageV3.<Annotation>parseDelimitedWithIOException(PARSER, input); } public static Annotation parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { return GeneratedMessageV3.<Annotation>parseDelimitedWithIOException(PARSER, input, extensionRegistry); } public static Annotation parseFrom(CodedInputStream input) throws IOException { return GeneratedMessageV3.<Annotation>parseWithIOException(PARSER, input); } public static Annotation parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { return GeneratedMessageV3.<Annotation>parseWithIOException(PARSER, input, extensionRegistry); } public Builder newBuilderForType() { return newBuilder(); } public static Builder newBuilder() { return DEFAULT_INSTANCE.toBuilder(); } public static Builder newBuilder(Annotation prototype) { return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype); } public Builder toBuilder() { return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder()).mergeFrom(this); } protected Builder newBuilderForType(BuilderParent parent) { Builder builder = new Builder(parent); return builder; } public static final class Builder extends GeneratedMessageV3.Builder<Builder> implements AnnotationOrBuilder {
/*       */         private int bitField0_; private Internal.IntList path_; private Object sourceFile_; private int begin_; private int end_; public static final Descriptors.Descriptor getDescriptor() { return DescriptorProtos.internal_static_google_protobuf_GeneratedCodeInfo_Annotation_descriptor; } protected FieldAccessorTable internalGetFieldAccessorTable() { return DescriptorProtos.internal_static_google_protobuf_GeneratedCodeInfo_Annotation_fieldAccessorTable.ensureFieldAccessorsInitialized((Class) Annotation.class, (Class)Builder.class); } private Builder() { this.path_ = GeneratedMessageV3.emptyIntList(); this.sourceFile_ = ""; maybeForceBuilderInitialization(); } private Builder(BuilderParent parent) { super(parent); this.path_ = GeneratedMessageV3.emptyIntList(); this.sourceFile_ = ""; maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (GeneratedMessageV3.alwaysUseFieldBuilders); } public Builder clear() { super.clear(); this.path_ = GeneratedMessageV3.emptyIntList(); this.bitField0_ &= 0xFFFFFFFE; this.sourceFile_ = ""; this.bitField0_ &= 0xFFFFFFFD; this.begin_ = 0; this.bitField0_ &= 0xFFFFFFFB; this.end_ = 0; this.bitField0_ &= 0xFFFFFFF7; return this; } public Descriptors.Descriptor getDescriptorForType() { return DescriptorProtos.internal_static_google_protobuf_GeneratedCodeInfo_Annotation_descriptor; } public Annotation getDefaultInstanceForType() { return Annotation.getDefaultInstance(); } public Annotation build() { Annotation result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public Annotation buildPartial() { Annotation result = new Annotation(this); int from_bitField0_ = this.bitField0_; int to_bitField0_ = 0; if ((this.bitField0_ & 0x1) != 0) { this.path_.makeImmutable(); this.bitField0_ &= 0xFFFFFFFE; }  result.path_ = this.path_; if ((from_bitField0_ & 0x2) != 0) to_bitField0_ |= 0x1;  result.sourceFile_ = this.sourceFile_; if ((from_bitField0_ & 0x4) != 0) { result.begin_ = this.begin_; to_bitField0_ |= 0x2; }  if ((from_bitField0_ & 0x8) != 0) { result.end_ = this.end_; to_bitField0_ |= 0x4; }  result.bitField0_ = to_bitField0_; onBuilt(); return result; } public Builder clone() { return super.clone(); } public Builder setField(Descriptors.FieldDescriptor field, Object value) { return super.setField(field, value); } public Builder clearField(Descriptors.FieldDescriptor field) { return super.clearField(field); } public Builder clearOneof(Descriptors.OneofDescriptor oneof) { return super.clearOneof(oneof); } public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) { return super.setRepeatedField(field, index, value); } public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) { return super.addRepeatedField(field, value); } public Builder mergeFrom(Message other) { if (other instanceof Annotation) return mergeFrom((Annotation)other);  super.mergeFrom(other); return this; } public Builder mergeFrom(Annotation other) { if (other == Annotation.getDefaultInstance()) return this;  if (!other.path_.isEmpty()) { if (this.path_.isEmpty()) { this.path_ = other.path_; this.bitField0_ &= 0xFFFFFFFE; } else { ensurePathIsMutable(); this.path_.addAll(other.path_); }  onChanged(); }  if (other.hasSourceFile()) { this.bitField0_ |= 0x2; this.sourceFile_ = other.sourceFile_; onChanged(); }  if (other.hasBegin()) setBegin(other.getBegin());  if (other.hasEnd()) setEnd(other.getEnd());  mergeUnknownFields(other.unknownFields); onChanged(); return this; } public final boolean isInitialized() { return true; } public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { Annotation parsedMessage = null; try { parsedMessage = Annotation.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (Annotation)e.getUnfinishedMessage(); throw e.unwrapIOException(); } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; } private void ensurePathIsMutable() { if ((this.bitField0_ & 0x1) == 0) { this.path_ = GeneratedMessageV3.mutableCopy(this.path_); this.bitField0_ |= 0x1; }  } public List<Integer> getPathList() { return ((this.bitField0_ & 0x1) != 0) ? Collections.<Integer>unmodifiableList(this.path_) : this.path_; } public int getPathCount() { return this.path_.size(); } public int getPath(int index) { return this.path_.getInt(index); } public Builder setPath(int index, int value) { ensurePathIsMutable(); this.path_.setInt(index, value); onChanged(); return this; } public Builder addPath(int value) { ensurePathIsMutable(); this.path_.addInt(value); onChanged(); return this; } public Builder addAllPath(Iterable<? extends Integer> values) { ensurePathIsMutable(); AbstractMessageLite.Builder.addAll(values, this.path_); onChanged(); return this; } public Builder clearPath() { this.path_ = GeneratedMessageV3.emptyIntList(); this.bitField0_ &= 0xFFFFFFFE; onChanged(); return this; } public boolean hasSourceFile() { return ((this.bitField0_ & 0x2) != 0); } public String getSourceFile() { Object ref = this.sourceFile_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.sourceFile_ = s;  return s; }  return (String)ref; } public ByteString getSourceFileBytes() { Object ref = this.sourceFile_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.sourceFile_ = b; return b; }  return (ByteString)ref; } public Builder setSourceFile(String value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x2; this.sourceFile_ = value; onChanged(); return this; } public Builder clearSourceFile() { this.bitField0_ &= 0xFFFFFFFD; this.sourceFile_ = Annotation.getDefaultInstance().getSourceFile(); onChanged(); return this; } public Builder setSourceFileBytes(ByteString value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x2; this.sourceFile_ = value; onChanged(); return this; } public boolean hasBegin() { return ((this.bitField0_ & 0x4) != 0); } public int getBegin() { return this.begin_; } public Builder setBegin(int value) { this.bitField0_ |= 0x4; this.begin_ = value; onChanged(); return this; } public Builder clearBegin() { this.bitField0_ &= 0xFFFFFFFB; this.begin_ = 0; onChanged(); return this; } public boolean hasEnd() { return ((this.bitField0_ & 0x8) != 0); } public int getEnd() { return this.end_; } public Builder setEnd(int value) { this.bitField0_ |= 0x8; this.end_ = value; onChanged(); return this; } public Builder clearEnd() { this.bitField0_ &= 0xFFFFFFF7; this.end_ = 0; onChanged(); return this; } public final Builder setUnknownFields(UnknownFieldSet unknownFields) { return super.setUnknownFields(unknownFields); } public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) { return super.mergeUnknownFields(unknownFields); } } private static final Annotation DEFAULT_INSTANCE = new Annotation(); public static Annotation getDefaultInstance() { return DEFAULT_INSTANCE; } @Deprecated public static final Parser<Annotation> PARSER = new AbstractParser<Annotation>() { public Annotation parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return new Annotation(input, extensionRegistry); } }
/* 44774 */       ; public static Parser<Annotation> parser() { return PARSER; } public Parser<Annotation> getParserForType() { return PARSER; } public Annotation getDefaultInstanceForType() { return DEFAULT_INSTANCE; } } public List<Annotation> getAnnotationList() { return this.annotation_; } public List<? extends AnnotationOrBuilder> getAnnotationOrBuilderList() { return (List)this.annotation_; } public int getAnnotationCount() { return this.annotation_.size(); } public Annotation getAnnotation(int index) { return this.annotation_.get(index); } public AnnotationOrBuilder getAnnotationOrBuilder(int index) { return this.annotation_.get(index); } public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized;
/* 44775 */       if (isInitialized == 1) return true; 
/* 44776 */       if (isInitialized == 0) return false;
/*       */       
/* 44778 */       this.memoizedIsInitialized = 1;
/* 44779 */       return true; }
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/* 44785 */       for (int i = 0; i < this.annotation_.size(); i++) {
/* 44786 */         output.writeMessage(1, this.annotation_.get(i));
/*       */       }
/* 44788 */       this.unknownFields.writeTo(output);
/*       */     }
/*       */ 
/*       */     
/*       */     public int getSerializedSize() {
/* 44793 */       int size = this.memoizedSize;
/* 44794 */       if (size != -1) return size;
/*       */       
/* 44796 */       size = 0;
/* 44797 */       for (int i = 0; i < this.annotation_.size(); i++) {
/* 44798 */         size += 
/* 44799 */           CodedOutputStream.computeMessageSize(1, this.annotation_.get(i));
/*       */       }
/* 44801 */       size += this.unknownFields.getSerializedSize();
/* 44802 */       this.memoizedSize = size;
/* 44803 */       return size;
/*       */     }
/*       */ 
/*       */     
/*       */     public boolean equals(Object obj) {
/* 44808 */       if (obj == this) {
/* 44809 */         return true;
/*       */       }
/* 44811 */       if (!(obj instanceof GeneratedCodeInfo)) {
/* 44812 */         return super.equals(obj);
/*       */       }
/* 44814 */       GeneratedCodeInfo other = (GeneratedCodeInfo)obj;
/*       */ 
/*       */       
/* 44817 */       if (!getAnnotationList().equals(other.getAnnotationList())) return false; 
/* 44818 */       if (!this.unknownFields.equals(other.unknownFields)) return false; 
/* 44819 */       return true;
/*       */     }
/*       */ 
/*       */     
/*       */     public int hashCode() {
/* 44824 */       if (this.memoizedHashCode != 0) {
/* 44825 */         return this.memoizedHashCode;
/*       */       }
/* 44827 */       int hash = 41;
/* 44828 */       hash = 19 * hash + getDescriptor().hashCode();
/* 44829 */       if (getAnnotationCount() > 0) {
/* 44830 */         hash = 37 * hash + 1;
/* 44831 */         hash = 53 * hash + getAnnotationList().hashCode();
/*       */       } 
/* 44833 */       hash = 29 * hash + this.unknownFields.hashCode();
/* 44834 */       this.memoizedHashCode = hash;
/* 44835 */       return hash;
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static GeneratedCodeInfo parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
/* 44841 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static GeneratedCodeInfo parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 44847 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static GeneratedCodeInfo parseFrom(ByteString data) throws InvalidProtocolBufferException {
/* 44852 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static GeneratedCodeInfo parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 44858 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static GeneratedCodeInfo parseFrom(byte[] data) throws InvalidProtocolBufferException {
/* 44862 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static GeneratedCodeInfo parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 44868 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static GeneratedCodeInfo parseFrom(InputStream input) throws IOException {
/* 44872 */       return 
/* 44873 */         GeneratedMessageV3.<GeneratedCodeInfo>parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static GeneratedCodeInfo parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 44879 */       return 
/* 44880 */         GeneratedMessageV3.<GeneratedCodeInfo>parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static GeneratedCodeInfo parseDelimitedFrom(InputStream input) throws IOException {
/* 44884 */       return 
/* 44885 */         GeneratedMessageV3.<GeneratedCodeInfo>parseDelimitedWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static GeneratedCodeInfo parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 44891 */       return 
/* 44892 */         GeneratedMessageV3.<GeneratedCodeInfo>parseDelimitedWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static GeneratedCodeInfo parseFrom(CodedInputStream input) throws IOException {
/* 44897 */       return 
/* 44898 */         GeneratedMessageV3.<GeneratedCodeInfo>parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static GeneratedCodeInfo parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 44904 */       return 
/* 44905 */         GeneratedMessageV3.<GeneratedCodeInfo>parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public Builder newBuilderForType() {
/* 44909 */       return newBuilder();
/*       */     } public static Builder newBuilder() {
/* 44911 */       return DEFAULT_INSTANCE.toBuilder();
/*       */     }
/*       */     public static Builder newBuilder(GeneratedCodeInfo prototype) {
/* 44914 */       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
/*       */     }
/*       */     
/*       */     public Builder toBuilder() {
/* 44918 */       return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder())
/* 44919 */         .mergeFrom(this);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     protected Builder newBuilderForType(BuilderParent parent) {
/* 44925 */       Builder builder = new Builder(parent);
/* 44926 */       return builder;
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static final class Builder
/*       */       extends GeneratedMessageV3.Builder<Builder>
/*       */       implements GeneratedCodeInfoOrBuilder
/*       */     {
/*       */       private int bitField0_;
/*       */       
/*       */       private List<Annotation> annotation_;
/*       */       
/*       */       private RepeatedFieldBuilderV3<Annotation, Annotation.Builder, AnnotationOrBuilder> annotationBuilder_;
/*       */ 
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/* 44943 */         return DescriptorProtos.internal_static_google_protobuf_GeneratedCodeInfo_descriptor;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       protected FieldAccessorTable internalGetFieldAccessorTable() {
/* 44949 */         return DescriptorProtos.internal_static_google_protobuf_GeneratedCodeInfo_fieldAccessorTable
/* 44950 */           .ensureFieldAccessorsInitialized((Class) GeneratedCodeInfo.class, (Class)Builder.class);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private Builder()
/*       */       {
/* 45119 */         this
/* 45120 */           .annotation_ = Collections.emptyList(); maybeForceBuilderInitialization(); } private Builder(BuilderParent parent) { super(parent); this.annotation_ = Collections.emptyList(); maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (GeneratedMessageV3.alwaysUseFieldBuilders) getAnnotationFieldBuilder();  } public Builder clear() { super.clear(); if (this.annotationBuilder_ == null) { this.annotation_ = Collections.emptyList(); this.bitField0_ &= 0xFFFFFFFE; } else { this.annotationBuilder_.clear(); }  return this; } public Descriptors.Descriptor getDescriptorForType() { return DescriptorProtos.internal_static_google_protobuf_GeneratedCodeInfo_descriptor; } public GeneratedCodeInfo getDefaultInstanceForType() { return GeneratedCodeInfo.getDefaultInstance(); } public GeneratedCodeInfo build() { GeneratedCodeInfo result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public GeneratedCodeInfo buildPartial() { GeneratedCodeInfo result = new GeneratedCodeInfo(this); int from_bitField0_ = this.bitField0_; if (this.annotationBuilder_ == null) { if ((this.bitField0_ & 0x1) != 0) { this.annotation_ = Collections.unmodifiableList(this.annotation_); this.bitField0_ &= 0xFFFFFFFE; }  result.annotation_ = this.annotation_; } else { result.annotation_ = this.annotationBuilder_.build(); }  onBuilt(); return result; } public Builder clone() { return super.clone(); } public Builder setField(Descriptors.FieldDescriptor field, Object value) { return super.setField(field, value); } public Builder clearField(Descriptors.FieldDescriptor field) { return super.clearField(field); } public Builder clearOneof(Descriptors.OneofDescriptor oneof) { return super.clearOneof(oneof); } public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) { return super.setRepeatedField(field, index, value); } public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) { return super.addRepeatedField(field, value); } public Builder mergeFrom(Message other) { if (other instanceof GeneratedCodeInfo) return mergeFrom((GeneratedCodeInfo)other);  super.mergeFrom(other); return this; } public Builder mergeFrom(GeneratedCodeInfo other) { if (other == GeneratedCodeInfo.getDefaultInstance()) return this;  if (this.annotationBuilder_ == null) { if (!other.annotation_.isEmpty()) { if (this.annotation_.isEmpty()) { this.annotation_ = other.annotation_; this.bitField0_ &= 0xFFFFFFFE; } else { ensureAnnotationIsMutable(); this.annotation_.addAll(other.annotation_); }  onChanged(); }  } else if (!other.annotation_.isEmpty()) { if (this.annotationBuilder_.isEmpty()) { this.annotationBuilder_.dispose(); this.annotationBuilder_ = null; this.annotation_ = other.annotation_; this.bitField0_ &= 0xFFFFFFFE; this.annotationBuilder_ = GeneratedMessageV3.alwaysUseFieldBuilders ? getAnnotationFieldBuilder() : null; } else { this.annotationBuilder_.addAllMessages(other.annotation_); }  }  mergeUnknownFields(other.unknownFields); onChanged(); return this; } public final boolean isInitialized() { return true; }
/*       */       public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { GeneratedCodeInfo parsedMessage = null; try { parsedMessage = GeneratedCodeInfo.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (GeneratedCodeInfo)e.getUnfinishedMessage(); throw e.unwrapIOException(); } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; }
/* 45122 */       private void ensureAnnotationIsMutable() { if ((this.bitField0_ & 0x1) == 0) {
/* 45123 */           this.annotation_ = new ArrayList<>(this.annotation_);
/* 45124 */           this.bitField0_ |= 0x1;
/*       */         }  }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public List<Annotation> getAnnotationList() {
/* 45140 */         if (this.annotationBuilder_ == null) {
/* 45141 */           return Collections.unmodifiableList(this.annotation_);
/*       */         }
/* 45143 */         return this.annotationBuilder_.getMessageList();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getAnnotationCount() {
/* 45155 */         if (this.annotationBuilder_ == null) {
/* 45156 */           return this.annotation_.size();
/*       */         }
/* 45158 */         return this.annotationBuilder_.getCount();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Annotation getAnnotation(int index) {
/* 45170 */         if (this.annotationBuilder_ == null) {
/* 45171 */           return this.annotation_.get(index);
/*       */         }
/* 45173 */         return this.annotationBuilder_.getMessage(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setAnnotation(int index, Annotation value) {
/* 45186 */         if (this.annotationBuilder_ == null) {
/* 45187 */           if (value == null) {
/* 45188 */             throw new NullPointerException();
/*       */           }
/* 45190 */           ensureAnnotationIsMutable();
/* 45191 */           this.annotation_.set(index, value);
/* 45192 */           onChanged();
/*       */         } else {
/* 45194 */           this.annotationBuilder_.setMessage(index, value);
/*       */         } 
/* 45196 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setAnnotation(int index, Annotation.Builder builderForValue) {
/* 45208 */         if (this.annotationBuilder_ == null) {
/* 45209 */           ensureAnnotationIsMutable();
/* 45210 */           this.annotation_.set(index, builderForValue.build());
/* 45211 */           onChanged();
/*       */         } else {
/* 45213 */           this.annotationBuilder_.setMessage(index, builderForValue.build());
/*       */         } 
/* 45215 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addAnnotation(Annotation value) {
/* 45226 */         if (this.annotationBuilder_ == null) {
/* 45227 */           if (value == null) {
/* 45228 */             throw new NullPointerException();
/*       */           }
/* 45230 */           ensureAnnotationIsMutable();
/* 45231 */           this.annotation_.add(value);
/* 45232 */           onChanged();
/*       */         } else {
/* 45234 */           this.annotationBuilder_.addMessage(value);
/*       */         } 
/* 45236 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addAnnotation(int index, Annotation value) {
/* 45248 */         if (this.annotationBuilder_ == null) {
/* 45249 */           if (value == null) {
/* 45250 */             throw new NullPointerException();
/*       */           }
/* 45252 */           ensureAnnotationIsMutable();
/* 45253 */           this.annotation_.add(index, value);
/* 45254 */           onChanged();
/*       */         } else {
/* 45256 */           this.annotationBuilder_.addMessage(index, value);
/*       */         } 
/* 45258 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addAnnotation(Annotation.Builder builderForValue) {
/* 45270 */         if (this.annotationBuilder_ == null) {
/* 45271 */           ensureAnnotationIsMutable();
/* 45272 */           this.annotation_.add(builderForValue.build());
/* 45273 */           onChanged();
/*       */         } else {
/* 45275 */           this.annotationBuilder_.addMessage(builderForValue.build());
/*       */         } 
/* 45277 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addAnnotation(int index, Annotation.Builder builderForValue) {
/* 45289 */         if (this.annotationBuilder_ == null) {
/* 45290 */           ensureAnnotationIsMutable();
/* 45291 */           this.annotation_.add(index, builderForValue.build());
/* 45292 */           onChanged();
/*       */         } else {
/* 45294 */           this.annotationBuilder_.addMessage(index, builderForValue.build());
/*       */         } 
/* 45296 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addAllAnnotation(Iterable<? extends Annotation> values) {
/* 45308 */         if (this.annotationBuilder_ == null) {
/* 45309 */           ensureAnnotationIsMutable();
/* 45310 */           AbstractMessageLite.Builder.addAll(values, this.annotation_);
/*       */           
/* 45312 */           onChanged();
/*       */         } else {
/* 45314 */           this.annotationBuilder_.addAllMessages(values);
/*       */         } 
/* 45316 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearAnnotation() {
/* 45327 */         if (this.annotationBuilder_ == null) {
/* 45328 */           this.annotation_ = Collections.emptyList();
/* 45329 */           this.bitField0_ &= 0xFFFFFFFE;
/* 45330 */           onChanged();
/*       */         } else {
/* 45332 */           this.annotationBuilder_.clear();
/*       */         } 
/* 45334 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder removeAnnotation(int index) {
/* 45345 */         if (this.annotationBuilder_ == null) {
/* 45346 */           ensureAnnotationIsMutable();
/* 45347 */           this.annotation_.remove(index);
/* 45348 */           onChanged();
/*       */         } else {
/* 45350 */           this.annotationBuilder_.remove(index);
/*       */         } 
/* 45352 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Annotation.Builder getAnnotationBuilder(int index) {
/* 45364 */         return getAnnotationFieldBuilder().getBuilder(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public AnnotationOrBuilder getAnnotationOrBuilder(int index) {
/* 45376 */         if (this.annotationBuilder_ == null)
/* 45377 */           return this.annotation_.get(index); 
/* 45378 */         return this.annotationBuilder_.getMessageOrBuilder(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public List<? extends AnnotationOrBuilder> getAnnotationOrBuilderList() {
/* 45391 */         if (this.annotationBuilder_ != null) {
/* 45392 */           return this.annotationBuilder_.getMessageOrBuilderList();
/*       */         }
/* 45394 */         return Collections.unmodifiableList((List)this.annotation_);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Annotation.Builder addAnnotationBuilder() {
/* 45406 */         return getAnnotationFieldBuilder().addBuilder(
/* 45407 */             Annotation.getDefaultInstance());
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Annotation.Builder addAnnotationBuilder(int index) {
/* 45419 */         return getAnnotationFieldBuilder().addBuilder(index, 
/* 45420 */             Annotation.getDefaultInstance());
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public List<Annotation.Builder> getAnnotationBuilderList() {
/* 45432 */         return getAnnotationFieldBuilder().getBuilderList();
/*       */       }
/*       */ 
/*       */       
/*       */       private RepeatedFieldBuilderV3<Annotation, Annotation.Builder, AnnotationOrBuilder> getAnnotationFieldBuilder() {
/* 45437 */         if (this.annotationBuilder_ == null) {
/* 45438 */           this
/*       */ 
/*       */ 
/*       */ 
/*       */             
/* 45443 */             .annotationBuilder_ = new RepeatedFieldBuilderV3<>(this.annotation_, ((this.bitField0_ & 0x1) != 0), getParentForChildren(), isClean());
/* 45444 */           this.annotation_ = null;
/*       */         } 
/* 45446 */         return this.annotationBuilder_;
/*       */       }
/*       */ 
/*       */       
/*       */       public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
/* 45451 */         return super.setUnknownFields(unknownFields);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
/* 45457 */         return super.mergeUnknownFields(unknownFields);
/*       */       }
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 45467 */     private static final GeneratedCodeInfo DEFAULT_INSTANCE = new GeneratedCodeInfo();
/*       */ 
/*       */     
/*       */     public static GeneratedCodeInfo getDefaultInstance() {
/* 45471 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */     
/*       */     @Deprecated
/* 45475 */     public static final Parser<GeneratedCodeInfo> PARSER = new AbstractParser<GeneratedCodeInfo>()
/*       */       {
/*       */ 
/*       */         
/*       */         public GeneratedCodeInfo parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException
/*       */         {
/* 45481 */           return new GeneratedCodeInfo(input, extensionRegistry);
/*       */         }
/*       */       };
/*       */     
/*       */     public static Parser<GeneratedCodeInfo> parser() {
/* 45486 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public Parser<GeneratedCodeInfo> getParserForType() {
/* 45491 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public GeneratedCodeInfo getDefaultInstanceForType() {
/* 45496 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static interface AnnotationOrBuilder
/*       */       extends MessageOrBuilder
/*       */     {
/*       */       List<Integer> getPathList();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       int getPathCount();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       int getPath(int param2Int);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       boolean hasSourceFile();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       String getSourceFile();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       ByteString getSourceFileBytes();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       boolean hasBegin();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       int getBegin();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       boolean hasEnd();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       int getEnd();
/*       */     }
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public static Descriptors.FileDescriptor getDescriptor() {
/* 45639 */     return descriptor;
/*       */   }
/*       */ 
/*       */   
/*       */   static {
/* 45644 */     String[] descriptorData = { "\n google/protobuf/descriptor.proto\022\017google.protobuf\"G\n\021FileDescriptorSet\0222\n\004file\030\001 \003(\0132$.google.protobuf.FileDescriptorProto\"Û\003\n\023FileDescriptorProto\022\f\n\004name\030\001 \001(\t\022\017\n\007package\030\002 \001(\t\022\022\n\ndependency\030\003 \003(\t\022\031\n\021public_dependency\030\n \003(\005\022\027\n\017weak_dependency\030\013 \003(\005\0226\n\fmessage_type\030\004 \003(\0132 .google.protobuf.DescriptorProto\0227\n\tenum_type\030\005 \003(\0132$.google.protobuf.EnumDescriptorProto\0228\n\007service\030\006 \003(\0132'.google.protobuf.ServiceDescriptorProto\0228\n\textension\030\007 \003(\0132%.google.protobuf.FieldDescriptorProto\022-\n\007options\030\b \001(\0132\034.google.protobuf.FileOptions\0229\n\020source_code_info\030\t \001(\0132\037.google.protobuf.SourceCodeInfo\022\016\n\006syntax\030\f \001(\t\"©\005\n\017DescriptorProto\022\f\n\004name\030\001 \001(\t\0224\n\005field\030\002 \003(\0132%.google.protobuf.FieldDescriptorProto\0228\n\textension\030\006 \003(\0132%.google.protobuf.FieldDescriptorProto\0225\n\013nested_type\030\003 \003(\0132 .google.protobuf.DescriptorProto\0227\n\tenum_type\030\004 \003(\0132$.google.protobuf.EnumDescriptorProto\022H\n\017extension_range\030\005 \003(\0132/.google.protobuf.DescriptorProto.ExtensionRange\0229\n\noneof_decl\030\b \003(\0132%.google.protobuf.OneofDescriptorProto\0220\n\007options\030\007 \001(\0132\037.google.protobuf.MessageOptions\022F\n\016reserved_range\030\t \003(\0132..google.protobuf.DescriptorProto.ReservedRange\022\025\n\rreserved_name\030\n \003(\t\032e\n\016ExtensionRange\022\r\n\005start\030\001 \001(\005\022\013\n\003end\030\002 \001(\005\0227\n\007options\030\003 \001(\0132&.google.protobuf.ExtensionRangeOptions\032+\n\rReservedRange\022\r\n\005start\030\001 \001(\005\022\013\n\003end\030\002 \001(\005\"g\n\025ExtensionRangeOptions\022C\n\024uninterpreted_option\030ç\007 \003(\0132$.google.protobuf.UninterpretedOption*\t\bè\007\020\002\"Õ\005\n\024FieldDescriptorProto\022\f\n\004name\030\001 \001(\t\022\016\n\006number\030\003 \001(\005\022:\n\005label\030\004 \001(\0162+.google.protobuf.FieldDescriptorProto.Label\0228\n\004type\030\005 \001(\0162*.google.protobuf.FieldDescriptorProto.Type\022\021\n\ttype_name\030\006 \001(\t\022\020\n\bextendee\030\002 \001(\t\022\025\n\rdefault_value\030\007 \001(\t\022\023\n\013oneof_index\030\t \001(\005\022\021\n\tjson_name\030\n \001(\t\022.\n\007options\030\b \001(\0132\035.google.protobuf.FieldOptions\022\027\n\017proto3_optional\030\021 \001(\b\"¶\002\n\004Type\022\017\n\013TYPE_DOUBLE\020\001\022\016\n\nTYPE_FLOAT\020\002\022\016\n\nTYPE_INT64\020\003\022\017\n\013TYPE_UINT64\020\004\022\016\n\nTYPE_INT32\020\005\022\020\n\fTYPE_FIXED64\020\006\022\020\n\fTYPE_FIXED32\020\007\022\r\n\tTYPE_BOOL\020\b\022\017\n\013TYPE_STRING\020\t\022\016\n\nTYPE_GROUP\020\n\022\020\n\fTYPE_MESSAGE\020\013\022\016\n\nTYPE_BYTES\020\f\022\017\n\013TYPE_UINT32\020\r\022\r\n\tTYPE_ENUM\020\016\022\021\n\rTYPE_SFIXED32\020\017\022\021\n\rTYPE_SFIXED64\020\020\022\017\n\013TYPE_SINT32\020\021\022\017\n\013TYPE_SINT64\020\022\"C\n\005Label\022\022\n\016LABEL_OPTIONAL\020\001\022\022\n\016LABEL_REQUIRED\020\002\022\022\n\016LABEL_REPEATED\020\003\"T\n\024OneofDescriptorProto\022\f\n\004name\030\001 \001(\t\022.\n\007options\030\002 \001(\0132\035.google.protobuf.OneofOptions\"¤\002\n\023EnumDescriptorProto\022\f\n\004name\030\001 \001(\t\0228\n\005value\030\002 \003(\0132).google.protobuf.EnumValueDescriptorProto\022-\n\007options\030\003 \001(\0132\034.google.protobuf.EnumOptions\022N\n\016reserved_range\030\004 \003(\01326.google.protobuf.EnumDescriptorProto.EnumReservedRange\022\025\n\rreserved_name\030\005 \003(\t\032/\n\021EnumReservedRange\022\r\n\005start\030\001 \001(\005\022\013\n\003end\030\002 \001(\005\"l\n\030EnumValueDescriptorProto\022\f\n\004name\030\001 \001(\t\022\016\n\006number\030\002 \001(\005\0222\n\007options\030\003 \001(\0132!.google.protobuf.EnumValueOptions\"\001\n\026ServiceDescriptorProto\022\f\n\004name\030\001 \001(\t\0226\n\006method\030\002 \003(\0132&.google.protobuf.MethodDescriptorProto\0220\n\007options\030\003 \001(\0132\037.google.protobuf.ServiceOptions\"Á\001\n\025MethodDescriptorProto\022\f\n\004name\030\001 \001(\t\022\022\n\ninput_type\030\002 \001(\t\022\023\n\013output_type\030\003 \001(\t\022/\n\007options\030\004 \001(\0132\036.google.protobuf.MethodOptions\022\037\n\020client_streaming\030\005 \001(\b:\005false\022\037\n\020server_streaming\030\006 \001(\b:\005false\"¥\006\n\013FileOptions\022\024\n\fjava_package\030\001 \001(\t\022\034\n\024java_outer_classname\030\b \001(\t\022\"\n\023java_multiple_files\030\n \001(\b:\005false\022)\n\035java_generate_equals_and_hash\030\024 \001(\bB\002\030\001\022%\n\026java_string_check_utf8\030\033 \001(\b:\005false\022F\n\foptimize_for\030\t \001(\0162).google.protobuf.FileOptions.OptimizeMode:\005SPEED\022\022\n\ngo_package\030\013 \001(\t\022\"\n\023cc_generic_services\030\020 \001(\b:\005false\022$\n\025java_generic_services\030\021 \001(\b:\005false\022\"\n\023py_generic_services\030\022 \001(\b:\005false\022#\n\024php_generic_services\030* \001(\b:\005false\022\031\n\ndeprecated\030\027 \001(\b:\005false\022\036\n\020cc_enable_arenas\030\037 \001(\b:\004true\022\031\n\021objc_class_prefix\030$ \001(\t\022\030\n\020csharp_namespace\030% \001(\t\022\024\n\fswift_prefix\030' \001(\t\022\030\n\020php_class_prefix\030( \001(\t\022\025\n\rphp_namespace\030) \001(\t\022\036\n\026php_metadata_namespace\030, \001(\t\022\024\n\fruby_package\030- \001(\t\022C\n\024uninterpreted_option\030ç\007 \003(\0132$.google.protobuf.UninterpretedOption\":\n\fOptimizeMode\022\t\n\005SPEED\020\001\022\r\n\tCODE_SIZE\020\002\022\020\n\fLITE_RUNTIME\020\003*\t\bè\007\020\002J\004\b&\020'\"ò\001\n\016MessageOptions\022&\n\027message_set_wire_format\030\001 \001(\b:\005false\022.\n\037no_standard_descriptor_accessor\030\002 \001(\b:\005false\022\031\n\ndeprecated\030\003 \001(\b:\005false\022\021\n\tmap_entry\030\007 \001(\b\022C\n\024uninterpreted_option\030ç\007 \003(\0132$.google.protobuf.UninterpretedOption*\t\bè\007\020\002J\004\b\b\020\tJ\004\b\t\020\n\"\003\n\fFieldOptions\022:\n\005ctype\030\001 \001(\0162#.google.protobuf.FieldOptions.CType:\006STRING\022\016\n\006packed\030\002 \001(\b\022?\n\006jstype\030\006 \001(\0162$.google.protobuf.FieldOptions.JSType:\tJS_NORMAL\022\023\n\004lazy\030\005 \001(\b:\005false\022\031\n\ndeprecated\030\003 \001(\b:\005false\022\023\n\004weak\030\n \001(\b:\005false\022C\n\024uninterpreted_option\030ç\007 \003(\0132$.google.protobuf.UninterpretedOption\"/\n\005CType\022\n\n\006STRING\020\000\022\b\n\004CORD\020\001\022\020\n\fSTRING_PIECE\020\002\"5\n\006JSType\022\r\n\tJS_NORMAL\020\000\022\r\n\tJS_STRING\020\001\022\r\n\tJS_NUMBER\020\002*\t\bè\007\020\002J\004\b\004\020\005\"^\n\fOneofOptions\022C\n\024uninterpreted_option\030ç\007 \003(\0132$.google.protobuf.UninterpretedOption*\t\bè\007\020\002\"\001\n\013EnumOptions\022\023\n\013allow_alias\030\002 \001(\b\022\031\n\ndeprecated\030\003 \001(\b:\005false\022C\n\024uninterpreted_option\030ç\007 \003(\0132$.google.protobuf.UninterpretedOption*\t\bè\007\020\002J\004\b\005\020\006\"}\n\020EnumValueOptions\022\031\n\ndeprecated\030\001 \001(\b:\005false\022C\n\024uninterpreted_option\030ç\007 \003(\0132$.google.protobuf.UninterpretedOption*\t\bè\007\020\002\"{\n\016ServiceOptions\022\031\n\ndeprecated\030! \001(\b:\005false\022C\n\024uninterpreted_option\030ç\007 \003(\0132$.google.protobuf.UninterpretedOption*\t\bè\007\020\002\"­\002\n\rMethodOptions\022\031\n\ndeprecated\030! \001(\b:\005false\022_\n\021idempotency_level\030\" \001(\0162/.google.protobuf.MethodOptions.IdempotencyLevel:\023IDEMPOTENCY_UNKNOWN\022C\n\024uninterpreted_option\030ç\007 \003(\0132$.google.protobuf.UninterpretedOption\"P\n\020IdempotencyLevel\022\027\n\023IDEMPOTENCY_UNKNOWN\020\000\022\023\n\017NO_SIDE_EFFECTS\020\001\022\016\n\nIDEMPOTENT\020\002*\t\bè\007\020\002\"\002\n\023UninterpretedOption\022;\n\004name\030\002 \003(\0132-.google.protobuf.UninterpretedOption.NamePart\022\030\n\020identifier_value\030\003 \001(\t\022\032\n\022positive_int_value\030\004 \001(\004\022\032\n\022negative_int_value\030\005 \001(\003\022\024\n\fdouble_value\030\006 \001(\001\022\024\n\fstring_value\030\007 \001(\f\022\027\n\017aggregate_value\030\b \001(\t\0323\n\bNamePart\022\021\n\tname_part\030\001 \002(\t\022\024\n\fis_extension\030\002 \002(\b\"Õ\001\n\016SourceCodeInfo\022:\n\blocation\030\001 \003(\0132(.google.protobuf.SourceCodeInfo.Location\032\001\n\bLocation\022\020\n\004path\030\001 \003(\005B\002\020\001\022\020\n\004span\030\002 \003(\005B\002\020\001\022\030\n\020leading_comments\030\003 \001(\t\022\031\n\021trailing_comments\030\004 \001(\t\022!\n\031leading_detached_comments\030\006 \003(\t\"§\001\n\021GeneratedCodeInfo\022A\n\nannotation\030\001 \003(\0132-.google.protobuf.GeneratedCodeInfo.Annotation\032O\n\nAnnotation\022\020\n\004path\030\001 \003(\005B\002\020\001\022\023\n\013source_file\030\002 \001(\t\022\r\n\005begin\030\003 \001(\005\022\013\n\003end\030\004 \001(\005B~\n\023com.google.protobufB\020DescriptorProtosH\001Z-google.golang.org/protobuf/types/descriptorpbø\001\001¢\002\003GPBª\002\032Google.Protobuf.Reflection" };
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 45798 */     descriptor = Descriptors.FileDescriptor.internalBuildGeneratedFileFrom(descriptorData, new Descriptors.FileDescriptor[0]);
/*       */ 
/*       */ 
/*       */     
/* 45802 */     internal_static_google_protobuf_FileDescriptorSet_descriptor = getDescriptor().getMessageTypes().get(0);
/* 45803 */     internal_static_google_protobuf_FileDescriptorSet_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_google_protobuf_FileDescriptorSet_descriptor, new String[] { "File" });
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 45808 */     internal_static_google_protobuf_FileDescriptorProto_descriptor = getDescriptor().getMessageTypes().get(1);
/* 45809 */     internal_static_google_protobuf_FileDescriptorProto_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_google_protobuf_FileDescriptorProto_descriptor, new String[] { "Name", "Package", "Dependency", "PublicDependency", "WeakDependency", "MessageType", "EnumType", "Service", "Extension", "Options", "SourceCodeInfo", "Syntax" });
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 45814 */     internal_static_google_protobuf_DescriptorProto_descriptor = getDescriptor().getMessageTypes().get(2);
/* 45815 */     internal_static_google_protobuf_DescriptorProto_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_google_protobuf_DescriptorProto_descriptor, new String[] { "Name", "Field", "Extension", "NestedType", "EnumType", "ExtensionRange", "OneofDecl", "Options", "ReservedRange", "ReservedName" });
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 45820 */     internal_static_google_protobuf_DescriptorProto_ExtensionRange_descriptor = internal_static_google_protobuf_DescriptorProto_descriptor.getNestedTypes().get(0);
/* 45821 */     internal_static_google_protobuf_DescriptorProto_ExtensionRange_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_google_protobuf_DescriptorProto_ExtensionRange_descriptor, new String[] { "Start", "End", "Options" });
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 45826 */     internal_static_google_protobuf_DescriptorProto_ReservedRange_descriptor = internal_static_google_protobuf_DescriptorProto_descriptor.getNestedTypes().get(1);
/* 45827 */     internal_static_google_protobuf_DescriptorProto_ReservedRange_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_google_protobuf_DescriptorProto_ReservedRange_descriptor, new String[] { "Start", "End" });
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 45832 */     internal_static_google_protobuf_ExtensionRangeOptions_descriptor = getDescriptor().getMessageTypes().get(3);
/* 45833 */     internal_static_google_protobuf_ExtensionRangeOptions_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_google_protobuf_ExtensionRangeOptions_descriptor, new String[] { "UninterpretedOption" });
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 45838 */     internal_static_google_protobuf_FieldDescriptorProto_descriptor = getDescriptor().getMessageTypes().get(4);
/* 45839 */     internal_static_google_protobuf_FieldDescriptorProto_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_google_protobuf_FieldDescriptorProto_descriptor, new String[] { "Name", "Number", "Label", "Type", "TypeName", "Extendee", "DefaultValue", "OneofIndex", "JsonName", "Options", "Proto3Optional" });
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 45844 */     internal_static_google_protobuf_OneofDescriptorProto_descriptor = getDescriptor().getMessageTypes().get(5);
/* 45845 */     internal_static_google_protobuf_OneofDescriptorProto_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_google_protobuf_OneofDescriptorProto_descriptor, new String[] { "Name", "Options" });
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 45850 */     internal_static_google_protobuf_EnumDescriptorProto_descriptor = getDescriptor().getMessageTypes().get(6);
/* 45851 */     internal_static_google_protobuf_EnumDescriptorProto_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_google_protobuf_EnumDescriptorProto_descriptor, new String[] { "Name", "Value", "Options", "ReservedRange", "ReservedName" });
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 45856 */     internal_static_google_protobuf_EnumDescriptorProto_EnumReservedRange_descriptor = internal_static_google_protobuf_EnumDescriptorProto_descriptor.getNestedTypes().get(0);
/* 45857 */     internal_static_google_protobuf_EnumDescriptorProto_EnumReservedRange_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_google_protobuf_EnumDescriptorProto_EnumReservedRange_descriptor, new String[] { "Start", "End" });
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 45862 */     internal_static_google_protobuf_EnumValueDescriptorProto_descriptor = getDescriptor().getMessageTypes().get(7);
/* 45863 */     internal_static_google_protobuf_EnumValueDescriptorProto_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_google_protobuf_EnumValueDescriptorProto_descriptor, new String[] { "Name", "Number", "Options" });
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 45868 */     internal_static_google_protobuf_ServiceDescriptorProto_descriptor = getDescriptor().getMessageTypes().get(8);
/* 45869 */     internal_static_google_protobuf_ServiceDescriptorProto_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_google_protobuf_ServiceDescriptorProto_descriptor, new String[] { "Name", "Method", "Options" });
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 45874 */     internal_static_google_protobuf_MethodDescriptorProto_descriptor = getDescriptor().getMessageTypes().get(9);
/* 45875 */     internal_static_google_protobuf_MethodDescriptorProto_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_google_protobuf_MethodDescriptorProto_descriptor, new String[] { "Name", "InputType", "OutputType", "Options", "ClientStreaming", "ServerStreaming" });
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 45880 */     internal_static_google_protobuf_FileOptions_descriptor = getDescriptor().getMessageTypes().get(10);
/* 45881 */     internal_static_google_protobuf_FileOptions_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_google_protobuf_FileOptions_descriptor, new String[] { "JavaPackage", "JavaOuterClassname", "JavaMultipleFiles", "JavaGenerateEqualsAndHash", "JavaStringCheckUtf8", "OptimizeFor", "GoPackage", "CcGenericServices", "JavaGenericServices", "PyGenericServices", "PhpGenericServices", "Deprecated", "CcEnableArenas", "ObjcClassPrefix", "CsharpNamespace", "SwiftPrefix", "PhpClassPrefix", "PhpNamespace", "PhpMetadataNamespace", "RubyPackage", "UninterpretedOption" });
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 45886 */     internal_static_google_protobuf_MessageOptions_descriptor = getDescriptor().getMessageTypes().get(11);
/* 45887 */     internal_static_google_protobuf_MessageOptions_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_google_protobuf_MessageOptions_descriptor, new String[] { "MessageSetWireFormat", "NoStandardDescriptorAccessor", "Deprecated", "MapEntry", "UninterpretedOption" });
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 45892 */     internal_static_google_protobuf_FieldOptions_descriptor = getDescriptor().getMessageTypes().get(12);
/* 45893 */     internal_static_google_protobuf_FieldOptions_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_google_protobuf_FieldOptions_descriptor, new String[] { "Ctype", "Packed", "Jstype", "Lazy", "Deprecated", "Weak", "UninterpretedOption" });
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 45898 */     internal_static_google_protobuf_OneofOptions_descriptor = getDescriptor().getMessageTypes().get(13);
/* 45899 */     internal_static_google_protobuf_OneofOptions_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_google_protobuf_OneofOptions_descriptor, new String[] { "UninterpretedOption" });
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 45904 */     internal_static_google_protobuf_EnumOptions_descriptor = getDescriptor().getMessageTypes().get(14);
/* 45905 */     internal_static_google_protobuf_EnumOptions_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_google_protobuf_EnumOptions_descriptor, new String[] { "AllowAlias", "Deprecated", "UninterpretedOption" });
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 45910 */     internal_static_google_protobuf_EnumValueOptions_descriptor = getDescriptor().getMessageTypes().get(15);
/* 45911 */     internal_static_google_protobuf_EnumValueOptions_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_google_protobuf_EnumValueOptions_descriptor, new String[] { "Deprecated", "UninterpretedOption" });
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 45916 */     internal_static_google_protobuf_ServiceOptions_descriptor = getDescriptor().getMessageTypes().get(16);
/* 45917 */     internal_static_google_protobuf_ServiceOptions_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_google_protobuf_ServiceOptions_descriptor, new String[] { "Deprecated", "UninterpretedOption" });
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 45922 */     internal_static_google_protobuf_MethodOptions_descriptor = getDescriptor().getMessageTypes().get(17);
/* 45923 */     internal_static_google_protobuf_MethodOptions_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_google_protobuf_MethodOptions_descriptor, new String[] { "Deprecated", "IdempotencyLevel", "UninterpretedOption" });
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 45928 */     internal_static_google_protobuf_UninterpretedOption_descriptor = getDescriptor().getMessageTypes().get(18);
/* 45929 */     internal_static_google_protobuf_UninterpretedOption_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_google_protobuf_UninterpretedOption_descriptor, new String[] { "Name", "IdentifierValue", "PositiveIntValue", "NegativeIntValue", "DoubleValue", "StringValue", "AggregateValue" });
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 45934 */     internal_static_google_protobuf_UninterpretedOption_NamePart_descriptor = internal_static_google_protobuf_UninterpretedOption_descriptor.getNestedTypes().get(0);
/* 45935 */     internal_static_google_protobuf_UninterpretedOption_NamePart_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_google_protobuf_UninterpretedOption_NamePart_descriptor, new String[] { "NamePart", "IsExtension" });
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 45940 */     internal_static_google_protobuf_SourceCodeInfo_descriptor = getDescriptor().getMessageTypes().get(19);
/* 45941 */     internal_static_google_protobuf_SourceCodeInfo_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_google_protobuf_SourceCodeInfo_descriptor, new String[] { "Location" });
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 45946 */     internal_static_google_protobuf_SourceCodeInfo_Location_descriptor = internal_static_google_protobuf_SourceCodeInfo_descriptor.getNestedTypes().get(0);
/* 45947 */     internal_static_google_protobuf_SourceCodeInfo_Location_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_google_protobuf_SourceCodeInfo_Location_descriptor, new String[] { "Path", "Span", "LeadingComments", "TrailingComments", "LeadingDetachedComments" });
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 45952 */     internal_static_google_protobuf_GeneratedCodeInfo_descriptor = getDescriptor().getMessageTypes().get(20);
/* 45953 */     internal_static_google_protobuf_GeneratedCodeInfo_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_google_protobuf_GeneratedCodeInfo_descriptor, new String[] { "Annotation" });
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 45958 */     internal_static_google_protobuf_GeneratedCodeInfo_Annotation_descriptor = internal_static_google_protobuf_GeneratedCodeInfo_descriptor.getNestedTypes().get(0);
/* 45959 */     internal_static_google_protobuf_GeneratedCodeInfo_Annotation_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_google_protobuf_GeneratedCodeInfo_Annotation_descriptor, new String[] { "Path", "SourceFile", "Begin", "End" });
/*       */   } }


/* Location:              C:\User\\user\Documents\Ensurity Mobile [Client]\Latest App\traccar\tracker-server.jar!\com\google\protobuf\DescriptorProtos.class
 * Java compiler version: 7 (51.0)
 * JD-Core Version:       1.1.3
 */