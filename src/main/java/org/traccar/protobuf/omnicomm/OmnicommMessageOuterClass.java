package org.traccar.protobuf.omnicomm;

import com.google.protobuf.AbstractMessage;
import com.google.protobuf.AbstractMessageLite;
import com.google.protobuf.AbstractParser;
import com.google.protobuf.ByteString;
import com.google.protobuf.CodedInputStream;
import com.google.protobuf.CodedOutputStream;
import com.google.protobuf.Descriptors;
import com.google.protobuf.ExtensionRegistry;
import com.google.protobuf.ExtensionRegistryLite;
import com.google.protobuf.GeneratedMessageV3;
import com.google.protobuf.Internal;
import com.google.protobuf.InvalidProtocolBufferException;
import com.google.protobuf.LazyStringArrayList;
import com.google.protobuf.LazyStringList;
import com.google.protobuf.Message;
import com.google.protobuf.MessageLite;
import com.google.protobuf.MessageOrBuilder;
import com.google.protobuf.Parser;
import com.google.protobuf.ProtocolStringList;
import com.google.protobuf.SingleFieldBuilderV3;
import com.google.protobuf.UnknownFieldSet;

import java.io.IOException;
import java.io.InputStream;
import java.nio.ByteBuffer;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Collections;
import java.util.List;

public final class OmnicommMessageOuterClass {
    private static final Descriptors.Descriptor internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_descriptor;

    private static final GeneratedMessageV3.FieldAccessorTable internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_fieldAccessorTable;

    private static final Descriptors.Descriptor internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_General_descriptor;

    private static final GeneratedMessageV3.FieldAccessorTable internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_General_fieldAccessorTable;

    private static final Descriptors.Descriptor internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Photo_descriptor;

    private static final GeneratedMessageV3.FieldAccessorTable internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Photo_fieldAccessorTable;

    private static final Descriptors.Descriptor internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_NAV_descriptor;

    private static final GeneratedMessageV3.FieldAccessorTable internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_NAV_fieldAccessorTable;

    private static final Descriptors.Descriptor internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_UniDt_descriptor;

    private static final GeneratedMessageV3.FieldAccessorTable internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_UniDt_fieldAccessorTable;

    private static final Descriptors.Descriptor internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_CanDt_J1939_descriptor;

    private static final GeneratedMessageV3.FieldAccessorTable internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_CanDt_J1939_fieldAccessorTable;

    private static final Descriptors.Descriptor internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_LLSDt_descriptor;

    private static final GeneratedMessageV3.FieldAccessorTable internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_LLSDt_fieldAccessorTable;

    private static final Descriptors.Descriptor internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_descriptor;

    private static final GeneratedMessageV3.FieldAccessorTable internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_fieldAccessorTable;

    private static final Descriptors.Descriptor internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_OneWire_descriptor;

    private static final GeneratedMessageV3.FieldAccessorTable internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_OneWire_fieldAccessorTable;

    private static final Descriptors.Descriptor internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_Pherip_descriptor;

    private static final GeneratedMessageV3.FieldAccessorTable internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_Pherip_fieldAccessorTable;

    private static final Descriptors.Descriptor internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_ExCAN_descriptor;

    private static final GeneratedMessageV3.FieldAccessorTable internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_ExCAN_fieldAccessorTable;

    private static final Descriptors.Descriptor internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_Taho_DDD_descriptor;

    private static final GeneratedMessageV3.FieldAccessorTable internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_Taho_DDD_fieldAccessorTable;

    private static final Descriptors.Descriptor internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_APC_descriptor;

    private static final GeneratedMessageV3.FieldAccessorTable internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_APC_fieldAccessorTable;

    private static final Descriptors.Descriptor internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_MobileEye_descriptor;

    private static final GeneratedMessageV3.FieldAccessorTable internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_MobileEye_fieldAccessorTable;

    private static final Descriptors.Descriptor internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_SafeDriving_descriptor;

    private static final GeneratedMessageV3.FieldAccessorTable internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_SafeDriving_fieldAccessorTable;

    private static final Descriptors.Descriptor internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_GenComm_descriptor;

    private static final GeneratedMessageV3.FieldAccessorTable internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_GenComm_fieldAccessorTable;

    private static final Descriptors.Descriptor internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_FuelSensorModbus_descriptor;

    private static final GeneratedMessageV3.FieldAccessorTable internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_FuelSensorModbus_fieldAccessorTable;

    private static final Descriptors.Descriptor internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_WeightControl_descriptor;

    private static final GeneratedMessageV3.FieldAccessorTable internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_WeightControl_fieldAccessorTable;

    private static final Descriptors.Descriptor internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_ICONDt_descriptor;

    private static final GeneratedMessageV3.FieldAccessorTable internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_ICONDt_fieldAccessorTable;

    private static final Descriptors.Descriptor internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_OBDDt_J1979_descriptor;

    private static final GeneratedMessageV3.FieldAccessorTable internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_OBDDt_J1979_fieldAccessorTable;

    private static final Descriptors.Descriptor internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_LOG_descriptor;

    private static final GeneratedMessageV3.FieldAccessorTable internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_LOG_fieldAccessorTable;

    private static Descriptors.FileDescriptor descriptor;

    public static void registerAllExtensions(ExtensionRegistryLite registry) {
    }

    public static void registerAllExtensions(ExtensionRegistry registry) {
        registerAllExtensions((ExtensionRegistryLite) registry);
    }

    public static final class OmnicommMessage extends GeneratedMessageV3 implements OmnicommMessageOrBuilder {
        private static final long serialVersionUID = 0L;

        private int bitField0_;

        public static final int MID_FIELD_NUMBER = 1;

        private Internal.IntList mID_;

        private int mIDMemoizedSerializedSize;

        public static final int GENERAL_FIELD_NUMBER = 2;

        private General general_;

        public static final int PHOTO_FIELD_NUMBER = 4;

        private Photo photo_;

        public static final int NAV_FIELD_NUMBER = 5;

        private NAV nAV_;

        public static final int UNIDT_FIELD_NUMBER = 6;

        private UniDt uniDt_;

        public static final int CANDT_J1939_FIELD_NUMBER = 7;

        private CanDt_J1939 canDtJ1939_;

        public static final int LLSDT_FIELD_NUMBER = 8;

        private LLSDt lLSDt_;

        public static final int OTHER_FIELD_NUMBER = 9;

        private Other other_;

        public static final int ICONDT_FIELD_NUMBER = 10;

        private ICONDt iCONDt_;

        public static final int OBDDT_J1979_FIELD_NUMBER = 11;

        private OBDDt_J1979 oBDDtJ1979_;

        public static final int LOG_FIELD_NUMBER = 16;

        private LOG lOG_;

        private byte memoizedIsInitialized;

        private OmnicommMessage(GeneratedMessageV3.Builder<?> builder) {
            super(builder);
            this.mIDMemoizedSerializedSize = -1;
            this.memoizedIsInitialized = -1;
        }

        private OmnicommMessage() {
            this.mIDMemoizedSerializedSize = -1;
            this.memoizedIsInitialized = -1;
            this.mID_ = emptyIntList();
        }

        protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) {
            return new OmnicommMessage();
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private OmnicommMessage(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this();
            if (extensionRegistry == null)
                throw new NullPointerException();
            int mutable_bitField0_ = 0;
            UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int length;
                    General.Builder builder8;
                    Photo.Builder builder7;
                    NAV.Builder builder6;
                    UniDt.Builder builder5;
                    CanDt_J1939.Builder builder4;
                    LLSDt.Builder builder3;
                    Other.Builder builder2;
                    ICONDt.Builder builder1;
                    OBDDt_J1979.Builder builder;
                    LOG.Builder subBuilder;
                    int limit, tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            continue;
                        case 8:
                            if ((mutable_bitField0_ & 0x1) == 0) {
                                this.mID_ = newIntList();
                                mutable_bitField0_ |= 0x1;
                            }
                            this.mID_.addInt(input.readUInt32());
                            continue;
                        case 10:
                            length = input.readRawVarint32();
                            limit = input.pushLimit(length);
                            if ((mutable_bitField0_ & 0x1) == 0 && input.getBytesUntilLimit() > 0) {
                                this.mID_ = newIntList();
                                mutable_bitField0_ |= 0x1;
                            }
                            while (input.getBytesUntilLimit() > 0)
                                this.mID_.addInt(input.readUInt32());
                            input.popLimit(limit);
                            continue;
                        case 19:
                            builder8 = null;
                            if ((this.bitField0_ & 0x1) != 0)
                                builder8 = this.general_.toBuilder();
                            this.general_ = (General) input.readGroup(2, General.PARSER, extensionRegistry);
                            if (builder8 != null) {
                                builder8.mergeFrom(this.general_);
                                this.general_ = builder8.buildPartial();
                            }
                            this.bitField0_ |= 0x1;
                            continue;
                        case 35:
                            builder7 = null;
                            if ((this.bitField0_ & 0x2) != 0)
                                builder7 = this.photo_.toBuilder();
                            this.photo_ = (Photo) input.readGroup(4, Photo.PARSER, extensionRegistry);
                            if (builder7 != null) {
                                builder7.mergeFrom(this.photo_);
                                this.photo_ = builder7.buildPartial();
                            }
                            this.bitField0_ |= 0x2;
                            continue;
                        case 43:
                            builder6 = null;
                            if ((this.bitField0_ & 0x4) != 0)
                                builder6 = this.nAV_.toBuilder();
                            this.nAV_ = (NAV) input.readGroup(5, NAV.PARSER, extensionRegistry);
                            if (builder6 != null) {
                                builder6.mergeFrom(this.nAV_);
                                this.nAV_ = builder6.buildPartial();
                            }
                            this.bitField0_ |= 0x4;
                            continue;
                        case 51:
                            builder5 = null;
                            if ((this.bitField0_ & 0x8) != 0)
                                builder5 = this.uniDt_.toBuilder();
                            this.uniDt_ = (UniDt) input.readGroup(6, UniDt.PARSER, extensionRegistry);
                            if (builder5 != null) {
                                builder5.mergeFrom(this.uniDt_);
                                this.uniDt_ = builder5.buildPartial();
                            }
                            this.bitField0_ |= 0x8;
                            continue;
                        case 59:
                            builder4 = null;
                            if ((this.bitField0_ & 0x10) != 0)
                                builder4 = this.canDtJ1939_.toBuilder();
                            this.canDtJ1939_ = (CanDt_J1939) input.readGroup(7, CanDt_J1939.PARSER, extensionRegistry);
                            if (builder4 != null) {
                                builder4.mergeFrom(this.canDtJ1939_);
                                this.canDtJ1939_ = builder4.buildPartial();
                            }
                            this.bitField0_ |= 0x10;
                            continue;
                        case 67:
                            builder3 = null;
                            if ((this.bitField0_ & 0x20) != 0)
                                builder3 = this.lLSDt_.toBuilder();
                            this.lLSDt_ = (LLSDt) input.readGroup(8, LLSDt.PARSER, extensionRegistry);
                            if (builder3 != null) {
                                builder3.mergeFrom(this.lLSDt_);
                                this.lLSDt_ = builder3.buildPartial();
                            }
                            this.bitField0_ |= 0x20;
                            continue;
                        case 75:
                            builder2 = null;
                            if ((this.bitField0_ & 0x40) != 0)
                                builder2 = this.other_.toBuilder();
                            this.other_ = (Other) input.readGroup(9, Other.PARSER, extensionRegistry);
                            if (builder2 != null) {
                                builder2.mergeFrom(this.other_);
                                this.other_ = builder2.buildPartial();
                            }
                            this.bitField0_ |= 0x40;
                            continue;
                        case 83:
                            builder1 = null;
                            if ((this.bitField0_ & 0x80) != 0)
                                builder1 = this.iCONDt_.toBuilder();
                            this.iCONDt_ = (ICONDt) input.readGroup(10, ICONDt.PARSER, extensionRegistry);
                            if (builder1 != null) {
                                builder1.mergeFrom(this.iCONDt_);
                                this.iCONDt_ = builder1.buildPartial();
                            }
                            this.bitField0_ |= 0x80;
                            continue;
                        case 91:
                            builder = null;
                            if ((this.bitField0_ & 0x100) != 0)
                                builder = this.oBDDtJ1979_.toBuilder();
                            this.oBDDtJ1979_ = (OBDDt_J1979) input.readGroup(11, OBDDt_J1979.PARSER, extensionRegistry);
                            if (builder != null) {
                                builder.mergeFrom(this.oBDDtJ1979_);
                                this.oBDDtJ1979_ = builder.buildPartial();
                            }
                            this.bitField0_ |= 0x100;
                            continue;
                        case 131:
                            subBuilder = null;
                            if ((this.bitField0_ & 0x200) != 0)
                                subBuilder = this.lOG_.toBuilder();
                            this.lOG_ = (LOG) input.readGroup(16, LOG.PARSER, extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(this.lOG_);
                                this.lOG_ = subBuilder.buildPartial();
                            }
                            this.bitField0_ |= 0x200;
                            continue;
                    }
                    if (!parseUnknownField(input, unknownFields, extensionRegistry, tag))
                        done = true;
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (IOException e) {
                throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this);
            } finally {
                if ((mutable_bitField0_ & 0x1) != 0)
                    this.mID_.makeImmutable();
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_descriptor;
        }

        protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
            return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_fieldAccessorTable.ensureFieldAccessorsInitialized(OmnicommMessage.class, Builder.class);
        }

        public static final class General extends GeneratedMessageV3 implements GeneralOrBuilder {
            private static final long serialVersionUID = 0L;

            private int bitField0_;

            public static final int TIME_FIELD_NUMBER = 1;

            private int time_;

            public static final int IDFAS_FIELD_NUMBER = 2;

            private int iDFAS_;

            public static final int IDDRV_FIELD_NUMBER = 3;

            private ByteString iDDrv_;

            public static final int FLG_FIELD_NUMBER = 4;

            private int fLG_;

            public static final int MILEAGE_FIELD_NUMBER = 5;

            private int mileage_;

            public static final int VIMP_FIELD_NUMBER = 6;

            private int vImp_;

            public static final int TIMP_FIELD_NUMBER = 7;

            private int tImp_;

            public static final int UBOARD_FIELD_NUMBER = 8;

            private int uboard_;

            public static final int BATLIFE_FIELD_NUMBER = 9;

            private int batLife_;

            public static final int SUMACC_FIELD_NUMBER = 10;

            private int sumAcc_;

            public static final int PHONE_FIELD_NUMBER = 11;

            private ByteString phone_;

            public static final int AMTRX_FIELD_NUMBER = 12;

            private int amtrX_;

            public static final int AMTRY_FIELD_NUMBER = 13;

            private int amtrY_;

            public static final int AMTRZ_FIELD_NUMBER = 14;

            private int amtrZ_;

            public static final int TACHOCARDID_FIELD_NUMBER = 15;

            private ByteString tachoCardID_;

            public static final int ACCELSTATUS_FIELD_NUMBER = 16;

            private int accelStatus_;

            public static final int HOURSKOEF_FIELD_NUMBER = 17;

            private int hoursKoef_;

            public static final int GSMSIGNALQUALITY_FIELD_NUMBER = 18;

            private int gsmSignalQuality_;

            public static final int WIFISIGNALQUALITY_FIELD_NUMBER = 19;

            private int wifiSignalQuality_;

            private byte memoizedIsInitialized;

            private General(GeneratedMessageV3.Builder<?> builder) {
                super(builder);
                this.memoizedIsInitialized = -1;
            }

            private General() {
                this.memoizedIsInitialized = -1;
                this.iDDrv_ = ByteString.EMPTY;
                this.phone_ = ByteString.EMPTY;
                this.tachoCardID_ = ByteString.EMPTY;
            }

            protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) {
                return new General();
            }

            public final UnknownFieldSet getUnknownFields() {
                return this.unknownFields;
            }

            private General(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                this();
                if (extensionRegistry == null)
                    throw new NullPointerException();
                int mutable_bitField0_ = 0;
                UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
                try {
                    boolean done = false;
                    while (!done) {
                        int tag = input.readTag();
                        switch (tag) {
                            case 0:
                                done = true;
                                continue;
                            case 8:
                                this.bitField0_ |= 0x1;
                                this.time_ = input.readUInt32();
                                continue;
                            case 16:
                                this.bitField0_ |= 0x2;
                                this.iDFAS_ = input.readUInt32();
                                continue;
                            case 26:
                                this.bitField0_ |= 0x4;
                                this.iDDrv_ = input.readBytes();
                                continue;
                            case 32:
                                this.bitField0_ |= 0x8;
                                this.fLG_ = input.readUInt32();
                                continue;
                            case 40:
                                this.bitField0_ |= 0x10;
                                this.mileage_ = input.readUInt32();
                                continue;
                            case 48:
                                this.bitField0_ |= 0x20;
                                this.vImp_ = input.readUInt32();
                                continue;
                            case 56:
                                this.bitField0_ |= 0x40;
                                this.tImp_ = input.readUInt32();
                                continue;
                            case 64:
                                this.bitField0_ |= 0x80;
                                this.uboard_ = input.readUInt32();
                                continue;
                            case 72:
                                this.bitField0_ |= 0x100;
                                this.batLife_ = input.readUInt32();
                                continue;
                            case 80:
                                this.bitField0_ |= 0x200;
                                this.sumAcc_ = input.readSInt32();
                                continue;
                            case 90:
                                this.bitField0_ |= 0x400;
                                this.phone_ = input.readBytes();
                                continue;
                            case 96:
                                this.bitField0_ |= 0x800;
                                this.amtrX_ = input.readSInt32();
                                continue;
                            case 104:
                                this.bitField0_ |= 0x1000;
                                this.amtrY_ = input.readSInt32();
                                continue;
                            case 112:
                                this.bitField0_ |= 0x2000;
                                this.amtrZ_ = input.readSInt32();
                                continue;
                            case 122:
                                this.bitField0_ |= 0x4000;
                                this.tachoCardID_ = input.readBytes();
                                continue;
                            case 128:
                                this.bitField0_ |= 0x8000;
                                this.accelStatus_ = input.readUInt32();
                                continue;
                            case 136:
                                this.bitField0_ |= 0x10000;
                                this.hoursKoef_ = input.readUInt32();
                                continue;
                            case 144:
                                this.bitField0_ |= 0x20000;
                                this.gsmSignalQuality_ = input.readUInt32();
                                continue;
                            case 152:
                                this.bitField0_ |= 0x40000;
                                this.wifiSignalQuality_ = input.readUInt32();
                                continue;
                        }
                        if (!parseUnknownField(input, unknownFields, extensionRegistry, tag))
                            done = true;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e) {
                    throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this);
                } finally {
                    this.unknownFields = unknownFields.build();
                    makeExtensionsImmutable();
                }
            }

            public static final Descriptors.Descriptor getDescriptor() {
                return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_General_descriptor;
            }

            protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
                return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_General_fieldAccessorTable.ensureFieldAccessorsInitialized(General.class, Builder.class);
            }

            public boolean hasTime() {
                return ((this.bitField0_ & 0x1) != 0);
            }

            public int getTime() {
                return this.time_;
            }

            public boolean hasIDFAS() {
                return ((this.bitField0_ & 0x2) != 0);
            }

            public int getIDFAS() {
                return this.iDFAS_;
            }

            public boolean hasIDDrv() {
                return ((this.bitField0_ & 0x4) != 0);
            }

            public ByteString getIDDrv() {
                return this.iDDrv_;
            }

            public boolean hasFLG() {
                return ((this.bitField0_ & 0x8) != 0);
            }

            public int getFLG() {
                return this.fLG_;
            }

            public boolean hasMileage() {
                return ((this.bitField0_ & 0x10) != 0);
            }

            public int getMileage() {
                return this.mileage_;
            }

            public boolean hasVImp() {
                return ((this.bitField0_ & 0x20) != 0);
            }

            public int getVImp() {
                return this.vImp_;
            }

            public boolean hasTImp() {
                return ((this.bitField0_ & 0x40) != 0);
            }

            public int getTImp() {
                return this.tImp_;
            }

            public boolean hasUboard() {
                return ((this.bitField0_ & 0x80) != 0);
            }

            public int getUboard() {
                return this.uboard_;
            }

            public boolean hasBatLife() {
                return ((this.bitField0_ & 0x100) != 0);
            }

            public int getBatLife() {
                return this.batLife_;
            }

            public boolean hasSumAcc() {
                return ((this.bitField0_ & 0x200) != 0);
            }

            public int getSumAcc() {
                return this.sumAcc_;
            }

            public boolean hasPhone() {
                return ((this.bitField0_ & 0x400) != 0);
            }

            public ByteString getPhone() {
                return this.phone_;
            }

            public boolean hasAmtrX() {
                return ((this.bitField0_ & 0x800) != 0);
            }

            public int getAmtrX() {
                return this.amtrX_;
            }

            public boolean hasAmtrY() {
                return ((this.bitField0_ & 0x1000) != 0);
            }

            public int getAmtrY() {
                return this.amtrY_;
            }

            public boolean hasAmtrZ() {
                return ((this.bitField0_ & 0x2000) != 0);
            }

            public int getAmtrZ() {
                return this.amtrZ_;
            }

            public boolean hasTachoCardID() {
                return ((this.bitField0_ & 0x4000) != 0);
            }

            public ByteString getTachoCardID() {
                return this.tachoCardID_;
            }

            public boolean hasAccelStatus() {
                return ((this.bitField0_ & 0x8000) != 0);
            }

            public int getAccelStatus() {
                return this.accelStatus_;
            }

            public boolean hasHoursKoef() {
                return ((this.bitField0_ & 0x10000) != 0);
            }

            public int getHoursKoef() {
                return this.hoursKoef_;
            }

            public boolean hasGsmSignalQuality() {
                return ((this.bitField0_ & 0x20000) != 0);
            }

            public int getGsmSignalQuality() {
                return this.gsmSignalQuality_;
            }

            public boolean hasWifiSignalQuality() {
                return ((this.bitField0_ & 0x40000) != 0);
            }

            public int getWifiSignalQuality() {
                return this.wifiSignalQuality_;
            }

            public final boolean isInitialized() {
                byte isInitialized = this.memoizedIsInitialized;
                if (isInitialized == 1)
                    return true;
                if (isInitialized == 0)
                    return false;
                this.memoizedIsInitialized = 1;
                return true;
            }

            public void writeTo(CodedOutputStream output) throws IOException {
                if ((this.bitField0_ & 0x1) != 0)
                    output.writeUInt32(1, this.time_);
                if ((this.bitField0_ & 0x2) != 0)
                    output.writeUInt32(2, this.iDFAS_);
                if ((this.bitField0_ & 0x4) != 0)
                    output.writeBytes(3, this.iDDrv_);
                if ((this.bitField0_ & 0x8) != 0)
                    output.writeUInt32(4, this.fLG_);
                if ((this.bitField0_ & 0x10) != 0)
                    output.writeUInt32(5, this.mileage_);
                if ((this.bitField0_ & 0x20) != 0)
                    output.writeUInt32(6, this.vImp_);
                if ((this.bitField0_ & 0x40) != 0)
                    output.writeUInt32(7, this.tImp_);
                if ((this.bitField0_ & 0x80) != 0)
                    output.writeUInt32(8, this.uboard_);
                if ((this.bitField0_ & 0x100) != 0)
                    output.writeUInt32(9, this.batLife_);
                if ((this.bitField0_ & 0x200) != 0)
                    output.writeSInt32(10, this.sumAcc_);
                if ((this.bitField0_ & 0x400) != 0)
                    output.writeBytes(11, this.phone_);
                if ((this.bitField0_ & 0x800) != 0)
                    output.writeSInt32(12, this.amtrX_);
                if ((this.bitField0_ & 0x1000) != 0)
                    output.writeSInt32(13, this.amtrY_);
                if ((this.bitField0_ & 0x2000) != 0)
                    output.writeSInt32(14, this.amtrZ_);
                if ((this.bitField0_ & 0x4000) != 0)
                    output.writeBytes(15, this.tachoCardID_);
                if ((this.bitField0_ & 0x8000) != 0)
                    output.writeUInt32(16, this.accelStatus_);
                if ((this.bitField0_ & 0x10000) != 0)
                    output.writeUInt32(17, this.hoursKoef_);
                if ((this.bitField0_ & 0x20000) != 0)
                    output.writeUInt32(18, this.gsmSignalQuality_);
                if ((this.bitField0_ & 0x40000) != 0)
                    output.writeUInt32(19, this.wifiSignalQuality_);
                this.unknownFields.writeTo(output);
            }

            public int getSerializedSize() {
                int size = this.memoizedSize;
                if (size != -1)
                    return size;
                size = 0;
                if ((this.bitField0_ & 0x1) != 0)
                    size += CodedOutputStream.computeUInt32Size(1, this.time_);
                if ((this.bitField0_ & 0x2) != 0)
                    size += CodedOutputStream.computeUInt32Size(2, this.iDFAS_);
                if ((this.bitField0_ & 0x4) != 0)
                    size += CodedOutputStream.computeBytesSize(3, this.iDDrv_);
                if ((this.bitField0_ & 0x8) != 0)
                    size += CodedOutputStream.computeUInt32Size(4, this.fLG_);
                if ((this.bitField0_ & 0x10) != 0)
                    size += CodedOutputStream.computeUInt32Size(5, this.mileage_);
                if ((this.bitField0_ & 0x20) != 0)
                    size += CodedOutputStream.computeUInt32Size(6, this.vImp_);
                if ((this.bitField0_ & 0x40) != 0)
                    size += CodedOutputStream.computeUInt32Size(7, this.tImp_);
                if ((this.bitField0_ & 0x80) != 0)
                    size += CodedOutputStream.computeUInt32Size(8, this.uboard_);
                if ((this.bitField0_ & 0x100) != 0)
                    size += CodedOutputStream.computeUInt32Size(9, this.batLife_);
                if ((this.bitField0_ & 0x200) != 0)
                    size += CodedOutputStream.computeSInt32Size(10, this.sumAcc_);
                if ((this.bitField0_ & 0x400) != 0)
                    size += CodedOutputStream.computeBytesSize(11, this.phone_);
                if ((this.bitField0_ & 0x800) != 0)
                    size += CodedOutputStream.computeSInt32Size(12, this.amtrX_);
                if ((this.bitField0_ & 0x1000) != 0)
                    size += CodedOutputStream.computeSInt32Size(13, this.amtrY_);
                if ((this.bitField0_ & 0x2000) != 0)
                    size += CodedOutputStream.computeSInt32Size(14, this.amtrZ_);
                if ((this.bitField0_ & 0x4000) != 0)
                    size += CodedOutputStream.computeBytesSize(15, this.tachoCardID_);
                if ((this.bitField0_ & 0x8000) != 0)
                    size += CodedOutputStream.computeUInt32Size(16, this.accelStatus_);
                if ((this.bitField0_ & 0x10000) != 0)
                    size += CodedOutputStream.computeUInt32Size(17, this.hoursKoef_);
                if ((this.bitField0_ & 0x20000) != 0)
                    size += CodedOutputStream.computeUInt32Size(18, this.gsmSignalQuality_);
                if ((this.bitField0_ & 0x40000) != 0)
                    size += CodedOutputStream.computeUInt32Size(19, this.wifiSignalQuality_);
                size += this.unknownFields.getSerializedSize();
                this.memoizedSize = size;
                return size;
            }

            public boolean equals(Object obj) {
                if (obj == this)
                    return true;
                if (!(obj instanceof General))
                    return super.equals(obj);
                General other = (General) obj;
                if (hasTime() != other.hasTime())
                    return false;
                if (hasTime() && getTime() != other.getTime())
                    return false;
                if (hasIDFAS() != other.hasIDFAS())
                    return false;
                if (hasIDFAS() && getIDFAS() != other.getIDFAS())
                    return false;
                if (hasIDDrv() != other.hasIDDrv())
                    return false;
                if (hasIDDrv() && !getIDDrv().equals(other.getIDDrv()))
                    return false;
                if (hasFLG() != other.hasFLG())
                    return false;
                if (hasFLG() && getFLG() != other.getFLG())
                    return false;
                if (hasMileage() != other.hasMileage())
                    return false;
                if (hasMileage() && getMileage() != other.getMileage())
                    return false;
                if (hasVImp() != other.hasVImp())
                    return false;
                if (hasVImp() && getVImp() != other.getVImp())
                    return false;
                if (hasTImp() != other.hasTImp())
                    return false;
                if (hasTImp() && getTImp() != other.getTImp())
                    return false;
                if (hasUboard() != other.hasUboard())
                    return false;
                if (hasUboard() && getUboard() != other.getUboard())
                    return false;
                if (hasBatLife() != other.hasBatLife())
                    return false;
                if (hasBatLife() && getBatLife() != other.getBatLife())
                    return false;
                if (hasSumAcc() != other.hasSumAcc())
                    return false;
                if (hasSumAcc() && getSumAcc() != other.getSumAcc())
                    return false;
                if (hasPhone() != other.hasPhone())
                    return false;
                if (hasPhone() && !getPhone().equals(other.getPhone()))
                    return false;
                if (hasAmtrX() != other.hasAmtrX())
                    return false;
                if (hasAmtrX() && getAmtrX() != other.getAmtrX())
                    return false;
                if (hasAmtrY() != other.hasAmtrY())
                    return false;
                if (hasAmtrY() && getAmtrY() != other.getAmtrY())
                    return false;
                if (hasAmtrZ() != other.hasAmtrZ())
                    return false;
                if (hasAmtrZ() && getAmtrZ() != other.getAmtrZ())
                    return false;
                if (hasTachoCardID() != other.hasTachoCardID())
                    return false;
                if (hasTachoCardID() && !getTachoCardID().equals(other.getTachoCardID()))
                    return false;
                if (hasAccelStatus() != other.hasAccelStatus())
                    return false;
                if (hasAccelStatus() && getAccelStatus() != other.getAccelStatus())
                    return false;
                if (hasHoursKoef() != other.hasHoursKoef())
                    return false;
                if (hasHoursKoef() && getHoursKoef() != other.getHoursKoef())
                    return false;
                if (hasGsmSignalQuality() != other.hasGsmSignalQuality())
                    return false;
                if (hasGsmSignalQuality() && getGsmSignalQuality() != other.getGsmSignalQuality())
                    return false;
                if (hasWifiSignalQuality() != other.hasWifiSignalQuality())
                    return false;
                if (hasWifiSignalQuality() && getWifiSignalQuality() != other.getWifiSignalQuality())
                    return false;
                if (!this.unknownFields.equals(other.unknownFields))
                    return false;
                return true;
            }

            public int hashCode() {
                if (this.memoizedHashCode != 0)
                    return this.memoizedHashCode;
                int hash = 41;
                hash = 19 * hash + getDescriptor().hashCode();
                if (hasTime()) {
                    hash = 37 * hash + 1;
                    hash = 53 * hash + getTime();
                }
                if (hasIDFAS()) {
                    hash = 37 * hash + 2;
                    hash = 53 * hash + getIDFAS();
                }
                if (hasIDDrv()) {
                    hash = 37 * hash + 3;
                    hash = 53 * hash + getIDDrv().hashCode();
                }
                if (hasFLG()) {
                    hash = 37 * hash + 4;
                    hash = 53 * hash + getFLG();
                }
                if (hasMileage()) {
                    hash = 37 * hash + 5;
                    hash = 53 * hash + getMileage();
                }
                if (hasVImp()) {
                    hash = 37 * hash + 6;
                    hash = 53 * hash + getVImp();
                }
                if (hasTImp()) {
                    hash = 37 * hash + 7;
                    hash = 53 * hash + getTImp();
                }
                if (hasUboard()) {
                    hash = 37 * hash + 8;
                    hash = 53 * hash + getUboard();
                }
                if (hasBatLife()) {
                    hash = 37 * hash + 9;
                    hash = 53 * hash + getBatLife();
                }
                if (hasSumAcc()) {
                    hash = 37 * hash + 10;
                    hash = 53 * hash + getSumAcc();
                }
                if (hasPhone()) {
                    hash = 37 * hash + 11;
                    hash = 53 * hash + getPhone().hashCode();
                }
                if (hasAmtrX()) {
                    hash = 37 * hash + 12;
                    hash = 53 * hash + getAmtrX();
                }
                if (hasAmtrY()) {
                    hash = 37 * hash + 13;
                    hash = 53 * hash + getAmtrY();
                }
                if (hasAmtrZ()) {
                    hash = 37 * hash + 14;
                    hash = 53 * hash + getAmtrZ();
                }
                if (hasTachoCardID()) {
                    hash = 37 * hash + 15;
                    hash = 53 * hash + getTachoCardID().hashCode();
                }
                if (hasAccelStatus()) {
                    hash = 37 * hash + 16;
                    hash = 53 * hash + getAccelStatus();
                }
                if (hasHoursKoef()) {
                    hash = 37 * hash + 17;
                    hash = 53 * hash + getHoursKoef();
                }
                if (hasGsmSignalQuality()) {
                    hash = 37 * hash + 18;
                    hash = 53 * hash + getGsmSignalQuality();
                }
                if (hasWifiSignalQuality()) {
                    hash = 37 * hash + 19;
                    hash = 53 * hash + getWifiSignalQuality();
                }
                hash = 29 * hash + this.unknownFields.hashCode();
                this.memoizedHashCode = hash;
                return hash;
            }

            public static General parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
                return (General) PARSER.parseFrom(data);
            }

            public static General parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return (General) PARSER.parseFrom(data, extensionRegistry);
            }

            public static General parseFrom(ByteString data) throws InvalidProtocolBufferException {
                return (General) PARSER.parseFrom(data);
            }

            public static General parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return (General) PARSER.parseFrom(data, extensionRegistry);
            }

            public static General parseFrom(byte[] data) throws InvalidProtocolBufferException {
                return (General) PARSER.parseFrom(data);
            }

            public static General parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return (General) PARSER.parseFrom(data, extensionRegistry);
            }

            public static General parseFrom(InputStream input) throws IOException {
                return (General) GeneratedMessageV3.parseWithIOException(PARSER, input);
            }

            public static General parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                return (General) GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
            }

            public static General parseDelimitedFrom(InputStream input) throws IOException {
                return (General) GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
            }

            public static General parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                return (General) GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
            }

            public static General parseFrom(CodedInputStream input) throws IOException {
                return (General) GeneratedMessageV3.parseWithIOException(PARSER, input);
            }

            public static General parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                return (General) GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
            }

            public Builder newBuilderForType() {
                return newBuilder();
            }

            public static Builder newBuilder() {
                return DEFAULT_INSTANCE.toBuilder();
            }

            public static Builder newBuilder(General prototype) {
                return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
            }

            public Builder toBuilder() {
                return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder()).mergeFrom(this);
            }

            protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
                Builder builder = new Builder(parent);
                return builder;
            }

            public static final class Builder extends GeneratedMessageV3.Builder<Builder> implements OmnicommMessageOuterClass.OmnicommMessage.GeneralOrBuilder {
                private int bitField0_;

                private int time_;

                private int iDFAS_;

                private ByteString iDDrv_;

                private int fLG_;

                private int mileage_;

                private int vImp_;

                private int tImp_;

                private int uboard_;

                private int batLife_;

                private int sumAcc_;

                private ByteString phone_;

                private int amtrX_;

                private int amtrY_;

                private int amtrZ_;

                private ByteString tachoCardID_;

                private int accelStatus_;

                private int hoursKoef_;

                private int gsmSignalQuality_;

                private int wifiSignalQuality_;

                public static final Descriptors.Descriptor getDescriptor() {
                    return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_General_descriptor;
                }

                protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
                    return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_General_fieldAccessorTable.ensureFieldAccessorsInitialized(OmnicommMessageOuterClass.OmnicommMessage.General.class, Builder.class);
                }

                private Builder() {
                    this.iDDrv_ = ByteString.EMPTY;
                    this.phone_ = ByteString.EMPTY;
                    this.tachoCardID_ = ByteString.EMPTY;
                    maybeForceBuilderInitialization();
                }

                private Builder(GeneratedMessageV3.BuilderParent parent) {
                    super(parent);
                    this.iDDrv_ = ByteString.EMPTY;
                    this.phone_ = ByteString.EMPTY;
                    this.tachoCardID_ = ByteString.EMPTY;
                    maybeForceBuilderInitialization();
                }

                private void maybeForceBuilderInitialization() {
                    if (OmnicommMessageOuterClass.OmnicommMessage.General.alwaysUseFieldBuilders) ;
                }

                public Builder clear() {
                    super.clear();
                    this.time_ = 0;
                    this.bitField0_ &= 0xFFFFFFFE;
                    this.iDFAS_ = 0;
                    this.bitField0_ &= 0xFFFFFFFD;
                    this.iDDrv_ = ByteString.EMPTY;
                    this.bitField0_ &= 0xFFFFFFFB;
                    this.fLG_ = 0;
                    this.bitField0_ &= 0xFFFFFFF7;
                    this.mileage_ = 0;
                    this.bitField0_ &= 0xFFFFFFEF;
                    this.vImp_ = 0;
                    this.bitField0_ &= 0xFFFFFFDF;
                    this.tImp_ = 0;
                    this.bitField0_ &= 0xFFFFFFBF;
                    this.uboard_ = 0;
                    this.bitField0_ &= 0xFFFFFF7F;
                    this.batLife_ = 0;
                    this.bitField0_ &= 0xFFFFFEFF;
                    this.sumAcc_ = 0;
                    this.bitField0_ &= 0xFFFFFDFF;
                    this.phone_ = ByteString.EMPTY;
                    this.bitField0_ &= 0xFFFFFBFF;
                    this.amtrX_ = 0;
                    this.bitField0_ &= 0xFFFFF7FF;
                    this.amtrY_ = 0;
                    this.bitField0_ &= 0xFFFFEFFF;
                    this.amtrZ_ = 0;
                    this.bitField0_ &= 0xFFFFDFFF;
                    this.tachoCardID_ = ByteString.EMPTY;
                    this.bitField0_ &= 0xFFFFBFFF;
                    this.accelStatus_ = 0;
                    this.bitField0_ &= 0xFFFF7FFF;
                    this.hoursKoef_ = 0;
                    this.bitField0_ &= 0xFFFEFFFF;
                    this.gsmSignalQuality_ = 0;
                    this.bitField0_ &= 0xFFFDFFFF;
                    this.wifiSignalQuality_ = 0;
                    this.bitField0_ &= 0xFFFBFFFF;
                    return this;
                }

                public Descriptors.Descriptor getDescriptorForType() {
                    return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_General_descriptor;
                }

                public OmnicommMessageOuterClass.OmnicommMessage.General getDefaultInstanceForType() {
                    return OmnicommMessageOuterClass.OmnicommMessage.General.getDefaultInstance();
                }

                public OmnicommMessageOuterClass.OmnicommMessage.General build() {
                    OmnicommMessageOuterClass.OmnicommMessage.General result = buildPartial();
                    if (!result.isInitialized())
                        throw newUninitializedMessageException(result);
                    return result;
                }

                public OmnicommMessageOuterClass.OmnicommMessage.General buildPartial() {
                    OmnicommMessageOuterClass.OmnicommMessage.General result = new OmnicommMessageOuterClass.OmnicommMessage.General(this);
                    int from_bitField0_ = this.bitField0_;
                    int to_bitField0_ = 0;
                    if ((from_bitField0_ & 0x1) != 0) {
                        result.time_ = this.time_;
                        to_bitField0_ |= 0x1;
                    }
                    if ((from_bitField0_ & 0x2) != 0) {
                        result.iDFAS_ = this.iDFAS_;
                        to_bitField0_ |= 0x2;
                    }
                    if ((from_bitField0_ & 0x4) != 0)
                        to_bitField0_ |= 0x4;
                    result.iDDrv_ = this.iDDrv_;
                    if ((from_bitField0_ & 0x8) != 0) {
                        result.fLG_ = this.fLG_;
                        to_bitField0_ |= 0x8;
                    }
                    if ((from_bitField0_ & 0x10) != 0) {
                        result.mileage_ = this.mileage_;
                        to_bitField0_ |= 0x10;
                    }
                    if ((from_bitField0_ & 0x20) != 0) {
                        result.vImp_ = this.vImp_;
                        to_bitField0_ |= 0x20;
                    }
                    if ((from_bitField0_ & 0x40) != 0) {
                        result.tImp_ = this.tImp_;
                        to_bitField0_ |= 0x40;
                    }
                    if ((from_bitField0_ & 0x80) != 0) {
                        result.uboard_ = this.uboard_;
                        to_bitField0_ |= 0x80;
                    }
                    if ((from_bitField0_ & 0x100) != 0) {
                        result.batLife_ = this.batLife_;
                        to_bitField0_ |= 0x100;
                    }
                    if ((from_bitField0_ & 0x200) != 0) {
                        result.sumAcc_ = this.sumAcc_;
                        to_bitField0_ |= 0x200;
                    }
                    if ((from_bitField0_ & 0x400) != 0)
                        to_bitField0_ |= 0x400;
                    result.phone_ = this.phone_;
                    if ((from_bitField0_ & 0x800) != 0) {
                        result.amtrX_ = this.amtrX_;
                        to_bitField0_ |= 0x800;
                    }
                    if ((from_bitField0_ & 0x1000) != 0) {
                        result.amtrY_ = this.amtrY_;
                        to_bitField0_ |= 0x1000;
                    }
                    if ((from_bitField0_ & 0x2000) != 0) {
                        result.amtrZ_ = this.amtrZ_;
                        to_bitField0_ |= 0x2000;
                    }
                    if ((from_bitField0_ & 0x4000) != 0)
                        to_bitField0_ |= 0x4000;
                    result.tachoCardID_ = this.tachoCardID_;
                    if ((from_bitField0_ & 0x8000) != 0) {
                        result.accelStatus_ = this.accelStatus_;
                        to_bitField0_ |= 0x8000;
                    }
                    if ((from_bitField0_ & 0x10000) != 0) {
                        result.hoursKoef_ = this.hoursKoef_;
                        to_bitField0_ |= 0x10000;
                    }
                    if ((from_bitField0_ & 0x20000) != 0) {
                        result.gsmSignalQuality_ = this.gsmSignalQuality_;
                        to_bitField0_ |= 0x20000;
                    }
                    if ((from_bitField0_ & 0x40000) != 0) {
                        result.wifiSignalQuality_ = this.wifiSignalQuality_;
                        to_bitField0_ |= 0x40000;
                    }
                    result.bitField0_ = to_bitField0_;
                    onBuilt();
                    return result;
                }

                public Builder clone() {
                    return (Builder) super.clone();
                }

                public Builder setField(Descriptors.FieldDescriptor field, Object value) {
                    return (Builder) super.setField(field, value);
                }

                public Builder clearField(Descriptors.FieldDescriptor field) {
                    return (Builder) super.clearField(field);
                }

                public Builder clearOneof(Descriptors.OneofDescriptor oneof) {
                    return (Builder) super.clearOneof(oneof);
                }

                public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
                    return (Builder) super.setRepeatedField(field, index, value);
                }

                public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
                    return (Builder) super.addRepeatedField(field, value);
                }

                public Builder mergeFrom(Message other) {
                    if (other instanceof OmnicommMessageOuterClass.OmnicommMessage.General)
                        return mergeFrom((OmnicommMessageOuterClass.OmnicommMessage.General) other);
                    super.mergeFrom(other);
                    return this;
                }

                public Builder mergeFrom(OmnicommMessageOuterClass.OmnicommMessage.General other) {
                    if (other == OmnicommMessageOuterClass.OmnicommMessage.General.getDefaultInstance())
                        return this;
                    if (other.hasTime())
                        setTime(other.getTime());
                    if (other.hasIDFAS())
                        setIDFAS(other.getIDFAS());
                    if (other.hasIDDrv())
                        setIDDrv(other.getIDDrv());
                    if (other.hasFLG())
                        setFLG(other.getFLG());
                    if (other.hasMileage())
                        setMileage(other.getMileage());
                    if (other.hasVImp())
                        setVImp(other.getVImp());
                    if (other.hasTImp())
                        setTImp(other.getTImp());
                    if (other.hasUboard())
                        setUboard(other.getUboard());
                    if (other.hasBatLife())
                        setBatLife(other.getBatLife());
                    if (other.hasSumAcc())
                        setSumAcc(other.getSumAcc());
                    if (other.hasPhone())
                        setPhone(other.getPhone());
                    if (other.hasAmtrX())
                        setAmtrX(other.getAmtrX());
                    if (other.hasAmtrY())
                        setAmtrY(other.getAmtrY());
                    if (other.hasAmtrZ())
                        setAmtrZ(other.getAmtrZ());
                    if (other.hasTachoCardID())
                        setTachoCardID(other.getTachoCardID());
                    if (other.hasAccelStatus())
                        setAccelStatus(other.getAccelStatus());
                    if (other.hasHoursKoef())
                        setHoursKoef(other.getHoursKoef());
                    if (other.hasGsmSignalQuality())
                        setGsmSignalQuality(other.getGsmSignalQuality());
                    if (other.hasWifiSignalQuality())
                        setWifiSignalQuality(other.getWifiSignalQuality());
                    mergeUnknownFields(other.unknownFields);
                    onChanged();
                    return this;
                }

                public final boolean isInitialized() {
                    return true;
                }

                public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                    OmnicommMessageOuterClass.OmnicommMessage.General parsedMessage = null;
                    try {
                        parsedMessage = (OmnicommMessageOuterClass.OmnicommMessage.General) OmnicommMessageOuterClass.OmnicommMessage.General.PARSER.parsePartialFrom(input, extensionRegistry);
                    } catch (InvalidProtocolBufferException e) {
                        parsedMessage = (OmnicommMessageOuterClass.OmnicommMessage.General) e.getUnfinishedMessage();
                        throw e.unwrapIOException();
                    } finally {
                        if (parsedMessage != null)
                            mergeFrom(parsedMessage);
                    }
                    return this;
                }

                public boolean hasTime() {
                    return ((this.bitField0_ & 0x1) != 0);
                }

                public int getTime() {
                    return this.time_;
                }

                public Builder setTime(int value) {
                    this.bitField0_ |= 0x1;
                    this.time_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearTime() {
                    this.bitField0_ &= 0xFFFFFFFE;
                    this.time_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasIDFAS() {
                    return ((this.bitField0_ & 0x2) != 0);
                }

                public int getIDFAS() {
                    return this.iDFAS_;
                }

                public Builder setIDFAS(int value) {
                    this.bitField0_ |= 0x2;
                    this.iDFAS_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearIDFAS() {
                    this.bitField0_ &= 0xFFFFFFFD;
                    this.iDFAS_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasIDDrv() {
                    return ((this.bitField0_ & 0x4) != 0);
                }

                public ByteString getIDDrv() {
                    return this.iDDrv_;
                }

                public Builder setIDDrv(ByteString value) {
                    if (value == null)
                        throw new NullPointerException();
                    this.bitField0_ |= 0x4;
                    this.iDDrv_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearIDDrv() {
                    this.bitField0_ &= 0xFFFFFFFB;
                    this.iDDrv_ = OmnicommMessageOuterClass.OmnicommMessage.General.getDefaultInstance().getIDDrv();
                    onChanged();
                    return this;
                }

                public boolean hasFLG() {
                    return ((this.bitField0_ & 0x8) != 0);
                }

                public int getFLG() {
                    return this.fLG_;
                }

                public Builder setFLG(int value) {
                    this.bitField0_ |= 0x8;
                    this.fLG_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearFLG() {
                    this.bitField0_ &= 0xFFFFFFF7;
                    this.fLG_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasMileage() {
                    return ((this.bitField0_ & 0x10) != 0);
                }

                public int getMileage() {
                    return this.mileage_;
                }

                public Builder setMileage(int value) {
                    this.bitField0_ |= 0x10;
                    this.mileage_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearMileage() {
                    this.bitField0_ &= 0xFFFFFFEF;
                    this.mileage_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasVImp() {
                    return ((this.bitField0_ & 0x20) != 0);
                }

                public int getVImp() {
                    return this.vImp_;
                }

                public Builder setVImp(int value) {
                    this.bitField0_ |= 0x20;
                    this.vImp_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearVImp() {
                    this.bitField0_ &= 0xFFFFFFDF;
                    this.vImp_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasTImp() {
                    return ((this.bitField0_ & 0x40) != 0);
                }

                public int getTImp() {
                    return this.tImp_;
                }

                public Builder setTImp(int value) {
                    this.bitField0_ |= 0x40;
                    this.tImp_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearTImp() {
                    this.bitField0_ &= 0xFFFFFFBF;
                    this.tImp_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasUboard() {
                    return ((this.bitField0_ & 0x80) != 0);
                }

                public int getUboard() {
                    return this.uboard_;
                }

                public Builder setUboard(int value) {
                    this.bitField0_ |= 0x80;
                    this.uboard_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearUboard() {
                    this.bitField0_ &= 0xFFFFFF7F;
                    this.uboard_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasBatLife() {
                    return ((this.bitField0_ & 0x100) != 0);
                }

                public int getBatLife() {
                    return this.batLife_;
                }

                public Builder setBatLife(int value) {
                    this.bitField0_ |= 0x100;
                    this.batLife_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearBatLife() {
                    this.bitField0_ &= 0xFFFFFEFF;
                    this.batLife_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasSumAcc() {
                    return ((this.bitField0_ & 0x200) != 0);
                }

                public int getSumAcc() {
                    return this.sumAcc_;
                }

                public Builder setSumAcc(int value) {
                    this.bitField0_ |= 0x200;
                    this.sumAcc_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearSumAcc() {
                    this.bitField0_ &= 0xFFFFFDFF;
                    this.sumAcc_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasPhone() {
                    return ((this.bitField0_ & 0x400) != 0);
                }

                public ByteString getPhone() {
                    return this.phone_;
                }

                public Builder setPhone(ByteString value) {
                    if (value == null)
                        throw new NullPointerException();
                    this.bitField0_ |= 0x400;
                    this.phone_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearPhone() {
                    this.bitField0_ &= 0xFFFFFBFF;
                    this.phone_ = OmnicommMessageOuterClass.OmnicommMessage.General.getDefaultInstance().getPhone();
                    onChanged();
                    return this;
                }

                public boolean hasAmtrX() {
                    return ((this.bitField0_ & 0x800) != 0);
                }

                public int getAmtrX() {
                    return this.amtrX_;
                }

                public Builder setAmtrX(int value) {
                    this.bitField0_ |= 0x800;
                    this.amtrX_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearAmtrX() {
                    this.bitField0_ &= 0xFFFFF7FF;
                    this.amtrX_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasAmtrY() {
                    return ((this.bitField0_ & 0x1000) != 0);
                }

                public int getAmtrY() {
                    return this.amtrY_;
                }

                public Builder setAmtrY(int value) {
                    this.bitField0_ |= 0x1000;
                    this.amtrY_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearAmtrY() {
                    this.bitField0_ &= 0xFFFFEFFF;
                    this.amtrY_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasAmtrZ() {
                    return ((this.bitField0_ & 0x2000) != 0);
                }

                public int getAmtrZ() {
                    return this.amtrZ_;
                }

                public Builder setAmtrZ(int value) {
                    this.bitField0_ |= 0x2000;
                    this.amtrZ_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearAmtrZ() {
                    this.bitField0_ &= 0xFFFFDFFF;
                    this.amtrZ_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasTachoCardID() {
                    return ((this.bitField0_ & 0x4000) != 0);
                }

                public ByteString getTachoCardID() {
                    return this.tachoCardID_;
                }

                public Builder setTachoCardID(ByteString value) {
                    if (value == null)
                        throw new NullPointerException();
                    this.bitField0_ |= 0x4000;
                    this.tachoCardID_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearTachoCardID() {
                    this.bitField0_ &= 0xFFFFBFFF;
                    this.tachoCardID_ = OmnicommMessageOuterClass.OmnicommMessage.General.getDefaultInstance().getTachoCardID();
                    onChanged();
                    return this;
                }

                public boolean hasAccelStatus() {
                    return ((this.bitField0_ & 0x8000) != 0);
                }

                public int getAccelStatus() {
                    return this.accelStatus_;
                }

                public Builder setAccelStatus(int value) {
                    this.bitField0_ |= 0x8000;
                    this.accelStatus_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearAccelStatus() {
                    this.bitField0_ &= 0xFFFF7FFF;
                    this.accelStatus_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasHoursKoef() {
                    return ((this.bitField0_ & 0x10000) != 0);
                }

                public int getHoursKoef() {
                    return this.hoursKoef_;
                }

                public Builder setHoursKoef(int value) {
                    this.bitField0_ |= 0x10000;
                    this.hoursKoef_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearHoursKoef() {
                    this.bitField0_ &= 0xFFFEFFFF;
                    this.hoursKoef_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasGsmSignalQuality() {
                    return ((this.bitField0_ & 0x20000) != 0);
                }

                public int getGsmSignalQuality() {
                    return this.gsmSignalQuality_;
                }

                public Builder setGsmSignalQuality(int value) {
                    this.bitField0_ |= 0x20000;
                    this.gsmSignalQuality_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearGsmSignalQuality() {
                    this.bitField0_ &= 0xFFFDFFFF;
                    this.gsmSignalQuality_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasWifiSignalQuality() {
                    return ((this.bitField0_ & 0x40000) != 0);
                }

                public int getWifiSignalQuality() {
                    return this.wifiSignalQuality_;
                }

                public Builder setWifiSignalQuality(int value) {
                    this.bitField0_ |= 0x40000;
                    this.wifiSignalQuality_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearWifiSignalQuality() {
                    this.bitField0_ &= 0xFFFBFFFF;
                    this.wifiSignalQuality_ = 0;
                    onChanged();
                    return this;
                }

                public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
                    return (Builder) super.setUnknownFields(unknownFields);
                }

                public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
                    return (Builder) super.mergeUnknownFields(unknownFields);
                }
            }

            private static final General DEFAULT_INSTANCE = new General();

            public static General getDefaultInstance() {
                return DEFAULT_INSTANCE;
            }

            @Deprecated
            public static final Parser<General> PARSER = (Parser<General>) new AbstractParser<General>() {
                public OmnicommMessageOuterClass.OmnicommMessage.General parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                    return new OmnicommMessageOuterClass.OmnicommMessage.General(input, extensionRegistry);
                }
            };

            public static Parser<General> parser() {
                return PARSER;
            }

            public Parser<General> getParserForType() {
                return PARSER;
            }

            public General getDefaultInstanceForType() {
                return DEFAULT_INSTANCE;
            }
        }

        public static final class Builder extends GeneratedMessageV3.Builder<General.Builder> implements GeneralOrBuilder {
            private int bitField0_;

            private int time_;

            private int iDFAS_;

            private ByteString iDDrv_;

            private int fLG_;

            private int mileage_;

            private int vImp_;

            private int tImp_;

            private int uboard_;

            private int batLife_;

            private int sumAcc_;

            private ByteString phone_;

            private int amtrX_;

            private int amtrY_;

            private int amtrZ_;

            private ByteString tachoCardID_;

            private int accelStatus_;

            private int hoursKoef_;

            private int gsmSignalQuality_;

            private int wifiSignalQuality_;

            public static final Descriptors.Descriptor getDescriptor() {
                return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_General_descriptor;
            }

            protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
                return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_General_fieldAccessorTable.ensureFieldAccessorsInitialized(OmnicommMessageOuterClass.OmnicommMessage.General.class, Builder.class);
            }

            private Builder() {
                this.iDDrv_ = ByteString.EMPTY;
                this.phone_ = ByteString.EMPTY;
                this.tachoCardID_ = ByteString.EMPTY;
                maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessageV3.BuilderParent parent) {
                super(parent);
                this.iDDrv_ = ByteString.EMPTY;
                this.phone_ = ByteString.EMPTY;
                this.tachoCardID_ = ByteString.EMPTY;
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (OmnicommMessageOuterClass.OmnicommMessage.General.alwaysUseFieldBuilders) ;
            }

            public Builder clear() {
                super.clear();
                this.time_ = 0;
                this.bitField0_ &= 0xFFFFFFFE;
                this.iDFAS_ = 0;
                this.bitField0_ &= 0xFFFFFFFD;
                this.iDDrv_ = ByteString.EMPTY;
                this.bitField0_ &= 0xFFFFFFFB;
                this.fLG_ = 0;
                this.bitField0_ &= 0xFFFFFFF7;
                this.mileage_ = 0;
                this.bitField0_ &= 0xFFFFFFEF;
                this.vImp_ = 0;
                this.bitField0_ &= 0xFFFFFFDF;
                this.tImp_ = 0;
                this.bitField0_ &= 0xFFFFFFBF;
                this.uboard_ = 0;
                this.bitField0_ &= 0xFFFFFF7F;
                this.batLife_ = 0;
                this.bitField0_ &= 0xFFFFFEFF;
                this.sumAcc_ = 0;
                this.bitField0_ &= 0xFFFFFDFF;
                this.phone_ = ByteString.EMPTY;
                this.bitField0_ &= 0xFFFFFBFF;
                this.amtrX_ = 0;
                this.bitField0_ &= 0xFFFFF7FF;
                this.amtrY_ = 0;
                this.bitField0_ &= 0xFFFFEFFF;
                this.amtrZ_ = 0;
                this.bitField0_ &= 0xFFFFDFFF;
                this.tachoCardID_ = ByteString.EMPTY;
                this.bitField0_ &= 0xFFFFBFFF;
                this.accelStatus_ = 0;
                this.bitField0_ &= 0xFFFF7FFF;
                this.hoursKoef_ = 0;
                this.bitField0_ &= 0xFFFEFFFF;
                this.gsmSignalQuality_ = 0;
                this.bitField0_ &= 0xFFFDFFFF;
                this.wifiSignalQuality_ = 0;
                this.bitField0_ &= 0xFFFBFFFF;
                return this;
            }

            public Descriptors.Descriptor getDescriptorForType() {
                return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_General_descriptor;
            }

            public OmnicommMessageOuterClass.OmnicommMessage.General getDefaultInstanceForType() {
                return OmnicommMessageOuterClass.OmnicommMessage.General.getDefaultInstance();
            }

            public OmnicommMessageOuterClass.OmnicommMessage.General build() {
                OmnicommMessageOuterClass.OmnicommMessage.General result = buildPartial();
                if (!result.isInitialized())
                    throw newUninitializedMessageException(result);
                return result;
            }

            public OmnicommMessageOuterClass.OmnicommMessage.General buildPartial() {
                OmnicommMessageOuterClass.OmnicommMessage.General result = new OmnicommMessageOuterClass.OmnicommMessage.General(this);
                int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) != 0) {
                    result.time_ = this.time_;
                    to_bitField0_ |= 0x1;
                }
                if ((from_bitField0_ & 0x2) != 0) {
                    result.iDFAS_ = this.iDFAS_;
                    to_bitField0_ |= 0x2;
                }
                if ((from_bitField0_ & 0x4) != 0)
                    to_bitField0_ |= 0x4;
                result.iDDrv_ = this.iDDrv_;
                if ((from_bitField0_ & 0x8) != 0) {
                    result.fLG_ = this.fLG_;
                    to_bitField0_ |= 0x8;
                }
                if ((from_bitField0_ & 0x10) != 0) {
                    result.mileage_ = this.mileage_;
                    to_bitField0_ |= 0x10;
                }
                if ((from_bitField0_ & 0x20) != 0) {
                    result.vImp_ = this.vImp_;
                    to_bitField0_ |= 0x20;
                }
                if ((from_bitField0_ & 0x40) != 0) {
                    result.tImp_ = this.tImp_;
                    to_bitField0_ |= 0x40;
                }
                if ((from_bitField0_ & 0x80) != 0) {
                    result.uboard_ = this.uboard_;
                    to_bitField0_ |= 0x80;
                }
                if ((from_bitField0_ & 0x100) != 0) {
                    result.batLife_ = this.batLife_;
                    to_bitField0_ |= 0x100;
                }
                if ((from_bitField0_ & 0x200) != 0) {
                    result.sumAcc_ = this.sumAcc_;
                    to_bitField0_ |= 0x200;
                }
                if ((from_bitField0_ & 0x400) != 0)
                    to_bitField0_ |= 0x400;
                result.phone_ = this.phone_;
                if ((from_bitField0_ & 0x800) != 0) {
                    result.amtrX_ = this.amtrX_;
                    to_bitField0_ |= 0x800;
                }
                if ((from_bitField0_ & 0x1000) != 0) {
                    result.amtrY_ = this.amtrY_;
                    to_bitField0_ |= 0x1000;
                }
                if ((from_bitField0_ & 0x2000) != 0) {
                    result.amtrZ_ = this.amtrZ_;
                    to_bitField0_ |= 0x2000;
                }
                if ((from_bitField0_ & 0x4000) != 0)
                    to_bitField0_ |= 0x4000;
                result.tachoCardID_ = this.tachoCardID_;
                if ((from_bitField0_ & 0x8000) != 0) {
                    result.accelStatus_ = this.accelStatus_;
                    to_bitField0_ |= 0x8000;
                }
                if ((from_bitField0_ & 0x10000) != 0) {
                    result.hoursKoef_ = this.hoursKoef_;
                    to_bitField0_ |= 0x10000;
                }
                if ((from_bitField0_ & 0x20000) != 0) {
                    result.gsmSignalQuality_ = this.gsmSignalQuality_;
                    to_bitField0_ |= 0x20000;
                }
                if ((from_bitField0_ & 0x40000) != 0) {
                    result.wifiSignalQuality_ = this.wifiSignalQuality_;
                    to_bitField0_ |= 0x40000;
                }
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }

            public Builder setField(Descriptors.FieldDescriptor field, Object value) {
                return (Builder) super.setField(field, value);
            }

            public Builder clearField(Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }

            public Builder clearOneof(Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }

            public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }

            public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }

            public Builder mergeFrom(Message other) {
                if (other instanceof OmnicommMessageOuterClass.OmnicommMessage.General)
                    return mergeFrom((OmnicommMessageOuterClass.OmnicommMessage.General) other);
                super.mergeFrom(other);
                return this;
            }

            public Builder mergeFrom(OmnicommMessageOuterClass.OmnicommMessage.General other) {
                if (other == OmnicommMessageOuterClass.OmnicommMessage.General.getDefaultInstance())
                    return this;
                if (other.hasTime())
                    setTime(other.getTime());
                if (other.hasIDFAS())
                    setIDFAS(other.getIDFAS());
                if (other.hasIDDrv())
                    setIDDrv(other.getIDDrv());
                if (other.hasFLG())
                    setFLG(other.getFLG());
                if (other.hasMileage())
                    setMileage(other.getMileage());
                if (other.hasVImp())
                    setVImp(other.getVImp());
                if (other.hasTImp())
                    setTImp(other.getTImp());
                if (other.hasUboard())
                    setUboard(other.getUboard());
                if (other.hasBatLife())
                    setBatLife(other.getBatLife());
                if (other.hasSumAcc())
                    setSumAcc(other.getSumAcc());
                if (other.hasPhone())
                    setPhone(other.getPhone());
                if (other.hasAmtrX())
                    setAmtrX(other.getAmtrX());
                if (other.hasAmtrY())
                    setAmtrY(other.getAmtrY());
                if (other.hasAmtrZ())
                    setAmtrZ(other.getAmtrZ());
                if (other.hasTachoCardID())
                    setTachoCardID(other.getTachoCardID());
                if (other.hasAccelStatus())
                    setAccelStatus(other.getAccelStatus());
                if (other.hasHoursKoef())
                    setHoursKoef(other.getHoursKoef());
                if (other.hasGsmSignalQuality())
                    setGsmSignalQuality(other.getGsmSignalQuality());
                if (other.hasWifiSignalQuality())
                    setWifiSignalQuality(other.getWifiSignalQuality());
                mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                OmnicommMessageOuterClass.OmnicommMessage.General parsedMessage = null;
                try {
                    parsedMessage = (OmnicommMessageOuterClass.OmnicommMessage.General) OmnicommMessageOuterClass.OmnicommMessage.General.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (OmnicommMessageOuterClass.OmnicommMessage.General) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null)
                        mergeFrom(parsedMessage);
                }
                return this;
            }

            public boolean hasTime() {
                return ((this.bitField0_ & 0x1) != 0);
            }

            public int getTime() {
                return this.time_;
            }

            public Builder setTime(int value) {
                this.bitField0_ |= 0x1;
                this.time_ = value;
                onChanged();
                return this;
            }

            public Builder clearTime() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.time_ = 0;
                onChanged();
                return this;
            }

            public boolean hasIDFAS() {
                return ((this.bitField0_ & 0x2) != 0);
            }

            public int getIDFAS() {
                return this.iDFAS_;
            }

            public Builder setIDFAS(int value) {
                this.bitField0_ |= 0x2;
                this.iDFAS_ = value;
                onChanged();
                return this;
            }

            public Builder clearIDFAS() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.iDFAS_ = 0;
                onChanged();
                return this;
            }

            public boolean hasIDDrv() {
                return ((this.bitField0_ & 0x4) != 0);
            }

            public ByteString getIDDrv() {
                return this.iDDrv_;
            }

            public Builder setIDDrv(ByteString value) {
                if (value == null)
                    throw new NullPointerException();
                this.bitField0_ |= 0x4;
                this.iDDrv_ = value;
                onChanged();
                return this;
            }

            public Builder clearIDDrv() {
                this.bitField0_ &= 0xFFFFFFFB;
                this.iDDrv_ = OmnicommMessageOuterClass.OmnicommMessage.General.getDefaultInstance().getIDDrv();
                onChanged();
                return this;
            }

            public boolean hasFLG() {
                return ((this.bitField0_ & 0x8) != 0);
            }

            public int getFLG() {
                return this.fLG_;
            }

            public Builder setFLG(int value) {
                this.bitField0_ |= 0x8;
                this.fLG_ = value;
                onChanged();
                return this;
            }

            public Builder clearFLG() {
                this.bitField0_ &= 0xFFFFFFF7;
                this.fLG_ = 0;
                onChanged();
                return this;
            }

            public boolean hasMileage() {
                return ((this.bitField0_ & 0x10) != 0);
            }

            public int getMileage() {
                return this.mileage_;
            }

            public Builder setMileage(int value) {
                this.bitField0_ |= 0x10;
                this.mileage_ = value;
                onChanged();
                return this;
            }

            public Builder clearMileage() {
                this.bitField0_ &= 0xFFFFFFEF;
                this.mileage_ = 0;
                onChanged();
                return this;
            }

            public boolean hasVImp() {
                return ((this.bitField0_ & 0x20) != 0);
            }

            public int getVImp() {
                return this.vImp_;
            }

            public Builder setVImp(int value) {
                this.bitField0_ |= 0x20;
                this.vImp_ = value;
                onChanged();
                return this;
            }

            public Builder clearVImp() {
                this.bitField0_ &= 0xFFFFFFDF;
                this.vImp_ = 0;
                onChanged();
                return this;
            }

            public boolean hasTImp() {
                return ((this.bitField0_ & 0x40) != 0);
            }

            public int getTImp() {
                return this.tImp_;
            }

            public Builder setTImp(int value) {
                this.bitField0_ |= 0x40;
                this.tImp_ = value;
                onChanged();
                return this;
            }

            public Builder clearTImp() {
                this.bitField0_ &= 0xFFFFFFBF;
                this.tImp_ = 0;
                onChanged();
                return this;
            }

            public boolean hasUboard() {
                return ((this.bitField0_ & 0x80) != 0);
            }

            public int getUboard() {
                return this.uboard_;
            }

            public Builder setUboard(int value) {
                this.bitField0_ |= 0x80;
                this.uboard_ = value;
                onChanged();
                return this;
            }

            public Builder clearUboard() {
                this.bitField0_ &= 0xFFFFFF7F;
                this.uboard_ = 0;
                onChanged();
                return this;
            }

            public boolean hasBatLife() {
                return ((this.bitField0_ & 0x100) != 0);
            }

            public int getBatLife() {
                return this.batLife_;
            }

            public Builder setBatLife(int value) {
                this.bitField0_ |= 0x100;
                this.batLife_ = value;
                onChanged();
                return this;
            }

            public Builder clearBatLife() {
                this.bitField0_ &= 0xFFFFFEFF;
                this.batLife_ = 0;
                onChanged();
                return this;
            }

            public boolean hasSumAcc() {
                return ((this.bitField0_ & 0x200) != 0);
            }

            public int getSumAcc() {
                return this.sumAcc_;
            }

            public Builder setSumAcc(int value) {
                this.bitField0_ |= 0x200;
                this.sumAcc_ = value;
                onChanged();
                return this;
            }

            public Builder clearSumAcc() {
                this.bitField0_ &= 0xFFFFFDFF;
                this.sumAcc_ = 0;
                onChanged();
                return this;
            }

            public boolean hasPhone() {
                return ((this.bitField0_ & 0x400) != 0);
            }

            public ByteString getPhone() {
                return this.phone_;
            }

            public Builder setPhone(ByteString value) {
                if (value == null)
                    throw new NullPointerException();
                this.bitField0_ |= 0x400;
                this.phone_ = value;
                onChanged();
                return this;
            }

            public Builder clearPhone() {
                this.bitField0_ &= 0xFFFFFBFF;
                this.phone_ = OmnicommMessageOuterClass.OmnicommMessage.General.getDefaultInstance().getPhone();
                onChanged();
                return this;
            }

            public boolean hasAmtrX() {
                return ((this.bitField0_ & 0x800) != 0);
            }

            public int getAmtrX() {
                return this.amtrX_;
            }

            public Builder setAmtrX(int value) {
                this.bitField0_ |= 0x800;
                this.amtrX_ = value;
                onChanged();
                return this;
            }

            public Builder clearAmtrX() {
                this.bitField0_ &= 0xFFFFF7FF;
                this.amtrX_ = 0;
                onChanged();
                return this;
            }

            public boolean hasAmtrY() {
                return ((this.bitField0_ & 0x1000) != 0);
            }

            public int getAmtrY() {
                return this.amtrY_;
            }

            public Builder setAmtrY(int value) {
                this.bitField0_ |= 0x1000;
                this.amtrY_ = value;
                onChanged();
                return this;
            }

            public Builder clearAmtrY() {
                this.bitField0_ &= 0xFFFFEFFF;
                this.amtrY_ = 0;
                onChanged();
                return this;
            }

            public boolean hasAmtrZ() {
                return ((this.bitField0_ & 0x2000) != 0);
            }

            public int getAmtrZ() {
                return this.amtrZ_;
            }

            public Builder setAmtrZ(int value) {
                this.bitField0_ |= 0x2000;
                this.amtrZ_ = value;
                onChanged();
                return this;
            }

            public Builder clearAmtrZ() {
                this.bitField0_ &= 0xFFFFDFFF;
                this.amtrZ_ = 0;
                onChanged();
                return this;
            }

            public boolean hasTachoCardID() {
                return ((this.bitField0_ & 0x4000) != 0);
            }

            public ByteString getTachoCardID() {
                return this.tachoCardID_;
            }

            public Builder setTachoCardID(ByteString value) {
                if (value == null)
                    throw new NullPointerException();
                this.bitField0_ |= 0x4000;
                this.tachoCardID_ = value;
                onChanged();
                return this;
            }

            public Builder clearTachoCardID() {
                this.bitField0_ &= 0xFFFFBFFF;
                this.tachoCardID_ = OmnicommMessageOuterClass.OmnicommMessage.General.getDefaultInstance().getTachoCardID();
                onChanged();
                return this;
            }

            public boolean hasAccelStatus() {
                return ((this.bitField0_ & 0x8000) != 0);
            }

            public int getAccelStatus() {
                return this.accelStatus_;
            }

            public Builder setAccelStatus(int value) {
                this.bitField0_ |= 0x8000;
                this.accelStatus_ = value;
                onChanged();
                return this;
            }

            public Builder clearAccelStatus() {
                this.bitField0_ &= 0xFFFF7FFF;
                this.accelStatus_ = 0;
                onChanged();
                return this;
            }

            public boolean hasHoursKoef() {
                return ((this.bitField0_ & 0x10000) != 0);
            }

            public int getHoursKoef() {
                return this.hoursKoef_;
            }

            public Builder setHoursKoef(int value) {
                this.bitField0_ |= 0x10000;
                this.hoursKoef_ = value;
                onChanged();
                return this;
            }

            public Builder clearHoursKoef() {
                this.bitField0_ &= 0xFFFEFFFF;
                this.hoursKoef_ = 0;
                onChanged();
                return this;
            }

            public boolean hasGsmSignalQuality() {
                return ((this.bitField0_ & 0x20000) != 0);
            }

            public int getGsmSignalQuality() {
                return this.gsmSignalQuality_;
            }

            public Builder setGsmSignalQuality(int value) {
                this.bitField0_ |= 0x20000;
                this.gsmSignalQuality_ = value;
                onChanged();
                return this;
            }

            public Builder clearGsmSignalQuality() {
                this.bitField0_ &= 0xFFFDFFFF;
                this.gsmSignalQuality_ = 0;
                onChanged();
                return this;
            }

            public boolean hasWifiSignalQuality() {
                return ((this.bitField0_ & 0x40000) != 0);
            }

            public int getWifiSignalQuality() {
                return this.wifiSignalQuality_;
            }

            public Builder setWifiSignalQuality(int value) {
                this.bitField0_ |= 0x40000;
                this.wifiSignalQuality_ = value;
                onChanged();
                return this;
            }

            public Builder clearWifiSignalQuality() {
                this.bitField0_ &= 0xFFFBFFFF;
                this.wifiSignalQuality_ = 0;
                onChanged();
                return this;
            }

            public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
                return (Builder) super.setUnknownFields(unknownFields);
            }

            public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
                return (Builder) super.mergeUnknownFields(unknownFields);
            }
        }

        public static final class Photo extends GeneratedMessageV3 implements PhotoOrBuilder {
            private static final long serialVersionUID = 0L;

            private int bitField0_;

            public static final int POSBLK_FIELD_NUMBER = 1;

            private int pOSBLK_;

            public static final int SZPHOTO_FIELD_NUMBER = 2;

            private int sZPHOTO_;

            public static final int SIZEBLK_FIELD_NUMBER = 3;

            private int sIZEBLK_;

            public static final int IMGDAT_FIELD_NUMBER = 4;

            private ByteString iMGDAT_;

            public static final int IDPH_FIELD_NUMBER = 5;

            private int iDPH_;

            public static final int IMGSTAT_FIELD_NUMBER = 6;

            private int iMGSTAT_;

            private byte memoizedIsInitialized;

            private Photo(GeneratedMessageV3.Builder<?> builder) {
                super(builder);
                this.memoizedIsInitialized = -1;
            }

            private Photo() {
                this.memoizedIsInitialized = -1;
                this.iMGDAT_ = ByteString.EMPTY;
            }

            protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) {
                return new Photo();
            }

            public final UnknownFieldSet getUnknownFields() {
                return this.unknownFields;
            }

            private Photo(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                this();
                if (extensionRegistry == null)
                    throw new NullPointerException();
                int mutable_bitField0_ = 0;
                UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
                try {
                    boolean done = false;
                    while (!done) {
                        int tag = input.readTag();
                        switch (tag) {
                            case 0:
                                done = true;
                                continue;
                            case 8:
                                this.bitField0_ |= 0x1;
                                this.pOSBLK_ = input.readUInt32();
                                continue;
                            case 16:
                                this.bitField0_ |= 0x2;
                                this.sZPHOTO_ = input.readUInt32();
                                continue;
                            case 24:
                                this.bitField0_ |= 0x4;
                                this.sIZEBLK_ = input.readUInt32();
                                continue;
                            case 34:
                                this.bitField0_ |= 0x8;
                                this.iMGDAT_ = input.readBytes();
                                continue;
                            case 40:
                                this.bitField0_ |= 0x10;
                                this.iDPH_ = input.readUInt32();
                                continue;
                            case 48:
                                this.bitField0_ |= 0x20;
                                this.iMGSTAT_ = input.readUInt32();
                                continue;
                        }
                        if (!parseUnknownField(input, unknownFields, extensionRegistry, tag))
                            done = true;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e) {
                    throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this);
                } finally {
                    this.unknownFields = unknownFields.build();
                    makeExtensionsImmutable();
                }
            }

            public static final Descriptors.Descriptor getDescriptor() {
                return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Photo_descriptor;
            }

            protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
                return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Photo_fieldAccessorTable.ensureFieldAccessorsInitialized(Photo.class, Builder.class);
            }

            public boolean hasPOSBLK() {
                return ((this.bitField0_ & 0x1) != 0);
            }

            public int getPOSBLK() {
                return this.pOSBLK_;
            }

            public boolean hasSZPHOTO() {
                return ((this.bitField0_ & 0x2) != 0);
            }

            public int getSZPHOTO() {
                return this.sZPHOTO_;
            }

            public boolean hasSIZEBLK() {
                return ((this.bitField0_ & 0x4) != 0);
            }

            public int getSIZEBLK() {
                return this.sIZEBLK_;
            }

            public boolean hasIMGDAT() {
                return ((this.bitField0_ & 0x8) != 0);
            }

            public ByteString getIMGDAT() {
                return this.iMGDAT_;
            }

            public boolean hasIDPH() {
                return ((this.bitField0_ & 0x10) != 0);
            }

            public int getIDPH() {
                return this.iDPH_;
            }

            public boolean hasIMGSTAT() {
                return ((this.bitField0_ & 0x20) != 0);
            }

            public int getIMGSTAT() {
                return this.iMGSTAT_;
            }

            public final boolean isInitialized() {
                byte isInitialized = this.memoizedIsInitialized;
                if (isInitialized == 1)
                    return true;
                if (isInitialized == 0)
                    return false;
                this.memoizedIsInitialized = 1;
                return true;
            }

            public void writeTo(CodedOutputStream output) throws IOException {
                if ((this.bitField0_ & 0x1) != 0)
                    output.writeUInt32(1, this.pOSBLK_);
                if ((this.bitField0_ & 0x2) != 0)
                    output.writeUInt32(2, this.sZPHOTO_);
                if ((this.bitField0_ & 0x4) != 0)
                    output.writeUInt32(3, this.sIZEBLK_);
                if ((this.bitField0_ & 0x8) != 0)
                    output.writeBytes(4, this.iMGDAT_);
                if ((this.bitField0_ & 0x10) != 0)
                    output.writeUInt32(5, this.iDPH_);
                if ((this.bitField0_ & 0x20) != 0)
                    output.writeUInt32(6, this.iMGSTAT_);
                this.unknownFields.writeTo(output);
            }

            public int getSerializedSize() {
                int size = this.memoizedSize;
                if (size != -1)
                    return size;
                size = 0;
                if ((this.bitField0_ & 0x1) != 0)
                    size += CodedOutputStream.computeUInt32Size(1, this.pOSBLK_);
                if ((this.bitField0_ & 0x2) != 0)
                    size += CodedOutputStream.computeUInt32Size(2, this.sZPHOTO_);
                if ((this.bitField0_ & 0x4) != 0)
                    size += CodedOutputStream.computeUInt32Size(3, this.sIZEBLK_);
                if ((this.bitField0_ & 0x8) != 0)
                    size += CodedOutputStream.computeBytesSize(4, this.iMGDAT_);
                if ((this.bitField0_ & 0x10) != 0)
                    size += CodedOutputStream.computeUInt32Size(5, this.iDPH_);
                if ((this.bitField0_ & 0x20) != 0)
                    size += CodedOutputStream.computeUInt32Size(6, this.iMGSTAT_);
                size += this.unknownFields.getSerializedSize();
                this.memoizedSize = size;
                return size;
            }

            public boolean equals(Object obj) {
                if (obj == this)
                    return true;
                if (!(obj instanceof Photo))
                    return super.equals(obj);
                Photo other = (Photo) obj;
                if (hasPOSBLK() != other.hasPOSBLK())
                    return false;
                if (hasPOSBLK() && getPOSBLK() != other.getPOSBLK())
                    return false;
                if (hasSZPHOTO() != other.hasSZPHOTO())
                    return false;
                if (hasSZPHOTO() && getSZPHOTO() != other.getSZPHOTO())
                    return false;
                if (hasSIZEBLK() != other.hasSIZEBLK())
                    return false;
                if (hasSIZEBLK() && getSIZEBLK() != other.getSIZEBLK())
                    return false;
                if (hasIMGDAT() != other.hasIMGDAT())
                    return false;
                if (hasIMGDAT() && !getIMGDAT().equals(other.getIMGDAT()))
                    return false;
                if (hasIDPH() != other.hasIDPH())
                    return false;
                if (hasIDPH() && getIDPH() != other.getIDPH())
                    return false;
                if (hasIMGSTAT() != other.hasIMGSTAT())
                    return false;
                if (hasIMGSTAT() && getIMGSTAT() != other.getIMGSTAT())
                    return false;
                if (!this.unknownFields.equals(other.unknownFields))
                    return false;
                return true;
            }

            public int hashCode() {
                if (this.memoizedHashCode != 0)
                    return this.memoizedHashCode;
                int hash = 41;
                hash = 19 * hash + getDescriptor().hashCode();
                if (hasPOSBLK()) {
                    hash = 37 * hash + 1;
                    hash = 53 * hash + getPOSBLK();
                }
                if (hasSZPHOTO()) {
                    hash = 37 * hash + 2;
                    hash = 53 * hash + getSZPHOTO();
                }
                if (hasSIZEBLK()) {
                    hash = 37 * hash + 3;
                    hash = 53 * hash + getSIZEBLK();
                }
                if (hasIMGDAT()) {
                    hash = 37 * hash + 4;
                    hash = 53 * hash + getIMGDAT().hashCode();
                }
                if (hasIDPH()) {
                    hash = 37 * hash + 5;
                    hash = 53 * hash + getIDPH();
                }
                if (hasIMGSTAT()) {
                    hash = 37 * hash + 6;
                    hash = 53 * hash + getIMGSTAT();
                }
                hash = 29 * hash + this.unknownFields.hashCode();
                this.memoizedHashCode = hash;
                return hash;
            }

            public static Photo parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
                return (Photo) PARSER.parseFrom(data);
            }

            public static Photo parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return (Photo) PARSER.parseFrom(data, extensionRegistry);
            }

            public static Photo parseFrom(ByteString data) throws InvalidProtocolBufferException {
                return (Photo) PARSER.parseFrom(data);
            }

            public static Photo parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return (Photo) PARSER.parseFrom(data, extensionRegistry);
            }

            public static Photo parseFrom(byte[] data) throws InvalidProtocolBufferException {
                return (Photo) PARSER.parseFrom(data);
            }

            public static Photo parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return (Photo) PARSER.parseFrom(data, extensionRegistry);
            }

            public static Photo parseFrom(InputStream input) throws IOException {
                return (Photo) GeneratedMessageV3.parseWithIOException(PARSER, input);
            }

            public static Photo parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                return (Photo) GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
            }

            public static Photo parseDelimitedFrom(InputStream input) throws IOException {
                return (Photo) GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
            }

            public static Photo parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                return (Photo) GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
            }

            public static Photo parseFrom(CodedInputStream input) throws IOException {
                return (Photo) GeneratedMessageV3.parseWithIOException(PARSER, input);
            }

            public static Photo parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                return (Photo) GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
            }

            public Builder newBuilderForType() {
                return newBuilder();
            }

            public static Builder newBuilder() {
                return DEFAULT_INSTANCE.toBuilder();
            }

            public static Builder newBuilder(Photo prototype) {
                return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
            }

            public Builder toBuilder() {
                return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder()).mergeFrom(this);
            }

            protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
                Builder builder = new Builder(parent);
                return builder;
            }

            public static final class Builder extends GeneratedMessageV3.Builder<Builder> implements OmnicommMessageOuterClass.OmnicommMessage.PhotoOrBuilder {
                private int bitField0_;

                private int pOSBLK_;

                private int sZPHOTO_;

                private int sIZEBLK_;

                private ByteString iMGDAT_;

                private int iDPH_;

                private int iMGSTAT_;

                public static final Descriptors.Descriptor getDescriptor() {
                    return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Photo_descriptor;
                }

                protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
                    return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Photo_fieldAccessorTable.ensureFieldAccessorsInitialized(OmnicommMessageOuterClass.OmnicommMessage.Photo.class, Builder.class);
                }

                private Builder() {
                    this.iMGDAT_ = ByteString.EMPTY;
                    maybeForceBuilderInitialization();
                }

                private Builder(GeneratedMessageV3.BuilderParent parent) {
                    super(parent);
                    this.iMGDAT_ = ByteString.EMPTY;
                    maybeForceBuilderInitialization();
                }

                private void maybeForceBuilderInitialization() {
                    if (OmnicommMessageOuterClass.OmnicommMessage.Photo.alwaysUseFieldBuilders) ;
                }

                public Builder clear() {
                    super.clear();
                    this.pOSBLK_ = 0;
                    this.bitField0_ &= 0xFFFFFFFE;
                    this.sZPHOTO_ = 0;
                    this.bitField0_ &= 0xFFFFFFFD;
                    this.sIZEBLK_ = 0;
                    this.bitField0_ &= 0xFFFFFFFB;
                    this.iMGDAT_ = ByteString.EMPTY;
                    this.bitField0_ &= 0xFFFFFFF7;
                    this.iDPH_ = 0;
                    this.bitField0_ &= 0xFFFFFFEF;
                    this.iMGSTAT_ = 0;
                    this.bitField0_ &= 0xFFFFFFDF;
                    return this;
                }

                public Descriptors.Descriptor getDescriptorForType() {
                    return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Photo_descriptor;
                }

                public OmnicommMessageOuterClass.OmnicommMessage.Photo getDefaultInstanceForType() {
                    return OmnicommMessageOuterClass.OmnicommMessage.Photo.getDefaultInstance();
                }

                public OmnicommMessageOuterClass.OmnicommMessage.Photo build() {
                    OmnicommMessageOuterClass.OmnicommMessage.Photo result = buildPartial();
                    if (!result.isInitialized())
                        throw newUninitializedMessageException(result);
                    return result;
                }

                public OmnicommMessageOuterClass.OmnicommMessage.Photo buildPartial() {
                    OmnicommMessageOuterClass.OmnicommMessage.Photo result = new OmnicommMessageOuterClass.OmnicommMessage.Photo(this);
                    int from_bitField0_ = this.bitField0_;
                    int to_bitField0_ = 0;
                    if ((from_bitField0_ & 0x1) != 0) {
                        result.pOSBLK_ = this.pOSBLK_;
                        to_bitField0_ |= 0x1;
                    }
                    if ((from_bitField0_ & 0x2) != 0) {
                        result.sZPHOTO_ = this.sZPHOTO_;
                        to_bitField0_ |= 0x2;
                    }
                    if ((from_bitField0_ & 0x4) != 0) {
                        result.sIZEBLK_ = this.sIZEBLK_;
                        to_bitField0_ |= 0x4;
                    }
                    if ((from_bitField0_ & 0x8) != 0)
                        to_bitField0_ |= 0x8;
                    result.iMGDAT_ = this.iMGDAT_;
                    if ((from_bitField0_ & 0x10) != 0) {
                        result.iDPH_ = this.iDPH_;
                        to_bitField0_ |= 0x10;
                    }
                    if ((from_bitField0_ & 0x20) != 0) {
                        result.iMGSTAT_ = this.iMGSTAT_;
                        to_bitField0_ |= 0x20;
                    }
                    result.bitField0_ = to_bitField0_;
                    onBuilt();
                    return result;
                }

                public Builder clone() {
                    return (Builder) super.clone();
                }

                public Builder setField(Descriptors.FieldDescriptor field, Object value) {
                    return (Builder) super.setField(field, value);
                }

                public Builder clearField(Descriptors.FieldDescriptor field) {
                    return (Builder) super.clearField(field);
                }

                public Builder clearOneof(Descriptors.OneofDescriptor oneof) {
                    return (Builder) super.clearOneof(oneof);
                }

                public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
                    return (Builder) super.setRepeatedField(field, index, value);
                }

                public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
                    return (Builder) super.addRepeatedField(field, value);
                }

                public Builder mergeFrom(Message other) {
                    if (other instanceof OmnicommMessageOuterClass.OmnicommMessage.Photo)
                        return mergeFrom((OmnicommMessageOuterClass.OmnicommMessage.Photo) other);
                    super.mergeFrom(other);
                    return this;
                }

                public Builder mergeFrom(OmnicommMessageOuterClass.OmnicommMessage.Photo other) {
                    if (other == OmnicommMessageOuterClass.OmnicommMessage.Photo.getDefaultInstance())
                        return this;
                    if (other.hasPOSBLK())
                        setPOSBLK(other.getPOSBLK());
                    if (other.hasSZPHOTO())
                        setSZPHOTO(other.getSZPHOTO());
                    if (other.hasSIZEBLK())
                        setSIZEBLK(other.getSIZEBLK());
                    if (other.hasIMGDAT())
                        setIMGDAT(other.getIMGDAT());
                    if (other.hasIDPH())
                        setIDPH(other.getIDPH());
                    if (other.hasIMGSTAT())
                        setIMGSTAT(other.getIMGSTAT());
                    mergeUnknownFields(other.unknownFields);
                    onChanged();
                    return this;
                }

                public final boolean isInitialized() {
                    return true;
                }

                public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                    OmnicommMessageOuterClass.OmnicommMessage.Photo parsedMessage = null;
                    try {
                        parsedMessage = (OmnicommMessageOuterClass.OmnicommMessage.Photo) OmnicommMessageOuterClass.OmnicommMessage.Photo.PARSER.parsePartialFrom(input, extensionRegistry);
                    } catch (InvalidProtocolBufferException e) {
                        parsedMessage = (OmnicommMessageOuterClass.OmnicommMessage.Photo) e.getUnfinishedMessage();
                        throw e.unwrapIOException();
                    } finally {
                        if (parsedMessage != null)
                            mergeFrom(parsedMessage);
                    }
                    return this;
                }

                public boolean hasPOSBLK() {
                    return ((this.bitField0_ & 0x1) != 0);
                }

                public int getPOSBLK() {
                    return this.pOSBLK_;
                }

                public Builder setPOSBLK(int value) {
                    this.bitField0_ |= 0x1;
                    this.pOSBLK_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearPOSBLK() {
                    this.bitField0_ &= 0xFFFFFFFE;
                    this.pOSBLK_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasSZPHOTO() {
                    return ((this.bitField0_ & 0x2) != 0);
                }

                public int getSZPHOTO() {
                    return this.sZPHOTO_;
                }

                public Builder setSZPHOTO(int value) {
                    this.bitField0_ |= 0x2;
                    this.sZPHOTO_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearSZPHOTO() {
                    this.bitField0_ &= 0xFFFFFFFD;
                    this.sZPHOTO_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasSIZEBLK() {
                    return ((this.bitField0_ & 0x4) != 0);
                }

                public int getSIZEBLK() {
                    return this.sIZEBLK_;
                }

                public Builder setSIZEBLK(int value) {
                    this.bitField0_ |= 0x4;
                    this.sIZEBLK_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearSIZEBLK() {
                    this.bitField0_ &= 0xFFFFFFFB;
                    this.sIZEBLK_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasIMGDAT() {
                    return ((this.bitField0_ & 0x8) != 0);
                }

                public ByteString getIMGDAT() {
                    return this.iMGDAT_;
                }

                public Builder setIMGDAT(ByteString value) {
                    if (value == null)
                        throw new NullPointerException();
                    this.bitField0_ |= 0x8;
                    this.iMGDAT_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearIMGDAT() {
                    this.bitField0_ &= 0xFFFFFFF7;
                    this.iMGDAT_ = OmnicommMessageOuterClass.OmnicommMessage.Photo.getDefaultInstance().getIMGDAT();
                    onChanged();
                    return this;
                }

                public boolean hasIDPH() {
                    return ((this.bitField0_ & 0x10) != 0);
                }

                public int getIDPH() {
                    return this.iDPH_;
                }

                public Builder setIDPH(int value) {
                    this.bitField0_ |= 0x10;
                    this.iDPH_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearIDPH() {
                    this.bitField0_ &= 0xFFFFFFEF;
                    this.iDPH_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasIMGSTAT() {
                    return ((this.bitField0_ & 0x20) != 0);
                }

                public int getIMGSTAT() {
                    return this.iMGSTAT_;
                }

                public Builder setIMGSTAT(int value) {
                    this.bitField0_ |= 0x20;
                    this.iMGSTAT_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearIMGSTAT() {
                    this.bitField0_ &= 0xFFFFFFDF;
                    this.iMGSTAT_ = 0;
                    onChanged();
                    return this;
                }

                public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
                    return (Builder) super.setUnknownFields(unknownFields);
                }

                public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
                    return (Builder) super.mergeUnknownFields(unknownFields);
                }
            }

            private static final Photo DEFAULT_INSTANCE = new Photo();

            public static Photo getDefaultInstance() {
                return DEFAULT_INSTANCE;
            }

            @Deprecated
            public static final Parser<Photo> PARSER = (Parser<Photo>) new AbstractParser<Photo>() {
                public OmnicommMessageOuterClass.OmnicommMessage.Photo parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                    return new OmnicommMessageOuterClass.OmnicommMessage.Photo(input, extensionRegistry);
                }
            };

            public static Parser<Photo> parser() {
                return PARSER;
            }

            public Parser<Photo> getParserForType() {
                return PARSER;
            }

            public Photo getDefaultInstanceForType() {
                return DEFAULT_INSTANCE;
            }
        }

        public static final class Builder extends GeneratedMessageV3.Builder<Photo.Builder> implements PhotoOrBuilder {
            private int bitField0_;

            private int pOSBLK_;

            private int sZPHOTO_;

            private int sIZEBLK_;

            private ByteString iMGDAT_;

            private int iDPH_;

            private int iMGSTAT_;

            public static final Descriptors.Descriptor getDescriptor() {
                return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Photo_descriptor;
            }

            protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
                return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Photo_fieldAccessorTable.ensureFieldAccessorsInitialized(OmnicommMessageOuterClass.OmnicommMessage.Photo.class, Builder.class);
            }

            private Builder() {
                this.iMGDAT_ = ByteString.EMPTY;
                maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessageV3.BuilderParent parent) {
                super(parent);
                this.iMGDAT_ = ByteString.EMPTY;
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (OmnicommMessageOuterClass.OmnicommMessage.Photo.alwaysUseFieldBuilders) ;
            }

            public Builder clear() {
                super.clear();
                this.pOSBLK_ = 0;
                this.bitField0_ &= 0xFFFFFFFE;
                this.sZPHOTO_ = 0;
                this.bitField0_ &= 0xFFFFFFFD;
                this.sIZEBLK_ = 0;
                this.bitField0_ &= 0xFFFFFFFB;
                this.iMGDAT_ = ByteString.EMPTY;
                this.bitField0_ &= 0xFFFFFFF7;
                this.iDPH_ = 0;
                this.bitField0_ &= 0xFFFFFFEF;
                this.iMGSTAT_ = 0;
                this.bitField0_ &= 0xFFFFFFDF;
                return this;
            }

            public Descriptors.Descriptor getDescriptorForType() {
                return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Photo_descriptor;
            }

            public OmnicommMessageOuterClass.OmnicommMessage.Photo getDefaultInstanceForType() {
                return OmnicommMessageOuterClass.OmnicommMessage.Photo.getDefaultInstance();
            }

            public OmnicommMessageOuterClass.OmnicommMessage.Photo build() {
                OmnicommMessageOuterClass.OmnicommMessage.Photo result = buildPartial();
                if (!result.isInitialized())
                    throw newUninitializedMessageException(result);
                return result;
            }

            public OmnicommMessageOuterClass.OmnicommMessage.Photo buildPartial() {
                OmnicommMessageOuterClass.OmnicommMessage.Photo result = new OmnicommMessageOuterClass.OmnicommMessage.Photo(this);
                int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) != 0) {
                    result.pOSBLK_ = this.pOSBLK_;
                    to_bitField0_ |= 0x1;
                }
                if ((from_bitField0_ & 0x2) != 0) {
                    result.sZPHOTO_ = this.sZPHOTO_;
                    to_bitField0_ |= 0x2;
                }
                if ((from_bitField0_ & 0x4) != 0) {
                    result.sIZEBLK_ = this.sIZEBLK_;
                    to_bitField0_ |= 0x4;
                }
                if ((from_bitField0_ & 0x8) != 0)
                    to_bitField0_ |= 0x8;
                result.iMGDAT_ = this.iMGDAT_;
                if ((from_bitField0_ & 0x10) != 0) {
                    result.iDPH_ = this.iDPH_;
                    to_bitField0_ |= 0x10;
                }
                if ((from_bitField0_ & 0x20) != 0) {
                    result.iMGSTAT_ = this.iMGSTAT_;
                    to_bitField0_ |= 0x20;
                }
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }

            public Builder setField(Descriptors.FieldDescriptor field, Object value) {
                return (Builder) super.setField(field, value);
            }

            public Builder clearField(Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }

            public Builder clearOneof(Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }

            public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }

            public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }

            public Builder mergeFrom(Message other) {
                if (other instanceof OmnicommMessageOuterClass.OmnicommMessage.Photo)
                    return mergeFrom((OmnicommMessageOuterClass.OmnicommMessage.Photo) other);
                super.mergeFrom(other);
                return this;
            }

            public Builder mergeFrom(OmnicommMessageOuterClass.OmnicommMessage.Photo other) {
                if (other == OmnicommMessageOuterClass.OmnicommMessage.Photo.getDefaultInstance())
                    return this;
                if (other.hasPOSBLK())
                    setPOSBLK(other.getPOSBLK());
                if (other.hasSZPHOTO())
                    setSZPHOTO(other.getSZPHOTO());
                if (other.hasSIZEBLK())
                    setSIZEBLK(other.getSIZEBLK());
                if (other.hasIMGDAT())
                    setIMGDAT(other.getIMGDAT());
                if (other.hasIDPH())
                    setIDPH(other.getIDPH());
                if (other.hasIMGSTAT())
                    setIMGSTAT(other.getIMGSTAT());
                mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                OmnicommMessageOuterClass.OmnicommMessage.Photo parsedMessage = null;
                try {
                    parsedMessage = (OmnicommMessageOuterClass.OmnicommMessage.Photo) OmnicommMessageOuterClass.OmnicommMessage.Photo.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (OmnicommMessageOuterClass.OmnicommMessage.Photo) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null)
                        mergeFrom(parsedMessage);
                }
                return this;
            }

            public boolean hasPOSBLK() {
                return ((this.bitField0_ & 0x1) != 0);
            }

            public int getPOSBLK() {
                return this.pOSBLK_;
            }

            public Builder setPOSBLK(int value) {
                this.bitField0_ |= 0x1;
                this.pOSBLK_ = value;
                onChanged();
                return this;
            }

            public Builder clearPOSBLK() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.pOSBLK_ = 0;
                onChanged();
                return this;
            }

            public boolean hasSZPHOTO() {
                return ((this.bitField0_ & 0x2) != 0);
            }

            public int getSZPHOTO() {
                return this.sZPHOTO_;
            }

            public Builder setSZPHOTO(int value) {
                this.bitField0_ |= 0x2;
                this.sZPHOTO_ = value;
                onChanged();
                return this;
            }

            public Builder clearSZPHOTO() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.sZPHOTO_ = 0;
                onChanged();
                return this;
            }

            public boolean hasSIZEBLK() {
                return ((this.bitField0_ & 0x4) != 0);
            }

            public int getSIZEBLK() {
                return this.sIZEBLK_;
            }

            public Builder setSIZEBLK(int value) {
                this.bitField0_ |= 0x4;
                this.sIZEBLK_ = value;
                onChanged();
                return this;
            }

            public Builder clearSIZEBLK() {
                this.bitField0_ &= 0xFFFFFFFB;
                this.sIZEBLK_ = 0;
                onChanged();
                return this;
            }

            public boolean hasIMGDAT() {
                return ((this.bitField0_ & 0x8) != 0);
            }

            public ByteString getIMGDAT() {
                return this.iMGDAT_;
            }

            public Builder setIMGDAT(ByteString value) {
                if (value == null)
                    throw new NullPointerException();
                this.bitField0_ |= 0x8;
                this.iMGDAT_ = value;
                onChanged();
                return this;
            }

            public Builder clearIMGDAT() {
                this.bitField0_ &= 0xFFFFFFF7;
                this.iMGDAT_ = OmnicommMessageOuterClass.OmnicommMessage.Photo.getDefaultInstance().getIMGDAT();
                onChanged();
                return this;
            }

            public boolean hasIDPH() {
                return ((this.bitField0_ & 0x10) != 0);
            }

            public int getIDPH() {
                return this.iDPH_;
            }

            public Builder setIDPH(int value) {
                this.bitField0_ |= 0x10;
                this.iDPH_ = value;
                onChanged();
                return this;
            }

            public Builder clearIDPH() {
                this.bitField0_ &= 0xFFFFFFEF;
                this.iDPH_ = 0;
                onChanged();
                return this;
            }

            public boolean hasIMGSTAT() {
                return ((this.bitField0_ & 0x20) != 0);
            }

            public int getIMGSTAT() {
                return this.iMGSTAT_;
            }

            public Builder setIMGSTAT(int value) {
                this.bitField0_ |= 0x20;
                this.iMGSTAT_ = value;
                onChanged();
                return this;
            }

            public Builder clearIMGSTAT() {
                this.bitField0_ &= 0xFFFFFFDF;
                this.iMGSTAT_ = 0;
                onChanged();
                return this;
            }

            public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
                return (Builder) super.setUnknownFields(unknownFields);
            }

            public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
                return (Builder) super.mergeUnknownFields(unknownFields);
            }
        }

        public static final class NAV extends GeneratedMessageV3 implements NAVOrBuilder {
            private static final long serialVersionUID = 0L;

            private int bitField0_;

            public static final int LAT_FIELD_NUMBER = 1;

            private int lAT_;

            public static final int LON_FIELD_NUMBER = 2;

            private int lON_;

            public static final int GPSVEL_FIELD_NUMBER = 3;

            private int gPSVel_;

            public static final int GPSDIR_FIELD_NUMBER = 4;

            private int gPSDir_;

            public static final int GPSNSAT_FIELD_NUMBER = 5;

            private int gPSNSat_;

            public static final int GPSALT_FIELD_NUMBER = 6;

            private int gPSAlt_;

            public static final int GPSTIME_FIELD_NUMBER = 7;

            private int gPSTime_;

            private byte memoizedIsInitialized;

            private NAV(GeneratedMessageV3.Builder<?> builder) {
                super(builder);
                this.memoizedIsInitialized = -1;
            }

            private NAV() {
                this.memoizedIsInitialized = -1;
            }

            protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) {
                return new NAV();
            }

            public final UnknownFieldSet getUnknownFields() {
                return this.unknownFields;
            }

            private NAV(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                this();
                if (extensionRegistry == null)
                    throw new NullPointerException();
                int mutable_bitField0_ = 0;
                UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
                try {
                    boolean done = false;
                    while (!done) {
                        int tag = input.readTag();
                        switch (tag) {
                            case 0:
                                done = true;
                                continue;
                            case 8:
                                this.bitField0_ |= 0x1;
                                this.lAT_ = input.readSInt32();
                                continue;
                            case 16:
                                this.bitField0_ |= 0x2;
                                this.lON_ = input.readSInt32();
                                continue;
                            case 24:
                                this.bitField0_ |= 0x4;
                                this.gPSVel_ = input.readUInt32();
                                continue;
                            case 32:
                                this.bitField0_ |= 0x8;
                                this.gPSDir_ = input.readUInt32();
                                continue;
                            case 40:
                                this.bitField0_ |= 0x10;
                                this.gPSNSat_ = input.readUInt32();
                                continue;
                            case 48:
                                this.bitField0_ |= 0x20;
                                this.gPSAlt_ = input.readSInt32();
                                continue;
                            case 56:
                                this.bitField0_ |= 0x40;
                                this.gPSTime_ = input.readUInt32();
                                continue;
                        }
                        if (!parseUnknownField(input, unknownFields, extensionRegistry, tag))
                            done = true;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e) {
                    throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this);
                } finally {
                    this.unknownFields = unknownFields.build();
                    makeExtensionsImmutable();
                }
            }

            public static final Descriptors.Descriptor getDescriptor() {
                return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_NAV_descriptor;
            }

            protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
                return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_NAV_fieldAccessorTable.ensureFieldAccessorsInitialized(NAV.class, Builder.class);
            }

            public boolean hasLAT() {
                return ((this.bitField0_ & 0x1) != 0);
            }

            public int getLAT() {
                return this.lAT_;
            }

            public boolean hasLON() {
                return ((this.bitField0_ & 0x2) != 0);
            }

            public int getLON() {
                return this.lON_;
            }

            public boolean hasGPSVel() {
                return ((this.bitField0_ & 0x4) != 0);
            }

            public int getGPSVel() {
                return this.gPSVel_;
            }

            public boolean hasGPSDir() {
                return ((this.bitField0_ & 0x8) != 0);
            }

            public int getGPSDir() {
                return this.gPSDir_;
            }

            public boolean hasGPSNSat() {
                return ((this.bitField0_ & 0x10) != 0);
            }

            public int getGPSNSat() {
                return this.gPSNSat_;
            }

            public boolean hasGPSAlt() {
                return ((this.bitField0_ & 0x20) != 0);
            }

            public int getGPSAlt() {
                return this.gPSAlt_;
            }

            public boolean hasGPSTime() {
                return ((this.bitField0_ & 0x40) != 0);
            }

            public int getGPSTime() {
                return this.gPSTime_;
            }

            public final boolean isInitialized() {
                byte isInitialized = this.memoizedIsInitialized;
                if (isInitialized == 1)
                    return true;
                if (isInitialized == 0)
                    return false;
                if (!hasLAT()) {
                    this.memoizedIsInitialized = 0;
                    return false;
                }
                if (!hasLON()) {
                    this.memoizedIsInitialized = 0;
                    return false;
                }
                if (!hasGPSVel()) {
                    this.memoizedIsInitialized = 0;
                    return false;
                }
                if (!hasGPSDir()) {
                    this.memoizedIsInitialized = 0;
                    return false;
                }
                if (!hasGPSNSat()) {
                    this.memoizedIsInitialized = 0;
                    return false;
                }
                if (!hasGPSAlt()) {
                    this.memoizedIsInitialized = 0;
                    return false;
                }
                this.memoizedIsInitialized = 1;
                return true;
            }

            public void writeTo(CodedOutputStream output) throws IOException {
                if ((this.bitField0_ & 0x1) != 0)
                    output.writeSInt32(1, this.lAT_);
                if ((this.bitField0_ & 0x2) != 0)
                    output.writeSInt32(2, this.lON_);
                if ((this.bitField0_ & 0x4) != 0)
                    output.writeUInt32(3, this.gPSVel_);
                if ((this.bitField0_ & 0x8) != 0)
                    output.writeUInt32(4, this.gPSDir_);
                if ((this.bitField0_ & 0x10) != 0)
                    output.writeUInt32(5, this.gPSNSat_);
                if ((this.bitField0_ & 0x20) != 0)
                    output.writeSInt32(6, this.gPSAlt_);
                if ((this.bitField0_ & 0x40) != 0)
                    output.writeUInt32(7, this.gPSTime_);
                this.unknownFields.writeTo(output);
            }

            public int getSerializedSize() {
                int size = this.memoizedSize;
                if (size != -1)
                    return size;
                size = 0;
                if ((this.bitField0_ & 0x1) != 0)
                    size += CodedOutputStream.computeSInt32Size(1, this.lAT_);
                if ((this.bitField0_ & 0x2) != 0)
                    size += CodedOutputStream.computeSInt32Size(2, this.lON_);
                if ((this.bitField0_ & 0x4) != 0)
                    size += CodedOutputStream.computeUInt32Size(3, this.gPSVel_);
                if ((this.bitField0_ & 0x8) != 0)
                    size += CodedOutputStream.computeUInt32Size(4, this.gPSDir_);
                if ((this.bitField0_ & 0x10) != 0)
                    size += CodedOutputStream.computeUInt32Size(5, this.gPSNSat_);
                if ((this.bitField0_ & 0x20) != 0)
                    size += CodedOutputStream.computeSInt32Size(6, this.gPSAlt_);
                if ((this.bitField0_ & 0x40) != 0)
                    size += CodedOutputStream.computeUInt32Size(7, this.gPSTime_);
                size += this.unknownFields.getSerializedSize();
                this.memoizedSize = size;
                return size;
            }

            public boolean equals(Object obj) {
                if (obj == this)
                    return true;
                if (!(obj instanceof NAV))
                    return super.equals(obj);
                NAV other = (NAV) obj;
                if (hasLAT() != other.hasLAT())
                    return false;
                if (hasLAT() && getLAT() != other.getLAT())
                    return false;
                if (hasLON() != other.hasLON())
                    return false;
                if (hasLON() && getLON() != other.getLON())
                    return false;
                if (hasGPSVel() != other.hasGPSVel())
                    return false;
                if (hasGPSVel() && getGPSVel() != other.getGPSVel())
                    return false;
                if (hasGPSDir() != other.hasGPSDir())
                    return false;
                if (hasGPSDir() && getGPSDir() != other.getGPSDir())
                    return false;
                if (hasGPSNSat() != other.hasGPSNSat())
                    return false;
                if (hasGPSNSat() && getGPSNSat() != other.getGPSNSat())
                    return false;
                if (hasGPSAlt() != other.hasGPSAlt())
                    return false;
                if (hasGPSAlt() && getGPSAlt() != other.getGPSAlt())
                    return false;
                if (hasGPSTime() != other.hasGPSTime())
                    return false;
                if (hasGPSTime() && getGPSTime() != other.getGPSTime())
                    return false;
                if (!this.unknownFields.equals(other.unknownFields))
                    return false;
                return true;
            }

            public int hashCode() {
                if (this.memoizedHashCode != 0)
                    return this.memoizedHashCode;
                int hash = 41;
                hash = 19 * hash + getDescriptor().hashCode();
                if (hasLAT()) {
                    hash = 37 * hash + 1;
                    hash = 53 * hash + getLAT();
                }
                if (hasLON()) {
                    hash = 37 * hash + 2;
                    hash = 53 * hash + getLON();
                }
                if (hasGPSVel()) {
                    hash = 37 * hash + 3;
                    hash = 53 * hash + getGPSVel();
                }
                if (hasGPSDir()) {
                    hash = 37 * hash + 4;
                    hash = 53 * hash + getGPSDir();
                }
                if (hasGPSNSat()) {
                    hash = 37 * hash + 5;
                    hash = 53 * hash + getGPSNSat();
                }
                if (hasGPSAlt()) {
                    hash = 37 * hash + 6;
                    hash = 53 * hash + getGPSAlt();
                }
                if (hasGPSTime()) {
                    hash = 37 * hash + 7;
                    hash = 53 * hash + getGPSTime();
                }
                hash = 29 * hash + this.unknownFields.hashCode();
                this.memoizedHashCode = hash;
                return hash;
            }

            public static NAV parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
                return (NAV) PARSER.parseFrom(data);
            }

            public static NAV parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return (NAV) PARSER.parseFrom(data, extensionRegistry);
            }

            public static NAV parseFrom(ByteString data) throws InvalidProtocolBufferException {
                return (NAV) PARSER.parseFrom(data);
            }

            public static NAV parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return (NAV) PARSER.parseFrom(data, extensionRegistry);
            }

            public static NAV parseFrom(byte[] data) throws InvalidProtocolBufferException {
                return (NAV) PARSER.parseFrom(data);
            }

            public static NAV parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return (NAV) PARSER.parseFrom(data, extensionRegistry);
            }

            public static NAV parseFrom(InputStream input) throws IOException {
                return (NAV) GeneratedMessageV3.parseWithIOException(PARSER, input);
            }

            public static NAV parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                return (NAV) GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
            }

            public static NAV parseDelimitedFrom(InputStream input) throws IOException {
                return (NAV) GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
            }

            public static NAV parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                return (NAV) GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
            }

            public static NAV parseFrom(CodedInputStream input) throws IOException {
                return (NAV) GeneratedMessageV3.parseWithIOException(PARSER, input);
            }

            public static NAV parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                return (NAV) GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
            }

            public Builder newBuilderForType() {
                return newBuilder();
            }

            public static Builder newBuilder() {
                return DEFAULT_INSTANCE.toBuilder();
            }

            public static Builder newBuilder(NAV prototype) {
                return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
            }

            public Builder toBuilder() {
                return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder()).mergeFrom(this);
            }

            protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
                Builder builder = new Builder(parent);
                return builder;
            }

            public static final class Builder extends GeneratedMessageV3.Builder<Builder> implements OmnicommMessageOuterClass.OmnicommMessage.NAVOrBuilder {
                private int bitField0_;

                private int lAT_;

                private int lON_;

                private int gPSVel_;

                private int gPSDir_;

                private int gPSNSat_;

                private int gPSAlt_;

                private int gPSTime_;

                public static final Descriptors.Descriptor getDescriptor() {
                    return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_NAV_descriptor;
                }

                protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
                    return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_NAV_fieldAccessorTable.ensureFieldAccessorsInitialized(OmnicommMessageOuterClass.OmnicommMessage.NAV.class, Builder.class);
                }

                private Builder() {
                    maybeForceBuilderInitialization();
                }

                private Builder(GeneratedMessageV3.BuilderParent parent) {
                    super(parent);
                    maybeForceBuilderInitialization();
                }

                private void maybeForceBuilderInitialization() {
                    if (OmnicommMessageOuterClass.OmnicommMessage.NAV.alwaysUseFieldBuilders) ;
                }

                public Builder clear() {
                    super.clear();
                    this.lAT_ = 0;
                    this.bitField0_ &= 0xFFFFFFFE;
                    this.lON_ = 0;
                    this.bitField0_ &= 0xFFFFFFFD;
                    this.gPSVel_ = 0;
                    this.bitField0_ &= 0xFFFFFFFB;
                    this.gPSDir_ = 0;
                    this.bitField0_ &= 0xFFFFFFF7;
                    this.gPSNSat_ = 0;
                    this.bitField0_ &= 0xFFFFFFEF;
                    this.gPSAlt_ = 0;
                    this.bitField0_ &= 0xFFFFFFDF;
                    this.gPSTime_ = 0;
                    this.bitField0_ &= 0xFFFFFFBF;
                    return this;
                }

                public Descriptors.Descriptor getDescriptorForType() {
                    return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_NAV_descriptor;
                }

                public OmnicommMessageOuterClass.OmnicommMessage.NAV getDefaultInstanceForType() {
                    return OmnicommMessageOuterClass.OmnicommMessage.NAV.getDefaultInstance();
                }

                public OmnicommMessageOuterClass.OmnicommMessage.NAV build() {
                    OmnicommMessageOuterClass.OmnicommMessage.NAV result = buildPartial();
                    if (!result.isInitialized())
                        throw newUninitializedMessageException(result);
                    return result;
                }

                public OmnicommMessageOuterClass.OmnicommMessage.NAV buildPartial() {
                    OmnicommMessageOuterClass.OmnicommMessage.NAV result = new OmnicommMessageOuterClass.OmnicommMessage.NAV(this);
                    int from_bitField0_ = this.bitField0_;
                    int to_bitField0_ = 0;
                    if ((from_bitField0_ & 0x1) != 0) {
                        result.lAT_ = this.lAT_;
                        to_bitField0_ |= 0x1;
                    }
                    if ((from_bitField0_ & 0x2) != 0) {
                        result.lON_ = this.lON_;
                        to_bitField0_ |= 0x2;
                    }
                    if ((from_bitField0_ & 0x4) != 0) {
                        result.gPSVel_ = this.gPSVel_;
                        to_bitField0_ |= 0x4;
                    }
                    if ((from_bitField0_ & 0x8) != 0) {
                        result.gPSDir_ = this.gPSDir_;
                        to_bitField0_ |= 0x8;
                    }
                    if ((from_bitField0_ & 0x10) != 0) {
                        result.gPSNSat_ = this.gPSNSat_;
                        to_bitField0_ |= 0x10;
                    }
                    if ((from_bitField0_ & 0x20) != 0) {
                        result.gPSAlt_ = this.gPSAlt_;
                        to_bitField0_ |= 0x20;
                    }
                    if ((from_bitField0_ & 0x40) != 0) {
                        result.gPSTime_ = this.gPSTime_;
                        to_bitField0_ |= 0x40;
                    }
                    result.bitField0_ = to_bitField0_;
                    onBuilt();
                    return result;
                }

                public Builder clone() {
                    return (Builder) super.clone();
                }

                public Builder setField(Descriptors.FieldDescriptor field, Object value) {
                    return (Builder) super.setField(field, value);
                }

                public Builder clearField(Descriptors.FieldDescriptor field) {
                    return (Builder) super.clearField(field);
                }

                public Builder clearOneof(Descriptors.OneofDescriptor oneof) {
                    return (Builder) super.clearOneof(oneof);
                }

                public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
                    return (Builder) super.setRepeatedField(field, index, value);
                }

                public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
                    return (Builder) super.addRepeatedField(field, value);
                }

                public Builder mergeFrom(Message other) {
                    if (other instanceof OmnicommMessageOuterClass.OmnicommMessage.NAV)
                        return mergeFrom((OmnicommMessageOuterClass.OmnicommMessage.NAV) other);
                    super.mergeFrom(other);
                    return this;
                }

                public Builder mergeFrom(OmnicommMessageOuterClass.OmnicommMessage.NAV other) {
                    if (other == OmnicommMessageOuterClass.OmnicommMessage.NAV.getDefaultInstance())
                        return this;
                    if (other.hasLAT())
                        setLAT(other.getLAT());
                    if (other.hasLON())
                        setLON(other.getLON());
                    if (other.hasGPSVel())
                        setGPSVel(other.getGPSVel());
                    if (other.hasGPSDir())
                        setGPSDir(other.getGPSDir());
                    if (other.hasGPSNSat())
                        setGPSNSat(other.getGPSNSat());
                    if (other.hasGPSAlt())
                        setGPSAlt(other.getGPSAlt());
                    if (other.hasGPSTime())
                        setGPSTime(other.getGPSTime());
                    mergeUnknownFields(other.unknownFields);
                    onChanged();
                    return this;
                }

                public final boolean isInitialized() {
                    if (!hasLAT())
                        return false;
                    if (!hasLON())
                        return false;
                    if (!hasGPSVel())
                        return false;
                    if (!hasGPSDir())
                        return false;
                    if (!hasGPSNSat())
                        return false;
                    if (!hasGPSAlt())
                        return false;
                    return true;
                }

                public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                    OmnicommMessageOuterClass.OmnicommMessage.NAV parsedMessage = null;
                    try {
                        parsedMessage = (OmnicommMessageOuterClass.OmnicommMessage.NAV) OmnicommMessageOuterClass.OmnicommMessage.NAV.PARSER.parsePartialFrom(input, extensionRegistry);
                    } catch (InvalidProtocolBufferException e) {
                        parsedMessage = (OmnicommMessageOuterClass.OmnicommMessage.NAV) e.getUnfinishedMessage();
                        throw e.unwrapIOException();
                    } finally {
                        if (parsedMessage != null)
                            mergeFrom(parsedMessage);
                    }
                    return this;
                }

                public boolean hasLAT() {
                    return ((this.bitField0_ & 0x1) != 0);
                }

                public int getLAT() {
                    return this.lAT_;
                }

                public Builder setLAT(int value) {
                    this.bitField0_ |= 0x1;
                    this.lAT_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearLAT() {
                    this.bitField0_ &= 0xFFFFFFFE;
                    this.lAT_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasLON() {
                    return ((this.bitField0_ & 0x2) != 0);
                }

                public int getLON() {
                    return this.lON_;
                }

                public Builder setLON(int value) {
                    this.bitField0_ |= 0x2;
                    this.lON_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearLON() {
                    this.bitField0_ &= 0xFFFFFFFD;
                    this.lON_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasGPSVel() {
                    return ((this.bitField0_ & 0x4) != 0);
                }

                public int getGPSVel() {
                    return this.gPSVel_;
                }

                public Builder setGPSVel(int value) {
                    this.bitField0_ |= 0x4;
                    this.gPSVel_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearGPSVel() {
                    this.bitField0_ &= 0xFFFFFFFB;
                    this.gPSVel_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasGPSDir() {
                    return ((this.bitField0_ & 0x8) != 0);
                }

                public int getGPSDir() {
                    return this.gPSDir_;
                }

                public Builder setGPSDir(int value) {
                    this.bitField0_ |= 0x8;
                    this.gPSDir_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearGPSDir() {
                    this.bitField0_ &= 0xFFFFFFF7;
                    this.gPSDir_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasGPSNSat() {
                    return ((this.bitField0_ & 0x10) != 0);
                }

                public int getGPSNSat() {
                    return this.gPSNSat_;
                }

                public Builder setGPSNSat(int value) {
                    this.bitField0_ |= 0x10;
                    this.gPSNSat_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearGPSNSat() {
                    this.bitField0_ &= 0xFFFFFFEF;
                    this.gPSNSat_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasGPSAlt() {
                    return ((this.bitField0_ & 0x20) != 0);
                }

                public int getGPSAlt() {
                    return this.gPSAlt_;
                }

                public Builder setGPSAlt(int value) {
                    this.bitField0_ |= 0x20;
                    this.gPSAlt_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearGPSAlt() {
                    this.bitField0_ &= 0xFFFFFFDF;
                    this.gPSAlt_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasGPSTime() {
                    return ((this.bitField0_ & 0x40) != 0);
                }

                public int getGPSTime() {
                    return this.gPSTime_;
                }

                public Builder setGPSTime(int value) {
                    this.bitField0_ |= 0x40;
                    this.gPSTime_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearGPSTime() {
                    this.bitField0_ &= 0xFFFFFFBF;
                    this.gPSTime_ = 0;
                    onChanged();
                    return this;
                }

                public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
                    return (Builder) super.setUnknownFields(unknownFields);
                }

                public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
                    return (Builder) super.mergeUnknownFields(unknownFields);
                }
            }

            private static final NAV DEFAULT_INSTANCE = new NAV();

            public static NAV getDefaultInstance() {
                return DEFAULT_INSTANCE;
            }

            @Deprecated
            public static final Parser<NAV> PARSER = (Parser<NAV>) new AbstractParser<NAV>() {
                public OmnicommMessageOuterClass.OmnicommMessage.NAV parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                    return new OmnicommMessageOuterClass.OmnicommMessage.NAV(input, extensionRegistry);
                }
            };

            public static Parser<NAV> parser() {
                return PARSER;
            }

            public Parser<NAV> getParserForType() {
                return PARSER;
            }

            public NAV getDefaultInstanceForType() {
                return DEFAULT_INSTANCE;
            }
        }

        public static final class Builder extends GeneratedMessageV3.Builder<NAV.Builder> implements NAVOrBuilder {
            private int bitField0_;

            private int lAT_;

            private int lON_;

            private int gPSVel_;

            private int gPSDir_;

            private int gPSNSat_;

            private int gPSAlt_;

            private int gPSTime_;

            public static final Descriptors.Descriptor getDescriptor() {
                return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_NAV_descriptor;
            }

            protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
                return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_NAV_fieldAccessorTable.ensureFieldAccessorsInitialized(OmnicommMessageOuterClass.OmnicommMessage.NAV.class, Builder.class);
            }

            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessageV3.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (OmnicommMessageOuterClass.OmnicommMessage.NAV.alwaysUseFieldBuilders) ;
            }

            public Builder clear() {
                super.clear();
                this.lAT_ = 0;
                this.bitField0_ &= 0xFFFFFFFE;
                this.lON_ = 0;
                this.bitField0_ &= 0xFFFFFFFD;
                this.gPSVel_ = 0;
                this.bitField0_ &= 0xFFFFFFFB;
                this.gPSDir_ = 0;
                this.bitField0_ &= 0xFFFFFFF7;
                this.gPSNSat_ = 0;
                this.bitField0_ &= 0xFFFFFFEF;
                this.gPSAlt_ = 0;
                this.bitField0_ &= 0xFFFFFFDF;
                this.gPSTime_ = 0;
                this.bitField0_ &= 0xFFFFFFBF;
                return this;
            }

            public Descriptors.Descriptor getDescriptorForType() {
                return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_NAV_descriptor;
            }

            public OmnicommMessageOuterClass.OmnicommMessage.NAV getDefaultInstanceForType() {
                return OmnicommMessageOuterClass.OmnicommMessage.NAV.getDefaultInstance();
            }

            public OmnicommMessageOuterClass.OmnicommMessage.NAV build() {
                OmnicommMessageOuterClass.OmnicommMessage.NAV result = buildPartial();
                if (!result.isInitialized())
                    throw newUninitializedMessageException(result);
                return result;
            }

            public OmnicommMessageOuterClass.OmnicommMessage.NAV buildPartial() {
                OmnicommMessageOuterClass.OmnicommMessage.NAV result = new OmnicommMessageOuterClass.OmnicommMessage.NAV(this);
                int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) != 0) {
                    result.lAT_ = this.lAT_;
                    to_bitField0_ |= 0x1;
                }
                if ((from_bitField0_ & 0x2) != 0) {
                    result.lON_ = this.lON_;
                    to_bitField0_ |= 0x2;
                }
                if ((from_bitField0_ & 0x4) != 0) {
                    result.gPSVel_ = this.gPSVel_;
                    to_bitField0_ |= 0x4;
                }
                if ((from_bitField0_ & 0x8) != 0) {
                    result.gPSDir_ = this.gPSDir_;
                    to_bitField0_ |= 0x8;
                }
                if ((from_bitField0_ & 0x10) != 0) {
                    result.gPSNSat_ = this.gPSNSat_;
                    to_bitField0_ |= 0x10;
                }
                if ((from_bitField0_ & 0x20) != 0) {
                    result.gPSAlt_ = this.gPSAlt_;
                    to_bitField0_ |= 0x20;
                }
                if ((from_bitField0_ & 0x40) != 0) {
                    result.gPSTime_ = this.gPSTime_;
                    to_bitField0_ |= 0x40;
                }
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }

            public Builder setField(Descriptors.FieldDescriptor field, Object value) {
                return (Builder) super.setField(field, value);
            }

            public Builder clearField(Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }

            public Builder clearOneof(Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }

            public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }

            public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }

            public Builder mergeFrom(Message other) {
                if (other instanceof OmnicommMessageOuterClass.OmnicommMessage.NAV)
                    return mergeFrom((OmnicommMessageOuterClass.OmnicommMessage.NAV) other);
                super.mergeFrom(other);
                return this;
            }

            public Builder mergeFrom(OmnicommMessageOuterClass.OmnicommMessage.NAV other) {
                if (other == OmnicommMessageOuterClass.OmnicommMessage.NAV.getDefaultInstance())
                    return this;
                if (other.hasLAT())
                    setLAT(other.getLAT());
                if (other.hasLON())
                    setLON(other.getLON());
                if (other.hasGPSVel())
                    setGPSVel(other.getGPSVel());
                if (other.hasGPSDir())
                    setGPSDir(other.getGPSDir());
                if (other.hasGPSNSat())
                    setGPSNSat(other.getGPSNSat());
                if (other.hasGPSAlt())
                    setGPSAlt(other.getGPSAlt());
                if (other.hasGPSTime())
                    setGPSTime(other.getGPSTime());
                mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                if (!hasLAT())
                    return false;
                if (!hasLON())
                    return false;
                if (!hasGPSVel())
                    return false;
                if (!hasGPSDir())
                    return false;
                if (!hasGPSNSat())
                    return false;
                if (!hasGPSAlt())
                    return false;
                return true;
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                OmnicommMessageOuterClass.OmnicommMessage.NAV parsedMessage = null;
                try {
                    parsedMessage = (OmnicommMessageOuterClass.OmnicommMessage.NAV) OmnicommMessageOuterClass.OmnicommMessage.NAV.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (OmnicommMessageOuterClass.OmnicommMessage.NAV) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null)
                        mergeFrom(parsedMessage);
                }
                return this;
            }

            public boolean hasLAT() {
                return ((this.bitField0_ & 0x1) != 0);
            }

            public int getLAT() {
                return this.lAT_;
            }

            public Builder setLAT(int value) {
                this.bitField0_ |= 0x1;
                this.lAT_ = value;
                onChanged();
                return this;
            }

            public Builder clearLAT() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.lAT_ = 0;
                onChanged();
                return this;
            }

            public boolean hasLON() {
                return ((this.bitField0_ & 0x2) != 0);
            }

            public int getLON() {
                return this.lON_;
            }

            public Builder setLON(int value) {
                this.bitField0_ |= 0x2;
                this.lON_ = value;
                onChanged();
                return this;
            }

            public Builder clearLON() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.lON_ = 0;
                onChanged();
                return this;
            }

            public boolean hasGPSVel() {
                return ((this.bitField0_ & 0x4) != 0);
            }

            public int getGPSVel() {
                return this.gPSVel_;
            }

            public Builder setGPSVel(int value) {
                this.bitField0_ |= 0x4;
                this.gPSVel_ = value;
                onChanged();
                return this;
            }

            public Builder clearGPSVel() {
                this.bitField0_ &= 0xFFFFFFFB;
                this.gPSVel_ = 0;
                onChanged();
                return this;
            }

            public boolean hasGPSDir() {
                return ((this.bitField0_ & 0x8) != 0);
            }

            public int getGPSDir() {
                return this.gPSDir_;
            }

            public Builder setGPSDir(int value) {
                this.bitField0_ |= 0x8;
                this.gPSDir_ = value;
                onChanged();
                return this;
            }

            public Builder clearGPSDir() {
                this.bitField0_ &= 0xFFFFFFF7;
                this.gPSDir_ = 0;
                onChanged();
                return this;
            }

            public boolean hasGPSNSat() {
                return ((this.bitField0_ & 0x10) != 0);
            }

            public int getGPSNSat() {
                return this.gPSNSat_;
            }

            public Builder setGPSNSat(int value) {
                this.bitField0_ |= 0x10;
                this.gPSNSat_ = value;
                onChanged();
                return this;
            }

            public Builder clearGPSNSat() {
                this.bitField0_ &= 0xFFFFFFEF;
                this.gPSNSat_ = 0;
                onChanged();
                return this;
            }

            public boolean hasGPSAlt() {
                return ((this.bitField0_ & 0x20) != 0);
            }

            public int getGPSAlt() {
                return this.gPSAlt_;
            }

            public Builder setGPSAlt(int value) {
                this.bitField0_ |= 0x20;
                this.gPSAlt_ = value;
                onChanged();
                return this;
            }

            public Builder clearGPSAlt() {
                this.bitField0_ &= 0xFFFFFFDF;
                this.gPSAlt_ = 0;
                onChanged();
                return this;
            }

            public boolean hasGPSTime() {
                return ((this.bitField0_ & 0x40) != 0);
            }

            public int getGPSTime() {
                return this.gPSTime_;
            }

            public Builder setGPSTime(int value) {
                this.bitField0_ |= 0x40;
                this.gPSTime_ = value;
                onChanged();
                return this;
            }

            public Builder clearGPSTime() {
                this.bitField0_ &= 0xFFFFFFBF;
                this.gPSTime_ = 0;
                onChanged();
                return this;
            }

            public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
                return (Builder) super.setUnknownFields(unknownFields);
            }

            public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
                return (Builder) super.mergeUnknownFields(unknownFields);
            }
        }

        public static final class UniDt extends GeneratedMessageV3 implements UniDtOrBuilder {
            private static final long serialVersionUID = 0L;

            private int bitField0_;

            public static final int UNIVAL0_FIELD_NUMBER = 1;

            private int uniVal0_;

            public static final int UNIVAL1_FIELD_NUMBER = 2;

            private int uniVal1_;

            public static final int UNIVAL2_FIELD_NUMBER = 3;

            private int uniVal2_;

            public static final int UNIVAL3_FIELD_NUMBER = 4;

            private int uniVal3_;

            public static final int UNIVAL4_FIELD_NUMBER = 5;

            private int uniVal4_;

            public static final int UNIVAL5_FIELD_NUMBER = 6;

            private int uniVal5_;

            private byte memoizedIsInitialized;

            private UniDt(GeneratedMessageV3.Builder<?> builder) {
                super(builder);
                this.memoizedIsInitialized = -1;
            }

            private UniDt() {
                this.memoizedIsInitialized = -1;
            }

            protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) {
                return new UniDt();
            }

            public final UnknownFieldSet getUnknownFields() {
                return this.unknownFields;
            }

            private UniDt(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                this();
                if (extensionRegistry == null)
                    throw new NullPointerException();
                int mutable_bitField0_ = 0;
                UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
                try {
                    boolean done = false;
                    while (!done) {
                        int tag = input.readTag();
                        switch (tag) {
                            case 0:
                                done = true;
                                continue;
                            case 8:
                                this.bitField0_ |= 0x1;
                                this.uniVal0_ = input.readSInt32();
                                continue;
                            case 16:
                                this.bitField0_ |= 0x2;
                                this.uniVal1_ = input.readSInt32();
                                continue;
                            case 24:
                                this.bitField0_ |= 0x4;
                                this.uniVal2_ = input.readSInt32();
                                continue;
                            case 32:
                                this.bitField0_ |= 0x8;
                                this.uniVal3_ = input.readSInt32();
                                continue;
                            case 40:
                                this.bitField0_ |= 0x10;
                                this.uniVal4_ = input.readSInt32();
                                continue;
                            case 48:
                                this.bitField0_ |= 0x20;
                                this.uniVal5_ = input.readSInt32();
                                continue;
                        }
                        if (!parseUnknownField(input, unknownFields, extensionRegistry, tag))
                            done = true;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e) {
                    throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this);
                } finally {
                    this.unknownFields = unknownFields.build();
                    makeExtensionsImmutable();
                }
            }

            public static final Descriptors.Descriptor getDescriptor() {
                return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_UniDt_descriptor;
            }

            protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
                return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_UniDt_fieldAccessorTable.ensureFieldAccessorsInitialized(UniDt.class, Builder.class);
            }

            public boolean hasUniVal0() {
                return ((this.bitField0_ & 0x1) != 0);
            }

            public int getUniVal0() {
                return this.uniVal0_;
            }

            public boolean hasUniVal1() {
                return ((this.bitField0_ & 0x2) != 0);
            }

            public int getUniVal1() {
                return this.uniVal1_;
            }

            public boolean hasUniVal2() {
                return ((this.bitField0_ & 0x4) != 0);
            }

            public int getUniVal2() {
                return this.uniVal2_;
            }

            public boolean hasUniVal3() {
                return ((this.bitField0_ & 0x8) != 0);
            }

            public int getUniVal3() {
                return this.uniVal3_;
            }

            public boolean hasUniVal4() {
                return ((this.bitField0_ & 0x10) != 0);
            }

            public int getUniVal4() {
                return this.uniVal4_;
            }

            public boolean hasUniVal5() {
                return ((this.bitField0_ & 0x20) != 0);
            }

            public int getUniVal5() {
                return this.uniVal5_;
            }

            public final boolean isInitialized() {
                byte isInitialized = this.memoizedIsInitialized;
                if (isInitialized == 1)
                    return true;
                if (isInitialized == 0)
                    return false;
                this.memoizedIsInitialized = 1;
                return true;
            }

            public void writeTo(CodedOutputStream output) throws IOException {
                if ((this.bitField0_ & 0x1) != 0)
                    output.writeSInt32(1, this.uniVal0_);
                if ((this.bitField0_ & 0x2) != 0)
                    output.writeSInt32(2, this.uniVal1_);
                if ((this.bitField0_ & 0x4) != 0)
                    output.writeSInt32(3, this.uniVal2_);
                if ((this.bitField0_ & 0x8) != 0)
                    output.writeSInt32(4, this.uniVal3_);
                if ((this.bitField0_ & 0x10) != 0)
                    output.writeSInt32(5, this.uniVal4_);
                if ((this.bitField0_ & 0x20) != 0)
                    output.writeSInt32(6, this.uniVal5_);
                this.unknownFields.writeTo(output);
            }

            public int getSerializedSize() {
                int size = this.memoizedSize;
                if (size != -1)
                    return size;
                size = 0;
                if ((this.bitField0_ & 0x1) != 0)
                    size += CodedOutputStream.computeSInt32Size(1, this.uniVal0_);
                if ((this.bitField0_ & 0x2) != 0)
                    size += CodedOutputStream.computeSInt32Size(2, this.uniVal1_);
                if ((this.bitField0_ & 0x4) != 0)
                    size += CodedOutputStream.computeSInt32Size(3, this.uniVal2_);
                if ((this.bitField0_ & 0x8) != 0)
                    size += CodedOutputStream.computeSInt32Size(4, this.uniVal3_);
                if ((this.bitField0_ & 0x10) != 0)
                    size += CodedOutputStream.computeSInt32Size(5, this.uniVal4_);
                if ((this.bitField0_ & 0x20) != 0)
                    size += CodedOutputStream.computeSInt32Size(6, this.uniVal5_);
                size += this.unknownFields.getSerializedSize();
                this.memoizedSize = size;
                return size;
            }

            public boolean equals(Object obj) {
                if (obj == this)
                    return true;
                if (!(obj instanceof UniDt))
                    return super.equals(obj);
                UniDt other = (UniDt) obj;
                if (hasUniVal0() != other.hasUniVal0())
                    return false;
                if (hasUniVal0() && getUniVal0() != other.getUniVal0())
                    return false;
                if (hasUniVal1() != other.hasUniVal1())
                    return false;
                if (hasUniVal1() && getUniVal1() != other.getUniVal1())
                    return false;
                if (hasUniVal2() != other.hasUniVal2())
                    return false;
                if (hasUniVal2() && getUniVal2() != other.getUniVal2())
                    return false;
                if (hasUniVal3() != other.hasUniVal3())
                    return false;
                if (hasUniVal3() && getUniVal3() != other.getUniVal3())
                    return false;
                if (hasUniVal4() != other.hasUniVal4())
                    return false;
                if (hasUniVal4() && getUniVal4() != other.getUniVal4())
                    return false;
                if (hasUniVal5() != other.hasUniVal5())
                    return false;
                if (hasUniVal5() && getUniVal5() != other.getUniVal5())
                    return false;
                if (!this.unknownFields.equals(other.unknownFields))
                    return false;
                return true;
            }

            public int hashCode() {
                if (this.memoizedHashCode != 0)
                    return this.memoizedHashCode;
                int hash = 41;
                hash = 19 * hash + getDescriptor().hashCode();
                if (hasUniVal0()) {
                    hash = 37 * hash + 1;
                    hash = 53 * hash + getUniVal0();
                }
                if (hasUniVal1()) {
                    hash = 37 * hash + 2;
                    hash = 53 * hash + getUniVal1();
                }
                if (hasUniVal2()) {
                    hash = 37 * hash + 3;
                    hash = 53 * hash + getUniVal2();
                }
                if (hasUniVal3()) {
                    hash = 37 * hash + 4;
                    hash = 53 * hash + getUniVal3();
                }
                if (hasUniVal4()) {
                    hash = 37 * hash + 5;
                    hash = 53 * hash + getUniVal4();
                }
                if (hasUniVal5()) {
                    hash = 37 * hash + 6;
                    hash = 53 * hash + getUniVal5();
                }
                hash = 29 * hash + this.unknownFields.hashCode();
                this.memoizedHashCode = hash;
                return hash;
            }

            public static UniDt parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
                return (UniDt) PARSER.parseFrom(data);
            }

            public static UniDt parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return (UniDt) PARSER.parseFrom(data, extensionRegistry);
            }

            public static UniDt parseFrom(ByteString data) throws InvalidProtocolBufferException {
                return (UniDt) PARSER.parseFrom(data);
            }

            public static UniDt parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return (UniDt) PARSER.parseFrom(data, extensionRegistry);
            }

            public static UniDt parseFrom(byte[] data) throws InvalidProtocolBufferException {
                return (UniDt) PARSER.parseFrom(data);
            }

            public static UniDt parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return (UniDt) PARSER.parseFrom(data, extensionRegistry);
            }

            public static UniDt parseFrom(InputStream input) throws IOException {
                return (UniDt) GeneratedMessageV3.parseWithIOException(PARSER, input);
            }

            public static UniDt parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                return (UniDt) GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
            }

            public static UniDt parseDelimitedFrom(InputStream input) throws IOException {
                return (UniDt) GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
            }

            public static UniDt parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                return (UniDt) GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
            }

            public static UniDt parseFrom(CodedInputStream input) throws IOException {
                return (UniDt) GeneratedMessageV3.parseWithIOException(PARSER, input);
            }

            public static UniDt parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                return (UniDt) GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
            }

            public Builder newBuilderForType() {
                return newBuilder();
            }

            public static Builder newBuilder() {
                return DEFAULT_INSTANCE.toBuilder();
            }

            public static Builder newBuilder(UniDt prototype) {
                return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
            }

            public Builder toBuilder() {
                return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder()).mergeFrom(this);
            }

            protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
                Builder builder = new Builder(parent);
                return builder;
            }

            public static final class Builder extends GeneratedMessageV3.Builder<Builder> implements OmnicommMessageOuterClass.OmnicommMessage.UniDtOrBuilder {
                private int bitField0_;

                private int uniVal0_;

                private int uniVal1_;

                private int uniVal2_;

                private int uniVal3_;

                private int uniVal4_;

                private int uniVal5_;

                public static final Descriptors.Descriptor getDescriptor() {
                    return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_UniDt_descriptor;
                }

                protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
                    return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_UniDt_fieldAccessorTable.ensureFieldAccessorsInitialized(OmnicommMessageOuterClass.OmnicommMessage.UniDt.class, Builder.class);
                }

                private Builder() {
                    maybeForceBuilderInitialization();
                }

                private Builder(GeneratedMessageV3.BuilderParent parent) {
                    super(parent);
                    maybeForceBuilderInitialization();
                }

                private void maybeForceBuilderInitialization() {
                    if (OmnicommMessageOuterClass.OmnicommMessage.UniDt.alwaysUseFieldBuilders) ;
                }

                public Builder clear() {
                    super.clear();
                    this.uniVal0_ = 0;
                    this.bitField0_ &= 0xFFFFFFFE;
                    this.uniVal1_ = 0;
                    this.bitField0_ &= 0xFFFFFFFD;
                    this.uniVal2_ = 0;
                    this.bitField0_ &= 0xFFFFFFFB;
                    this.uniVal3_ = 0;
                    this.bitField0_ &= 0xFFFFFFF7;
                    this.uniVal4_ = 0;
                    this.bitField0_ &= 0xFFFFFFEF;
                    this.uniVal5_ = 0;
                    this.bitField0_ &= 0xFFFFFFDF;
                    return this;
                }

                public Descriptors.Descriptor getDescriptorForType() {
                    return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_UniDt_descriptor;
                }

                public OmnicommMessageOuterClass.OmnicommMessage.UniDt getDefaultInstanceForType() {
                    return OmnicommMessageOuterClass.OmnicommMessage.UniDt.getDefaultInstance();
                }

                public OmnicommMessageOuterClass.OmnicommMessage.UniDt build() {
                    OmnicommMessageOuterClass.OmnicommMessage.UniDt result = buildPartial();
                    if (!result.isInitialized())
                        throw newUninitializedMessageException(result);
                    return result;
                }

                public OmnicommMessageOuterClass.OmnicommMessage.UniDt buildPartial() {
                    OmnicommMessageOuterClass.OmnicommMessage.UniDt result = new OmnicommMessageOuterClass.OmnicommMessage.UniDt(this);
                    int from_bitField0_ = this.bitField0_;
                    int to_bitField0_ = 0;
                    if ((from_bitField0_ & 0x1) != 0) {
                        result.uniVal0_ = this.uniVal0_;
                        to_bitField0_ |= 0x1;
                    }
                    if ((from_bitField0_ & 0x2) != 0) {
                        result.uniVal1_ = this.uniVal1_;
                        to_bitField0_ |= 0x2;
                    }
                    if ((from_bitField0_ & 0x4) != 0) {
                        result.uniVal2_ = this.uniVal2_;
                        to_bitField0_ |= 0x4;
                    }
                    if ((from_bitField0_ & 0x8) != 0) {
                        result.uniVal3_ = this.uniVal3_;
                        to_bitField0_ |= 0x8;
                    }
                    if ((from_bitField0_ & 0x10) != 0) {
                        result.uniVal4_ = this.uniVal4_;
                        to_bitField0_ |= 0x10;
                    }
                    if ((from_bitField0_ & 0x20) != 0) {
                        result.uniVal5_ = this.uniVal5_;
                        to_bitField0_ |= 0x20;
                    }
                    result.bitField0_ = to_bitField0_;
                    onBuilt();
                    return result;
                }

                public Builder clone() {
                    return (Builder) super.clone();
                }

                public Builder setField(Descriptors.FieldDescriptor field, Object value) {
                    return (Builder) super.setField(field, value);
                }

                public Builder clearField(Descriptors.FieldDescriptor field) {
                    return (Builder) super.clearField(field);
                }

                public Builder clearOneof(Descriptors.OneofDescriptor oneof) {
                    return (Builder) super.clearOneof(oneof);
                }

                public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
                    return (Builder) super.setRepeatedField(field, index, value);
                }

                public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
                    return (Builder) super.addRepeatedField(field, value);
                }

                public Builder mergeFrom(Message other) {
                    if (other instanceof OmnicommMessageOuterClass.OmnicommMessage.UniDt)
                        return mergeFrom((OmnicommMessageOuterClass.OmnicommMessage.UniDt) other);
                    super.mergeFrom(other);
                    return this;
                }

                public Builder mergeFrom(OmnicommMessageOuterClass.OmnicommMessage.UniDt other) {
                    if (other == OmnicommMessageOuterClass.OmnicommMessage.UniDt.getDefaultInstance())
                        return this;
                    if (other.hasUniVal0())
                        setUniVal0(other.getUniVal0());
                    if (other.hasUniVal1())
                        setUniVal1(other.getUniVal1());
                    if (other.hasUniVal2())
                        setUniVal2(other.getUniVal2());
                    if (other.hasUniVal3())
                        setUniVal3(other.getUniVal3());
                    if (other.hasUniVal4())
                        setUniVal4(other.getUniVal4());
                    if (other.hasUniVal5())
                        setUniVal5(other.getUniVal5());
                    mergeUnknownFields(other.unknownFields);
                    onChanged();
                    return this;
                }

                public final boolean isInitialized() {
                    return true;
                }

                public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                    OmnicommMessageOuterClass.OmnicommMessage.UniDt parsedMessage = null;
                    try {
                        parsedMessage = (OmnicommMessageOuterClass.OmnicommMessage.UniDt) OmnicommMessageOuterClass.OmnicommMessage.UniDt.PARSER.parsePartialFrom(input, extensionRegistry);
                    } catch (InvalidProtocolBufferException e) {
                        parsedMessage = (OmnicommMessageOuterClass.OmnicommMessage.UniDt) e.getUnfinishedMessage();
                        throw e.unwrapIOException();
                    } finally {
                        if (parsedMessage != null)
                            mergeFrom(parsedMessage);
                    }
                    return this;
                }

                public boolean hasUniVal0() {
                    return ((this.bitField0_ & 0x1) != 0);
                }

                public int getUniVal0() {
                    return this.uniVal0_;
                }

                public Builder setUniVal0(int value) {
                    this.bitField0_ |= 0x1;
                    this.uniVal0_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearUniVal0() {
                    this.bitField0_ &= 0xFFFFFFFE;
                    this.uniVal0_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasUniVal1() {
                    return ((this.bitField0_ & 0x2) != 0);
                }

                public int getUniVal1() {
                    return this.uniVal1_;
                }

                public Builder setUniVal1(int value) {
                    this.bitField0_ |= 0x2;
                    this.uniVal1_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearUniVal1() {
                    this.bitField0_ &= 0xFFFFFFFD;
                    this.uniVal1_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasUniVal2() {
                    return ((this.bitField0_ & 0x4) != 0);
                }

                public int getUniVal2() {
                    return this.uniVal2_;
                }

                public Builder setUniVal2(int value) {
                    this.bitField0_ |= 0x4;
                    this.uniVal2_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearUniVal2() {
                    this.bitField0_ &= 0xFFFFFFFB;
                    this.uniVal2_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasUniVal3() {
                    return ((this.bitField0_ & 0x8) != 0);
                }

                public int getUniVal3() {
                    return this.uniVal3_;
                }

                public Builder setUniVal3(int value) {
                    this.bitField0_ |= 0x8;
                    this.uniVal3_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearUniVal3() {
                    this.bitField0_ &= 0xFFFFFFF7;
                    this.uniVal3_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasUniVal4() {
                    return ((this.bitField0_ & 0x10) != 0);
                }

                public int getUniVal4() {
                    return this.uniVal4_;
                }

                public Builder setUniVal4(int value) {
                    this.bitField0_ |= 0x10;
                    this.uniVal4_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearUniVal4() {
                    this.bitField0_ &= 0xFFFFFFEF;
                    this.uniVal4_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasUniVal5() {
                    return ((this.bitField0_ & 0x20) != 0);
                }

                public int getUniVal5() {
                    return this.uniVal5_;
                }

                public Builder setUniVal5(int value) {
                    this.bitField0_ |= 0x20;
                    this.uniVal5_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearUniVal5() {
                    this.bitField0_ &= 0xFFFFFFDF;
                    this.uniVal5_ = 0;
                    onChanged();
                    return this;
                }

                public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
                    return (Builder) super.setUnknownFields(unknownFields);
                }

                public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
                    return (Builder) super.mergeUnknownFields(unknownFields);
                }
            }

            private static final UniDt DEFAULT_INSTANCE = new UniDt();

            public static UniDt getDefaultInstance() {
                return DEFAULT_INSTANCE;
            }

            @Deprecated
            public static final Parser<UniDt> PARSER = (Parser<UniDt>) new AbstractParser<UniDt>() {
                public OmnicommMessageOuterClass.OmnicommMessage.UniDt parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                    return new OmnicommMessageOuterClass.OmnicommMessage.UniDt(input, extensionRegistry);
                }
            };

            public static Parser<UniDt> parser() {
                return PARSER;
            }

            public Parser<UniDt> getParserForType() {
                return PARSER;
            }

            public UniDt getDefaultInstanceForType() {
                return DEFAULT_INSTANCE;
            }
        }

        public static final class Builder extends GeneratedMessageV3.Builder<UniDt.Builder> implements UniDtOrBuilder {
            private int bitField0_;

            private int uniVal0_;

            private int uniVal1_;

            private int uniVal2_;

            private int uniVal3_;

            private int uniVal4_;

            private int uniVal5_;

            public static final Descriptors.Descriptor getDescriptor() {
                return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_UniDt_descriptor;
            }

            protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
                return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_UniDt_fieldAccessorTable.ensureFieldAccessorsInitialized(OmnicommMessageOuterClass.OmnicommMessage.UniDt.class, Builder.class);
            }

            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessageV3.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (OmnicommMessageOuterClass.OmnicommMessage.UniDt.alwaysUseFieldBuilders) ;
            }

            public Builder clear() {
                super.clear();
                this.uniVal0_ = 0;
                this.bitField0_ &= 0xFFFFFFFE;
                this.uniVal1_ = 0;
                this.bitField0_ &= 0xFFFFFFFD;
                this.uniVal2_ = 0;
                this.bitField0_ &= 0xFFFFFFFB;
                this.uniVal3_ = 0;
                this.bitField0_ &= 0xFFFFFFF7;
                this.uniVal4_ = 0;
                this.bitField0_ &= 0xFFFFFFEF;
                this.uniVal5_ = 0;
                this.bitField0_ &= 0xFFFFFFDF;
                return this;
            }

            public Descriptors.Descriptor getDescriptorForType() {
                return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_UniDt_descriptor;
            }

            public OmnicommMessageOuterClass.OmnicommMessage.UniDt getDefaultInstanceForType() {
                return OmnicommMessageOuterClass.OmnicommMessage.UniDt.getDefaultInstance();
            }

            public OmnicommMessageOuterClass.OmnicommMessage.UniDt build() {
                OmnicommMessageOuterClass.OmnicommMessage.UniDt result = buildPartial();
                if (!result.isInitialized())
                    throw newUninitializedMessageException(result);
                return result;
            }

            public OmnicommMessageOuterClass.OmnicommMessage.UniDt buildPartial() {
                OmnicommMessageOuterClass.OmnicommMessage.UniDt result = new OmnicommMessageOuterClass.OmnicommMessage.UniDt(this);
                int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) != 0) {
                    result.uniVal0_ = this.uniVal0_;
                    to_bitField0_ |= 0x1;
                }
                if ((from_bitField0_ & 0x2) != 0) {
                    result.uniVal1_ = this.uniVal1_;
                    to_bitField0_ |= 0x2;
                }
                if ((from_bitField0_ & 0x4) != 0) {
                    result.uniVal2_ = this.uniVal2_;
                    to_bitField0_ |= 0x4;
                }
                if ((from_bitField0_ & 0x8) != 0) {
                    result.uniVal3_ = this.uniVal3_;
                    to_bitField0_ |= 0x8;
                }
                if ((from_bitField0_ & 0x10) != 0) {
                    result.uniVal4_ = this.uniVal4_;
                    to_bitField0_ |= 0x10;
                }
                if ((from_bitField0_ & 0x20) != 0) {
                    result.uniVal5_ = this.uniVal5_;
                    to_bitField0_ |= 0x20;
                }
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }

            public Builder setField(Descriptors.FieldDescriptor field, Object value) {
                return (Builder) super.setField(field, value);
            }

            public Builder clearField(Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }

            public Builder clearOneof(Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }

            public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }

            public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }

            public Builder mergeFrom(Message other) {
                if (other instanceof OmnicommMessageOuterClass.OmnicommMessage.UniDt)
                    return mergeFrom((OmnicommMessageOuterClass.OmnicommMessage.UniDt) other);
                super.mergeFrom(other);
                return this;
            }

            public Builder mergeFrom(OmnicommMessageOuterClass.OmnicommMessage.UniDt other) {
                if (other == OmnicommMessageOuterClass.OmnicommMessage.UniDt.getDefaultInstance())
                    return this;
                if (other.hasUniVal0())
                    setUniVal0(other.getUniVal0());
                if (other.hasUniVal1())
                    setUniVal1(other.getUniVal1());
                if (other.hasUniVal2())
                    setUniVal2(other.getUniVal2());
                if (other.hasUniVal3())
                    setUniVal3(other.getUniVal3());
                if (other.hasUniVal4())
                    setUniVal4(other.getUniVal4());
                if (other.hasUniVal5())
                    setUniVal5(other.getUniVal5());
                mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                OmnicommMessageOuterClass.OmnicommMessage.UniDt parsedMessage = null;
                try {
                    parsedMessage = (OmnicommMessageOuterClass.OmnicommMessage.UniDt) OmnicommMessageOuterClass.OmnicommMessage.UniDt.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (OmnicommMessageOuterClass.OmnicommMessage.UniDt) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null)
                        mergeFrom(parsedMessage);
                }
                return this;
            }

            public boolean hasUniVal0() {
                return ((this.bitField0_ & 0x1) != 0);
            }

            public int getUniVal0() {
                return this.uniVal0_;
            }

            public Builder setUniVal0(int value) {
                this.bitField0_ |= 0x1;
                this.uniVal0_ = value;
                onChanged();
                return this;
            }

            public Builder clearUniVal0() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.uniVal0_ = 0;
                onChanged();
                return this;
            }

            public boolean hasUniVal1() {
                return ((this.bitField0_ & 0x2) != 0);
            }

            public int getUniVal1() {
                return this.uniVal1_;
            }

            public Builder setUniVal1(int value) {
                this.bitField0_ |= 0x2;
                this.uniVal1_ = value;
                onChanged();
                return this;
            }

            public Builder clearUniVal1() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.uniVal1_ = 0;
                onChanged();
                return this;
            }

            public boolean hasUniVal2() {
                return ((this.bitField0_ & 0x4) != 0);
            }

            public int getUniVal2() {
                return this.uniVal2_;
            }

            public Builder setUniVal2(int value) {
                this.bitField0_ |= 0x4;
                this.uniVal2_ = value;
                onChanged();
                return this;
            }

            public Builder clearUniVal2() {
                this.bitField0_ &= 0xFFFFFFFB;
                this.uniVal2_ = 0;
                onChanged();
                return this;
            }

            public boolean hasUniVal3() {
                return ((this.bitField0_ & 0x8) != 0);
            }

            public int getUniVal3() {
                return this.uniVal3_;
            }

            public Builder setUniVal3(int value) {
                this.bitField0_ |= 0x8;
                this.uniVal3_ = value;
                onChanged();
                return this;
            }

            public Builder clearUniVal3() {
                this.bitField0_ &= 0xFFFFFFF7;
                this.uniVal3_ = 0;
                onChanged();
                return this;
            }

            public boolean hasUniVal4() {
                return ((this.bitField0_ & 0x10) != 0);
            }

            public int getUniVal4() {
                return this.uniVal4_;
            }

            public Builder setUniVal4(int value) {
                this.bitField0_ |= 0x10;
                this.uniVal4_ = value;
                onChanged();
                return this;
            }

            public Builder clearUniVal4() {
                this.bitField0_ &= 0xFFFFFFEF;
                this.uniVal4_ = 0;
                onChanged();
                return this;
            }

            public boolean hasUniVal5() {
                return ((this.bitField0_ & 0x20) != 0);
            }

            public int getUniVal5() {
                return this.uniVal5_;
            }

            public Builder setUniVal5(int value) {
                this.bitField0_ |= 0x20;
                this.uniVal5_ = value;
                onChanged();
                return this;
            }

            public Builder clearUniVal5() {
                this.bitField0_ &= 0xFFFFFFDF;
                this.uniVal5_ = 0;
                onChanged();
                return this;
            }

            public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
                return (Builder) super.setUnknownFields(unknownFields);
            }

            public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
                return (Builder) super.mergeUnknownFields(unknownFields);
            }
        }

        public static final class CanDt_J1939 extends GeneratedMessageV3 implements CanDt_J1939OrBuilder {
            private static final long serialVersionUID = 0L;

            private int bitField0_;

            public static final int SPN70_FIELD_NUMBER = 70;

            private int sPN70_;

            public static final int SPN91_FIELD_NUMBER = 91;

            private int sPN91_;

            public static final int SPN96_FIELD_NUMBER = 96;

            private int sPN96_;

            public static final int SPN100_FIELD_NUMBER = 100;

            private int sPN100_;

            public static final int SPN110_FIELD_NUMBER = 110;

            private int sPN110_;

            public static final int SPN174_FIELD_NUMBER = 174;

            private int sPN174_;

            public static final int SPN175_FIELD_NUMBER = 175;

            private int sPN175_;

            public static final int SPN182_FIELD_NUMBER = 182;

            private int sPN182_;

            public static final int SPN184_FIELD_NUMBER = 184;

            private int sPN184_;

            public static final int SPN190_FIELD_NUMBER = 190;

            private int sPN190_;

            public static final int SPN244_FIELD_NUMBER = 244;

            private int sPN244_;

            public static final int SPN245_FIELD_NUMBER = 245;

            private int sPN245_;

            public static final int SPN247_FIELD_NUMBER = 247;

            private int sPN247_;

            public static final int SPN250_FIELD_NUMBER = 250;

            private int sPN250_;

            public static final int SPN521_FIELD_NUMBER = 521;

            private int sPN521_;

            public static final int SPN522_FIELD_NUMBER = 522;

            private int sPN522_;

            public static final int SPN527_FIELD_NUMBER = 527;

            private int sPN527_;

            public static final int SPN582_FIELD_NUMBER = 582;

            private Internal.IntList sPN582_;

            private int sPN582MemoizedSerializedSize;

            public static final int SPN597_FIELD_NUMBER = 597;

            private int sPN597_;

            public static final int SPN598_FIELD_NUMBER = 598;

            private int sPN598_;

            public static final int SPN914_FIELD_NUMBER = 914;

            private int sPN914_;

            public static final int SPN916_FIELD_NUMBER = 916;

            private int sPN916_;

            public static final int SPN928_FIELD_NUMBER = 928;

            private Internal.IntList sPN928_;

            private int sPN928MemoizedSerializedSize;

            public static final int SPN1624_FIELD_NUMBER = 1624;

            private int sPN1624_;

            public static final int SPN1821_FIELD_NUMBER = 1821;

            private int sPN1821_;

            public static final int SPN1856_FIELD_NUMBER = 1856;

            private int sPN1856_;

            private byte memoizedIsInitialized;

            private CanDt_J1939(GeneratedMessageV3.Builder<?> builder) {
                super(builder);
                this.sPN582MemoizedSerializedSize = -1;
                this.sPN928MemoizedSerializedSize = -1;
                this.memoizedIsInitialized = -1;
            }

            private CanDt_J1939() {
                this.sPN582MemoizedSerializedSize = -1;
                this.sPN928MemoizedSerializedSize = -1;
                this.memoizedIsInitialized = -1;
                this.sPN582_ = emptyIntList();
                this.sPN928_ = emptyIntList();
            }

            protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) {
                return new CanDt_J1939();
            }

            public final UnknownFieldSet getUnknownFields() {
                return this.unknownFields;
            }

            private CanDt_J1939(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                this();
                if (extensionRegistry == null)
                    throw new NullPointerException();
                int mutable_bitField0_ = 0;
                UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
                try {
                    boolean done = false;
                    while (!done) {
                        int length, limit, tag = input.readTag();
                        switch (tag) {
                            case 0:
                                done = true;
                                continue;
                            case 560:
                                this.bitField0_ |= 0x1;
                                this.sPN70_ = input.readUInt32();
                                continue;
                            case 728:
                                this.bitField0_ |= 0x2;
                                this.sPN91_ = input.readUInt32();
                                continue;
                            case 768:
                                this.bitField0_ |= 0x4;
                                this.sPN96_ = input.readUInt32();
                                continue;
                            case 800:
                                this.bitField0_ |= 0x8;
                                this.sPN100_ = input.readUInt32();
                                continue;
                            case 880:
                                this.bitField0_ |= 0x10;
                                this.sPN110_ = input.readUInt32();
                                continue;
                            case 1392:
                                this.bitField0_ |= 0x20;
                                this.sPN174_ = input.readUInt32();
                                continue;
                            case 1400:
                                this.bitField0_ |= 0x40;
                                this.sPN175_ = input.readUInt32();
                                continue;
                            case 1456:
                                this.bitField0_ |= 0x80;
                                this.sPN182_ = input.readUInt32();
                                continue;
                            case 1472:
                                this.bitField0_ |= 0x100;
                                this.sPN184_ = input.readUInt32();
                                continue;
                            case 1520:
                                this.bitField0_ |= 0x200;
                                this.sPN190_ = input.readUInt32();
                                continue;
                            case 1952:
                                this.bitField0_ |= 0x400;
                                this.sPN244_ = input.readUInt32();
                                continue;
                            case 1960:
                                this.bitField0_ |= 0x800;
                                this.sPN245_ = input.readUInt32();
                                continue;
                            case 1976:
                                this.bitField0_ |= 0x1000;
                                this.sPN247_ = input.readUInt32();
                                continue;
                            case 2000:
                                this.bitField0_ |= 0x2000;
                                this.sPN250_ = input.readUInt32();
                                continue;
                            case 4168:
                                this.bitField0_ |= 0x4000;
                                this.sPN521_ = input.readUInt32();
                                continue;
                            case 4176:
                                this.bitField0_ |= 0x8000;
                                this.sPN522_ = input.readUInt32();
                                continue;
                            case 4216:
                                this.bitField0_ |= 0x10000;
                                this.sPN527_ = input.readUInt32();
                                continue;
                            case 4656:
                                if ((mutable_bitField0_ & 0x20000) == 0) {
                                    this.sPN582_ = newIntList();
                                    mutable_bitField0_ |= 0x20000;
                                }
                                this.sPN582_.addInt(input.readUInt32());
                                continue;
                            case 4658:
                                length = input.readRawVarint32();
                                limit = input.pushLimit(length);
                                if ((mutable_bitField0_ & 0x20000) == 0 && input.getBytesUntilLimit() > 0) {
                                    this.sPN582_ = newIntList();
                                    mutable_bitField0_ |= 0x20000;
                                }
                                while (input.getBytesUntilLimit() > 0)
                                    this.sPN582_.addInt(input.readUInt32());
                                input.popLimit(limit);
                                continue;
                            case 4776:
                                this.bitField0_ |= 0x20000;
                                this.sPN597_ = input.readUInt32();
                                continue;
                            case 4784:
                                this.bitField0_ |= 0x40000;
                                this.sPN598_ = input.readUInt32();
                                continue;
                            case 7312:
                                this.bitField0_ |= 0x80000;
                                this.sPN914_ = input.readUInt32();
                                continue;
                            case 7328:
                                this.bitField0_ |= 0x100000;
                                this.sPN916_ = input.readUInt32();
                                continue;
                            case 7424:
                                if ((mutable_bitField0_ & 0x400000) == 0) {
                                    this.sPN928_ = newIntList();
                                    mutable_bitField0_ |= 0x400000;
                                }
                                this.sPN928_.addInt(input.readUInt32());
                                continue;
                            case 7426:
                                length = input.readRawVarint32();
                                limit = input.pushLimit(length);
                                if ((mutable_bitField0_ & 0x400000) == 0 && input.getBytesUntilLimit() > 0) {
                                    this.sPN928_ = newIntList();
                                    mutable_bitField0_ |= 0x400000;
                                }
                                while (input.getBytesUntilLimit() > 0)
                                    this.sPN928_.addInt(input.readUInt32());
                                input.popLimit(limit);
                                continue;
                            case 12992:
                                this.bitField0_ |= 0x200000;
                                this.sPN1624_ = input.readUInt32();
                                continue;
                            case 14568:
                                this.bitField0_ |= 0x400000;
                                this.sPN1821_ = input.readUInt32();
                                continue;
                            case 14848:
                                this.bitField0_ |= 0x800000;
                                this.sPN1856_ = input.readUInt32();
                                continue;
                        }
                        if (!parseUnknownField(input, unknownFields, extensionRegistry, tag))
                            done = true;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e) {
                    throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this);
                } finally {
                    if ((mutable_bitField0_ & 0x20000) != 0)
                        this.sPN582_.makeImmutable();
                    if ((mutable_bitField0_ & 0x400000) != 0)
                        this.sPN928_.makeImmutable();
                    this.unknownFields = unknownFields.build();
                    makeExtensionsImmutable();
                }
            }

            public static final Descriptors.Descriptor getDescriptor() {
                return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_CanDt_J1939_descriptor;
            }

            protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
                return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_CanDt_J1939_fieldAccessorTable.ensureFieldAccessorsInitialized(CanDt_J1939.class, Builder.class);
            }

            public boolean hasSPN70() {
                return ((this.bitField0_ & 0x1) != 0);
            }

            public int getSPN70() {
                return this.sPN70_;
            }

            public boolean hasSPN91() {
                return ((this.bitField0_ & 0x2) != 0);
            }

            public int getSPN91() {
                return this.sPN91_;
            }

            public boolean hasSPN96() {
                return ((this.bitField0_ & 0x4) != 0);
            }

            public int getSPN96() {
                return this.sPN96_;
            }

            public boolean hasSPN100() {
                return ((this.bitField0_ & 0x8) != 0);
            }

            public int getSPN100() {
                return this.sPN100_;
            }

            public boolean hasSPN110() {
                return ((this.bitField0_ & 0x10) != 0);
            }

            public int getSPN110() {
                return this.sPN110_;
            }

            public boolean hasSPN174() {
                return ((this.bitField0_ & 0x20) != 0);
            }

            public int getSPN174() {
                return this.sPN174_;
            }

            public boolean hasSPN175() {
                return ((this.bitField0_ & 0x40) != 0);
            }

            public int getSPN175() {
                return this.sPN175_;
            }

            public boolean hasSPN182() {
                return ((this.bitField0_ & 0x80) != 0);
            }

            public int getSPN182() {
                return this.sPN182_;
            }

            public boolean hasSPN184() {
                return ((this.bitField0_ & 0x100) != 0);
            }

            public int getSPN184() {
                return this.sPN184_;
            }

            public boolean hasSPN190() {
                return ((this.bitField0_ & 0x200) != 0);
            }

            public int getSPN190() {
                return this.sPN190_;
            }

            public boolean hasSPN244() {
                return ((this.bitField0_ & 0x400) != 0);
            }

            public int getSPN244() {
                return this.sPN244_;
            }

            public boolean hasSPN245() {
                return ((this.bitField0_ & 0x800) != 0);
            }

            public int getSPN245() {
                return this.sPN245_;
            }

            public boolean hasSPN247() {
                return ((this.bitField0_ & 0x1000) != 0);
            }

            public int getSPN247() {
                return this.sPN247_;
            }

            public boolean hasSPN250() {
                return ((this.bitField0_ & 0x2000) != 0);
            }

            public int getSPN250() {
                return this.sPN250_;
            }

            public boolean hasSPN521() {
                return ((this.bitField0_ & 0x4000) != 0);
            }

            public int getSPN521() {
                return this.sPN521_;
            }

            public boolean hasSPN522() {
                return ((this.bitField0_ & 0x8000) != 0);
            }

            public int getSPN522() {
                return this.sPN522_;
            }

            public boolean hasSPN527() {
                return ((this.bitField0_ & 0x10000) != 0);
            }

            public int getSPN527() {
                return this.sPN527_;
            }

            public List<Integer> getSPN582List() {
                return (List<Integer>) this.sPN582_;
            }

            public int getSPN582Count() {
                return this.sPN582_.size();
            }

            public int getSPN582(int index) {
                return this.sPN582_.getInt(index);
            }

            public boolean hasSPN597() {
                return ((this.bitField0_ & 0x20000) != 0);
            }

            public int getSPN597() {
                return this.sPN597_;
            }

            public boolean hasSPN598() {
                return ((this.bitField0_ & 0x40000) != 0);
            }

            public int getSPN598() {
                return this.sPN598_;
            }

            public boolean hasSPN914() {
                return ((this.bitField0_ & 0x80000) != 0);
            }

            public int getSPN914() {
                return this.sPN914_;
            }

            public boolean hasSPN916() {
                return ((this.bitField0_ & 0x100000) != 0);
            }

            public int getSPN916() {
                return this.sPN916_;
            }

            public List<Integer> getSPN928List() {
                return (List<Integer>) this.sPN928_;
            }

            public int getSPN928Count() {
                return this.sPN928_.size();
            }

            public int getSPN928(int index) {
                return this.sPN928_.getInt(index);
            }

            public boolean hasSPN1624() {
                return ((this.bitField0_ & 0x200000) != 0);
            }

            public int getSPN1624() {
                return this.sPN1624_;
            }

            public boolean hasSPN1821() {
                return ((this.bitField0_ & 0x400000) != 0);
            }

            public int getSPN1821() {
                return this.sPN1821_;
            }

            public boolean hasSPN1856() {
                return ((this.bitField0_ & 0x800000) != 0);
            }

            public int getSPN1856() {
                return this.sPN1856_;
            }

            public final boolean isInitialized() {
                byte isInitialized = this.memoizedIsInitialized;
                if (isInitialized == 1)
                    return true;
                if (isInitialized == 0)
                    return false;
                this.memoizedIsInitialized = 1;
                return true;
            }

            public void writeTo(CodedOutputStream output) throws IOException {
                getSerializedSize();
                if ((this.bitField0_ & 0x1) != 0)
                    output.writeUInt32(70, this.sPN70_);
                if ((this.bitField0_ & 0x2) != 0)
                    output.writeUInt32(91, this.sPN91_);
                if ((this.bitField0_ & 0x4) != 0)
                    output.writeUInt32(96, this.sPN96_);
                if ((this.bitField0_ & 0x8) != 0)
                    output.writeUInt32(100, this.sPN100_);
                if ((this.bitField0_ & 0x10) != 0)
                    output.writeUInt32(110, this.sPN110_);
                if ((this.bitField0_ & 0x20) != 0)
                    output.writeUInt32(174, this.sPN174_);
                if ((this.bitField0_ & 0x40) != 0)
                    output.writeUInt32(175, this.sPN175_);
                if ((this.bitField0_ & 0x80) != 0)
                    output.writeUInt32(182, this.sPN182_);
                if ((this.bitField0_ & 0x100) != 0)
                    output.writeUInt32(184, this.sPN184_);
                if ((this.bitField0_ & 0x200) != 0)
                    output.writeUInt32(190, this.sPN190_);
                if ((this.bitField0_ & 0x400) != 0)
                    output.writeUInt32(244, this.sPN244_);
                if ((this.bitField0_ & 0x800) != 0)
                    output.writeUInt32(245, this.sPN245_);
                if ((this.bitField0_ & 0x1000) != 0)
                    output.writeUInt32(247, this.sPN247_);
                if ((this.bitField0_ & 0x2000) != 0)
                    output.writeUInt32(250, this.sPN250_);
                if ((this.bitField0_ & 0x4000) != 0)
                    output.writeUInt32(521, this.sPN521_);
                if ((this.bitField0_ & 0x8000) != 0)
                    output.writeUInt32(522, this.sPN522_);
                if ((this.bitField0_ & 0x10000) != 0)
                    output.writeUInt32(527, this.sPN527_);
                if (getSPN582List().size() > 0) {
                    output.writeUInt32NoTag(4658);
                    output.writeUInt32NoTag(this.sPN582MemoizedSerializedSize);
                }
                int i;
                for (i = 0; i < this.sPN582_.size(); i++)
                    output.writeUInt32NoTag(this.sPN582_.getInt(i));
                if ((this.bitField0_ & 0x20000) != 0)
                    output.writeUInt32(597, this.sPN597_);
                if ((this.bitField0_ & 0x40000) != 0)
                    output.writeUInt32(598, this.sPN598_);
                if ((this.bitField0_ & 0x80000) != 0)
                    output.writeUInt32(914, this.sPN914_);
                if ((this.bitField0_ & 0x100000) != 0)
                    output.writeUInt32(916, this.sPN916_);
                if (getSPN928List().size() > 0) {
                    output.writeUInt32NoTag(7426);
                    output.writeUInt32NoTag(this.sPN928MemoizedSerializedSize);
                }
                for (i = 0; i < this.sPN928_.size(); i++)
                    output.writeUInt32NoTag(this.sPN928_.getInt(i));
                if ((this.bitField0_ & 0x200000) != 0)
                    output.writeUInt32(1624, this.sPN1624_);
                if ((this.bitField0_ & 0x400000) != 0)
                    output.writeUInt32(1821, this.sPN1821_);
                if ((this.bitField0_ & 0x800000) != 0)
                    output.writeUInt32(1856, this.sPN1856_);
                this.unknownFields.writeTo(output);
            }

            public int getSerializedSize() {
                int size = this.memoizedSize;
                if (size != -1)
                    return size;
                size = 0;
                if ((this.bitField0_ & 0x1) != 0)
                    size += CodedOutputStream.computeUInt32Size(70, this.sPN70_);
                if ((this.bitField0_ & 0x2) != 0)
                    size += CodedOutputStream.computeUInt32Size(91, this.sPN91_);
                if ((this.bitField0_ & 0x4) != 0)
                    size += CodedOutputStream.computeUInt32Size(96, this.sPN96_);
                if ((this.bitField0_ & 0x8) != 0)
                    size += CodedOutputStream.computeUInt32Size(100, this.sPN100_);
                if ((this.bitField0_ & 0x10) != 0)
                    size += CodedOutputStream.computeUInt32Size(110, this.sPN110_);
                if ((this.bitField0_ & 0x20) != 0)
                    size += CodedOutputStream.computeUInt32Size(174, this.sPN174_);
                if ((this.bitField0_ & 0x40) != 0)
                    size += CodedOutputStream.computeUInt32Size(175, this.sPN175_);
                if ((this.bitField0_ & 0x80) != 0)
                    size += CodedOutputStream.computeUInt32Size(182, this.sPN182_);
                if ((this.bitField0_ & 0x100) != 0)
                    size += CodedOutputStream.computeUInt32Size(184, this.sPN184_);
                if ((this.bitField0_ & 0x200) != 0)
                    size += CodedOutputStream.computeUInt32Size(190, this.sPN190_);
                if ((this.bitField0_ & 0x400) != 0)
                    size += CodedOutputStream.computeUInt32Size(244, this.sPN244_);
                if ((this.bitField0_ & 0x800) != 0)
                    size += CodedOutputStream.computeUInt32Size(245, this.sPN245_);
                if ((this.bitField0_ & 0x1000) != 0)
                    size += CodedOutputStream.computeUInt32Size(247, this.sPN247_);
                if ((this.bitField0_ & 0x2000) != 0)
                    size += CodedOutputStream.computeUInt32Size(250, this.sPN250_);
                if ((this.bitField0_ & 0x4000) != 0)
                    size += CodedOutputStream.computeUInt32Size(521, this.sPN521_);
                if ((this.bitField0_ & 0x8000) != 0)
                    size += CodedOutputStream.computeUInt32Size(522, this.sPN522_);
                if ((this.bitField0_ & 0x10000) != 0)
                    size += CodedOutputStream.computeUInt32Size(527, this.sPN527_);
                int dataSize = 0;
                int i;
                for (i = 0; i < this.sPN582_.size(); i++)
                    dataSize += CodedOutputStream.computeUInt32SizeNoTag(this.sPN582_.getInt(i));
                size += dataSize;
                if (!getSPN582List().isEmpty()) {
                    size += 2;
                    size += CodedOutputStream.computeInt32SizeNoTag(dataSize);
                }
                this.sPN582MemoizedSerializedSize = dataSize;
                if ((this.bitField0_ & 0x20000) != 0)
                    size += CodedOutputStream.computeUInt32Size(597, this.sPN597_);
                if ((this.bitField0_ & 0x40000) != 0)
                    size += CodedOutputStream.computeUInt32Size(598, this.sPN598_);
                if ((this.bitField0_ & 0x80000) != 0)
                    size += CodedOutputStream.computeUInt32Size(914, this.sPN914_);
                if ((this.bitField0_ & 0x100000) != 0)
                    size += CodedOutputStream.computeUInt32Size(916, this.sPN916_);
                dataSize = 0;
                for (i = 0; i < this.sPN928_.size(); i++)
                    dataSize += CodedOutputStream.computeUInt32SizeNoTag(this.sPN928_.getInt(i));
                size += dataSize;
                if (!getSPN928List().isEmpty()) {
                    size += 2;
                    size += CodedOutputStream.computeInt32SizeNoTag(dataSize);
                }
                this.sPN928MemoizedSerializedSize = dataSize;
                if ((this.bitField0_ & 0x200000) != 0)
                    size += CodedOutputStream.computeUInt32Size(1624, this.sPN1624_);
                if ((this.bitField0_ & 0x400000) != 0)
                    size += CodedOutputStream.computeUInt32Size(1821, this.sPN1821_);
                if ((this.bitField0_ & 0x800000) != 0)
                    size += CodedOutputStream.computeUInt32Size(1856, this.sPN1856_);
                size += this.unknownFields.getSerializedSize();
                this.memoizedSize = size;
                return size;
            }

            public boolean equals(Object obj) {
                if (obj == this)
                    return true;
                if (!(obj instanceof CanDt_J1939))
                    return super.equals(obj);
                CanDt_J1939 other = (CanDt_J1939) obj;
                if (hasSPN70() != other.hasSPN70())
                    return false;
                if (hasSPN70() && getSPN70() != other.getSPN70())
                    return false;
                if (hasSPN91() != other.hasSPN91())
                    return false;
                if (hasSPN91() && getSPN91() != other.getSPN91())
                    return false;
                if (hasSPN96() != other.hasSPN96())
                    return false;
                if (hasSPN96() && getSPN96() != other.getSPN96())
                    return false;
                if (hasSPN100() != other.hasSPN100())
                    return false;
                if (hasSPN100() && getSPN100() != other.getSPN100())
                    return false;
                if (hasSPN110() != other.hasSPN110())
                    return false;
                if (hasSPN110() && getSPN110() != other.getSPN110())
                    return false;
                if (hasSPN174() != other.hasSPN174())
                    return false;
                if (hasSPN174() && getSPN174() != other.getSPN174())
                    return false;
                if (hasSPN175() != other.hasSPN175())
                    return false;
                if (hasSPN175() && getSPN175() != other.getSPN175())
                    return false;
                if (hasSPN182() != other.hasSPN182())
                    return false;
                if (hasSPN182() && getSPN182() != other.getSPN182())
                    return false;
                if (hasSPN184() != other.hasSPN184())
                    return false;
                if (hasSPN184() && getSPN184() != other.getSPN184())
                    return false;
                if (hasSPN190() != other.hasSPN190())
                    return false;
                if (hasSPN190() && getSPN190() != other.getSPN190())
                    return false;
                if (hasSPN244() != other.hasSPN244())
                    return false;
                if (hasSPN244() && getSPN244() != other.getSPN244())
                    return false;
                if (hasSPN245() != other.hasSPN245())
                    return false;
                if (hasSPN245() && getSPN245() != other.getSPN245())
                    return false;
                if (hasSPN247() != other.hasSPN247())
                    return false;
                if (hasSPN247() && getSPN247() != other.getSPN247())
                    return false;
                if (hasSPN250() != other.hasSPN250())
                    return false;
                if (hasSPN250() && getSPN250() != other.getSPN250())
                    return false;
                if (hasSPN521() != other.hasSPN521())
                    return false;
                if (hasSPN521() && getSPN521() != other.getSPN521())
                    return false;
                if (hasSPN522() != other.hasSPN522())
                    return false;
                if (hasSPN522() && getSPN522() != other.getSPN522())
                    return false;
                if (hasSPN527() != other.hasSPN527())
                    return false;
                if (hasSPN527() && getSPN527() != other.getSPN527())
                    return false;
                if (!getSPN582List().equals(other.getSPN582List()))
                    return false;
                if (hasSPN597() != other.hasSPN597())
                    return false;
                if (hasSPN597() && getSPN597() != other.getSPN597())
                    return false;
                if (hasSPN598() != other.hasSPN598())
                    return false;
                if (hasSPN598() && getSPN598() != other.getSPN598())
                    return false;
                if (hasSPN914() != other.hasSPN914())
                    return false;
                if (hasSPN914() && getSPN914() != other.getSPN914())
                    return false;
                if (hasSPN916() != other.hasSPN916())
                    return false;
                if (hasSPN916() && getSPN916() != other.getSPN916())
                    return false;
                if (!getSPN928List().equals(other.getSPN928List()))
                    return false;
                if (hasSPN1624() != other.hasSPN1624())
                    return false;
                if (hasSPN1624() && getSPN1624() != other.getSPN1624())
                    return false;
                if (hasSPN1821() != other.hasSPN1821())
                    return false;
                if (hasSPN1821() && getSPN1821() != other.getSPN1821())
                    return false;
                if (hasSPN1856() != other.hasSPN1856())
                    return false;
                if (hasSPN1856() && getSPN1856() != other.getSPN1856())
                    return false;
                if (!this.unknownFields.equals(other.unknownFields))
                    return false;
                return true;
            }

            public int hashCode() {
                if (this.memoizedHashCode != 0)
                    return this.memoizedHashCode;
                int hash = 41;
                hash = 19 * hash + getDescriptor().hashCode();
                if (hasSPN70()) {
                    hash = 37 * hash + 70;
                    hash = 53 * hash + getSPN70();
                }
                if (hasSPN91()) {
                    hash = 37 * hash + 91;
                    hash = 53 * hash + getSPN91();
                }
                if (hasSPN96()) {
                    hash = 37 * hash + 96;
                    hash = 53 * hash + getSPN96();
                }
                if (hasSPN100()) {
                    hash = 37 * hash + 100;
                    hash = 53 * hash + getSPN100();
                }
                if (hasSPN110()) {
                    hash = 37 * hash + 110;
                    hash = 53 * hash + getSPN110();
                }
                if (hasSPN174()) {
                    hash = 37 * hash + 174;
                    hash = 53 * hash + getSPN174();
                }
                if (hasSPN175()) {
                    hash = 37 * hash + 175;
                    hash = 53 * hash + getSPN175();
                }
                if (hasSPN182()) {
                    hash = 37 * hash + 182;
                    hash = 53 * hash + getSPN182();
                }
                if (hasSPN184()) {
                    hash = 37 * hash + 184;
                    hash = 53 * hash + getSPN184();
                }
                if (hasSPN190()) {
                    hash = 37 * hash + 190;
                    hash = 53 * hash + getSPN190();
                }
                if (hasSPN244()) {
                    hash = 37 * hash + 244;
                    hash = 53 * hash + getSPN244();
                }
                if (hasSPN245()) {
                    hash = 37 * hash + 245;
                    hash = 53 * hash + getSPN245();
                }
                if (hasSPN247()) {
                    hash = 37 * hash + 247;
                    hash = 53 * hash + getSPN247();
                }
                if (hasSPN250()) {
                    hash = 37 * hash + 250;
                    hash = 53 * hash + getSPN250();
                }
                if (hasSPN521()) {
                    hash = 37 * hash + 521;
                    hash = 53 * hash + getSPN521();
                }
                if (hasSPN522()) {
                    hash = 37 * hash + 522;
                    hash = 53 * hash + getSPN522();
                }
                if (hasSPN527()) {
                    hash = 37 * hash + 527;
                    hash = 53 * hash + getSPN527();
                }
                if (getSPN582Count() > 0) {
                    hash = 37 * hash + 582;
                    hash = 53 * hash + getSPN582List().hashCode();
                }
                if (hasSPN597()) {
                    hash = 37 * hash + 597;
                    hash = 53 * hash + getSPN597();
                }
                if (hasSPN598()) {
                    hash = 37 * hash + 598;
                    hash = 53 * hash + getSPN598();
                }
                if (hasSPN914()) {
                    hash = 37 * hash + 914;
                    hash = 53 * hash + getSPN914();
                }
                if (hasSPN916()) {
                    hash = 37 * hash + 916;
                    hash = 53 * hash + getSPN916();
                }
                if (getSPN928Count() > 0) {
                    hash = 37 * hash + 928;
                    hash = 53 * hash + getSPN928List().hashCode();
                }
                if (hasSPN1624()) {
                    hash = 37 * hash + 1624;
                    hash = 53 * hash + getSPN1624();
                }
                if (hasSPN1821()) {
                    hash = 37 * hash + 1821;
                    hash = 53 * hash + getSPN1821();
                }
                if (hasSPN1856()) {
                    hash = 37 * hash + 1856;
                    hash = 53 * hash + getSPN1856();
                }
                hash = 29 * hash + this.unknownFields.hashCode();
                this.memoizedHashCode = hash;
                return hash;
            }

            public static CanDt_J1939 parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
                return (CanDt_J1939) PARSER.parseFrom(data);
            }

            public static CanDt_J1939 parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return (CanDt_J1939) PARSER.parseFrom(data, extensionRegistry);
            }

            public static CanDt_J1939 parseFrom(ByteString data) throws InvalidProtocolBufferException {
                return (CanDt_J1939) PARSER.parseFrom(data);
            }

            public static CanDt_J1939 parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return (CanDt_J1939) PARSER.parseFrom(data, extensionRegistry);
            }

            public static CanDt_J1939 parseFrom(byte[] data) throws InvalidProtocolBufferException {
                return (CanDt_J1939) PARSER.parseFrom(data);
            }

            public static CanDt_J1939 parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return (CanDt_J1939) PARSER.parseFrom(data, extensionRegistry);
            }

            public static CanDt_J1939 parseFrom(InputStream input) throws IOException {
                return (CanDt_J1939) GeneratedMessageV3.parseWithIOException(PARSER, input);
            }

            public static CanDt_J1939 parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                return (CanDt_J1939) GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
            }

            public static CanDt_J1939 parseDelimitedFrom(InputStream input) throws IOException {
                return (CanDt_J1939) GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
            }

            public static CanDt_J1939 parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                return (CanDt_J1939) GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
            }

            public static CanDt_J1939 parseFrom(CodedInputStream input) throws IOException {
                return (CanDt_J1939) GeneratedMessageV3.parseWithIOException(PARSER, input);
            }

            public static CanDt_J1939 parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                return (CanDt_J1939) GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
            }

            public Builder newBuilderForType() {
                return newBuilder();
            }

            public static Builder newBuilder() {
                return DEFAULT_INSTANCE.toBuilder();
            }

            public static Builder newBuilder(CanDt_J1939 prototype) {
                return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
            }

            public Builder toBuilder() {
                return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder()).mergeFrom(this);
            }

            protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
                Builder builder = new Builder(parent);
                return builder;
            }

            public static final class Builder extends GeneratedMessageV3.Builder<Builder> implements OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939OrBuilder {
                private int bitField0_;

                private int sPN70_;

                private int sPN91_;

                private int sPN96_;

                private int sPN100_;

                private int sPN110_;

                private int sPN174_;

                private int sPN175_;

                private int sPN182_;

                private int sPN184_;

                private int sPN190_;

                private int sPN244_;

                private int sPN245_;

                private int sPN247_;

                private int sPN250_;

                private int sPN521_;

                private int sPN522_;

                private int sPN527_;

                private Internal.IntList sPN582_;

                private int sPN597_;

                private int sPN598_;

                private int sPN914_;

                private int sPN916_;

                private Internal.IntList sPN928_;

                private int sPN1624_;

                private int sPN1821_;

                private int sPN1856_;

                public static final Descriptors.Descriptor getDescriptor() {
                    return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_CanDt_J1939_descriptor;
                }

                protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
                    return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_CanDt_J1939_fieldAccessorTable.ensureFieldAccessorsInitialized(OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939.class, Builder.class);
                }

                private Builder() {
                    this.sPN582_ = OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939.emptyIntList();
                    this.sPN928_ = OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939.emptyIntList();
                    maybeForceBuilderInitialization();
                }

                private Builder(GeneratedMessageV3.BuilderParent parent) {
                    super(parent);
                    this.sPN582_ = OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939.emptyIntList();
                    this.sPN928_ = OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939.emptyIntList();
                    maybeForceBuilderInitialization();
                }

                private void maybeForceBuilderInitialization() {
                    if (OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939.alwaysUseFieldBuilders) ;
                }

                public Builder clear() {
                    super.clear();
                    this.sPN70_ = 0;
                    this.bitField0_ &= 0xFFFFFFFE;
                    this.sPN91_ = 0;
                    this.bitField0_ &= 0xFFFFFFFD;
                    this.sPN96_ = 0;
                    this.bitField0_ &= 0xFFFFFFFB;
                    this.sPN100_ = 0;
                    this.bitField0_ &= 0xFFFFFFF7;
                    this.sPN110_ = 0;
                    this.bitField0_ &= 0xFFFFFFEF;
                    this.sPN174_ = 0;
                    this.bitField0_ &= 0xFFFFFFDF;
                    this.sPN175_ = 0;
                    this.bitField0_ &= 0xFFFFFFBF;
                    this.sPN182_ = 0;
                    this.bitField0_ &= 0xFFFFFF7F;
                    this.sPN184_ = 0;
                    this.bitField0_ &= 0xFFFFFEFF;
                    this.sPN190_ = 0;
                    this.bitField0_ &= 0xFFFFFDFF;
                    this.sPN244_ = 0;
                    this.bitField0_ &= 0xFFFFFBFF;
                    this.sPN245_ = 0;
                    this.bitField0_ &= 0xFFFFF7FF;
                    this.sPN247_ = 0;
                    this.bitField0_ &= 0xFFFFEFFF;
                    this.sPN250_ = 0;
                    this.bitField0_ &= 0xFFFFDFFF;
                    this.sPN521_ = 0;
                    this.bitField0_ &= 0xFFFFBFFF;
                    this.sPN522_ = 0;
                    this.bitField0_ &= 0xFFFF7FFF;
                    this.sPN527_ = 0;
                    this.bitField0_ &= 0xFFFEFFFF;
                    this.sPN582_ = OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939.emptyIntList();
                    this.bitField0_ &= 0xFFFDFFFF;
                    this.sPN597_ = 0;
                    this.bitField0_ &= 0xFFFBFFFF;
                    this.sPN598_ = 0;
                    this.bitField0_ &= 0xFFF7FFFF;
                    this.sPN914_ = 0;
                    this.bitField0_ &= 0xFFEFFFFF;
                    this.sPN916_ = 0;
                    this.bitField0_ &= 0xFFDFFFFF;
                    this.sPN928_ = OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939.emptyIntList();
                    this.bitField0_ &= 0xFFBFFFFF;
                    this.sPN1624_ = 0;
                    this.bitField0_ &= 0xFF7FFFFF;
                    this.sPN1821_ = 0;
                    this.bitField0_ &= 0xFEFFFFFF;
                    this.sPN1856_ = 0;
                    this.bitField0_ &= 0xFDFFFFFF;
                    return this;
                }

                public Descriptors.Descriptor getDescriptorForType() {
                    return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_CanDt_J1939_descriptor;
                }

                public OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939 getDefaultInstanceForType() {
                    return OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939.getDefaultInstance();
                }

                public OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939 build() {
                    OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939 result = buildPartial();
                    if (!result.isInitialized())
                        throw newUninitializedMessageException(result);
                    return result;
                }

                public OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939 buildPartial() {
                    OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939 result = new OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939(this);
                    int from_bitField0_ = this.bitField0_;
                    int to_bitField0_ = 0;
                    if ((from_bitField0_ & 0x1) != 0) {
                        result.sPN70_ = this.sPN70_;
                        to_bitField0_ |= 0x1;
                    }
                    if ((from_bitField0_ & 0x2) != 0) {
                        result.sPN91_ = this.sPN91_;
                        to_bitField0_ |= 0x2;
                    }
                    if ((from_bitField0_ & 0x4) != 0) {
                        result.sPN96_ = this.sPN96_;
                        to_bitField0_ |= 0x4;
                    }
                    if ((from_bitField0_ & 0x8) != 0) {
                        result.sPN100_ = this.sPN100_;
                        to_bitField0_ |= 0x8;
                    }
                    if ((from_bitField0_ & 0x10) != 0) {
                        result.sPN110_ = this.sPN110_;
                        to_bitField0_ |= 0x10;
                    }
                    if ((from_bitField0_ & 0x20) != 0) {
                        result.sPN174_ = this.sPN174_;
                        to_bitField0_ |= 0x20;
                    }
                    if ((from_bitField0_ & 0x40) != 0) {
                        result.sPN175_ = this.sPN175_;
                        to_bitField0_ |= 0x40;
                    }
                    if ((from_bitField0_ & 0x80) != 0) {
                        result.sPN182_ = this.sPN182_;
                        to_bitField0_ |= 0x80;
                    }
                    if ((from_bitField0_ & 0x100) != 0) {
                        result.sPN184_ = this.sPN184_;
                        to_bitField0_ |= 0x100;
                    }
                    if ((from_bitField0_ & 0x200) != 0) {
                        result.sPN190_ = this.sPN190_;
                        to_bitField0_ |= 0x200;
                    }
                    if ((from_bitField0_ & 0x400) != 0) {
                        result.sPN244_ = this.sPN244_;
                        to_bitField0_ |= 0x400;
                    }
                    if ((from_bitField0_ & 0x800) != 0) {
                        result.sPN245_ = this.sPN245_;
                        to_bitField0_ |= 0x800;
                    }
                    if ((from_bitField0_ & 0x1000) != 0) {
                        result.sPN247_ = this.sPN247_;
                        to_bitField0_ |= 0x1000;
                    }
                    if ((from_bitField0_ & 0x2000) != 0) {
                        result.sPN250_ = this.sPN250_;
                        to_bitField0_ |= 0x2000;
                    }
                    if ((from_bitField0_ & 0x4000) != 0) {
                        result.sPN521_ = this.sPN521_;
                        to_bitField0_ |= 0x4000;
                    }
                    if ((from_bitField0_ & 0x8000) != 0) {
                        result.sPN522_ = this.sPN522_;
                        to_bitField0_ |= 0x8000;
                    }
                    if ((from_bitField0_ & 0x10000) != 0) {
                        result.sPN527_ = this.sPN527_;
                        to_bitField0_ |= 0x10000;
                    }
                    if ((this.bitField0_ & 0x20000) != 0) {
                        this.sPN582_.makeImmutable();
                        this.bitField0_ &= 0xFFFDFFFF;
                    }
                    result.sPN582_ = this.sPN582_;
                    if ((from_bitField0_ & 0x40000) != 0) {
                        result.sPN597_ = this.sPN597_;
                        to_bitField0_ |= 0x20000;
                    }
                    if ((from_bitField0_ & 0x80000) != 0) {
                        result.sPN598_ = this.sPN598_;
                        to_bitField0_ |= 0x40000;
                    }
                    if ((from_bitField0_ & 0x100000) != 0) {
                        result.sPN914_ = this.sPN914_;
                        to_bitField0_ |= 0x80000;
                    }
                    if ((from_bitField0_ & 0x200000) != 0) {
                        result.sPN916_ = this.sPN916_;
                        to_bitField0_ |= 0x100000;
                    }
                    if ((this.bitField0_ & 0x400000) != 0) {
                        this.sPN928_.makeImmutable();
                        this.bitField0_ &= 0xFFBFFFFF;
                    }
                    result.sPN928_ = this.sPN928_;
                    if ((from_bitField0_ & 0x800000) != 0) {
                        result.sPN1624_ = this.sPN1624_;
                        to_bitField0_ |= 0x200000;
                    }
                    if ((from_bitField0_ & 0x1000000) != 0) {
                        result.sPN1821_ = this.sPN1821_;
                        to_bitField0_ |= 0x400000;
                    }
                    if ((from_bitField0_ & 0x2000000) != 0) {
                        result.sPN1856_ = this.sPN1856_;
                        to_bitField0_ |= 0x800000;
                    }
                    result.bitField0_ = to_bitField0_;
                    onBuilt();
                    return result;
                }

                public Builder clone() {
                    return (Builder) super.clone();
                }

                public Builder setField(Descriptors.FieldDescriptor field, Object value) {
                    return (Builder) super.setField(field, value);
                }

                public Builder clearField(Descriptors.FieldDescriptor field) {
                    return (Builder) super.clearField(field);
                }

                public Builder clearOneof(Descriptors.OneofDescriptor oneof) {
                    return (Builder) super.clearOneof(oneof);
                }

                public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
                    return (Builder) super.setRepeatedField(field, index, value);
                }

                public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
                    return (Builder) super.addRepeatedField(field, value);
                }

                public Builder mergeFrom(Message other) {
                    if (other instanceof OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939)
                        return mergeFrom((OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939) other);
                    super.mergeFrom(other);
                    return this;
                }

                public Builder mergeFrom(OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939 other) {
                    if (other == OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939.getDefaultInstance())
                        return this;
                    if (other.hasSPN70())
                        setSPN70(other.getSPN70());
                    if (other.hasSPN91())
                        setSPN91(other.getSPN91());
                    if (other.hasSPN96())
                        setSPN96(other.getSPN96());
                    if (other.hasSPN100())
                        setSPN100(other.getSPN100());
                    if (other.hasSPN110())
                        setSPN110(other.getSPN110());
                    if (other.hasSPN174())
                        setSPN174(other.getSPN174());
                    if (other.hasSPN175())
                        setSPN175(other.getSPN175());
                    if (other.hasSPN182())
                        setSPN182(other.getSPN182());
                    if (other.hasSPN184())
                        setSPN184(other.getSPN184());
                    if (other.hasSPN190())
                        setSPN190(other.getSPN190());
                    if (other.hasSPN244())
                        setSPN244(other.getSPN244());
                    if (other.hasSPN245())
                        setSPN245(other.getSPN245());
                    if (other.hasSPN247())
                        setSPN247(other.getSPN247());
                    if (other.hasSPN250())
                        setSPN250(other.getSPN250());
                    if (other.hasSPN521())
                        setSPN521(other.getSPN521());
                    if (other.hasSPN522())
                        setSPN522(other.getSPN522());
                    if (other.hasSPN527())
                        setSPN527(other.getSPN527());
                    if (!other.sPN582_.isEmpty()) {
                        if (this.sPN582_.isEmpty()) {
                            this.sPN582_ = other.sPN582_;
                            this.bitField0_ &= 0xFFFDFFFF;
                        } else {
                            ensureSPN582IsMutable();
                            this.sPN582_.addAll((Collection) other.sPN582_);
                        }
                        onChanged();
                    }
                    if (other.hasSPN597())
                        setSPN597(other.getSPN597());
                    if (other.hasSPN598())
                        setSPN598(other.getSPN598());
                    if (other.hasSPN914())
                        setSPN914(other.getSPN914());
                    if (other.hasSPN916())
                        setSPN916(other.getSPN916());
                    if (!other.sPN928_.isEmpty()) {
                        if (this.sPN928_.isEmpty()) {
                            this.sPN928_ = other.sPN928_;
                            this.bitField0_ &= 0xFFBFFFFF;
                        } else {
                            ensureSPN928IsMutable();
                            this.sPN928_.addAll((Collection) other.sPN928_);
                        }
                        onChanged();
                    }
                    if (other.hasSPN1624())
                        setSPN1624(other.getSPN1624());
                    if (other.hasSPN1821())
                        setSPN1821(other.getSPN1821());
                    if (other.hasSPN1856())
                        setSPN1856(other.getSPN1856());
                    mergeUnknownFields(other.unknownFields);
                    onChanged();
                    return this;
                }

                public final boolean isInitialized() {
                    return true;
                }

                public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                    OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939 parsedMessage = null;
                    try {
                        parsedMessage = (OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939) OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939.PARSER.parsePartialFrom(input, extensionRegistry);
                    } catch (InvalidProtocolBufferException e) {
                        parsedMessage = (OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939) e.getUnfinishedMessage();
                        throw e.unwrapIOException();
                    } finally {
                        if (parsedMessage != null)
                            mergeFrom(parsedMessage);
                    }
                    return this;
                }

                public boolean hasSPN70() {
                    return ((this.bitField0_ & 0x1) != 0);
                }

                public int getSPN70() {
                    return this.sPN70_;
                }

                public Builder setSPN70(int value) {
                    this.bitField0_ |= 0x1;
                    this.sPN70_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearSPN70() {
                    this.bitField0_ &= 0xFFFFFFFE;
                    this.sPN70_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasSPN91() {
                    return ((this.bitField0_ & 0x2) != 0);
                }

                public int getSPN91() {
                    return this.sPN91_;
                }

                public Builder setSPN91(int value) {
                    this.bitField0_ |= 0x2;
                    this.sPN91_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearSPN91() {
                    this.bitField0_ &= 0xFFFFFFFD;
                    this.sPN91_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasSPN96() {
                    return ((this.bitField0_ & 0x4) != 0);
                }

                public int getSPN96() {
                    return this.sPN96_;
                }

                public Builder setSPN96(int value) {
                    this.bitField0_ |= 0x4;
                    this.sPN96_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearSPN96() {
                    this.bitField0_ &= 0xFFFFFFFB;
                    this.sPN96_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasSPN100() {
                    return ((this.bitField0_ & 0x8) != 0);
                }

                public int getSPN100() {
                    return this.sPN100_;
                }

                public Builder setSPN100(int value) {
                    this.bitField0_ |= 0x8;
                    this.sPN100_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearSPN100() {
                    this.bitField0_ &= 0xFFFFFFF7;
                    this.sPN100_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasSPN110() {
                    return ((this.bitField0_ & 0x10) != 0);
                }

                public int getSPN110() {
                    return this.sPN110_;
                }

                public Builder setSPN110(int value) {
                    this.bitField0_ |= 0x10;
                    this.sPN110_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearSPN110() {
                    this.bitField0_ &= 0xFFFFFFEF;
                    this.sPN110_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasSPN174() {
                    return ((this.bitField0_ & 0x20) != 0);
                }

                public int getSPN174() {
                    return this.sPN174_;
                }

                public Builder setSPN174(int value) {
                    this.bitField0_ |= 0x20;
                    this.sPN174_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearSPN174() {
                    this.bitField0_ &= 0xFFFFFFDF;
                    this.sPN174_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasSPN175() {
                    return ((this.bitField0_ & 0x40) != 0);
                }

                public int getSPN175() {
                    return this.sPN175_;
                }

                public Builder setSPN175(int value) {
                    this.bitField0_ |= 0x40;
                    this.sPN175_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearSPN175() {
                    this.bitField0_ &= 0xFFFFFFBF;
                    this.sPN175_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasSPN182() {
                    return ((this.bitField0_ & 0x80) != 0);
                }

                public int getSPN182() {
                    return this.sPN182_;
                }

                public Builder setSPN182(int value) {
                    this.bitField0_ |= 0x80;
                    this.sPN182_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearSPN182() {
                    this.bitField0_ &= 0xFFFFFF7F;
                    this.sPN182_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasSPN184() {
                    return ((this.bitField0_ & 0x100) != 0);
                }

                public int getSPN184() {
                    return this.sPN184_;
                }

                public Builder setSPN184(int value) {
                    this.bitField0_ |= 0x100;
                    this.sPN184_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearSPN184() {
                    this.bitField0_ &= 0xFFFFFEFF;
                    this.sPN184_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasSPN190() {
                    return ((this.bitField0_ & 0x200) != 0);
                }

                public int getSPN190() {
                    return this.sPN190_;
                }

                public Builder setSPN190(int value) {
                    this.bitField0_ |= 0x200;
                    this.sPN190_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearSPN190() {
                    this.bitField0_ &= 0xFFFFFDFF;
                    this.sPN190_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasSPN244() {
                    return ((this.bitField0_ & 0x400) != 0);
                }

                public int getSPN244() {
                    return this.sPN244_;
                }

                public Builder setSPN244(int value) {
                    this.bitField0_ |= 0x400;
                    this.sPN244_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearSPN244() {
                    this.bitField0_ &= 0xFFFFFBFF;
                    this.sPN244_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasSPN245() {
                    return ((this.bitField0_ & 0x800) != 0);
                }

                public int getSPN245() {
                    return this.sPN245_;
                }

                public Builder setSPN245(int value) {
                    this.bitField0_ |= 0x800;
                    this.sPN245_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearSPN245() {
                    this.bitField0_ &= 0xFFFFF7FF;
                    this.sPN245_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasSPN247() {
                    return ((this.bitField0_ & 0x1000) != 0);
                }

                public int getSPN247() {
                    return this.sPN247_;
                }

                public Builder setSPN247(int value) {
                    this.bitField0_ |= 0x1000;
                    this.sPN247_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearSPN247() {
                    this.bitField0_ &= 0xFFFFEFFF;
                    this.sPN247_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasSPN250() {
                    return ((this.bitField0_ & 0x2000) != 0);
                }

                public int getSPN250() {
                    return this.sPN250_;
                }

                public Builder setSPN250(int value) {
                    this.bitField0_ |= 0x2000;
                    this.sPN250_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearSPN250() {
                    this.bitField0_ &= 0xFFFFDFFF;
                    this.sPN250_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasSPN521() {
                    return ((this.bitField0_ & 0x4000) != 0);
                }

                public int getSPN521() {
                    return this.sPN521_;
                }

                public Builder setSPN521(int value) {
                    this.bitField0_ |= 0x4000;
                    this.sPN521_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearSPN521() {
                    this.bitField0_ &= 0xFFFFBFFF;
                    this.sPN521_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasSPN522() {
                    return ((this.bitField0_ & 0x8000) != 0);
                }

                public int getSPN522() {
                    return this.sPN522_;
                }

                public Builder setSPN522(int value) {
                    this.bitField0_ |= 0x8000;
                    this.sPN522_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearSPN522() {
                    this.bitField0_ &= 0xFFFF7FFF;
                    this.sPN522_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasSPN527() {
                    return ((this.bitField0_ & 0x10000) != 0);
                }

                public int getSPN527() {
                    return this.sPN527_;
                }

                public Builder setSPN527(int value) {
                    this.bitField0_ |= 0x10000;
                    this.sPN527_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearSPN527() {
                    this.bitField0_ &= 0xFFFEFFFF;
                    this.sPN527_ = 0;
                    onChanged();
                    return this;
                }

                private void ensureSPN582IsMutable() {
                    if ((this.bitField0_ & 0x20000) == 0) {
                        this.sPN582_ = OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939.mutableCopy(this.sPN582_);
                        this.bitField0_ |= 0x20000;
                    }
                }

                public List<Integer> getSPN582List() {
                    return ((this.bitField0_ & 0x20000) != 0) ? Collections.<Integer>unmodifiableList((List<? extends Integer>) this.sPN582_) : (List<Integer>) this.sPN582_;
                }

                public int getSPN582Count() {
                    return this.sPN582_.size();
                }

                public int getSPN582(int index) {
                    return this.sPN582_.getInt(index);
                }

                public Builder setSPN582(int index, int value) {
                    ensureSPN582IsMutable();
                    this.sPN582_.setInt(index, value);
                    onChanged();
                    return this;
                }

                public Builder addSPN582(int value) {
                    ensureSPN582IsMutable();
                    this.sPN582_.addInt(value);
                    onChanged();
                    return this;
                }

                public Builder addAllSPN582(Iterable<? extends Integer> values) {
                    ensureSPN582IsMutable();
                    AbstractMessageLite.Builder.addAll(values, (List) this.sPN582_);
                    onChanged();
                    return this;
                }

                public Builder clearSPN582() {
                    this.sPN582_ = OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939.emptyIntList();
                    this.bitField0_ &= 0xFFFDFFFF;
                    onChanged();
                    return this;
                }

                public boolean hasSPN597() {
                    return ((this.bitField0_ & 0x40000) != 0);
                }

                public int getSPN597() {
                    return this.sPN597_;
                }

                public Builder setSPN597(int value) {
                    this.bitField0_ |= 0x40000;
                    this.sPN597_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearSPN597() {
                    this.bitField0_ &= 0xFFFBFFFF;
                    this.sPN597_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasSPN598() {
                    return ((this.bitField0_ & 0x80000) != 0);
                }

                public int getSPN598() {
                    return this.sPN598_;
                }

                public Builder setSPN598(int value) {
                    this.bitField0_ |= 0x80000;
                    this.sPN598_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearSPN598() {
                    this.bitField0_ &= 0xFFF7FFFF;
                    this.sPN598_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasSPN914() {
                    return ((this.bitField0_ & 0x100000) != 0);
                }

                public int getSPN914() {
                    return this.sPN914_;
                }

                public Builder setSPN914(int value) {
                    this.bitField0_ |= 0x100000;
                    this.sPN914_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearSPN914() {
                    this.bitField0_ &= 0xFFEFFFFF;
                    this.sPN914_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasSPN916() {
                    return ((this.bitField0_ & 0x200000) != 0);
                }

                public int getSPN916() {
                    return this.sPN916_;
                }

                public Builder setSPN916(int value) {
                    this.bitField0_ |= 0x200000;
                    this.sPN916_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearSPN916() {
                    this.bitField0_ &= 0xFFDFFFFF;
                    this.sPN916_ = 0;
                    onChanged();
                    return this;
                }

                private void ensureSPN928IsMutable() {
                    if ((this.bitField0_ & 0x400000) == 0) {
                        this.sPN928_ = OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939.mutableCopy(this.sPN928_);
                        this.bitField0_ |= 0x400000;
                    }
                }

                public List<Integer> getSPN928List() {
                    return ((this.bitField0_ & 0x400000) != 0) ? Collections.<Integer>unmodifiableList((List<? extends Integer>) this.sPN928_) : (List<Integer>) this.sPN928_;
                }

                public int getSPN928Count() {
                    return this.sPN928_.size();
                }

                public int getSPN928(int index) {
                    return this.sPN928_.getInt(index);
                }

                public Builder setSPN928(int index, int value) {
                    ensureSPN928IsMutable();
                    this.sPN928_.setInt(index, value);
                    onChanged();
                    return this;
                }

                public Builder addSPN928(int value) {
                    ensureSPN928IsMutable();
                    this.sPN928_.addInt(value);
                    onChanged();
                    return this;
                }

                public Builder addAllSPN928(Iterable<? extends Integer> values) {
                    ensureSPN928IsMutable();
                    AbstractMessageLite.Builder.addAll(values, (List) this.sPN928_);
                    onChanged();
                    return this;
                }

                public Builder clearSPN928() {
                    this.sPN928_ = OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939.emptyIntList();
                    this.bitField0_ &= 0xFFBFFFFF;
                    onChanged();
                    return this;
                }

                public boolean hasSPN1624() {
                    return ((this.bitField0_ & 0x800000) != 0);
                }

                public int getSPN1624() {
                    return this.sPN1624_;
                }

                public Builder setSPN1624(int value) {
                    this.bitField0_ |= 0x800000;
                    this.sPN1624_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearSPN1624() {
                    this.bitField0_ &= 0xFF7FFFFF;
                    this.sPN1624_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasSPN1821() {
                    return ((this.bitField0_ & 0x1000000) != 0);
                }

                public int getSPN1821() {
                    return this.sPN1821_;
                }

                public Builder setSPN1821(int value) {
                    this.bitField0_ |= 0x1000000;
                    this.sPN1821_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearSPN1821() {
                    this.bitField0_ &= 0xFEFFFFFF;
                    this.sPN1821_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasSPN1856() {
                    return ((this.bitField0_ & 0x2000000) != 0);
                }

                public int getSPN1856() {
                    return this.sPN1856_;
                }

                public Builder setSPN1856(int value) {
                    this.bitField0_ |= 0x2000000;
                    this.sPN1856_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearSPN1856() {
                    this.bitField0_ &= 0xFDFFFFFF;
                    this.sPN1856_ = 0;
                    onChanged();
                    return this;
                }

                public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
                    return (Builder) super.setUnknownFields(unknownFields);
                }

                public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
                    return (Builder) super.mergeUnknownFields(unknownFields);
                }
            }

            private static final CanDt_J1939 DEFAULT_INSTANCE = new CanDt_J1939();

            public static CanDt_J1939 getDefaultInstance() {
                return DEFAULT_INSTANCE;
            }

            @Deprecated
            public static final Parser<CanDt_J1939> PARSER = (Parser<CanDt_J1939>) new AbstractParser<CanDt_J1939>() {
                public OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939 parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                    return new OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939(input, extensionRegistry);
                }
            };

            public static Parser<CanDt_J1939> parser() {
                return PARSER;
            }

            public Parser<CanDt_J1939> getParserForType() {
                return PARSER;
            }

            public CanDt_J1939 getDefaultInstanceForType() {
                return DEFAULT_INSTANCE;
            }
        }

        public static final class Builder extends GeneratedMessageV3.Builder<CanDt_J1939.Builder> implements CanDt_J1939OrBuilder {
            private int bitField0_;

            private int sPN70_;

            private int sPN91_;

            private int sPN96_;

            private int sPN100_;

            private int sPN110_;

            private int sPN174_;

            private int sPN175_;

            private int sPN182_;

            private int sPN184_;

            private int sPN190_;

            private int sPN244_;

            private int sPN245_;

            private int sPN247_;

            private int sPN250_;

            private int sPN521_;

            private int sPN522_;

            private int sPN527_;

            private Internal.IntList sPN582_;

            private int sPN597_;

            private int sPN598_;

            private int sPN914_;

            private int sPN916_;

            private Internal.IntList sPN928_;

            private int sPN1624_;

            private int sPN1821_;

            private int sPN1856_;

            public static final Descriptors.Descriptor getDescriptor() {
                return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_CanDt_J1939_descriptor;
            }

            protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
                return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_CanDt_J1939_fieldAccessorTable.ensureFieldAccessorsInitialized(OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939.class, Builder.class);
            }

            private Builder() {
                this.sPN582_ = OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939.emptyIntList();
                this.sPN928_ = OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939.emptyIntList();
                maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessageV3.BuilderParent parent) {
                super(parent);
                this.sPN582_ = OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939.emptyIntList();
                this.sPN928_ = OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939.emptyIntList();
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939.alwaysUseFieldBuilders) ;
            }

            public Builder clear() {
                super.clear();
                this.sPN70_ = 0;
                this.bitField0_ &= 0xFFFFFFFE;
                this.sPN91_ = 0;
                this.bitField0_ &= 0xFFFFFFFD;
                this.sPN96_ = 0;
                this.bitField0_ &= 0xFFFFFFFB;
                this.sPN100_ = 0;
                this.bitField0_ &= 0xFFFFFFF7;
                this.sPN110_ = 0;
                this.bitField0_ &= 0xFFFFFFEF;
                this.sPN174_ = 0;
                this.bitField0_ &= 0xFFFFFFDF;
                this.sPN175_ = 0;
                this.bitField0_ &= 0xFFFFFFBF;
                this.sPN182_ = 0;
                this.bitField0_ &= 0xFFFFFF7F;
                this.sPN184_ = 0;
                this.bitField0_ &= 0xFFFFFEFF;
                this.sPN190_ = 0;
                this.bitField0_ &= 0xFFFFFDFF;
                this.sPN244_ = 0;
                this.bitField0_ &= 0xFFFFFBFF;
                this.sPN245_ = 0;
                this.bitField0_ &= 0xFFFFF7FF;
                this.sPN247_ = 0;
                this.bitField0_ &= 0xFFFFEFFF;
                this.sPN250_ = 0;
                this.bitField0_ &= 0xFFFFDFFF;
                this.sPN521_ = 0;
                this.bitField0_ &= 0xFFFFBFFF;
                this.sPN522_ = 0;
                this.bitField0_ &= 0xFFFF7FFF;
                this.sPN527_ = 0;
                this.bitField0_ &= 0xFFFEFFFF;
                this.sPN582_ = OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939.emptyIntList();
                this.bitField0_ &= 0xFFFDFFFF;
                this.sPN597_ = 0;
                this.bitField0_ &= 0xFFFBFFFF;
                this.sPN598_ = 0;
                this.bitField0_ &= 0xFFF7FFFF;
                this.sPN914_ = 0;
                this.bitField0_ &= 0xFFEFFFFF;
                this.sPN916_ = 0;
                this.bitField0_ &= 0xFFDFFFFF;
                this.sPN928_ = OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939.emptyIntList();
                this.bitField0_ &= 0xFFBFFFFF;
                this.sPN1624_ = 0;
                this.bitField0_ &= 0xFF7FFFFF;
                this.sPN1821_ = 0;
                this.bitField0_ &= 0xFEFFFFFF;
                this.sPN1856_ = 0;
                this.bitField0_ &= 0xFDFFFFFF;
                return this;
            }

            public Descriptors.Descriptor getDescriptorForType() {
                return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_CanDt_J1939_descriptor;
            }

            public OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939 getDefaultInstanceForType() {
                return OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939.getDefaultInstance();
            }

            public OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939 build() {
                OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939 result = buildPartial();
                if (!result.isInitialized())
                    throw newUninitializedMessageException(result);
                return result;
            }

            public OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939 buildPartial() {
                OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939 result = new OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939(this);
                int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) != 0) {
                    result.sPN70_ = this.sPN70_;
                    to_bitField0_ |= 0x1;
                }
                if ((from_bitField0_ & 0x2) != 0) {
                    result.sPN91_ = this.sPN91_;
                    to_bitField0_ |= 0x2;
                }
                if ((from_bitField0_ & 0x4) != 0) {
                    result.sPN96_ = this.sPN96_;
                    to_bitField0_ |= 0x4;
                }
                if ((from_bitField0_ & 0x8) != 0) {
                    result.sPN100_ = this.sPN100_;
                    to_bitField0_ |= 0x8;
                }
                if ((from_bitField0_ & 0x10) != 0) {
                    result.sPN110_ = this.sPN110_;
                    to_bitField0_ |= 0x10;
                }
                if ((from_bitField0_ & 0x20) != 0) {
                    result.sPN174_ = this.sPN174_;
                    to_bitField0_ |= 0x20;
                }
                if ((from_bitField0_ & 0x40) != 0) {
                    result.sPN175_ = this.sPN175_;
                    to_bitField0_ |= 0x40;
                }
                if ((from_bitField0_ & 0x80) != 0) {
                    result.sPN182_ = this.sPN182_;
                    to_bitField0_ |= 0x80;
                }
                if ((from_bitField0_ & 0x100) != 0) {
                    result.sPN184_ = this.sPN184_;
                    to_bitField0_ |= 0x100;
                }
                if ((from_bitField0_ & 0x200) != 0) {
                    result.sPN190_ = this.sPN190_;
                    to_bitField0_ |= 0x200;
                }
                if ((from_bitField0_ & 0x400) != 0) {
                    result.sPN244_ = this.sPN244_;
                    to_bitField0_ |= 0x400;
                }
                if ((from_bitField0_ & 0x800) != 0) {
                    result.sPN245_ = this.sPN245_;
                    to_bitField0_ |= 0x800;
                }
                if ((from_bitField0_ & 0x1000) != 0) {
                    result.sPN247_ = this.sPN247_;
                    to_bitField0_ |= 0x1000;
                }
                if ((from_bitField0_ & 0x2000) != 0) {
                    result.sPN250_ = this.sPN250_;
                    to_bitField0_ |= 0x2000;
                }
                if ((from_bitField0_ & 0x4000) != 0) {
                    result.sPN521_ = this.sPN521_;
                    to_bitField0_ |= 0x4000;
                }
                if ((from_bitField0_ & 0x8000) != 0) {
                    result.sPN522_ = this.sPN522_;
                    to_bitField0_ |= 0x8000;
                }
                if ((from_bitField0_ & 0x10000) != 0) {
                    result.sPN527_ = this.sPN527_;
                    to_bitField0_ |= 0x10000;
                }
                if ((this.bitField0_ & 0x20000) != 0) {
                    this.sPN582_.makeImmutable();
                    this.bitField0_ &= 0xFFFDFFFF;
                }
                result.sPN582_ = this.sPN582_;
                if ((from_bitField0_ & 0x40000) != 0) {
                    result.sPN597_ = this.sPN597_;
                    to_bitField0_ |= 0x20000;
                }
                if ((from_bitField0_ & 0x80000) != 0) {
                    result.sPN598_ = this.sPN598_;
                    to_bitField0_ |= 0x40000;
                }
                if ((from_bitField0_ & 0x100000) != 0) {
                    result.sPN914_ = this.sPN914_;
                    to_bitField0_ |= 0x80000;
                }
                if ((from_bitField0_ & 0x200000) != 0) {
                    result.sPN916_ = this.sPN916_;
                    to_bitField0_ |= 0x100000;
                }
                if ((this.bitField0_ & 0x400000) != 0) {
                    this.sPN928_.makeImmutable();
                    this.bitField0_ &= 0xFFBFFFFF;
                }
                result.sPN928_ = this.sPN928_;
                if ((from_bitField0_ & 0x800000) != 0) {
                    result.sPN1624_ = this.sPN1624_;
                    to_bitField0_ |= 0x200000;
                }
                if ((from_bitField0_ & 0x1000000) != 0) {
                    result.sPN1821_ = this.sPN1821_;
                    to_bitField0_ |= 0x400000;
                }
                if ((from_bitField0_ & 0x2000000) != 0) {
                    result.sPN1856_ = this.sPN1856_;
                    to_bitField0_ |= 0x800000;
                }
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }

            public Builder setField(Descriptors.FieldDescriptor field, Object value) {
                return (Builder) super.setField(field, value);
            }

            public Builder clearField(Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }

            public Builder clearOneof(Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }

            public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }

            public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }

            public Builder mergeFrom(Message other) {
                if (other instanceof OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939)
                    return mergeFrom((OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939) other);
                super.mergeFrom(other);
                return this;
            }

            public Builder mergeFrom(OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939 other) {
                if (other == OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939.getDefaultInstance())
                    return this;
                if (other.hasSPN70())
                    setSPN70(other.getSPN70());
                if (other.hasSPN91())
                    setSPN91(other.getSPN91());
                if (other.hasSPN96())
                    setSPN96(other.getSPN96());
                if (other.hasSPN100())
                    setSPN100(other.getSPN100());
                if (other.hasSPN110())
                    setSPN110(other.getSPN110());
                if (other.hasSPN174())
                    setSPN174(other.getSPN174());
                if (other.hasSPN175())
                    setSPN175(other.getSPN175());
                if (other.hasSPN182())
                    setSPN182(other.getSPN182());
                if (other.hasSPN184())
                    setSPN184(other.getSPN184());
                if (other.hasSPN190())
                    setSPN190(other.getSPN190());
                if (other.hasSPN244())
                    setSPN244(other.getSPN244());
                if (other.hasSPN245())
                    setSPN245(other.getSPN245());
                if (other.hasSPN247())
                    setSPN247(other.getSPN247());
                if (other.hasSPN250())
                    setSPN250(other.getSPN250());
                if (other.hasSPN521())
                    setSPN521(other.getSPN521());
                if (other.hasSPN522())
                    setSPN522(other.getSPN522());
                if (other.hasSPN527())
                    setSPN527(other.getSPN527());
                if (!other.sPN582_.isEmpty()) {
                    if (this.sPN582_.isEmpty()) {
                        this.sPN582_ = other.sPN582_;
                        this.bitField0_ &= 0xFFFDFFFF;
                    } else {
                        ensureSPN582IsMutable();
                        this.sPN582_.addAll((Collection) other.sPN582_);
                    }
                    onChanged();
                }
                if (other.hasSPN597())
                    setSPN597(other.getSPN597());
                if (other.hasSPN598())
                    setSPN598(other.getSPN598());
                if (other.hasSPN914())
                    setSPN914(other.getSPN914());
                if (other.hasSPN916())
                    setSPN916(other.getSPN916());
                if (!other.sPN928_.isEmpty()) {
                    if (this.sPN928_.isEmpty()) {
                        this.sPN928_ = other.sPN928_;
                        this.bitField0_ &= 0xFFBFFFFF;
                    } else {
                        ensureSPN928IsMutable();
                        this.sPN928_.addAll((Collection) other.sPN928_);
                    }
                    onChanged();
                }
                if (other.hasSPN1624())
                    setSPN1624(other.getSPN1624());
                if (other.hasSPN1821())
                    setSPN1821(other.getSPN1821());
                if (other.hasSPN1856())
                    setSPN1856(other.getSPN1856());
                mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939 parsedMessage = null;
                try {
                    parsedMessage = (OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939) OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null)
                        mergeFrom(parsedMessage);
                }
                return this;
            }

            public boolean hasSPN70() {
                return ((this.bitField0_ & 0x1) != 0);
            }

            public int getSPN70() {
                return this.sPN70_;
            }

            public Builder setSPN70(int value) {
                this.bitField0_ |= 0x1;
                this.sPN70_ = value;
                onChanged();
                return this;
            }

            public Builder clearSPN70() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.sPN70_ = 0;
                onChanged();
                return this;
            }

            public boolean hasSPN91() {
                return ((this.bitField0_ & 0x2) != 0);
            }

            public int getSPN91() {
                return this.sPN91_;
            }

            public Builder setSPN91(int value) {
                this.bitField0_ |= 0x2;
                this.sPN91_ = value;
                onChanged();
                return this;
            }

            public Builder clearSPN91() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.sPN91_ = 0;
                onChanged();
                return this;
            }

            public boolean hasSPN96() {
                return ((this.bitField0_ & 0x4) != 0);
            }

            public int getSPN96() {
                return this.sPN96_;
            }

            public Builder setSPN96(int value) {
                this.bitField0_ |= 0x4;
                this.sPN96_ = value;
                onChanged();
                return this;
            }

            public Builder clearSPN96() {
                this.bitField0_ &= 0xFFFFFFFB;
                this.sPN96_ = 0;
                onChanged();
                return this;
            }

            public boolean hasSPN100() {
                return ((this.bitField0_ & 0x8) != 0);
            }

            public int getSPN100() {
                return this.sPN100_;
            }

            public Builder setSPN100(int value) {
                this.bitField0_ |= 0x8;
                this.sPN100_ = value;
                onChanged();
                return this;
            }

            public Builder clearSPN100() {
                this.bitField0_ &= 0xFFFFFFF7;
                this.sPN100_ = 0;
                onChanged();
                return this;
            }

            public boolean hasSPN110() {
                return ((this.bitField0_ & 0x10) != 0);
            }

            public int getSPN110() {
                return this.sPN110_;
            }

            public Builder setSPN110(int value) {
                this.bitField0_ |= 0x10;
                this.sPN110_ = value;
                onChanged();
                return this;
            }

            public Builder clearSPN110() {
                this.bitField0_ &= 0xFFFFFFEF;
                this.sPN110_ = 0;
                onChanged();
                return this;
            }

            public boolean hasSPN174() {
                return ((this.bitField0_ & 0x20) != 0);
            }

            public int getSPN174() {
                return this.sPN174_;
            }

            public Builder setSPN174(int value) {
                this.bitField0_ |= 0x20;
                this.sPN174_ = value;
                onChanged();
                return this;
            }

            public Builder clearSPN174() {
                this.bitField0_ &= 0xFFFFFFDF;
                this.sPN174_ = 0;
                onChanged();
                return this;
            }

            public boolean hasSPN175() {
                return ((this.bitField0_ & 0x40) != 0);
            }

            public int getSPN175() {
                return this.sPN175_;
            }

            public Builder setSPN175(int value) {
                this.bitField0_ |= 0x40;
                this.sPN175_ = value;
                onChanged();
                return this;
            }

            public Builder clearSPN175() {
                this.bitField0_ &= 0xFFFFFFBF;
                this.sPN175_ = 0;
                onChanged();
                return this;
            }

            public boolean hasSPN182() {
                return ((this.bitField0_ & 0x80) != 0);
            }

            public int getSPN182() {
                return this.sPN182_;
            }

            public Builder setSPN182(int value) {
                this.bitField0_ |= 0x80;
                this.sPN182_ = value;
                onChanged();
                return this;
            }

            public Builder clearSPN182() {
                this.bitField0_ &= 0xFFFFFF7F;
                this.sPN182_ = 0;
                onChanged();
                return this;
            }

            public boolean hasSPN184() {
                return ((this.bitField0_ & 0x100) != 0);
            }

            public int getSPN184() {
                return this.sPN184_;
            }

            public Builder setSPN184(int value) {
                this.bitField0_ |= 0x100;
                this.sPN184_ = value;
                onChanged();
                return this;
            }

            public Builder clearSPN184() {
                this.bitField0_ &= 0xFFFFFEFF;
                this.sPN184_ = 0;
                onChanged();
                return this;
            }

            public boolean hasSPN190() {
                return ((this.bitField0_ & 0x200) != 0);
            }

            public int getSPN190() {
                return this.sPN190_;
            }

            public Builder setSPN190(int value) {
                this.bitField0_ |= 0x200;
                this.sPN190_ = value;
                onChanged();
                return this;
            }

            public Builder clearSPN190() {
                this.bitField0_ &= 0xFFFFFDFF;
                this.sPN190_ = 0;
                onChanged();
                return this;
            }

            public boolean hasSPN244() {
                return ((this.bitField0_ & 0x400) != 0);
            }

            public int getSPN244() {
                return this.sPN244_;
            }

            public Builder setSPN244(int value) {
                this.bitField0_ |= 0x400;
                this.sPN244_ = value;
                onChanged();
                return this;
            }

            public Builder clearSPN244() {
                this.bitField0_ &= 0xFFFFFBFF;
                this.sPN244_ = 0;
                onChanged();
                return this;
            }

            public boolean hasSPN245() {
                return ((this.bitField0_ & 0x800) != 0);
            }

            public int getSPN245() {
                return this.sPN245_;
            }

            public Builder setSPN245(int value) {
                this.bitField0_ |= 0x800;
                this.sPN245_ = value;
                onChanged();
                return this;
            }

            public Builder clearSPN245() {
                this.bitField0_ &= 0xFFFFF7FF;
                this.sPN245_ = 0;
                onChanged();
                return this;
            }

            public boolean hasSPN247() {
                return ((this.bitField0_ & 0x1000) != 0);
            }

            public int getSPN247() {
                return this.sPN247_;
            }

            public Builder setSPN247(int value) {
                this.bitField0_ |= 0x1000;
                this.sPN247_ = value;
                onChanged();
                return this;
            }

            public Builder clearSPN247() {
                this.bitField0_ &= 0xFFFFEFFF;
                this.sPN247_ = 0;
                onChanged();
                return this;
            }

            public boolean hasSPN250() {
                return ((this.bitField0_ & 0x2000) != 0);
            }

            public int getSPN250() {
                return this.sPN250_;
            }

            public Builder setSPN250(int value) {
                this.bitField0_ |= 0x2000;
                this.sPN250_ = value;
                onChanged();
                return this;
            }

            public Builder clearSPN250() {
                this.bitField0_ &= 0xFFFFDFFF;
                this.sPN250_ = 0;
                onChanged();
                return this;
            }

            public boolean hasSPN521() {
                return ((this.bitField0_ & 0x4000) != 0);
            }

            public int getSPN521() {
                return this.sPN521_;
            }

            public Builder setSPN521(int value) {
                this.bitField0_ |= 0x4000;
                this.sPN521_ = value;
                onChanged();
                return this;
            }

            public Builder clearSPN521() {
                this.bitField0_ &= 0xFFFFBFFF;
                this.sPN521_ = 0;
                onChanged();
                return this;
            }

            public boolean hasSPN522() {
                return ((this.bitField0_ & 0x8000) != 0);
            }

            public int getSPN522() {
                return this.sPN522_;
            }

            public Builder setSPN522(int value) {
                this.bitField0_ |= 0x8000;
                this.sPN522_ = value;
                onChanged();
                return this;
            }

            public Builder clearSPN522() {
                this.bitField0_ &= 0xFFFF7FFF;
                this.sPN522_ = 0;
                onChanged();
                return this;
            }

            public boolean hasSPN527() {
                return ((this.bitField0_ & 0x10000) != 0);
            }

            public int getSPN527() {
                return this.sPN527_;
            }

            public Builder setSPN527(int value) {
                this.bitField0_ |= 0x10000;
                this.sPN527_ = value;
                onChanged();
                return this;
            }

            public Builder clearSPN527() {
                this.bitField0_ &= 0xFFFEFFFF;
                this.sPN527_ = 0;
                onChanged();
                return this;
            }

            private void ensureSPN582IsMutable() {
                if ((this.bitField0_ & 0x20000) == 0) {
                    this.sPN582_ = OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939.mutableCopy(this.sPN582_);
                    this.bitField0_ |= 0x20000;
                }
            }

            public List<Integer> getSPN582List() {
                return ((this.bitField0_ & 0x20000) != 0) ? Collections.<Integer>unmodifiableList((List<? extends Integer>) this.sPN582_) : (List<Integer>) this.sPN582_;
            }

            public int getSPN582Count() {
                return this.sPN582_.size();
            }

            public int getSPN582(int index) {
                return this.sPN582_.getInt(index);
            }

            public Builder setSPN582(int index, int value) {
                ensureSPN582IsMutable();
                this.sPN582_.setInt(index, value);
                onChanged();
                return this;
            }

            public Builder addSPN582(int value) {
                ensureSPN582IsMutable();
                this.sPN582_.addInt(value);
                onChanged();
                return this;
            }

            public Builder addAllSPN582(Iterable<? extends Integer> values) {
                ensureSPN582IsMutable();
                AbstractMessageLite.Builder.addAll(values, (List) this.sPN582_);
                onChanged();
                return this;
            }

            public Builder clearSPN582() {
                this.sPN582_ = OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939.emptyIntList();
                this.bitField0_ &= 0xFFFDFFFF;
                onChanged();
                return this;
            }

            public boolean hasSPN597() {
                return ((this.bitField0_ & 0x40000) != 0);
            }

            public int getSPN597() {
                return this.sPN597_;
            }

            public Builder setSPN597(int value) {
                this.bitField0_ |= 0x40000;
                this.sPN597_ = value;
                onChanged();
                return this;
            }

            public Builder clearSPN597() {
                this.bitField0_ &= 0xFFFBFFFF;
                this.sPN597_ = 0;
                onChanged();
                return this;
            }

            public boolean hasSPN598() {
                return ((this.bitField0_ & 0x80000) != 0);
            }

            public int getSPN598() {
                return this.sPN598_;
            }

            public Builder setSPN598(int value) {
                this.bitField0_ |= 0x80000;
                this.sPN598_ = value;
                onChanged();
                return this;
            }

            public Builder clearSPN598() {
                this.bitField0_ &= 0xFFF7FFFF;
                this.sPN598_ = 0;
                onChanged();
                return this;
            }

            public boolean hasSPN914() {
                return ((this.bitField0_ & 0x100000) != 0);
            }

            public int getSPN914() {
                return this.sPN914_;
            }

            public Builder setSPN914(int value) {
                this.bitField0_ |= 0x100000;
                this.sPN914_ = value;
                onChanged();
                return this;
            }

            public Builder clearSPN914() {
                this.bitField0_ &= 0xFFEFFFFF;
                this.sPN914_ = 0;
                onChanged();
                return this;
            }

            public boolean hasSPN916() {
                return ((this.bitField0_ & 0x200000) != 0);
            }

            public int getSPN916() {
                return this.sPN916_;
            }

            public Builder setSPN916(int value) {
                this.bitField0_ |= 0x200000;
                this.sPN916_ = value;
                onChanged();
                return this;
            }

            public Builder clearSPN916() {
                this.bitField0_ &= 0xFFDFFFFF;
                this.sPN916_ = 0;
                onChanged();
                return this;
            }

            private void ensureSPN928IsMutable() {
                if ((this.bitField0_ & 0x400000) == 0) {
                    this.sPN928_ = OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939.mutableCopy(this.sPN928_);
                    this.bitField0_ |= 0x400000;
                }
            }

            public List<Integer> getSPN928List() {
                return ((this.bitField0_ & 0x400000) != 0) ? Collections.<Integer>unmodifiableList((List<? extends Integer>) this.sPN928_) : (List<Integer>) this.sPN928_;
            }

            public int getSPN928Count() {
                return this.sPN928_.size();
            }

            public int getSPN928(int index) {
                return this.sPN928_.getInt(index);
            }

            public Builder setSPN928(int index, int value) {
                ensureSPN928IsMutable();
                this.sPN928_.setInt(index, value);
                onChanged();
                return this;
            }

            public Builder addSPN928(int value) {
                ensureSPN928IsMutable();
                this.sPN928_.addInt(value);
                onChanged();
                return this;
            }

            public Builder addAllSPN928(Iterable<? extends Integer> values) {
                ensureSPN928IsMutable();
                AbstractMessageLite.Builder.addAll(values, (List) this.sPN928_);
                onChanged();
                return this;
            }

            public Builder clearSPN928() {
                this.sPN928_ = OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939.emptyIntList();
                this.bitField0_ &= 0xFFBFFFFF;
                onChanged();
                return this;
            }

            public boolean hasSPN1624() {
                return ((this.bitField0_ & 0x800000) != 0);
            }

            public int getSPN1624() {
                return this.sPN1624_;
            }

            public Builder setSPN1624(int value) {
                this.bitField0_ |= 0x800000;
                this.sPN1624_ = value;
                onChanged();
                return this;
            }

            public Builder clearSPN1624() {
                this.bitField0_ &= 0xFF7FFFFF;
                this.sPN1624_ = 0;
                onChanged();
                return this;
            }

            public boolean hasSPN1821() {
                return ((this.bitField0_ & 0x1000000) != 0);
            }

            public int getSPN1821() {
                return this.sPN1821_;
            }

            public Builder setSPN1821(int value) {
                this.bitField0_ |= 0x1000000;
                this.sPN1821_ = value;
                onChanged();
                return this;
            }

            public Builder clearSPN1821() {
                this.bitField0_ &= 0xFEFFFFFF;
                this.sPN1821_ = 0;
                onChanged();
                return this;
            }

            public boolean hasSPN1856() {
                return ((this.bitField0_ & 0x2000000) != 0);
            }

            public int getSPN1856() {
                return this.sPN1856_;
            }

            public Builder setSPN1856(int value) {
                this.bitField0_ |= 0x2000000;
                this.sPN1856_ = value;
                onChanged();
                return this;
            }

            public Builder clearSPN1856() {
                this.bitField0_ &= 0xFDFFFFFF;
                this.sPN1856_ = 0;
                onChanged();
                return this;
            }

            public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
                return (Builder) super.setUnknownFields(unknownFields);
            }

            public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
                return (Builder) super.mergeUnknownFields(unknownFields);
            }
        }

        public static final class LLSDt extends GeneratedMessageV3 implements LLSDtOrBuilder {
            private static final long serialVersionUID = 0L;

            private int bitField0_;

            public static final int TLLS1_FIELD_NUMBER = 1;

            private int tLLS1_;

            public static final int CLLS1_FIELD_NUMBER = 2;

            private int cLLS1_;

            public static final int FLLS1_FIELD_NUMBER = 3;

            private int fLLS1_;

            public static final int TLLS2_FIELD_NUMBER = 4;

            private int tLLS2_;

            public static final int CLLS2_FIELD_NUMBER = 5;

            private int cLLS2_;

            public static final int FLLS2_FIELD_NUMBER = 6;

            private int fLLS2_;

            public static final int TLLS3_FIELD_NUMBER = 7;

            private int tLLS3_;

            public static final int CLLS3_FIELD_NUMBER = 8;

            private int cLLS3_;

            public static final int FLLS3_FIELD_NUMBER = 9;

            private int fLLS3_;

            public static final int TLLS4_FIELD_NUMBER = 10;

            private int tLLS4_;

            public static final int CLLS4_FIELD_NUMBER = 11;

            private int cLLS4_;

            public static final int FLLS4_FIELD_NUMBER = 12;

            private int fLLS4_;

            public static final int TLLS5_FIELD_NUMBER = 13;

            private int tLLS5_;

            public static final int CLLS5_FIELD_NUMBER = 14;

            private int cLLS5_;

            public static final int FLLS5_FIELD_NUMBER = 15;

            private int fLLS5_;

            public static final int TLLS6_FIELD_NUMBER = 16;

            private int tLLS6_;

            public static final int CLLS6_FIELD_NUMBER = 17;

            private int cLLS6_;

            public static final int FLLS6_FIELD_NUMBER = 18;

            private int fLLS6_;

            public static final int TLLS7_FIELD_NUMBER = 19;

            private int tLLS7_;

            public static final int CLLS7_FIELD_NUMBER = 20;

            private int cLLS7_;

            public static final int FLLS7_FIELD_NUMBER = 21;

            private int fLLS7_;

            public static final int TLLS8_FIELD_NUMBER = 22;

            private int tLLS8_;

            public static final int CLLS8_FIELD_NUMBER = 23;

            private int cLLS8_;

            public static final int FLLS8_FIELD_NUMBER = 24;

            private int fLLS8_;

            public static final int LLSREFKOEF_FIELD_NUMBER = 25;

            private Internal.IntList lLSRefKoef_;

            private int lLSRefKoefMemoizedSerializedSize;

            private byte memoizedIsInitialized;

            private LLSDt(GeneratedMessageV3.Builder<?> builder) {
                super(builder);
                this.lLSRefKoefMemoizedSerializedSize = -1;
                this.memoizedIsInitialized = -1;
            }

            private LLSDt() {
                this.lLSRefKoefMemoizedSerializedSize = -1;
                this.memoizedIsInitialized = -1;
                this.lLSRefKoef_ = emptyIntList();
            }

            protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) {
                return new LLSDt();
            }

            public final UnknownFieldSet getUnknownFields() {
                return this.unknownFields;
            }

            private LLSDt(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                this();
                if (extensionRegistry == null)
                    throw new NullPointerException();
                int mutable_bitField0_ = 0;
                UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
                try {
                    boolean done = false;
                    while (!done) {
                        int length, limit, tag = input.readTag();
                        switch (tag) {
                            case 0:
                                done = true;
                                continue;
                            case 8:
                                this.bitField0_ |= 0x1;
                                this.tLLS1_ = input.readSInt32();
                                continue;
                            case 16:
                                this.bitField0_ |= 0x2;
                                this.cLLS1_ = input.readUInt32();
                                continue;
                            case 24:
                                this.bitField0_ |= 0x4;
                                this.fLLS1_ = input.readSInt32();
                                continue;
                            case 32:
                                this.bitField0_ |= 0x8;
                                this.tLLS2_ = input.readSInt32();
                                continue;
                            case 40:
                                this.bitField0_ |= 0x10;
                                this.cLLS2_ = input.readUInt32();
                                continue;
                            case 48:
                                this.bitField0_ |= 0x20;
                                this.fLLS2_ = input.readSInt32();
                                continue;
                            case 56:
                                this.bitField0_ |= 0x40;
                                this.tLLS3_ = input.readSInt32();
                                continue;
                            case 64:
                                this.bitField0_ |= 0x80;
                                this.cLLS3_ = input.readUInt32();
                                continue;
                            case 72:
                                this.bitField0_ |= 0x100;
                                this.fLLS3_ = input.readSInt32();
                                continue;
                            case 80:
                                this.bitField0_ |= 0x200;
                                this.tLLS4_ = input.readSInt32();
                                continue;
                            case 88:
                                this.bitField0_ |= 0x400;
                                this.cLLS4_ = input.readUInt32();
                                continue;
                            case 96:
                                this.bitField0_ |= 0x800;
                                this.fLLS4_ = input.readSInt32();
                                continue;
                            case 104:
                                this.bitField0_ |= 0x1000;
                                this.tLLS5_ = input.readSInt32();
                                continue;
                            case 112:
                                this.bitField0_ |= 0x2000;
                                this.cLLS5_ = input.readUInt32();
                                continue;
                            case 120:
                                this.bitField0_ |= 0x4000;
                                this.fLLS5_ = input.readSInt32();
                                continue;
                            case 128:
                                this.bitField0_ |= 0x8000;
                                this.tLLS6_ = input.readSInt32();
                                continue;
                            case 136:
                                this.bitField0_ |= 0x10000;
                                this.cLLS6_ = input.readUInt32();
                                continue;
                            case 144:
                                this.bitField0_ |= 0x20000;
                                this.fLLS6_ = input.readSInt32();
                                continue;
                            case 152:
                                this.bitField0_ |= 0x40000;
                                this.tLLS7_ = input.readSInt32();
                                continue;
                            case 160:
                                this.bitField0_ |= 0x80000;
                                this.cLLS7_ = input.readUInt32();
                                continue;
                            case 168:
                                this.bitField0_ |= 0x100000;
                                this.fLLS7_ = input.readSInt32();
                                continue;
                            case 176:
                                this.bitField0_ |= 0x200000;
                                this.tLLS8_ = input.readSInt32();
                                continue;
                            case 184:
                                this.bitField0_ |= 0x400000;
                                this.cLLS8_ = input.readUInt32();
                                continue;
                            case 192:
                                this.bitField0_ |= 0x800000;
                                this.fLLS8_ = input.readSInt32();
                                continue;
                            case 200:
                                if ((mutable_bitField0_ & 0x1000000) == 0) {
                                    this.lLSRefKoef_ = newIntList();
                                    mutable_bitField0_ |= 0x1000000;
                                }
                                this.lLSRefKoef_.addInt(input.readUInt32());
                                continue;
                            case 202:
                                length = input.readRawVarint32();
                                limit = input.pushLimit(length);
                                if ((mutable_bitField0_ & 0x1000000) == 0 && input.getBytesUntilLimit() > 0) {
                                    this.lLSRefKoef_ = newIntList();
                                    mutable_bitField0_ |= 0x1000000;
                                }
                                while (input.getBytesUntilLimit() > 0)
                                    this.lLSRefKoef_.addInt(input.readUInt32());
                                input.popLimit(limit);
                                continue;
                        }
                        if (!parseUnknownField(input, unknownFields, extensionRegistry, tag))
                            done = true;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e) {
                    throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this);
                } finally {
                    if ((mutable_bitField0_ & 0x1000000) != 0)
                        this.lLSRefKoef_.makeImmutable();
                    this.unknownFields = unknownFields.build();
                    makeExtensionsImmutable();
                }
            }

            public static final Descriptors.Descriptor getDescriptor() {
                return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_LLSDt_descriptor;
            }

            protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
                return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_LLSDt_fieldAccessorTable.ensureFieldAccessorsInitialized(LLSDt.class, Builder.class);
            }

            public boolean hasTLLS1() {
                return ((this.bitField0_ & 0x1) != 0);
            }

            public int getTLLS1() {
                return this.tLLS1_;
            }

            public boolean hasCLLS1() {
                return ((this.bitField0_ & 0x2) != 0);
            }

            public int getCLLS1() {
                return this.cLLS1_;
            }

            public boolean hasFLLS1() {
                return ((this.bitField0_ & 0x4) != 0);
            }

            public int getFLLS1() {
                return this.fLLS1_;
            }

            public boolean hasTLLS2() {
                return ((this.bitField0_ & 0x8) != 0);
            }

            public int getTLLS2() {
                return this.tLLS2_;
            }

            public boolean hasCLLS2() {
                return ((this.bitField0_ & 0x10) != 0);
            }

            public int getCLLS2() {
                return this.cLLS2_;
            }

            public boolean hasFLLS2() {
                return ((this.bitField0_ & 0x20) != 0);
            }

            public int getFLLS2() {
                return this.fLLS2_;
            }

            public boolean hasTLLS3() {
                return ((this.bitField0_ & 0x40) != 0);
            }

            public int getTLLS3() {
                return this.tLLS3_;
            }

            public boolean hasCLLS3() {
                return ((this.bitField0_ & 0x80) != 0);
            }

            public int getCLLS3() {
                return this.cLLS3_;
            }

            public boolean hasFLLS3() {
                return ((this.bitField0_ & 0x100) != 0);
            }

            public int getFLLS3() {
                return this.fLLS3_;
            }

            public boolean hasTLLS4() {
                return ((this.bitField0_ & 0x200) != 0);
            }

            public int getTLLS4() {
                return this.tLLS4_;
            }

            public boolean hasCLLS4() {
                return ((this.bitField0_ & 0x400) != 0);
            }

            public int getCLLS4() {
                return this.cLLS4_;
            }

            public boolean hasFLLS4() {
                return ((this.bitField0_ & 0x800) != 0);
            }

            public int getFLLS4() {
                return this.fLLS4_;
            }

            public boolean hasTLLS5() {
                return ((this.bitField0_ & 0x1000) != 0);
            }

            public int getTLLS5() {
                return this.tLLS5_;
            }

            public boolean hasCLLS5() {
                return ((this.bitField0_ & 0x2000) != 0);
            }

            public int getCLLS5() {
                return this.cLLS5_;
            }

            public boolean hasFLLS5() {
                return ((this.bitField0_ & 0x4000) != 0);
            }

            public int getFLLS5() {
                return this.fLLS5_;
            }

            public boolean hasTLLS6() {
                return ((this.bitField0_ & 0x8000) != 0);
            }

            public int getTLLS6() {
                return this.tLLS6_;
            }

            public boolean hasCLLS6() {
                return ((this.bitField0_ & 0x10000) != 0);
            }

            public int getCLLS6() {
                return this.cLLS6_;
            }

            public boolean hasFLLS6() {
                return ((this.bitField0_ & 0x20000) != 0);
            }

            public int getFLLS6() {
                return this.fLLS6_;
            }

            public boolean hasTLLS7() {
                return ((this.bitField0_ & 0x40000) != 0);
            }

            public int getTLLS7() {
                return this.tLLS7_;
            }

            public boolean hasCLLS7() {
                return ((this.bitField0_ & 0x80000) != 0);
            }

            public int getCLLS7() {
                return this.cLLS7_;
            }

            public boolean hasFLLS7() {
                return ((this.bitField0_ & 0x100000) != 0);
            }

            public int getFLLS7() {
                return this.fLLS7_;
            }

            public boolean hasTLLS8() {
                return ((this.bitField0_ & 0x200000) != 0);
            }

            public int getTLLS8() {
                return this.tLLS8_;
            }

            public boolean hasCLLS8() {
                return ((this.bitField0_ & 0x400000) != 0);
            }

            public int getCLLS8() {
                return this.cLLS8_;
            }

            public boolean hasFLLS8() {
                return ((this.bitField0_ & 0x800000) != 0);
            }

            public int getFLLS8() {
                return this.fLLS8_;
            }

            public List<Integer> getLLSRefKoefList() {
                return (List<Integer>) this.lLSRefKoef_;
            }

            public int getLLSRefKoefCount() {
                return this.lLSRefKoef_.size();
            }

            public int getLLSRefKoef(int index) {
                return this.lLSRefKoef_.getInt(index);
            }

            public final boolean isInitialized() {
                byte isInitialized = this.memoizedIsInitialized;
                if (isInitialized == 1)
                    return true;
                if (isInitialized == 0)
                    return false;
                this.memoizedIsInitialized = 1;
                return true;
            }

            public void writeTo(CodedOutputStream output) throws IOException {
                getSerializedSize();
                if ((this.bitField0_ & 0x1) != 0)
                    output.writeSInt32(1, this.tLLS1_);
                if ((this.bitField0_ & 0x2) != 0)
                    output.writeUInt32(2, this.cLLS1_);
                if ((this.bitField0_ & 0x4) != 0)
                    output.writeSInt32(3, this.fLLS1_);
                if ((this.bitField0_ & 0x8) != 0)
                    output.writeSInt32(4, this.tLLS2_);
                if ((this.bitField0_ & 0x10) != 0)
                    output.writeUInt32(5, this.cLLS2_);
                if ((this.bitField0_ & 0x20) != 0)
                    output.writeSInt32(6, this.fLLS2_);
                if ((this.bitField0_ & 0x40) != 0)
                    output.writeSInt32(7, this.tLLS3_);
                if ((this.bitField0_ & 0x80) != 0)
                    output.writeUInt32(8, this.cLLS3_);
                if ((this.bitField0_ & 0x100) != 0)
                    output.writeSInt32(9, this.fLLS3_);
                if ((this.bitField0_ & 0x200) != 0)
                    output.writeSInt32(10, this.tLLS4_);
                if ((this.bitField0_ & 0x400) != 0)
                    output.writeUInt32(11, this.cLLS4_);
                if ((this.bitField0_ & 0x800) != 0)
                    output.writeSInt32(12, this.fLLS4_);
                if ((this.bitField0_ & 0x1000) != 0)
                    output.writeSInt32(13, this.tLLS5_);
                if ((this.bitField0_ & 0x2000) != 0)
                    output.writeUInt32(14, this.cLLS5_);
                if ((this.bitField0_ & 0x4000) != 0)
                    output.writeSInt32(15, this.fLLS5_);
                if ((this.bitField0_ & 0x8000) != 0)
                    output.writeSInt32(16, this.tLLS6_);
                if ((this.bitField0_ & 0x10000) != 0)
                    output.writeUInt32(17, this.cLLS6_);
                if ((this.bitField0_ & 0x20000) != 0)
                    output.writeSInt32(18, this.fLLS6_);
                if ((this.bitField0_ & 0x40000) != 0)
                    output.writeSInt32(19, this.tLLS7_);
                if ((this.bitField0_ & 0x80000) != 0)
                    output.writeUInt32(20, this.cLLS7_);
                if ((this.bitField0_ & 0x100000) != 0)
                    output.writeSInt32(21, this.fLLS7_);
                if ((this.bitField0_ & 0x200000) != 0)
                    output.writeSInt32(22, this.tLLS8_);
                if ((this.bitField0_ & 0x400000) != 0)
                    output.writeUInt32(23, this.cLLS8_);
                if ((this.bitField0_ & 0x800000) != 0)
                    output.writeSInt32(24, this.fLLS8_);
                if (getLLSRefKoefList().size() > 0) {
                    output.writeUInt32NoTag(202);
                    output.writeUInt32NoTag(this.lLSRefKoefMemoizedSerializedSize);
                }
                for (int i = 0; i < this.lLSRefKoef_.size(); i++)
                    output.writeUInt32NoTag(this.lLSRefKoef_.getInt(i));
                this.unknownFields.writeTo(output);
            }

            public int getSerializedSize() {
                int size = this.memoizedSize;
                if (size != -1)
                    return size;
                size = 0;
                if ((this.bitField0_ & 0x1) != 0)
                    size += CodedOutputStream.computeSInt32Size(1, this.tLLS1_);
                if ((this.bitField0_ & 0x2) != 0)
                    size += CodedOutputStream.computeUInt32Size(2, this.cLLS1_);
                if ((this.bitField0_ & 0x4) != 0)
                    size += CodedOutputStream.computeSInt32Size(3, this.fLLS1_);
                if ((this.bitField0_ & 0x8) != 0)
                    size += CodedOutputStream.computeSInt32Size(4, this.tLLS2_);
                if ((this.bitField0_ & 0x10) != 0)
                    size += CodedOutputStream.computeUInt32Size(5, this.cLLS2_);
                if ((this.bitField0_ & 0x20) != 0)
                    size += CodedOutputStream.computeSInt32Size(6, this.fLLS2_);
                if ((this.bitField0_ & 0x40) != 0)
                    size += CodedOutputStream.computeSInt32Size(7, this.tLLS3_);
                if ((this.bitField0_ & 0x80) != 0)
                    size += CodedOutputStream.computeUInt32Size(8, this.cLLS3_);
                if ((this.bitField0_ & 0x100) != 0)
                    size += CodedOutputStream.computeSInt32Size(9, this.fLLS3_);
                if ((this.bitField0_ & 0x200) != 0)
                    size += CodedOutputStream.computeSInt32Size(10, this.tLLS4_);
                if ((this.bitField0_ & 0x400) != 0)
                    size += CodedOutputStream.computeUInt32Size(11, this.cLLS4_);
                if ((this.bitField0_ & 0x800) != 0)
                    size += CodedOutputStream.computeSInt32Size(12, this.fLLS4_);
                if ((this.bitField0_ & 0x1000) != 0)
                    size += CodedOutputStream.computeSInt32Size(13, this.tLLS5_);
                if ((this.bitField0_ & 0x2000) != 0)
                    size += CodedOutputStream.computeUInt32Size(14, this.cLLS5_);
                if ((this.bitField0_ & 0x4000) != 0)
                    size += CodedOutputStream.computeSInt32Size(15, this.fLLS5_);
                if ((this.bitField0_ & 0x8000) != 0)
                    size += CodedOutputStream.computeSInt32Size(16, this.tLLS6_);
                if ((this.bitField0_ & 0x10000) != 0)
                    size += CodedOutputStream.computeUInt32Size(17, this.cLLS6_);
                if ((this.bitField0_ & 0x20000) != 0)
                    size += CodedOutputStream.computeSInt32Size(18, this.fLLS6_);
                if ((this.bitField0_ & 0x40000) != 0)
                    size += CodedOutputStream.computeSInt32Size(19, this.tLLS7_);
                if ((this.bitField0_ & 0x80000) != 0)
                    size += CodedOutputStream.computeUInt32Size(20, this.cLLS7_);
                if ((this.bitField0_ & 0x100000) != 0)
                    size += CodedOutputStream.computeSInt32Size(21, this.fLLS7_);
                if ((this.bitField0_ & 0x200000) != 0)
                    size += CodedOutputStream.computeSInt32Size(22, this.tLLS8_);
                if ((this.bitField0_ & 0x400000) != 0)
                    size += CodedOutputStream.computeUInt32Size(23, this.cLLS8_);
                if ((this.bitField0_ & 0x800000) != 0)
                    size += CodedOutputStream.computeSInt32Size(24, this.fLLS8_);
                int dataSize = 0;
                for (int i = 0; i < this.lLSRefKoef_.size(); i++)
                    dataSize += CodedOutputStream.computeUInt32SizeNoTag(this.lLSRefKoef_.getInt(i));
                size += dataSize;
                if (!getLLSRefKoefList().isEmpty()) {
                    size += 2;
                    size += CodedOutputStream.computeInt32SizeNoTag(dataSize);
                }
                this.lLSRefKoefMemoizedSerializedSize = dataSize;
                size += this.unknownFields.getSerializedSize();
                this.memoizedSize = size;
                return size;
            }

            public boolean equals(Object obj) {
                if (obj == this)
                    return true;
                if (!(obj instanceof LLSDt))
                    return super.equals(obj);
                LLSDt other = (LLSDt) obj;
                if (hasTLLS1() != other.hasTLLS1())
                    return false;
                if (hasTLLS1() && getTLLS1() != other.getTLLS1())
                    return false;
                if (hasCLLS1() != other.hasCLLS1())
                    return false;
                if (hasCLLS1() && getCLLS1() != other.getCLLS1())
                    return false;
                if (hasFLLS1() != other.hasFLLS1())
                    return false;
                if (hasFLLS1() && getFLLS1() != other.getFLLS1())
                    return false;
                if (hasTLLS2() != other.hasTLLS2())
                    return false;
                if (hasTLLS2() && getTLLS2() != other.getTLLS2())
                    return false;
                if (hasCLLS2() != other.hasCLLS2())
                    return false;
                if (hasCLLS2() && getCLLS2() != other.getCLLS2())
                    return false;
                if (hasFLLS2() != other.hasFLLS2())
                    return false;
                if (hasFLLS2() && getFLLS2() != other.getFLLS2())
                    return false;
                if (hasTLLS3() != other.hasTLLS3())
                    return false;
                if (hasTLLS3() && getTLLS3() != other.getTLLS3())
                    return false;
                if (hasCLLS3() != other.hasCLLS3())
                    return false;
                if (hasCLLS3() && getCLLS3() != other.getCLLS3())
                    return false;
                if (hasFLLS3() != other.hasFLLS3())
                    return false;
                if (hasFLLS3() && getFLLS3() != other.getFLLS3())
                    return false;
                if (hasTLLS4() != other.hasTLLS4())
                    return false;
                if (hasTLLS4() && getTLLS4() != other.getTLLS4())
                    return false;
                if (hasCLLS4() != other.hasCLLS4())
                    return false;
                if (hasCLLS4() && getCLLS4() != other.getCLLS4())
                    return false;
                if (hasFLLS4() != other.hasFLLS4())
                    return false;
                if (hasFLLS4() && getFLLS4() != other.getFLLS4())
                    return false;
                if (hasTLLS5() != other.hasTLLS5())
                    return false;
                if (hasTLLS5() && getTLLS5() != other.getTLLS5())
                    return false;
                if (hasCLLS5() != other.hasCLLS5())
                    return false;
                if (hasCLLS5() && getCLLS5() != other.getCLLS5())
                    return false;
                if (hasFLLS5() != other.hasFLLS5())
                    return false;
                if (hasFLLS5() && getFLLS5() != other.getFLLS5())
                    return false;
                if (hasTLLS6() != other.hasTLLS6())
                    return false;
                if (hasTLLS6() && getTLLS6() != other.getTLLS6())
                    return false;
                if (hasCLLS6() != other.hasCLLS6())
                    return false;
                if (hasCLLS6() && getCLLS6() != other.getCLLS6())
                    return false;
                if (hasFLLS6() != other.hasFLLS6())
                    return false;
                if (hasFLLS6() && getFLLS6() != other.getFLLS6())
                    return false;
                if (hasTLLS7() != other.hasTLLS7())
                    return false;
                if (hasTLLS7() && getTLLS7() != other.getTLLS7())
                    return false;
                if (hasCLLS7() != other.hasCLLS7())
                    return false;
                if (hasCLLS7() && getCLLS7() != other.getCLLS7())
                    return false;
                if (hasFLLS7() != other.hasFLLS7())
                    return false;
                if (hasFLLS7() && getFLLS7() != other.getFLLS7())
                    return false;
                if (hasTLLS8() != other.hasTLLS8())
                    return false;
                if (hasTLLS8() && getTLLS8() != other.getTLLS8())
                    return false;
                if (hasCLLS8() != other.hasCLLS8())
                    return false;
                if (hasCLLS8() && getCLLS8() != other.getCLLS8())
                    return false;
                if (hasFLLS8() != other.hasFLLS8())
                    return false;
                if (hasFLLS8() && getFLLS8() != other.getFLLS8())
                    return false;
                if (!getLLSRefKoefList().equals(other.getLLSRefKoefList()))
                    return false;
                if (!this.unknownFields.equals(other.unknownFields))
                    return false;
                return true;
            }

            public int hashCode() {
                if (this.memoizedHashCode != 0)
                    return this.memoizedHashCode;
                int hash = 41;
                hash = 19 * hash + getDescriptor().hashCode();
                if (hasTLLS1()) {
                    hash = 37 * hash + 1;
                    hash = 53 * hash + getTLLS1();
                }
                if (hasCLLS1()) {
                    hash = 37 * hash + 2;
                    hash = 53 * hash + getCLLS1();
                }
                if (hasFLLS1()) {
                    hash = 37 * hash + 3;
                    hash = 53 * hash + getFLLS1();
                }
                if (hasTLLS2()) {
                    hash = 37 * hash + 4;
                    hash = 53 * hash + getTLLS2();
                }
                if (hasCLLS2()) {
                    hash = 37 * hash + 5;
                    hash = 53 * hash + getCLLS2();
                }
                if (hasFLLS2()) {
                    hash = 37 * hash + 6;
                    hash = 53 * hash + getFLLS2();
                }
                if (hasTLLS3()) {
                    hash = 37 * hash + 7;
                    hash = 53 * hash + getTLLS3();
                }
                if (hasCLLS3()) {
                    hash = 37 * hash + 8;
                    hash = 53 * hash + getCLLS3();
                }
                if (hasFLLS3()) {
                    hash = 37 * hash + 9;
                    hash = 53 * hash + getFLLS3();
                }
                if (hasTLLS4()) {
                    hash = 37 * hash + 10;
                    hash = 53 * hash + getTLLS4();
                }
                if (hasCLLS4()) {
                    hash = 37 * hash + 11;
                    hash = 53 * hash + getCLLS4();
                }
                if (hasFLLS4()) {
                    hash = 37 * hash + 12;
                    hash = 53 * hash + getFLLS4();
                }
                if (hasTLLS5()) {
                    hash = 37 * hash + 13;
                    hash = 53 * hash + getTLLS5();
                }
                if (hasCLLS5()) {
                    hash = 37 * hash + 14;
                    hash = 53 * hash + getCLLS5();
                }
                if (hasFLLS5()) {
                    hash = 37 * hash + 15;
                    hash = 53 * hash + getFLLS5();
                }
                if (hasTLLS6()) {
                    hash = 37 * hash + 16;
                    hash = 53 * hash + getTLLS6();
                }
                if (hasCLLS6()) {
                    hash = 37 * hash + 17;
                    hash = 53 * hash + getCLLS6();
                }
                if (hasFLLS6()) {
                    hash = 37 * hash + 18;
                    hash = 53 * hash + getFLLS6();
                }
                if (hasTLLS7()) {
                    hash = 37 * hash + 19;
                    hash = 53 * hash + getTLLS7();
                }
                if (hasCLLS7()) {
                    hash = 37 * hash + 20;
                    hash = 53 * hash + getCLLS7();
                }
                if (hasFLLS7()) {
                    hash = 37 * hash + 21;
                    hash = 53 * hash + getFLLS7();
                }
                if (hasTLLS8()) {
                    hash = 37 * hash + 22;
                    hash = 53 * hash + getTLLS8();
                }
                if (hasCLLS8()) {
                    hash = 37 * hash + 23;
                    hash = 53 * hash + getCLLS8();
                }
                if (hasFLLS8()) {
                    hash = 37 * hash + 24;
                    hash = 53 * hash + getFLLS8();
                }
                if (getLLSRefKoefCount() > 0) {
                    hash = 37 * hash + 25;
                    hash = 53 * hash + getLLSRefKoefList().hashCode();
                }
                hash = 29 * hash + this.unknownFields.hashCode();
                this.memoizedHashCode = hash;
                return hash;
            }

            public static LLSDt parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
                return (LLSDt) PARSER.parseFrom(data);
            }

            public static LLSDt parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return (LLSDt) PARSER.parseFrom(data, extensionRegistry);
            }

            public static LLSDt parseFrom(ByteString data) throws InvalidProtocolBufferException {
                return (LLSDt) PARSER.parseFrom(data);
            }

            public static LLSDt parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return (LLSDt) PARSER.parseFrom(data, extensionRegistry);
            }

            public static LLSDt parseFrom(byte[] data) throws InvalidProtocolBufferException {
                return (LLSDt) PARSER.parseFrom(data);
            }

            public static LLSDt parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return (LLSDt) PARSER.parseFrom(data, extensionRegistry);
            }

            public static LLSDt parseFrom(InputStream input) throws IOException {
                return (LLSDt) GeneratedMessageV3.parseWithIOException(PARSER, input);
            }

            public static LLSDt parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                return (LLSDt) GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
            }

            public static LLSDt parseDelimitedFrom(InputStream input) throws IOException {
                return (LLSDt) GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
            }

            public static LLSDt parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                return (LLSDt) GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
            }

            public static LLSDt parseFrom(CodedInputStream input) throws IOException {
                return (LLSDt) GeneratedMessageV3.parseWithIOException(PARSER, input);
            }

            public static LLSDt parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                return (LLSDt) GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
            }

            public Builder newBuilderForType() {
                return newBuilder();
            }

            public static Builder newBuilder() {
                return DEFAULT_INSTANCE.toBuilder();
            }

            public static Builder newBuilder(LLSDt prototype) {
                return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
            }

            public Builder toBuilder() {
                return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder()).mergeFrom(this);
            }

            protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
                Builder builder = new Builder(parent);
                return builder;
            }

            public static final class Builder extends GeneratedMessageV3.Builder<Builder> implements OmnicommMessageOuterClass.OmnicommMessage.LLSDtOrBuilder {
                private int bitField0_;

                private int tLLS1_;

                private int cLLS1_;

                private int fLLS1_;

                private int tLLS2_;

                private int cLLS2_;

                private int fLLS2_;

                private int tLLS3_;

                private int cLLS3_;

                private int fLLS3_;

                private int tLLS4_;

                private int cLLS4_;

                private int fLLS4_;

                private int tLLS5_;

                private int cLLS5_;

                private int fLLS5_;

                private int tLLS6_;

                private int cLLS6_;

                private int fLLS6_;

                private int tLLS7_;

                private int cLLS7_;

                private int fLLS7_;

                private int tLLS8_;

                private int cLLS8_;

                private int fLLS8_;

                private Internal.IntList lLSRefKoef_;

                public static final Descriptors.Descriptor getDescriptor() {
                    return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_LLSDt_descriptor;
                }

                protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
                    return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_LLSDt_fieldAccessorTable.ensureFieldAccessorsInitialized(OmnicommMessageOuterClass.OmnicommMessage.LLSDt.class, Builder.class);
                }

                private Builder() {
                    this.lLSRefKoef_ = OmnicommMessageOuterClass.OmnicommMessage.LLSDt.emptyIntList();
                    maybeForceBuilderInitialization();
                }

                private Builder(GeneratedMessageV3.BuilderParent parent) {
                    super(parent);
                    this.lLSRefKoef_ = OmnicommMessageOuterClass.OmnicommMessage.LLSDt.emptyIntList();
                    maybeForceBuilderInitialization();
                }

                private void maybeForceBuilderInitialization() {
                    if (OmnicommMessageOuterClass.OmnicommMessage.LLSDt.alwaysUseFieldBuilders) ;
                }

                public Builder clear() {
                    super.clear();
                    this.tLLS1_ = 0;
                    this.bitField0_ &= 0xFFFFFFFE;
                    this.cLLS1_ = 0;
                    this.bitField0_ &= 0xFFFFFFFD;
                    this.fLLS1_ = 0;
                    this.bitField0_ &= 0xFFFFFFFB;
                    this.tLLS2_ = 0;
                    this.bitField0_ &= 0xFFFFFFF7;
                    this.cLLS2_ = 0;
                    this.bitField0_ &= 0xFFFFFFEF;
                    this.fLLS2_ = 0;
                    this.bitField0_ &= 0xFFFFFFDF;
                    this.tLLS3_ = 0;
                    this.bitField0_ &= 0xFFFFFFBF;
                    this.cLLS3_ = 0;
                    this.bitField0_ &= 0xFFFFFF7F;
                    this.fLLS3_ = 0;
                    this.bitField0_ &= 0xFFFFFEFF;
                    this.tLLS4_ = 0;
                    this.bitField0_ &= 0xFFFFFDFF;
                    this.cLLS4_ = 0;
                    this.bitField0_ &= 0xFFFFFBFF;
                    this.fLLS4_ = 0;
                    this.bitField0_ &= 0xFFFFF7FF;
                    this.tLLS5_ = 0;
                    this.bitField0_ &= 0xFFFFEFFF;
                    this.cLLS5_ = 0;
                    this.bitField0_ &= 0xFFFFDFFF;
                    this.fLLS5_ = 0;
                    this.bitField0_ &= 0xFFFFBFFF;
                    this.tLLS6_ = 0;
                    this.bitField0_ &= 0xFFFF7FFF;
                    this.cLLS6_ = 0;
                    this.bitField0_ &= 0xFFFEFFFF;
                    this.fLLS6_ = 0;
                    this.bitField0_ &= 0xFFFDFFFF;
                    this.tLLS7_ = 0;
                    this.bitField0_ &= 0xFFFBFFFF;
                    this.cLLS7_ = 0;
                    this.bitField0_ &= 0xFFF7FFFF;
                    this.fLLS7_ = 0;
                    this.bitField0_ &= 0xFFEFFFFF;
                    this.tLLS8_ = 0;
                    this.bitField0_ &= 0xFFDFFFFF;
                    this.cLLS8_ = 0;
                    this.bitField0_ &= 0xFFBFFFFF;
                    this.fLLS8_ = 0;
                    this.bitField0_ &= 0xFF7FFFFF;
                    this.lLSRefKoef_ = OmnicommMessageOuterClass.OmnicommMessage.LLSDt.emptyIntList();
                    this.bitField0_ &= 0xFEFFFFFF;
                    return this;
                }

                public Descriptors.Descriptor getDescriptorForType() {
                    return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_LLSDt_descriptor;
                }

                public OmnicommMessageOuterClass.OmnicommMessage.LLSDt getDefaultInstanceForType() {
                    return OmnicommMessageOuterClass.OmnicommMessage.LLSDt.getDefaultInstance();
                }

                public OmnicommMessageOuterClass.OmnicommMessage.LLSDt build() {
                    OmnicommMessageOuterClass.OmnicommMessage.LLSDt result = buildPartial();
                    if (!result.isInitialized())
                        throw newUninitializedMessageException(result);
                    return result;
                }

                public OmnicommMessageOuterClass.OmnicommMessage.LLSDt buildPartial() {
                    OmnicommMessageOuterClass.OmnicommMessage.LLSDt result = new OmnicommMessageOuterClass.OmnicommMessage.LLSDt(this);
                    int from_bitField0_ = this.bitField0_;
                    int to_bitField0_ = 0;
                    if ((from_bitField0_ & 0x1) != 0) {
                        result.tLLS1_ = this.tLLS1_;
                        to_bitField0_ |= 0x1;
                    }
                    if ((from_bitField0_ & 0x2) != 0) {
                        result.cLLS1_ = this.cLLS1_;
                        to_bitField0_ |= 0x2;
                    }
                    if ((from_bitField0_ & 0x4) != 0) {
                        result.fLLS1_ = this.fLLS1_;
                        to_bitField0_ |= 0x4;
                    }
                    if ((from_bitField0_ & 0x8) != 0) {
                        result.tLLS2_ = this.tLLS2_;
                        to_bitField0_ |= 0x8;
                    }
                    if ((from_bitField0_ & 0x10) != 0) {
                        result.cLLS2_ = this.cLLS2_;
                        to_bitField0_ |= 0x10;
                    }
                    if ((from_bitField0_ & 0x20) != 0) {
                        result.fLLS2_ = this.fLLS2_;
                        to_bitField0_ |= 0x20;
                    }
                    if ((from_bitField0_ & 0x40) != 0) {
                        result.tLLS3_ = this.tLLS3_;
                        to_bitField0_ |= 0x40;
                    }
                    if ((from_bitField0_ & 0x80) != 0) {
                        result.cLLS3_ = this.cLLS3_;
                        to_bitField0_ |= 0x80;
                    }
                    if ((from_bitField0_ & 0x100) != 0) {
                        result.fLLS3_ = this.fLLS3_;
                        to_bitField0_ |= 0x100;
                    }
                    if ((from_bitField0_ & 0x200) != 0) {
                        result.tLLS4_ = this.tLLS4_;
                        to_bitField0_ |= 0x200;
                    }
                    if ((from_bitField0_ & 0x400) != 0) {
                        result.cLLS4_ = this.cLLS4_;
                        to_bitField0_ |= 0x400;
                    }
                    if ((from_bitField0_ & 0x800) != 0) {
                        result.fLLS4_ = this.fLLS4_;
                        to_bitField0_ |= 0x800;
                    }
                    if ((from_bitField0_ & 0x1000) != 0) {
                        result.tLLS5_ = this.tLLS5_;
                        to_bitField0_ |= 0x1000;
                    }
                    if ((from_bitField0_ & 0x2000) != 0) {
                        result.cLLS5_ = this.cLLS5_;
                        to_bitField0_ |= 0x2000;
                    }
                    if ((from_bitField0_ & 0x4000) != 0) {
                        result.fLLS5_ = this.fLLS5_;
                        to_bitField0_ |= 0x4000;
                    }
                    if ((from_bitField0_ & 0x8000) != 0) {
                        result.tLLS6_ = this.tLLS6_;
                        to_bitField0_ |= 0x8000;
                    }
                    if ((from_bitField0_ & 0x10000) != 0) {
                        result.cLLS6_ = this.cLLS6_;
                        to_bitField0_ |= 0x10000;
                    }
                    if ((from_bitField0_ & 0x20000) != 0) {
                        result.fLLS6_ = this.fLLS6_;
                        to_bitField0_ |= 0x20000;
                    }
                    if ((from_bitField0_ & 0x40000) != 0) {
                        result.tLLS7_ = this.tLLS7_;
                        to_bitField0_ |= 0x40000;
                    }
                    if ((from_bitField0_ & 0x80000) != 0) {
                        result.cLLS7_ = this.cLLS7_;
                        to_bitField0_ |= 0x80000;
                    }
                    if ((from_bitField0_ & 0x100000) != 0) {
                        result.fLLS7_ = this.fLLS7_;
                        to_bitField0_ |= 0x100000;
                    }
                    if ((from_bitField0_ & 0x200000) != 0) {
                        result.tLLS8_ = this.tLLS8_;
                        to_bitField0_ |= 0x200000;
                    }
                    if ((from_bitField0_ & 0x400000) != 0) {
                        result.cLLS8_ = this.cLLS8_;
                        to_bitField0_ |= 0x400000;
                    }
                    if ((from_bitField0_ & 0x800000) != 0) {
                        result.fLLS8_ = this.fLLS8_;
                        to_bitField0_ |= 0x800000;
                    }
                    if ((this.bitField0_ & 0x1000000) != 0) {
                        this.lLSRefKoef_.makeImmutable();
                        this.bitField0_ &= 0xFEFFFFFF;
                    }
                    result.lLSRefKoef_ = this.lLSRefKoef_;
                    result.bitField0_ = to_bitField0_;
                    onBuilt();
                    return result;
                }

                public Builder clone() {
                    return (Builder) super.clone();
                }

                public Builder setField(Descriptors.FieldDescriptor field, Object value) {
                    return (Builder) super.setField(field, value);
                }

                public Builder clearField(Descriptors.FieldDescriptor field) {
                    return (Builder) super.clearField(field);
                }

                public Builder clearOneof(Descriptors.OneofDescriptor oneof) {
                    return (Builder) super.clearOneof(oneof);
                }

                public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
                    return (Builder) super.setRepeatedField(field, index, value);
                }

                public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
                    return (Builder) super.addRepeatedField(field, value);
                }

                public Builder mergeFrom(Message other) {
                    if (other instanceof OmnicommMessageOuterClass.OmnicommMessage.LLSDt)
                        return mergeFrom((OmnicommMessageOuterClass.OmnicommMessage.LLSDt) other);
                    super.mergeFrom(other);
                    return this;
                }

                public Builder mergeFrom(OmnicommMessageOuterClass.OmnicommMessage.LLSDt other) {
                    if (other == OmnicommMessageOuterClass.OmnicommMessage.LLSDt.getDefaultInstance())
                        return this;
                    if (other.hasTLLS1())
                        setTLLS1(other.getTLLS1());
                    if (other.hasCLLS1())
                        setCLLS1(other.getCLLS1());
                    if (other.hasFLLS1())
                        setFLLS1(other.getFLLS1());
                    if (other.hasTLLS2())
                        setTLLS2(other.getTLLS2());
                    if (other.hasCLLS2())
                        setCLLS2(other.getCLLS2());
                    if (other.hasFLLS2())
                        setFLLS2(other.getFLLS2());
                    if (other.hasTLLS3())
                        setTLLS3(other.getTLLS3());
                    if (other.hasCLLS3())
                        setCLLS3(other.getCLLS3());
                    if (other.hasFLLS3())
                        setFLLS3(other.getFLLS3());
                    if (other.hasTLLS4())
                        setTLLS4(other.getTLLS4());
                    if (other.hasCLLS4())
                        setCLLS4(other.getCLLS4());
                    if (other.hasFLLS4())
                        setFLLS4(other.getFLLS4());
                    if (other.hasTLLS5())
                        setTLLS5(other.getTLLS5());
                    if (other.hasCLLS5())
                        setCLLS5(other.getCLLS5());
                    if (other.hasFLLS5())
                        setFLLS5(other.getFLLS5());
                    if (other.hasTLLS6())
                        setTLLS6(other.getTLLS6());
                    if (other.hasCLLS6())
                        setCLLS6(other.getCLLS6());
                    if (other.hasFLLS6())
                        setFLLS6(other.getFLLS6());
                    if (other.hasTLLS7())
                        setTLLS7(other.getTLLS7());
                    if (other.hasCLLS7())
                        setCLLS7(other.getCLLS7());
                    if (other.hasFLLS7())
                        setFLLS7(other.getFLLS7());
                    if (other.hasTLLS8())
                        setTLLS8(other.getTLLS8());
                    if (other.hasCLLS8())
                        setCLLS8(other.getCLLS8());
                    if (other.hasFLLS8())
                        setFLLS8(other.getFLLS8());
                    if (!other.lLSRefKoef_.isEmpty()) {
                        if (this.lLSRefKoef_.isEmpty()) {
                            this.lLSRefKoef_ = other.lLSRefKoef_;
                            this.bitField0_ &= 0xFEFFFFFF;
                        } else {
                            ensureLLSRefKoefIsMutable();
                            this.lLSRefKoef_.addAll((Collection) other.lLSRefKoef_);
                        }
                        onChanged();
                    }
                    mergeUnknownFields(other.unknownFields);
                    onChanged();
                    return this;
                }

                public final boolean isInitialized() {
                    return true;
                }

                public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                    OmnicommMessageOuterClass.OmnicommMessage.LLSDt parsedMessage = null;
                    try {
                        parsedMessage = (OmnicommMessageOuterClass.OmnicommMessage.LLSDt) OmnicommMessageOuterClass.OmnicommMessage.LLSDt.PARSER.parsePartialFrom(input, extensionRegistry);
                    } catch (InvalidProtocolBufferException e) {
                        parsedMessage = (OmnicommMessageOuterClass.OmnicommMessage.LLSDt) e.getUnfinishedMessage();
                        throw e.unwrapIOException();
                    } finally {
                        if (parsedMessage != null)
                            mergeFrom(parsedMessage);
                    }
                    return this;
                }

                public boolean hasTLLS1() {
                    return ((this.bitField0_ & 0x1) != 0);
                }

                public int getTLLS1() {
                    return this.tLLS1_;
                }

                public Builder setTLLS1(int value) {
                    this.bitField0_ |= 0x1;
                    this.tLLS1_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearTLLS1() {
                    this.bitField0_ &= 0xFFFFFFFE;
                    this.tLLS1_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasCLLS1() {
                    return ((this.bitField0_ & 0x2) != 0);
                }

                public int getCLLS1() {
                    return this.cLLS1_;
                }

                public Builder setCLLS1(int value) {
                    this.bitField0_ |= 0x2;
                    this.cLLS1_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearCLLS1() {
                    this.bitField0_ &= 0xFFFFFFFD;
                    this.cLLS1_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasFLLS1() {
                    return ((this.bitField0_ & 0x4) != 0);
                }

                public int getFLLS1() {
                    return this.fLLS1_;
                }

                public Builder setFLLS1(int value) {
                    this.bitField0_ |= 0x4;
                    this.fLLS1_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearFLLS1() {
                    this.bitField0_ &= 0xFFFFFFFB;
                    this.fLLS1_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasTLLS2() {
                    return ((this.bitField0_ & 0x8) != 0);
                }

                public int getTLLS2() {
                    return this.tLLS2_;
                }

                public Builder setTLLS2(int value) {
                    this.bitField0_ |= 0x8;
                    this.tLLS2_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearTLLS2() {
                    this.bitField0_ &= 0xFFFFFFF7;
                    this.tLLS2_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasCLLS2() {
                    return ((this.bitField0_ & 0x10) != 0);
                }

                public int getCLLS2() {
                    return this.cLLS2_;
                }

                public Builder setCLLS2(int value) {
                    this.bitField0_ |= 0x10;
                    this.cLLS2_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearCLLS2() {
                    this.bitField0_ &= 0xFFFFFFEF;
                    this.cLLS2_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasFLLS2() {
                    return ((this.bitField0_ & 0x20) != 0);
                }

                public int getFLLS2() {
                    return this.fLLS2_;
                }

                public Builder setFLLS2(int value) {
                    this.bitField0_ |= 0x20;
                    this.fLLS2_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearFLLS2() {
                    this.bitField0_ &= 0xFFFFFFDF;
                    this.fLLS2_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasTLLS3() {
                    return ((this.bitField0_ & 0x40) != 0);
                }

                public int getTLLS3() {
                    return this.tLLS3_;
                }

                public Builder setTLLS3(int value) {
                    this.bitField0_ |= 0x40;
                    this.tLLS3_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearTLLS3() {
                    this.bitField0_ &= 0xFFFFFFBF;
                    this.tLLS3_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasCLLS3() {
                    return ((this.bitField0_ & 0x80) != 0);
                }

                public int getCLLS3() {
                    return this.cLLS3_;
                }

                public Builder setCLLS3(int value) {
                    this.bitField0_ |= 0x80;
                    this.cLLS3_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearCLLS3() {
                    this.bitField0_ &= 0xFFFFFF7F;
                    this.cLLS3_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasFLLS3() {
                    return ((this.bitField0_ & 0x100) != 0);
                }

                public int getFLLS3() {
                    return this.fLLS3_;
                }

                public Builder setFLLS3(int value) {
                    this.bitField0_ |= 0x100;
                    this.fLLS3_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearFLLS3() {
                    this.bitField0_ &= 0xFFFFFEFF;
                    this.fLLS3_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasTLLS4() {
                    return ((this.bitField0_ & 0x200) != 0);
                }

                public int getTLLS4() {
                    return this.tLLS4_;
                }

                public Builder setTLLS4(int value) {
                    this.bitField0_ |= 0x200;
                    this.tLLS4_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearTLLS4() {
                    this.bitField0_ &= 0xFFFFFDFF;
                    this.tLLS4_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasCLLS4() {
                    return ((this.bitField0_ & 0x400) != 0);
                }

                public int getCLLS4() {
                    return this.cLLS4_;
                }

                public Builder setCLLS4(int value) {
                    this.bitField0_ |= 0x400;
                    this.cLLS4_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearCLLS4() {
                    this.bitField0_ &= 0xFFFFFBFF;
                    this.cLLS4_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasFLLS4() {
                    return ((this.bitField0_ & 0x800) != 0);
                }

                public int getFLLS4() {
                    return this.fLLS4_;
                }

                public Builder setFLLS4(int value) {
                    this.bitField0_ |= 0x800;
                    this.fLLS4_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearFLLS4() {
                    this.bitField0_ &= 0xFFFFF7FF;
                    this.fLLS4_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasTLLS5() {
                    return ((this.bitField0_ & 0x1000) != 0);
                }

                public int getTLLS5() {
                    return this.tLLS5_;
                }

                public Builder setTLLS5(int value) {
                    this.bitField0_ |= 0x1000;
                    this.tLLS5_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearTLLS5() {
                    this.bitField0_ &= 0xFFFFEFFF;
                    this.tLLS5_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasCLLS5() {
                    return ((this.bitField0_ & 0x2000) != 0);
                }

                public int getCLLS5() {
                    return this.cLLS5_;
                }

                public Builder setCLLS5(int value) {
                    this.bitField0_ |= 0x2000;
                    this.cLLS5_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearCLLS5() {
                    this.bitField0_ &= 0xFFFFDFFF;
                    this.cLLS5_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasFLLS5() {
                    return ((this.bitField0_ & 0x4000) != 0);
                }

                public int getFLLS5() {
                    return this.fLLS5_;
                }

                public Builder setFLLS5(int value) {
                    this.bitField0_ |= 0x4000;
                    this.fLLS5_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearFLLS5() {
                    this.bitField0_ &= 0xFFFFBFFF;
                    this.fLLS5_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasTLLS6() {
                    return ((this.bitField0_ & 0x8000) != 0);
                }

                public int getTLLS6() {
                    return this.tLLS6_;
                }

                public Builder setTLLS6(int value) {
                    this.bitField0_ |= 0x8000;
                    this.tLLS6_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearTLLS6() {
                    this.bitField0_ &= 0xFFFF7FFF;
                    this.tLLS6_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasCLLS6() {
                    return ((this.bitField0_ & 0x10000) != 0);
                }

                public int getCLLS6() {
                    return this.cLLS6_;
                }

                public Builder setCLLS6(int value) {
                    this.bitField0_ |= 0x10000;
                    this.cLLS6_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearCLLS6() {
                    this.bitField0_ &= 0xFFFEFFFF;
                    this.cLLS6_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasFLLS6() {
                    return ((this.bitField0_ & 0x20000) != 0);
                }

                public int getFLLS6() {
                    return this.fLLS6_;
                }

                public Builder setFLLS6(int value) {
                    this.bitField0_ |= 0x20000;
                    this.fLLS6_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearFLLS6() {
                    this.bitField0_ &= 0xFFFDFFFF;
                    this.fLLS6_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasTLLS7() {
                    return ((this.bitField0_ & 0x40000) != 0);
                }

                public int getTLLS7() {
                    return this.tLLS7_;
                }

                public Builder setTLLS7(int value) {
                    this.bitField0_ |= 0x40000;
                    this.tLLS7_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearTLLS7() {
                    this.bitField0_ &= 0xFFFBFFFF;
                    this.tLLS7_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasCLLS7() {
                    return ((this.bitField0_ & 0x80000) != 0);
                }

                public int getCLLS7() {
                    return this.cLLS7_;
                }

                public Builder setCLLS7(int value) {
                    this.bitField0_ |= 0x80000;
                    this.cLLS7_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearCLLS7() {
                    this.bitField0_ &= 0xFFF7FFFF;
                    this.cLLS7_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasFLLS7() {
                    return ((this.bitField0_ & 0x100000) != 0);
                }

                public int getFLLS7() {
                    return this.fLLS7_;
                }

                public Builder setFLLS7(int value) {
                    this.bitField0_ |= 0x100000;
                    this.fLLS7_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearFLLS7() {
                    this.bitField0_ &= 0xFFEFFFFF;
                    this.fLLS7_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasTLLS8() {
                    return ((this.bitField0_ & 0x200000) != 0);
                }

                public int getTLLS8() {
                    return this.tLLS8_;
                }

                public Builder setTLLS8(int value) {
                    this.bitField0_ |= 0x200000;
                    this.tLLS8_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearTLLS8() {
                    this.bitField0_ &= 0xFFDFFFFF;
                    this.tLLS8_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasCLLS8() {
                    return ((this.bitField0_ & 0x400000) != 0);
                }

                public int getCLLS8() {
                    return this.cLLS8_;
                }

                public Builder setCLLS8(int value) {
                    this.bitField0_ |= 0x400000;
                    this.cLLS8_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearCLLS8() {
                    this.bitField0_ &= 0xFFBFFFFF;
                    this.cLLS8_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasFLLS8() {
                    return ((this.bitField0_ & 0x800000) != 0);
                }

                public int getFLLS8() {
                    return this.fLLS8_;
                }

                public Builder setFLLS8(int value) {
                    this.bitField0_ |= 0x800000;
                    this.fLLS8_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearFLLS8() {
                    this.bitField0_ &= 0xFF7FFFFF;
                    this.fLLS8_ = 0;
                    onChanged();
                    return this;
                }

                private void ensureLLSRefKoefIsMutable() {
                    if ((this.bitField0_ & 0x1000000) == 0) {
                        this.lLSRefKoef_ = OmnicommMessageOuterClass.OmnicommMessage.LLSDt.mutableCopy(this.lLSRefKoef_);
                        this.bitField0_ |= 0x1000000;
                    }
                }

                public List<Integer> getLLSRefKoefList() {
                    return ((this.bitField0_ & 0x1000000) != 0) ? Collections.<Integer>unmodifiableList((List<? extends Integer>) this.lLSRefKoef_) : (List<Integer>) this.lLSRefKoef_;
                }

                public int getLLSRefKoefCount() {
                    return this.lLSRefKoef_.size();
                }

                public int getLLSRefKoef(int index) {
                    return this.lLSRefKoef_.getInt(index);
                }

                public Builder setLLSRefKoef(int index, int value) {
                    ensureLLSRefKoefIsMutable();
                    this.lLSRefKoef_.setInt(index, value);
                    onChanged();
                    return this;
                }

                public Builder addLLSRefKoef(int value) {
                    ensureLLSRefKoefIsMutable();
                    this.lLSRefKoef_.addInt(value);
                    onChanged();
                    return this;
                }

                public Builder addAllLLSRefKoef(Iterable<? extends Integer> values) {
                    ensureLLSRefKoefIsMutable();
                    AbstractMessageLite.Builder.addAll(values, (List) this.lLSRefKoef_);
                    onChanged();
                    return this;
                }

                public Builder clearLLSRefKoef() {
                    this.lLSRefKoef_ = OmnicommMessageOuterClass.OmnicommMessage.LLSDt.emptyIntList();
                    this.bitField0_ &= 0xFEFFFFFF;
                    onChanged();
                    return this;
                }

                public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
                    return (Builder) super.setUnknownFields(unknownFields);
                }

                public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
                    return (Builder) super.mergeUnknownFields(unknownFields);
                }
            }

            private static final LLSDt DEFAULT_INSTANCE = new LLSDt();

            public static LLSDt getDefaultInstance() {
                return DEFAULT_INSTANCE;
            }

            @Deprecated
            public static final Parser<LLSDt> PARSER = (Parser<LLSDt>) new AbstractParser<LLSDt>() {
                public OmnicommMessageOuterClass.OmnicommMessage.LLSDt parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                    return new OmnicommMessageOuterClass.OmnicommMessage.LLSDt(input, extensionRegistry);
                }
            };

            public static Parser<LLSDt> parser() {
                return PARSER;
            }

            public Parser<LLSDt> getParserForType() {
                return PARSER;
            }

            public LLSDt getDefaultInstanceForType() {
                return DEFAULT_INSTANCE;
            }
        }

        public static final class Builder extends GeneratedMessageV3.Builder<LLSDt.Builder> implements LLSDtOrBuilder {
            private int bitField0_;

            private int tLLS1_;

            private int cLLS1_;

            private int fLLS1_;

            private int tLLS2_;

            private int cLLS2_;

            private int fLLS2_;

            private int tLLS3_;

            private int cLLS3_;

            private int fLLS3_;

            private int tLLS4_;

            private int cLLS4_;

            private int fLLS4_;

            private int tLLS5_;

            private int cLLS5_;

            private int fLLS5_;

            private int tLLS6_;

            private int cLLS6_;

            private int fLLS6_;

            private int tLLS7_;

            private int cLLS7_;

            private int fLLS7_;

            private int tLLS8_;

            private int cLLS8_;

            private int fLLS8_;

            private Internal.IntList lLSRefKoef_;

            public static final Descriptors.Descriptor getDescriptor() {
                return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_LLSDt_descriptor;
            }

            protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
                return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_LLSDt_fieldAccessorTable.ensureFieldAccessorsInitialized(OmnicommMessageOuterClass.OmnicommMessage.LLSDt.class, Builder.class);
            }

            private Builder() {
                this.lLSRefKoef_ = OmnicommMessageOuterClass.OmnicommMessage.LLSDt.emptyIntList();
                maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessageV3.BuilderParent parent) {
                super(parent);
                this.lLSRefKoef_ = OmnicommMessageOuterClass.OmnicommMessage.LLSDt.emptyIntList();
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (OmnicommMessageOuterClass.OmnicommMessage.LLSDt.alwaysUseFieldBuilders) ;
            }

            public Builder clear() {
                super.clear();
                this.tLLS1_ = 0;
                this.bitField0_ &= 0xFFFFFFFE;
                this.cLLS1_ = 0;
                this.bitField0_ &= 0xFFFFFFFD;
                this.fLLS1_ = 0;
                this.bitField0_ &= 0xFFFFFFFB;
                this.tLLS2_ = 0;
                this.bitField0_ &= 0xFFFFFFF7;
                this.cLLS2_ = 0;
                this.bitField0_ &= 0xFFFFFFEF;
                this.fLLS2_ = 0;
                this.bitField0_ &= 0xFFFFFFDF;
                this.tLLS3_ = 0;
                this.bitField0_ &= 0xFFFFFFBF;
                this.cLLS3_ = 0;
                this.bitField0_ &= 0xFFFFFF7F;
                this.fLLS3_ = 0;
                this.bitField0_ &= 0xFFFFFEFF;
                this.tLLS4_ = 0;
                this.bitField0_ &= 0xFFFFFDFF;
                this.cLLS4_ = 0;
                this.bitField0_ &= 0xFFFFFBFF;
                this.fLLS4_ = 0;
                this.bitField0_ &= 0xFFFFF7FF;
                this.tLLS5_ = 0;
                this.bitField0_ &= 0xFFFFEFFF;
                this.cLLS5_ = 0;
                this.bitField0_ &= 0xFFFFDFFF;
                this.fLLS5_ = 0;
                this.bitField0_ &= 0xFFFFBFFF;
                this.tLLS6_ = 0;
                this.bitField0_ &= 0xFFFF7FFF;
                this.cLLS6_ = 0;
                this.bitField0_ &= 0xFFFEFFFF;
                this.fLLS6_ = 0;
                this.bitField0_ &= 0xFFFDFFFF;
                this.tLLS7_ = 0;
                this.bitField0_ &= 0xFFFBFFFF;
                this.cLLS7_ = 0;
                this.bitField0_ &= 0xFFF7FFFF;
                this.fLLS7_ = 0;
                this.bitField0_ &= 0xFFEFFFFF;
                this.tLLS8_ = 0;
                this.bitField0_ &= 0xFFDFFFFF;
                this.cLLS8_ = 0;
                this.bitField0_ &= 0xFFBFFFFF;
                this.fLLS8_ = 0;
                this.bitField0_ &= 0xFF7FFFFF;
                this.lLSRefKoef_ = OmnicommMessageOuterClass.OmnicommMessage.LLSDt.emptyIntList();
                this.bitField0_ &= 0xFEFFFFFF;
                return this;
            }

            public Descriptors.Descriptor getDescriptorForType() {
                return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_LLSDt_descriptor;
            }

            public OmnicommMessageOuterClass.OmnicommMessage.LLSDt getDefaultInstanceForType() {
                return OmnicommMessageOuterClass.OmnicommMessage.LLSDt.getDefaultInstance();
            }

            public OmnicommMessageOuterClass.OmnicommMessage.LLSDt build() {
                OmnicommMessageOuterClass.OmnicommMessage.LLSDt result = buildPartial();
                if (!result.isInitialized())
                    throw newUninitializedMessageException(result);
                return result;
            }

            public OmnicommMessageOuterClass.OmnicommMessage.LLSDt buildPartial() {
                OmnicommMessageOuterClass.OmnicommMessage.LLSDt result = new OmnicommMessageOuterClass.OmnicommMessage.LLSDt(this);
                int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) != 0) {
                    result.tLLS1_ = this.tLLS1_;
                    to_bitField0_ |= 0x1;
                }
                if ((from_bitField0_ & 0x2) != 0) {
                    result.cLLS1_ = this.cLLS1_;
                    to_bitField0_ |= 0x2;
                }
                if ((from_bitField0_ & 0x4) != 0) {
                    result.fLLS1_ = this.fLLS1_;
                    to_bitField0_ |= 0x4;
                }
                if ((from_bitField0_ & 0x8) != 0) {
                    result.tLLS2_ = this.tLLS2_;
                    to_bitField0_ |= 0x8;
                }
                if ((from_bitField0_ & 0x10) != 0) {
                    result.cLLS2_ = this.cLLS2_;
                    to_bitField0_ |= 0x10;
                }
                if ((from_bitField0_ & 0x20) != 0) {
                    result.fLLS2_ = this.fLLS2_;
                    to_bitField0_ |= 0x20;
                }
                if ((from_bitField0_ & 0x40) != 0) {
                    result.tLLS3_ = this.tLLS3_;
                    to_bitField0_ |= 0x40;
                }
                if ((from_bitField0_ & 0x80) != 0) {
                    result.cLLS3_ = this.cLLS3_;
                    to_bitField0_ |= 0x80;
                }
                if ((from_bitField0_ & 0x100) != 0) {
                    result.fLLS3_ = this.fLLS3_;
                    to_bitField0_ |= 0x100;
                }
                if ((from_bitField0_ & 0x200) != 0) {
                    result.tLLS4_ = this.tLLS4_;
                    to_bitField0_ |= 0x200;
                }
                if ((from_bitField0_ & 0x400) != 0) {
                    result.cLLS4_ = this.cLLS4_;
                    to_bitField0_ |= 0x400;
                }
                if ((from_bitField0_ & 0x800) != 0) {
                    result.fLLS4_ = this.fLLS4_;
                    to_bitField0_ |= 0x800;
                }
                if ((from_bitField0_ & 0x1000) != 0) {
                    result.tLLS5_ = this.tLLS5_;
                    to_bitField0_ |= 0x1000;
                }
                if ((from_bitField0_ & 0x2000) != 0) {
                    result.cLLS5_ = this.cLLS5_;
                    to_bitField0_ |= 0x2000;
                }
                if ((from_bitField0_ & 0x4000) != 0) {
                    result.fLLS5_ = this.fLLS5_;
                    to_bitField0_ |= 0x4000;
                }
                if ((from_bitField0_ & 0x8000) != 0) {
                    result.tLLS6_ = this.tLLS6_;
                    to_bitField0_ |= 0x8000;
                }
                if ((from_bitField0_ & 0x10000) != 0) {
                    result.cLLS6_ = this.cLLS6_;
                    to_bitField0_ |= 0x10000;
                }
                if ((from_bitField0_ & 0x20000) != 0) {
                    result.fLLS6_ = this.fLLS6_;
                    to_bitField0_ |= 0x20000;
                }
                if ((from_bitField0_ & 0x40000) != 0) {
                    result.tLLS7_ = this.tLLS7_;
                    to_bitField0_ |= 0x40000;
                }
                if ((from_bitField0_ & 0x80000) != 0) {
                    result.cLLS7_ = this.cLLS7_;
                    to_bitField0_ |= 0x80000;
                }
                if ((from_bitField0_ & 0x100000) != 0) {
                    result.fLLS7_ = this.fLLS7_;
                    to_bitField0_ |= 0x100000;
                }
                if ((from_bitField0_ & 0x200000) != 0) {
                    result.tLLS8_ = this.tLLS8_;
                    to_bitField0_ |= 0x200000;
                }
                if ((from_bitField0_ & 0x400000) != 0) {
                    result.cLLS8_ = this.cLLS8_;
                    to_bitField0_ |= 0x400000;
                }
                if ((from_bitField0_ & 0x800000) != 0) {
                    result.fLLS8_ = this.fLLS8_;
                    to_bitField0_ |= 0x800000;
                }
                if ((this.bitField0_ & 0x1000000) != 0) {
                    this.lLSRefKoef_.makeImmutable();
                    this.bitField0_ &= 0xFEFFFFFF;
                }
                result.lLSRefKoef_ = this.lLSRefKoef_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }

            public Builder setField(Descriptors.FieldDescriptor field, Object value) {
                return (Builder) super.setField(field, value);
            }

            public Builder clearField(Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }

            public Builder clearOneof(Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }

            public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }

            public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }

            public Builder mergeFrom(Message other) {
                if (other instanceof OmnicommMessageOuterClass.OmnicommMessage.LLSDt)
                    return mergeFrom((OmnicommMessageOuterClass.OmnicommMessage.LLSDt) other);
                super.mergeFrom(other);
                return this;
            }

            public Builder mergeFrom(OmnicommMessageOuterClass.OmnicommMessage.LLSDt other) {
                if (other == OmnicommMessageOuterClass.OmnicommMessage.LLSDt.getDefaultInstance())
                    return this;
                if (other.hasTLLS1())
                    setTLLS1(other.getTLLS1());
                if (other.hasCLLS1())
                    setCLLS1(other.getCLLS1());
                if (other.hasFLLS1())
                    setFLLS1(other.getFLLS1());
                if (other.hasTLLS2())
                    setTLLS2(other.getTLLS2());
                if (other.hasCLLS2())
                    setCLLS2(other.getCLLS2());
                if (other.hasFLLS2())
                    setFLLS2(other.getFLLS2());
                if (other.hasTLLS3())
                    setTLLS3(other.getTLLS3());
                if (other.hasCLLS3())
                    setCLLS3(other.getCLLS3());
                if (other.hasFLLS3())
                    setFLLS3(other.getFLLS3());
                if (other.hasTLLS4())
                    setTLLS4(other.getTLLS4());
                if (other.hasCLLS4())
                    setCLLS4(other.getCLLS4());
                if (other.hasFLLS4())
                    setFLLS4(other.getFLLS4());
                if (other.hasTLLS5())
                    setTLLS5(other.getTLLS5());
                if (other.hasCLLS5())
                    setCLLS5(other.getCLLS5());
                if (other.hasFLLS5())
                    setFLLS5(other.getFLLS5());
                if (other.hasTLLS6())
                    setTLLS6(other.getTLLS6());
                if (other.hasCLLS6())
                    setCLLS6(other.getCLLS6());
                if (other.hasFLLS6())
                    setFLLS6(other.getFLLS6());
                if (other.hasTLLS7())
                    setTLLS7(other.getTLLS7());
                if (other.hasCLLS7())
                    setCLLS7(other.getCLLS7());
                if (other.hasFLLS7())
                    setFLLS7(other.getFLLS7());
                if (other.hasTLLS8())
                    setTLLS8(other.getTLLS8());
                if (other.hasCLLS8())
                    setCLLS8(other.getCLLS8());
                if (other.hasFLLS8())
                    setFLLS8(other.getFLLS8());
                if (!other.lLSRefKoef_.isEmpty()) {
                    if (this.lLSRefKoef_.isEmpty()) {
                        this.lLSRefKoef_ = other.lLSRefKoef_;
                        this.bitField0_ &= 0xFEFFFFFF;
                    } else {
                        ensureLLSRefKoefIsMutable();
                        this.lLSRefKoef_.addAll((Collection) other.lLSRefKoef_);
                    }
                    onChanged();
                }
                mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                OmnicommMessageOuterClass.OmnicommMessage.LLSDt parsedMessage = null;
                try {
                    parsedMessage = (OmnicommMessageOuterClass.OmnicommMessage.LLSDt) OmnicommMessageOuterClass.OmnicommMessage.LLSDt.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (OmnicommMessageOuterClass.OmnicommMessage.LLSDt) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null)
                        mergeFrom(parsedMessage);
                }
                return this;
            }

            public boolean hasTLLS1() {
                return ((this.bitField0_ & 0x1) != 0);
            }

            public int getTLLS1() {
                return this.tLLS1_;
            }

            public Builder setTLLS1(int value) {
                this.bitField0_ |= 0x1;
                this.tLLS1_ = value;
                onChanged();
                return this;
            }

            public Builder clearTLLS1() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.tLLS1_ = 0;
                onChanged();
                return this;
            }

            public boolean hasCLLS1() {
                return ((this.bitField0_ & 0x2) != 0);
            }

            public int getCLLS1() {
                return this.cLLS1_;
            }

            public Builder setCLLS1(int value) {
                this.bitField0_ |= 0x2;
                this.cLLS1_ = value;
                onChanged();
                return this;
            }

            public Builder clearCLLS1() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.cLLS1_ = 0;
                onChanged();
                return this;
            }

            public boolean hasFLLS1() {
                return ((this.bitField0_ & 0x4) != 0);
            }

            public int getFLLS1() {
                return this.fLLS1_;
            }

            public Builder setFLLS1(int value) {
                this.bitField0_ |= 0x4;
                this.fLLS1_ = value;
                onChanged();
                return this;
            }

            public Builder clearFLLS1() {
                this.bitField0_ &= 0xFFFFFFFB;
                this.fLLS1_ = 0;
                onChanged();
                return this;
            }

            public boolean hasTLLS2() {
                return ((this.bitField0_ & 0x8) != 0);
            }

            public int getTLLS2() {
                return this.tLLS2_;
            }

            public Builder setTLLS2(int value) {
                this.bitField0_ |= 0x8;
                this.tLLS2_ = value;
                onChanged();
                return this;
            }

            public Builder clearTLLS2() {
                this.bitField0_ &= 0xFFFFFFF7;
                this.tLLS2_ = 0;
                onChanged();
                return this;
            }

            public boolean hasCLLS2() {
                return ((this.bitField0_ & 0x10) != 0);
            }

            public int getCLLS2() {
                return this.cLLS2_;
            }

            public Builder setCLLS2(int value) {
                this.bitField0_ |= 0x10;
                this.cLLS2_ = value;
                onChanged();
                return this;
            }

            public Builder clearCLLS2() {
                this.bitField0_ &= 0xFFFFFFEF;
                this.cLLS2_ = 0;
                onChanged();
                return this;
            }

            public boolean hasFLLS2() {
                return ((this.bitField0_ & 0x20) != 0);
            }

            public int getFLLS2() {
                return this.fLLS2_;
            }

            public Builder setFLLS2(int value) {
                this.bitField0_ |= 0x20;
                this.fLLS2_ = value;
                onChanged();
                return this;
            }

            public Builder clearFLLS2() {
                this.bitField0_ &= 0xFFFFFFDF;
                this.fLLS2_ = 0;
                onChanged();
                return this;
            }

            public boolean hasTLLS3() {
                return ((this.bitField0_ & 0x40) != 0);
            }

            public int getTLLS3() {
                return this.tLLS3_;
            }

            public Builder setTLLS3(int value) {
                this.bitField0_ |= 0x40;
                this.tLLS3_ = value;
                onChanged();
                return this;
            }

            public Builder clearTLLS3() {
                this.bitField0_ &= 0xFFFFFFBF;
                this.tLLS3_ = 0;
                onChanged();
                return this;
            }

            public boolean hasCLLS3() {
                return ((this.bitField0_ & 0x80) != 0);
            }

            public int getCLLS3() {
                return this.cLLS3_;
            }

            public Builder setCLLS3(int value) {
                this.bitField0_ |= 0x80;
                this.cLLS3_ = value;
                onChanged();
                return this;
            }

            public Builder clearCLLS3() {
                this.bitField0_ &= 0xFFFFFF7F;
                this.cLLS3_ = 0;
                onChanged();
                return this;
            }

            public boolean hasFLLS3() {
                return ((this.bitField0_ & 0x100) != 0);
            }

            public int getFLLS3() {
                return this.fLLS3_;
            }

            public Builder setFLLS3(int value) {
                this.bitField0_ |= 0x100;
                this.fLLS3_ = value;
                onChanged();
                return this;
            }

            public Builder clearFLLS3() {
                this.bitField0_ &= 0xFFFFFEFF;
                this.fLLS3_ = 0;
                onChanged();
                return this;
            }

            public boolean hasTLLS4() {
                return ((this.bitField0_ & 0x200) != 0);
            }

            public int getTLLS4() {
                return this.tLLS4_;
            }

            public Builder setTLLS4(int value) {
                this.bitField0_ |= 0x200;
                this.tLLS4_ = value;
                onChanged();
                return this;
            }

            public Builder clearTLLS4() {
                this.bitField0_ &= 0xFFFFFDFF;
                this.tLLS4_ = 0;
                onChanged();
                return this;
            }

            public boolean hasCLLS4() {
                return ((this.bitField0_ & 0x400) != 0);
            }

            public int getCLLS4() {
                return this.cLLS4_;
            }

            public Builder setCLLS4(int value) {
                this.bitField0_ |= 0x400;
                this.cLLS4_ = value;
                onChanged();
                return this;
            }

            public Builder clearCLLS4() {
                this.bitField0_ &= 0xFFFFFBFF;
                this.cLLS4_ = 0;
                onChanged();
                return this;
            }

            public boolean hasFLLS4() {
                return ((this.bitField0_ & 0x800) != 0);
            }

            public int getFLLS4() {
                return this.fLLS4_;
            }

            public Builder setFLLS4(int value) {
                this.bitField0_ |= 0x800;
                this.fLLS4_ = value;
                onChanged();
                return this;
            }

            public Builder clearFLLS4() {
                this.bitField0_ &= 0xFFFFF7FF;
                this.fLLS4_ = 0;
                onChanged();
                return this;
            }

            public boolean hasTLLS5() {
                return ((this.bitField0_ & 0x1000) != 0);
            }

            public int getTLLS5() {
                return this.tLLS5_;
            }

            public Builder setTLLS5(int value) {
                this.bitField0_ |= 0x1000;
                this.tLLS5_ = value;
                onChanged();
                return this;
            }

            public Builder clearTLLS5() {
                this.bitField0_ &= 0xFFFFEFFF;
                this.tLLS5_ = 0;
                onChanged();
                return this;
            }

            public boolean hasCLLS5() {
                return ((this.bitField0_ & 0x2000) != 0);
            }

            public int getCLLS5() {
                return this.cLLS5_;
            }

            public Builder setCLLS5(int value) {
                this.bitField0_ |= 0x2000;
                this.cLLS5_ = value;
                onChanged();
                return this;
            }

            public Builder clearCLLS5() {
                this.bitField0_ &= 0xFFFFDFFF;
                this.cLLS5_ = 0;
                onChanged();
                return this;
            }

            public boolean hasFLLS5() {
                return ((this.bitField0_ & 0x4000) != 0);
            }

            public int getFLLS5() {
                return this.fLLS5_;
            }

            public Builder setFLLS5(int value) {
                this.bitField0_ |= 0x4000;
                this.fLLS5_ = value;
                onChanged();
                return this;
            }

            public Builder clearFLLS5() {
                this.bitField0_ &= 0xFFFFBFFF;
                this.fLLS5_ = 0;
                onChanged();
                return this;
            }

            public boolean hasTLLS6() {
                return ((this.bitField0_ & 0x8000) != 0);
            }

            public int getTLLS6() {
                return this.tLLS6_;
            }

            public Builder setTLLS6(int value) {
                this.bitField0_ |= 0x8000;
                this.tLLS6_ = value;
                onChanged();
                return this;
            }

            public Builder clearTLLS6() {
                this.bitField0_ &= 0xFFFF7FFF;
                this.tLLS6_ = 0;
                onChanged();
                return this;
            }

            public boolean hasCLLS6() {
                return ((this.bitField0_ & 0x10000) != 0);
            }

            public int getCLLS6() {
                return this.cLLS6_;
            }

            public Builder setCLLS6(int value) {
                this.bitField0_ |= 0x10000;
                this.cLLS6_ = value;
                onChanged();
                return this;
            }

            public Builder clearCLLS6() {
                this.bitField0_ &= 0xFFFEFFFF;
                this.cLLS6_ = 0;
                onChanged();
                return this;
            }

            public boolean hasFLLS6() {
                return ((this.bitField0_ & 0x20000) != 0);
            }

            public int getFLLS6() {
                return this.fLLS6_;
            }

            public Builder setFLLS6(int value) {
                this.bitField0_ |= 0x20000;
                this.fLLS6_ = value;
                onChanged();
                return this;
            }

            public Builder clearFLLS6() {
                this.bitField0_ &= 0xFFFDFFFF;
                this.fLLS6_ = 0;
                onChanged();
                return this;
            }

            public boolean hasTLLS7() {
                return ((this.bitField0_ & 0x40000) != 0);
            }

            public int getTLLS7() {
                return this.tLLS7_;
            }

            public Builder setTLLS7(int value) {
                this.bitField0_ |= 0x40000;
                this.tLLS7_ = value;
                onChanged();
                return this;
            }

            public Builder clearTLLS7() {
                this.bitField0_ &= 0xFFFBFFFF;
                this.tLLS7_ = 0;
                onChanged();
                return this;
            }

            public boolean hasCLLS7() {
                return ((this.bitField0_ & 0x80000) != 0);
            }

            public int getCLLS7() {
                return this.cLLS7_;
            }

            public Builder setCLLS7(int value) {
                this.bitField0_ |= 0x80000;
                this.cLLS7_ = value;
                onChanged();
                return this;
            }

            public Builder clearCLLS7() {
                this.bitField0_ &= 0xFFF7FFFF;
                this.cLLS7_ = 0;
                onChanged();
                return this;
            }

            public boolean hasFLLS7() {
                return ((this.bitField0_ & 0x100000) != 0);
            }

            public int getFLLS7() {
                return this.fLLS7_;
            }

            public Builder setFLLS7(int value) {
                this.bitField0_ |= 0x100000;
                this.fLLS7_ = value;
                onChanged();
                return this;
            }

            public Builder clearFLLS7() {
                this.bitField0_ &= 0xFFEFFFFF;
                this.fLLS7_ = 0;
                onChanged();
                return this;
            }

            public boolean hasTLLS8() {
                return ((this.bitField0_ & 0x200000) != 0);
            }

            public int getTLLS8() {
                return this.tLLS8_;
            }

            public Builder setTLLS8(int value) {
                this.bitField0_ |= 0x200000;
                this.tLLS8_ = value;
                onChanged();
                return this;
            }

            public Builder clearTLLS8() {
                this.bitField0_ &= 0xFFDFFFFF;
                this.tLLS8_ = 0;
                onChanged();
                return this;
            }

            public boolean hasCLLS8() {
                return ((this.bitField0_ & 0x400000) != 0);
            }

            public int getCLLS8() {
                return this.cLLS8_;
            }

            public Builder setCLLS8(int value) {
                this.bitField0_ |= 0x400000;
                this.cLLS8_ = value;
                onChanged();
                return this;
            }

            public Builder clearCLLS8() {
                this.bitField0_ &= 0xFFBFFFFF;
                this.cLLS8_ = 0;
                onChanged();
                return this;
            }

            public boolean hasFLLS8() {
                return ((this.bitField0_ & 0x800000) != 0);
            }

            public int getFLLS8() {
                return this.fLLS8_;
            }

            public Builder setFLLS8(int value) {
                this.bitField0_ |= 0x800000;
                this.fLLS8_ = value;
                onChanged();
                return this;
            }

            public Builder clearFLLS8() {
                this.bitField0_ &= 0xFF7FFFFF;
                this.fLLS8_ = 0;
                onChanged();
                return this;
            }

            private void ensureLLSRefKoefIsMutable() {
                if ((this.bitField0_ & 0x1000000) == 0) {
                    this.lLSRefKoef_ = OmnicommMessageOuterClass.OmnicommMessage.LLSDt.mutableCopy(this.lLSRefKoef_);
                    this.bitField0_ |= 0x1000000;
                }
            }

            public List<Integer> getLLSRefKoefList() {
                return ((this.bitField0_ & 0x1000000) != 0) ? Collections.<Integer>unmodifiableList((List<? extends Integer>) this.lLSRefKoef_) : (List<Integer>) this.lLSRefKoef_;
            }

            public int getLLSRefKoefCount() {
                return this.lLSRefKoef_.size();
            }

            public int getLLSRefKoef(int index) {
                return this.lLSRefKoef_.getInt(index);
            }

            public Builder setLLSRefKoef(int index, int value) {
                ensureLLSRefKoefIsMutable();
                this.lLSRefKoef_.setInt(index, value);
                onChanged();
                return this;
            }

            public Builder addLLSRefKoef(int value) {
                ensureLLSRefKoefIsMutable();
                this.lLSRefKoef_.addInt(value);
                onChanged();
                return this;
            }

            public Builder addAllLLSRefKoef(Iterable<? extends Integer> values) {
                ensureLLSRefKoefIsMutable();
                AbstractMessageLite.Builder.addAll(values, (List) this.lLSRefKoef_);
                onChanged();
                return this;
            }

            public Builder clearLLSRefKoef() {
                this.lLSRefKoef_ = OmnicommMessageOuterClass.OmnicommMessage.LLSDt.emptyIntList();
                this.bitField0_ &= 0xFEFFFFFF;
                onChanged();
                return this;
            }

            public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
                return (Builder) super.setUnknownFields(unknownFields);
            }

            public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
                return (Builder) super.mergeUnknownFields(unknownFields);
            }
        }

        public static final class Other extends GeneratedMessageV3 implements OtherOrBuilder {
            private static final long serialVersionUID = 0L;

            private int bitField0_;

            public static final int ONEWIRE_FIELD_NUMBER = 1;

            private OneWire oneWire_;

            public static final int PHERIP_FIELD_NUMBER = 2;

            private Pherip pherip_;

            public static final int EXCAN_FIELD_NUMBER = 3;

            private ExCAN exCAN_;

            public static final int TAHO_DDD_FIELD_NUMBER = 4;

            private Taho_DDD tahoDDD_;

            public static final int APC_FIELD_NUMBER = 5;

            private APC aPC_;

            public static final int MOBILEEYE_FIELD_NUMBER = 6;

            private MobileEye mobileEye_;

            public static final int SAFEDRIVING_FIELD_NUMBER = 7;

            private SafeDriving safeDriving_;

            public static final int GENCOMM_FIELD_NUMBER = 8;

            private GenComm genComm_;

            public static final int FUELSENSORMODBUS_FIELD_NUMBER = 9;

            private FuelSensorModbus fuelSensorModbus_;

            public static final int WEIGHTCONTROL_FIELD_NUMBER = 10;

            private WeightControl weightControl_;

            private byte memoizedIsInitialized;

            private Other(GeneratedMessageV3.Builder<?> builder) {
                super(builder);
                this.memoizedIsInitialized = -1;
            }

            private Other() {
                this.memoizedIsInitialized = -1;
            }

            protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) {
                return new Other();
            }

            public final UnknownFieldSet getUnknownFields() {
                return this.unknownFields;
            }

            private Other(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                this();
                if (extensionRegistry == null)
                    throw new NullPointerException();
                int mutable_bitField0_ = 0;
                UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
                try {
                    boolean done = false;
                    while (!done) {
                        OneWire.Builder builder8;
                        Pherip.Builder builder7;
                        ExCAN.Builder builder6;
                        Taho_DDD.Builder builder5;
                        APC.Builder builder4;
                        MobileEye.Builder builder3;
                        SafeDriving.Builder builder2;
                        GenComm.Builder builder1;
                        FuelSensorModbus.Builder builder;
                        WeightControl.Builder subBuilder;
                        int tag = input.readTag();
                        switch (tag) {
                            case 0:
                                done = true;
                                continue;
                            case 11:
                                builder8 = null;
                                if ((this.bitField0_ & 0x1) != 0)
                                    builder8 = this.oneWire_.toBuilder();
                                this.oneWire_ = (OneWire) input.readGroup(1, OneWire.PARSER, extensionRegistry);
                                if (builder8 != null) {
                                    builder8.mergeFrom(this.oneWire_);
                                    this.oneWire_ = builder8.buildPartial();
                                }
                                this.bitField0_ |= 0x1;
                                continue;
                            case 19:
                                builder7 = null;
                                if ((this.bitField0_ & 0x2) != 0)
                                    builder7 = this.pherip_.toBuilder();
                                this.pherip_ = (Pherip) input.readGroup(2, Pherip.PARSER, extensionRegistry);
                                if (builder7 != null) {
                                    builder7.mergeFrom(this.pherip_);
                                    this.pherip_ = builder7.buildPartial();
                                }
                                this.bitField0_ |= 0x2;
                                continue;
                            case 27:
                                builder6 = null;
                                if ((this.bitField0_ & 0x4) != 0)
                                    builder6 = this.exCAN_.toBuilder();
                                this.exCAN_ = (ExCAN) input.readGroup(3, ExCAN.PARSER, extensionRegistry);
                                if (builder6 != null) {
                                    builder6.mergeFrom(this.exCAN_);
                                    this.exCAN_ = builder6.buildPartial();
                                }
                                this.bitField0_ |= 0x4;
                                continue;
                            case 35:
                                builder5 = null;
                                if ((this.bitField0_ & 0x8) != 0)
                                    builder5 = this.tahoDDD_.toBuilder();
                                this.tahoDDD_ = (Taho_DDD) input.readGroup(4, Taho_DDD.PARSER, extensionRegistry);
                                if (builder5 != null) {
                                    builder5.mergeFrom(this.tahoDDD_);
                                    this.tahoDDD_ = builder5.buildPartial();
                                }
                                this.bitField0_ |= 0x8;
                                continue;
                            case 43:
                                builder4 = null;
                                if ((this.bitField0_ & 0x10) != 0)
                                    builder4 = this.aPC_.toBuilder();
                                this.aPC_ = (APC) input.readGroup(5, APC.PARSER, extensionRegistry);
                                if (builder4 != null) {
                                    builder4.mergeFrom(this.aPC_);
                                    this.aPC_ = builder4.buildPartial();
                                }
                                this.bitField0_ |= 0x10;
                                continue;
                            case 51:
                                builder3 = null;
                                if ((this.bitField0_ & 0x20) != 0)
                                    builder3 = this.mobileEye_.toBuilder();
                                this.mobileEye_ = (MobileEye) input.readGroup(6, MobileEye.PARSER, extensionRegistry);
                                if (builder3 != null) {
                                    builder3.mergeFrom(this.mobileEye_);
                                    this.mobileEye_ = builder3.buildPartial();
                                }
                                this.bitField0_ |= 0x20;
                                continue;
                            case 59:
                                builder2 = null;
                                if ((this.bitField0_ & 0x40) != 0)
                                    builder2 = this.safeDriving_.toBuilder();
                                this.safeDriving_ = (SafeDriving) input.readGroup(7, SafeDriving.PARSER, extensionRegistry);
                                if (builder2 != null) {
                                    builder2.mergeFrom(this.safeDriving_);
                                    this.safeDriving_ = builder2.buildPartial();
                                }
                                this.bitField0_ |= 0x40;
                                continue;
                            case 67:
                                builder1 = null;
                                if ((this.bitField0_ & 0x80) != 0)
                                    builder1 = this.genComm_.toBuilder();
                                this.genComm_ = (GenComm) input.readGroup(8, GenComm.PARSER, extensionRegistry);
                                if (builder1 != null) {
                                    builder1.mergeFrom(this.genComm_);
                                    this.genComm_ = builder1.buildPartial();
                                }
                                this.bitField0_ |= 0x80;
                                continue;
                            case 75:
                                builder = null;
                                if ((this.bitField0_ & 0x100) != 0)
                                    builder = this.fuelSensorModbus_.toBuilder();
                                this.fuelSensorModbus_ = (FuelSensorModbus) input.readGroup(9, FuelSensorModbus.PARSER, extensionRegistry);
                                if (builder != null) {
                                    builder.mergeFrom(this.fuelSensorModbus_);
                                    this.fuelSensorModbus_ = builder.buildPartial();
                                }
                                this.bitField0_ |= 0x100;
                                continue;
                            case 83:
                                subBuilder = null;
                                if ((this.bitField0_ & 0x200) != 0)
                                    subBuilder = this.weightControl_.toBuilder();
                                this.weightControl_ = (WeightControl) input.readGroup(10, WeightControl.PARSER, extensionRegistry);
                                if (subBuilder != null) {
                                    subBuilder.mergeFrom(this.weightControl_);
                                    this.weightControl_ = subBuilder.buildPartial();
                                }
                                this.bitField0_ |= 0x200;
                                continue;
                        }
                        if (!parseUnknownField(input, unknownFields, extensionRegistry, tag))
                            done = true;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e) {
                    throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this);
                } finally {
                    this.unknownFields = unknownFields.build();
                    makeExtensionsImmutable();
                }
            }

            public static final Descriptors.Descriptor getDescriptor() {
                return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_descriptor;
            }

            protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
                return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_fieldAccessorTable.ensureFieldAccessorsInitialized(Other.class, Builder.class);
            }

            public static final class OneWire extends GeneratedMessageV3 implements OneWireOrBuilder {
                private static final long serialVersionUID = 0L;

                private int bitField0_;

                public static final int ONEWIRE1_FIELD_NUMBER = 1;

                private int oneWire1_;

                public static final int ONEWIRE2_FIELD_NUMBER = 2;

                private int oneWire2_;

                public static final int ONEWIRE3_FIELD_NUMBER = 3;

                private int oneWire3_;

                public static final int ONEWIRE4_FIELD_NUMBER = 4;

                private int oneWire4_;

                public static final int ONEWIRE5_FIELD_NUMBER = 5;

                private int oneWire5_;

                public static final int ONEWIRE6_FIELD_NUMBER = 6;

                private int oneWire6_;

                public static final int ONEWIRE7_FIELD_NUMBER = 7;

                private int oneWire7_;

                public static final int ONEWIRE8_FIELD_NUMBER = 8;

                private int oneWire8_;

                private byte memoizedIsInitialized;

                private OneWire(GeneratedMessageV3.Builder<?> builder) {
                    super(builder);
                    this.memoizedIsInitialized = -1;
                }

                private OneWire() {
                    this.memoizedIsInitialized = -1;
                }

                protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) {
                    return new OneWire();
                }

                public final UnknownFieldSet getUnknownFields() {
                    return this.unknownFields;
                }

                private OneWire(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                    this();
                    if (extensionRegistry == null)
                        throw new NullPointerException();
                    int mutable_bitField0_ = 0;
                    UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
                    try {
                        boolean done = false;
                        while (!done) {
                            int tag = input.readTag();
                            switch (tag) {
                                case 0:
                                    done = true;
                                    continue;
                                case 8:
                                    this.bitField0_ |= 0x1;
                                    this.oneWire1_ = input.readSInt32();
                                    continue;
                                case 16:
                                    this.bitField0_ |= 0x2;
                                    this.oneWire2_ = input.readSInt32();
                                    continue;
                                case 24:
                                    this.bitField0_ |= 0x4;
                                    this.oneWire3_ = input.readSInt32();
                                    continue;
                                case 32:
                                    this.bitField0_ |= 0x8;
                                    this.oneWire4_ = input.readSInt32();
                                    continue;
                                case 40:
                                    this.bitField0_ |= 0x10;
                                    this.oneWire5_ = input.readSInt32();
                                    continue;
                                case 48:
                                    this.bitField0_ |= 0x20;
                                    this.oneWire6_ = input.readSInt32();
                                    continue;
                                case 56:
                                    this.bitField0_ |= 0x40;
                                    this.oneWire7_ = input.readSInt32();
                                    continue;
                                case 64:
                                    this.bitField0_ |= 0x80;
                                    this.oneWire8_ = input.readSInt32();
                                    continue;
                            }
                            if (!parseUnknownField(input, unknownFields, extensionRegistry, tag))
                                done = true;
                        }
                    } catch (InvalidProtocolBufferException e) {
                        throw e.setUnfinishedMessage(this);
                    } catch (IOException e) {
                        throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this);
                    } finally {
                        this.unknownFields = unknownFields.build();
                        makeExtensionsImmutable();
                    }
                }

                public static final Descriptors.Descriptor getDescriptor() {
                    return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_OneWire_descriptor;
                }

                protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
                    return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_OneWire_fieldAccessorTable.ensureFieldAccessorsInitialized(OneWire.class, Builder.class);
                }

                public boolean hasOneWire1() {
                    return ((this.bitField0_ & 0x1) != 0);
                }

                public int getOneWire1() {
                    return this.oneWire1_;
                }

                public boolean hasOneWire2() {
                    return ((this.bitField0_ & 0x2) != 0);
                }

                public int getOneWire2() {
                    return this.oneWire2_;
                }

                public boolean hasOneWire3() {
                    return ((this.bitField0_ & 0x4) != 0);
                }

                public int getOneWire3() {
                    return this.oneWire3_;
                }

                public boolean hasOneWire4() {
                    return ((this.bitField0_ & 0x8) != 0);
                }

                public int getOneWire4() {
                    return this.oneWire4_;
                }

                public boolean hasOneWire5() {
                    return ((this.bitField0_ & 0x10) != 0);
                }

                public int getOneWire5() {
                    return this.oneWire5_;
                }

                public boolean hasOneWire6() {
                    return ((this.bitField0_ & 0x20) != 0);
                }

                public int getOneWire6() {
                    return this.oneWire6_;
                }

                public boolean hasOneWire7() {
                    return ((this.bitField0_ & 0x40) != 0);
                }

                public int getOneWire7() {
                    return this.oneWire7_;
                }

                public boolean hasOneWire8() {
                    return ((this.bitField0_ & 0x80) != 0);
                }

                public int getOneWire8() {
                    return this.oneWire8_;
                }

                public final boolean isInitialized() {
                    byte isInitialized = this.memoizedIsInitialized;
                    if (isInitialized == 1)
                        return true;
                    if (isInitialized == 0)
                        return false;
                    this.memoizedIsInitialized = 1;
                    return true;
                }

                public void writeTo(CodedOutputStream output) throws IOException {
                    if ((this.bitField0_ & 0x1) != 0)
                        output.writeSInt32(1, this.oneWire1_);
                    if ((this.bitField0_ & 0x2) != 0)
                        output.writeSInt32(2, this.oneWire2_);
                    if ((this.bitField0_ & 0x4) != 0)
                        output.writeSInt32(3, this.oneWire3_);
                    if ((this.bitField0_ & 0x8) != 0)
                        output.writeSInt32(4, this.oneWire4_);
                    if ((this.bitField0_ & 0x10) != 0)
                        output.writeSInt32(5, this.oneWire5_);
                    if ((this.bitField0_ & 0x20) != 0)
                        output.writeSInt32(6, this.oneWire6_);
                    if ((this.bitField0_ & 0x40) != 0)
                        output.writeSInt32(7, this.oneWire7_);
                    if ((this.bitField0_ & 0x80) != 0)
                        output.writeSInt32(8, this.oneWire8_);
                    this.unknownFields.writeTo(output);
                }

                public int getSerializedSize() {
                    int size = this.memoizedSize;
                    if (size != -1)
                        return size;
                    size = 0;
                    if ((this.bitField0_ & 0x1) != 0)
                        size += CodedOutputStream.computeSInt32Size(1, this.oneWire1_);
                    if ((this.bitField0_ & 0x2) != 0)
                        size += CodedOutputStream.computeSInt32Size(2, this.oneWire2_);
                    if ((this.bitField0_ & 0x4) != 0)
                        size += CodedOutputStream.computeSInt32Size(3, this.oneWire3_);
                    if ((this.bitField0_ & 0x8) != 0)
                        size += CodedOutputStream.computeSInt32Size(4, this.oneWire4_);
                    if ((this.bitField0_ & 0x10) != 0)
                        size += CodedOutputStream.computeSInt32Size(5, this.oneWire5_);
                    if ((this.bitField0_ & 0x20) != 0)
                        size += CodedOutputStream.computeSInt32Size(6, this.oneWire6_);
                    if ((this.bitField0_ & 0x40) != 0)
                        size += CodedOutputStream.computeSInt32Size(7, this.oneWire7_);
                    if ((this.bitField0_ & 0x80) != 0)
                        size += CodedOutputStream.computeSInt32Size(8, this.oneWire8_);
                    size += this.unknownFields.getSerializedSize();
                    this.memoizedSize = size;
                    return size;
                }

                public boolean equals(Object obj) {
                    if (obj == this)
                        return true;
                    if (!(obj instanceof OneWire))
                        return super.equals(obj);
                    OneWire other = (OneWire) obj;
                    if (hasOneWire1() != other.hasOneWire1())
                        return false;
                    if (hasOneWire1() && getOneWire1() != other.getOneWire1())
                        return false;
                    if (hasOneWire2() != other.hasOneWire2())
                        return false;
                    if (hasOneWire2() && getOneWire2() != other.getOneWire2())
                        return false;
                    if (hasOneWire3() != other.hasOneWire3())
                        return false;
                    if (hasOneWire3() && getOneWire3() != other.getOneWire3())
                        return false;
                    if (hasOneWire4() != other.hasOneWire4())
                        return false;
                    if (hasOneWire4() && getOneWire4() != other.getOneWire4())
                        return false;
                    if (hasOneWire5() != other.hasOneWire5())
                        return false;
                    if (hasOneWire5() && getOneWire5() != other.getOneWire5())
                        return false;
                    if (hasOneWire6() != other.hasOneWire6())
                        return false;
                    if (hasOneWire6() && getOneWire6() != other.getOneWire6())
                        return false;
                    if (hasOneWire7() != other.hasOneWire7())
                        return false;
                    if (hasOneWire7() && getOneWire7() != other.getOneWire7())
                        return false;
                    if (hasOneWire8() != other.hasOneWire8())
                        return false;
                    if (hasOneWire8() && getOneWire8() != other.getOneWire8())
                        return false;
                    if (!this.unknownFields.equals(other.unknownFields))
                        return false;
                    return true;
                }

                public int hashCode() {
                    if (this.memoizedHashCode != 0)
                        return this.memoizedHashCode;
                    int hash = 41;
                    hash = 19 * hash + getDescriptor().hashCode();
                    if (hasOneWire1()) {
                        hash = 37 * hash + 1;
                        hash = 53 * hash + getOneWire1();
                    }
                    if (hasOneWire2()) {
                        hash = 37 * hash + 2;
                        hash = 53 * hash + getOneWire2();
                    }
                    if (hasOneWire3()) {
                        hash = 37 * hash + 3;
                        hash = 53 * hash + getOneWire3();
                    }
                    if (hasOneWire4()) {
                        hash = 37 * hash + 4;
                        hash = 53 * hash + getOneWire4();
                    }
                    if (hasOneWire5()) {
                        hash = 37 * hash + 5;
                        hash = 53 * hash + getOneWire5();
                    }
                    if (hasOneWire6()) {
                        hash = 37 * hash + 6;
                        hash = 53 * hash + getOneWire6();
                    }
                    if (hasOneWire7()) {
                        hash = 37 * hash + 7;
                        hash = 53 * hash + getOneWire7();
                    }
                    if (hasOneWire8()) {
                        hash = 37 * hash + 8;
                        hash = 53 * hash + getOneWire8();
                    }
                    hash = 29 * hash + this.unknownFields.hashCode();
                    this.memoizedHashCode = hash;
                    return hash;
                }

                public static OneWire parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
                    return (OneWire) PARSER.parseFrom(data);
                }

                public static OneWire parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                    return (OneWire) PARSER.parseFrom(data, extensionRegistry);
                }

                public static OneWire parseFrom(ByteString data) throws InvalidProtocolBufferException {
                    return (OneWire) PARSER.parseFrom(data);
                }

                public static OneWire parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                    return (OneWire) PARSER.parseFrom(data, extensionRegistry);
                }

                public static OneWire parseFrom(byte[] data) throws InvalidProtocolBufferException {
                    return (OneWire) PARSER.parseFrom(data);
                }

                public static OneWire parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                    return (OneWire) PARSER.parseFrom(data, extensionRegistry);
                }

                public static OneWire parseFrom(InputStream input) throws IOException {
                    return (OneWire) GeneratedMessageV3.parseWithIOException(PARSER, input);
                }

                public static OneWire parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                    return (OneWire) GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
                }

                public static OneWire parseDelimitedFrom(InputStream input) throws IOException {
                    return (OneWire) GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
                }

                public static OneWire parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                    return (OneWire) GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
                }

                public static OneWire parseFrom(CodedInputStream input) throws IOException {
                    return (OneWire) GeneratedMessageV3.parseWithIOException(PARSER, input);
                }

                public static OneWire parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                    return (OneWire) GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
                }

                public Builder newBuilderForType() {
                    return newBuilder();
                }

                public static Builder newBuilder() {
                    return DEFAULT_INSTANCE.toBuilder();
                }

                public static Builder newBuilder(OneWire prototype) {
                    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
                }

                public Builder toBuilder() {
                    return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder()).mergeFrom(this);
                }

                protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
                    Builder builder = new Builder(parent);
                    return builder;
                }

                public static final class Builder extends GeneratedMessageV3.Builder<Builder> implements OmnicommMessageOuterClass.OmnicommMessage.Other.OneWireOrBuilder {
                    private int bitField0_;

                    private int oneWire1_;

                    private int oneWire2_;

                    private int oneWire3_;

                    private int oneWire4_;

                    private int oneWire5_;

                    private int oneWire6_;

                    private int oneWire7_;

                    private int oneWire8_;

                    public static final Descriptors.Descriptor getDescriptor() {
                        return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_OneWire_descriptor;
                    }

                    protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
                        return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_OneWire_fieldAccessorTable.ensureFieldAccessorsInitialized(OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire.class, Builder.class);
                    }

                    private Builder() {
                        maybeForceBuilderInitialization();
                    }

                    private Builder(GeneratedMessageV3.BuilderParent parent) {
                        super(parent);
                        maybeForceBuilderInitialization();
                    }

                    private void maybeForceBuilderInitialization() {
                        if (OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire.alwaysUseFieldBuilders) ;
                    }

                    public Builder clear() {
                        super.clear();
                        this.oneWire1_ = 0;
                        this.bitField0_ &= 0xFFFFFFFE;
                        this.oneWire2_ = 0;
                        this.bitField0_ &= 0xFFFFFFFD;
                        this.oneWire3_ = 0;
                        this.bitField0_ &= 0xFFFFFFFB;
                        this.oneWire4_ = 0;
                        this.bitField0_ &= 0xFFFFFFF7;
                        this.oneWire5_ = 0;
                        this.bitField0_ &= 0xFFFFFFEF;
                        this.oneWire6_ = 0;
                        this.bitField0_ &= 0xFFFFFFDF;
                        this.oneWire7_ = 0;
                        this.bitField0_ &= 0xFFFFFFBF;
                        this.oneWire8_ = 0;
                        this.bitField0_ &= 0xFFFFFF7F;
                        return this;
                    }

                    public Descriptors.Descriptor getDescriptorForType() {
                        return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_OneWire_descriptor;
                    }

                    public OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire getDefaultInstanceForType() {
                        return OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire.getDefaultInstance();
                    }

                    public OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire build() {
                        OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire result = buildPartial();
                        if (!result.isInitialized())
                            throw newUninitializedMessageException(result);
                        return result;
                    }

                    public OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire buildPartial() {
                        OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire result = new OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire(this);
                        int from_bitField0_ = this.bitField0_;
                        int to_bitField0_ = 0;
                        if ((from_bitField0_ & 0x1) != 0) {
                            result.oneWire1_ = this.oneWire1_;
                            to_bitField0_ |= 0x1;
                        }
                        if ((from_bitField0_ & 0x2) != 0) {
                            result.oneWire2_ = this.oneWire2_;
                            to_bitField0_ |= 0x2;
                        }
                        if ((from_bitField0_ & 0x4) != 0) {
                            result.oneWire3_ = this.oneWire3_;
                            to_bitField0_ |= 0x4;
                        }
                        if ((from_bitField0_ & 0x8) != 0) {
                            result.oneWire4_ = this.oneWire4_;
                            to_bitField0_ |= 0x8;
                        }
                        if ((from_bitField0_ & 0x10) != 0) {
                            result.oneWire5_ = this.oneWire5_;
                            to_bitField0_ |= 0x10;
                        }
                        if ((from_bitField0_ & 0x20) != 0) {
                            result.oneWire6_ = this.oneWire6_;
                            to_bitField0_ |= 0x20;
                        }
                        if ((from_bitField0_ & 0x40) != 0) {
                            result.oneWire7_ = this.oneWire7_;
                            to_bitField0_ |= 0x40;
                        }
                        if ((from_bitField0_ & 0x80) != 0) {
                            result.oneWire8_ = this.oneWire8_;
                            to_bitField0_ |= 0x80;
                        }
                        result.bitField0_ = to_bitField0_;
                        onBuilt();
                        return result;
                    }

                    public Builder clone() {
                        return (Builder) super.clone();
                    }

                    public Builder setField(Descriptors.FieldDescriptor field, Object value) {
                        return (Builder) super.setField(field, value);
                    }

                    public Builder clearField(Descriptors.FieldDescriptor field) {
                        return (Builder) super.clearField(field);
                    }

                    public Builder clearOneof(Descriptors.OneofDescriptor oneof) {
                        return (Builder) super.clearOneof(oneof);
                    }

                    public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
                        return (Builder) super.setRepeatedField(field, index, value);
                    }

                    public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
                        return (Builder) super.addRepeatedField(field, value);
                    }

                    public Builder mergeFrom(Message other) {
                        if (other instanceof OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire)
                            return mergeFrom((OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire) other);
                        super.mergeFrom(other);
                        return this;
                    }

                    public Builder mergeFrom(OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire other) {
                        if (other == OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire.getDefaultInstance())
                            return this;
                        if (other.hasOneWire1())
                            setOneWire1(other.getOneWire1());
                        if (other.hasOneWire2())
                            setOneWire2(other.getOneWire2());
                        if (other.hasOneWire3())
                            setOneWire3(other.getOneWire3());
                        if (other.hasOneWire4())
                            setOneWire4(other.getOneWire4());
                        if (other.hasOneWire5())
                            setOneWire5(other.getOneWire5());
                        if (other.hasOneWire6())
                            setOneWire6(other.getOneWire6());
                        if (other.hasOneWire7())
                            setOneWire7(other.getOneWire7());
                        if (other.hasOneWire8())
                            setOneWire8(other.getOneWire8());
                        mergeUnknownFields(other.unknownFields);
                        onChanged();
                        return this;
                    }

                    public final boolean isInitialized() {
                        return true;
                    }

                    public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                        OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire parsedMessage = null;
                        try {
                            parsedMessage = (OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire) OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire.PARSER.parsePartialFrom(input, extensionRegistry);
                        } catch (InvalidProtocolBufferException e) {
                            parsedMessage = (OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire) e.getUnfinishedMessage();
                            throw e.unwrapIOException();
                        } finally {
                            if (parsedMessage != null)
                                mergeFrom(parsedMessage);
                        }
                        return this;
                    }

                    public boolean hasOneWire1() {
                        return ((this.bitField0_ & 0x1) != 0);
                    }

                    public int getOneWire1() {
                        return this.oneWire1_;
                    }

                    public Builder setOneWire1(int value) {
                        this.bitField0_ |= 0x1;
                        this.oneWire1_ = value;
                        onChanged();
                        return this;
                    }

                    public Builder clearOneWire1() {
                        this.bitField0_ &= 0xFFFFFFFE;
                        this.oneWire1_ = 0;
                        onChanged();
                        return this;
                    }

                    public boolean hasOneWire2() {
                        return ((this.bitField0_ & 0x2) != 0);
                    }

                    public int getOneWire2() {
                        return this.oneWire2_;
                    }

                    public Builder setOneWire2(int value) {
                        this.bitField0_ |= 0x2;
                        this.oneWire2_ = value;
                        onChanged();
                        return this;
                    }

                    public Builder clearOneWire2() {
                        this.bitField0_ &= 0xFFFFFFFD;
                        this.oneWire2_ = 0;
                        onChanged();
                        return this;
                    }

                    public boolean hasOneWire3() {
                        return ((this.bitField0_ & 0x4) != 0);
                    }

                    public int getOneWire3() {
                        return this.oneWire3_;
                    }

                    public Builder setOneWire3(int value) {
                        this.bitField0_ |= 0x4;
                        this.oneWire3_ = value;
                        onChanged();
                        return this;
                    }

                    public Builder clearOneWire3() {
                        this.bitField0_ &= 0xFFFFFFFB;
                        this.oneWire3_ = 0;
                        onChanged();
                        return this;
                    }

                    public boolean hasOneWire4() {
                        return ((this.bitField0_ & 0x8) != 0);
                    }

                    public int getOneWire4() {
                        return this.oneWire4_;
                    }

                    public Builder setOneWire4(int value) {
                        this.bitField0_ |= 0x8;
                        this.oneWire4_ = value;
                        onChanged();
                        return this;
                    }

                    public Builder clearOneWire4() {
                        this.bitField0_ &= 0xFFFFFFF7;
                        this.oneWire4_ = 0;
                        onChanged();
                        return this;
                    }

                    public boolean hasOneWire5() {
                        return ((this.bitField0_ & 0x10) != 0);
                    }

                    public int getOneWire5() {
                        return this.oneWire5_;
                    }

                    public Builder setOneWire5(int value) {
                        this.bitField0_ |= 0x10;
                        this.oneWire5_ = value;
                        onChanged();
                        return this;
                    }

                    public Builder clearOneWire5() {
                        this.bitField0_ &= 0xFFFFFFEF;
                        this.oneWire5_ = 0;
                        onChanged();
                        return this;
                    }

                    public boolean hasOneWire6() {
                        return ((this.bitField0_ & 0x20) != 0);
                    }

                    public int getOneWire6() {
                        return this.oneWire6_;
                    }

                    public Builder setOneWire6(int value) {
                        this.bitField0_ |= 0x20;
                        this.oneWire6_ = value;
                        onChanged();
                        return this;
                    }

                    public Builder clearOneWire6() {
                        this.bitField0_ &= 0xFFFFFFDF;
                        this.oneWire6_ = 0;
                        onChanged();
                        return this;
                    }

                    public boolean hasOneWire7() {
                        return ((this.bitField0_ & 0x40) != 0);
                    }

                    public int getOneWire7() {
                        return this.oneWire7_;
                    }

                    public Builder setOneWire7(int value) {
                        this.bitField0_ |= 0x40;
                        this.oneWire7_ = value;
                        onChanged();
                        return this;
                    }

                    public Builder clearOneWire7() {
                        this.bitField0_ &= 0xFFFFFFBF;
                        this.oneWire7_ = 0;
                        onChanged();
                        return this;
                    }

                    public boolean hasOneWire8() {
                        return ((this.bitField0_ & 0x80) != 0);
                    }

                    public int getOneWire8() {
                        return this.oneWire8_;
                    }

                    public Builder setOneWire8(int value) {
                        this.bitField0_ |= 0x80;
                        this.oneWire8_ = value;
                        onChanged();
                        return this;
                    }

                    public Builder clearOneWire8() {
                        this.bitField0_ &= 0xFFFFFF7F;
                        this.oneWire8_ = 0;
                        onChanged();
                        return this;
                    }

                    public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
                        return (Builder) super.setUnknownFields(unknownFields);
                    }

                    public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
                        return (Builder) super.mergeUnknownFields(unknownFields);
                    }
                }

                private static final OneWire DEFAULT_INSTANCE = new OneWire();

                public static OneWire getDefaultInstance() {
                    return DEFAULT_INSTANCE;
                }

                @Deprecated
                public static final Parser<OneWire> PARSER = (Parser<OneWire>) new AbstractParser<OneWire>() {
                    public OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                        return new OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire(input, extensionRegistry);
                    }
                };

                public static Parser<OneWire> parser() {
                    return PARSER;
                }

                public Parser<OneWire> getParserForType() {
                    return PARSER;
                }

                public OneWire getDefaultInstanceForType() {
                    return DEFAULT_INSTANCE;
                }
            }

            public static final class Builder extends GeneratedMessageV3.Builder<OneWire.Builder> implements OneWireOrBuilder {
                private int bitField0_;

                private int oneWire1_;

                private int oneWire2_;

                private int oneWire3_;

                private int oneWire4_;

                private int oneWire5_;

                private int oneWire6_;

                private int oneWire7_;

                private int oneWire8_;

                public static final Descriptors.Descriptor getDescriptor() {
                    return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_OneWire_descriptor;
                }

                protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
                    return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_OneWire_fieldAccessorTable.ensureFieldAccessorsInitialized(OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire.class, Builder.class);
                }

                private Builder() {
                    maybeForceBuilderInitialization();
                }

                private Builder(GeneratedMessageV3.BuilderParent parent) {
                    super(parent);
                    maybeForceBuilderInitialization();
                }

                private void maybeForceBuilderInitialization() {
                    if (OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire.alwaysUseFieldBuilders) ;
                }

                public Builder clear() {
                    super.clear();
                    this.oneWire1_ = 0;
                    this.bitField0_ &= 0xFFFFFFFE;
                    this.oneWire2_ = 0;
                    this.bitField0_ &= 0xFFFFFFFD;
                    this.oneWire3_ = 0;
                    this.bitField0_ &= 0xFFFFFFFB;
                    this.oneWire4_ = 0;
                    this.bitField0_ &= 0xFFFFFFF7;
                    this.oneWire5_ = 0;
                    this.bitField0_ &= 0xFFFFFFEF;
                    this.oneWire6_ = 0;
                    this.bitField0_ &= 0xFFFFFFDF;
                    this.oneWire7_ = 0;
                    this.bitField0_ &= 0xFFFFFFBF;
                    this.oneWire8_ = 0;
                    this.bitField0_ &= 0xFFFFFF7F;
                    return this;
                }

                public Descriptors.Descriptor getDescriptorForType() {
                    return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_OneWire_descriptor;
                }

                public OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire getDefaultInstanceForType() {
                    return OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire.getDefaultInstance();
                }

                public OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire build() {
                    OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire result = buildPartial();
                    if (!result.isInitialized())
                        throw newUninitializedMessageException(result);
                    return result;
                }

                public OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire buildPartial() {
                    OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire result = new OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire(this);
                    int from_bitField0_ = this.bitField0_;
                    int to_bitField0_ = 0;
                    if ((from_bitField0_ & 0x1) != 0) {
                        result.oneWire1_ = this.oneWire1_;
                        to_bitField0_ |= 0x1;
                    }
                    if ((from_bitField0_ & 0x2) != 0) {
                        result.oneWire2_ = this.oneWire2_;
                        to_bitField0_ |= 0x2;
                    }
                    if ((from_bitField0_ & 0x4) != 0) {
                        result.oneWire3_ = this.oneWire3_;
                        to_bitField0_ |= 0x4;
                    }
                    if ((from_bitField0_ & 0x8) != 0) {
                        result.oneWire4_ = this.oneWire4_;
                        to_bitField0_ |= 0x8;
                    }
                    if ((from_bitField0_ & 0x10) != 0) {
                        result.oneWire5_ = this.oneWire5_;
                        to_bitField0_ |= 0x10;
                    }
                    if ((from_bitField0_ & 0x20) != 0) {
                        result.oneWire6_ = this.oneWire6_;
                        to_bitField0_ |= 0x20;
                    }
                    if ((from_bitField0_ & 0x40) != 0) {
                        result.oneWire7_ = this.oneWire7_;
                        to_bitField0_ |= 0x40;
                    }
                    if ((from_bitField0_ & 0x80) != 0) {
                        result.oneWire8_ = this.oneWire8_;
                        to_bitField0_ |= 0x80;
                    }
                    result.bitField0_ = to_bitField0_;
                    onBuilt();
                    return result;
                }

                public Builder clone() {
                    return (Builder) super.clone();
                }

                public Builder setField(Descriptors.FieldDescriptor field, Object value) {
                    return (Builder) super.setField(field, value);
                }

                public Builder clearField(Descriptors.FieldDescriptor field) {
                    return (Builder) super.clearField(field);
                }

                public Builder clearOneof(Descriptors.OneofDescriptor oneof) {
                    return (Builder) super.clearOneof(oneof);
                }

                public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
                    return (Builder) super.setRepeatedField(field, index, value);
                }

                public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
                    return (Builder) super.addRepeatedField(field, value);
                }

                public Builder mergeFrom(Message other) {
                    if (other instanceof OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire)
                        return mergeFrom((OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire) other);
                    super.mergeFrom(other);
                    return this;
                }

                public Builder mergeFrom(OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire other) {
                    if (other == OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire.getDefaultInstance())
                        return this;
                    if (other.hasOneWire1())
                        setOneWire1(other.getOneWire1());
                    if (other.hasOneWire2())
                        setOneWire2(other.getOneWire2());
                    if (other.hasOneWire3())
                        setOneWire3(other.getOneWire3());
                    if (other.hasOneWire4())
                        setOneWire4(other.getOneWire4());
                    if (other.hasOneWire5())
                        setOneWire5(other.getOneWire5());
                    if (other.hasOneWire6())
                        setOneWire6(other.getOneWire6());
                    if (other.hasOneWire7())
                        setOneWire7(other.getOneWire7());
                    if (other.hasOneWire8())
                        setOneWire8(other.getOneWire8());
                    mergeUnknownFields(other.unknownFields);
                    onChanged();
                    return this;
                }

                public final boolean isInitialized() {
                    return true;
                }

                public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                    OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire parsedMessage = null;
                    try {
                        parsedMessage = (OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire) OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire.PARSER.parsePartialFrom(input, extensionRegistry);
                    } catch (InvalidProtocolBufferException e) {
                        parsedMessage = (OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire) e.getUnfinishedMessage();
                        throw e.unwrapIOException();
                    } finally {
                        if (parsedMessage != null)
                            mergeFrom(parsedMessage);
                    }
                    return this;
                }

                public boolean hasOneWire1() {
                    return ((this.bitField0_ & 0x1) != 0);
                }

                public int getOneWire1() {
                    return this.oneWire1_;
                }

                public Builder setOneWire1(int value) {
                    this.bitField0_ |= 0x1;
                    this.oneWire1_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearOneWire1() {
                    this.bitField0_ &= 0xFFFFFFFE;
                    this.oneWire1_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasOneWire2() {
                    return ((this.bitField0_ & 0x2) != 0);
                }

                public int getOneWire2() {
                    return this.oneWire2_;
                }

                public Builder setOneWire2(int value) {
                    this.bitField0_ |= 0x2;
                    this.oneWire2_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearOneWire2() {
                    this.bitField0_ &= 0xFFFFFFFD;
                    this.oneWire2_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasOneWire3() {
                    return ((this.bitField0_ & 0x4) != 0);
                }

                public int getOneWire3() {
                    return this.oneWire3_;
                }

                public Builder setOneWire3(int value) {
                    this.bitField0_ |= 0x4;
                    this.oneWire3_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearOneWire3() {
                    this.bitField0_ &= 0xFFFFFFFB;
                    this.oneWire3_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasOneWire4() {
                    return ((this.bitField0_ & 0x8) != 0);
                }

                public int getOneWire4() {
                    return this.oneWire4_;
                }

                public Builder setOneWire4(int value) {
                    this.bitField0_ |= 0x8;
                    this.oneWire4_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearOneWire4() {
                    this.bitField0_ &= 0xFFFFFFF7;
                    this.oneWire4_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasOneWire5() {
                    return ((this.bitField0_ & 0x10) != 0);
                }

                public int getOneWire5() {
                    return this.oneWire5_;
                }

                public Builder setOneWire5(int value) {
                    this.bitField0_ |= 0x10;
                    this.oneWire5_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearOneWire5() {
                    this.bitField0_ &= 0xFFFFFFEF;
                    this.oneWire5_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasOneWire6() {
                    return ((this.bitField0_ & 0x20) != 0);
                }

                public int getOneWire6() {
                    return this.oneWire6_;
                }

                public Builder setOneWire6(int value) {
                    this.bitField0_ |= 0x20;
                    this.oneWire6_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearOneWire6() {
                    this.bitField0_ &= 0xFFFFFFDF;
                    this.oneWire6_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasOneWire7() {
                    return ((this.bitField0_ & 0x40) != 0);
                }

                public int getOneWire7() {
                    return this.oneWire7_;
                }

                public Builder setOneWire7(int value) {
                    this.bitField0_ |= 0x40;
                    this.oneWire7_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearOneWire7() {
                    this.bitField0_ &= 0xFFFFFFBF;
                    this.oneWire7_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasOneWire8() {
                    return ((this.bitField0_ & 0x80) != 0);
                }

                public int getOneWire8() {
                    return this.oneWire8_;
                }

                public Builder setOneWire8(int value) {
                    this.bitField0_ |= 0x80;
                    this.oneWire8_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearOneWire8() {
                    this.bitField0_ &= 0xFFFFFF7F;
                    this.oneWire8_ = 0;
                    onChanged();
                    return this;
                }

                public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
                    return (Builder) super.setUnknownFields(unknownFields);
                }

                public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
                    return (Builder) super.mergeUnknownFields(unknownFields);
                }
            }

            public static final class Pherip extends GeneratedMessageV3 implements PheripOrBuilder {
                private static final long serialVersionUID = 0L;

                private int bitField0_;

                public static final int PASSENGERIN_FIELD_NUMBER = 1;

                private int passengerIn_;

                public static final int PASSENGEROUT_FIELD_NUMBER = 2;

                private int passengerOut_;

                public static final int DOORMASK_FIELD_NUMBER = 3;

                private int doorMask_;

                public static final int DRIVERSTATUS_FIELD_NUMBER = 4;

                private int driverStatus_;

                public static final int TPMS_FIELD_NUMBER = 5;

                private ByteString tPMS_;

                public static final int IQFREEZE_FIELD_NUMBER = 6;

                private ByteString iQFreeze_;

                private byte memoizedIsInitialized;

                private Pherip(GeneratedMessageV3.Builder<?> builder) {
                    super(builder);
                    this.memoizedIsInitialized = -1;
                }

                private Pherip() {
                    this.memoizedIsInitialized = -1;
                    this.tPMS_ = ByteString.EMPTY;
                    this.iQFreeze_ = ByteString.EMPTY;
                }

                protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) {
                    return new Pherip();
                }

                public final UnknownFieldSet getUnknownFields() {
                    return this.unknownFields;
                }

                private Pherip(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                    this();
                    if (extensionRegistry == null)
                        throw new NullPointerException();
                    int mutable_bitField0_ = 0;
                    UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
                    try {
                        boolean done = false;
                        while (!done) {
                            int tag = input.readTag();
                            switch (tag) {
                                case 0:
                                    done = true;
                                    continue;
                                case 8:
                                    this.bitField0_ |= 0x1;
                                    this.passengerIn_ = input.readUInt32();
                                    continue;
                                case 16:
                                    this.bitField0_ |= 0x2;
                                    this.passengerOut_ = input.readUInt32();
                                    continue;
                                case 24:
                                    this.bitField0_ |= 0x4;
                                    this.doorMask_ = input.readUInt32();
                                    continue;
                                case 32:
                                    this.bitField0_ |= 0x8;
                                    this.driverStatus_ = input.readUInt32();
                                    continue;
                                case 42:
                                    this.bitField0_ |= 0x10;
                                    this.tPMS_ = input.readBytes();
                                    continue;
                                case 50:
                                    this.bitField0_ |= 0x20;
                                    this.iQFreeze_ = input.readBytes();
                                    continue;
                            }
                            if (!parseUnknownField(input, unknownFields, extensionRegistry, tag))
                                done = true;
                        }
                    } catch (InvalidProtocolBufferException e) {
                        throw e.setUnfinishedMessage(this);
                    } catch (IOException e) {
                        throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this);
                    } finally {
                        this.unknownFields = unknownFields.build();
                        makeExtensionsImmutable();
                    }
                }

                public static final Descriptors.Descriptor getDescriptor() {
                    return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_Pherip_descriptor;
                }

                protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
                    return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_Pherip_fieldAccessorTable.ensureFieldAccessorsInitialized(Pherip.class, Builder.class);
                }

                public boolean hasPassengerIn() {
                    return ((this.bitField0_ & 0x1) != 0);
                }

                public int getPassengerIn() {
                    return this.passengerIn_;
                }

                public boolean hasPassengerOut() {
                    return ((this.bitField0_ & 0x2) != 0);
                }

                public int getPassengerOut() {
                    return this.passengerOut_;
                }

                public boolean hasDoorMask() {
                    return ((this.bitField0_ & 0x4) != 0);
                }

                public int getDoorMask() {
                    return this.doorMask_;
                }

                public boolean hasDriverStatus() {
                    return ((this.bitField0_ & 0x8) != 0);
                }

                public int getDriverStatus() {
                    return this.driverStatus_;
                }

                public boolean hasTPMS() {
                    return ((this.bitField0_ & 0x10) != 0);
                }

                public ByteString getTPMS() {
                    return this.tPMS_;
                }

                public boolean hasIQFreeze() {
                    return ((this.bitField0_ & 0x20) != 0);
                }

                public ByteString getIQFreeze() {
                    return this.iQFreeze_;
                }

                public final boolean isInitialized() {
                    byte isInitialized = this.memoizedIsInitialized;
                    if (isInitialized == 1)
                        return true;
                    if (isInitialized == 0)
                        return false;
                    this.memoizedIsInitialized = 1;
                    return true;
                }

                public void writeTo(CodedOutputStream output) throws IOException {
                    if ((this.bitField0_ & 0x1) != 0)
                        output.writeUInt32(1, this.passengerIn_);
                    if ((this.bitField0_ & 0x2) != 0)
                        output.writeUInt32(2, this.passengerOut_);
                    if ((this.bitField0_ & 0x4) != 0)
                        output.writeUInt32(3, this.doorMask_);
                    if ((this.bitField0_ & 0x8) != 0)
                        output.writeUInt32(4, this.driverStatus_);
                    if ((this.bitField0_ & 0x10) != 0)
                        output.writeBytes(5, this.tPMS_);
                    if ((this.bitField0_ & 0x20) != 0)
                        output.writeBytes(6, this.iQFreeze_);
                    this.unknownFields.writeTo(output);
                }

                public int getSerializedSize() {
                    int size = this.memoizedSize;
                    if (size != -1)
                        return size;
                    size = 0;
                    if ((this.bitField0_ & 0x1) != 0)
                        size += CodedOutputStream.computeUInt32Size(1, this.passengerIn_);
                    if ((this.bitField0_ & 0x2) != 0)
                        size += CodedOutputStream.computeUInt32Size(2, this.passengerOut_);
                    if ((this.bitField0_ & 0x4) != 0)
                        size += CodedOutputStream.computeUInt32Size(3, this.doorMask_);
                    if ((this.bitField0_ & 0x8) != 0)
                        size += CodedOutputStream.computeUInt32Size(4, this.driverStatus_);
                    if ((this.bitField0_ & 0x10) != 0)
                        size += CodedOutputStream.computeBytesSize(5, this.tPMS_);
                    if ((this.bitField0_ & 0x20) != 0)
                        size += CodedOutputStream.computeBytesSize(6, this.iQFreeze_);
                    size += this.unknownFields.getSerializedSize();
                    this.memoizedSize = size;
                    return size;
                }

                public boolean equals(Object obj) {
                    if (obj == this)
                        return true;
                    if (!(obj instanceof Pherip))
                        return super.equals(obj);
                    Pherip other = (Pherip) obj;
                    if (hasPassengerIn() != other.hasPassengerIn())
                        return false;
                    if (hasPassengerIn() && getPassengerIn() != other.getPassengerIn())
                        return false;
                    if (hasPassengerOut() != other.hasPassengerOut())
                        return false;
                    if (hasPassengerOut() && getPassengerOut() != other.getPassengerOut())
                        return false;
                    if (hasDoorMask() != other.hasDoorMask())
                        return false;
                    if (hasDoorMask() && getDoorMask() != other.getDoorMask())
                        return false;
                    if (hasDriverStatus() != other.hasDriverStatus())
                        return false;
                    if (hasDriverStatus() && getDriverStatus() != other.getDriverStatus())
                        return false;
                    if (hasTPMS() != other.hasTPMS())
                        return false;
                    if (hasTPMS() && !getTPMS().equals(other.getTPMS()))
                        return false;
                    if (hasIQFreeze() != other.hasIQFreeze())
                        return false;
                    if (hasIQFreeze() && !getIQFreeze().equals(other.getIQFreeze()))
                        return false;
                    if (!this.unknownFields.equals(other.unknownFields))
                        return false;
                    return true;
                }

                public int hashCode() {
                    if (this.memoizedHashCode != 0)
                        return this.memoizedHashCode;
                    int hash = 41;
                    hash = 19 * hash + getDescriptor().hashCode();
                    if (hasPassengerIn()) {
                        hash = 37 * hash + 1;
                        hash = 53 * hash + getPassengerIn();
                    }
                    if (hasPassengerOut()) {
                        hash = 37 * hash + 2;
                        hash = 53 * hash + getPassengerOut();
                    }
                    if (hasDoorMask()) {
                        hash = 37 * hash + 3;
                        hash = 53 * hash + getDoorMask();
                    }
                    if (hasDriverStatus()) {
                        hash = 37 * hash + 4;
                        hash = 53 * hash + getDriverStatus();
                    }
                    if (hasTPMS()) {
                        hash = 37 * hash + 5;
                        hash = 53 * hash + getTPMS().hashCode();
                    }
                    if (hasIQFreeze()) {
                        hash = 37 * hash + 6;
                        hash = 53 * hash + getIQFreeze().hashCode();
                    }
                    hash = 29 * hash + this.unknownFields.hashCode();
                    this.memoizedHashCode = hash;
                    return hash;
                }

                public static Pherip parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
                    return (Pherip) PARSER.parseFrom(data);
                }

                public static Pherip parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                    return (Pherip) PARSER.parseFrom(data, extensionRegistry);
                }

                public static Pherip parseFrom(ByteString data) throws InvalidProtocolBufferException {
                    return (Pherip) PARSER.parseFrom(data);
                }

                public static Pherip parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                    return (Pherip) PARSER.parseFrom(data, extensionRegistry);
                }

                public static Pherip parseFrom(byte[] data) throws InvalidProtocolBufferException {
                    return (Pherip) PARSER.parseFrom(data);
                }

                public static Pherip parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                    return (Pherip) PARSER.parseFrom(data, extensionRegistry);
                }

                public static Pherip parseFrom(InputStream input) throws IOException {
                    return (Pherip) GeneratedMessageV3.parseWithIOException(PARSER, input);
                }

                public static Pherip parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                    return (Pherip) GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
                }

                public static Pherip parseDelimitedFrom(InputStream input) throws IOException {
                    return (Pherip) GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
                }

                public static Pherip parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                    return (Pherip) GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
                }

                public static Pherip parseFrom(CodedInputStream input) throws IOException {
                    return (Pherip) GeneratedMessageV3.parseWithIOException(PARSER, input);
                }

                public static Pherip parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                    return (Pherip) GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
                }

                public Builder newBuilderForType() {
                    return newBuilder();
                }

                public static Builder newBuilder() {
                    return DEFAULT_INSTANCE.toBuilder();
                }

                public static Builder newBuilder(Pherip prototype) {
                    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
                }

                public Builder toBuilder() {
                    return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder()).mergeFrom(this);
                }

                protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
                    Builder builder = new Builder(parent);
                    return builder;
                }

                public static final class Builder extends GeneratedMessageV3.Builder<Builder> implements OmnicommMessageOuterClass.OmnicommMessage.Other.PheripOrBuilder {
                    private int bitField0_;

                    private int passengerIn_;

                    private int passengerOut_;

                    private int doorMask_;

                    private int driverStatus_;

                    private ByteString tPMS_;

                    private ByteString iQFreeze_;

                    public static final Descriptors.Descriptor getDescriptor() {
                        return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_Pherip_descriptor;
                    }

                    protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
                        return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_Pherip_fieldAccessorTable.ensureFieldAccessorsInitialized(OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip.class, Builder.class);
                    }

                    private Builder() {
                        this.tPMS_ = ByteString.EMPTY;
                        this.iQFreeze_ = ByteString.EMPTY;
                        maybeForceBuilderInitialization();
                    }

                    private Builder(GeneratedMessageV3.BuilderParent parent) {
                        super(parent);
                        this.tPMS_ = ByteString.EMPTY;
                        this.iQFreeze_ = ByteString.EMPTY;
                        maybeForceBuilderInitialization();
                    }

                    private void maybeForceBuilderInitialization() {
                        if (OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip.alwaysUseFieldBuilders) ;
                    }

                    public Builder clear() {
                        super.clear();
                        this.passengerIn_ = 0;
                        this.bitField0_ &= 0xFFFFFFFE;
                        this.passengerOut_ = 0;
                        this.bitField0_ &= 0xFFFFFFFD;
                        this.doorMask_ = 0;
                        this.bitField0_ &= 0xFFFFFFFB;
                        this.driverStatus_ = 0;
                        this.bitField0_ &= 0xFFFFFFF7;
                        this.tPMS_ = ByteString.EMPTY;
                        this.bitField0_ &= 0xFFFFFFEF;
                        this.iQFreeze_ = ByteString.EMPTY;
                        this.bitField0_ &= 0xFFFFFFDF;
                        return this;
                    }

                    public Descriptors.Descriptor getDescriptorForType() {
                        return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_Pherip_descriptor;
                    }

                    public OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip getDefaultInstanceForType() {
                        return OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip.getDefaultInstance();
                    }

                    public OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip build() {
                        OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip result = buildPartial();
                        if (!result.isInitialized())
                            throw newUninitializedMessageException(result);
                        return result;
                    }

                    public OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip buildPartial() {
                        OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip result = new OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip(this);
                        int from_bitField0_ = this.bitField0_;
                        int to_bitField0_ = 0;
                        if ((from_bitField0_ & 0x1) != 0) {
                            result.passengerIn_ = this.passengerIn_;
                            to_bitField0_ |= 0x1;
                        }
                        if ((from_bitField0_ & 0x2) != 0) {
                            result.passengerOut_ = this.passengerOut_;
                            to_bitField0_ |= 0x2;
                        }
                        if ((from_bitField0_ & 0x4) != 0) {
                            result.doorMask_ = this.doorMask_;
                            to_bitField0_ |= 0x4;
                        }
                        if ((from_bitField0_ & 0x8) != 0) {
                            result.driverStatus_ = this.driverStatus_;
                            to_bitField0_ |= 0x8;
                        }
                        if ((from_bitField0_ & 0x10) != 0)
                            to_bitField0_ |= 0x10;
                        result.tPMS_ = this.tPMS_;
                        if ((from_bitField0_ & 0x20) != 0)
                            to_bitField0_ |= 0x20;
                        result.iQFreeze_ = this.iQFreeze_;
                        result.bitField0_ = to_bitField0_;
                        onBuilt();
                        return result;
                    }

                    public Builder clone() {
                        return (Builder) super.clone();
                    }

                    public Builder setField(Descriptors.FieldDescriptor field, Object value) {
                        return (Builder) super.setField(field, value);
                    }

                    public Builder clearField(Descriptors.FieldDescriptor field) {
                        return (Builder) super.clearField(field);
                    }

                    public Builder clearOneof(Descriptors.OneofDescriptor oneof) {
                        return (Builder) super.clearOneof(oneof);
                    }

                    public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
                        return (Builder) super.setRepeatedField(field, index, value);
                    }

                    public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
                        return (Builder) super.addRepeatedField(field, value);
                    }

                    public Builder mergeFrom(Message other) {
                        if (other instanceof OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip)
                            return mergeFrom((OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip) other);
                        super.mergeFrom(other);
                        return this;
                    }

                    public Builder mergeFrom(OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip other) {
                        if (other == OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip.getDefaultInstance())
                            return this;
                        if (other.hasPassengerIn())
                            setPassengerIn(other.getPassengerIn());
                        if (other.hasPassengerOut())
                            setPassengerOut(other.getPassengerOut());
                        if (other.hasDoorMask())
                            setDoorMask(other.getDoorMask());
                        if (other.hasDriverStatus())
                            setDriverStatus(other.getDriverStatus());
                        if (other.hasTPMS())
                            setTPMS(other.getTPMS());
                        if (other.hasIQFreeze())
                            setIQFreeze(other.getIQFreeze());
                        mergeUnknownFields(other.unknownFields);
                        onChanged();
                        return this;
                    }

                    public final boolean isInitialized() {
                        return true;
                    }

                    public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                        OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip parsedMessage = null;
                        try {
                            parsedMessage = (OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip) OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip.PARSER.parsePartialFrom(input, extensionRegistry);
                        } catch (InvalidProtocolBufferException e) {
                            parsedMessage = (OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip) e.getUnfinishedMessage();
                            throw e.unwrapIOException();
                        } finally {
                            if (parsedMessage != null)
                                mergeFrom(parsedMessage);
                        }
                        return this;
                    }

                    public boolean hasPassengerIn() {
                        return ((this.bitField0_ & 0x1) != 0);
                    }

                    public int getPassengerIn() {
                        return this.passengerIn_;
                    }

                    public Builder setPassengerIn(int value) {
                        this.bitField0_ |= 0x1;
                        this.passengerIn_ = value;
                        onChanged();
                        return this;
                    }

                    public Builder clearPassengerIn() {
                        this.bitField0_ &= 0xFFFFFFFE;
                        this.passengerIn_ = 0;
                        onChanged();
                        return this;
                    }

                    public boolean hasPassengerOut() {
                        return ((this.bitField0_ & 0x2) != 0);
                    }

                    public int getPassengerOut() {
                        return this.passengerOut_;
                    }

                    public Builder setPassengerOut(int value) {
                        this.bitField0_ |= 0x2;
                        this.passengerOut_ = value;
                        onChanged();
                        return this;
                    }

                    public Builder clearPassengerOut() {
                        this.bitField0_ &= 0xFFFFFFFD;
                        this.passengerOut_ = 0;
                        onChanged();
                        return this;
                    }

                    public boolean hasDoorMask() {
                        return ((this.bitField0_ & 0x4) != 0);
                    }

                    public int getDoorMask() {
                        return this.doorMask_;
                    }

                    public Builder setDoorMask(int value) {
                        this.bitField0_ |= 0x4;
                        this.doorMask_ = value;
                        onChanged();
                        return this;
                    }

                    public Builder clearDoorMask() {
                        this.bitField0_ &= 0xFFFFFFFB;
                        this.doorMask_ = 0;
                        onChanged();
                        return this;
                    }

                    public boolean hasDriverStatus() {
                        return ((this.bitField0_ & 0x8) != 0);
                    }

                    public int getDriverStatus() {
                        return this.driverStatus_;
                    }

                    public Builder setDriverStatus(int value) {
                        this.bitField0_ |= 0x8;
                        this.driverStatus_ = value;
                        onChanged();
                        return this;
                    }

                    public Builder clearDriverStatus() {
                        this.bitField0_ &= 0xFFFFFFF7;
                        this.driverStatus_ = 0;
                        onChanged();
                        return this;
                    }

                    public boolean hasTPMS() {
                        return ((this.bitField0_ & 0x10) != 0);
                    }

                    public ByteString getTPMS() {
                        return this.tPMS_;
                    }

                    public Builder setTPMS(ByteString value) {
                        if (value == null)
                            throw new NullPointerException();
                        this.bitField0_ |= 0x10;
                        this.tPMS_ = value;
                        onChanged();
                        return this;
                    }

                    public Builder clearTPMS() {
                        this.bitField0_ &= 0xFFFFFFEF;
                        this.tPMS_ = OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip.getDefaultInstance().getTPMS();
                        onChanged();
                        return this;
                    }

                    public boolean hasIQFreeze() {
                        return ((this.bitField0_ & 0x20) != 0);
                    }

                    public ByteString getIQFreeze() {
                        return this.iQFreeze_;
                    }

                    public Builder setIQFreeze(ByteString value) {
                        if (value == null)
                            throw new NullPointerException();
                        this.bitField0_ |= 0x20;
                        this.iQFreeze_ = value;
                        onChanged();
                        return this;
                    }

                    public Builder clearIQFreeze() {
                        this.bitField0_ &= 0xFFFFFFDF;
                        this.iQFreeze_ = OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip.getDefaultInstance().getIQFreeze();
                        onChanged();
                        return this;
                    }

                    public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
                        return (Builder) super.setUnknownFields(unknownFields);
                    }

                    public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
                        return (Builder) super.mergeUnknownFields(unknownFields);
                    }
                }

                private static final Pherip DEFAULT_INSTANCE = new Pherip();

                public static Pherip getDefaultInstance() {
                    return DEFAULT_INSTANCE;
                }

                @Deprecated
                public static final Parser<Pherip> PARSER = (Parser<Pherip>) new AbstractParser<Pherip>() {
                    public OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                        return new OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip(input, extensionRegistry);
                    }
                };

                public static Parser<Pherip> parser() {
                    return PARSER;
                }

                public Parser<Pherip> getParserForType() {
                    return PARSER;
                }

                public Pherip getDefaultInstanceForType() {
                    return DEFAULT_INSTANCE;
                }
            }

            public static final class Builder extends GeneratedMessageV3.Builder<Pherip.Builder> implements PheripOrBuilder {
                private int bitField0_;

                private int passengerIn_;

                private int passengerOut_;

                private int doorMask_;

                private int driverStatus_;

                private ByteString tPMS_;

                private ByteString iQFreeze_;

                public static final Descriptors.Descriptor getDescriptor() {
                    return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_Pherip_descriptor;
                }

                protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
                    return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_Pherip_fieldAccessorTable.ensureFieldAccessorsInitialized(OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip.class, Builder.class);
                }

                private Builder() {
                    this.tPMS_ = ByteString.EMPTY;
                    this.iQFreeze_ = ByteString.EMPTY;
                    maybeForceBuilderInitialization();
                }

                private Builder(GeneratedMessageV3.BuilderParent parent) {
                    super(parent);
                    this.tPMS_ = ByteString.EMPTY;
                    this.iQFreeze_ = ByteString.EMPTY;
                    maybeForceBuilderInitialization();
                }

                private void maybeForceBuilderInitialization() {
                    if (OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip.alwaysUseFieldBuilders) ;
                }

                public Builder clear() {
                    super.clear();
                    this.passengerIn_ = 0;
                    this.bitField0_ &= 0xFFFFFFFE;
                    this.passengerOut_ = 0;
                    this.bitField0_ &= 0xFFFFFFFD;
                    this.doorMask_ = 0;
                    this.bitField0_ &= 0xFFFFFFFB;
                    this.driverStatus_ = 0;
                    this.bitField0_ &= 0xFFFFFFF7;
                    this.tPMS_ = ByteString.EMPTY;
                    this.bitField0_ &= 0xFFFFFFEF;
                    this.iQFreeze_ = ByteString.EMPTY;
                    this.bitField0_ &= 0xFFFFFFDF;
                    return this;
                }

                public Descriptors.Descriptor getDescriptorForType() {
                    return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_Pherip_descriptor;
                }

                public OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip getDefaultInstanceForType() {
                    return OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip.getDefaultInstance();
                }

                public OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip build() {
                    OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip result = buildPartial();
                    if (!result.isInitialized())
                        throw newUninitializedMessageException(result);
                    return result;
                }

                public OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip buildPartial() {
                    OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip result = new OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip(this);
                    int from_bitField0_ = this.bitField0_;
                    int to_bitField0_ = 0;
                    if ((from_bitField0_ & 0x1) != 0) {
                        result.passengerIn_ = this.passengerIn_;
                        to_bitField0_ |= 0x1;
                    }
                    if ((from_bitField0_ & 0x2) != 0) {
                        result.passengerOut_ = this.passengerOut_;
                        to_bitField0_ |= 0x2;
                    }
                    if ((from_bitField0_ & 0x4) != 0) {
                        result.doorMask_ = this.doorMask_;
                        to_bitField0_ |= 0x4;
                    }
                    if ((from_bitField0_ & 0x8) != 0) {
                        result.driverStatus_ = this.driverStatus_;
                        to_bitField0_ |= 0x8;
                    }
                    if ((from_bitField0_ & 0x10) != 0)
                        to_bitField0_ |= 0x10;
                    result.tPMS_ = this.tPMS_;
                    if ((from_bitField0_ & 0x20) != 0)
                        to_bitField0_ |= 0x20;
                    result.iQFreeze_ = this.iQFreeze_;
                    result.bitField0_ = to_bitField0_;
                    onBuilt();
                    return result;
                }

                public Builder clone() {
                    return (Builder) super.clone();
                }

                public Builder setField(Descriptors.FieldDescriptor field, Object value) {
                    return (Builder) super.setField(field, value);
                }

                public Builder clearField(Descriptors.FieldDescriptor field) {
                    return (Builder) super.clearField(field);
                }

                public Builder clearOneof(Descriptors.OneofDescriptor oneof) {
                    return (Builder) super.clearOneof(oneof);
                }

                public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
                    return (Builder) super.setRepeatedField(field, index, value);
                }

                public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
                    return (Builder) super.addRepeatedField(field, value);
                }

                public Builder mergeFrom(Message other) {
                    if (other instanceof OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip)
                        return mergeFrom((OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip) other);
                    super.mergeFrom(other);
                    return this;
                }

                public Builder mergeFrom(OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip other) {
                    if (other == OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip.getDefaultInstance())
                        return this;
                    if (other.hasPassengerIn())
                        setPassengerIn(other.getPassengerIn());
                    if (other.hasPassengerOut())
                        setPassengerOut(other.getPassengerOut());
                    if (other.hasDoorMask())
                        setDoorMask(other.getDoorMask());
                    if (other.hasDriverStatus())
                        setDriverStatus(other.getDriverStatus());
                    if (other.hasTPMS())
                        setTPMS(other.getTPMS());
                    if (other.hasIQFreeze())
                        setIQFreeze(other.getIQFreeze());
                    mergeUnknownFields(other.unknownFields);
                    onChanged();
                    return this;
                }

                public final boolean isInitialized() {
                    return true;
                }

                public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                    OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip parsedMessage = null;
                    try {
                        parsedMessage = (OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip) OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip.PARSER.parsePartialFrom(input, extensionRegistry);
                    } catch (InvalidProtocolBufferException e) {
                        parsedMessage = (OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip) e.getUnfinishedMessage();
                        throw e.unwrapIOException();
                    } finally {
                        if (parsedMessage != null)
                            mergeFrom(parsedMessage);
                    }
                    return this;
                }

                public boolean hasPassengerIn() {
                    return ((this.bitField0_ & 0x1) != 0);
                }

                public int getPassengerIn() {
                    return this.passengerIn_;
                }

                public Builder setPassengerIn(int value) {
                    this.bitField0_ |= 0x1;
                    this.passengerIn_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearPassengerIn() {
                    this.bitField0_ &= 0xFFFFFFFE;
                    this.passengerIn_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasPassengerOut() {
                    return ((this.bitField0_ & 0x2) != 0);
                }

                public int getPassengerOut() {
                    return this.passengerOut_;
                }

                public Builder setPassengerOut(int value) {
                    this.bitField0_ |= 0x2;
                    this.passengerOut_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearPassengerOut() {
                    this.bitField0_ &= 0xFFFFFFFD;
                    this.passengerOut_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasDoorMask() {
                    return ((this.bitField0_ & 0x4) != 0);
                }

                public int getDoorMask() {
                    return this.doorMask_;
                }

                public Builder setDoorMask(int value) {
                    this.bitField0_ |= 0x4;
                    this.doorMask_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearDoorMask() {
                    this.bitField0_ &= 0xFFFFFFFB;
                    this.doorMask_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasDriverStatus() {
                    return ((this.bitField0_ & 0x8) != 0);
                }

                public int getDriverStatus() {
                    return this.driverStatus_;
                }

                public Builder setDriverStatus(int value) {
                    this.bitField0_ |= 0x8;
                    this.driverStatus_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearDriverStatus() {
                    this.bitField0_ &= 0xFFFFFFF7;
                    this.driverStatus_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasTPMS() {
                    return ((this.bitField0_ & 0x10) != 0);
                }

                public ByteString getTPMS() {
                    return this.tPMS_;
                }

                public Builder setTPMS(ByteString value) {
                    if (value == null)
                        throw new NullPointerException();
                    this.bitField0_ |= 0x10;
                    this.tPMS_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearTPMS() {
                    this.bitField0_ &= 0xFFFFFFEF;
                    this.tPMS_ = OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip.getDefaultInstance().getTPMS();
                    onChanged();
                    return this;
                }

                public boolean hasIQFreeze() {
                    return ((this.bitField0_ & 0x20) != 0);
                }

                public ByteString getIQFreeze() {
                    return this.iQFreeze_;
                }

                public Builder setIQFreeze(ByteString value) {
                    if (value == null)
                        throw new NullPointerException();
                    this.bitField0_ |= 0x20;
                    this.iQFreeze_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearIQFreeze() {
                    this.bitField0_ &= 0xFFFFFFDF;
                    this.iQFreeze_ = OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip.getDefaultInstance().getIQFreeze();
                    onChanged();
                    return this;
                }

                public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
                    return (Builder) super.setUnknownFields(unknownFields);
                }

                public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
                    return (Builder) super.mergeUnknownFields(unknownFields);
                }
            }

            public static final class ExCAN extends GeneratedMessageV3 implements ExCANOrBuilder {
                private static final long serialVersionUID = 0L;

                private int bitField0_;

                public static final int SPNID_FIELD_NUMBER = 1;

                private Internal.IntList sPNid_;

                public static final int SPNVAL_FIELD_NUMBER = 2;

                private Internal.IntList sPNval_;

                public static final int ADR64TEREX_FIELD_NUMBER = 10;

                private long adr64TEREX_;

                public static final int ADR65TEREX_FIELD_NUMBER = 11;

                private long adr65TEREX_;

                public static final int ADR66TEREX_FIELD_NUMBER = 12;

                private long adr66TEREX_;

                public static final int ADR67TEREX_FIELD_NUMBER = 13;

                private long adr67TEREX_;

                public static final int ADR11TEREX_FIELD_NUMBER = 14;

                private Internal.LongList adr11TEREX_;

                public static final int ADR69TEREX_FIELD_NUMBER = 15;

                private long adr69TEREX_;

                private byte memoizedIsInitialized;

                private ExCAN(GeneratedMessageV3.Builder<?> builder) {
                    super(builder);
                    this.memoizedIsInitialized = -1;
                }

                private ExCAN() {
                    this.memoizedIsInitialized = -1;
                    this.sPNid_ = emptyIntList();
                    this.sPNval_ = emptyIntList();
                    this.adr11TEREX_ = emptyLongList();
                }

                protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) {
                    return new ExCAN();
                }

                public final UnknownFieldSet getUnknownFields() {
                    return this.unknownFields;
                }

                private ExCAN(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                    this();
                    if (extensionRegistry == null)
                        throw new NullPointerException();
                    int mutable_bitField0_ = 0;
                    UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
                    try {
                        boolean done = false;
                        while (!done) {
                            int length, limit, tag = input.readTag();
                            switch (tag) {
                                case 0:
                                    done = true;
                                    continue;
                                case 8:
                                    if ((mutable_bitField0_ & 0x1) == 0) {
                                        this.sPNid_ = newIntList();
                                        mutable_bitField0_ |= 0x1;
                                    }
                                    this.sPNid_.addInt(input.readUInt32());
                                    continue;
                                case 10:
                                    length = input.readRawVarint32();
                                    limit = input.pushLimit(length);
                                    if ((mutable_bitField0_ & 0x1) == 0 && input.getBytesUntilLimit() > 0) {
                                        this.sPNid_ = newIntList();
                                        mutable_bitField0_ |= 0x1;
                                    }
                                    while (input.getBytesUntilLimit() > 0)
                                        this.sPNid_.addInt(input.readUInt32());
                                    input.popLimit(limit);
                                    continue;
                                case 16:
                                    if ((mutable_bitField0_ & 0x2) == 0) {
                                        this.sPNval_ = newIntList();
                                        mutable_bitField0_ |= 0x2;
                                    }
                                    this.sPNval_.addInt(input.readUInt32());
                                    continue;
                                case 18:
                                    length = input.readRawVarint32();
                                    limit = input.pushLimit(length);
                                    if ((mutable_bitField0_ & 0x2) == 0 && input.getBytesUntilLimit() > 0) {
                                        this.sPNval_ = newIntList();
                                        mutable_bitField0_ |= 0x2;
                                    }
                                    while (input.getBytesUntilLimit() > 0)
                                        this.sPNval_.addInt(input.readUInt32());
                                    input.popLimit(limit);
                                    continue;
                                case 80:
                                    this.bitField0_ |= 0x1;
                                    this.adr64TEREX_ = input.readUInt64();
                                    continue;
                                case 88:
                                    this.bitField0_ |= 0x2;
                                    this.adr65TEREX_ = input.readUInt64();
                                    continue;
                                case 96:
                                    this.bitField0_ |= 0x4;
                                    this.adr66TEREX_ = input.readUInt64();
                                    continue;
                                case 104:
                                    this.bitField0_ |= 0x8;
                                    this.adr67TEREX_ = input.readUInt64();
                                    continue;
                                case 112:
                                    if ((mutable_bitField0_ & 0x40) == 0) {
                                        this.adr11TEREX_ = newLongList();
                                        mutable_bitField0_ |= 0x40;
                                    }
                                    this.adr11TEREX_.addLong(input.readUInt64());
                                    continue;
                                case 114:
                                    length = input.readRawVarint32();
                                    limit = input.pushLimit(length);
                                    if ((mutable_bitField0_ & 0x40) == 0 && input.getBytesUntilLimit() > 0) {
                                        this.adr11TEREX_ = newLongList();
                                        mutable_bitField0_ |= 0x40;
                                    }
                                    while (input.getBytesUntilLimit() > 0)
                                        this.adr11TEREX_.addLong(input.readUInt64());
                                    input.popLimit(limit);
                                    continue;
                                case 120:
                                    this.bitField0_ |= 0x10;
                                    this.adr69TEREX_ = input.readUInt64();
                                    continue;
                            }
                            if (!parseUnknownField(input, unknownFields, extensionRegistry, tag))
                                done = true;
                        }
                    } catch (InvalidProtocolBufferException e) {
                        throw e.setUnfinishedMessage(this);
                    } catch (IOException e) {
                        throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this);
                    } finally {
                        if ((mutable_bitField0_ & 0x1) != 0)
                            this.sPNid_.makeImmutable();
                        if ((mutable_bitField0_ & 0x2) != 0)
                            this.sPNval_.makeImmutable();
                        if ((mutable_bitField0_ & 0x40) != 0)
                            this.adr11TEREX_.makeImmutable();
                        this.unknownFields = unknownFields.build();
                        makeExtensionsImmutable();
                    }
                }

                public static final Descriptors.Descriptor getDescriptor() {
                    return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_ExCAN_descriptor;
                }

                protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
                    return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_ExCAN_fieldAccessorTable.ensureFieldAccessorsInitialized(ExCAN.class, Builder.class);
                }

                public List<Integer> getSPNidList() {
                    return (List<Integer>) this.sPNid_;
                }

                public int getSPNidCount() {
                    return this.sPNid_.size();
                }

                public int getSPNid(int index) {
                    return this.sPNid_.getInt(index);
                }

                public List<Integer> getSPNvalList() {
                    return (List<Integer>) this.sPNval_;
                }

                public int getSPNvalCount() {
                    return this.sPNval_.size();
                }

                public int getSPNval(int index) {
                    return this.sPNval_.getInt(index);
                }

                public boolean hasAdr64TEREX() {
                    return ((this.bitField0_ & 0x1) != 0);
                }

                public long getAdr64TEREX() {
                    return this.adr64TEREX_;
                }

                public boolean hasAdr65TEREX() {
                    return ((this.bitField0_ & 0x2) != 0);
                }

                public long getAdr65TEREX() {
                    return this.adr65TEREX_;
                }

                public boolean hasAdr66TEREX() {
                    return ((this.bitField0_ & 0x4) != 0);
                }

                public long getAdr66TEREX() {
                    return this.adr66TEREX_;
                }

                public boolean hasAdr67TEREX() {
                    return ((this.bitField0_ & 0x8) != 0);
                }

                public long getAdr67TEREX() {
                    return this.adr67TEREX_;
                }

                public List<Long> getAdr11TEREXList() {
                    return (List<Long>) this.adr11TEREX_;
                }

                public int getAdr11TEREXCount() {
                    return this.adr11TEREX_.size();
                }

                public long getAdr11TEREX(int index) {
                    return this.adr11TEREX_.getLong(index);
                }

                public boolean hasAdr69TEREX() {
                    return ((this.bitField0_ & 0x10) != 0);
                }

                public long getAdr69TEREX() {
                    return this.adr69TEREX_;
                }

                public final boolean isInitialized() {
                    byte isInitialized = this.memoizedIsInitialized;
                    if (isInitialized == 1)
                        return true;
                    if (isInitialized == 0)
                        return false;
                    this.memoizedIsInitialized = 1;
                    return true;
                }

                public void writeTo(CodedOutputStream output) throws IOException {
                    int i;
                    for (i = 0; i < this.sPNid_.size(); i++)
                        output.writeUInt32(1, this.sPNid_.getInt(i));
                    for (i = 0; i < this.sPNval_.size(); i++)
                        output.writeUInt32(2, this.sPNval_.getInt(i));
                    if ((this.bitField0_ & 0x1) != 0)
                        output.writeUInt64(10, this.adr64TEREX_);
                    if ((this.bitField0_ & 0x2) != 0)
                        output.writeUInt64(11, this.adr65TEREX_);
                    if ((this.bitField0_ & 0x4) != 0)
                        output.writeUInt64(12, this.adr66TEREX_);
                    if ((this.bitField0_ & 0x8) != 0)
                        output.writeUInt64(13, this.adr67TEREX_);
                    for (i = 0; i < this.adr11TEREX_.size(); i++)
                        output.writeUInt64(14, this.adr11TEREX_.getLong(i));
                    if ((this.bitField0_ & 0x10) != 0)
                        output.writeUInt64(15, this.adr69TEREX_);
                    this.unknownFields.writeTo(output);
                }

                public int getSerializedSize() {
                    int size = this.memoizedSize;
                    if (size != -1)
                        return size;
                    size = 0;
                    int dataSize = 0;
                    int i;
                    for (i = 0; i < this.sPNid_.size(); i++)
                        dataSize += CodedOutputStream.computeUInt32SizeNoTag(this.sPNid_.getInt(i));
                    size += dataSize;
                    size += 1 * getSPNidList().size();
                    dataSize = 0;
                    for (i = 0; i < this.sPNval_.size(); i++)
                        dataSize += CodedOutputStream.computeUInt32SizeNoTag(this.sPNval_.getInt(i));
                    size += dataSize;
                    size += 1 * getSPNvalList().size();
                    if ((this.bitField0_ & 0x1) != 0)
                        size += CodedOutputStream.computeUInt64Size(10, this.adr64TEREX_);
                    if ((this.bitField0_ & 0x2) != 0)
                        size += CodedOutputStream.computeUInt64Size(11, this.adr65TEREX_);
                    if ((this.bitField0_ & 0x4) != 0)
                        size += CodedOutputStream.computeUInt64Size(12, this.adr66TEREX_);
                    if ((this.bitField0_ & 0x8) != 0)
                        size += CodedOutputStream.computeUInt64Size(13, this.adr67TEREX_);
                    dataSize = 0;
                    for (i = 0; i < this.adr11TEREX_.size(); i++)
                        dataSize += CodedOutputStream.computeUInt64SizeNoTag(this.adr11TEREX_.getLong(i));
                    size += dataSize;
                    size += 1 * getAdr11TEREXList().size();
                    if ((this.bitField0_ & 0x10) != 0)
                        size += CodedOutputStream.computeUInt64Size(15, this.adr69TEREX_);
                    size += this.unknownFields.getSerializedSize();
                    this.memoizedSize = size;
                    return size;
                }

                public boolean equals(Object obj) {
                    if (obj == this)
                        return true;
                    if (!(obj instanceof ExCAN))
                        return super.equals(obj);
                    ExCAN other = (ExCAN) obj;
                    if (!getSPNidList().equals(other.getSPNidList()))
                        return false;
                    if (!getSPNvalList().equals(other.getSPNvalList()))
                        return false;
                    if (hasAdr64TEREX() != other.hasAdr64TEREX())
                        return false;
                    if (hasAdr64TEREX() && getAdr64TEREX() != other.getAdr64TEREX())
                        return false;
                    if (hasAdr65TEREX() != other.hasAdr65TEREX())
                        return false;
                    if (hasAdr65TEREX() && getAdr65TEREX() != other.getAdr65TEREX())
                        return false;
                    if (hasAdr66TEREX() != other.hasAdr66TEREX())
                        return false;
                    if (hasAdr66TEREX() && getAdr66TEREX() != other.getAdr66TEREX())
                        return false;
                    if (hasAdr67TEREX() != other.hasAdr67TEREX())
                        return false;
                    if (hasAdr67TEREX() && getAdr67TEREX() != other.getAdr67TEREX())
                        return false;
                    if (!getAdr11TEREXList().equals(other.getAdr11TEREXList()))
                        return false;
                    if (hasAdr69TEREX() != other.hasAdr69TEREX())
                        return false;
                    if (hasAdr69TEREX() && getAdr69TEREX() != other.getAdr69TEREX())
                        return false;
                    if (!this.unknownFields.equals(other.unknownFields))
                        return false;
                    return true;
                }

                public int hashCode() {
                    if (this.memoizedHashCode != 0)
                        return this.memoizedHashCode;
                    int hash = 41;
                    hash = 19 * hash + getDescriptor().hashCode();
                    if (getSPNidCount() > 0) {
                        hash = 37 * hash + 1;
                        hash = 53 * hash + getSPNidList().hashCode();
                    }
                    if (getSPNvalCount() > 0) {
                        hash = 37 * hash + 2;
                        hash = 53 * hash + getSPNvalList().hashCode();
                    }
                    if (hasAdr64TEREX()) {
                        hash = 37 * hash + 10;
                        hash = 53 * hash + Internal.hashLong(getAdr64TEREX());
                    }
                    if (hasAdr65TEREX()) {
                        hash = 37 * hash + 11;
                        hash = 53 * hash + Internal.hashLong(getAdr65TEREX());
                    }
                    if (hasAdr66TEREX()) {
                        hash = 37 * hash + 12;
                        hash = 53 * hash + Internal.hashLong(getAdr66TEREX());
                    }
                    if (hasAdr67TEREX()) {
                        hash = 37 * hash + 13;
                        hash = 53 * hash + Internal.hashLong(getAdr67TEREX());
                    }
                    if (getAdr11TEREXCount() > 0) {
                        hash = 37 * hash + 14;
                        hash = 53 * hash + getAdr11TEREXList().hashCode();
                    }
                    if (hasAdr69TEREX()) {
                        hash = 37 * hash + 15;
                        hash = 53 * hash + Internal.hashLong(getAdr69TEREX());
                    }
                    hash = 29 * hash + this.unknownFields.hashCode();
                    this.memoizedHashCode = hash;
                    return hash;
                }

                public static ExCAN parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
                    return (ExCAN) PARSER.parseFrom(data);
                }

                public static ExCAN parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                    return (ExCAN) PARSER.parseFrom(data, extensionRegistry);
                }

                public static ExCAN parseFrom(ByteString data) throws InvalidProtocolBufferException {
                    return (ExCAN) PARSER.parseFrom(data);
                }

                public static ExCAN parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                    return (ExCAN) PARSER.parseFrom(data, extensionRegistry);
                }

                public static ExCAN parseFrom(byte[] data) throws InvalidProtocolBufferException {
                    return (ExCAN) PARSER.parseFrom(data);
                }

                public static ExCAN parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                    return (ExCAN) PARSER.parseFrom(data, extensionRegistry);
                }

                public static ExCAN parseFrom(InputStream input) throws IOException {
                    return (ExCAN) GeneratedMessageV3.parseWithIOException(PARSER, input);
                }

                public static ExCAN parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                    return (ExCAN) GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
                }

                public static ExCAN parseDelimitedFrom(InputStream input) throws IOException {
                    return (ExCAN) GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
                }

                public static ExCAN parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                    return (ExCAN) GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
                }

                public static ExCAN parseFrom(CodedInputStream input) throws IOException {
                    return (ExCAN) GeneratedMessageV3.parseWithIOException(PARSER, input);
                }

                public static ExCAN parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                    return (ExCAN) GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
                }

                public Builder newBuilderForType() {
                    return newBuilder();
                }

                public static Builder newBuilder() {
                    return DEFAULT_INSTANCE.toBuilder();
                }

                public static Builder newBuilder(ExCAN prototype) {
                    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
                }

                public Builder toBuilder() {
                    return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder()).mergeFrom(this);
                }

                protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
                    Builder builder = new Builder(parent);
                    return builder;
                }

                public static final class Builder extends GeneratedMessageV3.Builder<Builder> implements OmnicommMessageOuterClass.OmnicommMessage.Other.ExCANOrBuilder {
                    private int bitField0_;

                    private Internal.IntList sPNid_;

                    private Internal.IntList sPNval_;

                    private long adr64TEREX_;

                    private long adr65TEREX_;

                    private long adr66TEREX_;

                    private long adr67TEREX_;

                    private Internal.LongList adr11TEREX_;

                    private long adr69TEREX_;

                    public static final Descriptors.Descriptor getDescriptor() {
                        return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_ExCAN_descriptor;
                    }

                    protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
                        return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_ExCAN_fieldAccessorTable.ensureFieldAccessorsInitialized(OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN.class, Builder.class);
                    }

                    private Builder() {
                        this.sPNid_ = OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN.emptyIntList();
                        this.sPNval_ = OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN.emptyIntList();
                        this.adr11TEREX_ = OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN.emptyLongList();
                        maybeForceBuilderInitialization();
                    }

                    private Builder(GeneratedMessageV3.BuilderParent parent) {
                        super(parent);
                        this.sPNid_ = OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN.emptyIntList();
                        this.sPNval_ = OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN.emptyIntList();
                        this.adr11TEREX_ = OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN.emptyLongList();
                        maybeForceBuilderInitialization();
                    }

                    private void maybeForceBuilderInitialization() {
                        if (OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN.alwaysUseFieldBuilders) ;
                    }

                    public Builder clear() {
                        super.clear();
                        this.sPNid_ = OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN.emptyIntList();
                        this.bitField0_ &= 0xFFFFFFFE;
                        this.sPNval_ = OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN.emptyIntList();
                        this.bitField0_ &= 0xFFFFFFFD;
                        this.adr64TEREX_ = 0L;
                        this.bitField0_ &= 0xFFFFFFFB;
                        this.adr65TEREX_ = 0L;
                        this.bitField0_ &= 0xFFFFFFF7;
                        this.adr66TEREX_ = 0L;
                        this.bitField0_ &= 0xFFFFFFEF;
                        this.adr67TEREX_ = 0L;
                        this.bitField0_ &= 0xFFFFFFDF;
                        this.adr11TEREX_ = OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN.emptyLongList();
                        this.bitField0_ &= 0xFFFFFFBF;
                        this.adr69TEREX_ = 0L;
                        this.bitField0_ &= 0xFFFFFF7F;
                        return this;
                    }

                    public Descriptors.Descriptor getDescriptorForType() {
                        return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_ExCAN_descriptor;
                    }

                    public OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN getDefaultInstanceForType() {
                        return OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN.getDefaultInstance();
                    }

                    public OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN build() {
                        OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN result = buildPartial();
                        if (!result.isInitialized())
                            throw newUninitializedMessageException(result);
                        return result;
                    }

                    public OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN buildPartial() {
                        OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN result = new OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN(this);
                        int from_bitField0_ = this.bitField0_;
                        int to_bitField0_ = 0;
                        if ((this.bitField0_ & 0x1) != 0) {
                            this.sPNid_.makeImmutable();
                            this.bitField0_ &= 0xFFFFFFFE;
                        }
                        result.sPNid_ = this.sPNid_;
                        if ((this.bitField0_ & 0x2) != 0) {
                            this.sPNval_.makeImmutable();
                            this.bitField0_ &= 0xFFFFFFFD;
                        }
                        result.sPNval_ = this.sPNval_;
                        if ((from_bitField0_ & 0x4) != 0) {
                            result.adr64TEREX_ = this.adr64TEREX_;
                            to_bitField0_ |= 0x1;
                        }
                        if ((from_bitField0_ & 0x8) != 0) {
                            result.adr65TEREX_ = this.adr65TEREX_;
                            to_bitField0_ |= 0x2;
                        }
                        if ((from_bitField0_ & 0x10) != 0) {
                            result.adr66TEREX_ = this.adr66TEREX_;
                            to_bitField0_ |= 0x4;
                        }
                        if ((from_bitField0_ & 0x20) != 0) {
                            result.adr67TEREX_ = this.adr67TEREX_;
                            to_bitField0_ |= 0x8;
                        }
                        if ((this.bitField0_ & 0x40) != 0) {
                            this.adr11TEREX_.makeImmutable();
                            this.bitField0_ &= 0xFFFFFFBF;
                        }
                        result.adr11TEREX_ = this.adr11TEREX_;
                        if ((from_bitField0_ & 0x80) != 0) {
                            result.adr69TEREX_ = this.adr69TEREX_;
                            to_bitField0_ |= 0x10;
                        }
                        result.bitField0_ = to_bitField0_;
                        onBuilt();
                        return result;
                    }

                    public Builder clone() {
                        return (Builder) super.clone();
                    }

                    public Builder setField(Descriptors.FieldDescriptor field, Object value) {
                        return (Builder) super.setField(field, value);
                    }

                    public Builder clearField(Descriptors.FieldDescriptor field) {
                        return (Builder) super.clearField(field);
                    }

                    public Builder clearOneof(Descriptors.OneofDescriptor oneof) {
                        return (Builder) super.clearOneof(oneof);
                    }

                    public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
                        return (Builder) super.setRepeatedField(field, index, value);
                    }

                    public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
                        return (Builder) super.addRepeatedField(field, value);
                    }

                    public Builder mergeFrom(Message other) {
                        if (other instanceof OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN)
                            return mergeFrom((OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN) other);
                        super.mergeFrom(other);
                        return this;
                    }

                    public Builder mergeFrom(OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN other) {
                        if (other == OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN.getDefaultInstance())
                            return this;
                        if (!other.sPNid_.isEmpty()) {
                            if (this.sPNid_.isEmpty()) {
                                this.sPNid_ = other.sPNid_;
                                this.bitField0_ &= 0xFFFFFFFE;
                            } else {
                                ensureSPNidIsMutable();
                                this.sPNid_.addAll((Collection) other.sPNid_);
                            }
                            onChanged();
                        }
                        if (!other.sPNval_.isEmpty()) {
                            if (this.sPNval_.isEmpty()) {
                                this.sPNval_ = other.sPNval_;
                                this.bitField0_ &= 0xFFFFFFFD;
                            } else {
                                ensureSPNvalIsMutable();
                                this.sPNval_.addAll((Collection) other.sPNval_);
                            }
                            onChanged();
                        }
                        if (other.hasAdr64TEREX())
                            setAdr64TEREX(other.getAdr64TEREX());
                        if (other.hasAdr65TEREX())
                            setAdr65TEREX(other.getAdr65TEREX());
                        if (other.hasAdr66TEREX())
                            setAdr66TEREX(other.getAdr66TEREX());
                        if (other.hasAdr67TEREX())
                            setAdr67TEREX(other.getAdr67TEREX());
                        if (!other.adr11TEREX_.isEmpty()) {
                            if (this.adr11TEREX_.isEmpty()) {
                                this.adr11TEREX_ = other.adr11TEREX_;
                                this.bitField0_ &= 0xFFFFFFBF;
                            } else {
                                ensureAdr11TEREXIsMutable();
                                this.adr11TEREX_.addAll((Collection) other.adr11TEREX_);
                            }
                            onChanged();
                        }
                        if (other.hasAdr69TEREX())
                            setAdr69TEREX(other.getAdr69TEREX());
                        mergeUnknownFields(other.unknownFields);
                        onChanged();
                        return this;
                    }

                    public final boolean isInitialized() {
                        return true;
                    }

                    public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                        OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN parsedMessage = null;
                        try {
                            parsedMessage = (OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN) OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN.PARSER.parsePartialFrom(input, extensionRegistry);
                        } catch (InvalidProtocolBufferException e) {
                            parsedMessage = (OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN) e.getUnfinishedMessage();
                            throw e.unwrapIOException();
                        } finally {
                            if (parsedMessage != null)
                                mergeFrom(parsedMessage);
                        }
                        return this;
                    }

                    private void ensureSPNidIsMutable() {
                        if ((this.bitField0_ & 0x1) == 0) {
                            this.sPNid_ = OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN.mutableCopy(this.sPNid_);
                            this.bitField0_ |= 0x1;
                        }
                    }

                    public List<Integer> getSPNidList() {
                        return ((this.bitField0_ & 0x1) != 0) ? Collections.<Integer>unmodifiableList((List<? extends Integer>) this.sPNid_) : (List<Integer>) this.sPNid_;
                    }

                    public int getSPNidCount() {
                        return this.sPNid_.size();
                    }

                    public int getSPNid(int index) {
                        return this.sPNid_.getInt(index);
                    }

                    public Builder setSPNid(int index, int value) {
                        ensureSPNidIsMutable();
                        this.sPNid_.setInt(index, value);
                        onChanged();
                        return this;
                    }

                    public Builder addSPNid(int value) {
                        ensureSPNidIsMutable();
                        this.sPNid_.addInt(value);
                        onChanged();
                        return this;
                    }

                    public Builder addAllSPNid(Iterable<? extends Integer> values) {
                        ensureSPNidIsMutable();
                        AbstractMessageLite.Builder.addAll(values, (List) this.sPNid_);
                        onChanged();
                        return this;
                    }

                    public Builder clearSPNid() {
                        this.sPNid_ = OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN.emptyIntList();
                        this.bitField0_ &= 0xFFFFFFFE;
                        onChanged();
                        return this;
                    }

                    private void ensureSPNvalIsMutable() {
                        if ((this.bitField0_ & 0x2) == 0) {
                            this.sPNval_ = OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN.mutableCopy(this.sPNval_);
                            this.bitField0_ |= 0x2;
                        }
                    }

                    public List<Integer> getSPNvalList() {
                        return ((this.bitField0_ & 0x2) != 0) ? Collections.<Integer>unmodifiableList((List<? extends Integer>) this.sPNval_) : (List<Integer>) this.sPNval_;
                    }

                    public int getSPNvalCount() {
                        return this.sPNval_.size();
                    }

                    public int getSPNval(int index) {
                        return this.sPNval_.getInt(index);
                    }

                    public Builder setSPNval(int index, int value) {
                        ensureSPNvalIsMutable();
                        this.sPNval_.setInt(index, value);
                        onChanged();
                        return this;
                    }

                    public Builder addSPNval(int value) {
                        ensureSPNvalIsMutable();
                        this.sPNval_.addInt(value);
                        onChanged();
                        return this;
                    }

                    public Builder addAllSPNval(Iterable<? extends Integer> values) {
                        ensureSPNvalIsMutable();
                        AbstractMessageLite.Builder.addAll(values, (List) this.sPNval_);
                        onChanged();
                        return this;
                    }

                    public Builder clearSPNval() {
                        this.sPNval_ = OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN.emptyIntList();
                        this.bitField0_ &= 0xFFFFFFFD;
                        onChanged();
                        return this;
                    }

                    public boolean hasAdr64TEREX() {
                        return ((this.bitField0_ & 0x4) != 0);
                    }

                    public long getAdr64TEREX() {
                        return this.adr64TEREX_;
                    }

                    public Builder setAdr64TEREX(long value) {
                        this.bitField0_ |= 0x4;
                        this.adr64TEREX_ = value;
                        onChanged();
                        return this;
                    }

                    public Builder clearAdr64TEREX() {
                        this.bitField0_ &= 0xFFFFFFFB;
                        this.adr64TEREX_ = 0L;
                        onChanged();
                        return this;
                    }

                    public boolean hasAdr65TEREX() {
                        return ((this.bitField0_ & 0x8) != 0);
                    }

                    public long getAdr65TEREX() {
                        return this.adr65TEREX_;
                    }

                    public Builder setAdr65TEREX(long value) {
                        this.bitField0_ |= 0x8;
                        this.adr65TEREX_ = value;
                        onChanged();
                        return this;
                    }

                    public Builder clearAdr65TEREX() {
                        this.bitField0_ &= 0xFFFFFFF7;
                        this.adr65TEREX_ = 0L;
                        onChanged();
                        return this;
                    }

                    public boolean hasAdr66TEREX() {
                        return ((this.bitField0_ & 0x10) != 0);
                    }

                    public long getAdr66TEREX() {
                        return this.adr66TEREX_;
                    }

                    public Builder setAdr66TEREX(long value) {
                        this.bitField0_ |= 0x10;
                        this.adr66TEREX_ = value;
                        onChanged();
                        return this;
                    }

                    public Builder clearAdr66TEREX() {
                        this.bitField0_ &= 0xFFFFFFEF;
                        this.adr66TEREX_ = 0L;
                        onChanged();
                        return this;
                    }

                    public boolean hasAdr67TEREX() {
                        return ((this.bitField0_ & 0x20) != 0);
                    }

                    public long getAdr67TEREX() {
                        return this.adr67TEREX_;
                    }

                    public Builder setAdr67TEREX(long value) {
                        this.bitField0_ |= 0x20;
                        this.adr67TEREX_ = value;
                        onChanged();
                        return this;
                    }

                    public Builder clearAdr67TEREX() {
                        this.bitField0_ &= 0xFFFFFFDF;
                        this.adr67TEREX_ = 0L;
                        onChanged();
                        return this;
                    }

                    private void ensureAdr11TEREXIsMutable() {
                        if ((this.bitField0_ & 0x40) == 0) {
                            this.adr11TEREX_ = OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN.mutableCopy(this.adr11TEREX_);
                            this.bitField0_ |= 0x40;
                        }
                    }

                    public List<Long> getAdr11TEREXList() {
                        return ((this.bitField0_ & 0x40) != 0) ? Collections.<Long>unmodifiableList((List<? extends Long>) this.adr11TEREX_) : (List<Long>) this.adr11TEREX_;
                    }

                    public int getAdr11TEREXCount() {
                        return this.adr11TEREX_.size();
                    }

                    public long getAdr11TEREX(int index) {
                        return this.adr11TEREX_.getLong(index);
                    }

                    public Builder setAdr11TEREX(int index, long value) {
                        ensureAdr11TEREXIsMutable();
                        this.adr11TEREX_.setLong(index, value);
                        onChanged();
                        return this;
                    }

                    public Builder addAdr11TEREX(long value) {
                        ensureAdr11TEREXIsMutable();
                        this.adr11TEREX_.addLong(value);
                        onChanged();
                        return this;
                    }

                    public Builder addAllAdr11TEREX(Iterable<? extends Long> values) {
                        ensureAdr11TEREXIsMutable();
                        AbstractMessageLite.Builder.addAll(values, (List) this.adr11TEREX_);
                        onChanged();
                        return this;
                    }

                    public Builder clearAdr11TEREX() {
                        this.adr11TEREX_ = OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN.emptyLongList();
                        this.bitField0_ &= 0xFFFFFFBF;
                        onChanged();
                        return this;
                    }

                    public boolean hasAdr69TEREX() {
                        return ((this.bitField0_ & 0x80) != 0);
                    }

                    public long getAdr69TEREX() {
                        return this.adr69TEREX_;
                    }

                    public Builder setAdr69TEREX(long value) {
                        this.bitField0_ |= 0x80;
                        this.adr69TEREX_ = value;
                        onChanged();
                        return this;
                    }

                    public Builder clearAdr69TEREX() {
                        this.bitField0_ &= 0xFFFFFF7F;
                        this.adr69TEREX_ = 0L;
                        onChanged();
                        return this;
                    }

                    public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
                        return (Builder) super.setUnknownFields(unknownFields);
                    }

                    public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
                        return (Builder) super.mergeUnknownFields(unknownFields);
                    }
                }

                private static final ExCAN DEFAULT_INSTANCE = new ExCAN();

                public static ExCAN getDefaultInstance() {
                    return DEFAULT_INSTANCE;
                }

                @Deprecated
                public static final Parser<ExCAN> PARSER = (Parser<ExCAN>) new AbstractParser<ExCAN>() {
                    public OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                        return new OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN(input, extensionRegistry);
                    }
                };

                public static Parser<ExCAN> parser() {
                    return PARSER;
                }

                public Parser<ExCAN> getParserForType() {
                    return PARSER;
                }

                public ExCAN getDefaultInstanceForType() {
                    return DEFAULT_INSTANCE;
                }
            }

            public static final class Builder extends GeneratedMessageV3.Builder<ExCAN.Builder> implements ExCANOrBuilder {
                private int bitField0_;

                private Internal.IntList sPNid_;

                private Internal.IntList sPNval_;

                private long adr64TEREX_;

                private long adr65TEREX_;

                private long adr66TEREX_;

                private long adr67TEREX_;

                private Internal.LongList adr11TEREX_;

                private long adr69TEREX_;

                public static final Descriptors.Descriptor getDescriptor() {
                    return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_ExCAN_descriptor;
                }

                protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
                    return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_ExCAN_fieldAccessorTable.ensureFieldAccessorsInitialized(OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN.class, Builder.class);
                }

                private Builder() {
                    this.sPNid_ = OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN.emptyIntList();
                    this.sPNval_ = OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN.emptyIntList();
                    this.adr11TEREX_ = OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN.emptyLongList();
                    maybeForceBuilderInitialization();
                }

                private Builder(GeneratedMessageV3.BuilderParent parent) {
                    super(parent);
                    this.sPNid_ = OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN.emptyIntList();
                    this.sPNval_ = OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN.emptyIntList();
                    this.adr11TEREX_ = OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN.emptyLongList();
                    maybeForceBuilderInitialization();
                }

                private void maybeForceBuilderInitialization() {
                    if (OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN.alwaysUseFieldBuilders) ;
                }

                public Builder clear() {
                    super.clear();
                    this.sPNid_ = OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN.emptyIntList();
                    this.bitField0_ &= 0xFFFFFFFE;
                    this.sPNval_ = OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN.emptyIntList();
                    this.bitField0_ &= 0xFFFFFFFD;
                    this.adr64TEREX_ = 0L;
                    this.bitField0_ &= 0xFFFFFFFB;
                    this.adr65TEREX_ = 0L;
                    this.bitField0_ &= 0xFFFFFFF7;
                    this.adr66TEREX_ = 0L;
                    this.bitField0_ &= 0xFFFFFFEF;
                    this.adr67TEREX_ = 0L;
                    this.bitField0_ &= 0xFFFFFFDF;
                    this.adr11TEREX_ = OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN.emptyLongList();
                    this.bitField0_ &= 0xFFFFFFBF;
                    this.adr69TEREX_ = 0L;
                    this.bitField0_ &= 0xFFFFFF7F;
                    return this;
                }

                public Descriptors.Descriptor getDescriptorForType() {
                    return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_ExCAN_descriptor;
                }

                public OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN getDefaultInstanceForType() {
                    return OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN.getDefaultInstance();
                }

                public OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN build() {
                    OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN result = buildPartial();
                    if (!result.isInitialized())
                        throw newUninitializedMessageException(result);
                    return result;
                }

                public OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN buildPartial() {
                    OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN result = new OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN(this);
                    int from_bitField0_ = this.bitField0_;
                    int to_bitField0_ = 0;
                    if ((this.bitField0_ & 0x1) != 0) {
                        this.sPNid_.makeImmutable();
                        this.bitField0_ &= 0xFFFFFFFE;
                    }
                    result.sPNid_ = this.sPNid_;
                    if ((this.bitField0_ & 0x2) != 0) {
                        this.sPNval_.makeImmutable();
                        this.bitField0_ &= 0xFFFFFFFD;
                    }
                    result.sPNval_ = this.sPNval_;
                    if ((from_bitField0_ & 0x4) != 0) {
                        result.adr64TEREX_ = this.adr64TEREX_;
                        to_bitField0_ |= 0x1;
                    }
                    if ((from_bitField0_ & 0x8) != 0) {
                        result.adr65TEREX_ = this.adr65TEREX_;
                        to_bitField0_ |= 0x2;
                    }
                    if ((from_bitField0_ & 0x10) != 0) {
                        result.adr66TEREX_ = this.adr66TEREX_;
                        to_bitField0_ |= 0x4;
                    }
                    if ((from_bitField0_ & 0x20) != 0) {
                        result.adr67TEREX_ = this.adr67TEREX_;
                        to_bitField0_ |= 0x8;
                    }
                    if ((this.bitField0_ & 0x40) != 0) {
                        this.adr11TEREX_.makeImmutable();
                        this.bitField0_ &= 0xFFFFFFBF;
                    }
                    result.adr11TEREX_ = this.adr11TEREX_;
                    if ((from_bitField0_ & 0x80) != 0) {
                        result.adr69TEREX_ = this.adr69TEREX_;
                        to_bitField0_ |= 0x10;
                    }
                    result.bitField0_ = to_bitField0_;
                    onBuilt();
                    return result;
                }

                public Builder clone() {
                    return (Builder) super.clone();
                }

                public Builder setField(Descriptors.FieldDescriptor field, Object value) {
                    return (Builder) super.setField(field, value);
                }

                public Builder clearField(Descriptors.FieldDescriptor field) {
                    return (Builder) super.clearField(field);
                }

                public Builder clearOneof(Descriptors.OneofDescriptor oneof) {
                    return (Builder) super.clearOneof(oneof);
                }

                public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
                    return (Builder) super.setRepeatedField(field, index, value);
                }

                public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
                    return (Builder) super.addRepeatedField(field, value);
                }

                public Builder mergeFrom(Message other) {
                    if (other instanceof OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN)
                        return mergeFrom((OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN) other);
                    super.mergeFrom(other);
                    return this;
                }

                public Builder mergeFrom(OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN other) {
                    if (other == OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN.getDefaultInstance())
                        return this;
                    if (!other.sPNid_.isEmpty()) {
                        if (this.sPNid_.isEmpty()) {
                            this.sPNid_ = other.sPNid_;
                            this.bitField0_ &= 0xFFFFFFFE;
                        } else {
                            ensureSPNidIsMutable();
                            this.sPNid_.addAll((Collection) other.sPNid_);
                        }
                        onChanged();
                    }
                    if (!other.sPNval_.isEmpty()) {
                        if (this.sPNval_.isEmpty()) {
                            this.sPNval_ = other.sPNval_;
                            this.bitField0_ &= 0xFFFFFFFD;
                        } else {
                            ensureSPNvalIsMutable();
                            this.sPNval_.addAll((Collection) other.sPNval_);
                        }
                        onChanged();
                    }
                    if (other.hasAdr64TEREX())
                        setAdr64TEREX(other.getAdr64TEREX());
                    if (other.hasAdr65TEREX())
                        setAdr65TEREX(other.getAdr65TEREX());
                    if (other.hasAdr66TEREX())
                        setAdr66TEREX(other.getAdr66TEREX());
                    if (other.hasAdr67TEREX())
                        setAdr67TEREX(other.getAdr67TEREX());
                    if (!other.adr11TEREX_.isEmpty()) {
                        if (this.adr11TEREX_.isEmpty()) {
                            this.adr11TEREX_ = other.adr11TEREX_;
                            this.bitField0_ &= 0xFFFFFFBF;
                        } else {
                            ensureAdr11TEREXIsMutable();
                            this.adr11TEREX_.addAll((Collection) other.adr11TEREX_);
                        }
                        onChanged();
                    }
                    if (other.hasAdr69TEREX())
                        setAdr69TEREX(other.getAdr69TEREX());
                    mergeUnknownFields(other.unknownFields);
                    onChanged();
                    return this;
                }

                public final boolean isInitialized() {
                    return true;
                }

                public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                    OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN parsedMessage = null;
                    try {
                        parsedMessage = (OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN) OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN.PARSER.parsePartialFrom(input, extensionRegistry);
                    } catch (InvalidProtocolBufferException e) {
                        parsedMessage = (OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN) e.getUnfinishedMessage();
                        throw e.unwrapIOException();
                    } finally {
                        if (parsedMessage != null)
                            mergeFrom(parsedMessage);
                    }
                    return this;
                }

                private void ensureSPNidIsMutable() {
                    if ((this.bitField0_ & 0x1) == 0) {
                        this.sPNid_ = OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN.mutableCopy(this.sPNid_);
                        this.bitField0_ |= 0x1;
                    }
                }

                public List<Integer> getSPNidList() {
                    return ((this.bitField0_ & 0x1) != 0) ? Collections.<Integer>unmodifiableList((List<? extends Integer>) this.sPNid_) : (List<Integer>) this.sPNid_;
                }

                public int getSPNidCount() {
                    return this.sPNid_.size();
                }

                public int getSPNid(int index) {
                    return this.sPNid_.getInt(index);
                }

                public Builder setSPNid(int index, int value) {
                    ensureSPNidIsMutable();
                    this.sPNid_.setInt(index, value);
                    onChanged();
                    return this;
                }

                public Builder addSPNid(int value) {
                    ensureSPNidIsMutable();
                    this.sPNid_.addInt(value);
                    onChanged();
                    return this;
                }

                public Builder addAllSPNid(Iterable<? extends Integer> values) {
                    ensureSPNidIsMutable();
                    AbstractMessageLite.Builder.addAll(values, (List) this.sPNid_);
                    onChanged();
                    return this;
                }

                public Builder clearSPNid() {
                    this.sPNid_ = OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN.emptyIntList();
                    this.bitField0_ &= 0xFFFFFFFE;
                    onChanged();
                    return this;
                }

                private void ensureSPNvalIsMutable() {
                    if ((this.bitField0_ & 0x2) == 0) {
                        this.sPNval_ = OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN.mutableCopy(this.sPNval_);
                        this.bitField0_ |= 0x2;
                    }
                }

                public List<Integer> getSPNvalList() {
                    return ((this.bitField0_ & 0x2) != 0) ? Collections.<Integer>unmodifiableList((List<? extends Integer>) this.sPNval_) : (List<Integer>) this.sPNval_;
                }

                public int getSPNvalCount() {
                    return this.sPNval_.size();
                }

                public int getSPNval(int index) {
                    return this.sPNval_.getInt(index);
                }

                public Builder setSPNval(int index, int value) {
                    ensureSPNvalIsMutable();
                    this.sPNval_.setInt(index, value);
                    onChanged();
                    return this;
                }

                public Builder addSPNval(int value) {
                    ensureSPNvalIsMutable();
                    this.sPNval_.addInt(value);
                    onChanged();
                    return this;
                }

                public Builder addAllSPNval(Iterable<? extends Integer> values) {
                    ensureSPNvalIsMutable();
                    AbstractMessageLite.Builder.addAll(values, (List) this.sPNval_);
                    onChanged();
                    return this;
                }

                public Builder clearSPNval() {
                    this.sPNval_ = OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN.emptyIntList();
                    this.bitField0_ &= 0xFFFFFFFD;
                    onChanged();
                    return this;
                }

                public boolean hasAdr64TEREX() {
                    return ((this.bitField0_ & 0x4) != 0);
                }

                public long getAdr64TEREX() {
                    return this.adr64TEREX_;
                }

                public Builder setAdr64TEREX(long value) {
                    this.bitField0_ |= 0x4;
                    this.adr64TEREX_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearAdr64TEREX() {
                    this.bitField0_ &= 0xFFFFFFFB;
                    this.adr64TEREX_ = 0L;
                    onChanged();
                    return this;
                }

                public boolean hasAdr65TEREX() {
                    return ((this.bitField0_ & 0x8) != 0);
                }

                public long getAdr65TEREX() {
                    return this.adr65TEREX_;
                }

                public Builder setAdr65TEREX(long value) {
                    this.bitField0_ |= 0x8;
                    this.adr65TEREX_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearAdr65TEREX() {
                    this.bitField0_ &= 0xFFFFFFF7;
                    this.adr65TEREX_ = 0L;
                    onChanged();
                    return this;
                }

                public boolean hasAdr66TEREX() {
                    return ((this.bitField0_ & 0x10) != 0);
                }

                public long getAdr66TEREX() {
                    return this.adr66TEREX_;
                }

                public Builder setAdr66TEREX(long value) {
                    this.bitField0_ |= 0x10;
                    this.adr66TEREX_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearAdr66TEREX() {
                    this.bitField0_ &= 0xFFFFFFEF;
                    this.adr66TEREX_ = 0L;
                    onChanged();
                    return this;
                }

                public boolean hasAdr67TEREX() {
                    return ((this.bitField0_ & 0x20) != 0);
                }

                public long getAdr67TEREX() {
                    return this.adr67TEREX_;
                }

                public Builder setAdr67TEREX(long value) {
                    this.bitField0_ |= 0x20;
                    this.adr67TEREX_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearAdr67TEREX() {
                    this.bitField0_ &= 0xFFFFFFDF;
                    this.adr67TEREX_ = 0L;
                    onChanged();
                    return this;
                }

                private void ensureAdr11TEREXIsMutable() {
                    if ((this.bitField0_ & 0x40) == 0) {
                        this.adr11TEREX_ = OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN.mutableCopy(this.adr11TEREX_);
                        this.bitField0_ |= 0x40;
                    }
                }

                public List<Long> getAdr11TEREXList() {
                    return ((this.bitField0_ & 0x40) != 0) ? Collections.<Long>unmodifiableList((List<? extends Long>) this.adr11TEREX_) : (List<Long>) this.adr11TEREX_;
                }

                public int getAdr11TEREXCount() {
                    return this.adr11TEREX_.size();
                }

                public long getAdr11TEREX(int index) {
                    return this.adr11TEREX_.getLong(index);
                }

                public Builder setAdr11TEREX(int index, long value) {
                    ensureAdr11TEREXIsMutable();
                    this.adr11TEREX_.setLong(index, value);
                    onChanged();
                    return this;
                }

                public Builder addAdr11TEREX(long value) {
                    ensureAdr11TEREXIsMutable();
                    this.adr11TEREX_.addLong(value);
                    onChanged();
                    return this;
                }

                public Builder addAllAdr11TEREX(Iterable<? extends Long> values) {
                    ensureAdr11TEREXIsMutable();
                    AbstractMessageLite.Builder.addAll(values, (List) this.adr11TEREX_);
                    onChanged();
                    return this;
                }

                public Builder clearAdr11TEREX() {
                    this.adr11TEREX_ = OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN.emptyLongList();
                    this.bitField0_ &= 0xFFFFFFBF;
                    onChanged();
                    return this;
                }

                public boolean hasAdr69TEREX() {
                    return ((this.bitField0_ & 0x80) != 0);
                }

                public long getAdr69TEREX() {
                    return this.adr69TEREX_;
                }

                public Builder setAdr69TEREX(long value) {
                    this.bitField0_ |= 0x80;
                    this.adr69TEREX_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearAdr69TEREX() {
                    this.bitField0_ &= 0xFFFFFF7F;
                    this.adr69TEREX_ = 0L;
                    onChanged();
                    return this;
                }

                public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
                    return (Builder) super.setUnknownFields(unknownFields);
                }

                public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
                    return (Builder) super.mergeUnknownFields(unknownFields);
                }
            }

            public static final class Taho_DDD extends GeneratedMessageV3 implements Taho_DDDOrBuilder {
                private static final long serialVersionUID = 0L;

                private int bitField0_;

                public static final int BLKPOS_FIELD_NUMBER = 1;

                private int bLKPOS_;

                public static final int FILEDATA_FIELD_NUMBER = 2;

                private ByteString fILEDATA_;

                public static final int CARDID_FIELD_NUMBER = 3;

                private ByteString cARDID_;

                public static final int STATUS_DATA_FIELD_NUMBER = 4;

                private int sTATUSDATA_;

                private byte memoizedIsInitialized;

                private Taho_DDD(GeneratedMessageV3.Builder<?> builder) {
                    super(builder);
                    this.memoizedIsInitialized = -1;
                }

                private Taho_DDD() {
                    this.memoizedIsInitialized = -1;
                    this.fILEDATA_ = ByteString.EMPTY;
                    this.cARDID_ = ByteString.EMPTY;
                }

                protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) {
                    return new Taho_DDD();
                }

                public final UnknownFieldSet getUnknownFields() {
                    return this.unknownFields;
                }

                private Taho_DDD(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                    this();
                    if (extensionRegistry == null)
                        throw new NullPointerException();
                    int mutable_bitField0_ = 0;
                    UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
                    try {
                        boolean done = false;
                        while (!done) {
                            int tag = input.readTag();
                            switch (tag) {
                                case 0:
                                    done = true;
                                    continue;
                                case 8:
                                    this.bitField0_ |= 0x1;
                                    this.bLKPOS_ = input.readUInt32();
                                    continue;
                                case 18:
                                    this.bitField0_ |= 0x2;
                                    this.fILEDATA_ = input.readBytes();
                                    continue;
                                case 26:
                                    this.bitField0_ |= 0x4;
                                    this.cARDID_ = input.readBytes();
                                    continue;
                                case 32:
                                    this.bitField0_ |= 0x8;
                                    this.sTATUSDATA_ = input.readUInt32();
                                    continue;
                            }
                            if (!parseUnknownField(input, unknownFields, extensionRegistry, tag))
                                done = true;
                        }
                    } catch (InvalidProtocolBufferException e) {
                        throw e.setUnfinishedMessage(this);
                    } catch (IOException e) {
                        throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this);
                    } finally {
                        this.unknownFields = unknownFields.build();
                        makeExtensionsImmutable();
                    }
                }

                public static final Descriptors.Descriptor getDescriptor() {
                    return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_Taho_DDD_descriptor;
                }

                protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
                    return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_Taho_DDD_fieldAccessorTable.ensureFieldAccessorsInitialized(Taho_DDD.class, Builder.class);
                }

                public boolean hasBLKPOS() {
                    return ((this.bitField0_ & 0x1) != 0);
                }

                public int getBLKPOS() {
                    return this.bLKPOS_;
                }

                public boolean hasFILEDATA() {
                    return ((this.bitField0_ & 0x2) != 0);
                }

                public ByteString getFILEDATA() {
                    return this.fILEDATA_;
                }

                public boolean hasCARDID() {
                    return ((this.bitField0_ & 0x4) != 0);
                }

                public ByteString getCARDID() {
                    return this.cARDID_;
                }

                public boolean hasSTATUSDATA() {
                    return ((this.bitField0_ & 0x8) != 0);
                }

                public int getSTATUSDATA() {
                    return this.sTATUSDATA_;
                }

                public final boolean isInitialized() {
                    byte isInitialized = this.memoizedIsInitialized;
                    if (isInitialized == 1)
                        return true;
                    if (isInitialized == 0)
                        return false;
                    this.memoizedIsInitialized = 1;
                    return true;
                }

                public void writeTo(CodedOutputStream output) throws IOException {
                    if ((this.bitField0_ & 0x1) != 0)
                        output.writeUInt32(1, this.bLKPOS_);
                    if ((this.bitField0_ & 0x2) != 0)
                        output.writeBytes(2, this.fILEDATA_);
                    if ((this.bitField0_ & 0x4) != 0)
                        output.writeBytes(3, this.cARDID_);
                    if ((this.bitField0_ & 0x8) != 0)
                        output.writeUInt32(4, this.sTATUSDATA_);
                    this.unknownFields.writeTo(output);
                }

                public int getSerializedSize() {
                    int size = this.memoizedSize;
                    if (size != -1)
                        return size;
                    size = 0;
                    if ((this.bitField0_ & 0x1) != 0)
                        size += CodedOutputStream.computeUInt32Size(1, this.bLKPOS_);
                    if ((this.bitField0_ & 0x2) != 0)
                        size += CodedOutputStream.computeBytesSize(2, this.fILEDATA_);
                    if ((this.bitField0_ & 0x4) != 0)
                        size += CodedOutputStream.computeBytesSize(3, this.cARDID_);
                    if ((this.bitField0_ & 0x8) != 0)
                        size += CodedOutputStream.computeUInt32Size(4, this.sTATUSDATA_);
                    size += this.unknownFields.getSerializedSize();
                    this.memoizedSize = size;
                    return size;
                }

                public boolean equals(Object obj) {
                    if (obj == this)
                        return true;
                    if (!(obj instanceof Taho_DDD))
                        return super.equals(obj);
                    Taho_DDD other = (Taho_DDD) obj;
                    if (hasBLKPOS() != other.hasBLKPOS())
                        return false;
                    if (hasBLKPOS() && getBLKPOS() != other.getBLKPOS())
                        return false;
                    if (hasFILEDATA() != other.hasFILEDATA())
                        return false;
                    if (hasFILEDATA() && !getFILEDATA().equals(other.getFILEDATA()))
                        return false;
                    if (hasCARDID() != other.hasCARDID())
                        return false;
                    if (hasCARDID() && !getCARDID().equals(other.getCARDID()))
                        return false;
                    if (hasSTATUSDATA() != other.hasSTATUSDATA())
                        return false;
                    if (hasSTATUSDATA() && getSTATUSDATA() != other.getSTATUSDATA())
                        return false;
                    if (!this.unknownFields.equals(other.unknownFields))
                        return false;
                    return true;
                }

                public int hashCode() {
                    if (this.memoizedHashCode != 0)
                        return this.memoizedHashCode;
                    int hash = 41;
                    hash = 19 * hash + getDescriptor().hashCode();
                    if (hasBLKPOS()) {
                        hash = 37 * hash + 1;
                        hash = 53 * hash + getBLKPOS();
                    }
                    if (hasFILEDATA()) {
                        hash = 37 * hash + 2;
                        hash = 53 * hash + getFILEDATA().hashCode();
                    }
                    if (hasCARDID()) {
                        hash = 37 * hash + 3;
                        hash = 53 * hash + getCARDID().hashCode();
                    }
                    if (hasSTATUSDATA()) {
                        hash = 37 * hash + 4;
                        hash = 53 * hash + getSTATUSDATA();
                    }
                    hash = 29 * hash + this.unknownFields.hashCode();
                    this.memoizedHashCode = hash;
                    return hash;
                }

                public static Taho_DDD parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
                    return (Taho_DDD) PARSER.parseFrom(data);
                }

                public static Taho_DDD parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                    return (Taho_DDD) PARSER.parseFrom(data, extensionRegistry);
                }

                public static Taho_DDD parseFrom(ByteString data) throws InvalidProtocolBufferException {
                    return (Taho_DDD) PARSER.parseFrom(data);
                }

                public static Taho_DDD parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                    return (Taho_DDD) PARSER.parseFrom(data, extensionRegistry);
                }

                public static Taho_DDD parseFrom(byte[] data) throws InvalidProtocolBufferException {
                    return (Taho_DDD) PARSER.parseFrom(data);
                }

                public static Taho_DDD parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                    return (Taho_DDD) PARSER.parseFrom(data, extensionRegistry);
                }

                public static Taho_DDD parseFrom(InputStream input) throws IOException {
                    return (Taho_DDD) GeneratedMessageV3.parseWithIOException(PARSER, input);
                }

                public static Taho_DDD parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                    return (Taho_DDD) GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
                }

                public static Taho_DDD parseDelimitedFrom(InputStream input) throws IOException {
                    return (Taho_DDD) GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
                }

                public static Taho_DDD parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                    return (Taho_DDD) GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
                }

                public static Taho_DDD parseFrom(CodedInputStream input) throws IOException {
                    return (Taho_DDD) GeneratedMessageV3.parseWithIOException(PARSER, input);
                }

                public static Taho_DDD parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                    return (Taho_DDD) GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
                }

                public Builder newBuilderForType() {
                    return newBuilder();
                }

                public static Builder newBuilder() {
                    return DEFAULT_INSTANCE.toBuilder();
                }

                public static Builder newBuilder(Taho_DDD prototype) {
                    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
                }

                public Builder toBuilder() {
                    return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder()).mergeFrom(this);
                }

                protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
                    Builder builder = new Builder(parent);
                    return builder;
                }

                public static final class Builder extends GeneratedMessageV3.Builder<Builder> implements OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDDOrBuilder {
                    private int bitField0_;

                    private int bLKPOS_;

                    private ByteString fILEDATA_;

                    private ByteString cARDID_;

                    private int sTATUSDATA_;

                    public static final Descriptors.Descriptor getDescriptor() {
                        return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_Taho_DDD_descriptor;
                    }

                    protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
                        return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_Taho_DDD_fieldAccessorTable.ensureFieldAccessorsInitialized(OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD.class, Builder.class);
                    }

                    private Builder() {
                        this.fILEDATA_ = ByteString.EMPTY;
                        this.cARDID_ = ByteString.EMPTY;
                        maybeForceBuilderInitialization();
                    }

                    private Builder(GeneratedMessageV3.BuilderParent parent) {
                        super(parent);
                        this.fILEDATA_ = ByteString.EMPTY;
                        this.cARDID_ = ByteString.EMPTY;
                        maybeForceBuilderInitialization();
                    }

                    private void maybeForceBuilderInitialization() {
                        if (OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD.alwaysUseFieldBuilders) ;
                    }

                    public Builder clear() {
                        super.clear();
                        this.bLKPOS_ = 0;
                        this.bitField0_ &= 0xFFFFFFFE;
                        this.fILEDATA_ = ByteString.EMPTY;
                        this.bitField0_ &= 0xFFFFFFFD;
                        this.cARDID_ = ByteString.EMPTY;
                        this.bitField0_ &= 0xFFFFFFFB;
                        this.sTATUSDATA_ = 0;
                        this.bitField0_ &= 0xFFFFFFF7;
                        return this;
                    }

                    public Descriptors.Descriptor getDescriptorForType() {
                        return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_Taho_DDD_descriptor;
                    }

                    public OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD getDefaultInstanceForType() {
                        return OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD.getDefaultInstance();
                    }

                    public OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD build() {
                        OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD result = buildPartial();
                        if (!result.isInitialized())
                            throw newUninitializedMessageException(result);
                        return result;
                    }

                    public OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD buildPartial() {
                        OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD result = new OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD(this);
                        int from_bitField0_ = this.bitField0_;
                        int to_bitField0_ = 0;
                        if ((from_bitField0_ & 0x1) != 0) {
                            result.bLKPOS_ = this.bLKPOS_;
                            to_bitField0_ |= 0x1;
                        }
                        if ((from_bitField0_ & 0x2) != 0)
                            to_bitField0_ |= 0x2;
                        result.fILEDATA_ = this.fILEDATA_;
                        if ((from_bitField0_ & 0x4) != 0)
                            to_bitField0_ |= 0x4;
                        result.cARDID_ = this.cARDID_;
                        if ((from_bitField0_ & 0x8) != 0) {
                            result.sTATUSDATA_ = this.sTATUSDATA_;
                            to_bitField0_ |= 0x8;
                        }
                        result.bitField0_ = to_bitField0_;
                        onBuilt();
                        return result;
                    }

                    public Builder clone() {
                        return (Builder) super.clone();
                    }

                    public Builder setField(Descriptors.FieldDescriptor field, Object value) {
                        return (Builder) super.setField(field, value);
                    }

                    public Builder clearField(Descriptors.FieldDescriptor field) {
                        return (Builder) super.clearField(field);
                    }

                    public Builder clearOneof(Descriptors.OneofDescriptor oneof) {
                        return (Builder) super.clearOneof(oneof);
                    }

                    public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
                        return (Builder) super.setRepeatedField(field, index, value);
                    }

                    public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
                        return (Builder) super.addRepeatedField(field, value);
                    }

                    public Builder mergeFrom(Message other) {
                        if (other instanceof OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD)
                            return mergeFrom((OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD) other);
                        super.mergeFrom(other);
                        return this;
                    }

                    public Builder mergeFrom(OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD other) {
                        if (other == OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD.getDefaultInstance())
                            return this;
                        if (other.hasBLKPOS())
                            setBLKPOS(other.getBLKPOS());
                        if (other.hasFILEDATA())
                            setFILEDATA(other.getFILEDATA());
                        if (other.hasCARDID())
                            setCARDID(other.getCARDID());
                        if (other.hasSTATUSDATA())
                            setSTATUSDATA(other.getSTATUSDATA());
                        mergeUnknownFields(other.unknownFields);
                        onChanged();
                        return this;
                    }

                    public final boolean isInitialized() {
                        return true;
                    }

                    public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                        OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD parsedMessage = null;
                        try {
                            parsedMessage = (OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD) OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD.PARSER.parsePartialFrom(input, extensionRegistry);
                        } catch (InvalidProtocolBufferException e) {
                            parsedMessage = (OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD) e.getUnfinishedMessage();
                            throw e.unwrapIOException();
                        } finally {
                            if (parsedMessage != null)
                                mergeFrom(parsedMessage);
                        }
                        return this;
                    }

                    public boolean hasBLKPOS() {
                        return ((this.bitField0_ & 0x1) != 0);
                    }

                    public int getBLKPOS() {
                        return this.bLKPOS_;
                    }

                    public Builder setBLKPOS(int value) {
                        this.bitField0_ |= 0x1;
                        this.bLKPOS_ = value;
                        onChanged();
                        return this;
                    }

                    public Builder clearBLKPOS() {
                        this.bitField0_ &= 0xFFFFFFFE;
                        this.bLKPOS_ = 0;
                        onChanged();
                        return this;
                    }

                    public boolean hasFILEDATA() {
                        return ((this.bitField0_ & 0x2) != 0);
                    }

                    public ByteString getFILEDATA() {
                        return this.fILEDATA_;
                    }

                    public Builder setFILEDATA(ByteString value) {
                        if (value == null)
                            throw new NullPointerException();
                        this.bitField0_ |= 0x2;
                        this.fILEDATA_ = value;
                        onChanged();
                        return this;
                    }

                    public Builder clearFILEDATA() {
                        this.bitField0_ &= 0xFFFFFFFD;
                        this.fILEDATA_ = OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD.getDefaultInstance().getFILEDATA();
                        onChanged();
                        return this;
                    }

                    public boolean hasCARDID() {
                        return ((this.bitField0_ & 0x4) != 0);
                    }

                    public ByteString getCARDID() {
                        return this.cARDID_;
                    }

                    public Builder setCARDID(ByteString value) {
                        if (value == null)
                            throw new NullPointerException();
                        this.bitField0_ |= 0x4;
                        this.cARDID_ = value;
                        onChanged();
                        return this;
                    }

                    public Builder clearCARDID() {
                        this.bitField0_ &= 0xFFFFFFFB;
                        this.cARDID_ = OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD.getDefaultInstance().getCARDID();
                        onChanged();
                        return this;
                    }

                    public boolean hasSTATUSDATA() {
                        return ((this.bitField0_ & 0x8) != 0);
                    }

                    public int getSTATUSDATA() {
                        return this.sTATUSDATA_;
                    }

                    public Builder setSTATUSDATA(int value) {
                        this.bitField0_ |= 0x8;
                        this.sTATUSDATA_ = value;
                        onChanged();
                        return this;
                    }

                    public Builder clearSTATUSDATA() {
                        this.bitField0_ &= 0xFFFFFFF7;
                        this.sTATUSDATA_ = 0;
                        onChanged();
                        return this;
                    }

                    public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
                        return (Builder) super.setUnknownFields(unknownFields);
                    }

                    public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
                        return (Builder) super.mergeUnknownFields(unknownFields);
                    }
                }

                private static final Taho_DDD DEFAULT_INSTANCE = new Taho_DDD();

                public static Taho_DDD getDefaultInstance() {
                    return DEFAULT_INSTANCE;
                }

                @Deprecated
                public static final Parser<Taho_DDD> PARSER = (Parser<Taho_DDD>) new AbstractParser<Taho_DDD>() {
                    public OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                        return new OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD(input, extensionRegistry);
                    }
                };

                public static Parser<Taho_DDD> parser() {
                    return PARSER;
                }

                public Parser<Taho_DDD> getParserForType() {
                    return PARSER;
                }

                public Taho_DDD getDefaultInstanceForType() {
                    return DEFAULT_INSTANCE;
                }
            }

            public static final class Builder extends GeneratedMessageV3.Builder<Taho_DDD.Builder> implements Taho_DDDOrBuilder {
                private int bitField0_;

                private int bLKPOS_;

                private ByteString fILEDATA_;

                private ByteString cARDID_;

                private int sTATUSDATA_;

                public static final Descriptors.Descriptor getDescriptor() {
                    return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_Taho_DDD_descriptor;
                }

                protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
                    return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_Taho_DDD_fieldAccessorTable.ensureFieldAccessorsInitialized(OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD.class, Builder.class);
                }

                private Builder() {
                    this.fILEDATA_ = ByteString.EMPTY;
                    this.cARDID_ = ByteString.EMPTY;
                    maybeForceBuilderInitialization();
                }

                private Builder(GeneratedMessageV3.BuilderParent parent) {
                    super(parent);
                    this.fILEDATA_ = ByteString.EMPTY;
                    this.cARDID_ = ByteString.EMPTY;
                    maybeForceBuilderInitialization();
                }

                private void maybeForceBuilderInitialization() {
                    if (OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD.alwaysUseFieldBuilders) ;
                }

                public Builder clear() {
                    super.clear();
                    this.bLKPOS_ = 0;
                    this.bitField0_ &= 0xFFFFFFFE;
                    this.fILEDATA_ = ByteString.EMPTY;
                    this.bitField0_ &= 0xFFFFFFFD;
                    this.cARDID_ = ByteString.EMPTY;
                    this.bitField0_ &= 0xFFFFFFFB;
                    this.sTATUSDATA_ = 0;
                    this.bitField0_ &= 0xFFFFFFF7;
                    return this;
                }

                public Descriptors.Descriptor getDescriptorForType() {
                    return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_Taho_DDD_descriptor;
                }

                public OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD getDefaultInstanceForType() {
                    return OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD.getDefaultInstance();
                }

                public OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD build() {
                    OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD result = buildPartial();
                    if (!result.isInitialized())
                        throw newUninitializedMessageException(result);
                    return result;
                }

                public OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD buildPartial() {
                    OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD result = new OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD(this);
                    int from_bitField0_ = this.bitField0_;
                    int to_bitField0_ = 0;
                    if ((from_bitField0_ & 0x1) != 0) {
                        result.bLKPOS_ = this.bLKPOS_;
                        to_bitField0_ |= 0x1;
                    }
                    if ((from_bitField0_ & 0x2) != 0)
                        to_bitField0_ |= 0x2;
                    result.fILEDATA_ = this.fILEDATA_;
                    if ((from_bitField0_ & 0x4) != 0)
                        to_bitField0_ |= 0x4;
                    result.cARDID_ = this.cARDID_;
                    if ((from_bitField0_ & 0x8) != 0) {
                        result.sTATUSDATA_ = this.sTATUSDATA_;
                        to_bitField0_ |= 0x8;
                    }
                    result.bitField0_ = to_bitField0_;
                    onBuilt();
                    return result;
                }

                public Builder clone() {
                    return (Builder) super.clone();
                }

                public Builder setField(Descriptors.FieldDescriptor field, Object value) {
                    return (Builder) super.setField(field, value);
                }

                public Builder clearField(Descriptors.FieldDescriptor field) {
                    return (Builder) super.clearField(field);
                }

                public Builder clearOneof(Descriptors.OneofDescriptor oneof) {
                    return (Builder) super.clearOneof(oneof);
                }

                public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
                    return (Builder) super.setRepeatedField(field, index, value);
                }

                public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
                    return (Builder) super.addRepeatedField(field, value);
                }

                public Builder mergeFrom(Message other) {
                    if (other instanceof OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD)
                        return mergeFrom((OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD) other);
                    super.mergeFrom(other);
                    return this;
                }

                public Builder mergeFrom(OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD other) {
                    if (other == OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD.getDefaultInstance())
                        return this;
                    if (other.hasBLKPOS())
                        setBLKPOS(other.getBLKPOS());
                    if (other.hasFILEDATA())
                        setFILEDATA(other.getFILEDATA());
                    if (other.hasCARDID())
                        setCARDID(other.getCARDID());
                    if (other.hasSTATUSDATA())
                        setSTATUSDATA(other.getSTATUSDATA());
                    mergeUnknownFields(other.unknownFields);
                    onChanged();
                    return this;
                }

                public final boolean isInitialized() {
                    return true;
                }

                public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                    OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD parsedMessage = null;
                    try {
                        parsedMessage = (OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD) OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD.PARSER.parsePartialFrom(input, extensionRegistry);
                    } catch (InvalidProtocolBufferException e) {
                        parsedMessage = (OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD) e.getUnfinishedMessage();
                        throw e.unwrapIOException();
                    } finally {
                        if (parsedMessage != null)
                            mergeFrom(parsedMessage);
                    }
                    return this;
                }

                public boolean hasBLKPOS() {
                    return ((this.bitField0_ & 0x1) != 0);
                }

                public int getBLKPOS() {
                    return this.bLKPOS_;
                }

                public Builder setBLKPOS(int value) {
                    this.bitField0_ |= 0x1;
                    this.bLKPOS_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearBLKPOS() {
                    this.bitField0_ &= 0xFFFFFFFE;
                    this.bLKPOS_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasFILEDATA() {
                    return ((this.bitField0_ & 0x2) != 0);
                }

                public ByteString getFILEDATA() {
                    return this.fILEDATA_;
                }

                public Builder setFILEDATA(ByteString value) {
                    if (value == null)
                        throw new NullPointerException();
                    this.bitField0_ |= 0x2;
                    this.fILEDATA_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearFILEDATA() {
                    this.bitField0_ &= 0xFFFFFFFD;
                    this.fILEDATA_ = OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD.getDefaultInstance().getFILEDATA();
                    onChanged();
                    return this;
                }

                public boolean hasCARDID() {
                    return ((this.bitField0_ & 0x4) != 0);
                }

                public ByteString getCARDID() {
                    return this.cARDID_;
                }

                public Builder setCARDID(ByteString value) {
                    if (value == null)
                        throw new NullPointerException();
                    this.bitField0_ |= 0x4;
                    this.cARDID_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearCARDID() {
                    this.bitField0_ &= 0xFFFFFFFB;
                    this.cARDID_ = OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD.getDefaultInstance().getCARDID();
                    onChanged();
                    return this;
                }

                public boolean hasSTATUSDATA() {
                    return ((this.bitField0_ & 0x8) != 0);
                }

                public int getSTATUSDATA() {
                    return this.sTATUSDATA_;
                }

                public Builder setSTATUSDATA(int value) {
                    this.bitField0_ |= 0x8;
                    this.sTATUSDATA_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearSTATUSDATA() {
                    this.bitField0_ &= 0xFFFFFFF7;
                    this.sTATUSDATA_ = 0;
                    onChanged();
                    return this;
                }

                public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
                    return (Builder) super.setUnknownFields(unknownFields);
                }

                public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
                    return (Builder) super.mergeUnknownFields(unknownFields);
                }
            }

            public static final class APC extends GeneratedMessageV3 implements APCOrBuilder {
                private static final long serialVersionUID = 0L;

                private int bitField0_;

                public static final int APCSTATUS1_FIELD_NUMBER = 1;

                private int aPCStatus1_;

                public static final int APCSTATUS2_FIELD_NUMBER = 2;

                private int aPCStatus2_;

                public static final int APCSTATUS3_FIELD_NUMBER = 3;

                private int aPCStatus3_;

                public static final int APCSTATUS4_FIELD_NUMBER = 4;

                private int aPCStatus4_;

                public static final int APCNUMBERIN1_FIELD_NUMBER = 5;

                private int aPCNumberIn1_;

                public static final int APCNUMBEROUT1_FIELD_NUMBER = 6;

                private int aPCNumberOut1_;

                public static final int APCNUMBERIN2_FIELD_NUMBER = 7;

                private int aPCNumberIn2_;

                public static final int APCNUMBEROUT2_FIELD_NUMBER = 8;

                private int aPCNumberOut2_;

                public static final int APCNUMBERIN3_FIELD_NUMBER = 9;

                private int aPCNumberIn3_;

                public static final int APCNUMBEROUT31_FIELD_NUMBER = 10;

                private int aPCNumberOut31_;

                public static final int APCNUMBERIN4_FIELD_NUMBER = 11;

                private int aPCNumberIn4_;

                public static final int APCNUMBEROUT4_FIELD_NUMBER = 12;

                private int aPCNumberOut4_;

                private byte memoizedIsInitialized;

                private APC(GeneratedMessageV3.Builder<?> builder) {
                    super(builder);
                    this.memoizedIsInitialized = -1;
                }

                private APC() {
                    this.memoizedIsInitialized = -1;
                }

                protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) {
                    return new APC();
                }

                public final UnknownFieldSet getUnknownFields() {
                    return this.unknownFields;
                }

                private APC(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                    this();
                    if (extensionRegistry == null)
                        throw new NullPointerException();
                    int mutable_bitField0_ = 0;
                    UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
                    try {
                        boolean done = false;
                        while (!done) {
                            int tag = input.readTag();
                            switch (tag) {
                                case 0:
                                    done = true;
                                    continue;
                                case 8:
                                    this.bitField0_ |= 0x1;
                                    this.aPCStatus1_ = input.readUInt32();
                                    continue;
                                case 16:
                                    this.bitField0_ |= 0x2;
                                    this.aPCStatus2_ = input.readUInt32();
                                    continue;
                                case 24:
                                    this.bitField0_ |= 0x4;
                                    this.aPCStatus3_ = input.readUInt32();
                                    continue;
                                case 32:
                                    this.bitField0_ |= 0x8;
                                    this.aPCStatus4_ = input.readUInt32();
                                    continue;
                                case 40:
                                    this.bitField0_ |= 0x10;
                                    this.aPCNumberIn1_ = input.readUInt32();
                                    continue;
                                case 48:
                                    this.bitField0_ |= 0x20;
                                    this.aPCNumberOut1_ = input.readUInt32();
                                    continue;
                                case 56:
                                    this.bitField0_ |= 0x40;
                                    this.aPCNumberIn2_ = input.readUInt32();
                                    continue;
                                case 64:
                                    this.bitField0_ |= 0x80;
                                    this.aPCNumberOut2_ = input.readUInt32();
                                    continue;
                                case 72:
                                    this.bitField0_ |= 0x100;
                                    this.aPCNumberIn3_ = input.readUInt32();
                                    continue;
                                case 80:
                                    this.bitField0_ |= 0x200;
                                    this.aPCNumberOut31_ = input.readUInt32();
                                    continue;
                                case 88:
                                    this.bitField0_ |= 0x400;
                                    this.aPCNumberIn4_ = input.readUInt32();
                                    continue;
                                case 96:
                                    this.bitField0_ |= 0x800;
                                    this.aPCNumberOut4_ = input.readUInt32();
                                    continue;
                            }
                            if (!parseUnknownField(input, unknownFields, extensionRegistry, tag))
                                done = true;
                        }
                    } catch (InvalidProtocolBufferException e) {
                        throw e.setUnfinishedMessage(this);
                    } catch (IOException e) {
                        throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this);
                    } finally {
                        this.unknownFields = unknownFields.build();
                        makeExtensionsImmutable();
                    }
                }

                public static final Descriptors.Descriptor getDescriptor() {
                    return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_APC_descriptor;
                }

                protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
                    return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_APC_fieldAccessorTable.ensureFieldAccessorsInitialized(APC.class, Builder.class);
                }

                public boolean hasAPCStatus1() {
                    return ((this.bitField0_ & 0x1) != 0);
                }

                public int getAPCStatus1() {
                    return this.aPCStatus1_;
                }

                public boolean hasAPCStatus2() {
                    return ((this.bitField0_ & 0x2) != 0);
                }

                public int getAPCStatus2() {
                    return this.aPCStatus2_;
                }

                public boolean hasAPCStatus3() {
                    return ((this.bitField0_ & 0x4) != 0);
                }

                public int getAPCStatus3() {
                    return this.aPCStatus3_;
                }

                public boolean hasAPCStatus4() {
                    return ((this.bitField0_ & 0x8) != 0);
                }

                public int getAPCStatus4() {
                    return this.aPCStatus4_;
                }

                public boolean hasAPCNumberIn1() {
                    return ((this.bitField0_ & 0x10) != 0);
                }

                public int getAPCNumberIn1() {
                    return this.aPCNumberIn1_;
                }

                public boolean hasAPCNumberOut1() {
                    return ((this.bitField0_ & 0x20) != 0);
                }

                public int getAPCNumberOut1() {
                    return this.aPCNumberOut1_;
                }

                public boolean hasAPCNumberIn2() {
                    return ((this.bitField0_ & 0x40) != 0);
                }

                public int getAPCNumberIn2() {
                    return this.aPCNumberIn2_;
                }

                public boolean hasAPCNumberOut2() {
                    return ((this.bitField0_ & 0x80) != 0);
                }

                public int getAPCNumberOut2() {
                    return this.aPCNumberOut2_;
                }

                public boolean hasAPCNumberIn3() {
                    return ((this.bitField0_ & 0x100) != 0);
                }

                public int getAPCNumberIn3() {
                    return this.aPCNumberIn3_;
                }

                public boolean hasAPCNumberOut31() {
                    return ((this.bitField0_ & 0x200) != 0);
                }

                public int getAPCNumberOut31() {
                    return this.aPCNumberOut31_;
                }

                public boolean hasAPCNumberIn4() {
                    return ((this.bitField0_ & 0x400) != 0);
                }

                public int getAPCNumberIn4() {
                    return this.aPCNumberIn4_;
                }

                public boolean hasAPCNumberOut4() {
                    return ((this.bitField0_ & 0x800) != 0);
                }

                public int getAPCNumberOut4() {
                    return this.aPCNumberOut4_;
                }

                public final boolean isInitialized() {
                    byte isInitialized = this.memoizedIsInitialized;
                    if (isInitialized == 1)
                        return true;
                    if (isInitialized == 0)
                        return false;
                    this.memoizedIsInitialized = 1;
                    return true;
                }

                public void writeTo(CodedOutputStream output) throws IOException {
                    if ((this.bitField0_ & 0x1) != 0)
                        output.writeUInt32(1, this.aPCStatus1_);
                    if ((this.bitField0_ & 0x2) != 0)
                        output.writeUInt32(2, this.aPCStatus2_);
                    if ((this.bitField0_ & 0x4) != 0)
                        output.writeUInt32(3, this.aPCStatus3_);
                    if ((this.bitField0_ & 0x8) != 0)
                        output.writeUInt32(4, this.aPCStatus4_);
                    if ((this.bitField0_ & 0x10) != 0)
                        output.writeUInt32(5, this.aPCNumberIn1_);
                    if ((this.bitField0_ & 0x20) != 0)
                        output.writeUInt32(6, this.aPCNumberOut1_);
                    if ((this.bitField0_ & 0x40) != 0)
                        output.writeUInt32(7, this.aPCNumberIn2_);
                    if ((this.bitField0_ & 0x80) != 0)
                        output.writeUInt32(8, this.aPCNumberOut2_);
                    if ((this.bitField0_ & 0x100) != 0)
                        output.writeUInt32(9, this.aPCNumberIn3_);
                    if ((this.bitField0_ & 0x200) != 0)
                        output.writeUInt32(10, this.aPCNumberOut31_);
                    if ((this.bitField0_ & 0x400) != 0)
                        output.writeUInt32(11, this.aPCNumberIn4_);
                    if ((this.bitField0_ & 0x800) != 0)
                        output.writeUInt32(12, this.aPCNumberOut4_);
                    this.unknownFields.writeTo(output);
                }

                public int getSerializedSize() {
                    int size = this.memoizedSize;
                    if (size != -1)
                        return size;
                    size = 0;
                    if ((this.bitField0_ & 0x1) != 0)
                        size += CodedOutputStream.computeUInt32Size(1, this.aPCStatus1_);
                    if ((this.bitField0_ & 0x2) != 0)
                        size += CodedOutputStream.computeUInt32Size(2, this.aPCStatus2_);
                    if ((this.bitField0_ & 0x4) != 0)
                        size += CodedOutputStream.computeUInt32Size(3, this.aPCStatus3_);
                    if ((this.bitField0_ & 0x8) != 0)
                        size += CodedOutputStream.computeUInt32Size(4, this.aPCStatus4_);
                    if ((this.bitField0_ & 0x10) != 0)
                        size += CodedOutputStream.computeUInt32Size(5, this.aPCNumberIn1_);
                    if ((this.bitField0_ & 0x20) != 0)
                        size += CodedOutputStream.computeUInt32Size(6, this.aPCNumberOut1_);
                    if ((this.bitField0_ & 0x40) != 0)
                        size += CodedOutputStream.computeUInt32Size(7, this.aPCNumberIn2_);
                    if ((this.bitField0_ & 0x80) != 0)
                        size += CodedOutputStream.computeUInt32Size(8, this.aPCNumberOut2_);
                    if ((this.bitField0_ & 0x100) != 0)
                        size += CodedOutputStream.computeUInt32Size(9, this.aPCNumberIn3_);
                    if ((this.bitField0_ & 0x200) != 0)
                        size += CodedOutputStream.computeUInt32Size(10, this.aPCNumberOut31_);
                    if ((this.bitField0_ & 0x400) != 0)
                        size += CodedOutputStream.computeUInt32Size(11, this.aPCNumberIn4_);
                    if ((this.bitField0_ & 0x800) != 0)
                        size += CodedOutputStream.computeUInt32Size(12, this.aPCNumberOut4_);
                    size += this.unknownFields.getSerializedSize();
                    this.memoizedSize = size;
                    return size;
                }

                public boolean equals(Object obj) {
                    if (obj == this)
                        return true;
                    if (!(obj instanceof APC))
                        return super.equals(obj);
                    APC other = (APC) obj;
                    if (hasAPCStatus1() != other.hasAPCStatus1())
                        return false;
                    if (hasAPCStatus1() && getAPCStatus1() != other.getAPCStatus1())
                        return false;
                    if (hasAPCStatus2() != other.hasAPCStatus2())
                        return false;
                    if (hasAPCStatus2() && getAPCStatus2() != other.getAPCStatus2())
                        return false;
                    if (hasAPCStatus3() != other.hasAPCStatus3())
                        return false;
                    if (hasAPCStatus3() && getAPCStatus3() != other.getAPCStatus3())
                        return false;
                    if (hasAPCStatus4() != other.hasAPCStatus4())
                        return false;
                    if (hasAPCStatus4() && getAPCStatus4() != other.getAPCStatus4())
                        return false;
                    if (hasAPCNumberIn1() != other.hasAPCNumberIn1())
                        return false;
                    if (hasAPCNumberIn1() && getAPCNumberIn1() != other.getAPCNumberIn1())
                        return false;
                    if (hasAPCNumberOut1() != other.hasAPCNumberOut1())
                        return false;
                    if (hasAPCNumberOut1() && getAPCNumberOut1() != other.getAPCNumberOut1())
                        return false;
                    if (hasAPCNumberIn2() != other.hasAPCNumberIn2())
                        return false;
                    if (hasAPCNumberIn2() && getAPCNumberIn2() != other.getAPCNumberIn2())
                        return false;
                    if (hasAPCNumberOut2() != other.hasAPCNumberOut2())
                        return false;
                    if (hasAPCNumberOut2() && getAPCNumberOut2() != other.getAPCNumberOut2())
                        return false;
                    if (hasAPCNumberIn3() != other.hasAPCNumberIn3())
                        return false;
                    if (hasAPCNumberIn3() && getAPCNumberIn3() != other.getAPCNumberIn3())
                        return false;
                    if (hasAPCNumberOut31() != other.hasAPCNumberOut31())
                        return false;
                    if (hasAPCNumberOut31() && getAPCNumberOut31() != other.getAPCNumberOut31())
                        return false;
                    if (hasAPCNumberIn4() != other.hasAPCNumberIn4())
                        return false;
                    if (hasAPCNumberIn4() && getAPCNumberIn4() != other.getAPCNumberIn4())
                        return false;
                    if (hasAPCNumberOut4() != other.hasAPCNumberOut4())
                        return false;
                    if (hasAPCNumberOut4() && getAPCNumberOut4() != other.getAPCNumberOut4())
                        return false;
                    if (!this.unknownFields.equals(other.unknownFields))
                        return false;
                    return true;
                }

                public int hashCode() {
                    if (this.memoizedHashCode != 0)
                        return this.memoizedHashCode;
                    int hash = 41;
                    hash = 19 * hash + getDescriptor().hashCode();
                    if (hasAPCStatus1()) {
                        hash = 37 * hash + 1;
                        hash = 53 * hash + getAPCStatus1();
                    }
                    if (hasAPCStatus2()) {
                        hash = 37 * hash + 2;
                        hash = 53 * hash + getAPCStatus2();
                    }
                    if (hasAPCStatus3()) {
                        hash = 37 * hash + 3;
                        hash = 53 * hash + getAPCStatus3();
                    }
                    if (hasAPCStatus4()) {
                        hash = 37 * hash + 4;
                        hash = 53 * hash + getAPCStatus4();
                    }
                    if (hasAPCNumberIn1()) {
                        hash = 37 * hash + 5;
                        hash = 53 * hash + getAPCNumberIn1();
                    }
                    if (hasAPCNumberOut1()) {
                        hash = 37 * hash + 6;
                        hash = 53 * hash + getAPCNumberOut1();
                    }
                    if (hasAPCNumberIn2()) {
                        hash = 37 * hash + 7;
                        hash = 53 * hash + getAPCNumberIn2();
                    }
                    if (hasAPCNumberOut2()) {
                        hash = 37 * hash + 8;
                        hash = 53 * hash + getAPCNumberOut2();
                    }
                    if (hasAPCNumberIn3()) {
                        hash = 37 * hash + 9;
                        hash = 53 * hash + getAPCNumberIn3();
                    }
                    if (hasAPCNumberOut31()) {
                        hash = 37 * hash + 10;
                        hash = 53 * hash + getAPCNumberOut31();
                    }
                    if (hasAPCNumberIn4()) {
                        hash = 37 * hash + 11;
                        hash = 53 * hash + getAPCNumberIn4();
                    }
                    if (hasAPCNumberOut4()) {
                        hash = 37 * hash + 12;
                        hash = 53 * hash + getAPCNumberOut4();
                    }
                    hash = 29 * hash + this.unknownFields.hashCode();
                    this.memoizedHashCode = hash;
                    return hash;
                }

                public static APC parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
                    return (APC) PARSER.parseFrom(data);
                }

                public static APC parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                    return (APC) PARSER.parseFrom(data, extensionRegistry);
                }

                public static APC parseFrom(ByteString data) throws InvalidProtocolBufferException {
                    return (APC) PARSER.parseFrom(data);
                }

                public static APC parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                    return (APC) PARSER.parseFrom(data, extensionRegistry);
                }

                public static APC parseFrom(byte[] data) throws InvalidProtocolBufferException {
                    return (APC) PARSER.parseFrom(data);
                }

                public static APC parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                    return (APC) PARSER.parseFrom(data, extensionRegistry);
                }

                public static APC parseFrom(InputStream input) throws IOException {
                    return (APC) GeneratedMessageV3.parseWithIOException(PARSER, input);
                }

                public static APC parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                    return (APC) GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
                }

                public static APC parseDelimitedFrom(InputStream input) throws IOException {
                    return (APC) GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
                }

                public static APC parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                    return (APC) GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
                }

                public static APC parseFrom(CodedInputStream input) throws IOException {
                    return (APC) GeneratedMessageV3.parseWithIOException(PARSER, input);
                }

                public static APC parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                    return (APC) GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
                }

                public Builder newBuilderForType() {
                    return newBuilder();
                }

                public static Builder newBuilder() {
                    return DEFAULT_INSTANCE.toBuilder();
                }

                public static Builder newBuilder(APC prototype) {
                    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
                }

                public Builder toBuilder() {
                    return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder()).mergeFrom(this);
                }

                protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
                    Builder builder = new Builder(parent);
                    return builder;
                }

                public static final class Builder extends GeneratedMessageV3.Builder<Builder> implements OmnicommMessageOuterClass.OmnicommMessage.Other.APCOrBuilder {
                    private int bitField0_;

                    private int aPCStatus1_;

                    private int aPCStatus2_;

                    private int aPCStatus3_;

                    private int aPCStatus4_;

                    private int aPCNumberIn1_;

                    private int aPCNumberOut1_;

                    private int aPCNumberIn2_;

                    private int aPCNumberOut2_;

                    private int aPCNumberIn3_;

                    private int aPCNumberOut31_;

                    private int aPCNumberIn4_;

                    private int aPCNumberOut4_;

                    public static final Descriptors.Descriptor getDescriptor() {
                        return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_APC_descriptor;
                    }

                    protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
                        return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_APC_fieldAccessorTable.ensureFieldAccessorsInitialized(OmnicommMessageOuterClass.OmnicommMessage.Other.APC.class, Builder.class);
                    }

                    private Builder() {
                        maybeForceBuilderInitialization();
                    }

                    private Builder(GeneratedMessageV3.BuilderParent parent) {
                        super(parent);
                        maybeForceBuilderInitialization();
                    }

                    private void maybeForceBuilderInitialization() {
                        if (OmnicommMessageOuterClass.OmnicommMessage.Other.APC.alwaysUseFieldBuilders) ;
                    }

                    public Builder clear() {
                        super.clear();
                        this.aPCStatus1_ = 0;
                        this.bitField0_ &= 0xFFFFFFFE;
                        this.aPCStatus2_ = 0;
                        this.bitField0_ &= 0xFFFFFFFD;
                        this.aPCStatus3_ = 0;
                        this.bitField0_ &= 0xFFFFFFFB;
                        this.aPCStatus4_ = 0;
                        this.bitField0_ &= 0xFFFFFFF7;
                        this.aPCNumberIn1_ = 0;
                        this.bitField0_ &= 0xFFFFFFEF;
                        this.aPCNumberOut1_ = 0;
                        this.bitField0_ &= 0xFFFFFFDF;
                        this.aPCNumberIn2_ = 0;
                        this.bitField0_ &= 0xFFFFFFBF;
                        this.aPCNumberOut2_ = 0;
                        this.bitField0_ &= 0xFFFFFF7F;
                        this.aPCNumberIn3_ = 0;
                        this.bitField0_ &= 0xFFFFFEFF;
                        this.aPCNumberOut31_ = 0;
                        this.bitField0_ &= 0xFFFFFDFF;
                        this.aPCNumberIn4_ = 0;
                        this.bitField0_ &= 0xFFFFFBFF;
                        this.aPCNumberOut4_ = 0;
                        this.bitField0_ &= 0xFFFFF7FF;
                        return this;
                    }

                    public Descriptors.Descriptor getDescriptorForType() {
                        return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_APC_descriptor;
                    }

                    public OmnicommMessageOuterClass.OmnicommMessage.Other.APC getDefaultInstanceForType() {
                        return OmnicommMessageOuterClass.OmnicommMessage.Other.APC.getDefaultInstance();
                    }

                    public OmnicommMessageOuterClass.OmnicommMessage.Other.APC build() {
                        OmnicommMessageOuterClass.OmnicommMessage.Other.APC result = buildPartial();
                        if (!result.isInitialized())
                            throw newUninitializedMessageException(result);
                        return result;
                    }

                    public OmnicommMessageOuterClass.OmnicommMessage.Other.APC buildPartial() {
                        OmnicommMessageOuterClass.OmnicommMessage.Other.APC result = new OmnicommMessageOuterClass.OmnicommMessage.Other.APC(this);
                        int from_bitField0_ = this.bitField0_;
                        int to_bitField0_ = 0;
                        if ((from_bitField0_ & 0x1) != 0) {
                            result.aPCStatus1_ = this.aPCStatus1_;
                            to_bitField0_ |= 0x1;
                        }
                        if ((from_bitField0_ & 0x2) != 0) {
                            result.aPCStatus2_ = this.aPCStatus2_;
                            to_bitField0_ |= 0x2;
                        }
                        if ((from_bitField0_ & 0x4) != 0) {
                            result.aPCStatus3_ = this.aPCStatus3_;
                            to_bitField0_ |= 0x4;
                        }
                        if ((from_bitField0_ & 0x8) != 0) {
                            result.aPCStatus4_ = this.aPCStatus4_;
                            to_bitField0_ |= 0x8;
                        }
                        if ((from_bitField0_ & 0x10) != 0) {
                            result.aPCNumberIn1_ = this.aPCNumberIn1_;
                            to_bitField0_ |= 0x10;
                        }
                        if ((from_bitField0_ & 0x20) != 0) {
                            result.aPCNumberOut1_ = this.aPCNumberOut1_;
                            to_bitField0_ |= 0x20;
                        }
                        if ((from_bitField0_ & 0x40) != 0) {
                            result.aPCNumberIn2_ = this.aPCNumberIn2_;
                            to_bitField0_ |= 0x40;
                        }
                        if ((from_bitField0_ & 0x80) != 0) {
                            result.aPCNumberOut2_ = this.aPCNumberOut2_;
                            to_bitField0_ |= 0x80;
                        }
                        if ((from_bitField0_ & 0x100) != 0) {
                            result.aPCNumberIn3_ = this.aPCNumberIn3_;
                            to_bitField0_ |= 0x100;
                        }
                        if ((from_bitField0_ & 0x200) != 0) {
                            result.aPCNumberOut31_ = this.aPCNumberOut31_;
                            to_bitField0_ |= 0x200;
                        }
                        if ((from_bitField0_ & 0x400) != 0) {
                            result.aPCNumberIn4_ = this.aPCNumberIn4_;
                            to_bitField0_ |= 0x400;
                        }
                        if ((from_bitField0_ & 0x800) != 0) {
                            result.aPCNumberOut4_ = this.aPCNumberOut4_;
                            to_bitField0_ |= 0x800;
                        }
                        result.bitField0_ = to_bitField0_;
                        onBuilt();
                        return result;
                    }

                    public Builder clone() {
                        return (Builder) super.clone();
                    }

                    public Builder setField(Descriptors.FieldDescriptor field, Object value) {
                        return (Builder) super.setField(field, value);
                    }

                    public Builder clearField(Descriptors.FieldDescriptor field) {
                        return (Builder) super.clearField(field);
                    }

                    public Builder clearOneof(Descriptors.OneofDescriptor oneof) {
                        return (Builder) super.clearOneof(oneof);
                    }

                    public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
                        return (Builder) super.setRepeatedField(field, index, value);
                    }

                    public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
                        return (Builder) super.addRepeatedField(field, value);
                    }

                    public Builder mergeFrom(Message other) {
                        if (other instanceof OmnicommMessageOuterClass.OmnicommMessage.Other.APC)
                            return mergeFrom((OmnicommMessageOuterClass.OmnicommMessage.Other.APC) other);
                        super.mergeFrom(other);
                        return this;
                    }

                    public Builder mergeFrom(OmnicommMessageOuterClass.OmnicommMessage.Other.APC other) {
                        if (other == OmnicommMessageOuterClass.OmnicommMessage.Other.APC.getDefaultInstance())
                            return this;
                        if (other.hasAPCStatus1())
                            setAPCStatus1(other.getAPCStatus1());
                        if (other.hasAPCStatus2())
                            setAPCStatus2(other.getAPCStatus2());
                        if (other.hasAPCStatus3())
                            setAPCStatus3(other.getAPCStatus3());
                        if (other.hasAPCStatus4())
                            setAPCStatus4(other.getAPCStatus4());
                        if (other.hasAPCNumberIn1())
                            setAPCNumberIn1(other.getAPCNumberIn1());
                        if (other.hasAPCNumberOut1())
                            setAPCNumberOut1(other.getAPCNumberOut1());
                        if (other.hasAPCNumberIn2())
                            setAPCNumberIn2(other.getAPCNumberIn2());
                        if (other.hasAPCNumberOut2())
                            setAPCNumberOut2(other.getAPCNumberOut2());
                        if (other.hasAPCNumberIn3())
                            setAPCNumberIn3(other.getAPCNumberIn3());
                        if (other.hasAPCNumberOut31())
                            setAPCNumberOut31(other.getAPCNumberOut31());
                        if (other.hasAPCNumberIn4())
                            setAPCNumberIn4(other.getAPCNumberIn4());
                        if (other.hasAPCNumberOut4())
                            setAPCNumberOut4(other.getAPCNumberOut4());
                        mergeUnknownFields(other.unknownFields);
                        onChanged();
                        return this;
                    }

                    public final boolean isInitialized() {
                        return true;
                    }

                    public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                        OmnicommMessageOuterClass.OmnicommMessage.Other.APC parsedMessage = null;
                        try {
                            parsedMessage = (OmnicommMessageOuterClass.OmnicommMessage.Other.APC) OmnicommMessageOuterClass.OmnicommMessage.Other.APC.PARSER.parsePartialFrom(input, extensionRegistry);
                        } catch (InvalidProtocolBufferException e) {
                            parsedMessage = (OmnicommMessageOuterClass.OmnicommMessage.Other.APC) e.getUnfinishedMessage();
                            throw e.unwrapIOException();
                        } finally {
                            if (parsedMessage != null)
                                mergeFrom(parsedMessage);
                        }
                        return this;
                    }

                    public boolean hasAPCStatus1() {
                        return ((this.bitField0_ & 0x1) != 0);
                    }

                    public int getAPCStatus1() {
                        return this.aPCStatus1_;
                    }

                    public Builder setAPCStatus1(int value) {
                        this.bitField0_ |= 0x1;
                        this.aPCStatus1_ = value;
                        onChanged();
                        return this;
                    }

                    public Builder clearAPCStatus1() {
                        this.bitField0_ &= 0xFFFFFFFE;
                        this.aPCStatus1_ = 0;
                        onChanged();
                        return this;
                    }

                    public boolean hasAPCStatus2() {
                        return ((this.bitField0_ & 0x2) != 0);
                    }

                    public int getAPCStatus2() {
                        return this.aPCStatus2_;
                    }

                    public Builder setAPCStatus2(int value) {
                        this.bitField0_ |= 0x2;
                        this.aPCStatus2_ = value;
                        onChanged();
                        return this;
                    }

                    public Builder clearAPCStatus2() {
                        this.bitField0_ &= 0xFFFFFFFD;
                        this.aPCStatus2_ = 0;
                        onChanged();
                        return this;
                    }

                    public boolean hasAPCStatus3() {
                        return ((this.bitField0_ & 0x4) != 0);
                    }

                    public int getAPCStatus3() {
                        return this.aPCStatus3_;
                    }

                    public Builder setAPCStatus3(int value) {
                        this.bitField0_ |= 0x4;
                        this.aPCStatus3_ = value;
                        onChanged();
                        return this;
                    }

                    public Builder clearAPCStatus3() {
                        this.bitField0_ &= 0xFFFFFFFB;
                        this.aPCStatus3_ = 0;
                        onChanged();
                        return this;
                    }

                    public boolean hasAPCStatus4() {
                        return ((this.bitField0_ & 0x8) != 0);
                    }

                    public int getAPCStatus4() {
                        return this.aPCStatus4_;
                    }

                    public Builder setAPCStatus4(int value) {
                        this.bitField0_ |= 0x8;
                        this.aPCStatus4_ = value;
                        onChanged();
                        return this;
                    }

                    public Builder clearAPCStatus4() {
                        this.bitField0_ &= 0xFFFFFFF7;
                        this.aPCStatus4_ = 0;
                        onChanged();
                        return this;
                    }

                    public boolean hasAPCNumberIn1() {
                        return ((this.bitField0_ & 0x10) != 0);
                    }

                    public int getAPCNumberIn1() {
                        return this.aPCNumberIn1_;
                    }

                    public Builder setAPCNumberIn1(int value) {
                        this.bitField0_ |= 0x10;
                        this.aPCNumberIn1_ = value;
                        onChanged();
                        return this;
                    }

                    public Builder clearAPCNumberIn1() {
                        this.bitField0_ &= 0xFFFFFFEF;
                        this.aPCNumberIn1_ = 0;
                        onChanged();
                        return this;
                    }

                    public boolean hasAPCNumberOut1() {
                        return ((this.bitField0_ & 0x20) != 0);
                    }

                    public int getAPCNumberOut1() {
                        return this.aPCNumberOut1_;
                    }

                    public Builder setAPCNumberOut1(int value) {
                        this.bitField0_ |= 0x20;
                        this.aPCNumberOut1_ = value;
                        onChanged();
                        return this;
                    }

                    public Builder clearAPCNumberOut1() {
                        this.bitField0_ &= 0xFFFFFFDF;
                        this.aPCNumberOut1_ = 0;
                        onChanged();
                        return this;
                    }

                    public boolean hasAPCNumberIn2() {
                        return ((this.bitField0_ & 0x40) != 0);
                    }

                    public int getAPCNumberIn2() {
                        return this.aPCNumberIn2_;
                    }

                    public Builder setAPCNumberIn2(int value) {
                        this.bitField0_ |= 0x40;
                        this.aPCNumberIn2_ = value;
                        onChanged();
                        return this;
                    }

                    public Builder clearAPCNumberIn2() {
                        this.bitField0_ &= 0xFFFFFFBF;
                        this.aPCNumberIn2_ = 0;
                        onChanged();
                        return this;
                    }

                    public boolean hasAPCNumberOut2() {
                        return ((this.bitField0_ & 0x80) != 0);
                    }

                    public int getAPCNumberOut2() {
                        return this.aPCNumberOut2_;
                    }

                    public Builder setAPCNumberOut2(int value) {
                        this.bitField0_ |= 0x80;
                        this.aPCNumberOut2_ = value;
                        onChanged();
                        return this;
                    }

                    public Builder clearAPCNumberOut2() {
                        this.bitField0_ &= 0xFFFFFF7F;
                        this.aPCNumberOut2_ = 0;
                        onChanged();
                        return this;
                    }

                    public boolean hasAPCNumberIn3() {
                        return ((this.bitField0_ & 0x100) != 0);
                    }

                    public int getAPCNumberIn3() {
                        return this.aPCNumberIn3_;
                    }

                    public Builder setAPCNumberIn3(int value) {
                        this.bitField0_ |= 0x100;
                        this.aPCNumberIn3_ = value;
                        onChanged();
                        return this;
                    }

                    public Builder clearAPCNumberIn3() {
                        this.bitField0_ &= 0xFFFFFEFF;
                        this.aPCNumberIn3_ = 0;
                        onChanged();
                        return this;
                    }

                    public boolean hasAPCNumberOut31() {
                        return ((this.bitField0_ & 0x200) != 0);
                    }

                    public int getAPCNumberOut31() {
                        return this.aPCNumberOut31_;
                    }

                    public Builder setAPCNumberOut31(int value) {
                        this.bitField0_ |= 0x200;
                        this.aPCNumberOut31_ = value;
                        onChanged();
                        return this;
                    }

                    public Builder clearAPCNumberOut31() {
                        this.bitField0_ &= 0xFFFFFDFF;
                        this.aPCNumberOut31_ = 0;
                        onChanged();
                        return this;
                    }

                    public boolean hasAPCNumberIn4() {
                        return ((this.bitField0_ & 0x400) != 0);
                    }

                    public int getAPCNumberIn4() {
                        return this.aPCNumberIn4_;
                    }

                    public Builder setAPCNumberIn4(int value) {
                        this.bitField0_ |= 0x400;
                        this.aPCNumberIn4_ = value;
                        onChanged();
                        return this;
                    }

                    public Builder clearAPCNumberIn4() {
                        this.bitField0_ &= 0xFFFFFBFF;
                        this.aPCNumberIn4_ = 0;
                        onChanged();
                        return this;
                    }

                    public boolean hasAPCNumberOut4() {
                        return ((this.bitField0_ & 0x800) != 0);
                    }

                    public int getAPCNumberOut4() {
                        return this.aPCNumberOut4_;
                    }

                    public Builder setAPCNumberOut4(int value) {
                        this.bitField0_ |= 0x800;
                        this.aPCNumberOut4_ = value;
                        onChanged();
                        return this;
                    }

                    public Builder clearAPCNumberOut4() {
                        this.bitField0_ &= 0xFFFFF7FF;
                        this.aPCNumberOut4_ = 0;
                        onChanged();
                        return this;
                    }

                    public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
                        return (Builder) super.setUnknownFields(unknownFields);
                    }

                    public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
                        return (Builder) super.mergeUnknownFields(unknownFields);
                    }
                }

                private static final APC DEFAULT_INSTANCE = new APC();

                public static APC getDefaultInstance() {
                    return DEFAULT_INSTANCE;
                }

                @Deprecated
                public static final Parser<APC> PARSER = (Parser<APC>) new AbstractParser<APC>() {
                    public OmnicommMessageOuterClass.OmnicommMessage.Other.APC parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                        return new OmnicommMessageOuterClass.OmnicommMessage.Other.APC(input, extensionRegistry);
                    }
                };

                public static Parser<APC> parser() {
                    return PARSER;
                }

                public Parser<APC> getParserForType() {
                    return PARSER;
                }

                public APC getDefaultInstanceForType() {
                    return DEFAULT_INSTANCE;
                }
            }

            public static final class Builder extends GeneratedMessageV3.Builder<APC.Builder> implements APCOrBuilder {
                private int bitField0_;

                private int aPCStatus1_;

                private int aPCStatus2_;

                private int aPCStatus3_;

                private int aPCStatus4_;

                private int aPCNumberIn1_;

                private int aPCNumberOut1_;

                private int aPCNumberIn2_;

                private int aPCNumberOut2_;

                private int aPCNumberIn3_;

                private int aPCNumberOut31_;

                private int aPCNumberIn4_;

                private int aPCNumberOut4_;

                public static final Descriptors.Descriptor getDescriptor() {
                    return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_APC_descriptor;
                }

                protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
                    return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_APC_fieldAccessorTable.ensureFieldAccessorsInitialized(OmnicommMessageOuterClass.OmnicommMessage.Other.APC.class, Builder.class);
                }

                private Builder() {
                    maybeForceBuilderInitialization();
                }

                private Builder(GeneratedMessageV3.BuilderParent parent) {
                    super(parent);
                    maybeForceBuilderInitialization();
                }

                private void maybeForceBuilderInitialization() {
                    if (OmnicommMessageOuterClass.OmnicommMessage.Other.APC.alwaysUseFieldBuilders) ;
                }

                public Builder clear() {
                    super.clear();
                    this.aPCStatus1_ = 0;
                    this.bitField0_ &= 0xFFFFFFFE;
                    this.aPCStatus2_ = 0;
                    this.bitField0_ &= 0xFFFFFFFD;
                    this.aPCStatus3_ = 0;
                    this.bitField0_ &= 0xFFFFFFFB;
                    this.aPCStatus4_ = 0;
                    this.bitField0_ &= 0xFFFFFFF7;
                    this.aPCNumberIn1_ = 0;
                    this.bitField0_ &= 0xFFFFFFEF;
                    this.aPCNumberOut1_ = 0;
                    this.bitField0_ &= 0xFFFFFFDF;
                    this.aPCNumberIn2_ = 0;
                    this.bitField0_ &= 0xFFFFFFBF;
                    this.aPCNumberOut2_ = 0;
                    this.bitField0_ &= 0xFFFFFF7F;
                    this.aPCNumberIn3_ = 0;
                    this.bitField0_ &= 0xFFFFFEFF;
                    this.aPCNumberOut31_ = 0;
                    this.bitField0_ &= 0xFFFFFDFF;
                    this.aPCNumberIn4_ = 0;
                    this.bitField0_ &= 0xFFFFFBFF;
                    this.aPCNumberOut4_ = 0;
                    this.bitField0_ &= 0xFFFFF7FF;
                    return this;
                }

                public Descriptors.Descriptor getDescriptorForType() {
                    return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_APC_descriptor;
                }

                public OmnicommMessageOuterClass.OmnicommMessage.Other.APC getDefaultInstanceForType() {
                    return OmnicommMessageOuterClass.OmnicommMessage.Other.APC.getDefaultInstance();
                }

                public OmnicommMessageOuterClass.OmnicommMessage.Other.APC build() {
                    OmnicommMessageOuterClass.OmnicommMessage.Other.APC result = buildPartial();
                    if (!result.isInitialized())
                        throw newUninitializedMessageException(result);
                    return result;
                }

                public OmnicommMessageOuterClass.OmnicommMessage.Other.APC buildPartial() {
                    OmnicommMessageOuterClass.OmnicommMessage.Other.APC result = new OmnicommMessageOuterClass.OmnicommMessage.Other.APC(this);
                    int from_bitField0_ = this.bitField0_;
                    int to_bitField0_ = 0;
                    if ((from_bitField0_ & 0x1) != 0) {
                        result.aPCStatus1_ = this.aPCStatus1_;
                        to_bitField0_ |= 0x1;
                    }
                    if ((from_bitField0_ & 0x2) != 0) {
                        result.aPCStatus2_ = this.aPCStatus2_;
                        to_bitField0_ |= 0x2;
                    }
                    if ((from_bitField0_ & 0x4) != 0) {
                        result.aPCStatus3_ = this.aPCStatus3_;
                        to_bitField0_ |= 0x4;
                    }
                    if ((from_bitField0_ & 0x8) != 0) {
                        result.aPCStatus4_ = this.aPCStatus4_;
                        to_bitField0_ |= 0x8;
                    }
                    if ((from_bitField0_ & 0x10) != 0) {
                        result.aPCNumberIn1_ = this.aPCNumberIn1_;
                        to_bitField0_ |= 0x10;
                    }
                    if ((from_bitField0_ & 0x20) != 0) {
                        result.aPCNumberOut1_ = this.aPCNumberOut1_;
                        to_bitField0_ |= 0x20;
                    }
                    if ((from_bitField0_ & 0x40) != 0) {
                        result.aPCNumberIn2_ = this.aPCNumberIn2_;
                        to_bitField0_ |= 0x40;
                    }
                    if ((from_bitField0_ & 0x80) != 0) {
                        result.aPCNumberOut2_ = this.aPCNumberOut2_;
                        to_bitField0_ |= 0x80;
                    }
                    if ((from_bitField0_ & 0x100) != 0) {
                        result.aPCNumberIn3_ = this.aPCNumberIn3_;
                        to_bitField0_ |= 0x100;
                    }
                    if ((from_bitField0_ & 0x200) != 0) {
                        result.aPCNumberOut31_ = this.aPCNumberOut31_;
                        to_bitField0_ |= 0x200;
                    }
                    if ((from_bitField0_ & 0x400) != 0) {
                        result.aPCNumberIn4_ = this.aPCNumberIn4_;
                        to_bitField0_ |= 0x400;
                    }
                    if ((from_bitField0_ & 0x800) != 0) {
                        result.aPCNumberOut4_ = this.aPCNumberOut4_;
                        to_bitField0_ |= 0x800;
                    }
                    result.bitField0_ = to_bitField0_;
                    onBuilt();
                    return result;
                }

                public Builder clone() {
                    return (Builder) super.clone();
                }

                public Builder setField(Descriptors.FieldDescriptor field, Object value) {
                    return (Builder) super.setField(field, value);
                }

                public Builder clearField(Descriptors.FieldDescriptor field) {
                    return (Builder) super.clearField(field);
                }

                public Builder clearOneof(Descriptors.OneofDescriptor oneof) {
                    return (Builder) super.clearOneof(oneof);
                }

                public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
                    return (Builder) super.setRepeatedField(field, index, value);
                }

                public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
                    return (Builder) super.addRepeatedField(field, value);
                }

                public Builder mergeFrom(Message other) {
                    if (other instanceof OmnicommMessageOuterClass.OmnicommMessage.Other.APC)
                        return mergeFrom((OmnicommMessageOuterClass.OmnicommMessage.Other.APC) other);
                    super.mergeFrom(other);
                    return this;
                }

                public Builder mergeFrom(OmnicommMessageOuterClass.OmnicommMessage.Other.APC other) {
                    if (other == OmnicommMessageOuterClass.OmnicommMessage.Other.APC.getDefaultInstance())
                        return this;
                    if (other.hasAPCStatus1())
                        setAPCStatus1(other.getAPCStatus1());
                    if (other.hasAPCStatus2())
                        setAPCStatus2(other.getAPCStatus2());
                    if (other.hasAPCStatus3())
                        setAPCStatus3(other.getAPCStatus3());
                    if (other.hasAPCStatus4())
                        setAPCStatus4(other.getAPCStatus4());
                    if (other.hasAPCNumberIn1())
                        setAPCNumberIn1(other.getAPCNumberIn1());
                    if (other.hasAPCNumberOut1())
                        setAPCNumberOut1(other.getAPCNumberOut1());
                    if (other.hasAPCNumberIn2())
                        setAPCNumberIn2(other.getAPCNumberIn2());
                    if (other.hasAPCNumberOut2())
                        setAPCNumberOut2(other.getAPCNumberOut2());
                    if (other.hasAPCNumberIn3())
                        setAPCNumberIn3(other.getAPCNumberIn3());
                    if (other.hasAPCNumberOut31())
                        setAPCNumberOut31(other.getAPCNumberOut31());
                    if (other.hasAPCNumberIn4())
                        setAPCNumberIn4(other.getAPCNumberIn4());
                    if (other.hasAPCNumberOut4())
                        setAPCNumberOut4(other.getAPCNumberOut4());
                    mergeUnknownFields(other.unknownFields);
                    onChanged();
                    return this;
                }

                public final boolean isInitialized() {
                    return true;
                }

                public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                    OmnicommMessageOuterClass.OmnicommMessage.Other.APC parsedMessage = null;
                    try {
                        parsedMessage = (OmnicommMessageOuterClass.OmnicommMessage.Other.APC) OmnicommMessageOuterClass.OmnicommMessage.Other.APC.PARSER.parsePartialFrom(input, extensionRegistry);
                    } catch (InvalidProtocolBufferException e) {
                        parsedMessage = (OmnicommMessageOuterClass.OmnicommMessage.Other.APC) e.getUnfinishedMessage();
                        throw e.unwrapIOException();
                    } finally {
                        if (parsedMessage != null)
                            mergeFrom(parsedMessage);
                    }
                    return this;
                }

                public boolean hasAPCStatus1() {
                    return ((this.bitField0_ & 0x1) != 0);
                }

                public int getAPCStatus1() {
                    return this.aPCStatus1_;
                }

                public Builder setAPCStatus1(int value) {
                    this.bitField0_ |= 0x1;
                    this.aPCStatus1_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearAPCStatus1() {
                    this.bitField0_ &= 0xFFFFFFFE;
                    this.aPCStatus1_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasAPCStatus2() {
                    return ((this.bitField0_ & 0x2) != 0);
                }

                public int getAPCStatus2() {
                    return this.aPCStatus2_;
                }

                public Builder setAPCStatus2(int value) {
                    this.bitField0_ |= 0x2;
                    this.aPCStatus2_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearAPCStatus2() {
                    this.bitField0_ &= 0xFFFFFFFD;
                    this.aPCStatus2_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasAPCStatus3() {
                    return ((this.bitField0_ & 0x4) != 0);
                }

                public int getAPCStatus3() {
                    return this.aPCStatus3_;
                }

                public Builder setAPCStatus3(int value) {
                    this.bitField0_ |= 0x4;
                    this.aPCStatus3_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearAPCStatus3() {
                    this.bitField0_ &= 0xFFFFFFFB;
                    this.aPCStatus3_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasAPCStatus4() {
                    return ((this.bitField0_ & 0x8) != 0);
                }

                public int getAPCStatus4() {
                    return this.aPCStatus4_;
                }

                public Builder setAPCStatus4(int value) {
                    this.bitField0_ |= 0x8;
                    this.aPCStatus4_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearAPCStatus4() {
                    this.bitField0_ &= 0xFFFFFFF7;
                    this.aPCStatus4_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasAPCNumberIn1() {
                    return ((this.bitField0_ & 0x10) != 0);
                }

                public int getAPCNumberIn1() {
                    return this.aPCNumberIn1_;
                }

                public Builder setAPCNumberIn1(int value) {
                    this.bitField0_ |= 0x10;
                    this.aPCNumberIn1_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearAPCNumberIn1() {
                    this.bitField0_ &= 0xFFFFFFEF;
                    this.aPCNumberIn1_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasAPCNumberOut1() {
                    return ((this.bitField0_ & 0x20) != 0);
                }

                public int getAPCNumberOut1() {
                    return this.aPCNumberOut1_;
                }

                public Builder setAPCNumberOut1(int value) {
                    this.bitField0_ |= 0x20;
                    this.aPCNumberOut1_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearAPCNumberOut1() {
                    this.bitField0_ &= 0xFFFFFFDF;
                    this.aPCNumberOut1_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasAPCNumberIn2() {
                    return ((this.bitField0_ & 0x40) != 0);
                }

                public int getAPCNumberIn2() {
                    return this.aPCNumberIn2_;
                }

                public Builder setAPCNumberIn2(int value) {
                    this.bitField0_ |= 0x40;
                    this.aPCNumberIn2_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearAPCNumberIn2() {
                    this.bitField0_ &= 0xFFFFFFBF;
                    this.aPCNumberIn2_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasAPCNumberOut2() {
                    return ((this.bitField0_ & 0x80) != 0);
                }

                public int getAPCNumberOut2() {
                    return this.aPCNumberOut2_;
                }

                public Builder setAPCNumberOut2(int value) {
                    this.bitField0_ |= 0x80;
                    this.aPCNumberOut2_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearAPCNumberOut2() {
                    this.bitField0_ &= 0xFFFFFF7F;
                    this.aPCNumberOut2_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasAPCNumberIn3() {
                    return ((this.bitField0_ & 0x100) != 0);
                }

                public int getAPCNumberIn3() {
                    return this.aPCNumberIn3_;
                }

                public Builder setAPCNumberIn3(int value) {
                    this.bitField0_ |= 0x100;
                    this.aPCNumberIn3_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearAPCNumberIn3() {
                    this.bitField0_ &= 0xFFFFFEFF;
                    this.aPCNumberIn3_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasAPCNumberOut31() {
                    return ((this.bitField0_ & 0x200) != 0);
                }

                public int getAPCNumberOut31() {
                    return this.aPCNumberOut31_;
                }

                public Builder setAPCNumberOut31(int value) {
                    this.bitField0_ |= 0x200;
                    this.aPCNumberOut31_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearAPCNumberOut31() {
                    this.bitField0_ &= 0xFFFFFDFF;
                    this.aPCNumberOut31_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasAPCNumberIn4() {
                    return ((this.bitField0_ & 0x400) != 0);
                }

                public int getAPCNumberIn4() {
                    return this.aPCNumberIn4_;
                }

                public Builder setAPCNumberIn4(int value) {
                    this.bitField0_ |= 0x400;
                    this.aPCNumberIn4_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearAPCNumberIn4() {
                    this.bitField0_ &= 0xFFFFFBFF;
                    this.aPCNumberIn4_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasAPCNumberOut4() {
                    return ((this.bitField0_ & 0x800) != 0);
                }

                public int getAPCNumberOut4() {
                    return this.aPCNumberOut4_;
                }

                public Builder setAPCNumberOut4(int value) {
                    this.bitField0_ |= 0x800;
                    this.aPCNumberOut4_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearAPCNumberOut4() {
                    this.bitField0_ &= 0xFFFFF7FF;
                    this.aPCNumberOut4_ = 0;
                    onChanged();
                    return this;
                }

                public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
                    return (Builder) super.setUnknownFields(unknownFields);
                }

                public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
                    return (Builder) super.mergeUnknownFields(unknownFields);
                }
            }

            public static final class MobileEye extends GeneratedMessageV3 implements MobileEyeOrBuilder {
                private static final long serialVersionUID = 0L;

                private int bitField0_;

                public static final int MOBILEEYESTATUS_FIELD_NUMBER = 1;

                private int mobileEyeStatus_;

                public static final int CAN700_FIELD_NUMBER = 2;

                private List<ByteString> cAN700_;

                public static final int CAN727_FIELD_NUMBER = 3;

                private List<ByteString> cAN727_;

                public static final int CAN760_FIELD_NUMBER = 4;

                private List<ByteString> cAN760_;

                private byte memoizedIsInitialized;

                private MobileEye(GeneratedMessageV3.Builder<?> builder) {
                    super(builder);
                    this.memoizedIsInitialized = -1;
                }

                private MobileEye() {
                    this.memoizedIsInitialized = -1;
                    this.cAN700_ = Collections.emptyList();
                    this.cAN727_ = Collections.emptyList();
                    this.cAN760_ = Collections.emptyList();
                }

                protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) {
                    return new MobileEye();
                }

                public final UnknownFieldSet getUnknownFields() {
                    return this.unknownFields;
                }

                private MobileEye(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                    this();
                    if (extensionRegistry == null)
                        throw new NullPointerException();
                    int mutable_bitField0_ = 0;
                    UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
                    try {
                        boolean done = false;
                        while (!done) {
                            int tag = input.readTag();
                            switch (tag) {
                                case 0:
                                    done = true;
                                    continue;
                                case 8:
                                    this.bitField0_ |= 0x1;
                                    this.mobileEyeStatus_ = input.readUInt32();
                                    continue;
                                case 18:
                                    if ((mutable_bitField0_ & 0x2) == 0) {
                                        this.cAN700_ = new ArrayList<>();
                                        mutable_bitField0_ |= 0x2;
                                    }
                                    this.cAN700_.add(input.readBytes());
                                    continue;
                                case 26:
                                    if ((mutable_bitField0_ & 0x4) == 0) {
                                        this.cAN727_ = new ArrayList<>();
                                        mutable_bitField0_ |= 0x4;
                                    }
                                    this.cAN727_.add(input.readBytes());
                                    continue;
                                case 34:
                                    if ((mutable_bitField0_ & 0x8) == 0) {
                                        this.cAN760_ = new ArrayList<>();
                                        mutable_bitField0_ |= 0x8;
                                    }
                                    this.cAN760_.add(input.readBytes());
                                    continue;
                            }
                            if (!parseUnknownField(input, unknownFields, extensionRegistry, tag))
                                done = true;
                        }
                    } catch (InvalidProtocolBufferException e) {
                        throw e.setUnfinishedMessage(this);
                    } catch (IOException e) {
                        throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this);
                    } finally {
                        if ((mutable_bitField0_ & 0x2) != 0)
                            this.cAN700_ = Collections.unmodifiableList(this.cAN700_);
                        if ((mutable_bitField0_ & 0x4) != 0)
                            this.cAN727_ = Collections.unmodifiableList(this.cAN727_);
                        if ((mutable_bitField0_ & 0x8) != 0)
                            this.cAN760_ = Collections.unmodifiableList(this.cAN760_);
                        this.unknownFields = unknownFields.build();
                        makeExtensionsImmutable();
                    }
                }

                public static final Descriptors.Descriptor getDescriptor() {
                    return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_MobileEye_descriptor;
                }

                protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
                    return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_MobileEye_fieldAccessorTable.ensureFieldAccessorsInitialized(MobileEye.class, Builder.class);
                }

                public boolean hasMobileEyeStatus() {
                    return ((this.bitField0_ & 0x1) != 0);
                }

                public int getMobileEyeStatus() {
                    return this.mobileEyeStatus_;
                }

                public List<ByteString> getCAN700List() {
                    return this.cAN700_;
                }

                public int getCAN700Count() {
                    return this.cAN700_.size();
                }

                public ByteString getCAN700(int index) {
                    return this.cAN700_.get(index);
                }

                public List<ByteString> getCAN727List() {
                    return this.cAN727_;
                }

                public int getCAN727Count() {
                    return this.cAN727_.size();
                }

                public ByteString getCAN727(int index) {
                    return this.cAN727_.get(index);
                }

                public List<ByteString> getCAN760List() {
                    return this.cAN760_;
                }

                public int getCAN760Count() {
                    return this.cAN760_.size();
                }

                public ByteString getCAN760(int index) {
                    return this.cAN760_.get(index);
                }

                public final boolean isInitialized() {
                    byte isInitialized = this.memoizedIsInitialized;
                    if (isInitialized == 1)
                        return true;
                    if (isInitialized == 0)
                        return false;
                    this.memoizedIsInitialized = 1;
                    return true;
                }

                public void writeTo(CodedOutputStream output) throws IOException {
                    if ((this.bitField0_ & 0x1) != 0)
                        output.writeUInt32(1, this.mobileEyeStatus_);
                    int i;
                    for (i = 0; i < this.cAN700_.size(); i++)
                        output.writeBytes(2, this.cAN700_.get(i));
                    for (i = 0; i < this.cAN727_.size(); i++)
                        output.writeBytes(3, this.cAN727_.get(i));
                    for (i = 0; i < this.cAN760_.size(); i++)
                        output.writeBytes(4, this.cAN760_.get(i));
                    this.unknownFields.writeTo(output);
                }

                public int getSerializedSize() {
                    int size = this.memoizedSize;
                    if (size != -1)
                        return size;
                    size = 0;
                    if ((this.bitField0_ & 0x1) != 0)
                        size += CodedOutputStream.computeUInt32Size(1, this.mobileEyeStatus_);
                    int dataSize = 0;
                    int i;
                    for (i = 0; i < this.cAN700_.size(); i++)
                        dataSize += CodedOutputStream.computeBytesSizeNoTag(this.cAN700_.get(i));
                    size += dataSize;
                    size += 1 * getCAN700List().size();
                    dataSize = 0;
                    for (i = 0; i < this.cAN727_.size(); i++)
                        dataSize += CodedOutputStream.computeBytesSizeNoTag(this.cAN727_.get(i));
                    size += dataSize;
                    size += 1 * getCAN727List().size();
                    dataSize = 0;
                    for (i = 0; i < this.cAN760_.size(); i++)
                        dataSize += CodedOutputStream.computeBytesSizeNoTag(this.cAN760_.get(i));
                    size += dataSize;
                    size += 1 * getCAN760List().size();
                    size += this.unknownFields.getSerializedSize();
                    this.memoizedSize = size;
                    return size;
                }

                public boolean equals(Object obj) {
                    if (obj == this)
                        return true;
                    if (!(obj instanceof MobileEye))
                        return super.equals(obj);
                    MobileEye other = (MobileEye) obj;
                    if (hasMobileEyeStatus() != other.hasMobileEyeStatus())
                        return false;
                    if (hasMobileEyeStatus() && getMobileEyeStatus() != other.getMobileEyeStatus())
                        return false;
                    if (!getCAN700List().equals(other.getCAN700List()))
                        return false;
                    if (!getCAN727List().equals(other.getCAN727List()))
                        return false;
                    if (!getCAN760List().equals(other.getCAN760List()))
                        return false;
                    if (!this.unknownFields.equals(other.unknownFields))
                        return false;
                    return true;
                }

                public int hashCode() {
                    if (this.memoizedHashCode != 0)
                        return this.memoizedHashCode;
                    int hash = 41;
                    hash = 19 * hash + getDescriptor().hashCode();
                    if (hasMobileEyeStatus()) {
                        hash = 37 * hash + 1;
                        hash = 53 * hash + getMobileEyeStatus();
                    }
                    if (getCAN700Count() > 0) {
                        hash = 37 * hash + 2;
                        hash = 53 * hash + getCAN700List().hashCode();
                    }
                    if (getCAN727Count() > 0) {
                        hash = 37 * hash + 3;
                        hash = 53 * hash + getCAN727List().hashCode();
                    }
                    if (getCAN760Count() > 0) {
                        hash = 37 * hash + 4;
                        hash = 53 * hash + getCAN760List().hashCode();
                    }
                    hash = 29 * hash + this.unknownFields.hashCode();
                    this.memoizedHashCode = hash;
                    return hash;
                }

                public static MobileEye parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
                    return (MobileEye) PARSER.parseFrom(data);
                }

                public static MobileEye parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                    return (MobileEye) PARSER.parseFrom(data, extensionRegistry);
                }

                public static MobileEye parseFrom(ByteString data) throws InvalidProtocolBufferException {
                    return (MobileEye) PARSER.parseFrom(data);
                }

                public static MobileEye parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                    return (MobileEye) PARSER.parseFrom(data, extensionRegistry);
                }

                public static MobileEye parseFrom(byte[] data) throws InvalidProtocolBufferException {
                    return (MobileEye) PARSER.parseFrom(data);
                }

                public static MobileEye parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                    return (MobileEye) PARSER.parseFrom(data, extensionRegistry);
                }

                public static MobileEye parseFrom(InputStream input) throws IOException {
                    return (MobileEye) GeneratedMessageV3.parseWithIOException(PARSER, input);
                }

                public static MobileEye parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                    return (MobileEye) GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
                }

                public static MobileEye parseDelimitedFrom(InputStream input) throws IOException {
                    return (MobileEye) GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
                }

                public static MobileEye parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                    return (MobileEye) GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
                }

                public static MobileEye parseFrom(CodedInputStream input) throws IOException {
                    return (MobileEye) GeneratedMessageV3.parseWithIOException(PARSER, input);
                }

                public static MobileEye parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                    return (MobileEye) GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
                }

                public Builder newBuilderForType() {
                    return newBuilder();
                }

                public static Builder newBuilder() {
                    return DEFAULT_INSTANCE.toBuilder();
                }

                public static Builder newBuilder(MobileEye prototype) {
                    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
                }

                public Builder toBuilder() {
                    return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder()).mergeFrom(this);
                }

                protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
                    Builder builder = new Builder(parent);
                    return builder;
                }

                public static final class Builder extends GeneratedMessageV3.Builder<Builder> implements OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEyeOrBuilder {
                    private int bitField0_;

                    private int mobileEyeStatus_;

                    private List<ByteString> cAN700_;

                    private List<ByteString> cAN727_;

                    private List<ByteString> cAN760_;

                    public static final Descriptors.Descriptor getDescriptor() {
                        return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_MobileEye_descriptor;
                    }

                    protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
                        return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_MobileEye_fieldAccessorTable.ensureFieldAccessorsInitialized(OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye.class, Builder.class);
                    }

                    private Builder() {
                        this.cAN700_ = Collections.emptyList();
                        this.cAN727_ = Collections.emptyList();
                        this.cAN760_ = Collections.emptyList();
                        maybeForceBuilderInitialization();
                    }

                    private Builder(GeneratedMessageV3.BuilderParent parent) {
                        super(parent);
                        this.cAN700_ = Collections.emptyList();
                        this.cAN727_ = Collections.emptyList();
                        this.cAN760_ = Collections.emptyList();
                        maybeForceBuilderInitialization();
                    }

                    private void maybeForceBuilderInitialization() {
                        if (OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye.alwaysUseFieldBuilders) ;
                    }

                    public Builder clear() {
                        super.clear();
                        this.mobileEyeStatus_ = 0;
                        this.bitField0_ &= 0xFFFFFFFE;
                        this.cAN700_ = Collections.emptyList();
                        this.bitField0_ &= 0xFFFFFFFD;
                        this.cAN727_ = Collections.emptyList();
                        this.bitField0_ &= 0xFFFFFFFB;
                        this.cAN760_ = Collections.emptyList();
                        this.bitField0_ &= 0xFFFFFFF7;
                        return this;
                    }

                    public Descriptors.Descriptor getDescriptorForType() {
                        return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_MobileEye_descriptor;
                    }

                    public OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye getDefaultInstanceForType() {
                        return OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye.getDefaultInstance();
                    }

                    public OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye build() {
                        OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye result = buildPartial();
                        if (!result.isInitialized())
                            throw newUninitializedMessageException(result);
                        return result;
                    }

                    public OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye buildPartial() {
                        OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye result = new OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye(this);
                        int from_bitField0_ = this.bitField0_;
                        int to_bitField0_ = 0;
                        if ((from_bitField0_ & 0x1) != 0) {
                            result.mobileEyeStatus_ = this.mobileEyeStatus_;
                            to_bitField0_ |= 0x1;
                        }
                        if ((this.bitField0_ & 0x2) != 0) {
                            this.cAN700_ = Collections.unmodifiableList(this.cAN700_);
                            this.bitField0_ &= 0xFFFFFFFD;
                        }
                        result.cAN700_ = this.cAN700_;
                        if ((this.bitField0_ & 0x4) != 0) {
                            this.cAN727_ = Collections.unmodifiableList(this.cAN727_);
                            this.bitField0_ &= 0xFFFFFFFB;
                        }
                        result.cAN727_ = this.cAN727_;
                        if ((this.bitField0_ & 0x8) != 0) {
                            this.cAN760_ = Collections.unmodifiableList(this.cAN760_);
                            this.bitField0_ &= 0xFFFFFFF7;
                        }
                        result.cAN760_ = this.cAN760_;
                        result.bitField0_ = to_bitField0_;
                        onBuilt();
                        return result;
                    }

                    public Builder clone() {
                        return (Builder) super.clone();
                    }

                    public Builder setField(Descriptors.FieldDescriptor field, Object value) {
                        return (Builder) super.setField(field, value);
                    }

                    public Builder clearField(Descriptors.FieldDescriptor field) {
                        return (Builder) super.clearField(field);
                    }

                    public Builder clearOneof(Descriptors.OneofDescriptor oneof) {
                        return (Builder) super.clearOneof(oneof);
                    }

                    public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
                        return (Builder) super.setRepeatedField(field, index, value);
                    }

                    public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
                        return (Builder) super.addRepeatedField(field, value);
                    }

                    public Builder mergeFrom(Message other) {
                        if (other instanceof OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye)
                            return mergeFrom((OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye) other);
                        super.mergeFrom(other);
                        return this;
                    }

                    public Builder mergeFrom(OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye other) {
                        if (other == OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye.getDefaultInstance())
                            return this;
                        if (other.hasMobileEyeStatus())
                            setMobileEyeStatus(other.getMobileEyeStatus());
                        if (!other.cAN700_.isEmpty()) {
                            if (this.cAN700_.isEmpty()) {
                                this.cAN700_ = other.cAN700_;
                                this.bitField0_ &= 0xFFFFFFFD;
                            } else {
                                ensureCAN700IsMutable();
                                this.cAN700_.addAll(other.cAN700_);
                            }
                            onChanged();
                        }
                        if (!other.cAN727_.isEmpty()) {
                            if (this.cAN727_.isEmpty()) {
                                this.cAN727_ = other.cAN727_;
                                this.bitField0_ &= 0xFFFFFFFB;
                            } else {
                                ensureCAN727IsMutable();
                                this.cAN727_.addAll(other.cAN727_);
                            }
                            onChanged();
                        }
                        if (!other.cAN760_.isEmpty()) {
                            if (this.cAN760_.isEmpty()) {
                                this.cAN760_ = other.cAN760_;
                                this.bitField0_ &= 0xFFFFFFF7;
                            } else {
                                ensureCAN760IsMutable();
                                this.cAN760_.addAll(other.cAN760_);
                            }
                            onChanged();
                        }
                        mergeUnknownFields(other.unknownFields);
                        onChanged();
                        return this;
                    }

                    public final boolean isInitialized() {
                        return true;
                    }

                    public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                        OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye parsedMessage = null;
                        try {
                            parsedMessage = (OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye) OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye.PARSER.parsePartialFrom(input, extensionRegistry);
                        } catch (InvalidProtocolBufferException e) {
                            parsedMessage = (OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye) e.getUnfinishedMessage();
                            throw e.unwrapIOException();
                        } finally {
                            if (parsedMessage != null)
                                mergeFrom(parsedMessage);
                        }
                        return this;
                    }

                    public boolean hasMobileEyeStatus() {
                        return ((this.bitField0_ & 0x1) != 0);
                    }

                    public int getMobileEyeStatus() {
                        return this.mobileEyeStatus_;
                    }

                    public Builder setMobileEyeStatus(int value) {
                        this.bitField0_ |= 0x1;
                        this.mobileEyeStatus_ = value;
                        onChanged();
                        return this;
                    }

                    public Builder clearMobileEyeStatus() {
                        this.bitField0_ &= 0xFFFFFFFE;
                        this.mobileEyeStatus_ = 0;
                        onChanged();
                        return this;
                    }

                    private void ensureCAN700IsMutable() {
                        if ((this.bitField0_ & 0x2) == 0) {
                            this.cAN700_ = new ArrayList<>(this.cAN700_);
                            this.bitField0_ |= 0x2;
                        }
                    }

                    public List<ByteString> getCAN700List() {
                        return ((this.bitField0_ & 0x2) != 0) ? Collections.<ByteString>unmodifiableList(this.cAN700_) : this.cAN700_;
                    }

                    public int getCAN700Count() {
                        return this.cAN700_.size();
                    }

                    public ByteString getCAN700(int index) {
                        return this.cAN700_.get(index);
                    }

                    public Builder setCAN700(int index, ByteString value) {
                        if (value == null)
                            throw new NullPointerException();
                        ensureCAN700IsMutable();
                        this.cAN700_.set(index, value);
                        onChanged();
                        return this;
                    }

                    public Builder addCAN700(ByteString value) {
                        if (value == null)
                            throw new NullPointerException();
                        ensureCAN700IsMutable();
                        this.cAN700_.add(value);
                        onChanged();
                        return this;
                    }

                    public Builder addAllCAN700(Iterable<? extends ByteString> values) {
                        ensureCAN700IsMutable();
                        AbstractMessageLite.Builder.addAll(values, this.cAN700_);
                        onChanged();
                        return this;
                    }

                    public Builder clearCAN700() {
                        this.cAN700_ = Collections.emptyList();
                        this.bitField0_ &= 0xFFFFFFFD;
                        onChanged();
                        return this;
                    }

                    private void ensureCAN727IsMutable() {
                        if ((this.bitField0_ & 0x4) == 0) {
                            this.cAN727_ = new ArrayList<>(this.cAN727_);
                            this.bitField0_ |= 0x4;
                        }
                    }

                    public List<ByteString> getCAN727List() {
                        return ((this.bitField0_ & 0x4) != 0) ? Collections.<ByteString>unmodifiableList(this.cAN727_) : this.cAN727_;
                    }

                    public int getCAN727Count() {
                        return this.cAN727_.size();
                    }

                    public ByteString getCAN727(int index) {
                        return this.cAN727_.get(index);
                    }

                    public Builder setCAN727(int index, ByteString value) {
                        if (value == null)
                            throw new NullPointerException();
                        ensureCAN727IsMutable();
                        this.cAN727_.set(index, value);
                        onChanged();
                        return this;
                    }

                    public Builder addCAN727(ByteString value) {
                        if (value == null)
                            throw new NullPointerException();
                        ensureCAN727IsMutable();
                        this.cAN727_.add(value);
                        onChanged();
                        return this;
                    }

                    public Builder addAllCAN727(Iterable<? extends ByteString> values) {
                        ensureCAN727IsMutable();
                        AbstractMessageLite.Builder.addAll(values, this.cAN727_);
                        onChanged();
                        return this;
                    }

                    public Builder clearCAN727() {
                        this.cAN727_ = Collections.emptyList();
                        this.bitField0_ &= 0xFFFFFFFB;
                        onChanged();
                        return this;
                    }

                    private void ensureCAN760IsMutable() {
                        if ((this.bitField0_ & 0x8) == 0) {
                            this.cAN760_ = new ArrayList<>(this.cAN760_);
                            this.bitField0_ |= 0x8;
                        }
                    }

                    public List<ByteString> getCAN760List() {
                        return ((this.bitField0_ & 0x8) != 0) ? Collections.<ByteString>unmodifiableList(this.cAN760_) : this.cAN760_;
                    }

                    public int getCAN760Count() {
                        return this.cAN760_.size();
                    }

                    public ByteString getCAN760(int index) {
                        return this.cAN760_.get(index);
                    }

                    public Builder setCAN760(int index, ByteString value) {
                        if (value == null)
                            throw new NullPointerException();
                        ensureCAN760IsMutable();
                        this.cAN760_.set(index, value);
                        onChanged();
                        return this;
                    }

                    public Builder addCAN760(ByteString value) {
                        if (value == null)
                            throw new NullPointerException();
                        ensureCAN760IsMutable();
                        this.cAN760_.add(value);
                        onChanged();
                        return this;
                    }

                    public Builder addAllCAN760(Iterable<? extends ByteString> values) {
                        ensureCAN760IsMutable();
                        AbstractMessageLite.Builder.addAll(values, this.cAN760_);
                        onChanged();
                        return this;
                    }

                    public Builder clearCAN760() {
                        this.cAN760_ = Collections.emptyList();
                        this.bitField0_ &= 0xFFFFFFF7;
                        onChanged();
                        return this;
                    }

                    public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
                        return (Builder) super.setUnknownFields(unknownFields);
                    }

                    public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
                        return (Builder) super.mergeUnknownFields(unknownFields);
                    }
                }

                private static final MobileEye DEFAULT_INSTANCE = new MobileEye();

                public static MobileEye getDefaultInstance() {
                    return DEFAULT_INSTANCE;
                }

                @Deprecated
                public static final Parser<MobileEye> PARSER = (Parser<MobileEye>) new AbstractParser<MobileEye>() {
                    public OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                        return new OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye(input, extensionRegistry);
                    }
                };

                public static Parser<MobileEye> parser() {
                    return PARSER;
                }

                public Parser<MobileEye> getParserForType() {
                    return PARSER;
                }

                public MobileEye getDefaultInstanceForType() {
                    return DEFAULT_INSTANCE;
                }
            }

            public static final class Builder extends GeneratedMessageV3.Builder<MobileEye.Builder> implements MobileEyeOrBuilder {
                private int bitField0_;

                private int mobileEyeStatus_;

                private List<ByteString> cAN700_;

                private List<ByteString> cAN727_;

                private List<ByteString> cAN760_;

                public static final Descriptors.Descriptor getDescriptor() {
                    return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_MobileEye_descriptor;
                }

                protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
                    return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_MobileEye_fieldAccessorTable.ensureFieldAccessorsInitialized(OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye.class, Builder.class);
                }

                private Builder() {
                    this.cAN700_ = Collections.emptyList();
                    this.cAN727_ = Collections.emptyList();
                    this.cAN760_ = Collections.emptyList();
                    maybeForceBuilderInitialization();
                }

                private Builder(GeneratedMessageV3.BuilderParent parent) {
                    super(parent);
                    this.cAN700_ = Collections.emptyList();
                    this.cAN727_ = Collections.emptyList();
                    this.cAN760_ = Collections.emptyList();
                    maybeForceBuilderInitialization();
                }

                private void maybeForceBuilderInitialization() {
                    if (OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye.alwaysUseFieldBuilders) ;
                }

                public Builder clear() {
                    super.clear();
                    this.mobileEyeStatus_ = 0;
                    this.bitField0_ &= 0xFFFFFFFE;
                    this.cAN700_ = Collections.emptyList();
                    this.bitField0_ &= 0xFFFFFFFD;
                    this.cAN727_ = Collections.emptyList();
                    this.bitField0_ &= 0xFFFFFFFB;
                    this.cAN760_ = Collections.emptyList();
                    this.bitField0_ &= 0xFFFFFFF7;
                    return this;
                }

                public Descriptors.Descriptor getDescriptorForType() {
                    return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_MobileEye_descriptor;
                }

                public OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye getDefaultInstanceForType() {
                    return OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye.getDefaultInstance();
                }

                public OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye build() {
                    OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye result = buildPartial();
                    if (!result.isInitialized())
                        throw newUninitializedMessageException(result);
                    return result;
                }

                public OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye buildPartial() {
                    OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye result = new OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye(this);
                    int from_bitField0_ = this.bitField0_;
                    int to_bitField0_ = 0;
                    if ((from_bitField0_ & 0x1) != 0) {
                        result.mobileEyeStatus_ = this.mobileEyeStatus_;
                        to_bitField0_ |= 0x1;
                    }
                    if ((this.bitField0_ & 0x2) != 0) {
                        this.cAN700_ = Collections.unmodifiableList(this.cAN700_);
                        this.bitField0_ &= 0xFFFFFFFD;
                    }
                    result.cAN700_ = this.cAN700_;
                    if ((this.bitField0_ & 0x4) != 0) {
                        this.cAN727_ = Collections.unmodifiableList(this.cAN727_);
                        this.bitField0_ &= 0xFFFFFFFB;
                    }
                    result.cAN727_ = this.cAN727_;
                    if ((this.bitField0_ & 0x8) != 0) {
                        this.cAN760_ = Collections.unmodifiableList(this.cAN760_);
                        this.bitField0_ &= 0xFFFFFFF7;
                    }
                    result.cAN760_ = this.cAN760_;
                    result.bitField0_ = to_bitField0_;
                    onBuilt();
                    return result;
                }

                public Builder clone() {
                    return (Builder) super.clone();
                }

                public Builder setField(Descriptors.FieldDescriptor field, Object value) {
                    return (Builder) super.setField(field, value);
                }

                public Builder clearField(Descriptors.FieldDescriptor field) {
                    return (Builder) super.clearField(field);
                }

                public Builder clearOneof(Descriptors.OneofDescriptor oneof) {
                    return (Builder) super.clearOneof(oneof);
                }

                public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
                    return (Builder) super.setRepeatedField(field, index, value);
                }

                public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
                    return (Builder) super.addRepeatedField(field, value);
                }

                public Builder mergeFrom(Message other) {
                    if (other instanceof OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye)
                        return mergeFrom((OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye) other);
                    super.mergeFrom(other);
                    return this;
                }

                public Builder mergeFrom(OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye other) {
                    if (other == OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye.getDefaultInstance())
                        return this;
                    if (other.hasMobileEyeStatus())
                        setMobileEyeStatus(other.getMobileEyeStatus());
                    if (!other.cAN700_.isEmpty()) {
                        if (this.cAN700_.isEmpty()) {
                            this.cAN700_ = other.cAN700_;
                            this.bitField0_ &= 0xFFFFFFFD;
                        } else {
                            ensureCAN700IsMutable();
                            this.cAN700_.addAll(other.cAN700_);
                        }
                        onChanged();
                    }
                    if (!other.cAN727_.isEmpty()) {
                        if (this.cAN727_.isEmpty()) {
                            this.cAN727_ = other.cAN727_;
                            this.bitField0_ &= 0xFFFFFFFB;
                        } else {
                            ensureCAN727IsMutable();
                            this.cAN727_.addAll(other.cAN727_);
                        }
                        onChanged();
                    }
                    if (!other.cAN760_.isEmpty()) {
                        if (this.cAN760_.isEmpty()) {
                            this.cAN760_ = other.cAN760_;
                            this.bitField0_ &= 0xFFFFFFF7;
                        } else {
                            ensureCAN760IsMutable();
                            this.cAN760_.addAll(other.cAN760_);
                        }
                        onChanged();
                    }
                    mergeUnknownFields(other.unknownFields);
                    onChanged();
                    return this;
                }

                public final boolean isInitialized() {
                    return true;
                }

                public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                    OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye parsedMessage = null;
                    try {
                        parsedMessage = (OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye) OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye.PARSER.parsePartialFrom(input, extensionRegistry);
                    } catch (InvalidProtocolBufferException e) {
                        parsedMessage = (OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye) e.getUnfinishedMessage();
                        throw e.unwrapIOException();
                    } finally {
                        if (parsedMessage != null)
                            mergeFrom(parsedMessage);
                    }
                    return this;
                }

                public boolean hasMobileEyeStatus() {
                    return ((this.bitField0_ & 0x1) != 0);
                }

                public int getMobileEyeStatus() {
                    return this.mobileEyeStatus_;
                }

                public Builder setMobileEyeStatus(int value) {
                    this.bitField0_ |= 0x1;
                    this.mobileEyeStatus_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearMobileEyeStatus() {
                    this.bitField0_ &= 0xFFFFFFFE;
                    this.mobileEyeStatus_ = 0;
                    onChanged();
                    return this;
                }

                private void ensureCAN700IsMutable() {
                    if ((this.bitField0_ & 0x2) == 0) {
                        this.cAN700_ = new ArrayList<>(this.cAN700_);
                        this.bitField0_ |= 0x2;
                    }
                }

                public List<ByteString> getCAN700List() {
                    return ((this.bitField0_ & 0x2) != 0) ? Collections.<ByteString>unmodifiableList(this.cAN700_) : this.cAN700_;
                }

                public int getCAN700Count() {
                    return this.cAN700_.size();
                }

                public ByteString getCAN700(int index) {
                    return this.cAN700_.get(index);
                }

                public Builder setCAN700(int index, ByteString value) {
                    if (value == null)
                        throw new NullPointerException();
                    ensureCAN700IsMutable();
                    this.cAN700_.set(index, value);
                    onChanged();
                    return this;
                }

                public Builder addCAN700(ByteString value) {
                    if (value == null)
                        throw new NullPointerException();
                    ensureCAN700IsMutable();
                    this.cAN700_.add(value);
                    onChanged();
                    return this;
                }

                public Builder addAllCAN700(Iterable<? extends ByteString> values) {
                    ensureCAN700IsMutable();
                    AbstractMessageLite.Builder.addAll(values, this.cAN700_);
                    onChanged();
                    return this;
                }

                public Builder clearCAN700() {
                    this.cAN700_ = Collections.emptyList();
                    this.bitField0_ &= 0xFFFFFFFD;
                    onChanged();
                    return this;
                }

                private void ensureCAN727IsMutable() {
                    if ((this.bitField0_ & 0x4) == 0) {
                        this.cAN727_ = new ArrayList<>(this.cAN727_);
                        this.bitField0_ |= 0x4;
                    }
                }

                public List<ByteString> getCAN727List() {
                    return ((this.bitField0_ & 0x4) != 0) ? Collections.<ByteString>unmodifiableList(this.cAN727_) : this.cAN727_;
                }

                public int getCAN727Count() {
                    return this.cAN727_.size();
                }

                public ByteString getCAN727(int index) {
                    return this.cAN727_.get(index);
                }

                public Builder setCAN727(int index, ByteString value) {
                    if (value == null)
                        throw new NullPointerException();
                    ensureCAN727IsMutable();
                    this.cAN727_.set(index, value);
                    onChanged();
                    return this;
                }

                public Builder addCAN727(ByteString value) {
                    if (value == null)
                        throw new NullPointerException();
                    ensureCAN727IsMutable();
                    this.cAN727_.add(value);
                    onChanged();
                    return this;
                }

                public Builder addAllCAN727(Iterable<? extends ByteString> values) {
                    ensureCAN727IsMutable();
                    AbstractMessageLite.Builder.addAll(values, this.cAN727_);
                    onChanged();
                    return this;
                }

                public Builder clearCAN727() {
                    this.cAN727_ = Collections.emptyList();
                    this.bitField0_ &= 0xFFFFFFFB;
                    onChanged();
                    return this;
                }

                private void ensureCAN760IsMutable() {
                    if ((this.bitField0_ & 0x8) == 0) {
                        this.cAN760_ = new ArrayList<>(this.cAN760_);
                        this.bitField0_ |= 0x8;
                    }
                }

                public List<ByteString> getCAN760List() {
                    return ((this.bitField0_ & 0x8) != 0) ? Collections.<ByteString>unmodifiableList(this.cAN760_) : this.cAN760_;
                }

                public int getCAN760Count() {
                    return this.cAN760_.size();
                }

                public ByteString getCAN760(int index) {
                    return this.cAN760_.get(index);
                }

                public Builder setCAN760(int index, ByteString value) {
                    if (value == null)
                        throw new NullPointerException();
                    ensureCAN760IsMutable();
                    this.cAN760_.set(index, value);
                    onChanged();
                    return this;
                }

                public Builder addCAN760(ByteString value) {
                    if (value == null)
                        throw new NullPointerException();
                    ensureCAN760IsMutable();
                    this.cAN760_.add(value);
                    onChanged();
                    return this;
                }

                public Builder addAllCAN760(Iterable<? extends ByteString> values) {
                    ensureCAN760IsMutable();
                    AbstractMessageLite.Builder.addAll(values, this.cAN760_);
                    onChanged();
                    return this;
                }

                public Builder clearCAN760() {
                    this.cAN760_ = Collections.emptyList();
                    this.bitField0_ &= 0xFFFFFFF7;
                    onChanged();
                    return this;
                }

                public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
                    return (Builder) super.setUnknownFields(unknownFields);
                }

                public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
                    return (Builder) super.mergeUnknownFields(unknownFields);
                }
            }

            public static final class SafeDriving extends GeneratedMessageV3 implements SafeDrivingOrBuilder {
                private static final long serialVersionUID = 0L;

                private int bitField0_;

                public static final int EVENTMASK_FIELD_NUMBER = 1;

                private int eventMask_;

                public static final int SPEEDTHRESHOLD_FIELD_NUMBER = 2;

                private int speedThreshold_;

                public static final int RPMTHRESHOLD_FIELD_NUMBER = 3;

                private int rPMThreshold_;

                public static final int ACCELDANGTHS_FIELD_NUMBER = 4;

                private Internal.FloatList accelDangThs_;

                private int accelDangThsMemoizedSerializedSize;

                private byte memoizedIsInitialized;

                private SafeDriving(GeneratedMessageV3.Builder<?> builder) {
                    super(builder);
                    this.accelDangThsMemoizedSerializedSize = -1;
                    this.memoizedIsInitialized = -1;
                }

                private SafeDriving() {
                    this.accelDangThsMemoizedSerializedSize = -1;
                    this.memoizedIsInitialized = -1;
                    this.accelDangThs_ = emptyFloatList();
                }

                protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) {
                    return new SafeDriving();
                }

                public final UnknownFieldSet getUnknownFields() {
                    return this.unknownFields;
                }

                private SafeDriving(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                    this();
                    if (extensionRegistry == null)
                        throw new NullPointerException();
                    int mutable_bitField0_ = 0;
                    UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
                    try {
                        boolean done = false;
                        while (!done) {
                            int length, limit, tag = input.readTag();
                            switch (tag) {
                                case 0:
                                    done = true;
                                    continue;
                                case 8:
                                    this.bitField0_ |= 0x1;
                                    this.eventMask_ = input.readUInt32();
                                    continue;
                                case 16:
                                    this.bitField0_ |= 0x2;
                                    this.speedThreshold_ = input.readUInt32();
                                    continue;
                                case 24:
                                    this.bitField0_ |= 0x4;
                                    this.rPMThreshold_ = input.readUInt32();
                                    continue;
                                case 37:
                                    if ((mutable_bitField0_ & 0x8) == 0) {
                                        this.accelDangThs_ = newFloatList();
                                        mutable_bitField0_ |= 0x8;
                                    }
                                    this.accelDangThs_.addFloat(input.readFloat());
                                    continue;
                                case 34:
                                    length = input.readRawVarint32();
                                    limit = input.pushLimit(length);
                                    if ((mutable_bitField0_ & 0x8) == 0 && input.getBytesUntilLimit() > 0) {
                                        this.accelDangThs_ = newFloatList();
                                        mutable_bitField0_ |= 0x8;
                                    }
                                    while (input.getBytesUntilLimit() > 0)
                                        this.accelDangThs_.addFloat(input.readFloat());
                                    input.popLimit(limit);
                                    continue;
                            }
                            if (!parseUnknownField(input, unknownFields, extensionRegistry, tag))
                                done = true;
                        }
                    } catch (InvalidProtocolBufferException e) {
                        throw e.setUnfinishedMessage(this);
                    } catch (IOException e) {
                        throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this);
                    } finally {
                        if ((mutable_bitField0_ & 0x8) != 0)
                            this.accelDangThs_.makeImmutable();
                        this.unknownFields = unknownFields.build();
                        makeExtensionsImmutable();
                    }
                }

                public static final Descriptors.Descriptor getDescriptor() {
                    return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_SafeDriving_descriptor;
                }

                protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
                    return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_SafeDriving_fieldAccessorTable.ensureFieldAccessorsInitialized(SafeDriving.class, Builder.class);
                }

                public boolean hasEventMask() {
                    return ((this.bitField0_ & 0x1) != 0);
                }

                public int getEventMask() {
                    return this.eventMask_;
                }

                public boolean hasSpeedThreshold() {
                    return ((this.bitField0_ & 0x2) != 0);
                }

                public int getSpeedThreshold() {
                    return this.speedThreshold_;
                }

                public boolean hasRPMThreshold() {
                    return ((this.bitField0_ & 0x4) != 0);
                }

                public int getRPMThreshold() {
                    return this.rPMThreshold_;
                }

                public List<Float> getAccelDangThsList() {
                    return (List<Float>) this.accelDangThs_;
                }

                public int getAccelDangThsCount() {
                    return this.accelDangThs_.size();
                }

                public float getAccelDangThs(int index) {
                    return this.accelDangThs_.getFloat(index);
                }

                public final boolean isInitialized() {
                    byte isInitialized = this.memoizedIsInitialized;
                    if (isInitialized == 1)
                        return true;
                    if (isInitialized == 0)
                        return false;
                    this.memoizedIsInitialized = 1;
                    return true;
                }

                public void writeTo(CodedOutputStream output) throws IOException {
                    getSerializedSize();
                    if ((this.bitField0_ & 0x1) != 0)
                        output.writeUInt32(1, this.eventMask_);
                    if ((this.bitField0_ & 0x2) != 0)
                        output.writeUInt32(2, this.speedThreshold_);
                    if ((this.bitField0_ & 0x4) != 0)
                        output.writeUInt32(3, this.rPMThreshold_);
                    if (getAccelDangThsList().size() > 0) {
                        output.writeUInt32NoTag(34);
                        output.writeUInt32NoTag(this.accelDangThsMemoizedSerializedSize);
                    }
                    for (int i = 0; i < this.accelDangThs_.size(); i++)
                        output.writeFloatNoTag(this.accelDangThs_.getFloat(i));
                    this.unknownFields.writeTo(output);
                }

                public int getSerializedSize() {
                    int size = this.memoizedSize;
                    if (size != -1)
                        return size;
                    size = 0;
                    if ((this.bitField0_ & 0x1) != 0)
                        size += CodedOutputStream.computeUInt32Size(1, this.eventMask_);
                    if ((this.bitField0_ & 0x2) != 0)
                        size += CodedOutputStream.computeUInt32Size(2, this.speedThreshold_);
                    if ((this.bitField0_ & 0x4) != 0)
                        size += CodedOutputStream.computeUInt32Size(3, this.rPMThreshold_);
                    int dataSize = 0;
                    dataSize = 4 * getAccelDangThsList().size();
                    size += dataSize;
                    if (!getAccelDangThsList().isEmpty()) {
                        size++;
                        size += CodedOutputStream.computeInt32SizeNoTag(dataSize);
                    }
                    this.accelDangThsMemoizedSerializedSize = dataSize;
                    size += this.unknownFields.getSerializedSize();
                    this.memoizedSize = size;
                    return size;
                }

                public boolean equals(Object obj) {
                    if (obj == this)
                        return true;
                    if (!(obj instanceof SafeDriving))
                        return super.equals(obj);
                    SafeDriving other = (SafeDriving) obj;
                    if (hasEventMask() != other.hasEventMask())
                        return false;
                    if (hasEventMask() && getEventMask() != other.getEventMask())
                        return false;
                    if (hasSpeedThreshold() != other.hasSpeedThreshold())
                        return false;
                    if (hasSpeedThreshold() && getSpeedThreshold() != other.getSpeedThreshold())
                        return false;
                    if (hasRPMThreshold() != other.hasRPMThreshold())
                        return false;
                    if (hasRPMThreshold() && getRPMThreshold() != other.getRPMThreshold())
                        return false;
                    if (!getAccelDangThsList().equals(other.getAccelDangThsList()))
                        return false;
                    if (!this.unknownFields.equals(other.unknownFields))
                        return false;
                    return true;
                }

                public int hashCode() {
                    if (this.memoizedHashCode != 0)
                        return this.memoizedHashCode;
                    int hash = 41;
                    hash = 19 * hash + getDescriptor().hashCode();
                    if (hasEventMask()) {
                        hash = 37 * hash + 1;
                        hash = 53 * hash + getEventMask();
                    }
                    if (hasSpeedThreshold()) {
                        hash = 37 * hash + 2;
                        hash = 53 * hash + getSpeedThreshold();
                    }
                    if (hasRPMThreshold()) {
                        hash = 37 * hash + 3;
                        hash = 53 * hash + getRPMThreshold();
                    }
                    if (getAccelDangThsCount() > 0) {
                        hash = 37 * hash + 4;
                        hash = 53 * hash + getAccelDangThsList().hashCode();
                    }
                    hash = 29 * hash + this.unknownFields.hashCode();
                    this.memoizedHashCode = hash;
                    return hash;
                }

                public static SafeDriving parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
                    return (SafeDriving) PARSER.parseFrom(data);
                }

                public static SafeDriving parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                    return (SafeDriving) PARSER.parseFrom(data, extensionRegistry);
                }

                public static SafeDriving parseFrom(ByteString data) throws InvalidProtocolBufferException {
                    return (SafeDriving) PARSER.parseFrom(data);
                }

                public static SafeDriving parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                    return (SafeDriving) PARSER.parseFrom(data, extensionRegistry);
                }

                public static SafeDriving parseFrom(byte[] data) throws InvalidProtocolBufferException {
                    return (SafeDriving) PARSER.parseFrom(data);
                }

                public static SafeDriving parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                    return (SafeDriving) PARSER.parseFrom(data, extensionRegistry);
                }

                public static SafeDriving parseFrom(InputStream input) throws IOException {
                    return (SafeDriving) GeneratedMessageV3.parseWithIOException(PARSER, input);
                }

                public static SafeDriving parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                    return (SafeDriving) GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
                }

                public static SafeDriving parseDelimitedFrom(InputStream input) throws IOException {
                    return (SafeDriving) GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
                }

                public static SafeDriving parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                    return (SafeDriving) GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
                }

                public static SafeDriving parseFrom(CodedInputStream input) throws IOException {
                    return (SafeDriving) GeneratedMessageV3.parseWithIOException(PARSER, input);
                }

                public static SafeDriving parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                    return (SafeDriving) GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
                }

                public Builder newBuilderForType() {
                    return newBuilder();
                }

                public static Builder newBuilder() {
                    return DEFAULT_INSTANCE.toBuilder();
                }

                public static Builder newBuilder(SafeDriving prototype) {
                    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
                }

                public Builder toBuilder() {
                    return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder()).mergeFrom(this);
                }

                protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
                    Builder builder = new Builder(parent);
                    return builder;
                }

                public static final class Builder extends GeneratedMessageV3.Builder<Builder> implements OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDrivingOrBuilder {
                    private int bitField0_;

                    private int eventMask_;

                    private int speedThreshold_;

                    private int rPMThreshold_;

                    private Internal.FloatList accelDangThs_;

                    public static final Descriptors.Descriptor getDescriptor() {
                        return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_SafeDriving_descriptor;
                    }

                    protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
                        return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_SafeDriving_fieldAccessorTable.ensureFieldAccessorsInitialized(OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving.class, Builder.class);
                    }

                    private Builder() {
                        this.accelDangThs_ = OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving.emptyFloatList();
                        maybeForceBuilderInitialization();
                    }

                    private Builder(GeneratedMessageV3.BuilderParent parent) {
                        super(parent);
                        this.accelDangThs_ = OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving.emptyFloatList();
                        maybeForceBuilderInitialization();
                    }

                    private void maybeForceBuilderInitialization() {
                        if (OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving.alwaysUseFieldBuilders) ;
                    }

                    public Builder clear() {
                        super.clear();
                        this.eventMask_ = 0;
                        this.bitField0_ &= 0xFFFFFFFE;
                        this.speedThreshold_ = 0;
                        this.bitField0_ &= 0xFFFFFFFD;
                        this.rPMThreshold_ = 0;
                        this.bitField0_ &= 0xFFFFFFFB;
                        this.accelDangThs_ = OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving.emptyFloatList();
                        this.bitField0_ &= 0xFFFFFFF7;
                        return this;
                    }

                    public Descriptors.Descriptor getDescriptorForType() {
                        return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_SafeDriving_descriptor;
                    }

                    public OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving getDefaultInstanceForType() {
                        return OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving.getDefaultInstance();
                    }

                    public OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving build() {
                        OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving result = buildPartial();
                        if (!result.isInitialized())
                            throw newUninitializedMessageException(result);
                        return result;
                    }

                    public OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving buildPartial() {
                        OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving result = new OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving(this);
                        int from_bitField0_ = this.bitField0_;
                        int to_bitField0_ = 0;
                        if ((from_bitField0_ & 0x1) != 0) {
                            result.eventMask_ = this.eventMask_;
                            to_bitField0_ |= 0x1;
                        }
                        if ((from_bitField0_ & 0x2) != 0) {
                            result.speedThreshold_ = this.speedThreshold_;
                            to_bitField0_ |= 0x2;
                        }
                        if ((from_bitField0_ & 0x4) != 0) {
                            result.rPMThreshold_ = this.rPMThreshold_;
                            to_bitField0_ |= 0x4;
                        }
                        if ((this.bitField0_ & 0x8) != 0) {
                            this.accelDangThs_.makeImmutable();
                            this.bitField0_ &= 0xFFFFFFF7;
                        }
                        result.accelDangThs_ = this.accelDangThs_;
                        result.bitField0_ = to_bitField0_;
                        onBuilt();
                        return result;
                    }

                    public Builder clone() {
                        return (Builder) super.clone();
                    }

                    public Builder setField(Descriptors.FieldDescriptor field, Object value) {
                        return (Builder) super.setField(field, value);
                    }

                    public Builder clearField(Descriptors.FieldDescriptor field) {
                        return (Builder) super.clearField(field);
                    }

                    public Builder clearOneof(Descriptors.OneofDescriptor oneof) {
                        return (Builder) super.clearOneof(oneof);
                    }

                    public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
                        return (Builder) super.setRepeatedField(field, index, value);
                    }

                    public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
                        return (Builder) super.addRepeatedField(field, value);
                    }

                    public Builder mergeFrom(Message other) {
                        if (other instanceof OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving)
                            return mergeFrom((OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving) other);
                        super.mergeFrom(other);
                        return this;
                    }

                    public Builder mergeFrom(OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving other) {
                        if (other == OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving.getDefaultInstance())
                            return this;
                        if (other.hasEventMask())
                            setEventMask(other.getEventMask());
                        if (other.hasSpeedThreshold())
                            setSpeedThreshold(other.getSpeedThreshold());
                        if (other.hasRPMThreshold())
                            setRPMThreshold(other.getRPMThreshold());
                        if (!other.accelDangThs_.isEmpty()) {
                            if (this.accelDangThs_.isEmpty()) {
                                this.accelDangThs_ = other.accelDangThs_;
                                this.bitField0_ &= 0xFFFFFFF7;
                            } else {
                                ensureAccelDangThsIsMutable();
                                this.accelDangThs_.addAll((Collection) other.accelDangThs_);
                            }
                            onChanged();
                        }
                        mergeUnknownFields(other.unknownFields);
                        onChanged();
                        return this;
                    }

                    public final boolean isInitialized() {
                        return true;
                    }

                    public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                        OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving parsedMessage = null;
                        try {
                            parsedMessage = (OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving) OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving.PARSER.parsePartialFrom(input, extensionRegistry);
                        } catch (InvalidProtocolBufferException e) {
                            parsedMessage = (OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving) e.getUnfinishedMessage();
                            throw e.unwrapIOException();
                        } finally {
                            if (parsedMessage != null)
                                mergeFrom(parsedMessage);
                        }
                        return this;
                    }

                    public boolean hasEventMask() {
                        return ((this.bitField0_ & 0x1) != 0);
                    }

                    public int getEventMask() {
                        return this.eventMask_;
                    }

                    public Builder setEventMask(int value) {
                        this.bitField0_ |= 0x1;
                        this.eventMask_ = value;
                        onChanged();
                        return this;
                    }

                    public Builder clearEventMask() {
                        this.bitField0_ &= 0xFFFFFFFE;
                        this.eventMask_ = 0;
                        onChanged();
                        return this;
                    }

                    public boolean hasSpeedThreshold() {
                        return ((this.bitField0_ & 0x2) != 0);
                    }

                    public int getSpeedThreshold() {
                        return this.speedThreshold_;
                    }

                    public Builder setSpeedThreshold(int value) {
                        this.bitField0_ |= 0x2;
                        this.speedThreshold_ = value;
                        onChanged();
                        return this;
                    }

                    public Builder clearSpeedThreshold() {
                        this.bitField0_ &= 0xFFFFFFFD;
                        this.speedThreshold_ = 0;
                        onChanged();
                        return this;
                    }

                    public boolean hasRPMThreshold() {
                        return ((this.bitField0_ & 0x4) != 0);
                    }

                    public int getRPMThreshold() {
                        return this.rPMThreshold_;
                    }

                    public Builder setRPMThreshold(int value) {
                        this.bitField0_ |= 0x4;
                        this.rPMThreshold_ = value;
                        onChanged();
                        return this;
                    }

                    public Builder clearRPMThreshold() {
                        this.bitField0_ &= 0xFFFFFFFB;
                        this.rPMThreshold_ = 0;
                        onChanged();
                        return this;
                    }

                    private void ensureAccelDangThsIsMutable() {
                        if ((this.bitField0_ & 0x8) == 0) {
                            this.accelDangThs_ = OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving.mutableCopy(this.accelDangThs_);
                            this.bitField0_ |= 0x8;
                        }
                    }

                    public List<Float> getAccelDangThsList() {
                        return ((this.bitField0_ & 0x8) != 0) ? Collections.<Float>unmodifiableList((List<? extends Float>) this.accelDangThs_) : (List<Float>) this.accelDangThs_;
                    }

                    public int getAccelDangThsCount() {
                        return this.accelDangThs_.size();
                    }

                    public float getAccelDangThs(int index) {
                        return this.accelDangThs_.getFloat(index);
                    }

                    public Builder setAccelDangThs(int index, float value) {
                        ensureAccelDangThsIsMutable();
                        this.accelDangThs_.setFloat(index, value);
                        onChanged();
                        return this;
                    }

                    public Builder addAccelDangThs(float value) {
                        ensureAccelDangThsIsMutable();
                        this.accelDangThs_.addFloat(value);
                        onChanged();
                        return this;
                    }

                    public Builder addAllAccelDangThs(Iterable<? extends Float> values) {
                        ensureAccelDangThsIsMutable();
                        AbstractMessageLite.Builder.addAll(values, (List) this.accelDangThs_);
                        onChanged();
                        return this;
                    }

                    public Builder clearAccelDangThs() {
                        this.accelDangThs_ = OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving.emptyFloatList();
                        this.bitField0_ &= 0xFFFFFFF7;
                        onChanged();
                        return this;
                    }

                    public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
                        return (Builder) super.setUnknownFields(unknownFields);
                    }

                    public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
                        return (Builder) super.mergeUnknownFields(unknownFields);
                    }
                }

                private static final SafeDriving DEFAULT_INSTANCE = new SafeDriving();

                public static SafeDriving getDefaultInstance() {
                    return DEFAULT_INSTANCE;
                }

                @Deprecated
                public static final Parser<SafeDriving> PARSER = (Parser<SafeDriving>) new AbstractParser<SafeDriving>() {
                    public OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                        return new OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving(input, extensionRegistry);
                    }
                };

                public static Parser<SafeDriving> parser() {
                    return PARSER;
                }

                public Parser<SafeDriving> getParserForType() {
                    return PARSER;
                }

                public SafeDriving getDefaultInstanceForType() {
                    return DEFAULT_INSTANCE;
                }
            }

            public static final class Builder extends GeneratedMessageV3.Builder<SafeDriving.Builder> implements SafeDrivingOrBuilder {
                private int bitField0_;

                private int eventMask_;

                private int speedThreshold_;

                private int rPMThreshold_;

                private Internal.FloatList accelDangThs_;

                public static final Descriptors.Descriptor getDescriptor() {
                    return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_SafeDriving_descriptor;
                }

                protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
                    return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_SafeDriving_fieldAccessorTable.ensureFieldAccessorsInitialized(OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving.class, Builder.class);
                }

                private Builder() {
                    this.accelDangThs_ = OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving.emptyFloatList();
                    maybeForceBuilderInitialization();
                }

                private Builder(GeneratedMessageV3.BuilderParent parent) {
                    super(parent);
                    this.accelDangThs_ = OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving.emptyFloatList();
                    maybeForceBuilderInitialization();
                }

                private void maybeForceBuilderInitialization() {
                    if (OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving.alwaysUseFieldBuilders) ;
                }

                public Builder clear() {
                    super.clear();
                    this.eventMask_ = 0;
                    this.bitField0_ &= 0xFFFFFFFE;
                    this.speedThreshold_ = 0;
                    this.bitField0_ &= 0xFFFFFFFD;
                    this.rPMThreshold_ = 0;
                    this.bitField0_ &= 0xFFFFFFFB;
                    this.accelDangThs_ = OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving.emptyFloatList();
                    this.bitField0_ &= 0xFFFFFFF7;
                    return this;
                }

                public Descriptors.Descriptor getDescriptorForType() {
                    return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_SafeDriving_descriptor;
                }

                public OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving getDefaultInstanceForType() {
                    return OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving.getDefaultInstance();
                }

                public OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving build() {
                    OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving result = buildPartial();
                    if (!result.isInitialized())
                        throw newUninitializedMessageException(result);
                    return result;
                }

                public OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving buildPartial() {
                    OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving result = new OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving(this);
                    int from_bitField0_ = this.bitField0_;
                    int to_bitField0_ = 0;
                    if ((from_bitField0_ & 0x1) != 0) {
                        result.eventMask_ = this.eventMask_;
                        to_bitField0_ |= 0x1;
                    }
                    if ((from_bitField0_ & 0x2) != 0) {
                        result.speedThreshold_ = this.speedThreshold_;
                        to_bitField0_ |= 0x2;
                    }
                    if ((from_bitField0_ & 0x4) != 0) {
                        result.rPMThreshold_ = this.rPMThreshold_;
                        to_bitField0_ |= 0x4;
                    }
                    if ((this.bitField0_ & 0x8) != 0) {
                        this.accelDangThs_.makeImmutable();
                        this.bitField0_ &= 0xFFFFFFF7;
                    }
                    result.accelDangThs_ = this.accelDangThs_;
                    result.bitField0_ = to_bitField0_;
                    onBuilt();
                    return result;
                }

                public Builder clone() {
                    return (Builder) super.clone();
                }

                public Builder setField(Descriptors.FieldDescriptor field, Object value) {
                    return (Builder) super.setField(field, value);
                }

                public Builder clearField(Descriptors.FieldDescriptor field) {
                    return (Builder) super.clearField(field);
                }

                public Builder clearOneof(Descriptors.OneofDescriptor oneof) {
                    return (Builder) super.clearOneof(oneof);
                }

                public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
                    return (Builder) super.setRepeatedField(field, index, value);
                }

                public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
                    return (Builder) super.addRepeatedField(field, value);
                }

                public Builder mergeFrom(Message other) {
                    if (other instanceof OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving)
                        return mergeFrom((OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving) other);
                    super.mergeFrom(other);
                    return this;
                }

                public Builder mergeFrom(OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving other) {
                    if (other == OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving.getDefaultInstance())
                        return this;
                    if (other.hasEventMask())
                        setEventMask(other.getEventMask());
                    if (other.hasSpeedThreshold())
                        setSpeedThreshold(other.getSpeedThreshold());
                    if (other.hasRPMThreshold())
                        setRPMThreshold(other.getRPMThreshold());
                    if (!other.accelDangThs_.isEmpty()) {
                        if (this.accelDangThs_.isEmpty()) {
                            this.accelDangThs_ = other.accelDangThs_;
                            this.bitField0_ &= 0xFFFFFFF7;
                        } else {
                            ensureAccelDangThsIsMutable();
                            this.accelDangThs_.addAll((Collection) other.accelDangThs_);
                        }
                        onChanged();
                    }
                    mergeUnknownFields(other.unknownFields);
                    onChanged();
                    return this;
                }

                public final boolean isInitialized() {
                    return true;
                }

                public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                    OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving parsedMessage = null;
                    try {
                        parsedMessage = (OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving) OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving.PARSER.parsePartialFrom(input, extensionRegistry);
                    } catch (InvalidProtocolBufferException e) {
                        parsedMessage = (OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving) e.getUnfinishedMessage();
                        throw e.unwrapIOException();
                    } finally {
                        if (parsedMessage != null)
                            mergeFrom(parsedMessage);
                    }
                    return this;
                }

                public boolean hasEventMask() {
                    return ((this.bitField0_ & 0x1) != 0);
                }

                public int getEventMask() {
                    return this.eventMask_;
                }

                public Builder setEventMask(int value) {
                    this.bitField0_ |= 0x1;
                    this.eventMask_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearEventMask() {
                    this.bitField0_ &= 0xFFFFFFFE;
                    this.eventMask_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasSpeedThreshold() {
                    return ((this.bitField0_ & 0x2) != 0);
                }

                public int getSpeedThreshold() {
                    return this.speedThreshold_;
                }

                public Builder setSpeedThreshold(int value) {
                    this.bitField0_ |= 0x2;
                    this.speedThreshold_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearSpeedThreshold() {
                    this.bitField0_ &= 0xFFFFFFFD;
                    this.speedThreshold_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasRPMThreshold() {
                    return ((this.bitField0_ & 0x4) != 0);
                }

                public int getRPMThreshold() {
                    return this.rPMThreshold_;
                }

                public Builder setRPMThreshold(int value) {
                    this.bitField0_ |= 0x4;
                    this.rPMThreshold_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearRPMThreshold() {
                    this.bitField0_ &= 0xFFFFFFFB;
                    this.rPMThreshold_ = 0;
                    onChanged();
                    return this;
                }

                private void ensureAccelDangThsIsMutable() {
                    if ((this.bitField0_ & 0x8) == 0) {
                        this.accelDangThs_ = OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving.mutableCopy(this.accelDangThs_);
                        this.bitField0_ |= 0x8;
                    }
                }

                public List<Float> getAccelDangThsList() {
                    return ((this.bitField0_ & 0x8) != 0) ? Collections.<Float>unmodifiableList((List<? extends Float>) this.accelDangThs_) : (List<Float>) this.accelDangThs_;
                }

                public int getAccelDangThsCount() {
                    return this.accelDangThs_.size();
                }

                public float getAccelDangThs(int index) {
                    return this.accelDangThs_.getFloat(index);
                }

                public Builder setAccelDangThs(int index, float value) {
                    ensureAccelDangThsIsMutable();
                    this.accelDangThs_.setFloat(index, value);
                    onChanged();
                    return this;
                }

                public Builder addAccelDangThs(float value) {
                    ensureAccelDangThsIsMutable();
                    this.accelDangThs_.addFloat(value);
                    onChanged();
                    return this;
                }

                public Builder addAllAccelDangThs(Iterable<? extends Float> values) {
                    ensureAccelDangThsIsMutable();
                    AbstractMessageLite.Builder.addAll(values, (List) this.accelDangThs_);
                    onChanged();
                    return this;
                }

                public Builder clearAccelDangThs() {
                    this.accelDangThs_ = OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving.emptyFloatList();
                    this.bitField0_ &= 0xFFFFFFF7;
                    onChanged();
                    return this;
                }

                public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
                    return (Builder) super.setUnknownFields(unknownFields);
                }

                public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
                    return (Builder) super.mergeUnknownFields(unknownFields);
                }
            }

            public static final class GenComm extends GeneratedMessageV3 implements GenCommOrBuilder {
                private static final long serialVersionUID = 0L;

                private int bitField0_;

                private int bitField1_;

                public static final int GEN_OILPRESS1_FIELD_NUMBER = 1;

                private int gENOILPRESS1_;

                public static final int GEN_TEMP1_FIELD_NUMBER = 2;

                private int gENTEMP1_;

                public static final int GEN_VOLT1_FIELD_NUMBER = 3;

                private float gENVOLT1_;

                public static final int GEN_RPM1_FIELD_NUMBER = 4;

                private int gENRPM1_;

                public static final int GEN_UL1_1_FIELD_NUMBER = 5;

                private float gENUL11_;

                public static final int GEN_UL2_1_FIELD_NUMBER = 6;

                private float gENUL21_;

                public static final int GEN_UL3_1_FIELD_NUMBER = 7;

                private float gENUL31_;

                public static final int GEN_IL1_1_FIELD_NUMBER = 8;

                private float gENIL11_;

                public static final int GEN_IL2_1_FIELD_NUMBER = 9;

                private float gENIL21_;

                public static final int GEN_IL3_1_FIELD_NUMBER = 10;

                private float gENIL31_;

                public static final int GEN_STATUS1_FIELD_NUMBER = 11;

                private int gENSTATUS1_;

                public static final int GEN_HOURS1_FIELD_NUMBER = 12;

                private int gENHOURS1_;

                public static final int GEN_ALARM1_FIELD_NUMBER = 13;

                private List<ByteString> gENALARM1_;

                public static final int GEN_OILPRESS2_FIELD_NUMBER = 14;

                private int gENOILPRESS2_;

                public static final int GEN_TEMP2_FIELD_NUMBER = 15;

                private int gENTEMP2_;

                public static final int GEN_VOLT2_FIELD_NUMBER = 16;

                private float gENVOLT2_;

                public static final int GEN_RPM2_FIELD_NUMBER = 17;

                private int gENRPM2_;

                public static final int GEN_UL1_2_FIELD_NUMBER = 18;

                private float gENUL12_;

                public static final int GEN_UL2_2_FIELD_NUMBER = 19;

                private float gENUL22_;

                public static final int GEN_UL3_2_FIELD_NUMBER = 20;

                private float gENUL32_;

                public static final int GEN_IL1_2_FIELD_NUMBER = 21;

                private float gENIL12_;

                public static final int GEN_IL2_2_FIELD_NUMBER = 22;

                private float gENIL22_;

                public static final int GEN_IL3_2_FIELD_NUMBER = 23;

                private float gENIL32_;

                public static final int GEN_STATUS2_FIELD_NUMBER = 24;

                private int gENSTATUS2_;

                public static final int GEN_HOURS2_FIELD_NUMBER = 25;

                private int gENHOURS2_;

                public static final int GEN_ALARM2_FIELD_NUMBER = 26;

                private List<ByteString> gENALARM2_;

                public static final int GEN_OILPRESS3_FIELD_NUMBER = 27;

                private int gENOILPRESS3_;

                public static final int GEN_TEMP3_FIELD_NUMBER = 28;

                private int gENTEMP3_;

                public static final int GEN_VOLT3_FIELD_NUMBER = 29;

                private float gENVOLT3_;

                public static final int GEN_RPM3_FIELD_NUMBER = 30;

                private int gENRPM3_;

                public static final int GEN_UL1_3_FIELD_NUMBER = 31;

                private float gENUL13_;

                public static final int GEN_UL2_3_FIELD_NUMBER = 32;

                private float gENUL23_;

                public static final int GEN_UL3_3_FIELD_NUMBER = 33;

                private float gENUL33_;

                public static final int GEN_IL1_3_FIELD_NUMBER = 34;

                private float gENIL13_;

                public static final int GEN_IL2_3_FIELD_NUMBER = 35;

                private float gENIL23_;

                public static final int GEN_IL3_3_FIELD_NUMBER = 36;

                private float gENIL33_;

                public static final int GEN_STATUS3_FIELD_NUMBER = 37;

                private int gENSTATUS3_;

                public static final int GEN_HOURS3_FIELD_NUMBER = 38;

                private int gENHOURS3_;

                public static final int GEN_ALARM3_FIELD_NUMBER = 39;

                private List<ByteString> gENALARM3_;

                public static final int GEN_UC_FIELD_NUMBER = 40;

                private float gENUC_;

                public static final int GEN_IC_FIELD_NUMBER = 41;

                private int gENIC_;

                public static final int GEN_FREQ_FIELD_NUMBER = 42;

                private float gENFREQ_;

                public static final int GEN_UL1L2_FIELD_NUMBER = 43;

                private float gENUL1L2_;

                public static final int GEN_UL2L3_FIELD_NUMBER = 44;

                private float gENUL2L3_;

                public static final int GEN_UL1L3_FIELD_NUMBER = 45;

                private float gENUL1L3_;

                public static final int POW_ACT_L1_FIELD_NUMBER = 46;

                private int pOWACTL1_;

                public static final int POW_ACT_L2_FIELD_NUMBER = 47;

                private int pOWACTL2_;

                public static final int POW_ACT_L3_FIELD_NUMBER = 48;

                private int pOWACTL3_;

                public static final int POW_FULL_L1_FIELD_NUMBER = 49;

                private int pOWFULLL1_;

                public static final int POW_FULL_L2_FIELD_NUMBER = 50;

                private int pOWFULLL2_;

                public static final int POW_FULL_L3_FIELD_NUMBER = 51;

                private int pOWFULLL3_;

                public static final int POW_REACT_L1_FIELD_NUMBER = 52;

                private int pOWREACTL1_;

                public static final int POW_REACT_L2_FIELD_NUMBER = 53;

                private int pOWREACTL2_;

                public static final int POW_REACT_L3_FIELD_NUMBER = 54;

                private int pOWREACTL3_;

                public static final int POW_KOEF_FIELD_NUMBER = 55;

                private float pOWKOEF_;

                public static final int POW_GEN_TOTAL_FIELD_NUMBER = 56;

                private int pOWGENTOTAL_;

                public static final int FUEL_LEVEL_FIELD_NUMBER = 57;

                private int fUELLEVEL_;

                public static final int SMS_REGS_0_FIELD_NUMBER = 60;

                private int sMSREGS0_;

                public static final int SMS_REGS_1_FIELD_NUMBER = 61;

                private int sMSREGS1_;

                public static final int SMS_REGS_2_FIELD_NUMBER = 62;

                private int sMSREGS2_;

                public static final int SMS_REGS_3_FIELD_NUMBER = 63;

                private int sMSREGS3_;

                public static final int SMS_REGS_4_FIELD_NUMBER = 64;

                private int sMSREGS4_;

                private byte memoizedIsInitialized;

                private GenComm(GeneratedMessageV3.Builder<?> builder) {
                    super(builder);
                    this.memoizedIsInitialized = -1;
                }

                private GenComm() {
                    this.memoizedIsInitialized = -1;
                    this.gENALARM1_ = Collections.emptyList();
                    this.gENALARM2_ = Collections.emptyList();
                    this.gENALARM3_ = Collections.emptyList();
                }

                protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) {
                    return new GenComm();
                }

                public final UnknownFieldSet getUnknownFields() {
                    return this.unknownFields;
                }

                private GenComm(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                    this();
                    if (extensionRegistry == null)
                        throw new NullPointerException();
                    int mutable_bitField0_ = 0;
                    int mutable_bitField1_ = 0;
                    UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
                    try {
                        boolean done = false;
                        while (!done) {
                            int tag = input.readTag();
                            switch (tag) {
                                case 0:
                                    done = true;
                                    continue;
                                case 8:
                                    this.bitField0_ |= 0x1;
                                    this.gENOILPRESS1_ = input.readUInt32();
                                    continue;
                                case 16:
                                    this.bitField0_ |= 0x2;
                                    this.gENTEMP1_ = input.readSInt32();
                                    continue;
                                case 29:
                                    this.bitField0_ |= 0x4;
                                    this.gENVOLT1_ = input.readFloat();
                                    continue;
                                case 32:
                                    this.bitField0_ |= 0x8;
                                    this.gENRPM1_ = input.readUInt32();
                                    continue;
                                case 45:
                                    this.bitField0_ |= 0x10;
                                    this.gENUL11_ = input.readFloat();
                                    continue;
                                case 53:
                                    this.bitField0_ |= 0x20;
                                    this.gENUL21_ = input.readFloat();
                                    continue;
                                case 61:
                                    this.bitField0_ |= 0x40;
                                    this.gENUL31_ = input.readFloat();
                                    continue;
                                case 69:
                                    this.bitField0_ |= 0x80;
                                    this.gENIL11_ = input.readFloat();
                                    continue;
                                case 77:
                                    this.bitField0_ |= 0x100;
                                    this.gENIL21_ = input.readFloat();
                                    continue;
                                case 85:
                                    this.bitField0_ |= 0x200;
                                    this.gENIL31_ = input.readFloat();
                                    continue;
                                case 88:
                                    this.bitField0_ |= 0x400;
                                    this.gENSTATUS1_ = input.readUInt32();
                                    continue;
                                case 96:
                                    this.bitField0_ |= 0x800;
                                    this.gENHOURS1_ = input.readUInt32();
                                    continue;
                                case 106:
                                    if ((mutable_bitField0_ & 0x1000) == 0) {
                                        this.gENALARM1_ = new ArrayList<>();
                                        mutable_bitField0_ |= 0x1000;
                                    }
                                    this.gENALARM1_.add(input.readBytes());
                                    continue;
                                case 112:
                                    this.bitField0_ |= 0x1000;
                                    this.gENOILPRESS2_ = input.readUInt32();
                                    continue;
                                case 120:
                                    this.bitField0_ |= 0x2000;
                                    this.gENTEMP2_ = input.readSInt32();
                                    continue;
                                case 133:
                                    this.bitField0_ |= 0x4000;
                                    this.gENVOLT2_ = input.readFloat();
                                    continue;
                                case 136:
                                    this.bitField0_ |= 0x8000;
                                    this.gENRPM2_ = input.readUInt32();
                                    continue;
                                case 149:
                                    this.bitField0_ |= 0x10000;
                                    this.gENUL12_ = input.readFloat();
                                    continue;
                                case 157:
                                    this.bitField0_ |= 0x20000;
                                    this.gENUL22_ = input.readFloat();
                                    continue;
                                case 165:
                                    this.bitField0_ |= 0x40000;
                                    this.gENUL32_ = input.readFloat();
                                    continue;
                                case 173:
                                    this.bitField0_ |= 0x80000;
                                    this.gENIL12_ = input.readFloat();
                                    continue;
                                case 181:
                                    this.bitField0_ |= 0x100000;
                                    this.gENIL22_ = input.readFloat();
                                    continue;
                                case 189:
                                    this.bitField0_ |= 0x200000;
                                    this.gENIL32_ = input.readFloat();
                                    continue;
                                case 192:
                                    this.bitField0_ |= 0x400000;
                                    this.gENSTATUS2_ = input.readUInt32();
                                    continue;
                                case 200:
                                    this.bitField0_ |= 0x800000;
                                    this.gENHOURS2_ = input.readUInt32();
                                    continue;
                                case 210:
                                    if ((mutable_bitField0_ & 0x2000000) == 0) {
                                        this.gENALARM2_ = new ArrayList<>();
                                        mutable_bitField0_ |= 0x2000000;
                                    }
                                    this.gENALARM2_.add(input.readBytes());
                                    continue;
                                case 216:
                                    this.bitField0_ |= 0x1000000;
                                    this.gENOILPRESS3_ = input.readUInt32();
                                    continue;
                                case 224:
                                    this.bitField0_ |= 0x2000000;
                                    this.gENTEMP3_ = input.readSInt32();
                                    continue;
                                case 237:
                                    this.bitField0_ |= 0x4000000;
                                    this.gENVOLT3_ = input.readFloat();
                                    continue;
                                case 240:
                                    this.bitField0_ |= 0x8000000;
                                    this.gENRPM3_ = input.readUInt32();
                                    continue;
                                case 253:
                                    this.bitField0_ |= 0x10000000;
                                    this.gENUL13_ = input.readFloat();
                                    continue;
                                case 261:
                                    this.bitField0_ |= 0x20000000;
                                    this.gENUL23_ = input.readFloat();
                                    continue;
                                case 269:
                                    this.bitField0_ |= 0x40000000;
                                    this.gENUL33_ = input.readFloat();
                                    continue;
                                case 277:
                                    this.bitField0_ |= Integer.MIN_VALUE;
                                    this.gENIL13_ = input.readFloat();
                                    continue;
                                case 285:
                                    this.bitField1_ |= 0x1;
                                    this.gENIL23_ = input.readFloat();
                                    continue;
                                case 293:
                                    this.bitField1_ |= 0x2;
                                    this.gENIL33_ = input.readFloat();
                                    continue;
                                case 296:
                                    this.bitField1_ |= 0x4;
                                    this.gENSTATUS3_ = input.readUInt32();
                                    continue;
                                case 304:
                                    this.bitField1_ |= 0x8;
                                    this.gENHOURS3_ = input.readUInt32();
                                    continue;
                                case 314:
                                    if ((mutable_bitField1_ & 0x40) == 0) {
                                        this.gENALARM3_ = new ArrayList<>();
                                        mutable_bitField1_ |= 0x40;
                                    }
                                    this.gENALARM3_.add(input.readBytes());
                                    continue;
                                case 325:
                                    this.bitField1_ |= 0x10;
                                    this.gENUC_ = input.readFloat();
                                    continue;
                                case 328:
                                    this.bitField1_ |= 0x20;
                                    this.gENIC_ = input.readUInt32();
                                    continue;
                                case 341:
                                    this.bitField1_ |= 0x40;
                                    this.gENFREQ_ = input.readFloat();
                                    continue;
                                case 349:
                                    this.bitField1_ |= 0x80;
                                    this.gENUL1L2_ = input.readFloat();
                                    continue;
                                case 357:
                                    this.bitField1_ |= 0x100;
                                    this.gENUL2L3_ = input.readFloat();
                                    continue;
                                case 365:
                                    this.bitField1_ |= 0x200;
                                    this.gENUL1L3_ = input.readFloat();
                                    continue;
                                case 368:
                                    this.bitField1_ |= 0x400;
                                    this.pOWACTL1_ = input.readUInt32();
                                    continue;
                                case 376:
                                    this.bitField1_ |= 0x800;
                                    this.pOWACTL2_ = input.readUInt32();
                                    continue;
                                case 384:
                                    this.bitField1_ |= 0x1000;
                                    this.pOWACTL3_ = input.readUInt32();
                                    continue;
                                case 392:
                                    this.bitField1_ |= 0x2000;
                                    this.pOWFULLL1_ = input.readUInt32();
                                    continue;
                                case 400:
                                    this.bitField1_ |= 0x4000;
                                    this.pOWFULLL2_ = input.readUInt32();
                                    continue;
                                case 408:
                                    this.bitField1_ |= 0x8000;
                                    this.pOWFULLL3_ = input.readUInt32();
                                    continue;
                                case 416:
                                    this.bitField1_ |= 0x10000;
                                    this.pOWREACTL1_ = input.readUInt32();
                                    continue;
                                case 424:
                                    this.bitField1_ |= 0x20000;
                                    this.pOWREACTL2_ = input.readUInt32();
                                    continue;
                                case 432:
                                    this.bitField1_ |= 0x40000;
                                    this.pOWREACTL3_ = input.readUInt32();
                                    continue;
                                case 445:
                                    this.bitField1_ |= 0x80000;
                                    this.pOWKOEF_ = input.readFloat();
                                    continue;
                                case 448:
                                    this.bitField1_ |= 0x100000;
                                    this.pOWGENTOTAL_ = input.readUInt32();
                                    continue;
                                case 456:
                                    this.bitField1_ |= 0x200000;
                                    this.fUELLEVEL_ = input.readUInt32();
                                    continue;
                                case 480:
                                    this.bitField1_ |= 0x400000;
                                    this.sMSREGS0_ = input.readUInt32();
                                    continue;
                                case 488:
                                    this.bitField1_ |= 0x800000;
                                    this.sMSREGS1_ = input.readUInt32();
                                    continue;
                                case 496:
                                    this.bitField1_ |= 0x1000000;
                                    this.sMSREGS2_ = input.readUInt32();
                                    continue;
                                case 504:
                                    this.bitField1_ |= 0x2000000;
                                    this.sMSREGS3_ = input.readUInt32();
                                    continue;
                                case 512:
                                    this.bitField1_ |= 0x4000000;
                                    this.sMSREGS4_ = input.readUInt32();
                                    continue;
                            }
                            if (!parseUnknownField(input, unknownFields, extensionRegistry, tag))
                                done = true;
                        }
                    } catch (InvalidProtocolBufferException e) {
                        throw e.setUnfinishedMessage(this);
                    } catch (IOException e) {
                        throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this);
                    } finally {
                        if ((mutable_bitField0_ & 0x1000) != 0)
                            this.gENALARM1_ = Collections.unmodifiableList(this.gENALARM1_);
                        if ((mutable_bitField0_ & 0x2000000) != 0)
                            this.gENALARM2_ = Collections.unmodifiableList(this.gENALARM2_);
                        if ((mutable_bitField1_ & 0x40) != 0)
                            this.gENALARM3_ = Collections.unmodifiableList(this.gENALARM3_);
                        this.unknownFields = unknownFields.build();
                        makeExtensionsImmutable();
                    }
                }

                public static final Descriptors.Descriptor getDescriptor() {
                    return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_GenComm_descriptor;
                }

                protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
                    return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_GenComm_fieldAccessorTable.ensureFieldAccessorsInitialized(GenComm.class, Builder.class);
                }

                public boolean hasGENOILPRESS1() {
                    return ((this.bitField0_ & 0x1) != 0);
                }

                public int getGENOILPRESS1() {
                    return this.gENOILPRESS1_;
                }

                public boolean hasGENTEMP1() {
                    return ((this.bitField0_ & 0x2) != 0);
                }

                public int getGENTEMP1() {
                    return this.gENTEMP1_;
                }

                public boolean hasGENVOLT1() {
                    return ((this.bitField0_ & 0x4) != 0);
                }

                public float getGENVOLT1() {
                    return this.gENVOLT1_;
                }

                public boolean hasGENRPM1() {
                    return ((this.bitField0_ & 0x8) != 0);
                }

                public int getGENRPM1() {
                    return this.gENRPM1_;
                }

                public boolean hasGENUL11() {
                    return ((this.bitField0_ & 0x10) != 0);
                }

                public float getGENUL11() {
                    return this.gENUL11_;
                }

                public boolean hasGENUL21() {
                    return ((this.bitField0_ & 0x20) != 0);
                }

                public float getGENUL21() {
                    return this.gENUL21_;
                }

                public boolean hasGENUL31() {
                    return ((this.bitField0_ & 0x40) != 0);
                }

                public float getGENUL31() {
                    return this.gENUL31_;
                }

                public boolean hasGENIL11() {
                    return ((this.bitField0_ & 0x80) != 0);
                }

                public float getGENIL11() {
                    return this.gENIL11_;
                }

                public boolean hasGENIL21() {
                    return ((this.bitField0_ & 0x100) != 0);
                }

                public float getGENIL21() {
                    return this.gENIL21_;
                }

                public boolean hasGENIL31() {
                    return ((this.bitField0_ & 0x200) != 0);
                }

                public float getGENIL31() {
                    return this.gENIL31_;
                }

                public boolean hasGENSTATUS1() {
                    return ((this.bitField0_ & 0x400) != 0);
                }

                public int getGENSTATUS1() {
                    return this.gENSTATUS1_;
                }

                public boolean hasGENHOURS1() {
                    return ((this.bitField0_ & 0x800) != 0);
                }

                public int getGENHOURS1() {
                    return this.gENHOURS1_;
                }

                public List<ByteString> getGENALARM1List() {
                    return this.gENALARM1_;
                }

                public int getGENALARM1Count() {
                    return this.gENALARM1_.size();
                }

                public ByteString getGENALARM1(int index) {
                    return this.gENALARM1_.get(index);
                }

                public boolean hasGENOILPRESS2() {
                    return ((this.bitField0_ & 0x1000) != 0);
                }

                public int getGENOILPRESS2() {
                    return this.gENOILPRESS2_;
                }

                public boolean hasGENTEMP2() {
                    return ((this.bitField0_ & 0x2000) != 0);
                }

                public int getGENTEMP2() {
                    return this.gENTEMP2_;
                }

                public boolean hasGENVOLT2() {
                    return ((this.bitField0_ & 0x4000) != 0);
                }

                public float getGENVOLT2() {
                    return this.gENVOLT2_;
                }

                public boolean hasGENRPM2() {
                    return ((this.bitField0_ & 0x8000) != 0);
                }

                public int getGENRPM2() {
                    return this.gENRPM2_;
                }

                public boolean hasGENUL12() {
                    return ((this.bitField0_ & 0x10000) != 0);
                }

                public float getGENUL12() {
                    return this.gENUL12_;
                }

                public boolean hasGENUL22() {
                    return ((this.bitField0_ & 0x20000) != 0);
                }

                public float getGENUL22() {
                    return this.gENUL22_;
                }

                public boolean hasGENUL32() {
                    return ((this.bitField0_ & 0x40000) != 0);
                }

                public float getGENUL32() {
                    return this.gENUL32_;
                }

                public boolean hasGENIL12() {
                    return ((this.bitField0_ & 0x80000) != 0);
                }

                public float getGENIL12() {
                    return this.gENIL12_;
                }

                public boolean hasGENIL22() {
                    return ((this.bitField0_ & 0x100000) != 0);
                }

                public float getGENIL22() {
                    return this.gENIL22_;
                }

                public boolean hasGENIL32() {
                    return ((this.bitField0_ & 0x200000) != 0);
                }

                public float getGENIL32() {
                    return this.gENIL32_;
                }

                public boolean hasGENSTATUS2() {
                    return ((this.bitField0_ & 0x400000) != 0);
                }

                public int getGENSTATUS2() {
                    return this.gENSTATUS2_;
                }

                public boolean hasGENHOURS2() {
                    return ((this.bitField0_ & 0x800000) != 0);
                }

                public int getGENHOURS2() {
                    return this.gENHOURS2_;
                }

                public List<ByteString> getGENALARM2List() {
                    return this.gENALARM2_;
                }

                public int getGENALARM2Count() {
                    return this.gENALARM2_.size();
                }

                public ByteString getGENALARM2(int index) {
                    return this.gENALARM2_.get(index);
                }

                public boolean hasGENOILPRESS3() {
                    return ((this.bitField0_ & 0x1000000) != 0);
                }

                public int getGENOILPRESS3() {
                    return this.gENOILPRESS3_;
                }

                public boolean hasGENTEMP3() {
                    return ((this.bitField0_ & 0x2000000) != 0);
                }

                public int getGENTEMP3() {
                    return this.gENTEMP3_;
                }

                public boolean hasGENVOLT3() {
                    return ((this.bitField0_ & 0x4000000) != 0);
                }

                public float getGENVOLT3() {
                    return this.gENVOLT3_;
                }

                public boolean hasGENRPM3() {
                    return ((this.bitField0_ & 0x8000000) != 0);
                }

                public int getGENRPM3() {
                    return this.gENRPM3_;
                }

                public boolean hasGENUL13() {
                    return ((this.bitField0_ & 0x10000000) != 0);
                }

                public float getGENUL13() {
                    return this.gENUL13_;
                }

                public boolean hasGENUL23() {
                    return ((this.bitField0_ & 0x20000000) != 0);
                }

                public float getGENUL23() {
                    return this.gENUL23_;
                }

                public boolean hasGENUL33() {
                    return ((this.bitField0_ & 0x40000000) != 0);
                }

                public float getGENUL33() {
                    return this.gENUL33_;
                }

                public boolean hasGENIL13() {
                    return ((this.bitField0_ & Integer.MIN_VALUE) != 0);
                }

                public float getGENIL13() {
                    return this.gENIL13_;
                }

                public boolean hasGENIL23() {
                    return ((this.bitField1_ & 0x1) != 0);
                }

                public float getGENIL23() {
                    return this.gENIL23_;
                }

                public boolean hasGENIL33() {
                    return ((this.bitField1_ & 0x2) != 0);
                }

                public float getGENIL33() {
                    return this.gENIL33_;
                }

                public boolean hasGENSTATUS3() {
                    return ((this.bitField1_ & 0x4) != 0);
                }

                public int getGENSTATUS3() {
                    return this.gENSTATUS3_;
                }

                public boolean hasGENHOURS3() {
                    return ((this.bitField1_ & 0x8) != 0);
                }

                public int getGENHOURS3() {
                    return this.gENHOURS3_;
                }

                public List<ByteString> getGENALARM3List() {
                    return this.gENALARM3_;
                }

                public int getGENALARM3Count() {
                    return this.gENALARM3_.size();
                }

                public ByteString getGENALARM3(int index) {
                    return this.gENALARM3_.get(index);
                }

                public boolean hasGENUC() {
                    return ((this.bitField1_ & 0x10) != 0);
                }

                public float getGENUC() {
                    return this.gENUC_;
                }

                public boolean hasGENIC() {
                    return ((this.bitField1_ & 0x20) != 0);
                }

                public int getGENIC() {
                    return this.gENIC_;
                }

                public boolean hasGENFREQ() {
                    return ((this.bitField1_ & 0x40) != 0);
                }

                public float getGENFREQ() {
                    return this.gENFREQ_;
                }

                public boolean hasGENUL1L2() {
                    return ((this.bitField1_ & 0x80) != 0);
                }

                public float getGENUL1L2() {
                    return this.gENUL1L2_;
                }

                public boolean hasGENUL2L3() {
                    return ((this.bitField1_ & 0x100) != 0);
                }

                public float getGENUL2L3() {
                    return this.gENUL2L3_;
                }

                public boolean hasGENUL1L3() {
                    return ((this.bitField1_ & 0x200) != 0);
                }

                public float getGENUL1L3() {
                    return this.gENUL1L3_;
                }

                public boolean hasPOWACTL1() {
                    return ((this.bitField1_ & 0x400) != 0);
                }

                public int getPOWACTL1() {
                    return this.pOWACTL1_;
                }

                public boolean hasPOWACTL2() {
                    return ((this.bitField1_ & 0x800) != 0);
                }

                public int getPOWACTL2() {
                    return this.pOWACTL2_;
                }

                public boolean hasPOWACTL3() {
                    return ((this.bitField1_ & 0x1000) != 0);
                }

                public int getPOWACTL3() {
                    return this.pOWACTL3_;
                }

                public boolean hasPOWFULLL1() {
                    return ((this.bitField1_ & 0x2000) != 0);
                }

                public int getPOWFULLL1() {
                    return this.pOWFULLL1_;
                }

                public boolean hasPOWFULLL2() {
                    return ((this.bitField1_ & 0x4000) != 0);
                }

                public int getPOWFULLL2() {
                    return this.pOWFULLL2_;
                }

                public boolean hasPOWFULLL3() {
                    return ((this.bitField1_ & 0x8000) != 0);
                }

                public int getPOWFULLL3() {
                    return this.pOWFULLL3_;
                }

                public boolean hasPOWREACTL1() {
                    return ((this.bitField1_ & 0x10000) != 0);
                }

                public int getPOWREACTL1() {
                    return this.pOWREACTL1_;
                }

                public boolean hasPOWREACTL2() {
                    return ((this.bitField1_ & 0x20000) != 0);
                }

                public int getPOWREACTL2() {
                    return this.pOWREACTL2_;
                }

                public boolean hasPOWREACTL3() {
                    return ((this.bitField1_ & 0x40000) != 0);
                }

                public int getPOWREACTL3() {
                    return this.pOWREACTL3_;
                }

                public boolean hasPOWKOEF() {
                    return ((this.bitField1_ & 0x80000) != 0);
                }

                public float getPOWKOEF() {
                    return this.pOWKOEF_;
                }

                public boolean hasPOWGENTOTAL() {
                    return ((this.bitField1_ & 0x100000) != 0);
                }

                public int getPOWGENTOTAL() {
                    return this.pOWGENTOTAL_;
                }

                public boolean hasFUELLEVEL() {
                    return ((this.bitField1_ & 0x200000) != 0);
                }

                public int getFUELLEVEL() {
                    return this.fUELLEVEL_;
                }

                public boolean hasSMSREGS0() {
                    return ((this.bitField1_ & 0x400000) != 0);
                }

                public int getSMSREGS0() {
                    return this.sMSREGS0_;
                }

                public boolean hasSMSREGS1() {
                    return ((this.bitField1_ & 0x800000) != 0);
                }

                public int getSMSREGS1() {
                    return this.sMSREGS1_;
                }

                public boolean hasSMSREGS2() {
                    return ((this.bitField1_ & 0x1000000) != 0);
                }

                public int getSMSREGS2() {
                    return this.sMSREGS2_;
                }

                public boolean hasSMSREGS3() {
                    return ((this.bitField1_ & 0x2000000) != 0);
                }

                public int getSMSREGS3() {
                    return this.sMSREGS3_;
                }

                public boolean hasSMSREGS4() {
                    return ((this.bitField1_ & 0x4000000) != 0);
                }

                public int getSMSREGS4() {
                    return this.sMSREGS4_;
                }

                public final boolean isInitialized() {
                    byte isInitialized = this.memoizedIsInitialized;
                    if (isInitialized == 1)
                        return true;
                    if (isInitialized == 0)
                        return false;
                    this.memoizedIsInitialized = 1;
                    return true;
                }

                public void writeTo(CodedOutputStream output) throws IOException {
                    if ((this.bitField0_ & 0x1) != 0)
                        output.writeUInt32(1, this.gENOILPRESS1_);
                    if ((this.bitField0_ & 0x2) != 0)
                        output.writeSInt32(2, this.gENTEMP1_);
                    if ((this.bitField0_ & 0x4) != 0)
                        output.writeFloat(3, this.gENVOLT1_);
                    if ((this.bitField0_ & 0x8) != 0)
                        output.writeUInt32(4, this.gENRPM1_);
                    if ((this.bitField0_ & 0x10) != 0)
                        output.writeFloat(5, this.gENUL11_);
                    if ((this.bitField0_ & 0x20) != 0)
                        output.writeFloat(6, this.gENUL21_);
                    if ((this.bitField0_ & 0x40) != 0)
                        output.writeFloat(7, this.gENUL31_);
                    if ((this.bitField0_ & 0x80) != 0)
                        output.writeFloat(8, this.gENIL11_);
                    if ((this.bitField0_ & 0x100) != 0)
                        output.writeFloat(9, this.gENIL21_);
                    if ((this.bitField0_ & 0x200) != 0)
                        output.writeFloat(10, this.gENIL31_);
                    if ((this.bitField0_ & 0x400) != 0)
                        output.writeUInt32(11, this.gENSTATUS1_);
                    if ((this.bitField0_ & 0x800) != 0)
                        output.writeUInt32(12, this.gENHOURS1_);
                    int i;
                    for (i = 0; i < this.gENALARM1_.size(); i++)
                        output.writeBytes(13, this.gENALARM1_.get(i));
                    if ((this.bitField0_ & 0x1000) != 0)
                        output.writeUInt32(14, this.gENOILPRESS2_);
                    if ((this.bitField0_ & 0x2000) != 0)
                        output.writeSInt32(15, this.gENTEMP2_);
                    if ((this.bitField0_ & 0x4000) != 0)
                        output.writeFloat(16, this.gENVOLT2_);
                    if ((this.bitField0_ & 0x8000) != 0)
                        output.writeUInt32(17, this.gENRPM2_);
                    if ((this.bitField0_ & 0x10000) != 0)
                        output.writeFloat(18, this.gENUL12_);
                    if ((this.bitField0_ & 0x20000) != 0)
                        output.writeFloat(19, this.gENUL22_);
                    if ((this.bitField0_ & 0x40000) != 0)
                        output.writeFloat(20, this.gENUL32_);
                    if ((this.bitField0_ & 0x80000) != 0)
                        output.writeFloat(21, this.gENIL12_);
                    if ((this.bitField0_ & 0x100000) != 0)
                        output.writeFloat(22, this.gENIL22_);
                    if ((this.bitField0_ & 0x200000) != 0)
                        output.writeFloat(23, this.gENIL32_);
                    if ((this.bitField0_ & 0x400000) != 0)
                        output.writeUInt32(24, this.gENSTATUS2_);
                    if ((this.bitField0_ & 0x800000) != 0)
                        output.writeUInt32(25, this.gENHOURS2_);
                    for (i = 0; i < this.gENALARM2_.size(); i++)
                        output.writeBytes(26, this.gENALARM2_.get(i));
                    if ((this.bitField0_ & 0x1000000) != 0)
                        output.writeUInt32(27, this.gENOILPRESS3_);
                    if ((this.bitField0_ & 0x2000000) != 0)
                        output.writeSInt32(28, this.gENTEMP3_);
                    if ((this.bitField0_ & 0x4000000) != 0)
                        output.writeFloat(29, this.gENVOLT3_);
                    if ((this.bitField0_ & 0x8000000) != 0)
                        output.writeUInt32(30, this.gENRPM3_);
                    if ((this.bitField0_ & 0x10000000) != 0)
                        output.writeFloat(31, this.gENUL13_);
                    if ((this.bitField0_ & 0x20000000) != 0)
                        output.writeFloat(32, this.gENUL23_);
                    if ((this.bitField0_ & 0x40000000) != 0)
                        output.writeFloat(33, this.gENUL33_);
                    if ((this.bitField0_ & Integer.MIN_VALUE) != 0)
                        output.writeFloat(34, this.gENIL13_);
                    if ((this.bitField1_ & 0x1) != 0)
                        output.writeFloat(35, this.gENIL23_);
                    if ((this.bitField1_ & 0x2) != 0)
                        output.writeFloat(36, this.gENIL33_);
                    if ((this.bitField1_ & 0x4) != 0)
                        output.writeUInt32(37, this.gENSTATUS3_);
                    if ((this.bitField1_ & 0x8) != 0)
                        output.writeUInt32(38, this.gENHOURS3_);
                    for (i = 0; i < this.gENALARM3_.size(); i++)
                        output.writeBytes(39, this.gENALARM3_.get(i));
                    if ((this.bitField1_ & 0x10) != 0)
                        output.writeFloat(40, this.gENUC_);
                    if ((this.bitField1_ & 0x20) != 0)
                        output.writeUInt32(41, this.gENIC_);
                    if ((this.bitField1_ & 0x40) != 0)
                        output.writeFloat(42, this.gENFREQ_);
                    if ((this.bitField1_ & 0x80) != 0)
                        output.writeFloat(43, this.gENUL1L2_);
                    if ((this.bitField1_ & 0x100) != 0)
                        output.writeFloat(44, this.gENUL2L3_);
                    if ((this.bitField1_ & 0x200) != 0)
                        output.writeFloat(45, this.gENUL1L3_);
                    if ((this.bitField1_ & 0x400) != 0)
                        output.writeUInt32(46, this.pOWACTL1_);
                    if ((this.bitField1_ & 0x800) != 0)
                        output.writeUInt32(47, this.pOWACTL2_);
                    if ((this.bitField1_ & 0x1000) != 0)
                        output.writeUInt32(48, this.pOWACTL3_);
                    if ((this.bitField1_ & 0x2000) != 0)
                        output.writeUInt32(49, this.pOWFULLL1_);
                    if ((this.bitField1_ & 0x4000) != 0)
                        output.writeUInt32(50, this.pOWFULLL2_);
                    if ((this.bitField1_ & 0x8000) != 0)
                        output.writeUInt32(51, this.pOWFULLL3_);
                    if ((this.bitField1_ & 0x10000) != 0)
                        output.writeUInt32(52, this.pOWREACTL1_);
                    if ((this.bitField1_ & 0x20000) != 0)
                        output.writeUInt32(53, this.pOWREACTL2_);
                    if ((this.bitField1_ & 0x40000) != 0)
                        output.writeUInt32(54, this.pOWREACTL3_);
                    if ((this.bitField1_ & 0x80000) != 0)
                        output.writeFloat(55, this.pOWKOEF_);
                    if ((this.bitField1_ & 0x100000) != 0)
                        output.writeUInt32(56, this.pOWGENTOTAL_);
                    if ((this.bitField1_ & 0x200000) != 0)
                        output.writeUInt32(57, this.fUELLEVEL_);
                    if ((this.bitField1_ & 0x400000) != 0)
                        output.writeUInt32(60, this.sMSREGS0_);
                    if ((this.bitField1_ & 0x800000) != 0)
                        output.writeUInt32(61, this.sMSREGS1_);
                    if ((this.bitField1_ & 0x1000000) != 0)
                        output.writeUInt32(62, this.sMSREGS2_);
                    if ((this.bitField1_ & 0x2000000) != 0)
                        output.writeUInt32(63, this.sMSREGS3_);
                    if ((this.bitField1_ & 0x4000000) != 0)
                        output.writeUInt32(64, this.sMSREGS4_);
                    this.unknownFields.writeTo(output);
                }

                public int getSerializedSize() {
                    int size = this.memoizedSize;
                    if (size != -1)
                        return size;
                    size = 0;
                    if ((this.bitField0_ & 0x1) != 0)
                        size += CodedOutputStream.computeUInt32Size(1, this.gENOILPRESS1_);
                    if ((this.bitField0_ & 0x2) != 0)
                        size += CodedOutputStream.computeSInt32Size(2, this.gENTEMP1_);
                    if ((this.bitField0_ & 0x4) != 0)
                        size += CodedOutputStream.computeFloatSize(3, this.gENVOLT1_);
                    if ((this.bitField0_ & 0x8) != 0)
                        size += CodedOutputStream.computeUInt32Size(4, this.gENRPM1_);
                    if ((this.bitField0_ & 0x10) != 0)
                        size += CodedOutputStream.computeFloatSize(5, this.gENUL11_);
                    if ((this.bitField0_ & 0x20) != 0)
                        size += CodedOutputStream.computeFloatSize(6, this.gENUL21_);
                    if ((this.bitField0_ & 0x40) != 0)
                        size += CodedOutputStream.computeFloatSize(7, this.gENUL31_);
                    if ((this.bitField0_ & 0x80) != 0)
                        size += CodedOutputStream.computeFloatSize(8, this.gENIL11_);
                    if ((this.bitField0_ & 0x100) != 0)
                        size += CodedOutputStream.computeFloatSize(9, this.gENIL21_);
                    if ((this.bitField0_ & 0x200) != 0)
                        size += CodedOutputStream.computeFloatSize(10, this.gENIL31_);
                    if ((this.bitField0_ & 0x400) != 0)
                        size += CodedOutputStream.computeUInt32Size(11, this.gENSTATUS1_);
                    if ((this.bitField0_ & 0x800) != 0)
                        size += CodedOutputStream.computeUInt32Size(12, this.gENHOURS1_);
                    int dataSize = 0;
                    int i;
                    for (i = 0; i < this.gENALARM1_.size(); i++)
                        dataSize += CodedOutputStream.computeBytesSizeNoTag(this.gENALARM1_.get(i));
                    size += dataSize;
                    size += 1 * getGENALARM1List().size();
                    if ((this.bitField0_ & 0x1000) != 0)
                        size += CodedOutputStream.computeUInt32Size(14, this.gENOILPRESS2_);
                    if ((this.bitField0_ & 0x2000) != 0)
                        size += CodedOutputStream.computeSInt32Size(15, this.gENTEMP2_);
                    if ((this.bitField0_ & 0x4000) != 0)
                        size += CodedOutputStream.computeFloatSize(16, this.gENVOLT2_);
                    if ((this.bitField0_ & 0x8000) != 0)
                        size += CodedOutputStream.computeUInt32Size(17, this.gENRPM2_);
                    if ((this.bitField0_ & 0x10000) != 0)
                        size += CodedOutputStream.computeFloatSize(18, this.gENUL12_);
                    if ((this.bitField0_ & 0x20000) != 0)
                        size += CodedOutputStream.computeFloatSize(19, this.gENUL22_);
                    if ((this.bitField0_ & 0x40000) != 0)
                        size += CodedOutputStream.computeFloatSize(20, this.gENUL32_);
                    if ((this.bitField0_ & 0x80000) != 0)
                        size += CodedOutputStream.computeFloatSize(21, this.gENIL12_);
                    if ((this.bitField0_ & 0x100000) != 0)
                        size += CodedOutputStream.computeFloatSize(22, this.gENIL22_);
                    if ((this.bitField0_ & 0x200000) != 0)
                        size += CodedOutputStream.computeFloatSize(23, this.gENIL32_);
                    if ((this.bitField0_ & 0x400000) != 0)
                        size += CodedOutputStream.computeUInt32Size(24, this.gENSTATUS2_);
                    if ((this.bitField0_ & 0x800000) != 0)
                        size += CodedOutputStream.computeUInt32Size(25, this.gENHOURS2_);
                    dataSize = 0;
                    for (i = 0; i < this.gENALARM2_.size(); i++)
                        dataSize += CodedOutputStream.computeBytesSizeNoTag(this.gENALARM2_.get(i));
                    size += dataSize;
                    size += 2 * getGENALARM2List().size();
                    if ((this.bitField0_ & 0x1000000) != 0)
                        size += CodedOutputStream.computeUInt32Size(27, this.gENOILPRESS3_);
                    if ((this.bitField0_ & 0x2000000) != 0)
                        size += CodedOutputStream.computeSInt32Size(28, this.gENTEMP3_);
                    if ((this.bitField0_ & 0x4000000) != 0)
                        size += CodedOutputStream.computeFloatSize(29, this.gENVOLT3_);
                    if ((this.bitField0_ & 0x8000000) != 0)
                        size += CodedOutputStream.computeUInt32Size(30, this.gENRPM3_);
                    if ((this.bitField0_ & 0x10000000) != 0)
                        size += CodedOutputStream.computeFloatSize(31, this.gENUL13_);
                    if ((this.bitField0_ & 0x20000000) != 0)
                        size += CodedOutputStream.computeFloatSize(32, this.gENUL23_);
                    if ((this.bitField0_ & 0x40000000) != 0)
                        size += CodedOutputStream.computeFloatSize(33, this.gENUL33_);
                    if ((this.bitField0_ & Integer.MIN_VALUE) != 0)
                        size += CodedOutputStream.computeFloatSize(34, this.gENIL13_);
                    if ((this.bitField1_ & 0x1) != 0)
                        size += CodedOutputStream.computeFloatSize(35, this.gENIL23_);
                    if ((this.bitField1_ & 0x2) != 0)
                        size += CodedOutputStream.computeFloatSize(36, this.gENIL33_);
                    if ((this.bitField1_ & 0x4) != 0)
                        size += CodedOutputStream.computeUInt32Size(37, this.gENSTATUS3_);
                    if ((this.bitField1_ & 0x8) != 0)
                        size += CodedOutputStream.computeUInt32Size(38, this.gENHOURS3_);
                    dataSize = 0;
                    for (i = 0; i < this.gENALARM3_.size(); i++)
                        dataSize += CodedOutputStream.computeBytesSizeNoTag(this.gENALARM3_.get(i));
                    size += dataSize;
                    size += 2 * getGENALARM3List().size();
                    if ((this.bitField1_ & 0x10) != 0)
                        size += CodedOutputStream.computeFloatSize(40, this.gENUC_);
                    if ((this.bitField1_ & 0x20) != 0)
                        size += CodedOutputStream.computeUInt32Size(41, this.gENIC_);
                    if ((this.bitField1_ & 0x40) != 0)
                        size += CodedOutputStream.computeFloatSize(42, this.gENFREQ_);
                    if ((this.bitField1_ & 0x80) != 0)
                        size += CodedOutputStream.computeFloatSize(43, this.gENUL1L2_);
                    if ((this.bitField1_ & 0x100) != 0)
                        size += CodedOutputStream.computeFloatSize(44, this.gENUL2L3_);
                    if ((this.bitField1_ & 0x200) != 0)
                        size += CodedOutputStream.computeFloatSize(45, this.gENUL1L3_);
                    if ((this.bitField1_ & 0x400) != 0)
                        size += CodedOutputStream.computeUInt32Size(46, this.pOWACTL1_);
                    if ((this.bitField1_ & 0x800) != 0)
                        size += CodedOutputStream.computeUInt32Size(47, this.pOWACTL2_);
                    if ((this.bitField1_ & 0x1000) != 0)
                        size += CodedOutputStream.computeUInt32Size(48, this.pOWACTL3_);
                    if ((this.bitField1_ & 0x2000) != 0)
                        size += CodedOutputStream.computeUInt32Size(49, this.pOWFULLL1_);
                    if ((this.bitField1_ & 0x4000) != 0)
                        size += CodedOutputStream.computeUInt32Size(50, this.pOWFULLL2_);
                    if ((this.bitField1_ & 0x8000) != 0)
                        size += CodedOutputStream.computeUInt32Size(51, this.pOWFULLL3_);
                    if ((this.bitField1_ & 0x10000) != 0)
                        size += CodedOutputStream.computeUInt32Size(52, this.pOWREACTL1_);
                    if ((this.bitField1_ & 0x20000) != 0)
                        size += CodedOutputStream.computeUInt32Size(53, this.pOWREACTL2_);
                    if ((this.bitField1_ & 0x40000) != 0)
                        size += CodedOutputStream.computeUInt32Size(54, this.pOWREACTL3_);
                    if ((this.bitField1_ & 0x80000) != 0)
                        size += CodedOutputStream.computeFloatSize(55, this.pOWKOEF_);
                    if ((this.bitField1_ & 0x100000) != 0)
                        size += CodedOutputStream.computeUInt32Size(56, this.pOWGENTOTAL_);
                    if ((this.bitField1_ & 0x200000) != 0)
                        size += CodedOutputStream.computeUInt32Size(57, this.fUELLEVEL_);
                    if ((this.bitField1_ & 0x400000) != 0)
                        size += CodedOutputStream.computeUInt32Size(60, this.sMSREGS0_);
                    if ((this.bitField1_ & 0x800000) != 0)
                        size += CodedOutputStream.computeUInt32Size(61, this.sMSREGS1_);
                    if ((this.bitField1_ & 0x1000000) != 0)
                        size += CodedOutputStream.computeUInt32Size(62, this.sMSREGS2_);
                    if ((this.bitField1_ & 0x2000000) != 0)
                        size += CodedOutputStream.computeUInt32Size(63, this.sMSREGS3_);
                    if ((this.bitField1_ & 0x4000000) != 0)
                        size += CodedOutputStream.computeUInt32Size(64, this.sMSREGS4_);
                    size += this.unknownFields.getSerializedSize();
                    this.memoizedSize = size;
                    return size;
                }

                public boolean equals(Object obj) {
                    if (obj == this)
                        return true;
                    if (!(obj instanceof GenComm))
                        return super.equals(obj);
                    GenComm other = (GenComm) obj;
                    if (hasGENOILPRESS1() != other.hasGENOILPRESS1())
                        return false;
                    if (hasGENOILPRESS1() && getGENOILPRESS1() != other.getGENOILPRESS1())
                        return false;
                    if (hasGENTEMP1() != other.hasGENTEMP1())
                        return false;
                    if (hasGENTEMP1() && getGENTEMP1() != other.getGENTEMP1())
                        return false;
                    if (hasGENVOLT1() != other.hasGENVOLT1())
                        return false;
                    if (hasGENVOLT1() && Float.floatToIntBits(getGENVOLT1()) != Float.floatToIntBits(other.getGENVOLT1()))
                        return false;
                    if (hasGENRPM1() != other.hasGENRPM1())
                        return false;
                    if (hasGENRPM1() && getGENRPM1() != other.getGENRPM1())
                        return false;
                    if (hasGENUL11() != other.hasGENUL11())
                        return false;
                    if (hasGENUL11() && Float.floatToIntBits(getGENUL11()) != Float.floatToIntBits(other.getGENUL11()))
                        return false;
                    if (hasGENUL21() != other.hasGENUL21())
                        return false;
                    if (hasGENUL21() && Float.floatToIntBits(getGENUL21()) != Float.floatToIntBits(other.getGENUL21()))
                        return false;
                    if (hasGENUL31() != other.hasGENUL31())
                        return false;
                    if (hasGENUL31() && Float.floatToIntBits(getGENUL31()) != Float.floatToIntBits(other.getGENUL31()))
                        return false;
                    if (hasGENIL11() != other.hasGENIL11())
                        return false;
                    if (hasGENIL11() && Float.floatToIntBits(getGENIL11()) != Float.floatToIntBits(other.getGENIL11()))
                        return false;
                    if (hasGENIL21() != other.hasGENIL21())
                        return false;
                    if (hasGENIL21() && Float.floatToIntBits(getGENIL21()) != Float.floatToIntBits(other.getGENIL21()))
                        return false;
                    if (hasGENIL31() != other.hasGENIL31())
                        return false;
                    if (hasGENIL31() && Float.floatToIntBits(getGENIL31()) != Float.floatToIntBits(other.getGENIL31()))
                        return false;
                    if (hasGENSTATUS1() != other.hasGENSTATUS1())
                        return false;
                    if (hasGENSTATUS1() && getGENSTATUS1() != other.getGENSTATUS1())
                        return false;
                    if (hasGENHOURS1() != other.hasGENHOURS1())
                        return false;
                    if (hasGENHOURS1() && getGENHOURS1() != other.getGENHOURS1())
                        return false;
                    if (!getGENALARM1List().equals(other.getGENALARM1List()))
                        return false;
                    if (hasGENOILPRESS2() != other.hasGENOILPRESS2())
                        return false;
                    if (hasGENOILPRESS2() && getGENOILPRESS2() != other.getGENOILPRESS2())
                        return false;
                    if (hasGENTEMP2() != other.hasGENTEMP2())
                        return false;
                    if (hasGENTEMP2() && getGENTEMP2() != other.getGENTEMP2())
                        return false;
                    if (hasGENVOLT2() != other.hasGENVOLT2())
                        return false;
                    if (hasGENVOLT2() && Float.floatToIntBits(getGENVOLT2()) != Float.floatToIntBits(other.getGENVOLT2()))
                        return false;
                    if (hasGENRPM2() != other.hasGENRPM2())
                        return false;
                    if (hasGENRPM2() && getGENRPM2() != other.getGENRPM2())
                        return false;
                    if (hasGENUL12() != other.hasGENUL12())
                        return false;
                    if (hasGENUL12() && Float.floatToIntBits(getGENUL12()) != Float.floatToIntBits(other.getGENUL12()))
                        return false;
                    if (hasGENUL22() != other.hasGENUL22())
                        return false;
                    if (hasGENUL22() && Float.floatToIntBits(getGENUL22()) != Float.floatToIntBits(other.getGENUL22()))
                        return false;
                    if (hasGENUL32() != other.hasGENUL32())
                        return false;
                    if (hasGENUL32() && Float.floatToIntBits(getGENUL32()) != Float.floatToIntBits(other.getGENUL32()))
                        return false;
                    if (hasGENIL12() != other.hasGENIL12())
                        return false;
                    if (hasGENIL12() && Float.floatToIntBits(getGENIL12()) != Float.floatToIntBits(other.getGENIL12()))
                        return false;
                    if (hasGENIL22() != other.hasGENIL22())
                        return false;
                    if (hasGENIL22() && Float.floatToIntBits(getGENIL22()) != Float.floatToIntBits(other.getGENIL22()))
                        return false;
                    if (hasGENIL32() != other.hasGENIL32())
                        return false;
                    if (hasGENIL32() && Float.floatToIntBits(getGENIL32()) != Float.floatToIntBits(other.getGENIL32()))
                        return false;
                    if (hasGENSTATUS2() != other.hasGENSTATUS2())
                        return false;
                    if (hasGENSTATUS2() && getGENSTATUS2() != other.getGENSTATUS2())
                        return false;
                    if (hasGENHOURS2() != other.hasGENHOURS2())
                        return false;
                    if (hasGENHOURS2() && getGENHOURS2() != other.getGENHOURS2())
                        return false;
                    if (!getGENALARM2List().equals(other.getGENALARM2List()))
                        return false;
                    if (hasGENOILPRESS3() != other.hasGENOILPRESS3())
                        return false;
                    if (hasGENOILPRESS3() && getGENOILPRESS3() != other.getGENOILPRESS3())
                        return false;
                    if (hasGENTEMP3() != other.hasGENTEMP3())
                        return false;
                    if (hasGENTEMP3() && getGENTEMP3() != other.getGENTEMP3())
                        return false;
                    if (hasGENVOLT3() != other.hasGENVOLT3())
                        return false;
                    if (hasGENVOLT3() && Float.floatToIntBits(getGENVOLT3()) != Float.floatToIntBits(other.getGENVOLT3()))
                        return false;
                    if (hasGENRPM3() != other.hasGENRPM3())
                        return false;
                    if (hasGENRPM3() && getGENRPM3() != other.getGENRPM3())
                        return false;
                    if (hasGENUL13() != other.hasGENUL13())
                        return false;
                    if (hasGENUL13() && Float.floatToIntBits(getGENUL13()) != Float.floatToIntBits(other.getGENUL13()))
                        return false;
                    if (hasGENUL23() != other.hasGENUL23())
                        return false;
                    if (hasGENUL23() && Float.floatToIntBits(getGENUL23()) != Float.floatToIntBits(other.getGENUL23()))
                        return false;
                    if (hasGENUL33() != other.hasGENUL33())
                        return false;
                    if (hasGENUL33() && Float.floatToIntBits(getGENUL33()) != Float.floatToIntBits(other.getGENUL33()))
                        return false;
                    if (hasGENIL13() != other.hasGENIL13())
                        return false;
                    if (hasGENIL13() && Float.floatToIntBits(getGENIL13()) != Float.floatToIntBits(other.getGENIL13()))
                        return false;
                    if (hasGENIL23() != other.hasGENIL23())
                        return false;
                    if (hasGENIL23() && Float.floatToIntBits(getGENIL23()) != Float.floatToIntBits(other.getGENIL23()))
                        return false;
                    if (hasGENIL33() != other.hasGENIL33())
                        return false;
                    if (hasGENIL33() && Float.floatToIntBits(getGENIL33()) != Float.floatToIntBits(other.getGENIL33()))
                        return false;
                    if (hasGENSTATUS3() != other.hasGENSTATUS3())
                        return false;
                    if (hasGENSTATUS3() && getGENSTATUS3() != other.getGENSTATUS3())
                        return false;
                    if (hasGENHOURS3() != other.hasGENHOURS3())
                        return false;
                    if (hasGENHOURS3() && getGENHOURS3() != other.getGENHOURS3())
                        return false;
                    if (!getGENALARM3List().equals(other.getGENALARM3List()))
                        return false;
                    if (hasGENUC() != other.hasGENUC())
                        return false;
                    if (hasGENUC() && Float.floatToIntBits(getGENUC()) != Float.floatToIntBits(other.getGENUC()))
                        return false;
                    if (hasGENIC() != other.hasGENIC())
                        return false;
                    if (hasGENIC() && getGENIC() != other.getGENIC())
                        return false;
                    if (hasGENFREQ() != other.hasGENFREQ())
                        return false;
                    if (hasGENFREQ() && Float.floatToIntBits(getGENFREQ()) != Float.floatToIntBits(other.getGENFREQ()))
                        return false;
                    if (hasGENUL1L2() != other.hasGENUL1L2())
                        return false;
                    if (hasGENUL1L2() && Float.floatToIntBits(getGENUL1L2()) != Float.floatToIntBits(other.getGENUL1L2()))
                        return false;
                    if (hasGENUL2L3() != other.hasGENUL2L3())
                        return false;
                    if (hasGENUL2L3() && Float.floatToIntBits(getGENUL2L3()) != Float.floatToIntBits(other.getGENUL2L3()))
                        return false;
                    if (hasGENUL1L3() != other.hasGENUL1L3())
                        return false;
                    if (hasGENUL1L3() && Float.floatToIntBits(getGENUL1L3()) != Float.floatToIntBits(other.getGENUL1L3()))
                        return false;
                    if (hasPOWACTL1() != other.hasPOWACTL1())
                        return false;
                    if (hasPOWACTL1() && getPOWACTL1() != other.getPOWACTL1())
                        return false;
                    if (hasPOWACTL2() != other.hasPOWACTL2())
                        return false;
                    if (hasPOWACTL2() && getPOWACTL2() != other.getPOWACTL2())
                        return false;
                    if (hasPOWACTL3() != other.hasPOWACTL3())
                        return false;
                    if (hasPOWACTL3() && getPOWACTL3() != other.getPOWACTL3())
                        return false;
                    if (hasPOWFULLL1() != other.hasPOWFULLL1())
                        return false;
                    if (hasPOWFULLL1() && getPOWFULLL1() != other.getPOWFULLL1())
                        return false;
                    if (hasPOWFULLL2() != other.hasPOWFULLL2())
                        return false;
                    if (hasPOWFULLL2() && getPOWFULLL2() != other.getPOWFULLL2())
                        return false;
                    if (hasPOWFULLL3() != other.hasPOWFULLL3())
                        return false;
                    if (hasPOWFULLL3() && getPOWFULLL3() != other.getPOWFULLL3())
                        return false;
                    if (hasPOWREACTL1() != other.hasPOWREACTL1())
                        return false;
                    if (hasPOWREACTL1() && getPOWREACTL1() != other.getPOWREACTL1())
                        return false;
                    if (hasPOWREACTL2() != other.hasPOWREACTL2())
                        return false;
                    if (hasPOWREACTL2() && getPOWREACTL2() != other.getPOWREACTL2())
                        return false;
                    if (hasPOWREACTL3() != other.hasPOWREACTL3())
                        return false;
                    if (hasPOWREACTL3() && getPOWREACTL3() != other.getPOWREACTL3())
                        return false;
                    if (hasPOWKOEF() != other.hasPOWKOEF())
                        return false;
                    if (hasPOWKOEF() && Float.floatToIntBits(getPOWKOEF()) != Float.floatToIntBits(other.getPOWKOEF()))
                        return false;
                    if (hasPOWGENTOTAL() != other.hasPOWGENTOTAL())
                        return false;
                    if (hasPOWGENTOTAL() && getPOWGENTOTAL() != other.getPOWGENTOTAL())
                        return false;
                    if (hasFUELLEVEL() != other.hasFUELLEVEL())
                        return false;
                    if (hasFUELLEVEL() && getFUELLEVEL() != other.getFUELLEVEL())
                        return false;
                    if (hasSMSREGS0() != other.hasSMSREGS0())
                        return false;
                    if (hasSMSREGS0() && getSMSREGS0() != other.getSMSREGS0())
                        return false;
                    if (hasSMSREGS1() != other.hasSMSREGS1())
                        return false;
                    if (hasSMSREGS1() && getSMSREGS1() != other.getSMSREGS1())
                        return false;
                    if (hasSMSREGS2() != other.hasSMSREGS2())
                        return false;
                    if (hasSMSREGS2() && getSMSREGS2() != other.getSMSREGS2())
                        return false;
                    if (hasSMSREGS3() != other.hasSMSREGS3())
                        return false;
                    if (hasSMSREGS3() && getSMSREGS3() != other.getSMSREGS3())
                        return false;
                    if (hasSMSREGS4() != other.hasSMSREGS4())
                        return false;
                    if (hasSMSREGS4() && getSMSREGS4() != other.getSMSREGS4())
                        return false;
                    if (!this.unknownFields.equals(other.unknownFields))
                        return false;
                    return true;
                }

                public int hashCode() {
                    if (this.memoizedHashCode != 0)
                        return this.memoizedHashCode;
                    int hash = 41;
                    hash = 19 * hash + getDescriptor().hashCode();
                    if (hasGENOILPRESS1()) {
                        hash = 37 * hash + 1;
                        hash = 53 * hash + getGENOILPRESS1();
                    }
                    if (hasGENTEMP1()) {
                        hash = 37 * hash + 2;
                        hash = 53 * hash + getGENTEMP1();
                    }
                    if (hasGENVOLT1()) {
                        hash = 37 * hash + 3;
                        hash = 53 * hash + Float.floatToIntBits(getGENVOLT1());
                    }
                    if (hasGENRPM1()) {
                        hash = 37 * hash + 4;
                        hash = 53 * hash + getGENRPM1();
                    }
                    if (hasGENUL11()) {
                        hash = 37 * hash + 5;
                        hash = 53 * hash + Float.floatToIntBits(getGENUL11());
                    }
                    if (hasGENUL21()) {
                        hash = 37 * hash + 6;
                        hash = 53 * hash + Float.floatToIntBits(getGENUL21());
                    }
                    if (hasGENUL31()) {
                        hash = 37 * hash + 7;
                        hash = 53 * hash + Float.floatToIntBits(getGENUL31());
                    }
                    if (hasGENIL11()) {
                        hash = 37 * hash + 8;
                        hash = 53 * hash + Float.floatToIntBits(getGENIL11());
                    }
                    if (hasGENIL21()) {
                        hash = 37 * hash + 9;
                        hash = 53 * hash + Float.floatToIntBits(getGENIL21());
                    }
                    if (hasGENIL31()) {
                        hash = 37 * hash + 10;
                        hash = 53 * hash + Float.floatToIntBits(getGENIL31());
                    }
                    if (hasGENSTATUS1()) {
                        hash = 37 * hash + 11;
                        hash = 53 * hash + getGENSTATUS1();
                    }
                    if (hasGENHOURS1()) {
                        hash = 37 * hash + 12;
                        hash = 53 * hash + getGENHOURS1();
                    }
                    if (getGENALARM1Count() > 0) {
                        hash = 37 * hash + 13;
                        hash = 53 * hash + getGENALARM1List().hashCode();
                    }
                    if (hasGENOILPRESS2()) {
                        hash = 37 * hash + 14;
                        hash = 53 * hash + getGENOILPRESS2();
                    }
                    if (hasGENTEMP2()) {
                        hash = 37 * hash + 15;
                        hash = 53 * hash + getGENTEMP2();
                    }
                    if (hasGENVOLT2()) {
                        hash = 37 * hash + 16;
                        hash = 53 * hash + Float.floatToIntBits(getGENVOLT2());
                    }
                    if (hasGENRPM2()) {
                        hash = 37 * hash + 17;
                        hash = 53 * hash + getGENRPM2();
                    }
                    if (hasGENUL12()) {
                        hash = 37 * hash + 18;
                        hash = 53 * hash + Float.floatToIntBits(getGENUL12());
                    }
                    if (hasGENUL22()) {
                        hash = 37 * hash + 19;
                        hash = 53 * hash + Float.floatToIntBits(getGENUL22());
                    }
                    if (hasGENUL32()) {
                        hash = 37 * hash + 20;
                        hash = 53 * hash + Float.floatToIntBits(getGENUL32());
                    }
                    if (hasGENIL12()) {
                        hash = 37 * hash + 21;
                        hash = 53 * hash + Float.floatToIntBits(getGENIL12());
                    }
                    if (hasGENIL22()) {
                        hash = 37 * hash + 22;
                        hash = 53 * hash + Float.floatToIntBits(getGENIL22());
                    }
                    if (hasGENIL32()) {
                        hash = 37 * hash + 23;
                        hash = 53 * hash + Float.floatToIntBits(getGENIL32());
                    }
                    if (hasGENSTATUS2()) {
                        hash = 37 * hash + 24;
                        hash = 53 * hash + getGENSTATUS2();
                    }
                    if (hasGENHOURS2()) {
                        hash = 37 * hash + 25;
                        hash = 53 * hash + getGENHOURS2();
                    }
                    if (getGENALARM2Count() > 0) {
                        hash = 37 * hash + 26;
                        hash = 53 * hash + getGENALARM2List().hashCode();
                    }
                    if (hasGENOILPRESS3()) {
                        hash = 37 * hash + 27;
                        hash = 53 * hash + getGENOILPRESS3();
                    }
                    if (hasGENTEMP3()) {
                        hash = 37 * hash + 28;
                        hash = 53 * hash + getGENTEMP3();
                    }
                    if (hasGENVOLT3()) {
                        hash = 37 * hash + 29;
                        hash = 53 * hash + Float.floatToIntBits(getGENVOLT3());
                    }
                    if (hasGENRPM3()) {
                        hash = 37 * hash + 30;
                        hash = 53 * hash + getGENRPM3();
                    }
                    if (hasGENUL13()) {
                        hash = 37 * hash + 31;
                        hash = 53 * hash + Float.floatToIntBits(getGENUL13());
                    }
                    if (hasGENUL23()) {
                        hash = 37 * hash + 32;
                        hash = 53 * hash + Float.floatToIntBits(getGENUL23());
                    }
                    if (hasGENUL33()) {
                        hash = 37 * hash + 33;
                        hash = 53 * hash + Float.floatToIntBits(getGENUL33());
                    }
                    if (hasGENIL13()) {
                        hash = 37 * hash + 34;
                        hash = 53 * hash + Float.floatToIntBits(getGENIL13());
                    }
                    if (hasGENIL23()) {
                        hash = 37 * hash + 35;
                        hash = 53 * hash + Float.floatToIntBits(getGENIL23());
                    }
                    if (hasGENIL33()) {
                        hash = 37 * hash + 36;
                        hash = 53 * hash + Float.floatToIntBits(getGENIL33());
                    }
                    if (hasGENSTATUS3()) {
                        hash = 37 * hash + 37;
                        hash = 53 * hash + getGENSTATUS3();
                    }
                    if (hasGENHOURS3()) {
                        hash = 37 * hash + 38;
                        hash = 53 * hash + getGENHOURS3();
                    }
                    if (getGENALARM3Count() > 0) {
                        hash = 37 * hash + 39;
                        hash = 53 * hash + getGENALARM3List().hashCode();
                    }
                    if (hasGENUC()) {
                        hash = 37 * hash + 40;
                        hash = 53 * hash + Float.floatToIntBits(getGENUC());
                    }
                    if (hasGENIC()) {
                        hash = 37 * hash + 41;
                        hash = 53 * hash + getGENIC();
                    }
                    if (hasGENFREQ()) {
                        hash = 37 * hash + 42;
                        hash = 53 * hash + Float.floatToIntBits(getGENFREQ());
                    }
                    if (hasGENUL1L2()) {
                        hash = 37 * hash + 43;
                        hash = 53 * hash + Float.floatToIntBits(getGENUL1L2());
                    }
                    if (hasGENUL2L3()) {
                        hash = 37 * hash + 44;
                        hash = 53 * hash + Float.floatToIntBits(getGENUL2L3());
                    }
                    if (hasGENUL1L3()) {
                        hash = 37 * hash + 45;
                        hash = 53 * hash + Float.floatToIntBits(getGENUL1L3());
                    }
                    if (hasPOWACTL1()) {
                        hash = 37 * hash + 46;
                        hash = 53 * hash + getPOWACTL1();
                    }
                    if (hasPOWACTL2()) {
                        hash = 37 * hash + 47;
                        hash = 53 * hash + getPOWACTL2();
                    }
                    if (hasPOWACTL3()) {
                        hash = 37 * hash + 48;
                        hash = 53 * hash + getPOWACTL3();
                    }
                    if (hasPOWFULLL1()) {
                        hash = 37 * hash + 49;
                        hash = 53 * hash + getPOWFULLL1();
                    }
                    if (hasPOWFULLL2()) {
                        hash = 37 * hash + 50;
                        hash = 53 * hash + getPOWFULLL2();
                    }
                    if (hasPOWFULLL3()) {
                        hash = 37 * hash + 51;
                        hash = 53 * hash + getPOWFULLL3();
                    }
                    if (hasPOWREACTL1()) {
                        hash = 37 * hash + 52;
                        hash = 53 * hash + getPOWREACTL1();
                    }
                    if (hasPOWREACTL2()) {
                        hash = 37 * hash + 53;
                        hash = 53 * hash + getPOWREACTL2();
                    }
                    if (hasPOWREACTL3()) {
                        hash = 37 * hash + 54;
                        hash = 53 * hash + getPOWREACTL3();
                    }
                    if (hasPOWKOEF()) {
                        hash = 37 * hash + 55;
                        hash = 53 * hash + Float.floatToIntBits(getPOWKOEF());
                    }
                    if (hasPOWGENTOTAL()) {
                        hash = 37 * hash + 56;
                        hash = 53 * hash + getPOWGENTOTAL();
                    }
                    if (hasFUELLEVEL()) {
                        hash = 37 * hash + 57;
                        hash = 53 * hash + getFUELLEVEL();
                    }
                    if (hasSMSREGS0()) {
                        hash = 37 * hash + 60;
                        hash = 53 * hash + getSMSREGS0();
                    }
                    if (hasSMSREGS1()) {
                        hash = 37 * hash + 61;
                        hash = 53 * hash + getSMSREGS1();
                    }
                    if (hasSMSREGS2()) {
                        hash = 37 * hash + 62;
                        hash = 53 * hash + getSMSREGS2();
                    }
                    if (hasSMSREGS3()) {
                        hash = 37 * hash + 63;
                        hash = 53 * hash + getSMSREGS3();
                    }
                    if (hasSMSREGS4()) {
                        hash = 37 * hash + 64;
                        hash = 53 * hash + getSMSREGS4();
                    }
                    hash = 29 * hash + this.unknownFields.hashCode();
                    this.memoizedHashCode = hash;
                    return hash;
                }

                public static GenComm parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
                    return (GenComm) PARSER.parseFrom(data);
                }

                public static GenComm parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                    return (GenComm) PARSER.parseFrom(data, extensionRegistry);
                }

                public static GenComm parseFrom(ByteString data) throws InvalidProtocolBufferException {
                    return (GenComm) PARSER.parseFrom(data);
                }

                public static GenComm parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                    return (GenComm) PARSER.parseFrom(data, extensionRegistry);
                }

                public static GenComm parseFrom(byte[] data) throws InvalidProtocolBufferException {
                    return (GenComm) PARSER.parseFrom(data);
                }

                public static GenComm parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                    return (GenComm) PARSER.parseFrom(data, extensionRegistry);
                }

                public static GenComm parseFrom(InputStream input) throws IOException {
                    return (GenComm) GeneratedMessageV3.parseWithIOException(PARSER, input);
                }

                public static GenComm parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                    return (GenComm) GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
                }

                public static GenComm parseDelimitedFrom(InputStream input) throws IOException {
                    return (GenComm) GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
                }

                public static GenComm parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                    return (GenComm) GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
                }

                public static GenComm parseFrom(CodedInputStream input) throws IOException {
                    return (GenComm) GeneratedMessageV3.parseWithIOException(PARSER, input);
                }

                public static GenComm parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                    return (GenComm) GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
                }

                public Builder newBuilderForType() {
                    return newBuilder();
                }

                public static Builder newBuilder() {
                    return DEFAULT_INSTANCE.toBuilder();
                }

                public static Builder newBuilder(GenComm prototype) {
                    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
                }

                public Builder toBuilder() {
                    return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder()).mergeFrom(this);
                }

                protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
                    Builder builder = new Builder(parent);
                    return builder;
                }

                public static final class Builder extends GeneratedMessageV3.Builder<Builder> implements OmnicommMessageOuterClass.OmnicommMessage.Other.GenCommOrBuilder {
                    private int bitField0_;

                    private int bitField1_;

                    private int gENOILPRESS1_;

                    private int gENTEMP1_;

                    private float gENVOLT1_;

                    private int gENRPM1_;

                    private float gENUL11_;

                    private float gENUL21_;

                    private float gENUL31_;

                    private float gENIL11_;

                    private float gENIL21_;

                    private float gENIL31_;

                    private int gENSTATUS1_;

                    private int gENHOURS1_;

                    private List<ByteString> gENALARM1_;

                    private int gENOILPRESS2_;

                    private int gENTEMP2_;

                    private float gENVOLT2_;

                    private int gENRPM2_;

                    private float gENUL12_;

                    private float gENUL22_;

                    private float gENUL32_;

                    private float gENIL12_;

                    private float gENIL22_;

                    private float gENIL32_;

                    private int gENSTATUS2_;

                    private int gENHOURS2_;

                    private List<ByteString> gENALARM2_;

                    private int gENOILPRESS3_;

                    private int gENTEMP3_;

                    private float gENVOLT3_;

                    private int gENRPM3_;

                    private float gENUL13_;

                    private float gENUL23_;

                    private float gENUL33_;

                    private float gENIL13_;

                    private float gENIL23_;

                    private float gENIL33_;

                    private int gENSTATUS3_;

                    private int gENHOURS3_;

                    private List<ByteString> gENALARM3_;

                    private float gENUC_;

                    private int gENIC_;

                    private float gENFREQ_;

                    private float gENUL1L2_;

                    private float gENUL2L3_;

                    private float gENUL1L3_;

                    private int pOWACTL1_;

                    private int pOWACTL2_;

                    private int pOWACTL3_;

                    private int pOWFULLL1_;

                    private int pOWFULLL2_;

                    private int pOWFULLL3_;

                    private int pOWREACTL1_;

                    private int pOWREACTL2_;

                    private int pOWREACTL3_;

                    private float pOWKOEF_;

                    private int pOWGENTOTAL_;

                    private int fUELLEVEL_;

                    private int sMSREGS0_;

                    private int sMSREGS1_;

                    private int sMSREGS2_;

                    private int sMSREGS3_;

                    private int sMSREGS4_;

                    public static final Descriptors.Descriptor getDescriptor() {
                        return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_GenComm_descriptor;
                    }

                    protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
                        return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_GenComm_fieldAccessorTable.ensureFieldAccessorsInitialized(OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm.class, Builder.class);
                    }

                    private Builder() {
                        this.gENALARM1_ = Collections.emptyList();
                        this.gENALARM2_ = Collections.emptyList();
                        this.gENALARM3_ = Collections.emptyList();
                        maybeForceBuilderInitialization();
                    }

                    private Builder(GeneratedMessageV3.BuilderParent parent) {
                        super(parent);
                        this.gENALARM1_ = Collections.emptyList();
                        this.gENALARM2_ = Collections.emptyList();
                        this.gENALARM3_ = Collections.emptyList();
                        maybeForceBuilderInitialization();
                    }

                    private void maybeForceBuilderInitialization() {
                        if (OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm.alwaysUseFieldBuilders) ;
                    }

                    public Builder clear() {
                        super.clear();
                        this.gENOILPRESS1_ = 0;
                        this.bitField0_ &= 0xFFFFFFFE;
                        this.gENTEMP1_ = 0;
                        this.bitField0_ &= 0xFFFFFFFD;
                        this.gENVOLT1_ = 0.0F;
                        this.bitField0_ &= 0xFFFFFFFB;
                        this.gENRPM1_ = 0;
                        this.bitField0_ &= 0xFFFFFFF7;
                        this.gENUL11_ = 0.0F;
                        this.bitField0_ &= 0xFFFFFFEF;
                        this.gENUL21_ = 0.0F;
                        this.bitField0_ &= 0xFFFFFFDF;
                        this.gENUL31_ = 0.0F;
                        this.bitField0_ &= 0xFFFFFFBF;
                        this.gENIL11_ = 0.0F;
                        this.bitField0_ &= 0xFFFFFF7F;
                        this.gENIL21_ = 0.0F;
                        this.bitField0_ &= 0xFFFFFEFF;
                        this.gENIL31_ = 0.0F;
                        this.bitField0_ &= 0xFFFFFDFF;
                        this.gENSTATUS1_ = 0;
                        this.bitField0_ &= 0xFFFFFBFF;
                        this.gENHOURS1_ = 0;
                        this.bitField0_ &= 0xFFFFF7FF;
                        this.gENALARM1_ = Collections.emptyList();
                        this.bitField0_ &= 0xFFFFEFFF;
                        this.gENOILPRESS2_ = 0;
                        this.bitField0_ &= 0xFFFFDFFF;
                        this.gENTEMP2_ = 0;
                        this.bitField0_ &= 0xFFFFBFFF;
                        this.gENVOLT2_ = 0.0F;
                        this.bitField0_ &= 0xFFFF7FFF;
                        this.gENRPM2_ = 0;
                        this.bitField0_ &= 0xFFFEFFFF;
                        this.gENUL12_ = 0.0F;
                        this.bitField0_ &= 0xFFFDFFFF;
                        this.gENUL22_ = 0.0F;
                        this.bitField0_ &= 0xFFFBFFFF;
                        this.gENUL32_ = 0.0F;
                        this.bitField0_ &= 0xFFF7FFFF;
                        this.gENIL12_ = 0.0F;
                        this.bitField0_ &= 0xFFEFFFFF;
                        this.gENIL22_ = 0.0F;
                        this.bitField0_ &= 0xFFDFFFFF;
                        this.gENIL32_ = 0.0F;
                        this.bitField0_ &= 0xFFBFFFFF;
                        this.gENSTATUS2_ = 0;
                        this.bitField0_ &= 0xFF7FFFFF;
                        this.gENHOURS2_ = 0;
                        this.bitField0_ &= 0xFEFFFFFF;
                        this.gENALARM2_ = Collections.emptyList();
                        this.bitField0_ &= 0xFDFFFFFF;
                        this.gENOILPRESS3_ = 0;
                        this.bitField0_ &= 0xFBFFFFFF;
                        this.gENTEMP3_ = 0;
                        this.bitField0_ &= 0xF7FFFFFF;
                        this.gENVOLT3_ = 0.0F;
                        this.bitField0_ &= 0xEFFFFFFF;
                        this.gENRPM3_ = 0;
                        this.bitField0_ &= 0xDFFFFFFF;
                        this.gENUL13_ = 0.0F;
                        this.bitField0_ &= 0xBFFFFFFF;
                        this.gENUL23_ = 0.0F;
                        this.bitField0_ &= Integer.MAX_VALUE;
                        this.gENUL33_ = 0.0F;
                        this.bitField1_ &= 0xFFFFFFFE;
                        this.gENIL13_ = 0.0F;
                        this.bitField1_ &= 0xFFFFFFFD;
                        this.gENIL23_ = 0.0F;
                        this.bitField1_ &= 0xFFFFFFFB;
                        this.gENIL33_ = 0.0F;
                        this.bitField1_ &= 0xFFFFFFF7;
                        this.gENSTATUS3_ = 0;
                        this.bitField1_ &= 0xFFFFFFEF;
                        this.gENHOURS3_ = 0;
                        this.bitField1_ &= 0xFFFFFFDF;
                        this.gENALARM3_ = Collections.emptyList();
                        this.bitField1_ &= 0xFFFFFFBF;
                        this.gENUC_ = 0.0F;
                        this.bitField1_ &= 0xFFFFFF7F;
                        this.gENIC_ = 0;
                        this.bitField1_ &= 0xFFFFFEFF;
                        this.gENFREQ_ = 0.0F;
                        this.bitField1_ &= 0xFFFFFDFF;
                        this.gENUL1L2_ = 0.0F;
                        this.bitField1_ &= 0xFFFFFBFF;
                        this.gENUL2L3_ = 0.0F;
                        this.bitField1_ &= 0xFFFFF7FF;
                        this.gENUL1L3_ = 0.0F;
                        this.bitField1_ &= 0xFFFFEFFF;
                        this.pOWACTL1_ = 0;
                        this.bitField1_ &= 0xFFFFDFFF;
                        this.pOWACTL2_ = 0;
                        this.bitField1_ &= 0xFFFFBFFF;
                        this.pOWACTL3_ = 0;
                        this.bitField1_ &= 0xFFFF7FFF;
                        this.pOWFULLL1_ = 0;
                        this.bitField1_ &= 0xFFFEFFFF;
                        this.pOWFULLL2_ = 0;
                        this.bitField1_ &= 0xFFFDFFFF;
                        this.pOWFULLL3_ = 0;
                        this.bitField1_ &= 0xFFFBFFFF;
                        this.pOWREACTL1_ = 0;
                        this.bitField1_ &= 0xFFF7FFFF;
                        this.pOWREACTL2_ = 0;
                        this.bitField1_ &= 0xFFEFFFFF;
                        this.pOWREACTL3_ = 0;
                        this.bitField1_ &= 0xFFDFFFFF;
                        this.pOWKOEF_ = 0.0F;
                        this.bitField1_ &= 0xFFBFFFFF;
                        this.pOWGENTOTAL_ = 0;
                        this.bitField1_ &= 0xFF7FFFFF;
                        this.fUELLEVEL_ = 0;
                        this.bitField1_ &= 0xFEFFFFFF;
                        this.sMSREGS0_ = 0;
                        this.bitField1_ &= 0xFDFFFFFF;
                        this.sMSREGS1_ = 0;
                        this.bitField1_ &= 0xFBFFFFFF;
                        this.sMSREGS2_ = 0;
                        this.bitField1_ &= 0xF7FFFFFF;
                        this.sMSREGS3_ = 0;
                        this.bitField1_ &= 0xEFFFFFFF;
                        this.sMSREGS4_ = 0;
                        this.bitField1_ &= 0xDFFFFFFF;
                        return this;
                    }

                    public Descriptors.Descriptor getDescriptorForType() {
                        return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_GenComm_descriptor;
                    }

                    public OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm getDefaultInstanceForType() {
                        return OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm.getDefaultInstance();
                    }

                    public OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm build() {
                        OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm result = buildPartial();
                        if (!result.isInitialized())
                            throw newUninitializedMessageException(result);
                        return result;
                    }

                    public OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm buildPartial() {
                        OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm result = new OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm(this);
                        int from_bitField0_ = this.bitField0_;
                        int from_bitField1_ = this.bitField1_;
                        int to_bitField0_ = 0;
                        int to_bitField1_ = 0;
                        if ((from_bitField0_ & 0x1) != 0) {
                            result.gENOILPRESS1_ = this.gENOILPRESS1_;
                            to_bitField0_ |= 0x1;
                        }
                        if ((from_bitField0_ & 0x2) != 0) {
                            result.gENTEMP1_ = this.gENTEMP1_;
                            to_bitField0_ |= 0x2;
                        }
                        if ((from_bitField0_ & 0x4) != 0) {
                            result.gENVOLT1_ = this.gENVOLT1_;
                            to_bitField0_ |= 0x4;
                        }
                        if ((from_bitField0_ & 0x8) != 0) {
                            result.gENRPM1_ = this.gENRPM1_;
                            to_bitField0_ |= 0x8;
                        }
                        if ((from_bitField0_ & 0x10) != 0) {
                            result.gENUL11_ = this.gENUL11_;
                            to_bitField0_ |= 0x10;
                        }
                        if ((from_bitField0_ & 0x20) != 0) {
                            result.gENUL21_ = this.gENUL21_;
                            to_bitField0_ |= 0x20;
                        }
                        if ((from_bitField0_ & 0x40) != 0) {
                            result.gENUL31_ = this.gENUL31_;
                            to_bitField0_ |= 0x40;
                        }
                        if ((from_bitField0_ & 0x80) != 0) {
                            result.gENIL11_ = this.gENIL11_;
                            to_bitField0_ |= 0x80;
                        }
                        if ((from_bitField0_ & 0x100) != 0) {
                            result.gENIL21_ = this.gENIL21_;
                            to_bitField0_ |= 0x100;
                        }
                        if ((from_bitField0_ & 0x200) != 0) {
                            result.gENIL31_ = this.gENIL31_;
                            to_bitField0_ |= 0x200;
                        }
                        if ((from_bitField0_ & 0x400) != 0) {
                            result.gENSTATUS1_ = this.gENSTATUS1_;
                            to_bitField0_ |= 0x400;
                        }
                        if ((from_bitField0_ & 0x800) != 0) {
                            result.gENHOURS1_ = this.gENHOURS1_;
                            to_bitField0_ |= 0x800;
                        }
                        if ((this.bitField0_ & 0x1000) != 0) {
                            this.gENALARM1_ = Collections.unmodifiableList(this.gENALARM1_);
                            this.bitField0_ &= 0xFFFFEFFF;
                        }
                        result.gENALARM1_ = this.gENALARM1_;
                        if ((from_bitField0_ & 0x2000) != 0) {
                            result.gENOILPRESS2_ = this.gENOILPRESS2_;
                            to_bitField0_ |= 0x1000;
                        }
                        if ((from_bitField0_ & 0x4000) != 0) {
                            result.gENTEMP2_ = this.gENTEMP2_;
                            to_bitField0_ |= 0x2000;
                        }
                        if ((from_bitField0_ & 0x8000) != 0) {
                            result.gENVOLT2_ = this.gENVOLT2_;
                            to_bitField0_ |= 0x4000;
                        }
                        if ((from_bitField0_ & 0x10000) != 0) {
                            result.gENRPM2_ = this.gENRPM2_;
                            to_bitField0_ |= 0x8000;
                        }
                        if ((from_bitField0_ & 0x20000) != 0) {
                            result.gENUL12_ = this.gENUL12_;
                            to_bitField0_ |= 0x10000;
                        }
                        if ((from_bitField0_ & 0x40000) != 0) {
                            result.gENUL22_ = this.gENUL22_;
                            to_bitField0_ |= 0x20000;
                        }
                        if ((from_bitField0_ & 0x80000) != 0) {
                            result.gENUL32_ = this.gENUL32_;
                            to_bitField0_ |= 0x40000;
                        }
                        if ((from_bitField0_ & 0x100000) != 0) {
                            result.gENIL12_ = this.gENIL12_;
                            to_bitField0_ |= 0x80000;
                        }
                        if ((from_bitField0_ & 0x200000) != 0) {
                            result.gENIL22_ = this.gENIL22_;
                            to_bitField0_ |= 0x100000;
                        }
                        if ((from_bitField0_ & 0x400000) != 0) {
                            result.gENIL32_ = this.gENIL32_;
                            to_bitField0_ |= 0x200000;
                        }
                        if ((from_bitField0_ & 0x800000) != 0) {
                            result.gENSTATUS2_ = this.gENSTATUS2_;
                            to_bitField0_ |= 0x400000;
                        }
                        if ((from_bitField0_ & 0x1000000) != 0) {
                            result.gENHOURS2_ = this.gENHOURS2_;
                            to_bitField0_ |= 0x800000;
                        }
                        if ((this.bitField0_ & 0x2000000) != 0) {
                            this.gENALARM2_ = Collections.unmodifiableList(this.gENALARM2_);
                            this.bitField0_ &= 0xFDFFFFFF;
                        }
                        result.gENALARM2_ = this.gENALARM2_;
                        if ((from_bitField0_ & 0x4000000) != 0) {
                            result.gENOILPRESS3_ = this.gENOILPRESS3_;
                            to_bitField0_ |= 0x1000000;
                        }
                        if ((from_bitField0_ & 0x8000000) != 0) {
                            result.gENTEMP3_ = this.gENTEMP3_;
                            to_bitField0_ |= 0x2000000;
                        }
                        if ((from_bitField0_ & 0x10000000) != 0) {
                            result.gENVOLT3_ = this.gENVOLT3_;
                            to_bitField0_ |= 0x4000000;
                        }
                        if ((from_bitField0_ & 0x20000000) != 0) {
                            result.gENRPM3_ = this.gENRPM3_;
                            to_bitField0_ |= 0x8000000;
                        }
                        if ((from_bitField0_ & 0x40000000) != 0) {
                            result.gENUL13_ = this.gENUL13_;
                            to_bitField0_ |= 0x10000000;
                        }
                        if ((from_bitField0_ & Integer.MIN_VALUE) != 0) {
                            result.gENUL23_ = this.gENUL23_;
                            to_bitField0_ |= 0x20000000;
                        }
                        if ((from_bitField1_ & 0x1) != 0) {
                            result.gENUL33_ = this.gENUL33_;
                            to_bitField0_ |= 0x40000000;
                        }
                        if ((from_bitField1_ & 0x2) != 0) {
                            result.gENIL13_ = this.gENIL13_;
                            to_bitField0_ |= Integer.MIN_VALUE;
                        }
                        if ((from_bitField1_ & 0x4) != 0) {
                            result.gENIL23_ = this.gENIL23_;
                            to_bitField1_ |= 0x1;
                        }
                        if ((from_bitField1_ & 0x8) != 0) {
                            result.gENIL33_ = this.gENIL33_;
                            to_bitField1_ |= 0x2;
                        }
                        if ((from_bitField1_ & 0x10) != 0) {
                            result.gENSTATUS3_ = this.gENSTATUS3_;
                            to_bitField1_ |= 0x4;
                        }
                        if ((from_bitField1_ & 0x20) != 0) {
                            result.gENHOURS3_ = this.gENHOURS3_;
                            to_bitField1_ |= 0x8;
                        }
                        if ((this.bitField1_ & 0x40) != 0) {
                            this.gENALARM3_ = Collections.unmodifiableList(this.gENALARM3_);
                            this.bitField1_ &= 0xFFFFFFBF;
                        }
                        result.gENALARM3_ = this.gENALARM3_;
                        if ((from_bitField1_ & 0x80) != 0) {
                            result.gENUC_ = this.gENUC_;
                            to_bitField1_ |= 0x10;
                        }
                        if ((from_bitField1_ & 0x100) != 0) {
                            result.gENIC_ = this.gENIC_;
                            to_bitField1_ |= 0x20;
                        }
                        if ((from_bitField1_ & 0x200) != 0) {
                            result.gENFREQ_ = this.gENFREQ_;
                            to_bitField1_ |= 0x40;
                        }
                        if ((from_bitField1_ & 0x400) != 0) {
                            result.gENUL1L2_ = this.gENUL1L2_;
                            to_bitField1_ |= 0x80;
                        }
                        if ((from_bitField1_ & 0x800) != 0) {
                            result.gENUL2L3_ = this.gENUL2L3_;
                            to_bitField1_ |= 0x100;
                        }
                        if ((from_bitField1_ & 0x1000) != 0) {
                            result.gENUL1L3_ = this.gENUL1L3_;
                            to_bitField1_ |= 0x200;
                        }
                        if ((from_bitField1_ & 0x2000) != 0) {
                            result.pOWACTL1_ = this.pOWACTL1_;
                            to_bitField1_ |= 0x400;
                        }
                        if ((from_bitField1_ & 0x4000) != 0) {
                            result.pOWACTL2_ = this.pOWACTL2_;
                            to_bitField1_ |= 0x800;
                        }
                        if ((from_bitField1_ & 0x8000) != 0) {
                            result.pOWACTL3_ = this.pOWACTL3_;
                            to_bitField1_ |= 0x1000;
                        }
                        if ((from_bitField1_ & 0x10000) != 0) {
                            result.pOWFULLL1_ = this.pOWFULLL1_;
                            to_bitField1_ |= 0x2000;
                        }
                        if ((from_bitField1_ & 0x20000) != 0) {
                            result.pOWFULLL2_ = this.pOWFULLL2_;
                            to_bitField1_ |= 0x4000;
                        }
                        if ((from_bitField1_ & 0x40000) != 0) {
                            result.pOWFULLL3_ = this.pOWFULLL3_;
                            to_bitField1_ |= 0x8000;
                        }
                        if ((from_bitField1_ & 0x80000) != 0) {
                            result.pOWREACTL1_ = this.pOWREACTL1_;
                            to_bitField1_ |= 0x10000;
                        }
                        if ((from_bitField1_ & 0x100000) != 0) {
                            result.pOWREACTL2_ = this.pOWREACTL2_;
                            to_bitField1_ |= 0x20000;
                        }
                        if ((from_bitField1_ & 0x200000) != 0) {
                            result.pOWREACTL3_ = this.pOWREACTL3_;
                            to_bitField1_ |= 0x40000;
                        }
                        if ((from_bitField1_ & 0x400000) != 0) {
                            result.pOWKOEF_ = this.pOWKOEF_;
                            to_bitField1_ |= 0x80000;
                        }
                        if ((from_bitField1_ & 0x800000) != 0) {
                            result.pOWGENTOTAL_ = this.pOWGENTOTAL_;
                            to_bitField1_ |= 0x100000;
                        }
                        if ((from_bitField1_ & 0x1000000) != 0) {
                            result.fUELLEVEL_ = this.fUELLEVEL_;
                            to_bitField1_ |= 0x200000;
                        }
                        if ((from_bitField1_ & 0x2000000) != 0) {
                            result.sMSREGS0_ = this.sMSREGS0_;
                            to_bitField1_ |= 0x400000;
                        }
                        if ((from_bitField1_ & 0x4000000) != 0) {
                            result.sMSREGS1_ = this.sMSREGS1_;
                            to_bitField1_ |= 0x800000;
                        }
                        if ((from_bitField1_ & 0x8000000) != 0) {
                            result.sMSREGS2_ = this.sMSREGS2_;
                            to_bitField1_ |= 0x1000000;
                        }
                        if ((from_bitField1_ & 0x10000000) != 0) {
                            result.sMSREGS3_ = this.sMSREGS3_;
                            to_bitField1_ |= 0x2000000;
                        }
                        if ((from_bitField1_ & 0x20000000) != 0) {
                            result.sMSREGS4_ = this.sMSREGS4_;
                            to_bitField1_ |= 0x4000000;
                        }
                        result.bitField0_ = to_bitField0_;
                        result.bitField1_ = to_bitField1_;
                        onBuilt();
                        return result;
                    }

                    public Builder clone() {
                        return (Builder) super.clone();
                    }

                    public Builder setField(Descriptors.FieldDescriptor field, Object value) {
                        return (Builder) super.setField(field, value);
                    }

                    public Builder clearField(Descriptors.FieldDescriptor field) {
                        return (Builder) super.clearField(field);
                    }

                    public Builder clearOneof(Descriptors.OneofDescriptor oneof) {
                        return (Builder) super.clearOneof(oneof);
                    }

                    public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
                        return (Builder) super.setRepeatedField(field, index, value);
                    }

                    public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
                        return (Builder) super.addRepeatedField(field, value);
                    }

                    public Builder mergeFrom(Message other) {
                        if (other instanceof OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm)
                            return mergeFrom((OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm) other);
                        super.mergeFrom(other);
                        return this;
                    }

                    public Builder mergeFrom(OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm other) {
                        if (other == OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm.getDefaultInstance())
                            return this;
                        if (other.hasGENOILPRESS1())
                            setGENOILPRESS1(other.getGENOILPRESS1());
                        if (other.hasGENTEMP1())
                            setGENTEMP1(other.getGENTEMP1());
                        if (other.hasGENVOLT1())
                            setGENVOLT1(other.getGENVOLT1());
                        if (other.hasGENRPM1())
                            setGENRPM1(other.getGENRPM1());
                        if (other.hasGENUL11())
                            setGENUL11(other.getGENUL11());
                        if (other.hasGENUL21())
                            setGENUL21(other.getGENUL21());
                        if (other.hasGENUL31())
                            setGENUL31(other.getGENUL31());
                        if (other.hasGENIL11())
                            setGENIL11(other.getGENIL11());
                        if (other.hasGENIL21())
                            setGENIL21(other.getGENIL21());
                        if (other.hasGENIL31())
                            setGENIL31(other.getGENIL31());
                        if (other.hasGENSTATUS1())
                            setGENSTATUS1(other.getGENSTATUS1());
                        if (other.hasGENHOURS1())
                            setGENHOURS1(other.getGENHOURS1());
                        if (!other.gENALARM1_.isEmpty()) {
                            if (this.gENALARM1_.isEmpty()) {
                                this.gENALARM1_ = other.gENALARM1_;
                                this.bitField0_ &= 0xFFFFEFFF;
                            } else {
                                ensureGENALARM1IsMutable();
                                this.gENALARM1_.addAll(other.gENALARM1_);
                            }
                            onChanged();
                        }
                        if (other.hasGENOILPRESS2())
                            setGENOILPRESS2(other.getGENOILPRESS2());
                        if (other.hasGENTEMP2())
                            setGENTEMP2(other.getGENTEMP2());
                        if (other.hasGENVOLT2())
                            setGENVOLT2(other.getGENVOLT2());
                        if (other.hasGENRPM2())
                            setGENRPM2(other.getGENRPM2());
                        if (other.hasGENUL12())
                            setGENUL12(other.getGENUL12());
                        if (other.hasGENUL22())
                            setGENUL22(other.getGENUL22());
                        if (other.hasGENUL32())
                            setGENUL32(other.getGENUL32());
                        if (other.hasGENIL12())
                            setGENIL12(other.getGENIL12());
                        if (other.hasGENIL22())
                            setGENIL22(other.getGENIL22());
                        if (other.hasGENIL32())
                            setGENIL32(other.getGENIL32());
                        if (other.hasGENSTATUS2())
                            setGENSTATUS2(other.getGENSTATUS2());
                        if (other.hasGENHOURS2())
                            setGENHOURS2(other.getGENHOURS2());
                        if (!other.gENALARM2_.isEmpty()) {
                            if (this.gENALARM2_.isEmpty()) {
                                this.gENALARM2_ = other.gENALARM2_;
                                this.bitField0_ &= 0xFDFFFFFF;
                            } else {
                                ensureGENALARM2IsMutable();
                                this.gENALARM2_.addAll(other.gENALARM2_);
                            }
                            onChanged();
                        }
                        if (other.hasGENOILPRESS3())
                            setGENOILPRESS3(other.getGENOILPRESS3());
                        if (other.hasGENTEMP3())
                            setGENTEMP3(other.getGENTEMP3());
                        if (other.hasGENVOLT3())
                            setGENVOLT3(other.getGENVOLT3());
                        if (other.hasGENRPM3())
                            setGENRPM3(other.getGENRPM3());
                        if (other.hasGENUL13())
                            setGENUL13(other.getGENUL13());
                        if (other.hasGENUL23())
                            setGENUL23(other.getGENUL23());
                        if (other.hasGENUL33())
                            setGENUL33(other.getGENUL33());
                        if (other.hasGENIL13())
                            setGENIL13(other.getGENIL13());
                        if (other.hasGENIL23())
                            setGENIL23(other.getGENIL23());
                        if (other.hasGENIL33())
                            setGENIL33(other.getGENIL33());
                        if (other.hasGENSTATUS3())
                            setGENSTATUS3(other.getGENSTATUS3());
                        if (other.hasGENHOURS3())
                            setGENHOURS3(other.getGENHOURS3());
                        if (!other.gENALARM3_.isEmpty()) {
                            if (this.gENALARM3_.isEmpty()) {
                                this.gENALARM3_ = other.gENALARM3_;
                                this.bitField1_ &= 0xFFFFFFBF;
                            } else {
                                ensureGENALARM3IsMutable();
                                this.gENALARM3_.addAll(other.gENALARM3_);
                            }
                            onChanged();
                        }
                        if (other.hasGENUC())
                            setGENUC(other.getGENUC());
                        if (other.hasGENIC())
                            setGENIC(other.getGENIC());
                        if (other.hasGENFREQ())
                            setGENFREQ(other.getGENFREQ());
                        if (other.hasGENUL1L2())
                            setGENUL1L2(other.getGENUL1L2());
                        if (other.hasGENUL2L3())
                            setGENUL2L3(other.getGENUL2L3());
                        if (other.hasGENUL1L3())
                            setGENUL1L3(other.getGENUL1L3());
                        if (other.hasPOWACTL1())
                            setPOWACTL1(other.getPOWACTL1());
                        if (other.hasPOWACTL2())
                            setPOWACTL2(other.getPOWACTL2());
                        if (other.hasPOWACTL3())
                            setPOWACTL3(other.getPOWACTL3());
                        if (other.hasPOWFULLL1())
                            setPOWFULLL1(other.getPOWFULLL1());
                        if (other.hasPOWFULLL2())
                            setPOWFULLL2(other.getPOWFULLL2());
                        if (other.hasPOWFULLL3())
                            setPOWFULLL3(other.getPOWFULLL3());
                        if (other.hasPOWREACTL1())
                            setPOWREACTL1(other.getPOWREACTL1());
                        if (other.hasPOWREACTL2())
                            setPOWREACTL2(other.getPOWREACTL2());
                        if (other.hasPOWREACTL3())
                            setPOWREACTL3(other.getPOWREACTL3());
                        if (other.hasPOWKOEF())
                            setPOWKOEF(other.getPOWKOEF());
                        if (other.hasPOWGENTOTAL())
                            setPOWGENTOTAL(other.getPOWGENTOTAL());
                        if (other.hasFUELLEVEL())
                            setFUELLEVEL(other.getFUELLEVEL());
                        if (other.hasSMSREGS0())
                            setSMSREGS0(other.getSMSREGS0());
                        if (other.hasSMSREGS1())
                            setSMSREGS1(other.getSMSREGS1());
                        if (other.hasSMSREGS2())
                            setSMSREGS2(other.getSMSREGS2());
                        if (other.hasSMSREGS3())
                            setSMSREGS3(other.getSMSREGS3());
                        if (other.hasSMSREGS4())
                            setSMSREGS4(other.getSMSREGS4());
                        mergeUnknownFields(other.unknownFields);
                        onChanged();
                        return this;
                    }

                    public final boolean isInitialized() {
                        return true;
                    }

                    public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                        OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm parsedMessage = null;
                        try {
                            parsedMessage = (OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm) OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm.PARSER.parsePartialFrom(input, extensionRegistry);
                        } catch (InvalidProtocolBufferException e) {
                            parsedMessage = (OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm) e.getUnfinishedMessage();
                            throw e.unwrapIOException();
                        } finally {
                            if (parsedMessage != null)
                                mergeFrom(parsedMessage);
                        }
                        return this;
                    }

                    public boolean hasGENOILPRESS1() {
                        return ((this.bitField0_ & 0x1) != 0);
                    }

                    public int getGENOILPRESS1() {
                        return this.gENOILPRESS1_;
                    }

                    public Builder setGENOILPRESS1(int value) {
                        this.bitField0_ |= 0x1;
                        this.gENOILPRESS1_ = value;
                        onChanged();
                        return this;
                    }

                    public Builder clearGENOILPRESS1() {
                        this.bitField0_ &= 0xFFFFFFFE;
                        this.gENOILPRESS1_ = 0;
                        onChanged();
                        return this;
                    }

                    public boolean hasGENTEMP1() {
                        return ((this.bitField0_ & 0x2) != 0);
                    }

                    public int getGENTEMP1() {
                        return this.gENTEMP1_;
                    }

                    public Builder setGENTEMP1(int value) {
                        this.bitField0_ |= 0x2;
                        this.gENTEMP1_ = value;
                        onChanged();
                        return this;
                    }

                    public Builder clearGENTEMP1() {
                        this.bitField0_ &= 0xFFFFFFFD;
                        this.gENTEMP1_ = 0;
                        onChanged();
                        return this;
                    }

                    public boolean hasGENVOLT1() {
                        return ((this.bitField0_ & 0x4) != 0);
                    }

                    public float getGENVOLT1() {
                        return this.gENVOLT1_;
                    }

                    public Builder setGENVOLT1(float value) {
                        this.bitField0_ |= 0x4;
                        this.gENVOLT1_ = value;
                        onChanged();
                        return this;
                    }

                    public Builder clearGENVOLT1() {
                        this.bitField0_ &= 0xFFFFFFFB;
                        this.gENVOLT1_ = 0.0F;
                        onChanged();
                        return this;
                    }

                    public boolean hasGENRPM1() {
                        return ((this.bitField0_ & 0x8) != 0);
                    }

                    public int getGENRPM1() {
                        return this.gENRPM1_;
                    }

                    public Builder setGENRPM1(int value) {
                        this.bitField0_ |= 0x8;
                        this.gENRPM1_ = value;
                        onChanged();
                        return this;
                    }

                    public Builder clearGENRPM1() {
                        this.bitField0_ &= 0xFFFFFFF7;
                        this.gENRPM1_ = 0;
                        onChanged();
                        return this;
                    }

                    public boolean hasGENUL11() {
                        return ((this.bitField0_ & 0x10) != 0);
                    }

                    public float getGENUL11() {
                        return this.gENUL11_;
                    }

                    public Builder setGENUL11(float value) {
                        this.bitField0_ |= 0x10;
                        this.gENUL11_ = value;
                        onChanged();
                        return this;
                    }

                    public Builder clearGENUL11() {
                        this.bitField0_ &= 0xFFFFFFEF;
                        this.gENUL11_ = 0.0F;
                        onChanged();
                        return this;
                    }

                    public boolean hasGENUL21() {
                        return ((this.bitField0_ & 0x20) != 0);
                    }

                    public float getGENUL21() {
                        return this.gENUL21_;
                    }

                    public Builder setGENUL21(float value) {
                        this.bitField0_ |= 0x20;
                        this.gENUL21_ = value;
                        onChanged();
                        return this;
                    }

                    public Builder clearGENUL21() {
                        this.bitField0_ &= 0xFFFFFFDF;
                        this.gENUL21_ = 0.0F;
                        onChanged();
                        return this;
                    }

                    public boolean hasGENUL31() {
                        return ((this.bitField0_ & 0x40) != 0);
                    }

                    public float getGENUL31() {
                        return this.gENUL31_;
                    }

                    public Builder setGENUL31(float value) {
                        this.bitField0_ |= 0x40;
                        this.gENUL31_ = value;
                        onChanged();
                        return this;
                    }

                    public Builder clearGENUL31() {
                        this.bitField0_ &= 0xFFFFFFBF;
                        this.gENUL31_ = 0.0F;
                        onChanged();
                        return this;
                    }

                    public boolean hasGENIL11() {
                        return ((this.bitField0_ & 0x80) != 0);
                    }

                    public float getGENIL11() {
                        return this.gENIL11_;
                    }

                    public Builder setGENIL11(float value) {
                        this.bitField0_ |= 0x80;
                        this.gENIL11_ = value;
                        onChanged();
                        return this;
                    }

                    public Builder clearGENIL11() {
                        this.bitField0_ &= 0xFFFFFF7F;
                        this.gENIL11_ = 0.0F;
                        onChanged();
                        return this;
                    }

                    public boolean hasGENIL21() {
                        return ((this.bitField0_ & 0x100) != 0);
                    }

                    public float getGENIL21() {
                        return this.gENIL21_;
                    }

                    public Builder setGENIL21(float value) {
                        this.bitField0_ |= 0x100;
                        this.gENIL21_ = value;
                        onChanged();
                        return this;
                    }

                    public Builder clearGENIL21() {
                        this.bitField0_ &= 0xFFFFFEFF;
                        this.gENIL21_ = 0.0F;
                        onChanged();
                        return this;
                    }

                    public boolean hasGENIL31() {
                        return ((this.bitField0_ & 0x200) != 0);
                    }

                    public float getGENIL31() {
                        return this.gENIL31_;
                    }

                    public Builder setGENIL31(float value) {
                        this.bitField0_ |= 0x200;
                        this.gENIL31_ = value;
                        onChanged();
                        return this;
                    }

                    public Builder clearGENIL31() {
                        this.bitField0_ &= 0xFFFFFDFF;
                        this.gENIL31_ = 0.0F;
                        onChanged();
                        return this;
                    }

                    public boolean hasGENSTATUS1() {
                        return ((this.bitField0_ & 0x400) != 0);
                    }

                    public int getGENSTATUS1() {
                        return this.gENSTATUS1_;
                    }

                    public Builder setGENSTATUS1(int value) {
                        this.bitField0_ |= 0x400;
                        this.gENSTATUS1_ = value;
                        onChanged();
                        return this;
                    }

                    public Builder clearGENSTATUS1() {
                        this.bitField0_ &= 0xFFFFFBFF;
                        this.gENSTATUS1_ = 0;
                        onChanged();
                        return this;
                    }

                    public boolean hasGENHOURS1() {
                        return ((this.bitField0_ & 0x800) != 0);
                    }

                    public int getGENHOURS1() {
                        return this.gENHOURS1_;
                    }

                    public Builder setGENHOURS1(int value) {
                        this.bitField0_ |= 0x800;
                        this.gENHOURS1_ = value;
                        onChanged();
                        return this;
                    }

                    public Builder clearGENHOURS1() {
                        this.bitField0_ &= 0xFFFFF7FF;
                        this.gENHOURS1_ = 0;
                        onChanged();
                        return this;
                    }

                    private void ensureGENALARM1IsMutable() {
                        if ((this.bitField0_ & 0x1000) == 0) {
                            this.gENALARM1_ = new ArrayList<>(this.gENALARM1_);
                            this.bitField0_ |= 0x1000;
                        }
                    }

                    public List<ByteString> getGENALARM1List() {
                        return ((this.bitField0_ & 0x1000) != 0) ? Collections.<ByteString>unmodifiableList(this.gENALARM1_) : this.gENALARM1_;
                    }

                    public int getGENALARM1Count() {
                        return this.gENALARM1_.size();
                    }

                    public ByteString getGENALARM1(int index) {
                        return this.gENALARM1_.get(index);
                    }

                    public Builder setGENALARM1(int index, ByteString value) {
                        if (value == null)
                            throw new NullPointerException();
                        ensureGENALARM1IsMutable();
                        this.gENALARM1_.set(index, value);
                        onChanged();
                        return this;
                    }

                    public Builder addGENALARM1(ByteString value) {
                        if (value == null)
                            throw new NullPointerException();
                        ensureGENALARM1IsMutable();
                        this.gENALARM1_.add(value);
                        onChanged();
                        return this;
                    }

                    public Builder addAllGENALARM1(Iterable<? extends ByteString> values) {
                        ensureGENALARM1IsMutable();
                        AbstractMessageLite.Builder.addAll(values, this.gENALARM1_);
                        onChanged();
                        return this;
                    }

                    public Builder clearGENALARM1() {
                        this.gENALARM1_ = Collections.emptyList();
                        this.bitField0_ &= 0xFFFFEFFF;
                        onChanged();
                        return this;
                    }

                    public boolean hasGENOILPRESS2() {
                        return ((this.bitField0_ & 0x2000) != 0);
                    }

                    public int getGENOILPRESS2() {
                        return this.gENOILPRESS2_;
                    }

                    public Builder setGENOILPRESS2(int value) {
                        this.bitField0_ |= 0x2000;
                        this.gENOILPRESS2_ = value;
                        onChanged();
                        return this;
                    }

                    public Builder clearGENOILPRESS2() {
                        this.bitField0_ &= 0xFFFFDFFF;
                        this.gENOILPRESS2_ = 0;
                        onChanged();
                        return this;
                    }

                    public boolean hasGENTEMP2() {
                        return ((this.bitField0_ & 0x4000) != 0);
                    }

                    public int getGENTEMP2() {
                        return this.gENTEMP2_;
                    }

                    public Builder setGENTEMP2(int value) {
                        this.bitField0_ |= 0x4000;
                        this.gENTEMP2_ = value;
                        onChanged();
                        return this;
                    }

                    public Builder clearGENTEMP2() {
                        this.bitField0_ &= 0xFFFFBFFF;
                        this.gENTEMP2_ = 0;
                        onChanged();
                        return this;
                    }

                    public boolean hasGENVOLT2() {
                        return ((this.bitField0_ & 0x8000) != 0);
                    }

                    public float getGENVOLT2() {
                        return this.gENVOLT2_;
                    }

                    public Builder setGENVOLT2(float value) {
                        this.bitField0_ |= 0x8000;
                        this.gENVOLT2_ = value;
                        onChanged();
                        return this;
                    }

                    public Builder clearGENVOLT2() {
                        this.bitField0_ &= 0xFFFF7FFF;
                        this.gENVOLT2_ = 0.0F;
                        onChanged();
                        return this;
                    }

                    public boolean hasGENRPM2() {
                        return ((this.bitField0_ & 0x10000) != 0);
                    }

                    public int getGENRPM2() {
                        return this.gENRPM2_;
                    }

                    public Builder setGENRPM2(int value) {
                        this.bitField0_ |= 0x10000;
                        this.gENRPM2_ = value;
                        onChanged();
                        return this;
                    }

                    public Builder clearGENRPM2() {
                        this.bitField0_ &= 0xFFFEFFFF;
                        this.gENRPM2_ = 0;
                        onChanged();
                        return this;
                    }

                    public boolean hasGENUL12() {
                        return ((this.bitField0_ & 0x20000) != 0);
                    }

                    public float getGENUL12() {
                        return this.gENUL12_;
                    }

                    public Builder setGENUL12(float value) {
                        this.bitField0_ |= 0x20000;
                        this.gENUL12_ = value;
                        onChanged();
                        return this;
                    }

                    public Builder clearGENUL12() {
                        this.bitField0_ &= 0xFFFDFFFF;
                        this.gENUL12_ = 0.0F;
                        onChanged();
                        return this;
                    }

                    public boolean hasGENUL22() {
                        return ((this.bitField0_ & 0x40000) != 0);
                    }

                    public float getGENUL22() {
                        return this.gENUL22_;
                    }

                    public Builder setGENUL22(float value) {
                        this.bitField0_ |= 0x40000;
                        this.gENUL22_ = value;
                        onChanged();
                        return this;
                    }

                    public Builder clearGENUL22() {
                        this.bitField0_ &= 0xFFFBFFFF;
                        this.gENUL22_ = 0.0F;
                        onChanged();
                        return this;
                    }

                    public boolean hasGENUL32() {
                        return ((this.bitField0_ & 0x80000) != 0);
                    }

                    public float getGENUL32() {
                        return this.gENUL32_;
                    }

                    public Builder setGENUL32(float value) {
                        this.bitField0_ |= 0x80000;
                        this.gENUL32_ = value;
                        onChanged();
                        return this;
                    }

                    public Builder clearGENUL32() {
                        this.bitField0_ &= 0xFFF7FFFF;
                        this.gENUL32_ = 0.0F;
                        onChanged();
                        return this;
                    }

                    public boolean hasGENIL12() {
                        return ((this.bitField0_ & 0x100000) != 0);
                    }

                    public float getGENIL12() {
                        return this.gENIL12_;
                    }

                    public Builder setGENIL12(float value) {
                        this.bitField0_ |= 0x100000;
                        this.gENIL12_ = value;
                        onChanged();
                        return this;
                    }

                    public Builder clearGENIL12() {
                        this.bitField0_ &= 0xFFEFFFFF;
                        this.gENIL12_ = 0.0F;
                        onChanged();
                        return this;
                    }

                    public boolean hasGENIL22() {
                        return ((this.bitField0_ & 0x200000) != 0);
                    }

                    public float getGENIL22() {
                        return this.gENIL22_;
                    }

                    public Builder setGENIL22(float value) {
                        this.bitField0_ |= 0x200000;
                        this.gENIL22_ = value;
                        onChanged();
                        return this;
                    }

                    public Builder clearGENIL22() {
                        this.bitField0_ &= 0xFFDFFFFF;
                        this.gENIL22_ = 0.0F;
                        onChanged();
                        return this;
                    }

                    public boolean hasGENIL32() {
                        return ((this.bitField0_ & 0x400000) != 0);
                    }

                    public float getGENIL32() {
                        return this.gENIL32_;
                    }

                    public Builder setGENIL32(float value) {
                        this.bitField0_ |= 0x400000;
                        this.gENIL32_ = value;
                        onChanged();
                        return this;
                    }

                    public Builder clearGENIL32() {
                        this.bitField0_ &= 0xFFBFFFFF;
                        this.gENIL32_ = 0.0F;
                        onChanged();
                        return this;
                    }

                    public boolean hasGENSTATUS2() {
                        return ((this.bitField0_ & 0x800000) != 0);
                    }

                    public int getGENSTATUS2() {
                        return this.gENSTATUS2_;
                    }

                    public Builder setGENSTATUS2(int value) {
                        this.bitField0_ |= 0x800000;
                        this.gENSTATUS2_ = value;
                        onChanged();
                        return this;
                    }

                    public Builder clearGENSTATUS2() {
                        this.bitField0_ &= 0xFF7FFFFF;
                        this.gENSTATUS2_ = 0;
                        onChanged();
                        return this;
                    }

                    public boolean hasGENHOURS2() {
                        return ((this.bitField0_ & 0x1000000) != 0);
                    }

                    public int getGENHOURS2() {
                        return this.gENHOURS2_;
                    }

                    public Builder setGENHOURS2(int value) {
                        this.bitField0_ |= 0x1000000;
                        this.gENHOURS2_ = value;
                        onChanged();
                        return this;
                    }

                    public Builder clearGENHOURS2() {
                        this.bitField0_ &= 0xFEFFFFFF;
                        this.gENHOURS2_ = 0;
                        onChanged();
                        return this;
                    }

                    private void ensureGENALARM2IsMutable() {
                        if ((this.bitField0_ & 0x2000000) == 0) {
                            this.gENALARM2_ = new ArrayList<>(this.gENALARM2_);
                            this.bitField0_ |= 0x2000000;
                        }
                    }

                    public List<ByteString> getGENALARM2List() {
                        return ((this.bitField0_ & 0x2000000) != 0) ? Collections.<ByteString>unmodifiableList(this.gENALARM2_) : this.gENALARM2_;
                    }

                    public int getGENALARM2Count() {
                        return this.gENALARM2_.size();
                    }

                    public ByteString getGENALARM2(int index) {
                        return this.gENALARM2_.get(index);
                    }

                    public Builder setGENALARM2(int index, ByteString value) {
                        if (value == null)
                            throw new NullPointerException();
                        ensureGENALARM2IsMutable();
                        this.gENALARM2_.set(index, value);
                        onChanged();
                        return this;
                    }

                    public Builder addGENALARM2(ByteString value) {
                        if (value == null)
                            throw new NullPointerException();
                        ensureGENALARM2IsMutable();
                        this.gENALARM2_.add(value);
                        onChanged();
                        return this;
                    }

                    public Builder addAllGENALARM2(Iterable<? extends ByteString> values) {
                        ensureGENALARM2IsMutable();
                        AbstractMessageLite.Builder.addAll(values, this.gENALARM2_);
                        onChanged();
                        return this;
                    }

                    public Builder clearGENALARM2() {
                        this.gENALARM2_ = Collections.emptyList();
                        this.bitField0_ &= 0xFDFFFFFF;
                        onChanged();
                        return this;
                    }

                    public boolean hasGENOILPRESS3() {
                        return ((this.bitField0_ & 0x4000000) != 0);
                    }

                    public int getGENOILPRESS3() {
                        return this.gENOILPRESS3_;
                    }

                    public Builder setGENOILPRESS3(int value) {
                        this.bitField0_ |= 0x4000000;
                        this.gENOILPRESS3_ = value;
                        onChanged();
                        return this;
                    }

                    public Builder clearGENOILPRESS3() {
                        this.bitField0_ &= 0xFBFFFFFF;
                        this.gENOILPRESS3_ = 0;
                        onChanged();
                        return this;
                    }

                    public boolean hasGENTEMP3() {
                        return ((this.bitField0_ & 0x8000000) != 0);
                    }

                    public int getGENTEMP3() {
                        return this.gENTEMP3_;
                    }

                    public Builder setGENTEMP3(int value) {
                        this.bitField0_ |= 0x8000000;
                        this.gENTEMP3_ = value;
                        onChanged();
                        return this;
                    }

                    public Builder clearGENTEMP3() {
                        this.bitField0_ &= 0xF7FFFFFF;
                        this.gENTEMP3_ = 0;
                        onChanged();
                        return this;
                    }

                    public boolean hasGENVOLT3() {
                        return ((this.bitField0_ & 0x10000000) != 0);
                    }

                    public float getGENVOLT3() {
                        return this.gENVOLT3_;
                    }

                    public Builder setGENVOLT3(float value) {
                        this.bitField0_ |= 0x10000000;
                        this.gENVOLT3_ = value;
                        onChanged();
                        return this;
                    }

                    public Builder clearGENVOLT3() {
                        this.bitField0_ &= 0xEFFFFFFF;
                        this.gENVOLT3_ = 0.0F;
                        onChanged();
                        return this;
                    }

                    public boolean hasGENRPM3() {
                        return ((this.bitField0_ & 0x20000000) != 0);
                    }

                    public int getGENRPM3() {
                        return this.gENRPM3_;
                    }

                    public Builder setGENRPM3(int value) {
                        this.bitField0_ |= 0x20000000;
                        this.gENRPM3_ = value;
                        onChanged();
                        return this;
                    }

                    public Builder clearGENRPM3() {
                        this.bitField0_ &= 0xDFFFFFFF;
                        this.gENRPM3_ = 0;
                        onChanged();
                        return this;
                    }

                    public boolean hasGENUL13() {
                        return ((this.bitField0_ & 0x40000000) != 0);
                    }

                    public float getGENUL13() {
                        return this.gENUL13_;
                    }

                    public Builder setGENUL13(float value) {
                        this.bitField0_ |= 0x40000000;
                        this.gENUL13_ = value;
                        onChanged();
                        return this;
                    }

                    public Builder clearGENUL13() {
                        this.bitField0_ &= 0xBFFFFFFF;
                        this.gENUL13_ = 0.0F;
                        onChanged();
                        return this;
                    }

                    public boolean hasGENUL23() {
                        return ((this.bitField0_ & Integer.MIN_VALUE) != 0);
                    }

                    public float getGENUL23() {
                        return this.gENUL23_;
                    }

                    public Builder setGENUL23(float value) {
                        this.bitField0_ |= Integer.MIN_VALUE;
                        this.gENUL23_ = value;
                        onChanged();
                        return this;
                    }

                    public Builder clearGENUL23() {
                        this.bitField0_ &= Integer.MAX_VALUE;
                        this.gENUL23_ = 0.0F;
                        onChanged();
                        return this;
                    }

                    public boolean hasGENUL33() {
                        return ((this.bitField1_ & 0x1) != 0);
                    }

                    public float getGENUL33() {
                        return this.gENUL33_;
                    }

                    public Builder setGENUL33(float value) {
                        this.bitField1_ |= 0x1;
                        this.gENUL33_ = value;
                        onChanged();
                        return this;
                    }

                    public Builder clearGENUL33() {
                        this.bitField1_ &= 0xFFFFFFFE;
                        this.gENUL33_ = 0.0F;
                        onChanged();
                        return this;
                    }

                    public boolean hasGENIL13() {
                        return ((this.bitField1_ & 0x2) != 0);
                    }

                    public float getGENIL13() {
                        return this.gENIL13_;
                    }

                    public Builder setGENIL13(float value) {
                        this.bitField1_ |= 0x2;
                        this.gENIL13_ = value;
                        onChanged();
                        return this;
                    }

                    public Builder clearGENIL13() {
                        this.bitField1_ &= 0xFFFFFFFD;
                        this.gENIL13_ = 0.0F;
                        onChanged();
                        return this;
                    }

                    public boolean hasGENIL23() {
                        return ((this.bitField1_ & 0x4) != 0);
                    }

                    public float getGENIL23() {
                        return this.gENIL23_;
                    }

                    public Builder setGENIL23(float value) {
                        this.bitField1_ |= 0x4;
                        this.gENIL23_ = value;
                        onChanged();
                        return this;
                    }

                    public Builder clearGENIL23() {
                        this.bitField1_ &= 0xFFFFFFFB;
                        this.gENIL23_ = 0.0F;
                        onChanged();
                        return this;
                    }

                    public boolean hasGENIL33() {
                        return ((this.bitField1_ & 0x8) != 0);
                    }

                    public float getGENIL33() {
                        return this.gENIL33_;
                    }

                    public Builder setGENIL33(float value) {
                        this.bitField1_ |= 0x8;
                        this.gENIL33_ = value;
                        onChanged();
                        return this;
                    }

                    public Builder clearGENIL33() {
                        this.bitField1_ &= 0xFFFFFFF7;
                        this.gENIL33_ = 0.0F;
                        onChanged();
                        return this;
                    }

                    public boolean hasGENSTATUS3() {
                        return ((this.bitField1_ & 0x10) != 0);
                    }

                    public int getGENSTATUS3() {
                        return this.gENSTATUS3_;
                    }

                    public Builder setGENSTATUS3(int value) {
                        this.bitField1_ |= 0x10;
                        this.gENSTATUS3_ = value;
                        onChanged();
                        return this;
                    }

                    public Builder clearGENSTATUS3() {
                        this.bitField1_ &= 0xFFFFFFEF;
                        this.gENSTATUS3_ = 0;
                        onChanged();
                        return this;
                    }

                    public boolean hasGENHOURS3() {
                        return ((this.bitField1_ & 0x20) != 0);
                    }

                    public int getGENHOURS3() {
                        return this.gENHOURS3_;
                    }

                    public Builder setGENHOURS3(int value) {
                        this.bitField1_ |= 0x20;
                        this.gENHOURS3_ = value;
                        onChanged();
                        return this;
                    }

                    public Builder clearGENHOURS3() {
                        this.bitField1_ &= 0xFFFFFFDF;
                        this.gENHOURS3_ = 0;
                        onChanged();
                        return this;
                    }

                    private void ensureGENALARM3IsMutable() {
                        if ((this.bitField1_ & 0x40) == 0) {
                            this.gENALARM3_ = new ArrayList<>(this.gENALARM3_);
                            this.bitField1_ |= 0x40;
                        }
                    }

                    public List<ByteString> getGENALARM3List() {
                        return ((this.bitField1_ & 0x40) != 0) ? Collections.<ByteString>unmodifiableList(this.gENALARM3_) : this.gENALARM3_;
                    }

                    public int getGENALARM3Count() {
                        return this.gENALARM3_.size();
                    }

                    public ByteString getGENALARM3(int index) {
                        return this.gENALARM3_.get(index);
                    }

                    public Builder setGENALARM3(int index, ByteString value) {
                        if (value == null)
                            throw new NullPointerException();
                        ensureGENALARM3IsMutable();
                        this.gENALARM3_.set(index, value);
                        onChanged();
                        return this;
                    }

                    public Builder addGENALARM3(ByteString value) {
                        if (value == null)
                            throw new NullPointerException();
                        ensureGENALARM3IsMutable();
                        this.gENALARM3_.add(value);
                        onChanged();
                        return this;
                    }

                    public Builder addAllGENALARM3(Iterable<? extends ByteString> values) {
                        ensureGENALARM3IsMutable();
                        AbstractMessageLite.Builder.addAll(values, this.gENALARM3_);
                        onChanged();
                        return this;
                    }

                    public Builder clearGENALARM3() {
                        this.gENALARM3_ = Collections.emptyList();
                        this.bitField1_ &= 0xFFFFFFBF;
                        onChanged();
                        return this;
                    }

                    public boolean hasGENUC() {
                        return ((this.bitField1_ & 0x80) != 0);
                    }

                    public float getGENUC() {
                        return this.gENUC_;
                    }

                    public Builder setGENUC(float value) {
                        this.bitField1_ |= 0x80;
                        this.gENUC_ = value;
                        onChanged();
                        return this;
                    }

                    public Builder clearGENUC() {
                        this.bitField1_ &= 0xFFFFFF7F;
                        this.gENUC_ = 0.0F;
                        onChanged();
                        return this;
                    }

                    public boolean hasGENIC() {
                        return ((this.bitField1_ & 0x100) != 0);
                    }

                    public int getGENIC() {
                        return this.gENIC_;
                    }

                    public Builder setGENIC(int value) {
                        this.bitField1_ |= 0x100;
                        this.gENIC_ = value;
                        onChanged();
                        return this;
                    }

                    public Builder clearGENIC() {
                        this.bitField1_ &= 0xFFFFFEFF;
                        this.gENIC_ = 0;
                        onChanged();
                        return this;
                    }

                    public boolean hasGENFREQ() {
                        return ((this.bitField1_ & 0x200) != 0);
                    }

                    public float getGENFREQ() {
                        return this.gENFREQ_;
                    }

                    public Builder setGENFREQ(float value) {
                        this.bitField1_ |= 0x200;
                        this.gENFREQ_ = value;
                        onChanged();
                        return this;
                    }

                    public Builder clearGENFREQ() {
                        this.bitField1_ &= 0xFFFFFDFF;
                        this.gENFREQ_ = 0.0F;
                        onChanged();
                        return this;
                    }

                    public boolean hasGENUL1L2() {
                        return ((this.bitField1_ & 0x400) != 0);
                    }

                    public float getGENUL1L2() {
                        return this.gENUL1L2_;
                    }

                    public Builder setGENUL1L2(float value) {
                        this.bitField1_ |= 0x400;
                        this.gENUL1L2_ = value;
                        onChanged();
                        return this;
                    }

                    public Builder clearGENUL1L2() {
                        this.bitField1_ &= 0xFFFFFBFF;
                        this.gENUL1L2_ = 0.0F;
                        onChanged();
                        return this;
                    }

                    public boolean hasGENUL2L3() {
                        return ((this.bitField1_ & 0x800) != 0);
                    }

                    public float getGENUL2L3() {
                        return this.gENUL2L3_;
                    }

                    public Builder setGENUL2L3(float value) {
                        this.bitField1_ |= 0x800;
                        this.gENUL2L3_ = value;
                        onChanged();
                        return this;
                    }

                    public Builder clearGENUL2L3() {
                        this.bitField1_ &= 0xFFFFF7FF;
                        this.gENUL2L3_ = 0.0F;
                        onChanged();
                        return this;
                    }

                    public boolean hasGENUL1L3() {
                        return ((this.bitField1_ & 0x1000) != 0);
                    }

                    public float getGENUL1L3() {
                        return this.gENUL1L3_;
                    }

                    public Builder setGENUL1L3(float value) {
                        this.bitField1_ |= 0x1000;
                        this.gENUL1L3_ = value;
                        onChanged();
                        return this;
                    }

                    public Builder clearGENUL1L3() {
                        this.bitField1_ &= 0xFFFFEFFF;
                        this.gENUL1L3_ = 0.0F;
                        onChanged();
                        return this;
                    }

                    public boolean hasPOWACTL1() {
                        return ((this.bitField1_ & 0x2000) != 0);
                    }

                    public int getPOWACTL1() {
                        return this.pOWACTL1_;
                    }

                    public Builder setPOWACTL1(int value) {
                        this.bitField1_ |= 0x2000;
                        this.pOWACTL1_ = value;
                        onChanged();
                        return this;
                    }

                    public Builder clearPOWACTL1() {
                        this.bitField1_ &= 0xFFFFDFFF;
                        this.pOWACTL1_ = 0;
                        onChanged();
                        return this;
                    }

                    public boolean hasPOWACTL2() {
                        return ((this.bitField1_ & 0x4000) != 0);
                    }

                    public int getPOWACTL2() {
                        return this.pOWACTL2_;
                    }

                    public Builder setPOWACTL2(int value) {
                        this.bitField1_ |= 0x4000;
                        this.pOWACTL2_ = value;
                        onChanged();
                        return this;
                    }

                    public Builder clearPOWACTL2() {
                        this.bitField1_ &= 0xFFFFBFFF;
                        this.pOWACTL2_ = 0;
                        onChanged();
                        return this;
                    }

                    public boolean hasPOWACTL3() {
                        return ((this.bitField1_ & 0x8000) != 0);
                    }

                    public int getPOWACTL3() {
                        return this.pOWACTL3_;
                    }

                    public Builder setPOWACTL3(int value) {
                        this.bitField1_ |= 0x8000;
                        this.pOWACTL3_ = value;
                        onChanged();
                        return this;
                    }

                    public Builder clearPOWACTL3() {
                        this.bitField1_ &= 0xFFFF7FFF;
                        this.pOWACTL3_ = 0;
                        onChanged();
                        return this;
                    }

                    public boolean hasPOWFULLL1() {
                        return ((this.bitField1_ & 0x10000) != 0);
                    }

                    public int getPOWFULLL1() {
                        return this.pOWFULLL1_;
                    }

                    public Builder setPOWFULLL1(int value) {
                        this.bitField1_ |= 0x10000;
                        this.pOWFULLL1_ = value;
                        onChanged();
                        return this;
                    }

                    public Builder clearPOWFULLL1() {
                        this.bitField1_ &= 0xFFFEFFFF;
                        this.pOWFULLL1_ = 0;
                        onChanged();
                        return this;
                    }

                    public boolean hasPOWFULLL2() {
                        return ((this.bitField1_ & 0x20000) != 0);
                    }

                    public int getPOWFULLL2() {
                        return this.pOWFULLL2_;
                    }

                    public Builder setPOWFULLL2(int value) {
                        this.bitField1_ |= 0x20000;
                        this.pOWFULLL2_ = value;
                        onChanged();
                        return this;
                    }

                    public Builder clearPOWFULLL2() {
                        this.bitField1_ &= 0xFFFDFFFF;
                        this.pOWFULLL2_ = 0;
                        onChanged();
                        return this;
                    }

                    public boolean hasPOWFULLL3() {
                        return ((this.bitField1_ & 0x40000) != 0);
                    }

                    public int getPOWFULLL3() {
                        return this.pOWFULLL3_;
                    }

                    public Builder setPOWFULLL3(int value) {
                        this.bitField1_ |= 0x40000;
                        this.pOWFULLL3_ = value;
                        onChanged();
                        return this;
                    }

                    public Builder clearPOWFULLL3() {
                        this.bitField1_ &= 0xFFFBFFFF;
                        this.pOWFULLL3_ = 0;
                        onChanged();
                        return this;
                    }

                    public boolean hasPOWREACTL1() {
                        return ((this.bitField1_ & 0x80000) != 0);
                    }

                    public int getPOWREACTL1() {
                        return this.pOWREACTL1_;
                    }

                    public Builder setPOWREACTL1(int value) {
                        this.bitField1_ |= 0x80000;
                        this.pOWREACTL1_ = value;
                        onChanged();
                        return this;
                    }

                    public Builder clearPOWREACTL1() {
                        this.bitField1_ &= 0xFFF7FFFF;
                        this.pOWREACTL1_ = 0;
                        onChanged();
                        return this;
                    }

                    public boolean hasPOWREACTL2() {
                        return ((this.bitField1_ & 0x100000) != 0);
                    }

                    public int getPOWREACTL2() {
                        return this.pOWREACTL2_;
                    }

                    public Builder setPOWREACTL2(int value) {
                        this.bitField1_ |= 0x100000;
                        this.pOWREACTL2_ = value;
                        onChanged();
                        return this;
                    }

                    public Builder clearPOWREACTL2() {
                        this.bitField1_ &= 0xFFEFFFFF;
                        this.pOWREACTL2_ = 0;
                        onChanged();
                        return this;
                    }

                    public boolean hasPOWREACTL3() {
                        return ((this.bitField1_ & 0x200000) != 0);
                    }

                    public int getPOWREACTL3() {
                        return this.pOWREACTL3_;
                    }

                    public Builder setPOWREACTL3(int value) {
                        this.bitField1_ |= 0x200000;
                        this.pOWREACTL3_ = value;
                        onChanged();
                        return this;
                    }

                    public Builder clearPOWREACTL3() {
                        this.bitField1_ &= 0xFFDFFFFF;
                        this.pOWREACTL3_ = 0;
                        onChanged();
                        return this;
                    }

                    public boolean hasPOWKOEF() {
                        return ((this.bitField1_ & 0x400000) != 0);
                    }

                    public float getPOWKOEF() {
                        return this.pOWKOEF_;
                    }

                    public Builder setPOWKOEF(float value) {
                        this.bitField1_ |= 0x400000;
                        this.pOWKOEF_ = value;
                        onChanged();
                        return this;
                    }

                    public Builder clearPOWKOEF() {
                        this.bitField1_ &= 0xFFBFFFFF;
                        this.pOWKOEF_ = 0.0F;
                        onChanged();
                        return this;
                    }

                    public boolean hasPOWGENTOTAL() {
                        return ((this.bitField1_ & 0x800000) != 0);
                    }

                    public int getPOWGENTOTAL() {
                        return this.pOWGENTOTAL_;
                    }

                    public Builder setPOWGENTOTAL(int value) {
                        this.bitField1_ |= 0x800000;
                        this.pOWGENTOTAL_ = value;
                        onChanged();
                        return this;
                    }

                    public Builder clearPOWGENTOTAL() {
                        this.bitField1_ &= 0xFF7FFFFF;
                        this.pOWGENTOTAL_ = 0;
                        onChanged();
                        return this;
                    }

                    public boolean hasFUELLEVEL() {
                        return ((this.bitField1_ & 0x1000000) != 0);
                    }

                    public int getFUELLEVEL() {
                        return this.fUELLEVEL_;
                    }

                    public Builder setFUELLEVEL(int value) {
                        this.bitField1_ |= 0x1000000;
                        this.fUELLEVEL_ = value;
                        onChanged();
                        return this;
                    }

                    public Builder clearFUELLEVEL() {
                        this.bitField1_ &= 0xFEFFFFFF;
                        this.fUELLEVEL_ = 0;
                        onChanged();
                        return this;
                    }

                    public boolean hasSMSREGS0() {
                        return ((this.bitField1_ & 0x2000000) != 0);
                    }

                    public int getSMSREGS0() {
                        return this.sMSREGS0_;
                    }

                    public Builder setSMSREGS0(int value) {
                        this.bitField1_ |= 0x2000000;
                        this.sMSREGS0_ = value;
                        onChanged();
                        return this;
                    }

                    public Builder clearSMSREGS0() {
                        this.bitField1_ &= 0xFDFFFFFF;
                        this.sMSREGS0_ = 0;
                        onChanged();
                        return this;
                    }

                    public boolean hasSMSREGS1() {
                        return ((this.bitField1_ & 0x4000000) != 0);
                    }

                    public int getSMSREGS1() {
                        return this.sMSREGS1_;
                    }

                    public Builder setSMSREGS1(int value) {
                        this.bitField1_ |= 0x4000000;
                        this.sMSREGS1_ = value;
                        onChanged();
                        return this;
                    }

                    public Builder clearSMSREGS1() {
                        this.bitField1_ &= 0xFBFFFFFF;
                        this.sMSREGS1_ = 0;
                        onChanged();
                        return this;
                    }

                    public boolean hasSMSREGS2() {
                        return ((this.bitField1_ & 0x8000000) != 0);
                    }

                    public int getSMSREGS2() {
                        return this.sMSREGS2_;
                    }

                    public Builder setSMSREGS2(int value) {
                        this.bitField1_ |= 0x8000000;
                        this.sMSREGS2_ = value;
                        onChanged();
                        return this;
                    }

                    public Builder clearSMSREGS2() {
                        this.bitField1_ &= 0xF7FFFFFF;
                        this.sMSREGS2_ = 0;
                        onChanged();
                        return this;
                    }

                    public boolean hasSMSREGS3() {
                        return ((this.bitField1_ & 0x10000000) != 0);
                    }

                    public int getSMSREGS3() {
                        return this.sMSREGS3_;
                    }

                    public Builder setSMSREGS3(int value) {
                        this.bitField1_ |= 0x10000000;
                        this.sMSREGS3_ = value;
                        onChanged();
                        return this;
                    }

                    public Builder clearSMSREGS3() {
                        this.bitField1_ &= 0xEFFFFFFF;
                        this.sMSREGS3_ = 0;
                        onChanged();
                        return this;
                    }

                    public boolean hasSMSREGS4() {
                        return ((this.bitField1_ & 0x20000000) != 0);
                    }

                    public int getSMSREGS4() {
                        return this.sMSREGS4_;
                    }

                    public Builder setSMSREGS4(int value) {
                        this.bitField1_ |= 0x20000000;
                        this.sMSREGS4_ = value;
                        onChanged();
                        return this;
                    }

                    public Builder clearSMSREGS4() {
                        this.bitField1_ &= 0xDFFFFFFF;
                        this.sMSREGS4_ = 0;
                        onChanged();
                        return this;
                    }

                    public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
                        return (Builder) super.setUnknownFields(unknownFields);
                    }

                    public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
                        return (Builder) super.mergeUnknownFields(unknownFields);
                    }
                }

                private static final GenComm DEFAULT_INSTANCE = new GenComm();

                public static GenComm getDefaultInstance() {
                    return DEFAULT_INSTANCE;
                }

                @Deprecated
                public static final Parser<GenComm> PARSER = (Parser<GenComm>) new AbstractParser<GenComm>() {
                    public OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                        return new OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm(input, extensionRegistry);
                    }
                };

                public static Parser<GenComm> parser() {
                    return PARSER;
                }

                public Parser<GenComm> getParserForType() {
                    return PARSER;
                }

                public GenComm getDefaultInstanceForType() {
                    return DEFAULT_INSTANCE;
                }
            }

            public static final class Builder extends GeneratedMessageV3.Builder<GenComm.Builder> implements GenCommOrBuilder {
                private int bitField0_;

                private int bitField1_;

                private int gENOILPRESS1_;

                private int gENTEMP1_;

                private float gENVOLT1_;

                private int gENRPM1_;

                private float gENUL11_;

                private float gENUL21_;

                private float gENUL31_;

                private float gENIL11_;

                private float gENIL21_;

                private float gENIL31_;

                private int gENSTATUS1_;

                private int gENHOURS1_;

                private List<ByteString> gENALARM1_;

                private int gENOILPRESS2_;

                private int gENTEMP2_;

                private float gENVOLT2_;

                private int gENRPM2_;

                private float gENUL12_;

                private float gENUL22_;

                private float gENUL32_;

                private float gENIL12_;

                private float gENIL22_;

                private float gENIL32_;

                private int gENSTATUS2_;

                private int gENHOURS2_;

                private List<ByteString> gENALARM2_;

                private int gENOILPRESS3_;

                private int gENTEMP3_;

                private float gENVOLT3_;

                private int gENRPM3_;

                private float gENUL13_;

                private float gENUL23_;

                private float gENUL33_;

                private float gENIL13_;

                private float gENIL23_;

                private float gENIL33_;

                private int gENSTATUS3_;

                private int gENHOURS3_;

                private List<ByteString> gENALARM3_;

                private float gENUC_;

                private int gENIC_;

                private float gENFREQ_;

                private float gENUL1L2_;

                private float gENUL2L3_;

                private float gENUL1L3_;

                private int pOWACTL1_;

                private int pOWACTL2_;

                private int pOWACTL3_;

                private int pOWFULLL1_;

                private int pOWFULLL2_;

                private int pOWFULLL3_;

                private int pOWREACTL1_;

                private int pOWREACTL2_;

                private int pOWREACTL3_;

                private float pOWKOEF_;

                private int pOWGENTOTAL_;

                private int fUELLEVEL_;

                private int sMSREGS0_;

                private int sMSREGS1_;

                private int sMSREGS2_;

                private int sMSREGS3_;

                private int sMSREGS4_;

                public static final Descriptors.Descriptor getDescriptor() {
                    return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_GenComm_descriptor;
                }

                protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
                    return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_GenComm_fieldAccessorTable.ensureFieldAccessorsInitialized(OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm.class, Builder.class);
                }

                private Builder() {
                    this.gENALARM1_ = Collections.emptyList();
                    this.gENALARM2_ = Collections.emptyList();
                    this.gENALARM3_ = Collections.emptyList();
                    maybeForceBuilderInitialization();
                }

                private Builder(GeneratedMessageV3.BuilderParent parent) {
                    super(parent);
                    this.gENALARM1_ = Collections.emptyList();
                    this.gENALARM2_ = Collections.emptyList();
                    this.gENALARM3_ = Collections.emptyList();
                    maybeForceBuilderInitialization();
                }

                private void maybeForceBuilderInitialization() {
                    if (OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm.alwaysUseFieldBuilders) ;
                }

                public Builder clear() {
                    super.clear();
                    this.gENOILPRESS1_ = 0;
                    this.bitField0_ &= 0xFFFFFFFE;
                    this.gENTEMP1_ = 0;
                    this.bitField0_ &= 0xFFFFFFFD;
                    this.gENVOLT1_ = 0.0F;
                    this.bitField0_ &= 0xFFFFFFFB;
                    this.gENRPM1_ = 0;
                    this.bitField0_ &= 0xFFFFFFF7;
                    this.gENUL11_ = 0.0F;
                    this.bitField0_ &= 0xFFFFFFEF;
                    this.gENUL21_ = 0.0F;
                    this.bitField0_ &= 0xFFFFFFDF;
                    this.gENUL31_ = 0.0F;
                    this.bitField0_ &= 0xFFFFFFBF;
                    this.gENIL11_ = 0.0F;
                    this.bitField0_ &= 0xFFFFFF7F;
                    this.gENIL21_ = 0.0F;
                    this.bitField0_ &= 0xFFFFFEFF;
                    this.gENIL31_ = 0.0F;
                    this.bitField0_ &= 0xFFFFFDFF;
                    this.gENSTATUS1_ = 0;
                    this.bitField0_ &= 0xFFFFFBFF;
                    this.gENHOURS1_ = 0;
                    this.bitField0_ &= 0xFFFFF7FF;
                    this.gENALARM1_ = Collections.emptyList();
                    this.bitField0_ &= 0xFFFFEFFF;
                    this.gENOILPRESS2_ = 0;
                    this.bitField0_ &= 0xFFFFDFFF;
                    this.gENTEMP2_ = 0;
                    this.bitField0_ &= 0xFFFFBFFF;
                    this.gENVOLT2_ = 0.0F;
                    this.bitField0_ &= 0xFFFF7FFF;
                    this.gENRPM2_ = 0;
                    this.bitField0_ &= 0xFFFEFFFF;
                    this.gENUL12_ = 0.0F;
                    this.bitField0_ &= 0xFFFDFFFF;
                    this.gENUL22_ = 0.0F;
                    this.bitField0_ &= 0xFFFBFFFF;
                    this.gENUL32_ = 0.0F;
                    this.bitField0_ &= 0xFFF7FFFF;
                    this.gENIL12_ = 0.0F;
                    this.bitField0_ &= 0xFFEFFFFF;
                    this.gENIL22_ = 0.0F;
                    this.bitField0_ &= 0xFFDFFFFF;
                    this.gENIL32_ = 0.0F;
                    this.bitField0_ &= 0xFFBFFFFF;
                    this.gENSTATUS2_ = 0;
                    this.bitField0_ &= 0xFF7FFFFF;
                    this.gENHOURS2_ = 0;
                    this.bitField0_ &= 0xFEFFFFFF;
                    this.gENALARM2_ = Collections.emptyList();
                    this.bitField0_ &= 0xFDFFFFFF;
                    this.gENOILPRESS3_ = 0;
                    this.bitField0_ &= 0xFBFFFFFF;
                    this.gENTEMP3_ = 0;
                    this.bitField0_ &= 0xF7FFFFFF;
                    this.gENVOLT3_ = 0.0F;
                    this.bitField0_ &= 0xEFFFFFFF;
                    this.gENRPM3_ = 0;
                    this.bitField0_ &= 0xDFFFFFFF;
                    this.gENUL13_ = 0.0F;
                    this.bitField0_ &= 0xBFFFFFFF;
                    this.gENUL23_ = 0.0F;
                    this.bitField0_ &= Integer.MAX_VALUE;
                    this.gENUL33_ = 0.0F;
                    this.bitField1_ &= 0xFFFFFFFE;
                    this.gENIL13_ = 0.0F;
                    this.bitField1_ &= 0xFFFFFFFD;
                    this.gENIL23_ = 0.0F;
                    this.bitField1_ &= 0xFFFFFFFB;
                    this.gENIL33_ = 0.0F;
                    this.bitField1_ &= 0xFFFFFFF7;
                    this.gENSTATUS3_ = 0;
                    this.bitField1_ &= 0xFFFFFFEF;
                    this.gENHOURS3_ = 0;
                    this.bitField1_ &= 0xFFFFFFDF;
                    this.gENALARM3_ = Collections.emptyList();
                    this.bitField1_ &= 0xFFFFFFBF;
                    this.gENUC_ = 0.0F;
                    this.bitField1_ &= 0xFFFFFF7F;
                    this.gENIC_ = 0;
                    this.bitField1_ &= 0xFFFFFEFF;
                    this.gENFREQ_ = 0.0F;
                    this.bitField1_ &= 0xFFFFFDFF;
                    this.gENUL1L2_ = 0.0F;
                    this.bitField1_ &= 0xFFFFFBFF;
                    this.gENUL2L3_ = 0.0F;
                    this.bitField1_ &= 0xFFFFF7FF;
                    this.gENUL1L3_ = 0.0F;
                    this.bitField1_ &= 0xFFFFEFFF;
                    this.pOWACTL1_ = 0;
                    this.bitField1_ &= 0xFFFFDFFF;
                    this.pOWACTL2_ = 0;
                    this.bitField1_ &= 0xFFFFBFFF;
                    this.pOWACTL3_ = 0;
                    this.bitField1_ &= 0xFFFF7FFF;
                    this.pOWFULLL1_ = 0;
                    this.bitField1_ &= 0xFFFEFFFF;
                    this.pOWFULLL2_ = 0;
                    this.bitField1_ &= 0xFFFDFFFF;
                    this.pOWFULLL3_ = 0;
                    this.bitField1_ &= 0xFFFBFFFF;
                    this.pOWREACTL1_ = 0;
                    this.bitField1_ &= 0xFFF7FFFF;
                    this.pOWREACTL2_ = 0;
                    this.bitField1_ &= 0xFFEFFFFF;
                    this.pOWREACTL3_ = 0;
                    this.bitField1_ &= 0xFFDFFFFF;
                    this.pOWKOEF_ = 0.0F;
                    this.bitField1_ &= 0xFFBFFFFF;
                    this.pOWGENTOTAL_ = 0;
                    this.bitField1_ &= 0xFF7FFFFF;
                    this.fUELLEVEL_ = 0;
                    this.bitField1_ &= 0xFEFFFFFF;
                    this.sMSREGS0_ = 0;
                    this.bitField1_ &= 0xFDFFFFFF;
                    this.sMSREGS1_ = 0;
                    this.bitField1_ &= 0xFBFFFFFF;
                    this.sMSREGS2_ = 0;
                    this.bitField1_ &= 0xF7FFFFFF;
                    this.sMSREGS3_ = 0;
                    this.bitField1_ &= 0xEFFFFFFF;
                    this.sMSREGS4_ = 0;
                    this.bitField1_ &= 0xDFFFFFFF;
                    return this;
                }

                public Descriptors.Descriptor getDescriptorForType() {
                    return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_GenComm_descriptor;
                }

                public OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm getDefaultInstanceForType() {
                    return OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm.getDefaultInstance();
                }

                public OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm build() {
                    OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm result = buildPartial();
                    if (!result.isInitialized())
                        throw newUninitializedMessageException(result);
                    return result;
                }

                public OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm buildPartial() {
                    OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm result = new OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm(this);
                    int from_bitField0_ = this.bitField0_;
                    int from_bitField1_ = this.bitField1_;
                    int to_bitField0_ = 0;
                    int to_bitField1_ = 0;
                    if ((from_bitField0_ & 0x1) != 0) {
                        result.gENOILPRESS1_ = this.gENOILPRESS1_;
                        to_bitField0_ |= 0x1;
                    }
                    if ((from_bitField0_ & 0x2) != 0) {
                        result.gENTEMP1_ = this.gENTEMP1_;
                        to_bitField0_ |= 0x2;
                    }
                    if ((from_bitField0_ & 0x4) != 0) {
                        result.gENVOLT1_ = this.gENVOLT1_;
                        to_bitField0_ |= 0x4;
                    }
                    if ((from_bitField0_ & 0x8) != 0) {
                        result.gENRPM1_ = this.gENRPM1_;
                        to_bitField0_ |= 0x8;
                    }
                    if ((from_bitField0_ & 0x10) != 0) {
                        result.gENUL11_ = this.gENUL11_;
                        to_bitField0_ |= 0x10;
                    }
                    if ((from_bitField0_ & 0x20) != 0) {
                        result.gENUL21_ = this.gENUL21_;
                        to_bitField0_ |= 0x20;
                    }
                    if ((from_bitField0_ & 0x40) != 0) {
                        result.gENUL31_ = this.gENUL31_;
                        to_bitField0_ |= 0x40;
                    }
                    if ((from_bitField0_ & 0x80) != 0) {
                        result.gENIL11_ = this.gENIL11_;
                        to_bitField0_ |= 0x80;
                    }
                    if ((from_bitField0_ & 0x100) != 0) {
                        result.gENIL21_ = this.gENIL21_;
                        to_bitField0_ |= 0x100;
                    }
                    if ((from_bitField0_ & 0x200) != 0) {
                        result.gENIL31_ = this.gENIL31_;
                        to_bitField0_ |= 0x200;
                    }
                    if ((from_bitField0_ & 0x400) != 0) {
                        result.gENSTATUS1_ = this.gENSTATUS1_;
                        to_bitField0_ |= 0x400;
                    }
                    if ((from_bitField0_ & 0x800) != 0) {
                        result.gENHOURS1_ = this.gENHOURS1_;
                        to_bitField0_ |= 0x800;
                    }
                    if ((this.bitField0_ & 0x1000) != 0) {
                        this.gENALARM1_ = Collections.unmodifiableList(this.gENALARM1_);
                        this.bitField0_ &= 0xFFFFEFFF;
                    }
                    result.gENALARM1_ = this.gENALARM1_;
                    if ((from_bitField0_ & 0x2000) != 0) {
                        result.gENOILPRESS2_ = this.gENOILPRESS2_;
                        to_bitField0_ |= 0x1000;
                    }
                    if ((from_bitField0_ & 0x4000) != 0) {
                        result.gENTEMP2_ = this.gENTEMP2_;
                        to_bitField0_ |= 0x2000;
                    }
                    if ((from_bitField0_ & 0x8000) != 0) {
                        result.gENVOLT2_ = this.gENVOLT2_;
                        to_bitField0_ |= 0x4000;
                    }
                    if ((from_bitField0_ & 0x10000) != 0) {
                        result.gENRPM2_ = this.gENRPM2_;
                        to_bitField0_ |= 0x8000;
                    }
                    if ((from_bitField0_ & 0x20000) != 0) {
                        result.gENUL12_ = this.gENUL12_;
                        to_bitField0_ |= 0x10000;
                    }
                    if ((from_bitField0_ & 0x40000) != 0) {
                        result.gENUL22_ = this.gENUL22_;
                        to_bitField0_ |= 0x20000;
                    }
                    if ((from_bitField0_ & 0x80000) != 0) {
                        result.gENUL32_ = this.gENUL32_;
                        to_bitField0_ |= 0x40000;
                    }
                    if ((from_bitField0_ & 0x100000) != 0) {
                        result.gENIL12_ = this.gENIL12_;
                        to_bitField0_ |= 0x80000;
                    }
                    if ((from_bitField0_ & 0x200000) != 0) {
                        result.gENIL22_ = this.gENIL22_;
                        to_bitField0_ |= 0x100000;
                    }
                    if ((from_bitField0_ & 0x400000) != 0) {
                        result.gENIL32_ = this.gENIL32_;
                        to_bitField0_ |= 0x200000;
                    }
                    if ((from_bitField0_ & 0x800000) != 0) {
                        result.gENSTATUS2_ = this.gENSTATUS2_;
                        to_bitField0_ |= 0x400000;
                    }
                    if ((from_bitField0_ & 0x1000000) != 0) {
                        result.gENHOURS2_ = this.gENHOURS2_;
                        to_bitField0_ |= 0x800000;
                    }
                    if ((this.bitField0_ & 0x2000000) != 0) {
                        this.gENALARM2_ = Collections.unmodifiableList(this.gENALARM2_);
                        this.bitField0_ &= 0xFDFFFFFF;
                    }
                    result.gENALARM2_ = this.gENALARM2_;
                    if ((from_bitField0_ & 0x4000000) != 0) {
                        result.gENOILPRESS3_ = this.gENOILPRESS3_;
                        to_bitField0_ |= 0x1000000;
                    }
                    if ((from_bitField0_ & 0x8000000) != 0) {
                        result.gENTEMP3_ = this.gENTEMP3_;
                        to_bitField0_ |= 0x2000000;
                    }
                    if ((from_bitField0_ & 0x10000000) != 0) {
                        result.gENVOLT3_ = this.gENVOLT3_;
                        to_bitField0_ |= 0x4000000;
                    }
                    if ((from_bitField0_ & 0x20000000) != 0) {
                        result.gENRPM3_ = this.gENRPM3_;
                        to_bitField0_ |= 0x8000000;
                    }
                    if ((from_bitField0_ & 0x40000000) != 0) {
                        result.gENUL13_ = this.gENUL13_;
                        to_bitField0_ |= 0x10000000;
                    }
                    if ((from_bitField0_ & Integer.MIN_VALUE) != 0) {
                        result.gENUL23_ = this.gENUL23_;
                        to_bitField0_ |= 0x20000000;
                    }
                    if ((from_bitField1_ & 0x1) != 0) {
                        result.gENUL33_ = this.gENUL33_;
                        to_bitField0_ |= 0x40000000;
                    }
                    if ((from_bitField1_ & 0x2) != 0) {
                        result.gENIL13_ = this.gENIL13_;
                        to_bitField0_ |= Integer.MIN_VALUE;
                    }
                    if ((from_bitField1_ & 0x4) != 0) {
                        result.gENIL23_ = this.gENIL23_;
                        to_bitField1_ |= 0x1;
                    }
                    if ((from_bitField1_ & 0x8) != 0) {
                        result.gENIL33_ = this.gENIL33_;
                        to_bitField1_ |= 0x2;
                    }
                    if ((from_bitField1_ & 0x10) != 0) {
                        result.gENSTATUS3_ = this.gENSTATUS3_;
                        to_bitField1_ |= 0x4;
                    }
                    if ((from_bitField1_ & 0x20) != 0) {
                        result.gENHOURS3_ = this.gENHOURS3_;
                        to_bitField1_ |= 0x8;
                    }
                    if ((this.bitField1_ & 0x40) != 0) {
                        this.gENALARM3_ = Collections.unmodifiableList(this.gENALARM3_);
                        this.bitField1_ &= 0xFFFFFFBF;
                    }
                    result.gENALARM3_ = this.gENALARM3_;
                    if ((from_bitField1_ & 0x80) != 0) {
                        result.gENUC_ = this.gENUC_;
                        to_bitField1_ |= 0x10;
                    }
                    if ((from_bitField1_ & 0x100) != 0) {
                        result.gENIC_ = this.gENIC_;
                        to_bitField1_ |= 0x20;
                    }
                    if ((from_bitField1_ & 0x200) != 0) {
                        result.gENFREQ_ = this.gENFREQ_;
                        to_bitField1_ |= 0x40;
                    }
                    if ((from_bitField1_ & 0x400) != 0) {
                        result.gENUL1L2_ = this.gENUL1L2_;
                        to_bitField1_ |= 0x80;
                    }
                    if ((from_bitField1_ & 0x800) != 0) {
                        result.gENUL2L3_ = this.gENUL2L3_;
                        to_bitField1_ |= 0x100;
                    }
                    if ((from_bitField1_ & 0x1000) != 0) {
                        result.gENUL1L3_ = this.gENUL1L3_;
                        to_bitField1_ |= 0x200;
                    }
                    if ((from_bitField1_ & 0x2000) != 0) {
                        result.pOWACTL1_ = this.pOWACTL1_;
                        to_bitField1_ |= 0x400;
                    }
                    if ((from_bitField1_ & 0x4000) != 0) {
                        result.pOWACTL2_ = this.pOWACTL2_;
                        to_bitField1_ |= 0x800;
                    }
                    if ((from_bitField1_ & 0x8000) != 0) {
                        result.pOWACTL3_ = this.pOWACTL3_;
                        to_bitField1_ |= 0x1000;
                    }
                    if ((from_bitField1_ & 0x10000) != 0) {
                        result.pOWFULLL1_ = this.pOWFULLL1_;
                        to_bitField1_ |= 0x2000;
                    }
                    if ((from_bitField1_ & 0x20000) != 0) {
                        result.pOWFULLL2_ = this.pOWFULLL2_;
                        to_bitField1_ |= 0x4000;
                    }
                    if ((from_bitField1_ & 0x40000) != 0) {
                        result.pOWFULLL3_ = this.pOWFULLL3_;
                        to_bitField1_ |= 0x8000;
                    }
                    if ((from_bitField1_ & 0x80000) != 0) {
                        result.pOWREACTL1_ = this.pOWREACTL1_;
                        to_bitField1_ |= 0x10000;
                    }
                    if ((from_bitField1_ & 0x100000) != 0) {
                        result.pOWREACTL2_ = this.pOWREACTL2_;
                        to_bitField1_ |= 0x20000;
                    }
                    if ((from_bitField1_ & 0x200000) != 0) {
                        result.pOWREACTL3_ = this.pOWREACTL3_;
                        to_bitField1_ |= 0x40000;
                    }
                    if ((from_bitField1_ & 0x400000) != 0) {
                        result.pOWKOEF_ = this.pOWKOEF_;
                        to_bitField1_ |= 0x80000;
                    }
                    if ((from_bitField1_ & 0x800000) != 0) {
                        result.pOWGENTOTAL_ = this.pOWGENTOTAL_;
                        to_bitField1_ |= 0x100000;
                    }
                    if ((from_bitField1_ & 0x1000000) != 0) {
                        result.fUELLEVEL_ = this.fUELLEVEL_;
                        to_bitField1_ |= 0x200000;
                    }
                    if ((from_bitField1_ & 0x2000000) != 0) {
                        result.sMSREGS0_ = this.sMSREGS0_;
                        to_bitField1_ |= 0x400000;
                    }
                    if ((from_bitField1_ & 0x4000000) != 0) {
                        result.sMSREGS1_ = this.sMSREGS1_;
                        to_bitField1_ |= 0x800000;
                    }
                    if ((from_bitField1_ & 0x8000000) != 0) {
                        result.sMSREGS2_ = this.sMSREGS2_;
                        to_bitField1_ |= 0x1000000;
                    }
                    if ((from_bitField1_ & 0x10000000) != 0) {
                        result.sMSREGS3_ = this.sMSREGS3_;
                        to_bitField1_ |= 0x2000000;
                    }
                    if ((from_bitField1_ & 0x20000000) != 0) {
                        result.sMSREGS4_ = this.sMSREGS4_;
                        to_bitField1_ |= 0x4000000;
                    }
                    result.bitField0_ = to_bitField0_;
                    result.bitField1_ = to_bitField1_;
                    onBuilt();
                    return result;
                }

                public Builder clone() {
                    return (Builder) super.clone();
                }

                public Builder setField(Descriptors.FieldDescriptor field, Object value) {
                    return (Builder) super.setField(field, value);
                }

                public Builder clearField(Descriptors.FieldDescriptor field) {
                    return (Builder) super.clearField(field);
                }

                public Builder clearOneof(Descriptors.OneofDescriptor oneof) {
                    return (Builder) super.clearOneof(oneof);
                }

                public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
                    return (Builder) super.setRepeatedField(field, index, value);
                }

                public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
                    return (Builder) super.addRepeatedField(field, value);
                }

                public Builder mergeFrom(Message other) {
                    if (other instanceof OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm)
                        return mergeFrom((OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm) other);
                    super.mergeFrom(other);
                    return this;
                }

                public Builder mergeFrom(OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm other) {
                    if (other == OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm.getDefaultInstance())
                        return this;
                    if (other.hasGENOILPRESS1())
                        setGENOILPRESS1(other.getGENOILPRESS1());
                    if (other.hasGENTEMP1())
                        setGENTEMP1(other.getGENTEMP1());
                    if (other.hasGENVOLT1())
                        setGENVOLT1(other.getGENVOLT1());
                    if (other.hasGENRPM1())
                        setGENRPM1(other.getGENRPM1());
                    if (other.hasGENUL11())
                        setGENUL11(other.getGENUL11());
                    if (other.hasGENUL21())
                        setGENUL21(other.getGENUL21());
                    if (other.hasGENUL31())
                        setGENUL31(other.getGENUL31());
                    if (other.hasGENIL11())
                        setGENIL11(other.getGENIL11());
                    if (other.hasGENIL21())
                        setGENIL21(other.getGENIL21());
                    if (other.hasGENIL31())
                        setGENIL31(other.getGENIL31());
                    if (other.hasGENSTATUS1())
                        setGENSTATUS1(other.getGENSTATUS1());
                    if (other.hasGENHOURS1())
                        setGENHOURS1(other.getGENHOURS1());
                    if (!other.gENALARM1_.isEmpty()) {
                        if (this.gENALARM1_.isEmpty()) {
                            this.gENALARM1_ = other.gENALARM1_;
                            this.bitField0_ &= 0xFFFFEFFF;
                        } else {
                            ensureGENALARM1IsMutable();
                            this.gENALARM1_.addAll(other.gENALARM1_);
                        }
                        onChanged();
                    }
                    if (other.hasGENOILPRESS2())
                        setGENOILPRESS2(other.getGENOILPRESS2());
                    if (other.hasGENTEMP2())
                        setGENTEMP2(other.getGENTEMP2());
                    if (other.hasGENVOLT2())
                        setGENVOLT2(other.getGENVOLT2());
                    if (other.hasGENRPM2())
                        setGENRPM2(other.getGENRPM2());
                    if (other.hasGENUL12())
                        setGENUL12(other.getGENUL12());
                    if (other.hasGENUL22())
                        setGENUL22(other.getGENUL22());
                    if (other.hasGENUL32())
                        setGENUL32(other.getGENUL32());
                    if (other.hasGENIL12())
                        setGENIL12(other.getGENIL12());
                    if (other.hasGENIL22())
                        setGENIL22(other.getGENIL22());
                    if (other.hasGENIL32())
                        setGENIL32(other.getGENIL32());
                    if (other.hasGENSTATUS2())
                        setGENSTATUS2(other.getGENSTATUS2());
                    if (other.hasGENHOURS2())
                        setGENHOURS2(other.getGENHOURS2());
                    if (!other.gENALARM2_.isEmpty()) {
                        if (this.gENALARM2_.isEmpty()) {
                            this.gENALARM2_ = other.gENALARM2_;
                            this.bitField0_ &= 0xFDFFFFFF;
                        } else {
                            ensureGENALARM2IsMutable();
                            this.gENALARM2_.addAll(other.gENALARM2_);
                        }
                        onChanged();
                    }
                    if (other.hasGENOILPRESS3())
                        setGENOILPRESS3(other.getGENOILPRESS3());
                    if (other.hasGENTEMP3())
                        setGENTEMP3(other.getGENTEMP3());
                    if (other.hasGENVOLT3())
                        setGENVOLT3(other.getGENVOLT3());
                    if (other.hasGENRPM3())
                        setGENRPM3(other.getGENRPM3());
                    if (other.hasGENUL13())
                        setGENUL13(other.getGENUL13());
                    if (other.hasGENUL23())
                        setGENUL23(other.getGENUL23());
                    if (other.hasGENUL33())
                        setGENUL33(other.getGENUL33());
                    if (other.hasGENIL13())
                        setGENIL13(other.getGENIL13());
                    if (other.hasGENIL23())
                        setGENIL23(other.getGENIL23());
                    if (other.hasGENIL33())
                        setGENIL33(other.getGENIL33());
                    if (other.hasGENSTATUS3())
                        setGENSTATUS3(other.getGENSTATUS3());
                    if (other.hasGENHOURS3())
                        setGENHOURS3(other.getGENHOURS3());
                    if (!other.gENALARM3_.isEmpty()) {
                        if (this.gENALARM3_.isEmpty()) {
                            this.gENALARM3_ = other.gENALARM3_;
                            this.bitField1_ &= 0xFFFFFFBF;
                        } else {
                            ensureGENALARM3IsMutable();
                            this.gENALARM3_.addAll(other.gENALARM3_);
                        }
                        onChanged();
                    }
                    if (other.hasGENUC())
                        setGENUC(other.getGENUC());
                    if (other.hasGENIC())
                        setGENIC(other.getGENIC());
                    if (other.hasGENFREQ())
                        setGENFREQ(other.getGENFREQ());
                    if (other.hasGENUL1L2())
                        setGENUL1L2(other.getGENUL1L2());
                    if (other.hasGENUL2L3())
                        setGENUL2L3(other.getGENUL2L3());
                    if (other.hasGENUL1L3())
                        setGENUL1L3(other.getGENUL1L3());
                    if (other.hasPOWACTL1())
                        setPOWACTL1(other.getPOWACTL1());
                    if (other.hasPOWACTL2())
                        setPOWACTL2(other.getPOWACTL2());
                    if (other.hasPOWACTL3())
                        setPOWACTL3(other.getPOWACTL3());
                    if (other.hasPOWFULLL1())
                        setPOWFULLL1(other.getPOWFULLL1());
                    if (other.hasPOWFULLL2())
                        setPOWFULLL2(other.getPOWFULLL2());
                    if (other.hasPOWFULLL3())
                        setPOWFULLL3(other.getPOWFULLL3());
                    if (other.hasPOWREACTL1())
                        setPOWREACTL1(other.getPOWREACTL1());
                    if (other.hasPOWREACTL2())
                        setPOWREACTL2(other.getPOWREACTL2());
                    if (other.hasPOWREACTL3())
                        setPOWREACTL3(other.getPOWREACTL3());
                    if (other.hasPOWKOEF())
                        setPOWKOEF(other.getPOWKOEF());
                    if (other.hasPOWGENTOTAL())
                        setPOWGENTOTAL(other.getPOWGENTOTAL());
                    if (other.hasFUELLEVEL())
                        setFUELLEVEL(other.getFUELLEVEL());
                    if (other.hasSMSREGS0())
                        setSMSREGS0(other.getSMSREGS0());
                    if (other.hasSMSREGS1())
                        setSMSREGS1(other.getSMSREGS1());
                    if (other.hasSMSREGS2())
                        setSMSREGS2(other.getSMSREGS2());
                    if (other.hasSMSREGS3())
                        setSMSREGS3(other.getSMSREGS3());
                    if (other.hasSMSREGS4())
                        setSMSREGS4(other.getSMSREGS4());
                    mergeUnknownFields(other.unknownFields);
                    onChanged();
                    return this;
                }

                public final boolean isInitialized() {
                    return true;
                }

                public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                    OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm parsedMessage = null;
                    try {
                        parsedMessage = (OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm) OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm.PARSER.parsePartialFrom(input, extensionRegistry);
                    } catch (InvalidProtocolBufferException e) {
                        parsedMessage = (OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm) e.getUnfinishedMessage();
                        throw e.unwrapIOException();
                    } finally {
                        if (parsedMessage != null)
                            mergeFrom(parsedMessage);
                    }
                    return this;
                }

                public boolean hasGENOILPRESS1() {
                    return ((this.bitField0_ & 0x1) != 0);
                }

                public int getGENOILPRESS1() {
                    return this.gENOILPRESS1_;
                }

                public Builder setGENOILPRESS1(int value) {
                    this.bitField0_ |= 0x1;
                    this.gENOILPRESS1_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearGENOILPRESS1() {
                    this.bitField0_ &= 0xFFFFFFFE;
                    this.gENOILPRESS1_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasGENTEMP1() {
                    return ((this.bitField0_ & 0x2) != 0);
                }

                public int getGENTEMP1() {
                    return this.gENTEMP1_;
                }

                public Builder setGENTEMP1(int value) {
                    this.bitField0_ |= 0x2;
                    this.gENTEMP1_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearGENTEMP1() {
                    this.bitField0_ &= 0xFFFFFFFD;
                    this.gENTEMP1_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasGENVOLT1() {
                    return ((this.bitField0_ & 0x4) != 0);
                }

                public float getGENVOLT1() {
                    return this.gENVOLT1_;
                }

                public Builder setGENVOLT1(float value) {
                    this.bitField0_ |= 0x4;
                    this.gENVOLT1_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearGENVOLT1() {
                    this.bitField0_ &= 0xFFFFFFFB;
                    this.gENVOLT1_ = 0.0F;
                    onChanged();
                    return this;
                }

                public boolean hasGENRPM1() {
                    return ((this.bitField0_ & 0x8) != 0);
                }

                public int getGENRPM1() {
                    return this.gENRPM1_;
                }

                public Builder setGENRPM1(int value) {
                    this.bitField0_ |= 0x8;
                    this.gENRPM1_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearGENRPM1() {
                    this.bitField0_ &= 0xFFFFFFF7;
                    this.gENRPM1_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasGENUL11() {
                    return ((this.bitField0_ & 0x10) != 0);
                }

                public float getGENUL11() {
                    return this.gENUL11_;
                }

                public Builder setGENUL11(float value) {
                    this.bitField0_ |= 0x10;
                    this.gENUL11_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearGENUL11() {
                    this.bitField0_ &= 0xFFFFFFEF;
                    this.gENUL11_ = 0.0F;
                    onChanged();
                    return this;
                }

                public boolean hasGENUL21() {
                    return ((this.bitField0_ & 0x20) != 0);
                }

                public float getGENUL21() {
                    return this.gENUL21_;
                }

                public Builder setGENUL21(float value) {
                    this.bitField0_ |= 0x20;
                    this.gENUL21_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearGENUL21() {
                    this.bitField0_ &= 0xFFFFFFDF;
                    this.gENUL21_ = 0.0F;
                    onChanged();
                    return this;
                }

                public boolean hasGENUL31() {
                    return ((this.bitField0_ & 0x40) != 0);
                }

                public float getGENUL31() {
                    return this.gENUL31_;
                }

                public Builder setGENUL31(float value) {
                    this.bitField0_ |= 0x40;
                    this.gENUL31_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearGENUL31() {
                    this.bitField0_ &= 0xFFFFFFBF;
                    this.gENUL31_ = 0.0F;
                    onChanged();
                    return this;
                }

                public boolean hasGENIL11() {
                    return ((this.bitField0_ & 0x80) != 0);
                }

                public float getGENIL11() {
                    return this.gENIL11_;
                }

                public Builder setGENIL11(float value) {
                    this.bitField0_ |= 0x80;
                    this.gENIL11_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearGENIL11() {
                    this.bitField0_ &= 0xFFFFFF7F;
                    this.gENIL11_ = 0.0F;
                    onChanged();
                    return this;
                }

                public boolean hasGENIL21() {
                    return ((this.bitField0_ & 0x100) != 0);
                }

                public float getGENIL21() {
                    return this.gENIL21_;
                }

                public Builder setGENIL21(float value) {
                    this.bitField0_ |= 0x100;
                    this.gENIL21_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearGENIL21() {
                    this.bitField0_ &= 0xFFFFFEFF;
                    this.gENIL21_ = 0.0F;
                    onChanged();
                    return this;
                }

                public boolean hasGENIL31() {
                    return ((this.bitField0_ & 0x200) != 0);
                }

                public float getGENIL31() {
                    return this.gENIL31_;
                }

                public Builder setGENIL31(float value) {
                    this.bitField0_ |= 0x200;
                    this.gENIL31_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearGENIL31() {
                    this.bitField0_ &= 0xFFFFFDFF;
                    this.gENIL31_ = 0.0F;
                    onChanged();
                    return this;
                }

                public boolean hasGENSTATUS1() {
                    return ((this.bitField0_ & 0x400) != 0);
                }

                public int getGENSTATUS1() {
                    return this.gENSTATUS1_;
                }

                public Builder setGENSTATUS1(int value) {
                    this.bitField0_ |= 0x400;
                    this.gENSTATUS1_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearGENSTATUS1() {
                    this.bitField0_ &= 0xFFFFFBFF;
                    this.gENSTATUS1_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasGENHOURS1() {
                    return ((this.bitField0_ & 0x800) != 0);
                }

                public int getGENHOURS1() {
                    return this.gENHOURS1_;
                }

                public Builder setGENHOURS1(int value) {
                    this.bitField0_ |= 0x800;
                    this.gENHOURS1_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearGENHOURS1() {
                    this.bitField0_ &= 0xFFFFF7FF;
                    this.gENHOURS1_ = 0;
                    onChanged();
                    return this;
                }

                private void ensureGENALARM1IsMutable() {
                    if ((this.bitField0_ & 0x1000) == 0) {
                        this.gENALARM1_ = new ArrayList<>(this.gENALARM1_);
                        this.bitField0_ |= 0x1000;
                    }
                }

                public List<ByteString> getGENALARM1List() {
                    return ((this.bitField0_ & 0x1000) != 0) ? Collections.<ByteString>unmodifiableList(this.gENALARM1_) : this.gENALARM1_;
                }

                public int getGENALARM1Count() {
                    return this.gENALARM1_.size();
                }

                public ByteString getGENALARM1(int index) {
                    return this.gENALARM1_.get(index);
                }

                public Builder setGENALARM1(int index, ByteString value) {
                    if (value == null)
                        throw new NullPointerException();
                    ensureGENALARM1IsMutable();
                    this.gENALARM1_.set(index, value);
                    onChanged();
                    return this;
                }

                public Builder addGENALARM1(ByteString value) {
                    if (value == null)
                        throw new NullPointerException();
                    ensureGENALARM1IsMutable();
                    this.gENALARM1_.add(value);
                    onChanged();
                    return this;
                }

                public Builder addAllGENALARM1(Iterable<? extends ByteString> values) {
                    ensureGENALARM1IsMutable();
                    AbstractMessageLite.Builder.addAll(values, this.gENALARM1_);
                    onChanged();
                    return this;
                }

                public Builder clearGENALARM1() {
                    this.gENALARM1_ = Collections.emptyList();
                    this.bitField0_ &= 0xFFFFEFFF;
                    onChanged();
                    return this;
                }

                public boolean hasGENOILPRESS2() {
                    return ((this.bitField0_ & 0x2000) != 0);
                }

                public int getGENOILPRESS2() {
                    return this.gENOILPRESS2_;
                }

                public Builder setGENOILPRESS2(int value) {
                    this.bitField0_ |= 0x2000;
                    this.gENOILPRESS2_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearGENOILPRESS2() {
                    this.bitField0_ &= 0xFFFFDFFF;
                    this.gENOILPRESS2_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasGENTEMP2() {
                    return ((this.bitField0_ & 0x4000) != 0);
                }

                public int getGENTEMP2() {
                    return this.gENTEMP2_;
                }

                public Builder setGENTEMP2(int value) {
                    this.bitField0_ |= 0x4000;
                    this.gENTEMP2_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearGENTEMP2() {
                    this.bitField0_ &= 0xFFFFBFFF;
                    this.gENTEMP2_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasGENVOLT2() {
                    return ((this.bitField0_ & 0x8000) != 0);
                }

                public float getGENVOLT2() {
                    return this.gENVOLT2_;
                }

                public Builder setGENVOLT2(float value) {
                    this.bitField0_ |= 0x8000;
                    this.gENVOLT2_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearGENVOLT2() {
                    this.bitField0_ &= 0xFFFF7FFF;
                    this.gENVOLT2_ = 0.0F;
                    onChanged();
                    return this;
                }

                public boolean hasGENRPM2() {
                    return ((this.bitField0_ & 0x10000) != 0);
                }

                public int getGENRPM2() {
                    return this.gENRPM2_;
                }

                public Builder setGENRPM2(int value) {
                    this.bitField0_ |= 0x10000;
                    this.gENRPM2_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearGENRPM2() {
                    this.bitField0_ &= 0xFFFEFFFF;
                    this.gENRPM2_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasGENUL12() {
                    return ((this.bitField0_ & 0x20000) != 0);
                }

                public float getGENUL12() {
                    return this.gENUL12_;
                }

                public Builder setGENUL12(float value) {
                    this.bitField0_ |= 0x20000;
                    this.gENUL12_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearGENUL12() {
                    this.bitField0_ &= 0xFFFDFFFF;
                    this.gENUL12_ = 0.0F;
                    onChanged();
                    return this;
                }

                public boolean hasGENUL22() {
                    return ((this.bitField0_ & 0x40000) != 0);
                }

                public float getGENUL22() {
                    return this.gENUL22_;
                }

                public Builder setGENUL22(float value) {
                    this.bitField0_ |= 0x40000;
                    this.gENUL22_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearGENUL22() {
                    this.bitField0_ &= 0xFFFBFFFF;
                    this.gENUL22_ = 0.0F;
                    onChanged();
                    return this;
                }

                public boolean hasGENUL32() {
                    return ((this.bitField0_ & 0x80000) != 0);
                }

                public float getGENUL32() {
                    return this.gENUL32_;
                }

                public Builder setGENUL32(float value) {
                    this.bitField0_ |= 0x80000;
                    this.gENUL32_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearGENUL32() {
                    this.bitField0_ &= 0xFFF7FFFF;
                    this.gENUL32_ = 0.0F;
                    onChanged();
                    return this;
                }

                public boolean hasGENIL12() {
                    return ((this.bitField0_ & 0x100000) != 0);
                }

                public float getGENIL12() {
                    return this.gENIL12_;
                }

                public Builder setGENIL12(float value) {
                    this.bitField0_ |= 0x100000;
                    this.gENIL12_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearGENIL12() {
                    this.bitField0_ &= 0xFFEFFFFF;
                    this.gENIL12_ = 0.0F;
                    onChanged();
                    return this;
                }

                public boolean hasGENIL22() {
                    return ((this.bitField0_ & 0x200000) != 0);
                }

                public float getGENIL22() {
                    return this.gENIL22_;
                }

                public Builder setGENIL22(float value) {
                    this.bitField0_ |= 0x200000;
                    this.gENIL22_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearGENIL22() {
                    this.bitField0_ &= 0xFFDFFFFF;
                    this.gENIL22_ = 0.0F;
                    onChanged();
                    return this;
                }

                public boolean hasGENIL32() {
                    return ((this.bitField0_ & 0x400000) != 0);
                }

                public float getGENIL32() {
                    return this.gENIL32_;
                }

                public Builder setGENIL32(float value) {
                    this.bitField0_ |= 0x400000;
                    this.gENIL32_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearGENIL32() {
                    this.bitField0_ &= 0xFFBFFFFF;
                    this.gENIL32_ = 0.0F;
                    onChanged();
                    return this;
                }

                public boolean hasGENSTATUS2() {
                    return ((this.bitField0_ & 0x800000) != 0);
                }

                public int getGENSTATUS2() {
                    return this.gENSTATUS2_;
                }

                public Builder setGENSTATUS2(int value) {
                    this.bitField0_ |= 0x800000;
                    this.gENSTATUS2_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearGENSTATUS2() {
                    this.bitField0_ &= 0xFF7FFFFF;
                    this.gENSTATUS2_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasGENHOURS2() {
                    return ((this.bitField0_ & 0x1000000) != 0);
                }

                public int getGENHOURS2() {
                    return this.gENHOURS2_;
                }

                public Builder setGENHOURS2(int value) {
                    this.bitField0_ |= 0x1000000;
                    this.gENHOURS2_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearGENHOURS2() {
                    this.bitField0_ &= 0xFEFFFFFF;
                    this.gENHOURS2_ = 0;
                    onChanged();
                    return this;
                }

                private void ensureGENALARM2IsMutable() {
                    if ((this.bitField0_ & 0x2000000) == 0) {
                        this.gENALARM2_ = new ArrayList<>(this.gENALARM2_);
                        this.bitField0_ |= 0x2000000;
                    }
                }

                public List<ByteString> getGENALARM2List() {
                    return ((this.bitField0_ & 0x2000000) != 0) ? Collections.<ByteString>unmodifiableList(this.gENALARM2_) : this.gENALARM2_;
                }

                public int getGENALARM2Count() {
                    return this.gENALARM2_.size();
                }

                public ByteString getGENALARM2(int index) {
                    return this.gENALARM2_.get(index);
                }

                public Builder setGENALARM2(int index, ByteString value) {
                    if (value == null)
                        throw new NullPointerException();
                    ensureGENALARM2IsMutable();
                    this.gENALARM2_.set(index, value);
                    onChanged();
                    return this;
                }

                public Builder addGENALARM2(ByteString value) {
                    if (value == null)
                        throw new NullPointerException();
                    ensureGENALARM2IsMutable();
                    this.gENALARM2_.add(value);
                    onChanged();
                    return this;
                }

                public Builder addAllGENALARM2(Iterable<? extends ByteString> values) {
                    ensureGENALARM2IsMutable();
                    AbstractMessageLite.Builder.addAll(values, this.gENALARM2_);
                    onChanged();
                    return this;
                }

                public Builder clearGENALARM2() {
                    this.gENALARM2_ = Collections.emptyList();
                    this.bitField0_ &= 0xFDFFFFFF;
                    onChanged();
                    return this;
                }

                public boolean hasGENOILPRESS3() {
                    return ((this.bitField0_ & 0x4000000) != 0);
                }

                public int getGENOILPRESS3() {
                    return this.gENOILPRESS3_;
                }

                public Builder setGENOILPRESS3(int value) {
                    this.bitField0_ |= 0x4000000;
                    this.gENOILPRESS3_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearGENOILPRESS3() {
                    this.bitField0_ &= 0xFBFFFFFF;
                    this.gENOILPRESS3_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasGENTEMP3() {
                    return ((this.bitField0_ & 0x8000000) != 0);
                }

                public int getGENTEMP3() {
                    return this.gENTEMP3_;
                }

                public Builder setGENTEMP3(int value) {
                    this.bitField0_ |= 0x8000000;
                    this.gENTEMP3_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearGENTEMP3() {
                    this.bitField0_ &= 0xF7FFFFFF;
                    this.gENTEMP3_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasGENVOLT3() {
                    return ((this.bitField0_ & 0x10000000) != 0);
                }

                public float getGENVOLT3() {
                    return this.gENVOLT3_;
                }

                public Builder setGENVOLT3(float value) {
                    this.bitField0_ |= 0x10000000;
                    this.gENVOLT3_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearGENVOLT3() {
                    this.bitField0_ &= 0xEFFFFFFF;
                    this.gENVOLT3_ = 0.0F;
                    onChanged();
                    return this;
                }

                public boolean hasGENRPM3() {
                    return ((this.bitField0_ & 0x20000000) != 0);
                }

                public int getGENRPM3() {
                    return this.gENRPM3_;
                }

                public Builder setGENRPM3(int value) {
                    this.bitField0_ |= 0x20000000;
                    this.gENRPM3_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearGENRPM3() {
                    this.bitField0_ &= 0xDFFFFFFF;
                    this.gENRPM3_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasGENUL13() {
                    return ((this.bitField0_ & 0x40000000) != 0);
                }

                public float getGENUL13() {
                    return this.gENUL13_;
                }

                public Builder setGENUL13(float value) {
                    this.bitField0_ |= 0x40000000;
                    this.gENUL13_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearGENUL13() {
                    this.bitField0_ &= 0xBFFFFFFF;
                    this.gENUL13_ = 0.0F;
                    onChanged();
                    return this;
                }

                public boolean hasGENUL23() {
                    return ((this.bitField0_ & Integer.MIN_VALUE) != 0);
                }

                public float getGENUL23() {
                    return this.gENUL23_;
                }

                public Builder setGENUL23(float value) {
                    this.bitField0_ |= Integer.MIN_VALUE;
                    this.gENUL23_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearGENUL23() {
                    this.bitField0_ &= Integer.MAX_VALUE;
                    this.gENUL23_ = 0.0F;
                    onChanged();
                    return this;
                }

                public boolean hasGENUL33() {
                    return ((this.bitField1_ & 0x1) != 0);
                }

                public float getGENUL33() {
                    return this.gENUL33_;
                }

                public Builder setGENUL33(float value) {
                    this.bitField1_ |= 0x1;
                    this.gENUL33_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearGENUL33() {
                    this.bitField1_ &= 0xFFFFFFFE;
                    this.gENUL33_ = 0.0F;
                    onChanged();
                    return this;
                }

                public boolean hasGENIL13() {
                    return ((this.bitField1_ & 0x2) != 0);
                }

                public float getGENIL13() {
                    return this.gENIL13_;
                }

                public Builder setGENIL13(float value) {
                    this.bitField1_ |= 0x2;
                    this.gENIL13_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearGENIL13() {
                    this.bitField1_ &= 0xFFFFFFFD;
                    this.gENIL13_ = 0.0F;
                    onChanged();
                    return this;
                }

                public boolean hasGENIL23() {
                    return ((this.bitField1_ & 0x4) != 0);
                }

                public float getGENIL23() {
                    return this.gENIL23_;
                }

                public Builder setGENIL23(float value) {
                    this.bitField1_ |= 0x4;
                    this.gENIL23_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearGENIL23() {
                    this.bitField1_ &= 0xFFFFFFFB;
                    this.gENIL23_ = 0.0F;
                    onChanged();
                    return this;
                }

                public boolean hasGENIL33() {
                    return ((this.bitField1_ & 0x8) != 0);
                }

                public float getGENIL33() {
                    return this.gENIL33_;
                }

                public Builder setGENIL33(float value) {
                    this.bitField1_ |= 0x8;
                    this.gENIL33_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearGENIL33() {
                    this.bitField1_ &= 0xFFFFFFF7;
                    this.gENIL33_ = 0.0F;
                    onChanged();
                    return this;
                }

                public boolean hasGENSTATUS3() {
                    return ((this.bitField1_ & 0x10) != 0);
                }

                public int getGENSTATUS3() {
                    return this.gENSTATUS3_;
                }

                public Builder setGENSTATUS3(int value) {
                    this.bitField1_ |= 0x10;
                    this.gENSTATUS3_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearGENSTATUS3() {
                    this.bitField1_ &= 0xFFFFFFEF;
                    this.gENSTATUS3_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasGENHOURS3() {
                    return ((this.bitField1_ & 0x20) != 0);
                }

                public int getGENHOURS3() {
                    return this.gENHOURS3_;
                }

                public Builder setGENHOURS3(int value) {
                    this.bitField1_ |= 0x20;
                    this.gENHOURS3_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearGENHOURS3() {
                    this.bitField1_ &= 0xFFFFFFDF;
                    this.gENHOURS3_ = 0;
                    onChanged();
                    return this;
                }

                private void ensureGENALARM3IsMutable() {
                    if ((this.bitField1_ & 0x40) == 0) {
                        this.gENALARM3_ = new ArrayList<>(this.gENALARM3_);
                        this.bitField1_ |= 0x40;
                    }
                }

                public List<ByteString> getGENALARM3List() {
                    return ((this.bitField1_ & 0x40) != 0) ? Collections.<ByteString>unmodifiableList(this.gENALARM3_) : this.gENALARM3_;
                }

                public int getGENALARM3Count() {
                    return this.gENALARM3_.size();
                }

                public ByteString getGENALARM3(int index) {
                    return this.gENALARM3_.get(index);
                }

                public Builder setGENALARM3(int index, ByteString value) {
                    if (value == null)
                        throw new NullPointerException();
                    ensureGENALARM3IsMutable();
                    this.gENALARM3_.set(index, value);
                    onChanged();
                    return this;
                }

                public Builder addGENALARM3(ByteString value) {
                    if (value == null)
                        throw new NullPointerException();
                    ensureGENALARM3IsMutable();
                    this.gENALARM3_.add(value);
                    onChanged();
                    return this;
                }

                public Builder addAllGENALARM3(Iterable<? extends ByteString> values) {
                    ensureGENALARM3IsMutable();
                    AbstractMessageLite.Builder.addAll(values, this.gENALARM3_);
                    onChanged();
                    return this;
                }

                public Builder clearGENALARM3() {
                    this.gENALARM3_ = Collections.emptyList();
                    this.bitField1_ &= 0xFFFFFFBF;
                    onChanged();
                    return this;
                }

                public boolean hasGENUC() {
                    return ((this.bitField1_ & 0x80) != 0);
                }

                public float getGENUC() {
                    return this.gENUC_;
                }

                public Builder setGENUC(float value) {
                    this.bitField1_ |= 0x80;
                    this.gENUC_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearGENUC() {
                    this.bitField1_ &= 0xFFFFFF7F;
                    this.gENUC_ = 0.0F;
                    onChanged();
                    return this;
                }

                public boolean hasGENIC() {
                    return ((this.bitField1_ & 0x100) != 0);
                }

                public int getGENIC() {
                    return this.gENIC_;
                }

                public Builder setGENIC(int value) {
                    this.bitField1_ |= 0x100;
                    this.gENIC_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearGENIC() {
                    this.bitField1_ &= 0xFFFFFEFF;
                    this.gENIC_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasGENFREQ() {
                    return ((this.bitField1_ & 0x200) != 0);
                }

                public float getGENFREQ() {
                    return this.gENFREQ_;
                }

                public Builder setGENFREQ(float value) {
                    this.bitField1_ |= 0x200;
                    this.gENFREQ_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearGENFREQ() {
                    this.bitField1_ &= 0xFFFFFDFF;
                    this.gENFREQ_ = 0.0F;
                    onChanged();
                    return this;
                }

                public boolean hasGENUL1L2() {
                    return ((this.bitField1_ & 0x400) != 0);
                }

                public float getGENUL1L2() {
                    return this.gENUL1L2_;
                }

                public Builder setGENUL1L2(float value) {
                    this.bitField1_ |= 0x400;
                    this.gENUL1L2_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearGENUL1L2() {
                    this.bitField1_ &= 0xFFFFFBFF;
                    this.gENUL1L2_ = 0.0F;
                    onChanged();
                    return this;
                }

                public boolean hasGENUL2L3() {
                    return ((this.bitField1_ & 0x800) != 0);
                }

                public float getGENUL2L3() {
                    return this.gENUL2L3_;
                }

                public Builder setGENUL2L3(float value) {
                    this.bitField1_ |= 0x800;
                    this.gENUL2L3_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearGENUL2L3() {
                    this.bitField1_ &= 0xFFFFF7FF;
                    this.gENUL2L3_ = 0.0F;
                    onChanged();
                    return this;
                }

                public boolean hasGENUL1L3() {
                    return ((this.bitField1_ & 0x1000) != 0);
                }

                public float getGENUL1L3() {
                    return this.gENUL1L3_;
                }

                public Builder setGENUL1L3(float value) {
                    this.bitField1_ |= 0x1000;
                    this.gENUL1L3_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearGENUL1L3() {
                    this.bitField1_ &= 0xFFFFEFFF;
                    this.gENUL1L3_ = 0.0F;
                    onChanged();
                    return this;
                }

                public boolean hasPOWACTL1() {
                    return ((this.bitField1_ & 0x2000) != 0);
                }

                public int getPOWACTL1() {
                    return this.pOWACTL1_;
                }

                public Builder setPOWACTL1(int value) {
                    this.bitField1_ |= 0x2000;
                    this.pOWACTL1_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearPOWACTL1() {
                    this.bitField1_ &= 0xFFFFDFFF;
                    this.pOWACTL1_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasPOWACTL2() {
                    return ((this.bitField1_ & 0x4000) != 0);
                }

                public int getPOWACTL2() {
                    return this.pOWACTL2_;
                }

                public Builder setPOWACTL2(int value) {
                    this.bitField1_ |= 0x4000;
                    this.pOWACTL2_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearPOWACTL2() {
                    this.bitField1_ &= 0xFFFFBFFF;
                    this.pOWACTL2_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasPOWACTL3() {
                    return ((this.bitField1_ & 0x8000) != 0);
                }

                public int getPOWACTL3() {
                    return this.pOWACTL3_;
                }

                public Builder setPOWACTL3(int value) {
                    this.bitField1_ |= 0x8000;
                    this.pOWACTL3_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearPOWACTL3() {
                    this.bitField1_ &= 0xFFFF7FFF;
                    this.pOWACTL3_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasPOWFULLL1() {
                    return ((this.bitField1_ & 0x10000) != 0);
                }

                public int getPOWFULLL1() {
                    return this.pOWFULLL1_;
                }

                public Builder setPOWFULLL1(int value) {
                    this.bitField1_ |= 0x10000;
                    this.pOWFULLL1_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearPOWFULLL1() {
                    this.bitField1_ &= 0xFFFEFFFF;
                    this.pOWFULLL1_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasPOWFULLL2() {
                    return ((this.bitField1_ & 0x20000) != 0);
                }

                public int getPOWFULLL2() {
                    return this.pOWFULLL2_;
                }

                public Builder setPOWFULLL2(int value) {
                    this.bitField1_ |= 0x20000;
                    this.pOWFULLL2_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearPOWFULLL2() {
                    this.bitField1_ &= 0xFFFDFFFF;
                    this.pOWFULLL2_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasPOWFULLL3() {
                    return ((this.bitField1_ & 0x40000) != 0);
                }

                public int getPOWFULLL3() {
                    return this.pOWFULLL3_;
                }

                public Builder setPOWFULLL3(int value) {
                    this.bitField1_ |= 0x40000;
                    this.pOWFULLL3_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearPOWFULLL3() {
                    this.bitField1_ &= 0xFFFBFFFF;
                    this.pOWFULLL3_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasPOWREACTL1() {
                    return ((this.bitField1_ & 0x80000) != 0);
                }

                public int getPOWREACTL1() {
                    return this.pOWREACTL1_;
                }

                public Builder setPOWREACTL1(int value) {
                    this.bitField1_ |= 0x80000;
                    this.pOWREACTL1_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearPOWREACTL1() {
                    this.bitField1_ &= 0xFFF7FFFF;
                    this.pOWREACTL1_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasPOWREACTL2() {
                    return ((this.bitField1_ & 0x100000) != 0);
                }

                public int getPOWREACTL2() {
                    return this.pOWREACTL2_;
                }

                public Builder setPOWREACTL2(int value) {
                    this.bitField1_ |= 0x100000;
                    this.pOWREACTL2_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearPOWREACTL2() {
                    this.bitField1_ &= 0xFFEFFFFF;
                    this.pOWREACTL2_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasPOWREACTL3() {
                    return ((this.bitField1_ & 0x200000) != 0);
                }

                public int getPOWREACTL3() {
                    return this.pOWREACTL3_;
                }

                public Builder setPOWREACTL3(int value) {
                    this.bitField1_ |= 0x200000;
                    this.pOWREACTL3_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearPOWREACTL3() {
                    this.bitField1_ &= 0xFFDFFFFF;
                    this.pOWREACTL3_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasPOWKOEF() {
                    return ((this.bitField1_ & 0x400000) != 0);
                }

                public float getPOWKOEF() {
                    return this.pOWKOEF_;
                }

                public Builder setPOWKOEF(float value) {
                    this.bitField1_ |= 0x400000;
                    this.pOWKOEF_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearPOWKOEF() {
                    this.bitField1_ &= 0xFFBFFFFF;
                    this.pOWKOEF_ = 0.0F;
                    onChanged();
                    return this;
                }

                public boolean hasPOWGENTOTAL() {
                    return ((this.bitField1_ & 0x800000) != 0);
                }

                public int getPOWGENTOTAL() {
                    return this.pOWGENTOTAL_;
                }

                public Builder setPOWGENTOTAL(int value) {
                    this.bitField1_ |= 0x800000;
                    this.pOWGENTOTAL_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearPOWGENTOTAL() {
                    this.bitField1_ &= 0xFF7FFFFF;
                    this.pOWGENTOTAL_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasFUELLEVEL() {
                    return ((this.bitField1_ & 0x1000000) != 0);
                }

                public int getFUELLEVEL() {
                    return this.fUELLEVEL_;
                }

                public Builder setFUELLEVEL(int value) {
                    this.bitField1_ |= 0x1000000;
                    this.fUELLEVEL_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearFUELLEVEL() {
                    this.bitField1_ &= 0xFEFFFFFF;
                    this.fUELLEVEL_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasSMSREGS0() {
                    return ((this.bitField1_ & 0x2000000) != 0);
                }

                public int getSMSREGS0() {
                    return this.sMSREGS0_;
                }

                public Builder setSMSREGS0(int value) {
                    this.bitField1_ |= 0x2000000;
                    this.sMSREGS0_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearSMSREGS0() {
                    this.bitField1_ &= 0xFDFFFFFF;
                    this.sMSREGS0_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasSMSREGS1() {
                    return ((this.bitField1_ & 0x4000000) != 0);
                }

                public int getSMSREGS1() {
                    return this.sMSREGS1_;
                }

                public Builder setSMSREGS1(int value) {
                    this.bitField1_ |= 0x4000000;
                    this.sMSREGS1_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearSMSREGS1() {
                    this.bitField1_ &= 0xFBFFFFFF;
                    this.sMSREGS1_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasSMSREGS2() {
                    return ((this.bitField1_ & 0x8000000) != 0);
                }

                public int getSMSREGS2() {
                    return this.sMSREGS2_;
                }

                public Builder setSMSREGS2(int value) {
                    this.bitField1_ |= 0x8000000;
                    this.sMSREGS2_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearSMSREGS2() {
                    this.bitField1_ &= 0xF7FFFFFF;
                    this.sMSREGS2_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasSMSREGS3() {
                    return ((this.bitField1_ & 0x10000000) != 0);
                }

                public int getSMSREGS3() {
                    return this.sMSREGS3_;
                }

                public Builder setSMSREGS3(int value) {
                    this.bitField1_ |= 0x10000000;
                    this.sMSREGS3_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearSMSREGS3() {
                    this.bitField1_ &= 0xEFFFFFFF;
                    this.sMSREGS3_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasSMSREGS4() {
                    return ((this.bitField1_ & 0x20000000) != 0);
                }

                public int getSMSREGS4() {
                    return this.sMSREGS4_;
                }

                public Builder setSMSREGS4(int value) {
                    this.bitField1_ |= 0x20000000;
                    this.sMSREGS4_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearSMSREGS4() {
                    this.bitField1_ &= 0xDFFFFFFF;
                    this.sMSREGS4_ = 0;
                    onChanged();
                    return this;
                }

                public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
                    return (Builder) super.setUnknownFields(unknownFields);
                }

                public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
                    return (Builder) super.mergeUnknownFields(unknownFields);
                }
            }

            public static final class FuelSensorModbus extends GeneratedMessageV3 implements FuelSensorModbusOrBuilder {
                private static final long serialVersionUID = 0L;

                private int bitField0_;

                public static final int FUELLEVEL_FIELD_NUMBER = 1;

                private float fuelLevel_;

                public static final int MEDIANLEVEL_FIELD_NUMBER = 2;

                private float medianLevel_;

                public static final int LEVELPERCENT_FIELD_NUMBER = 3;

                private int levelPercent_;

                public static final int FUELVOLUME_FIELD_NUMBER = 4;

                private float fuelVolume_;

                public static final int FUELTEMP_FIELD_NUMBER = 5;

                private int fuelTemp_;

                public static final int FUELWEIGHT_FIELD_NUMBER = 6;

                private float fuelWeight_;

                public static final int FUELDENSITY_FIELD_NUMBER = 7;

                private float fuelDensity_;

                public static final int VAPORTEMP_FIELD_NUMBER = 8;

                private int vaporTemp_;

                public static final int VAPORWEIGHT_FIELD_NUMBER = 9;

                private float vaporWeight_;

                public static final int LIQUIDWEIGHT_FIELD_NUMBER = 10;

                private float liquidWeight_;

                public static final int POINTTEMP_FIELD_NUMBER = 11;

                private Internal.IntList pointTemp_;

                private byte memoizedIsInitialized;

                private FuelSensorModbus(GeneratedMessageV3.Builder<?> builder) {
                    super(builder);
                    this.memoizedIsInitialized = -1;
                }

                private FuelSensorModbus() {
                    this.memoizedIsInitialized = -1;
                    this.pointTemp_ = emptyIntList();
                }

                protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) {
                    return new FuelSensorModbus();
                }

                public final UnknownFieldSet getUnknownFields() {
                    return this.unknownFields;
                }

                private FuelSensorModbus(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                    this();
                    if (extensionRegistry == null)
                        throw new NullPointerException();
                    int mutable_bitField0_ = 0;
                    UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
                    try {
                        boolean done = false;
                        while (!done) {
                            int length, limit, tag = input.readTag();
                            switch (tag) {
                                case 0:
                                    done = true;
                                    continue;
                                case 13:
                                    this.bitField0_ |= 0x1;
                                    this.fuelLevel_ = input.readFloat();
                                    continue;
                                case 21:
                                    this.bitField0_ |= 0x2;
                                    this.medianLevel_ = input.readFloat();
                                    continue;
                                case 24:
                                    this.bitField0_ |= 0x4;
                                    this.levelPercent_ = input.readUInt32();
                                    continue;
                                case 37:
                                    this.bitField0_ |= 0x8;
                                    this.fuelVolume_ = input.readFloat();
                                    continue;
                                case 40:
                                    this.bitField0_ |= 0x10;
                                    this.fuelTemp_ = input.readSInt32();
                                    continue;
                                case 53:
                                    this.bitField0_ |= 0x20;
                                    this.fuelWeight_ = input.readFloat();
                                    continue;
                                case 61:
                                    this.bitField0_ |= 0x40;
                                    this.fuelDensity_ = input.readFloat();
                                    continue;
                                case 64:
                                    this.bitField0_ |= 0x80;
                                    this.vaporTemp_ = input.readSInt32();
                                    continue;
                                case 77:
                                    this.bitField0_ |= 0x100;
                                    this.vaporWeight_ = input.readFloat();
                                    continue;
                                case 85:
                                    this.bitField0_ |= 0x200;
                                    this.liquidWeight_ = input.readFloat();
                                    continue;
                                case 88:
                                    if ((mutable_bitField0_ & 0x400) == 0) {
                                        this.pointTemp_ = newIntList();
                                        mutable_bitField0_ |= 0x400;
                                    }
                                    this.pointTemp_.addInt(input.readSInt32());
                                    continue;
                                case 90:
                                    length = input.readRawVarint32();
                                    limit = input.pushLimit(length);
                                    if ((mutable_bitField0_ & 0x400) == 0 && input.getBytesUntilLimit() > 0) {
                                        this.pointTemp_ = newIntList();
                                        mutable_bitField0_ |= 0x400;
                                    }
                                    while (input.getBytesUntilLimit() > 0)
                                        this.pointTemp_.addInt(input.readSInt32());
                                    input.popLimit(limit);
                                    continue;
                            }
                            if (!parseUnknownField(input, unknownFields, extensionRegistry, tag))
                                done = true;
                        }
                    } catch (InvalidProtocolBufferException e) {
                        throw e.setUnfinishedMessage(this);
                    } catch (IOException e) {
                        throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this);
                    } finally {
                        if ((mutable_bitField0_ & 0x400) != 0)
                            this.pointTemp_.makeImmutable();
                        this.unknownFields = unknownFields.build();
                        makeExtensionsImmutable();
                    }
                }

                public static final Descriptors.Descriptor getDescriptor() {
                    return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_FuelSensorModbus_descriptor;
                }

                protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
                    return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_FuelSensorModbus_fieldAccessorTable.ensureFieldAccessorsInitialized(FuelSensorModbus.class, Builder.class);
                }

                public boolean hasFuelLevel() {
                    return ((this.bitField0_ & 0x1) != 0);
                }

                public float getFuelLevel() {
                    return this.fuelLevel_;
                }

                public boolean hasMedianLevel() {
                    return ((this.bitField0_ & 0x2) != 0);
                }

                public float getMedianLevel() {
                    return this.medianLevel_;
                }

                public boolean hasLevelPercent() {
                    return ((this.bitField0_ & 0x4) != 0);
                }

                public int getLevelPercent() {
                    return this.levelPercent_;
                }

                public boolean hasFuelVolume() {
                    return ((this.bitField0_ & 0x8) != 0);
                }

                public float getFuelVolume() {
                    return this.fuelVolume_;
                }

                public boolean hasFuelTemp() {
                    return ((this.bitField0_ & 0x10) != 0);
                }

                public int getFuelTemp() {
                    return this.fuelTemp_;
                }

                public boolean hasFuelWeight() {
                    return ((this.bitField0_ & 0x20) != 0);
                }

                public float getFuelWeight() {
                    return this.fuelWeight_;
                }

                public boolean hasFuelDensity() {
                    return ((this.bitField0_ & 0x40) != 0);
                }

                public float getFuelDensity() {
                    return this.fuelDensity_;
                }

                public boolean hasVaporTemp() {
                    return ((this.bitField0_ & 0x80) != 0);
                }

                public int getVaporTemp() {
                    return this.vaporTemp_;
                }

                public boolean hasVaporWeight() {
                    return ((this.bitField0_ & 0x100) != 0);
                }

                public float getVaporWeight() {
                    return this.vaporWeight_;
                }

                public boolean hasLiquidWeight() {
                    return ((this.bitField0_ & 0x200) != 0);
                }

                public float getLiquidWeight() {
                    return this.liquidWeight_;
                }

                public List<Integer> getPointTempList() {
                    return (List<Integer>) this.pointTemp_;
                }

                public int getPointTempCount() {
                    return this.pointTemp_.size();
                }

                public int getPointTemp(int index) {
                    return this.pointTemp_.getInt(index);
                }

                public final boolean isInitialized() {
                    byte isInitialized = this.memoizedIsInitialized;
                    if (isInitialized == 1)
                        return true;
                    if (isInitialized == 0)
                        return false;
                    this.memoizedIsInitialized = 1;
                    return true;
                }

                public void writeTo(CodedOutputStream output) throws IOException {
                    if ((this.bitField0_ & 0x1) != 0)
                        output.writeFloat(1, this.fuelLevel_);
                    if ((this.bitField0_ & 0x2) != 0)
                        output.writeFloat(2, this.medianLevel_);
                    if ((this.bitField0_ & 0x4) != 0)
                        output.writeUInt32(3, this.levelPercent_);
                    if ((this.bitField0_ & 0x8) != 0)
                        output.writeFloat(4, this.fuelVolume_);
                    if ((this.bitField0_ & 0x10) != 0)
                        output.writeSInt32(5, this.fuelTemp_);
                    if ((this.bitField0_ & 0x20) != 0)
                        output.writeFloat(6, this.fuelWeight_);
                    if ((this.bitField0_ & 0x40) != 0)
                        output.writeFloat(7, this.fuelDensity_);
                    if ((this.bitField0_ & 0x80) != 0)
                        output.writeSInt32(8, this.vaporTemp_);
                    if ((this.bitField0_ & 0x100) != 0)
                        output.writeFloat(9, this.vaporWeight_);
                    if ((this.bitField0_ & 0x200) != 0)
                        output.writeFloat(10, this.liquidWeight_);
                    for (int i = 0; i < this.pointTemp_.size(); i++)
                        output.writeSInt32(11, this.pointTemp_.getInt(i));
                    this.unknownFields.writeTo(output);
                }

                public int getSerializedSize() {
                    int size = this.memoizedSize;
                    if (size != -1)
                        return size;
                    size = 0;
                    if ((this.bitField0_ & 0x1) != 0)
                        size += CodedOutputStream.computeFloatSize(1, this.fuelLevel_);
                    if ((this.bitField0_ & 0x2) != 0)
                        size += CodedOutputStream.computeFloatSize(2, this.medianLevel_);
                    if ((this.bitField0_ & 0x4) != 0)
                        size += CodedOutputStream.computeUInt32Size(3, this.levelPercent_);
                    if ((this.bitField0_ & 0x8) != 0)
                        size += CodedOutputStream.computeFloatSize(4, this.fuelVolume_);
                    if ((this.bitField0_ & 0x10) != 0)
                        size += CodedOutputStream.computeSInt32Size(5, this.fuelTemp_);
                    if ((this.bitField0_ & 0x20) != 0)
                        size += CodedOutputStream.computeFloatSize(6, this.fuelWeight_);
                    if ((this.bitField0_ & 0x40) != 0)
                        size += CodedOutputStream.computeFloatSize(7, this.fuelDensity_);
                    if ((this.bitField0_ & 0x80) != 0)
                        size += CodedOutputStream.computeSInt32Size(8, this.vaporTemp_);
                    if ((this.bitField0_ & 0x100) != 0)
                        size += CodedOutputStream.computeFloatSize(9, this.vaporWeight_);
                    if ((this.bitField0_ & 0x200) != 0)
                        size += CodedOutputStream.computeFloatSize(10, this.liquidWeight_);
                    int dataSize = 0;
                    for (int i = 0; i < this.pointTemp_.size(); i++)
                        dataSize += CodedOutputStream.computeSInt32SizeNoTag(this.pointTemp_.getInt(i));
                    size += dataSize;
                    size += 1 * getPointTempList().size();
                    size += this.unknownFields.getSerializedSize();
                    this.memoizedSize = size;
                    return size;
                }

                public boolean equals(Object obj) {
                    if (obj == this)
                        return true;
                    if (!(obj instanceof FuelSensorModbus))
                        return super.equals(obj);
                    FuelSensorModbus other = (FuelSensorModbus) obj;
                    if (hasFuelLevel() != other.hasFuelLevel())
                        return false;
                    if (hasFuelLevel() && Float.floatToIntBits(getFuelLevel()) != Float.floatToIntBits(other.getFuelLevel()))
                        return false;
                    if (hasMedianLevel() != other.hasMedianLevel())
                        return false;
                    if (hasMedianLevel() && Float.floatToIntBits(getMedianLevel()) != Float.floatToIntBits(other.getMedianLevel()))
                        return false;
                    if (hasLevelPercent() != other.hasLevelPercent())
                        return false;
                    if (hasLevelPercent() && getLevelPercent() != other.getLevelPercent())
                        return false;
                    if (hasFuelVolume() != other.hasFuelVolume())
                        return false;
                    if (hasFuelVolume() && Float.floatToIntBits(getFuelVolume()) != Float.floatToIntBits(other.getFuelVolume()))
                        return false;
                    if (hasFuelTemp() != other.hasFuelTemp())
                        return false;
                    if (hasFuelTemp() && getFuelTemp() != other.getFuelTemp())
                        return false;
                    if (hasFuelWeight() != other.hasFuelWeight())
                        return false;
                    if (hasFuelWeight() && Float.floatToIntBits(getFuelWeight()) != Float.floatToIntBits(other.getFuelWeight()))
                        return false;
                    if (hasFuelDensity() != other.hasFuelDensity())
                        return false;
                    if (hasFuelDensity() && Float.floatToIntBits(getFuelDensity()) != Float.floatToIntBits(other.getFuelDensity()))
                        return false;
                    if (hasVaporTemp() != other.hasVaporTemp())
                        return false;
                    if (hasVaporTemp() && getVaporTemp() != other.getVaporTemp())
                        return false;
                    if (hasVaporWeight() != other.hasVaporWeight())
                        return false;
                    if (hasVaporWeight() && Float.floatToIntBits(getVaporWeight()) != Float.floatToIntBits(other.getVaporWeight()))
                        return false;
                    if (hasLiquidWeight() != other.hasLiquidWeight())
                        return false;
                    if (hasLiquidWeight() && Float.floatToIntBits(getLiquidWeight()) != Float.floatToIntBits(other.getLiquidWeight()))
                        return false;
                    if (!getPointTempList().equals(other.getPointTempList()))
                        return false;
                    if (!this.unknownFields.equals(other.unknownFields))
                        return false;
                    return true;
                }

                public int hashCode() {
                    if (this.memoizedHashCode != 0)
                        return this.memoizedHashCode;
                    int hash = 41;
                    hash = 19 * hash + getDescriptor().hashCode();
                    if (hasFuelLevel()) {
                        hash = 37 * hash + 1;
                        hash = 53 * hash + Float.floatToIntBits(getFuelLevel());
                    }
                    if (hasMedianLevel()) {
                        hash = 37 * hash + 2;
                        hash = 53 * hash + Float.floatToIntBits(getMedianLevel());
                    }
                    if (hasLevelPercent()) {
                        hash = 37 * hash + 3;
                        hash = 53 * hash + getLevelPercent();
                    }
                    if (hasFuelVolume()) {
                        hash = 37 * hash + 4;
                        hash = 53 * hash + Float.floatToIntBits(getFuelVolume());
                    }
                    if (hasFuelTemp()) {
                        hash = 37 * hash + 5;
                        hash = 53 * hash + getFuelTemp();
                    }
                    if (hasFuelWeight()) {
                        hash = 37 * hash + 6;
                        hash = 53 * hash + Float.floatToIntBits(getFuelWeight());
                    }
                    if (hasFuelDensity()) {
                        hash = 37 * hash + 7;
                        hash = 53 * hash + Float.floatToIntBits(getFuelDensity());
                    }
                    if (hasVaporTemp()) {
                        hash = 37 * hash + 8;
                        hash = 53 * hash + getVaporTemp();
                    }
                    if (hasVaporWeight()) {
                        hash = 37 * hash + 9;
                        hash = 53 * hash + Float.floatToIntBits(getVaporWeight());
                    }
                    if (hasLiquidWeight()) {
                        hash = 37 * hash + 10;
                        hash = 53 * hash + Float.floatToIntBits(getLiquidWeight());
                    }
                    if (getPointTempCount() > 0) {
                        hash = 37 * hash + 11;
                        hash = 53 * hash + getPointTempList().hashCode();
                    }
                    hash = 29 * hash + this.unknownFields.hashCode();
                    this.memoizedHashCode = hash;
                    return hash;
                }

                public static FuelSensorModbus parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
                    return (FuelSensorModbus) PARSER.parseFrom(data);
                }

                public static FuelSensorModbus parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                    return (FuelSensorModbus) PARSER.parseFrom(data, extensionRegistry);
                }

                public static FuelSensorModbus parseFrom(ByteString data) throws InvalidProtocolBufferException {
                    return (FuelSensorModbus) PARSER.parseFrom(data);
                }

                public static FuelSensorModbus parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                    return (FuelSensorModbus) PARSER.parseFrom(data, extensionRegistry);
                }

                public static FuelSensorModbus parseFrom(byte[] data) throws InvalidProtocolBufferException {
                    return (FuelSensorModbus) PARSER.parseFrom(data);
                }

                public static FuelSensorModbus parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                    return (FuelSensorModbus) PARSER.parseFrom(data, extensionRegistry);
                }

                public static FuelSensorModbus parseFrom(InputStream input) throws IOException {
                    return (FuelSensorModbus) GeneratedMessageV3.parseWithIOException(PARSER, input);
                }

                public static FuelSensorModbus parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                    return (FuelSensorModbus) GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
                }

                public static FuelSensorModbus parseDelimitedFrom(InputStream input) throws IOException {
                    return (FuelSensorModbus) GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
                }

                public static FuelSensorModbus parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                    return (FuelSensorModbus) GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
                }

                public static FuelSensorModbus parseFrom(CodedInputStream input) throws IOException {
                    return (FuelSensorModbus) GeneratedMessageV3.parseWithIOException(PARSER, input);
                }

                public static FuelSensorModbus parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                    return (FuelSensorModbus) GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
                }

                public Builder newBuilderForType() {
                    return newBuilder();
                }

                public static Builder newBuilder() {
                    return DEFAULT_INSTANCE.toBuilder();
                }

                public static Builder newBuilder(FuelSensorModbus prototype) {
                    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
                }

                public Builder toBuilder() {
                    return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder()).mergeFrom(this);
                }

                protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
                    Builder builder = new Builder(parent);
                    return builder;
                }

                public static final class Builder extends GeneratedMessageV3.Builder<Builder> implements OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbusOrBuilder {
                    private int bitField0_;

                    private float fuelLevel_;

                    private float medianLevel_;

                    private int levelPercent_;

                    private float fuelVolume_;

                    private int fuelTemp_;

                    private float fuelWeight_;

                    private float fuelDensity_;

                    private int vaporTemp_;

                    private float vaporWeight_;

                    private float liquidWeight_;

                    private Internal.IntList pointTemp_;

                    public static final Descriptors.Descriptor getDescriptor() {
                        return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_FuelSensorModbus_descriptor;
                    }

                    protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
                        return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_FuelSensorModbus_fieldAccessorTable.ensureFieldAccessorsInitialized(OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus.class, Builder.class);
                    }

                    private Builder() {
                        this.pointTemp_ = OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus.emptyIntList();
                        maybeForceBuilderInitialization();
                    }

                    private Builder(GeneratedMessageV3.BuilderParent parent) {
                        super(parent);
                        this.pointTemp_ = OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus.emptyIntList();
                        maybeForceBuilderInitialization();
                    }

                    private void maybeForceBuilderInitialization() {
                        if (OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus.alwaysUseFieldBuilders) ;
                    }

                    public Builder clear() {
                        super.clear();
                        this.fuelLevel_ = 0.0F;
                        this.bitField0_ &= 0xFFFFFFFE;
                        this.medianLevel_ = 0.0F;
                        this.bitField0_ &= 0xFFFFFFFD;
                        this.levelPercent_ = 0;
                        this.bitField0_ &= 0xFFFFFFFB;
                        this.fuelVolume_ = 0.0F;
                        this.bitField0_ &= 0xFFFFFFF7;
                        this.fuelTemp_ = 0;
                        this.bitField0_ &= 0xFFFFFFEF;
                        this.fuelWeight_ = 0.0F;
                        this.bitField0_ &= 0xFFFFFFDF;
                        this.fuelDensity_ = 0.0F;
                        this.bitField0_ &= 0xFFFFFFBF;
                        this.vaporTemp_ = 0;
                        this.bitField0_ &= 0xFFFFFF7F;
                        this.vaporWeight_ = 0.0F;
                        this.bitField0_ &= 0xFFFFFEFF;
                        this.liquidWeight_ = 0.0F;
                        this.bitField0_ &= 0xFFFFFDFF;
                        this.pointTemp_ = OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus.emptyIntList();
                        this.bitField0_ &= 0xFFFFFBFF;
                        return this;
                    }

                    public Descriptors.Descriptor getDescriptorForType() {
                        return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_FuelSensorModbus_descriptor;
                    }

                    public OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus getDefaultInstanceForType() {
                        return OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus.getDefaultInstance();
                    }

                    public OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus build() {
                        OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus result = buildPartial();
                        if (!result.isInitialized())
                            throw newUninitializedMessageException(result);
                        return result;
                    }

                    public OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus buildPartial() {
                        OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus result = new OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus(this);
                        int from_bitField0_ = this.bitField0_;
                        int to_bitField0_ = 0;
                        if ((from_bitField0_ & 0x1) != 0) {
                            result.fuelLevel_ = this.fuelLevel_;
                            to_bitField0_ |= 0x1;
                        }
                        if ((from_bitField0_ & 0x2) != 0) {
                            result.medianLevel_ = this.medianLevel_;
                            to_bitField0_ |= 0x2;
                        }
                        if ((from_bitField0_ & 0x4) != 0) {
                            result.levelPercent_ = this.levelPercent_;
                            to_bitField0_ |= 0x4;
                        }
                        if ((from_bitField0_ & 0x8) != 0) {
                            result.fuelVolume_ = this.fuelVolume_;
                            to_bitField0_ |= 0x8;
                        }
                        if ((from_bitField0_ & 0x10) != 0) {
                            result.fuelTemp_ = this.fuelTemp_;
                            to_bitField0_ |= 0x10;
                        }
                        if ((from_bitField0_ & 0x20) != 0) {
                            result.fuelWeight_ = this.fuelWeight_;
                            to_bitField0_ |= 0x20;
                        }
                        if ((from_bitField0_ & 0x40) != 0) {
                            result.fuelDensity_ = this.fuelDensity_;
                            to_bitField0_ |= 0x40;
                        }
                        if ((from_bitField0_ & 0x80) != 0) {
                            result.vaporTemp_ = this.vaporTemp_;
                            to_bitField0_ |= 0x80;
                        }
                        if ((from_bitField0_ & 0x100) != 0) {
                            result.vaporWeight_ = this.vaporWeight_;
                            to_bitField0_ |= 0x100;
                        }
                        if ((from_bitField0_ & 0x200) != 0) {
                            result.liquidWeight_ = this.liquidWeight_;
                            to_bitField0_ |= 0x200;
                        }
                        if ((this.bitField0_ & 0x400) != 0) {
                            this.pointTemp_.makeImmutable();
                            this.bitField0_ &= 0xFFFFFBFF;
                        }
                        result.pointTemp_ = this.pointTemp_;
                        result.bitField0_ = to_bitField0_;
                        onBuilt();
                        return result;
                    }

                    public Builder clone() {
                        return (Builder) super.clone();
                    }

                    public Builder setField(Descriptors.FieldDescriptor field, Object value) {
                        return (Builder) super.setField(field, value);
                    }

                    public Builder clearField(Descriptors.FieldDescriptor field) {
                        return (Builder) super.clearField(field);
                    }

                    public Builder clearOneof(Descriptors.OneofDescriptor oneof) {
                        return (Builder) super.clearOneof(oneof);
                    }

                    public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
                        return (Builder) super.setRepeatedField(field, index, value);
                    }

                    public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
                        return (Builder) super.addRepeatedField(field, value);
                    }

                    public Builder mergeFrom(Message other) {
                        if (other instanceof OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus)
                            return mergeFrom((OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus) other);
                        super.mergeFrom(other);
                        return this;
                    }

                    public Builder mergeFrom(OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus other) {
                        if (other == OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus.getDefaultInstance())
                            return this;
                        if (other.hasFuelLevel())
                            setFuelLevel(other.getFuelLevel());
                        if (other.hasMedianLevel())
                            setMedianLevel(other.getMedianLevel());
                        if (other.hasLevelPercent())
                            setLevelPercent(other.getLevelPercent());
                        if (other.hasFuelVolume())
                            setFuelVolume(other.getFuelVolume());
                        if (other.hasFuelTemp())
                            setFuelTemp(other.getFuelTemp());
                        if (other.hasFuelWeight())
                            setFuelWeight(other.getFuelWeight());
                        if (other.hasFuelDensity())
                            setFuelDensity(other.getFuelDensity());
                        if (other.hasVaporTemp())
                            setVaporTemp(other.getVaporTemp());
                        if (other.hasVaporWeight())
                            setVaporWeight(other.getVaporWeight());
                        if (other.hasLiquidWeight())
                            setLiquidWeight(other.getLiquidWeight());
                        if (!other.pointTemp_.isEmpty()) {
                            if (this.pointTemp_.isEmpty()) {
                                this.pointTemp_ = other.pointTemp_;
                                this.bitField0_ &= 0xFFFFFBFF;
                            } else {
                                ensurePointTempIsMutable();
                                this.pointTemp_.addAll((Collection) other.pointTemp_);
                            }
                            onChanged();
                        }
                        mergeUnknownFields(other.unknownFields);
                        onChanged();
                        return this;
                    }

                    public final boolean isInitialized() {
                        return true;
                    }

                    public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                        OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus parsedMessage = null;
                        try {
                            parsedMessage = (OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus) OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus.PARSER.parsePartialFrom(input, extensionRegistry);
                        } catch (InvalidProtocolBufferException e) {
                            parsedMessage = (OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus) e.getUnfinishedMessage();
                            throw e.unwrapIOException();
                        } finally {
                            if (parsedMessage != null)
                                mergeFrom(parsedMessage);
                        }
                        return this;
                    }

                    public boolean hasFuelLevel() {
                        return ((this.bitField0_ & 0x1) != 0);
                    }

                    public float getFuelLevel() {
                        return this.fuelLevel_;
                    }

                    public Builder setFuelLevel(float value) {
                        this.bitField0_ |= 0x1;
                        this.fuelLevel_ = value;
                        onChanged();
                        return this;
                    }

                    public Builder clearFuelLevel() {
                        this.bitField0_ &= 0xFFFFFFFE;
                        this.fuelLevel_ = 0.0F;
                        onChanged();
                        return this;
                    }

                    public boolean hasMedianLevel() {
                        return ((this.bitField0_ & 0x2) != 0);
                    }

                    public float getMedianLevel() {
                        return this.medianLevel_;
                    }

                    public Builder setMedianLevel(float value) {
                        this.bitField0_ |= 0x2;
                        this.medianLevel_ = value;
                        onChanged();
                        return this;
                    }

                    public Builder clearMedianLevel() {
                        this.bitField0_ &= 0xFFFFFFFD;
                        this.medianLevel_ = 0.0F;
                        onChanged();
                        return this;
                    }

                    public boolean hasLevelPercent() {
                        return ((this.bitField0_ & 0x4) != 0);
                    }

                    public int getLevelPercent() {
                        return this.levelPercent_;
                    }

                    public Builder setLevelPercent(int value) {
                        this.bitField0_ |= 0x4;
                        this.levelPercent_ = value;
                        onChanged();
                        return this;
                    }

                    public Builder clearLevelPercent() {
                        this.bitField0_ &= 0xFFFFFFFB;
                        this.levelPercent_ = 0;
                        onChanged();
                        return this;
                    }

                    public boolean hasFuelVolume() {
                        return ((this.bitField0_ & 0x8) != 0);
                    }

                    public float getFuelVolume() {
                        return this.fuelVolume_;
                    }

                    public Builder setFuelVolume(float value) {
                        this.bitField0_ |= 0x8;
                        this.fuelVolume_ = value;
                        onChanged();
                        return this;
                    }

                    public Builder clearFuelVolume() {
                        this.bitField0_ &= 0xFFFFFFF7;
                        this.fuelVolume_ = 0.0F;
                        onChanged();
                        return this;
                    }

                    public boolean hasFuelTemp() {
                        return ((this.bitField0_ & 0x10) != 0);
                    }

                    public int getFuelTemp() {
                        return this.fuelTemp_;
                    }

                    public Builder setFuelTemp(int value) {
                        this.bitField0_ |= 0x10;
                        this.fuelTemp_ = value;
                        onChanged();
                        return this;
                    }

                    public Builder clearFuelTemp() {
                        this.bitField0_ &= 0xFFFFFFEF;
                        this.fuelTemp_ = 0;
                        onChanged();
                        return this;
                    }

                    public boolean hasFuelWeight() {
                        return ((this.bitField0_ & 0x20) != 0);
                    }

                    public float getFuelWeight() {
                        return this.fuelWeight_;
                    }

                    public Builder setFuelWeight(float value) {
                        this.bitField0_ |= 0x20;
                        this.fuelWeight_ = value;
                        onChanged();
                        return this;
                    }

                    public Builder clearFuelWeight() {
                        this.bitField0_ &= 0xFFFFFFDF;
                        this.fuelWeight_ = 0.0F;
                        onChanged();
                        return this;
                    }

                    public boolean hasFuelDensity() {
                        return ((this.bitField0_ & 0x40) != 0);
                    }

                    public float getFuelDensity() {
                        return this.fuelDensity_;
                    }

                    public Builder setFuelDensity(float value) {
                        this.bitField0_ |= 0x40;
                        this.fuelDensity_ = value;
                        onChanged();
                        return this;
                    }

                    public Builder clearFuelDensity() {
                        this.bitField0_ &= 0xFFFFFFBF;
                        this.fuelDensity_ = 0.0F;
                        onChanged();
                        return this;
                    }

                    public boolean hasVaporTemp() {
                        return ((this.bitField0_ & 0x80) != 0);
                    }

                    public int getVaporTemp() {
                        return this.vaporTemp_;
                    }

                    public Builder setVaporTemp(int value) {
                        this.bitField0_ |= 0x80;
                        this.vaporTemp_ = value;
                        onChanged();
                        return this;
                    }

                    public Builder clearVaporTemp() {
                        this.bitField0_ &= 0xFFFFFF7F;
                        this.vaporTemp_ = 0;
                        onChanged();
                        return this;
                    }

                    public boolean hasVaporWeight() {
                        return ((this.bitField0_ & 0x100) != 0);
                    }

                    public float getVaporWeight() {
                        return this.vaporWeight_;
                    }

                    public Builder setVaporWeight(float value) {
                        this.bitField0_ |= 0x100;
                        this.vaporWeight_ = value;
                        onChanged();
                        return this;
                    }

                    public Builder clearVaporWeight() {
                        this.bitField0_ &= 0xFFFFFEFF;
                        this.vaporWeight_ = 0.0F;
                        onChanged();
                        return this;
                    }

                    public boolean hasLiquidWeight() {
                        return ((this.bitField0_ & 0x200) != 0);
                    }

                    public float getLiquidWeight() {
                        return this.liquidWeight_;
                    }

                    public Builder setLiquidWeight(float value) {
                        this.bitField0_ |= 0x200;
                        this.liquidWeight_ = value;
                        onChanged();
                        return this;
                    }

                    public Builder clearLiquidWeight() {
                        this.bitField0_ &= 0xFFFFFDFF;
                        this.liquidWeight_ = 0.0F;
                        onChanged();
                        return this;
                    }

                    private void ensurePointTempIsMutable() {
                        if ((this.bitField0_ & 0x400) == 0) {
                            this.pointTemp_ = OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus.mutableCopy(this.pointTemp_);
                            this.bitField0_ |= 0x400;
                        }
                    }

                    public List<Integer> getPointTempList() {
                        return ((this.bitField0_ & 0x400) != 0) ? Collections.<Integer>unmodifiableList((List<? extends Integer>) this.pointTemp_) : (List<Integer>) this.pointTemp_;
                    }

                    public int getPointTempCount() {
                        return this.pointTemp_.size();
                    }

                    public int getPointTemp(int index) {
                        return this.pointTemp_.getInt(index);
                    }

                    public Builder setPointTemp(int index, int value) {
                        ensurePointTempIsMutable();
                        this.pointTemp_.setInt(index, value);
                        onChanged();
                        return this;
                    }

                    public Builder addPointTemp(int value) {
                        ensurePointTempIsMutable();
                        this.pointTemp_.addInt(value);
                        onChanged();
                        return this;
                    }

                    public Builder addAllPointTemp(Iterable<? extends Integer> values) {
                        ensurePointTempIsMutable();
                        AbstractMessageLite.Builder.addAll(values, (List) this.pointTemp_);
                        onChanged();
                        return this;
                    }

                    public Builder clearPointTemp() {
                        this.pointTemp_ = OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus.emptyIntList();
                        this.bitField0_ &= 0xFFFFFBFF;
                        onChanged();
                        return this;
                    }

                    public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
                        return (Builder) super.setUnknownFields(unknownFields);
                    }

                    public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
                        return (Builder) super.mergeUnknownFields(unknownFields);
                    }
                }

                private static final FuelSensorModbus DEFAULT_INSTANCE = new FuelSensorModbus();

                public static FuelSensorModbus getDefaultInstance() {
                    return DEFAULT_INSTANCE;
                }

                @Deprecated
                public static final Parser<FuelSensorModbus> PARSER = (Parser<FuelSensorModbus>) new AbstractParser<FuelSensorModbus>() {
                    public OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                        return new OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus(input, extensionRegistry);
                    }
                };

                public static Parser<FuelSensorModbus> parser() {
                    return PARSER;
                }

                public Parser<FuelSensorModbus> getParserForType() {
                    return PARSER;
                }

                public FuelSensorModbus getDefaultInstanceForType() {
                    return DEFAULT_INSTANCE;
                }
            }

            public static final class Builder extends GeneratedMessageV3.Builder<FuelSensorModbus.Builder> implements FuelSensorModbusOrBuilder {
                private int bitField0_;

                private float fuelLevel_;

                private float medianLevel_;

                private int levelPercent_;

                private float fuelVolume_;

                private int fuelTemp_;

                private float fuelWeight_;

                private float fuelDensity_;

                private int vaporTemp_;

                private float vaporWeight_;

                private float liquidWeight_;

                private Internal.IntList pointTemp_;

                public static final Descriptors.Descriptor getDescriptor() {
                    return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_FuelSensorModbus_descriptor;
                }

                protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
                    return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_FuelSensorModbus_fieldAccessorTable.ensureFieldAccessorsInitialized(OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus.class, Builder.class);
                }

                private Builder() {
                    this.pointTemp_ = OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus.emptyIntList();
                    maybeForceBuilderInitialization();
                }

                private Builder(GeneratedMessageV3.BuilderParent parent) {
                    super(parent);
                    this.pointTemp_ = OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus.emptyIntList();
                    maybeForceBuilderInitialization();
                }

                private void maybeForceBuilderInitialization() {
                    if (OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus.alwaysUseFieldBuilders) ;
                }

                public Builder clear() {
                    super.clear();
                    this.fuelLevel_ = 0.0F;
                    this.bitField0_ &= 0xFFFFFFFE;
                    this.medianLevel_ = 0.0F;
                    this.bitField0_ &= 0xFFFFFFFD;
                    this.levelPercent_ = 0;
                    this.bitField0_ &= 0xFFFFFFFB;
                    this.fuelVolume_ = 0.0F;
                    this.bitField0_ &= 0xFFFFFFF7;
                    this.fuelTemp_ = 0;
                    this.bitField0_ &= 0xFFFFFFEF;
                    this.fuelWeight_ = 0.0F;
                    this.bitField0_ &= 0xFFFFFFDF;
                    this.fuelDensity_ = 0.0F;
                    this.bitField0_ &= 0xFFFFFFBF;
                    this.vaporTemp_ = 0;
                    this.bitField0_ &= 0xFFFFFF7F;
                    this.vaporWeight_ = 0.0F;
                    this.bitField0_ &= 0xFFFFFEFF;
                    this.liquidWeight_ = 0.0F;
                    this.bitField0_ &= 0xFFFFFDFF;
                    this.pointTemp_ = OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus.emptyIntList();
                    this.bitField0_ &= 0xFFFFFBFF;
                    return this;
                }

                public Descriptors.Descriptor getDescriptorForType() {
                    return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_FuelSensorModbus_descriptor;
                }

                public OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus getDefaultInstanceForType() {
                    return OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus.getDefaultInstance();
                }

                public OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus build() {
                    OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus result = buildPartial();
                    if (!result.isInitialized())
                        throw newUninitializedMessageException(result);
                    return result;
                }

                public OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus buildPartial() {
                    OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus result = new OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus(this);
                    int from_bitField0_ = this.bitField0_;
                    int to_bitField0_ = 0;
                    if ((from_bitField0_ & 0x1) != 0) {
                        result.fuelLevel_ = this.fuelLevel_;
                        to_bitField0_ |= 0x1;
                    }
                    if ((from_bitField0_ & 0x2) != 0) {
                        result.medianLevel_ = this.medianLevel_;
                        to_bitField0_ |= 0x2;
                    }
                    if ((from_bitField0_ & 0x4) != 0) {
                        result.levelPercent_ = this.levelPercent_;
                        to_bitField0_ |= 0x4;
                    }
                    if ((from_bitField0_ & 0x8) != 0) {
                        result.fuelVolume_ = this.fuelVolume_;
                        to_bitField0_ |= 0x8;
                    }
                    if ((from_bitField0_ & 0x10) != 0) {
                        result.fuelTemp_ = this.fuelTemp_;
                        to_bitField0_ |= 0x10;
                    }
                    if ((from_bitField0_ & 0x20) != 0) {
                        result.fuelWeight_ = this.fuelWeight_;
                        to_bitField0_ |= 0x20;
                    }
                    if ((from_bitField0_ & 0x40) != 0) {
                        result.fuelDensity_ = this.fuelDensity_;
                        to_bitField0_ |= 0x40;
                    }
                    if ((from_bitField0_ & 0x80) != 0) {
                        result.vaporTemp_ = this.vaporTemp_;
                        to_bitField0_ |= 0x80;
                    }
                    if ((from_bitField0_ & 0x100) != 0) {
                        result.vaporWeight_ = this.vaporWeight_;
                        to_bitField0_ |= 0x100;
                    }
                    if ((from_bitField0_ & 0x200) != 0) {
                        result.liquidWeight_ = this.liquidWeight_;
                        to_bitField0_ |= 0x200;
                    }
                    if ((this.bitField0_ & 0x400) != 0) {
                        this.pointTemp_.makeImmutable();
                        this.bitField0_ &= 0xFFFFFBFF;
                    }
                    result.pointTemp_ = this.pointTemp_;
                    result.bitField0_ = to_bitField0_;
                    onBuilt();
                    return result;
                }

                public Builder clone() {
                    return (Builder) super.clone();
                }

                public Builder setField(Descriptors.FieldDescriptor field, Object value) {
                    return (Builder) super.setField(field, value);
                }

                public Builder clearField(Descriptors.FieldDescriptor field) {
                    return (Builder) super.clearField(field);
                }

                public Builder clearOneof(Descriptors.OneofDescriptor oneof) {
                    return (Builder) super.clearOneof(oneof);
                }

                public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
                    return (Builder) super.setRepeatedField(field, index, value);
                }

                public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
                    return (Builder) super.addRepeatedField(field, value);
                }

                public Builder mergeFrom(Message other) {
                    if (other instanceof OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus)
                        return mergeFrom((OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus) other);
                    super.mergeFrom(other);
                    return this;
                }

                public Builder mergeFrom(OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus other) {
                    if (other == OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus.getDefaultInstance())
                        return this;
                    if (other.hasFuelLevel())
                        setFuelLevel(other.getFuelLevel());
                    if (other.hasMedianLevel())
                        setMedianLevel(other.getMedianLevel());
                    if (other.hasLevelPercent())
                        setLevelPercent(other.getLevelPercent());
                    if (other.hasFuelVolume())
                        setFuelVolume(other.getFuelVolume());
                    if (other.hasFuelTemp())
                        setFuelTemp(other.getFuelTemp());
                    if (other.hasFuelWeight())
                        setFuelWeight(other.getFuelWeight());
                    if (other.hasFuelDensity())
                        setFuelDensity(other.getFuelDensity());
                    if (other.hasVaporTemp())
                        setVaporTemp(other.getVaporTemp());
                    if (other.hasVaporWeight())
                        setVaporWeight(other.getVaporWeight());
                    if (other.hasLiquidWeight())
                        setLiquidWeight(other.getLiquidWeight());
                    if (!other.pointTemp_.isEmpty()) {
                        if (this.pointTemp_.isEmpty()) {
                            this.pointTemp_ = other.pointTemp_;
                            this.bitField0_ &= 0xFFFFFBFF;
                        } else {
                            ensurePointTempIsMutable();
                            this.pointTemp_.addAll((Collection) other.pointTemp_);
                        }
                        onChanged();
                    }
                    mergeUnknownFields(other.unknownFields);
                    onChanged();
                    return this;
                }

                public final boolean isInitialized() {
                    return true;
                }

                public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                    OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus parsedMessage = null;
                    try {
                        parsedMessage = (OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus) OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus.PARSER.parsePartialFrom(input, extensionRegistry);
                    } catch (InvalidProtocolBufferException e) {
                        parsedMessage = (OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus) e.getUnfinishedMessage();
                        throw e.unwrapIOException();
                    } finally {
                        if (parsedMessage != null)
                            mergeFrom(parsedMessage);
                    }
                    return this;
                }

                public boolean hasFuelLevel() {
                    return ((this.bitField0_ & 0x1) != 0);
                }

                public float getFuelLevel() {
                    return this.fuelLevel_;
                }

                public Builder setFuelLevel(float value) {
                    this.bitField0_ |= 0x1;
                    this.fuelLevel_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearFuelLevel() {
                    this.bitField0_ &= 0xFFFFFFFE;
                    this.fuelLevel_ = 0.0F;
                    onChanged();
                    return this;
                }

                public boolean hasMedianLevel() {
                    return ((this.bitField0_ & 0x2) != 0);
                }

                public float getMedianLevel() {
                    return this.medianLevel_;
                }

                public Builder setMedianLevel(float value) {
                    this.bitField0_ |= 0x2;
                    this.medianLevel_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearMedianLevel() {
                    this.bitField0_ &= 0xFFFFFFFD;
                    this.medianLevel_ = 0.0F;
                    onChanged();
                    return this;
                }

                public boolean hasLevelPercent() {
                    return ((this.bitField0_ & 0x4) != 0);
                }

                public int getLevelPercent() {
                    return this.levelPercent_;
                }

                public Builder setLevelPercent(int value) {
                    this.bitField0_ |= 0x4;
                    this.levelPercent_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearLevelPercent() {
                    this.bitField0_ &= 0xFFFFFFFB;
                    this.levelPercent_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasFuelVolume() {
                    return ((this.bitField0_ & 0x8) != 0);
                }

                public float getFuelVolume() {
                    return this.fuelVolume_;
                }

                public Builder setFuelVolume(float value) {
                    this.bitField0_ |= 0x8;
                    this.fuelVolume_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearFuelVolume() {
                    this.bitField0_ &= 0xFFFFFFF7;
                    this.fuelVolume_ = 0.0F;
                    onChanged();
                    return this;
                }

                public boolean hasFuelTemp() {
                    return ((this.bitField0_ & 0x10) != 0);
                }

                public int getFuelTemp() {
                    return this.fuelTemp_;
                }

                public Builder setFuelTemp(int value) {
                    this.bitField0_ |= 0x10;
                    this.fuelTemp_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearFuelTemp() {
                    this.bitField0_ &= 0xFFFFFFEF;
                    this.fuelTemp_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasFuelWeight() {
                    return ((this.bitField0_ & 0x20) != 0);
                }

                public float getFuelWeight() {
                    return this.fuelWeight_;
                }

                public Builder setFuelWeight(float value) {
                    this.bitField0_ |= 0x20;
                    this.fuelWeight_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearFuelWeight() {
                    this.bitField0_ &= 0xFFFFFFDF;
                    this.fuelWeight_ = 0.0F;
                    onChanged();
                    return this;
                }

                public boolean hasFuelDensity() {
                    return ((this.bitField0_ & 0x40) != 0);
                }

                public float getFuelDensity() {
                    return this.fuelDensity_;
                }

                public Builder setFuelDensity(float value) {
                    this.bitField0_ |= 0x40;
                    this.fuelDensity_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearFuelDensity() {
                    this.bitField0_ &= 0xFFFFFFBF;
                    this.fuelDensity_ = 0.0F;
                    onChanged();
                    return this;
                }

                public boolean hasVaporTemp() {
                    return ((this.bitField0_ & 0x80) != 0);
                }

                public int getVaporTemp() {
                    return this.vaporTemp_;
                }

                public Builder setVaporTemp(int value) {
                    this.bitField0_ |= 0x80;
                    this.vaporTemp_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearVaporTemp() {
                    this.bitField0_ &= 0xFFFFFF7F;
                    this.vaporTemp_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasVaporWeight() {
                    return ((this.bitField0_ & 0x100) != 0);
                }

                public float getVaporWeight() {
                    return this.vaporWeight_;
                }

                public Builder setVaporWeight(float value) {
                    this.bitField0_ |= 0x100;
                    this.vaporWeight_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearVaporWeight() {
                    this.bitField0_ &= 0xFFFFFEFF;
                    this.vaporWeight_ = 0.0F;
                    onChanged();
                    return this;
                }

                public boolean hasLiquidWeight() {
                    return ((this.bitField0_ & 0x200) != 0);
                }

                public float getLiquidWeight() {
                    return this.liquidWeight_;
                }

                public Builder setLiquidWeight(float value) {
                    this.bitField0_ |= 0x200;
                    this.liquidWeight_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearLiquidWeight() {
                    this.bitField0_ &= 0xFFFFFDFF;
                    this.liquidWeight_ = 0.0F;
                    onChanged();
                    return this;
                }

                private void ensurePointTempIsMutable() {
                    if ((this.bitField0_ & 0x400) == 0) {
                        this.pointTemp_ = OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus.mutableCopy(this.pointTemp_);
                        this.bitField0_ |= 0x400;
                    }
                }

                public List<Integer> getPointTempList() {
                    return ((this.bitField0_ & 0x400) != 0) ? Collections.<Integer>unmodifiableList((List<? extends Integer>) this.pointTemp_) : (List<Integer>) this.pointTemp_;
                }

                public int getPointTempCount() {
                    return this.pointTemp_.size();
                }

                public int getPointTemp(int index) {
                    return this.pointTemp_.getInt(index);
                }

                public Builder setPointTemp(int index, int value) {
                    ensurePointTempIsMutable();
                    this.pointTemp_.setInt(index, value);
                    onChanged();
                    return this;
                }

                public Builder addPointTemp(int value) {
                    ensurePointTempIsMutable();
                    this.pointTemp_.addInt(value);
                    onChanged();
                    return this;
                }

                public Builder addAllPointTemp(Iterable<? extends Integer> values) {
                    ensurePointTempIsMutable();
                    AbstractMessageLite.Builder.addAll(values, (List) this.pointTemp_);
                    onChanged();
                    return this;
                }

                public Builder clearPointTemp() {
                    this.pointTemp_ = OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus.emptyIntList();
                    this.bitField0_ &= 0xFFFFFBFF;
                    onChanged();
                    return this;
                }

                public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
                    return (Builder) super.setUnknownFields(unknownFields);
                }

                public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
                    return (Builder) super.mergeUnknownFields(unknownFields);
                }
            }

            public static final class WeightControl extends GeneratedMessageV3 implements WeightControlOrBuilder {
                private static final long serialVersionUID = 0L;

                private int bitField0_;

                public static final int AXELWEIGHT_FIELD_NUMBER = 1;

                private Internal.FloatList axelWeight_;

                public static final int AXELLIMIT_FIELD_NUMBER = 2;

                private Internal.FloatList axelLimit_;

                public static final int TOTALWEIGHT_FIELD_NUMBER = 3;

                private float totalWeight_;

                public static final int TOTALWEIGHTLIMIT_FIELD_NUMBER = 4;

                private float totalWeightLimit_;

                private byte memoizedIsInitialized;

                private WeightControl(GeneratedMessageV3.Builder<?> builder) {
                    super(builder);
                    this.memoizedIsInitialized = -1;
                }

                private WeightControl() {
                    this.memoizedIsInitialized = -1;
                    this.axelWeight_ = emptyFloatList();
                    this.axelLimit_ = emptyFloatList();
                }

                protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) {
                    return new WeightControl();
                }

                public final UnknownFieldSet getUnknownFields() {
                    return this.unknownFields;
                }

                private WeightControl(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                    this();
                    if (extensionRegistry == null)
                        throw new NullPointerException();
                    int mutable_bitField0_ = 0;
                    UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
                    try {
                        boolean done = false;
                        while (!done) {
                            int length, limit, tag = input.readTag();
                            switch (tag) {
                                case 0:
                                    done = true;
                                    continue;
                                case 13:
                                    if ((mutable_bitField0_ & 0x1) == 0) {
                                        this.axelWeight_ = newFloatList();
                                        mutable_bitField0_ |= 0x1;
                                    }
                                    this.axelWeight_.addFloat(input.readFloat());
                                    continue;
                                case 10:
                                    length = input.readRawVarint32();
                                    limit = input.pushLimit(length);
                                    if ((mutable_bitField0_ & 0x1) == 0 && input.getBytesUntilLimit() > 0) {
                                        this.axelWeight_ = newFloatList();
                                        mutable_bitField0_ |= 0x1;
                                    }
                                    while (input.getBytesUntilLimit() > 0)
                                        this.axelWeight_.addFloat(input.readFloat());
                                    input.popLimit(limit);
                                    continue;
                                case 21:
                                    if ((mutable_bitField0_ & 0x2) == 0) {
                                        this.axelLimit_ = newFloatList();
                                        mutable_bitField0_ |= 0x2;
                                    }
                                    this.axelLimit_.addFloat(input.readFloat());
                                    continue;
                                case 18:
                                    length = input.readRawVarint32();
                                    limit = input.pushLimit(length);
                                    if ((mutable_bitField0_ & 0x2) == 0 && input.getBytesUntilLimit() > 0) {
                                        this.axelLimit_ = newFloatList();
                                        mutable_bitField0_ |= 0x2;
                                    }
                                    while (input.getBytesUntilLimit() > 0)
                                        this.axelLimit_.addFloat(input.readFloat());
                                    input.popLimit(limit);
                                    continue;
                                case 29:
                                    this.bitField0_ |= 0x1;
                                    this.totalWeight_ = input.readFloat();
                                    continue;
                                case 37:
                                    this.bitField0_ |= 0x2;
                                    this.totalWeightLimit_ = input.readFloat();
                                    continue;
                            }
                            if (!parseUnknownField(input, unknownFields, extensionRegistry, tag))
                                done = true;
                        }
                    } catch (InvalidProtocolBufferException e) {
                        throw e.setUnfinishedMessage(this);
                    } catch (IOException e) {
                        throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this);
                    } finally {
                        if ((mutable_bitField0_ & 0x1) != 0)
                            this.axelWeight_.makeImmutable();
                        if ((mutable_bitField0_ & 0x2) != 0)
                            this.axelLimit_.makeImmutable();
                        this.unknownFields = unknownFields.build();
                        makeExtensionsImmutable();
                    }
                }

                public static final Descriptors.Descriptor getDescriptor() {
                    return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_WeightControl_descriptor;
                }

                protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
                    return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_WeightControl_fieldAccessorTable.ensureFieldAccessorsInitialized(WeightControl.class, Builder.class);
                }

                public List<Float> getAxelWeightList() {
                    return (List<Float>) this.axelWeight_;
                }

                public int getAxelWeightCount() {
                    return this.axelWeight_.size();
                }

                public float getAxelWeight(int index) {
                    return this.axelWeight_.getFloat(index);
                }

                public List<Float> getAxelLimitList() {
                    return (List<Float>) this.axelLimit_;
                }

                public int getAxelLimitCount() {
                    return this.axelLimit_.size();
                }

                public float getAxelLimit(int index) {
                    return this.axelLimit_.getFloat(index);
                }

                public boolean hasTotalWeight() {
                    return ((this.bitField0_ & 0x1) != 0);
                }

                public float getTotalWeight() {
                    return this.totalWeight_;
                }

                public boolean hasTotalWeightLimit() {
                    return ((this.bitField0_ & 0x2) != 0);
                }

                public float getTotalWeightLimit() {
                    return this.totalWeightLimit_;
                }

                public final boolean isInitialized() {
                    byte isInitialized = this.memoizedIsInitialized;
                    if (isInitialized == 1)
                        return true;
                    if (isInitialized == 0)
                        return false;
                    this.memoizedIsInitialized = 1;
                    return true;
                }

                public void writeTo(CodedOutputStream output) throws IOException {
                    int i;
                    for (i = 0; i < this.axelWeight_.size(); i++)
                        output.writeFloat(1, this.axelWeight_.getFloat(i));
                    for (i = 0; i < this.axelLimit_.size(); i++)
                        output.writeFloat(2, this.axelLimit_.getFloat(i));
                    if ((this.bitField0_ & 0x1) != 0)
                        output.writeFloat(3, this.totalWeight_);
                    if ((this.bitField0_ & 0x2) != 0)
                        output.writeFloat(4, this.totalWeightLimit_);
                    this.unknownFields.writeTo(output);
                }

                public int getSerializedSize() {
                    int size = this.memoizedSize;
                    if (size != -1)
                        return size;
                    size = 0;
                    int dataSize = 0;
                    dataSize = 4 * getAxelWeightList().size();
                    size += dataSize;
                    size += 1 * getAxelWeightList().size();
                    dataSize = 0;
                    dataSize = 4 * getAxelLimitList().size();
                    size += dataSize;
                    size += 1 * getAxelLimitList().size();
                    if ((this.bitField0_ & 0x1) != 0)
                        size += CodedOutputStream.computeFloatSize(3, this.totalWeight_);
                    if ((this.bitField0_ & 0x2) != 0)
                        size += CodedOutputStream.computeFloatSize(4, this.totalWeightLimit_);
                    size += this.unknownFields.getSerializedSize();
                    this.memoizedSize = size;
                    return size;
                }

                public boolean equals(Object obj) {
                    if (obj == this)
                        return true;
                    if (!(obj instanceof WeightControl))
                        return super.equals(obj);
                    WeightControl other = (WeightControl) obj;
                    if (!getAxelWeightList().equals(other.getAxelWeightList()))
                        return false;
                    if (!getAxelLimitList().equals(other.getAxelLimitList()))
                        return false;
                    if (hasTotalWeight() != other.hasTotalWeight())
                        return false;
                    if (hasTotalWeight() && Float.floatToIntBits(getTotalWeight()) != Float.floatToIntBits(other.getTotalWeight()))
                        return false;
                    if (hasTotalWeightLimit() != other.hasTotalWeightLimit())
                        return false;
                    if (hasTotalWeightLimit() && Float.floatToIntBits(getTotalWeightLimit()) != Float.floatToIntBits(other.getTotalWeightLimit()))
                        return false;
                    if (!this.unknownFields.equals(other.unknownFields))
                        return false;
                    return true;
                }

                public int hashCode() {
                    if (this.memoizedHashCode != 0)
                        return this.memoizedHashCode;
                    int hash = 41;
                    hash = 19 * hash + getDescriptor().hashCode();
                    if (getAxelWeightCount() > 0) {
                        hash = 37 * hash + 1;
                        hash = 53 * hash + getAxelWeightList().hashCode();
                    }
                    if (getAxelLimitCount() > 0) {
                        hash = 37 * hash + 2;
                        hash = 53 * hash + getAxelLimitList().hashCode();
                    }
                    if (hasTotalWeight()) {
                        hash = 37 * hash + 3;
                        hash = 53 * hash + Float.floatToIntBits(getTotalWeight());
                    }
                    if (hasTotalWeightLimit()) {
                        hash = 37 * hash + 4;
                        hash = 53 * hash + Float.floatToIntBits(getTotalWeightLimit());
                    }
                    hash = 29 * hash + this.unknownFields.hashCode();
                    this.memoizedHashCode = hash;
                    return hash;
                }

                public static WeightControl parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
                    return (WeightControl) PARSER.parseFrom(data);
                }

                public static WeightControl parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                    return (WeightControl) PARSER.parseFrom(data, extensionRegistry);
                }

                public static WeightControl parseFrom(ByteString data) throws InvalidProtocolBufferException {
                    return (WeightControl) PARSER.parseFrom(data);
                }

                public static WeightControl parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                    return (WeightControl) PARSER.parseFrom(data, extensionRegistry);
                }

                public static WeightControl parseFrom(byte[] data) throws InvalidProtocolBufferException {
                    return (WeightControl) PARSER.parseFrom(data);
                }

                public static WeightControl parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                    return (WeightControl) PARSER.parseFrom(data, extensionRegistry);
                }

                public static WeightControl parseFrom(InputStream input) throws IOException {
                    return (WeightControl) GeneratedMessageV3.parseWithIOException(PARSER, input);
                }

                public static WeightControl parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                    return (WeightControl) GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
                }

                public static WeightControl parseDelimitedFrom(InputStream input) throws IOException {
                    return (WeightControl) GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
                }

                public static WeightControl parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                    return (WeightControl) GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
                }

                public static WeightControl parseFrom(CodedInputStream input) throws IOException {
                    return (WeightControl) GeneratedMessageV3.parseWithIOException(PARSER, input);
                }

                public static WeightControl parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                    return (WeightControl) GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
                }

                public Builder newBuilderForType() {
                    return newBuilder();
                }

                public static Builder newBuilder() {
                    return DEFAULT_INSTANCE.toBuilder();
                }

                public static Builder newBuilder(WeightControl prototype) {
                    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
                }

                public Builder toBuilder() {
                    return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder()).mergeFrom(this);
                }

                protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
                    Builder builder = new Builder(parent);
                    return builder;
                }

                public static final class Builder extends GeneratedMessageV3.Builder<Builder> implements OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControlOrBuilder {
                    private int bitField0_;

                    private Internal.FloatList axelWeight_;

                    private Internal.FloatList axelLimit_;

                    private float totalWeight_;

                    private float totalWeightLimit_;

                    public static final Descriptors.Descriptor getDescriptor() {
                        return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_WeightControl_descriptor;
                    }

                    protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
                        return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_WeightControl_fieldAccessorTable.ensureFieldAccessorsInitialized(OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl.class, Builder.class);
                    }

                    private Builder() {
                        this.axelWeight_ = OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl.emptyFloatList();
                        this.axelLimit_ = OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl.emptyFloatList();
                        maybeForceBuilderInitialization();
                    }

                    private Builder(GeneratedMessageV3.BuilderParent parent) {
                        super(parent);
                        this.axelWeight_ = OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl.emptyFloatList();
                        this.axelLimit_ = OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl.emptyFloatList();
                        maybeForceBuilderInitialization();
                    }

                    private void maybeForceBuilderInitialization() {
                        if (OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl.alwaysUseFieldBuilders) ;
                    }

                    public Builder clear() {
                        super.clear();
                        this.axelWeight_ = OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl.emptyFloatList();
                        this.bitField0_ &= 0xFFFFFFFE;
                        this.axelLimit_ = OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl.emptyFloatList();
                        this.bitField0_ &= 0xFFFFFFFD;
                        this.totalWeight_ = 0.0F;
                        this.bitField0_ &= 0xFFFFFFFB;
                        this.totalWeightLimit_ = 0.0F;
                        this.bitField0_ &= 0xFFFFFFF7;
                        return this;
                    }

                    public Descriptors.Descriptor getDescriptorForType() {
                        return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_WeightControl_descriptor;
                    }

                    public OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl getDefaultInstanceForType() {
                        return OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl.getDefaultInstance();
                    }

                    public OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl build() {
                        OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl result = buildPartial();
                        if (!result.isInitialized())
                            throw newUninitializedMessageException(result);
                        return result;
                    }

                    public OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl buildPartial() {
                        OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl result = new OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl(this);
                        int from_bitField0_ = this.bitField0_;
                        int to_bitField0_ = 0;
                        if ((this.bitField0_ & 0x1) != 0) {
                            this.axelWeight_.makeImmutable();
                            this.bitField0_ &= 0xFFFFFFFE;
                        }
                        result.axelWeight_ = this.axelWeight_;
                        if ((this.bitField0_ & 0x2) != 0) {
                            this.axelLimit_.makeImmutable();
                            this.bitField0_ &= 0xFFFFFFFD;
                        }
                        result.axelLimit_ = this.axelLimit_;
                        if ((from_bitField0_ & 0x4) != 0) {
                            result.totalWeight_ = this.totalWeight_;
                            to_bitField0_ |= 0x1;
                        }
                        if ((from_bitField0_ & 0x8) != 0) {
                            result.totalWeightLimit_ = this.totalWeightLimit_;
                            to_bitField0_ |= 0x2;
                        }
                        result.bitField0_ = to_bitField0_;
                        onBuilt();
                        return result;
                    }

                    public Builder clone() {
                        return (Builder) super.clone();
                    }

                    public Builder setField(Descriptors.FieldDescriptor field, Object value) {
                        return (Builder) super.setField(field, value);
                    }

                    public Builder clearField(Descriptors.FieldDescriptor field) {
                        return (Builder) super.clearField(field);
                    }

                    public Builder clearOneof(Descriptors.OneofDescriptor oneof) {
                        return (Builder) super.clearOneof(oneof);
                    }

                    public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
                        return (Builder) super.setRepeatedField(field, index, value);
                    }

                    public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
                        return (Builder) super.addRepeatedField(field, value);
                    }

                    public Builder mergeFrom(Message other) {
                        if (other instanceof OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl)
                            return mergeFrom((OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl) other);
                        super.mergeFrom(other);
                        return this;
                    }

                    public Builder mergeFrom(OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl other) {
                        if (other == OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl.getDefaultInstance())
                            return this;
                        if (!other.axelWeight_.isEmpty()) {
                            if (this.axelWeight_.isEmpty()) {
                                this.axelWeight_ = other.axelWeight_;
                                this.bitField0_ &= 0xFFFFFFFE;
                            } else {
                                ensureAxelWeightIsMutable();
                                this.axelWeight_.addAll((Collection) other.axelWeight_);
                            }
                            onChanged();
                        }
                        if (!other.axelLimit_.isEmpty()) {
                            if (this.axelLimit_.isEmpty()) {
                                this.axelLimit_ = other.axelLimit_;
                                this.bitField0_ &= 0xFFFFFFFD;
                            } else {
                                ensureAxelLimitIsMutable();
                                this.axelLimit_.addAll((Collection) other.axelLimit_);
                            }
                            onChanged();
                        }
                        if (other.hasTotalWeight())
                            setTotalWeight(other.getTotalWeight());
                        if (other.hasTotalWeightLimit())
                            setTotalWeightLimit(other.getTotalWeightLimit());
                        mergeUnknownFields(other.unknownFields);
                        onChanged();
                        return this;
                    }

                    public final boolean isInitialized() {
                        return true;
                    }

                    public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                        OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl parsedMessage = null;
                        try {
                            parsedMessage = (OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl) OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl.PARSER.parsePartialFrom(input, extensionRegistry);
                        } catch (InvalidProtocolBufferException e) {
                            parsedMessage = (OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl) e.getUnfinishedMessage();
                            throw e.unwrapIOException();
                        } finally {
                            if (parsedMessage != null)
                                mergeFrom(parsedMessage);
                        }
                        return this;
                    }

                    private void ensureAxelWeightIsMutable() {
                        if ((this.bitField0_ & 0x1) == 0) {
                            this.axelWeight_ = OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl.mutableCopy(this.axelWeight_);
                            this.bitField0_ |= 0x1;
                        }
                    }

                    public List<Float> getAxelWeightList() {
                        return ((this.bitField0_ & 0x1) != 0) ? Collections.<Float>unmodifiableList((List<? extends Float>) this.axelWeight_) : (List<Float>) this.axelWeight_;
                    }

                    public int getAxelWeightCount() {
                        return this.axelWeight_.size();
                    }

                    public float getAxelWeight(int index) {
                        return this.axelWeight_.getFloat(index);
                    }

                    public Builder setAxelWeight(int index, float value) {
                        ensureAxelWeightIsMutable();
                        this.axelWeight_.setFloat(index, value);
                        onChanged();
                        return this;
                    }

                    public Builder addAxelWeight(float value) {
                        ensureAxelWeightIsMutable();
                        this.axelWeight_.addFloat(value);
                        onChanged();
                        return this;
                    }

                    public Builder addAllAxelWeight(Iterable<? extends Float> values) {
                        ensureAxelWeightIsMutable();
                        AbstractMessageLite.Builder.addAll(values, (List) this.axelWeight_);
                        onChanged();
                        return this;
                    }

                    public Builder clearAxelWeight() {
                        this.axelWeight_ = OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl.emptyFloatList();
                        this.bitField0_ &= 0xFFFFFFFE;
                        onChanged();
                        return this;
                    }

                    private void ensureAxelLimitIsMutable() {
                        if ((this.bitField0_ & 0x2) == 0) {
                            this.axelLimit_ = OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl.mutableCopy(this.axelLimit_);
                            this.bitField0_ |= 0x2;
                        }
                    }

                    public List<Float> getAxelLimitList() {
                        return ((this.bitField0_ & 0x2) != 0) ? Collections.<Float>unmodifiableList((List<? extends Float>) this.axelLimit_) : (List<Float>) this.axelLimit_;
                    }

                    public int getAxelLimitCount() {
                        return this.axelLimit_.size();
                    }

                    public float getAxelLimit(int index) {
                        return this.axelLimit_.getFloat(index);
                    }

                    public Builder setAxelLimit(int index, float value) {
                        ensureAxelLimitIsMutable();
                        this.axelLimit_.setFloat(index, value);
                        onChanged();
                        return this;
                    }

                    public Builder addAxelLimit(float value) {
                        ensureAxelLimitIsMutable();
                        this.axelLimit_.addFloat(value);
                        onChanged();
                        return this;
                    }

                    public Builder addAllAxelLimit(Iterable<? extends Float> values) {
                        ensureAxelLimitIsMutable();
                        AbstractMessageLite.Builder.addAll(values, (List) this.axelLimit_);
                        onChanged();
                        return this;
                    }

                    public Builder clearAxelLimit() {
                        this.axelLimit_ = OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl.emptyFloatList();
                        this.bitField0_ &= 0xFFFFFFFD;
                        onChanged();
                        return this;
                    }

                    public boolean hasTotalWeight() {
                        return ((this.bitField0_ & 0x4) != 0);
                    }

                    public float getTotalWeight() {
                        return this.totalWeight_;
                    }

                    public Builder setTotalWeight(float value) {
                        this.bitField0_ |= 0x4;
                        this.totalWeight_ = value;
                        onChanged();
                        return this;
                    }

                    public Builder clearTotalWeight() {
                        this.bitField0_ &= 0xFFFFFFFB;
                        this.totalWeight_ = 0.0F;
                        onChanged();
                        return this;
                    }

                    public boolean hasTotalWeightLimit() {
                        return ((this.bitField0_ & 0x8) != 0);
                    }

                    public float getTotalWeightLimit() {
                        return this.totalWeightLimit_;
                    }

                    public Builder setTotalWeightLimit(float value) {
                        this.bitField0_ |= 0x8;
                        this.totalWeightLimit_ = value;
                        onChanged();
                        return this;
                    }

                    public Builder clearTotalWeightLimit() {
                        this.bitField0_ &= 0xFFFFFFF7;
                        this.totalWeightLimit_ = 0.0F;
                        onChanged();
                        return this;
                    }

                    public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
                        return (Builder) super.setUnknownFields(unknownFields);
                    }

                    public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
                        return (Builder) super.mergeUnknownFields(unknownFields);
                    }
                }

                private static final WeightControl DEFAULT_INSTANCE = new WeightControl();

                public static WeightControl getDefaultInstance() {
                    return DEFAULT_INSTANCE;
                }

                @Deprecated
                public static final Parser<WeightControl> PARSER = (Parser<WeightControl>) new AbstractParser<WeightControl>() {
                    public OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                        return new OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl(input, extensionRegistry);
                    }
                };

                public static Parser<WeightControl> parser() {
                    return PARSER;
                }

                public Parser<WeightControl> getParserForType() {
                    return PARSER;
                }

                public WeightControl getDefaultInstanceForType() {
                    return DEFAULT_INSTANCE;
                }
            }

            public static final class Builder extends GeneratedMessageV3.Builder<WeightControl.Builder> implements WeightControlOrBuilder {
                private int bitField0_;

                private Internal.FloatList axelWeight_;

                private Internal.FloatList axelLimit_;

                private float totalWeight_;

                private float totalWeightLimit_;

                public static final Descriptors.Descriptor getDescriptor() {
                    return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_WeightControl_descriptor;
                }

                protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
                    return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_WeightControl_fieldAccessorTable.ensureFieldAccessorsInitialized(OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl.class, Builder.class);
                }

                private Builder() {
                    this.axelWeight_ = OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl.emptyFloatList();
                    this.axelLimit_ = OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl.emptyFloatList();
                    maybeForceBuilderInitialization();
                }

                private Builder(GeneratedMessageV3.BuilderParent parent) {
                    super(parent);
                    this.axelWeight_ = OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl.emptyFloatList();
                    this.axelLimit_ = OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl.emptyFloatList();
                    maybeForceBuilderInitialization();
                }

                private void maybeForceBuilderInitialization() {
                    if (OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl.alwaysUseFieldBuilders) ;
                }

                public Builder clear() {
                    super.clear();
                    this.axelWeight_ = OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl.emptyFloatList();
                    this.bitField0_ &= 0xFFFFFFFE;
                    this.axelLimit_ = OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl.emptyFloatList();
                    this.bitField0_ &= 0xFFFFFFFD;
                    this.totalWeight_ = 0.0F;
                    this.bitField0_ &= 0xFFFFFFFB;
                    this.totalWeightLimit_ = 0.0F;
                    this.bitField0_ &= 0xFFFFFFF7;
                    return this;
                }

                public Descriptors.Descriptor getDescriptorForType() {
                    return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_WeightControl_descriptor;
                }

                public OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl getDefaultInstanceForType() {
                    return OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl.getDefaultInstance();
                }

                public OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl build() {
                    OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl result = buildPartial();
                    if (!result.isInitialized())
                        throw newUninitializedMessageException(result);
                    return result;
                }

                public OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl buildPartial() {
                    OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl result = new OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl(this);
                    int from_bitField0_ = this.bitField0_;
                    int to_bitField0_ = 0;
                    if ((this.bitField0_ & 0x1) != 0) {
                        this.axelWeight_.makeImmutable();
                        this.bitField0_ &= 0xFFFFFFFE;
                    }
                    result.axelWeight_ = this.axelWeight_;
                    if ((this.bitField0_ & 0x2) != 0) {
                        this.axelLimit_.makeImmutable();
                        this.bitField0_ &= 0xFFFFFFFD;
                    }
                    result.axelLimit_ = this.axelLimit_;
                    if ((from_bitField0_ & 0x4) != 0) {
                        result.totalWeight_ = this.totalWeight_;
                        to_bitField0_ |= 0x1;
                    }
                    if ((from_bitField0_ & 0x8) != 0) {
                        result.totalWeightLimit_ = this.totalWeightLimit_;
                        to_bitField0_ |= 0x2;
                    }
                    result.bitField0_ = to_bitField0_;
                    onBuilt();
                    return result;
                }

                public Builder clone() {
                    return (Builder) super.clone();
                }

                public Builder setField(Descriptors.FieldDescriptor field, Object value) {
                    return (Builder) super.setField(field, value);
                }

                public Builder clearField(Descriptors.FieldDescriptor field) {
                    return (Builder) super.clearField(field);
                }

                public Builder clearOneof(Descriptors.OneofDescriptor oneof) {
                    return (Builder) super.clearOneof(oneof);
                }

                public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
                    return (Builder) super.setRepeatedField(field, index, value);
                }

                public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
                    return (Builder) super.addRepeatedField(field, value);
                }

                public Builder mergeFrom(Message other) {
                    if (other instanceof OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl)
                        return mergeFrom((OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl) other);
                    super.mergeFrom(other);
                    return this;
                }

                public Builder mergeFrom(OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl other) {
                    if (other == OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl.getDefaultInstance())
                        return this;
                    if (!other.axelWeight_.isEmpty()) {
                        if (this.axelWeight_.isEmpty()) {
                            this.axelWeight_ = other.axelWeight_;
                            this.bitField0_ &= 0xFFFFFFFE;
                        } else {
                            ensureAxelWeightIsMutable();
                            this.axelWeight_.addAll((Collection) other.axelWeight_);
                        }
                        onChanged();
                    }
                    if (!other.axelLimit_.isEmpty()) {
                        if (this.axelLimit_.isEmpty()) {
                            this.axelLimit_ = other.axelLimit_;
                            this.bitField0_ &= 0xFFFFFFFD;
                        } else {
                            ensureAxelLimitIsMutable();
                            this.axelLimit_.addAll((Collection) other.axelLimit_);
                        }
                        onChanged();
                    }
                    if (other.hasTotalWeight())
                        setTotalWeight(other.getTotalWeight());
                    if (other.hasTotalWeightLimit())
                        setTotalWeightLimit(other.getTotalWeightLimit());
                    mergeUnknownFields(other.unknownFields);
                    onChanged();
                    return this;
                }

                public final boolean isInitialized() {
                    return true;
                }

                public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                    OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl parsedMessage = null;
                    try {
                        parsedMessage = (OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl) OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl.PARSER.parsePartialFrom(input, extensionRegistry);
                    } catch (InvalidProtocolBufferException e) {
                        parsedMessage = (OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl) e.getUnfinishedMessage();
                        throw e.unwrapIOException();
                    } finally {
                        if (parsedMessage != null)
                            mergeFrom(parsedMessage);
                    }
                    return this;
                }

                private void ensureAxelWeightIsMutable() {
                    if ((this.bitField0_ & 0x1) == 0) {
                        this.axelWeight_ = OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl.mutableCopy(this.axelWeight_);
                        this.bitField0_ |= 0x1;
                    }
                }

                public List<Float> getAxelWeightList() {
                    return ((this.bitField0_ & 0x1) != 0) ? Collections.<Float>unmodifiableList((List<? extends Float>) this.axelWeight_) : (List<Float>) this.axelWeight_;
                }

                public int getAxelWeightCount() {
                    return this.axelWeight_.size();
                }

                public float getAxelWeight(int index) {
                    return this.axelWeight_.getFloat(index);
                }

                public Builder setAxelWeight(int index, float value) {
                    ensureAxelWeightIsMutable();
                    this.axelWeight_.setFloat(index, value);
                    onChanged();
                    return this;
                }

                public Builder addAxelWeight(float value) {
                    ensureAxelWeightIsMutable();
                    this.axelWeight_.addFloat(value);
                    onChanged();
                    return this;
                }

                public Builder addAllAxelWeight(Iterable<? extends Float> values) {
                    ensureAxelWeightIsMutable();
                    AbstractMessageLite.Builder.addAll(values, (List) this.axelWeight_);
                    onChanged();
                    return this;
                }

                public Builder clearAxelWeight() {
                    this.axelWeight_ = OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl.emptyFloatList();
                    this.bitField0_ &= 0xFFFFFFFE;
                    onChanged();
                    return this;
                }

                private void ensureAxelLimitIsMutable() {
                    if ((this.bitField0_ & 0x2) == 0) {
                        this.axelLimit_ = OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl.mutableCopy(this.axelLimit_);
                        this.bitField0_ |= 0x2;
                    }
                }

                public List<Float> getAxelLimitList() {
                    return ((this.bitField0_ & 0x2) != 0) ? Collections.<Float>unmodifiableList((List<? extends Float>) this.axelLimit_) : (List<Float>) this.axelLimit_;
                }

                public int getAxelLimitCount() {
                    return this.axelLimit_.size();
                }

                public float getAxelLimit(int index) {
                    return this.axelLimit_.getFloat(index);
                }

                public Builder setAxelLimit(int index, float value) {
                    ensureAxelLimitIsMutable();
                    this.axelLimit_.setFloat(index, value);
                    onChanged();
                    return this;
                }

                public Builder addAxelLimit(float value) {
                    ensureAxelLimitIsMutable();
                    this.axelLimit_.addFloat(value);
                    onChanged();
                    return this;
                }

                public Builder addAllAxelLimit(Iterable<? extends Float> values) {
                    ensureAxelLimitIsMutable();
                    AbstractMessageLite.Builder.addAll(values, (List) this.axelLimit_);
                    onChanged();
                    return this;
                }

                public Builder clearAxelLimit() {
                    this.axelLimit_ = OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl.emptyFloatList();
                    this.bitField0_ &= 0xFFFFFFFD;
                    onChanged();
                    return this;
                }

                public boolean hasTotalWeight() {
                    return ((this.bitField0_ & 0x4) != 0);
                }

                public float getTotalWeight() {
                    return this.totalWeight_;
                }

                public Builder setTotalWeight(float value) {
                    this.bitField0_ |= 0x4;
                    this.totalWeight_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearTotalWeight() {
                    this.bitField0_ &= 0xFFFFFFFB;
                    this.totalWeight_ = 0.0F;
                    onChanged();
                    return this;
                }

                public boolean hasTotalWeightLimit() {
                    return ((this.bitField0_ & 0x8) != 0);
                }

                public float getTotalWeightLimit() {
                    return this.totalWeightLimit_;
                }

                public Builder setTotalWeightLimit(float value) {
                    this.bitField0_ |= 0x8;
                    this.totalWeightLimit_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearTotalWeightLimit() {
                    this.bitField0_ &= 0xFFFFFFF7;
                    this.totalWeightLimit_ = 0.0F;
                    onChanged();
                    return this;
                }

                public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
                    return (Builder) super.setUnknownFields(unknownFields);
                }

                public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
                    return (Builder) super.mergeUnknownFields(unknownFields);
                }
            }

            public boolean hasOneWire() {
                return ((this.bitField0_ & 0x1) != 0);
            }

            public OneWire getOneWire() {
                return (this.oneWire_ == null) ? OneWire.getDefaultInstance() : this.oneWire_;
            }

            public OneWireOrBuilder getOneWireOrBuilder() {
                return (this.oneWire_ == null) ? OneWire.getDefaultInstance() : this.oneWire_;
            }

            public boolean hasPherip() {
                return ((this.bitField0_ & 0x2) != 0);
            }

            public Pherip getPherip() {
                return (this.pherip_ == null) ? Pherip.getDefaultInstance() : this.pherip_;
            }

            public PheripOrBuilder getPheripOrBuilder() {
                return (this.pherip_ == null) ? Pherip.getDefaultInstance() : this.pherip_;
            }

            public boolean hasExCAN() {
                return ((this.bitField0_ & 0x4) != 0);
            }

            public ExCAN getExCAN() {
                return (this.exCAN_ == null) ? ExCAN.getDefaultInstance() : this.exCAN_;
            }

            public ExCANOrBuilder getExCANOrBuilder() {
                return (this.exCAN_ == null) ? ExCAN.getDefaultInstance() : this.exCAN_;
            }

            public boolean hasTahoDDD() {
                return ((this.bitField0_ & 0x8) != 0);
            }

            public Taho_DDD getTahoDDD() {
                return (this.tahoDDD_ == null) ? Taho_DDD.getDefaultInstance() : this.tahoDDD_;
            }

            public Taho_DDDOrBuilder getTahoDDDOrBuilder() {
                return (this.tahoDDD_ == null) ? Taho_DDD.getDefaultInstance() : this.tahoDDD_;
            }

            public boolean hasAPC() {
                return ((this.bitField0_ & 0x10) != 0);
            }

            public APC getAPC() {
                return (this.aPC_ == null) ? APC.getDefaultInstance() : this.aPC_;
            }

            public APCOrBuilder getAPCOrBuilder() {
                return (this.aPC_ == null) ? APC.getDefaultInstance() : this.aPC_;
            }

            public boolean hasMobileEye() {
                return ((this.bitField0_ & 0x20) != 0);
            }

            public MobileEye getMobileEye() {
                return (this.mobileEye_ == null) ? MobileEye.getDefaultInstance() : this.mobileEye_;
            }

            public MobileEyeOrBuilder getMobileEyeOrBuilder() {
                return (this.mobileEye_ == null) ? MobileEye.getDefaultInstance() : this.mobileEye_;
            }

            public boolean hasSafeDriving() {
                return ((this.bitField0_ & 0x40) != 0);
            }

            public SafeDriving getSafeDriving() {
                return (this.safeDriving_ == null) ? SafeDriving.getDefaultInstance() : this.safeDriving_;
            }

            public SafeDrivingOrBuilder getSafeDrivingOrBuilder() {
                return (this.safeDriving_ == null) ? SafeDriving.getDefaultInstance() : this.safeDriving_;
            }

            public boolean hasGenComm() {
                return ((this.bitField0_ & 0x80) != 0);
            }

            public GenComm getGenComm() {
                return (this.genComm_ == null) ? GenComm.getDefaultInstance() : this.genComm_;
            }

            public GenCommOrBuilder getGenCommOrBuilder() {
                return (this.genComm_ == null) ? GenComm.getDefaultInstance() : this.genComm_;
            }

            public boolean hasFuelSensorModbus() {
                return ((this.bitField0_ & 0x100) != 0);
            }

            public FuelSensorModbus getFuelSensorModbus() {
                return (this.fuelSensorModbus_ == null) ? FuelSensorModbus.getDefaultInstance() : this.fuelSensorModbus_;
            }

            public FuelSensorModbusOrBuilder getFuelSensorModbusOrBuilder() {
                return (this.fuelSensorModbus_ == null) ? FuelSensorModbus.getDefaultInstance() : this.fuelSensorModbus_;
            }

            public boolean hasWeightControl() {
                return ((this.bitField0_ & 0x200) != 0);
            }

            public WeightControl getWeightControl() {
                return (this.weightControl_ == null) ? WeightControl.getDefaultInstance() : this.weightControl_;
            }

            public WeightControlOrBuilder getWeightControlOrBuilder() {
                return (this.weightControl_ == null) ? WeightControl.getDefaultInstance() : this.weightControl_;
            }

            public final boolean isInitialized() {
                byte isInitialized = this.memoizedIsInitialized;
                if (isInitialized == 1)
                    return true;
                if (isInitialized == 0)
                    return false;
                this.memoizedIsInitialized = 1;
                return true;
            }

            public void writeTo(CodedOutputStream output) throws IOException {
                if ((this.bitField0_ & 0x1) != 0)
                    output.writeGroup(1, (MessageLite) getOneWire());
                if ((this.bitField0_ & 0x2) != 0)
                    output.writeGroup(2, (MessageLite) getPherip());
                if ((this.bitField0_ & 0x4) != 0)
                    output.writeGroup(3, (MessageLite) getExCAN());
                if ((this.bitField0_ & 0x8) != 0)
                    output.writeGroup(4, (MessageLite) getTahoDDD());
                if ((this.bitField0_ & 0x10) != 0)
                    output.writeGroup(5, (MessageLite) getAPC());
                if ((this.bitField0_ & 0x20) != 0)
                    output.writeGroup(6, (MessageLite) getMobileEye());
                if ((this.bitField0_ & 0x40) != 0)
                    output.writeGroup(7, (MessageLite) getSafeDriving());
                if ((this.bitField0_ & 0x80) != 0)
                    output.writeGroup(8, (MessageLite) getGenComm());
                if ((this.bitField0_ & 0x100) != 0)
                    output.writeGroup(9, (MessageLite) getFuelSensorModbus());
                if ((this.bitField0_ & 0x200) != 0)
                    output.writeGroup(10, (MessageLite) getWeightControl());
                this.unknownFields.writeTo(output);
            }

            public int getSerializedSize() {
                int size = this.memoizedSize;
                if (size != -1)
                    return size;
                size = 0;
                if ((this.bitField0_ & 0x1) != 0)
                    size += CodedOutputStream.computeGroupSize(1, (MessageLite) getOneWire());
                if ((this.bitField0_ & 0x2) != 0)
                    size += CodedOutputStream.computeGroupSize(2, (MessageLite) getPherip());
                if ((this.bitField0_ & 0x4) != 0)
                    size += CodedOutputStream.computeGroupSize(3, (MessageLite) getExCAN());
                if ((this.bitField0_ & 0x8) != 0)
                    size += CodedOutputStream.computeGroupSize(4, (MessageLite) getTahoDDD());
                if ((this.bitField0_ & 0x10) != 0)
                    size += CodedOutputStream.computeGroupSize(5, (MessageLite) getAPC());
                if ((this.bitField0_ & 0x20) != 0)
                    size += CodedOutputStream.computeGroupSize(6, (MessageLite) getMobileEye());
                if ((this.bitField0_ & 0x40) != 0)
                    size += CodedOutputStream.computeGroupSize(7, (MessageLite) getSafeDriving());
                if ((this.bitField0_ & 0x80) != 0)
                    size += CodedOutputStream.computeGroupSize(8, (MessageLite) getGenComm());
                if ((this.bitField0_ & 0x100) != 0)
                    size += CodedOutputStream.computeGroupSize(9, (MessageLite) getFuelSensorModbus());
                if ((this.bitField0_ & 0x200) != 0)
                    size += CodedOutputStream.computeGroupSize(10, (MessageLite) getWeightControl());
                size += this.unknownFields.getSerializedSize();
                this.memoizedSize = size;
                return size;
            }

            public boolean equals(Object obj) {
                if (obj == this)
                    return true;
                if (!(obj instanceof Other))
                    return super.equals(obj);
                Other other = (Other) obj;
                if (hasOneWire() != other.hasOneWire())
                    return false;
                if (hasOneWire() && !getOneWire().equals(other.getOneWire()))
                    return false;
                if (hasPherip() != other.hasPherip())
                    return false;
                if (hasPherip() && !getPherip().equals(other.getPherip()))
                    return false;
                if (hasExCAN() != other.hasExCAN())
                    return false;
                if (hasExCAN() && !getExCAN().equals(other.getExCAN()))
                    return false;
                if (hasTahoDDD() != other.hasTahoDDD())
                    return false;
                if (hasTahoDDD() && !getTahoDDD().equals(other.getTahoDDD()))
                    return false;
                if (hasAPC() != other.hasAPC())
                    return false;
                if (hasAPC() && !getAPC().equals(other.getAPC()))
                    return false;
                if (hasMobileEye() != other.hasMobileEye())
                    return false;
                if (hasMobileEye() && !getMobileEye().equals(other.getMobileEye()))
                    return false;
                if (hasSafeDriving() != other.hasSafeDriving())
                    return false;
                if (hasSafeDriving() && !getSafeDriving().equals(other.getSafeDriving()))
                    return false;
                if (hasGenComm() != other.hasGenComm())
                    return false;
                if (hasGenComm() && !getGenComm().equals(other.getGenComm()))
                    return false;
                if (hasFuelSensorModbus() != other.hasFuelSensorModbus())
                    return false;
                if (hasFuelSensorModbus() && !getFuelSensorModbus().equals(other.getFuelSensorModbus()))
                    return false;
                if (hasWeightControl() != other.hasWeightControl())
                    return false;
                if (hasWeightControl() && !getWeightControl().equals(other.getWeightControl()))
                    return false;
                if (!this.unknownFields.equals(other.unknownFields))
                    return false;
                return true;
            }

            public int hashCode() {
                if (this.memoizedHashCode != 0)
                    return this.memoizedHashCode;
                int hash = 41;
                hash = 19 * hash + getDescriptor().hashCode();
                if (hasOneWire()) {
                    hash = 37 * hash + 1;
                    hash = 53 * hash + getOneWire().hashCode();
                }
                if (hasPherip()) {
                    hash = 37 * hash + 2;
                    hash = 53 * hash + getPherip().hashCode();
                }
                if (hasExCAN()) {
                    hash = 37 * hash + 3;
                    hash = 53 * hash + getExCAN().hashCode();
                }
                if (hasTahoDDD()) {
                    hash = 37 * hash + 4;
                    hash = 53 * hash + getTahoDDD().hashCode();
                }
                if (hasAPC()) {
                    hash = 37 * hash + 5;
                    hash = 53 * hash + getAPC().hashCode();
                }
                if (hasMobileEye()) {
                    hash = 37 * hash + 6;
                    hash = 53 * hash + getMobileEye().hashCode();
                }
                if (hasSafeDriving()) {
                    hash = 37 * hash + 7;
                    hash = 53 * hash + getSafeDriving().hashCode();
                }
                if (hasGenComm()) {
                    hash = 37 * hash + 8;
                    hash = 53 * hash + getGenComm().hashCode();
                }
                if (hasFuelSensorModbus()) {
                    hash = 37 * hash + 9;
                    hash = 53 * hash + getFuelSensorModbus().hashCode();
                }
                if (hasWeightControl()) {
                    hash = 37 * hash + 10;
                    hash = 53 * hash + getWeightControl().hashCode();
                }
                hash = 29 * hash + this.unknownFields.hashCode();
                this.memoizedHashCode = hash;
                return hash;
            }

            public static Other parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
                return (Other) PARSER.parseFrom(data);
            }

            public static Other parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return (Other) PARSER.parseFrom(data, extensionRegistry);
            }

            public static Other parseFrom(ByteString data) throws InvalidProtocolBufferException {
                return (Other) PARSER.parseFrom(data);
            }

            public static Other parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return (Other) PARSER.parseFrom(data, extensionRegistry);
            }

            public static Other parseFrom(byte[] data) throws InvalidProtocolBufferException {
                return (Other) PARSER.parseFrom(data);
            }

            public static Other parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return (Other) PARSER.parseFrom(data, extensionRegistry);
            }

            public static Other parseFrom(InputStream input) throws IOException {
                return (Other) GeneratedMessageV3.parseWithIOException(PARSER, input);
            }

            public static Other parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                return (Other) GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
            }

            public static Other parseDelimitedFrom(InputStream input) throws IOException {
                return (Other) GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
            }

            public static Other parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                return (Other) GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
            }

            public static Other parseFrom(CodedInputStream input) throws IOException {
                return (Other) GeneratedMessageV3.parseWithIOException(PARSER, input);
            }

            public static Other parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                return (Other) GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
            }

            public Builder newBuilderForType() {
                return newBuilder();
            }

            public static Builder newBuilder() {
                return DEFAULT_INSTANCE.toBuilder();
            }

            public static Builder newBuilder(Other prototype) {
                return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
            }

            public Builder toBuilder() {
                return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder()).mergeFrom(this);
            }

            protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
                Builder builder = new Builder(parent);
                return builder;
            }

            public static final class Builder extends GeneratedMessageV3.Builder<Builder> implements OmnicommMessageOuterClass.OmnicommMessage.OtherOrBuilder {
                private int bitField0_;

                private OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire oneWire_;

                private SingleFieldBuilderV3<OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire, OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire.Builder, OmnicommMessageOuterClass.OmnicommMessage.Other.OneWireOrBuilder> oneWireBuilder_;

                private OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip pherip_;

                private SingleFieldBuilderV3<OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip, OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip.Builder, OmnicommMessageOuterClass.OmnicommMessage.Other.PheripOrBuilder> pheripBuilder_;

                private OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN exCAN_;

                private SingleFieldBuilderV3<OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN, OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN.Builder, OmnicommMessageOuterClass.OmnicommMessage.Other.ExCANOrBuilder> exCANBuilder_;

                private OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD tahoDDD_;

                private SingleFieldBuilderV3<OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD, OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD.Builder, OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDDOrBuilder> tahoDDDBuilder_;

                private OmnicommMessageOuterClass.OmnicommMessage.Other.APC aPC_;

                private SingleFieldBuilderV3<OmnicommMessageOuterClass.OmnicommMessage.Other.APC, OmnicommMessageOuterClass.OmnicommMessage.Other.APC.Builder, OmnicommMessageOuterClass.OmnicommMessage.Other.APCOrBuilder> aPCBuilder_;

                private OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye mobileEye_;

                private SingleFieldBuilderV3<OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye, OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye.Builder, OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEyeOrBuilder> mobileEyeBuilder_;

                private OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving safeDriving_;

                private SingleFieldBuilderV3<OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving, OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving.Builder, OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDrivingOrBuilder> safeDrivingBuilder_;

                private OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm genComm_;

                private SingleFieldBuilderV3<OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm, OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm.Builder, OmnicommMessageOuterClass.OmnicommMessage.Other.GenCommOrBuilder> genCommBuilder_;

                private OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus fuelSensorModbus_;

                private SingleFieldBuilderV3<OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus, OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus.Builder, OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbusOrBuilder> fuelSensorModbusBuilder_;

                private OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl weightControl_;

                private SingleFieldBuilderV3<OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl, OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl.Builder, OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControlOrBuilder> weightControlBuilder_;

                public static final Descriptors.Descriptor getDescriptor() {
                    return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_descriptor;
                }

                protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
                    return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_fieldAccessorTable.ensureFieldAccessorsInitialized(OmnicommMessageOuterClass.OmnicommMessage.Other.class, Builder.class);
                }

                private Builder() {
                    maybeForceBuilderInitialization();
                }

                private Builder(GeneratedMessageV3.BuilderParent parent) {
                    super(parent);
                    maybeForceBuilderInitialization();
                }

                private void maybeForceBuilderInitialization() {
                    if (OmnicommMessageOuterClass.OmnicommMessage.Other.alwaysUseFieldBuilders) {
                        getOneWireFieldBuilder();
                        getPheripFieldBuilder();
                        getExCANFieldBuilder();
                        getTahoDDDFieldBuilder();
                        getAPCFieldBuilder();
                        getMobileEyeFieldBuilder();
                        getSafeDrivingFieldBuilder();
                        getGenCommFieldBuilder();
                        getFuelSensorModbusFieldBuilder();
                        getWeightControlFieldBuilder();
                    }
                }

                public Builder clear() {
                    super.clear();
                    if (this.oneWireBuilder_ == null) {
                        this.oneWire_ = null;
                    } else {
                        this.oneWireBuilder_.clear();
                    }
                    this.bitField0_ &= 0xFFFFFFFE;
                    if (this.pheripBuilder_ == null) {
                        this.pherip_ = null;
                    } else {
                        this.pheripBuilder_.clear();
                    }
                    this.bitField0_ &= 0xFFFFFFFD;
                    if (this.exCANBuilder_ == null) {
                        this.exCAN_ = null;
                    } else {
                        this.exCANBuilder_.clear();
                    }
                    this.bitField0_ &= 0xFFFFFFFB;
                    if (this.tahoDDDBuilder_ == null) {
                        this.tahoDDD_ = null;
                    } else {
                        this.tahoDDDBuilder_.clear();
                    }
                    this.bitField0_ &= 0xFFFFFFF7;
                    if (this.aPCBuilder_ == null) {
                        this.aPC_ = null;
                    } else {
                        this.aPCBuilder_.clear();
                    }
                    this.bitField0_ &= 0xFFFFFFEF;
                    if (this.mobileEyeBuilder_ == null) {
                        this.mobileEye_ = null;
                    } else {
                        this.mobileEyeBuilder_.clear();
                    }
                    this.bitField0_ &= 0xFFFFFFDF;
                    if (this.safeDrivingBuilder_ == null) {
                        this.safeDriving_ = null;
                    } else {
                        this.safeDrivingBuilder_.clear();
                    }
                    this.bitField0_ &= 0xFFFFFFBF;
                    if (this.genCommBuilder_ == null) {
                        this.genComm_ = null;
                    } else {
                        this.genCommBuilder_.clear();
                    }
                    this.bitField0_ &= 0xFFFFFF7F;
                    if (this.fuelSensorModbusBuilder_ == null) {
                        this.fuelSensorModbus_ = null;
                    } else {
                        this.fuelSensorModbusBuilder_.clear();
                    }
                    this.bitField0_ &= 0xFFFFFEFF;
                    if (this.weightControlBuilder_ == null) {
                        this.weightControl_ = null;
                    } else {
                        this.weightControlBuilder_.clear();
                    }
                    this.bitField0_ &= 0xFFFFFDFF;
                    return this;
                }

                public Descriptors.Descriptor getDescriptorForType() {
                    return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_descriptor;
                }

                public OmnicommMessageOuterClass.OmnicommMessage.Other getDefaultInstanceForType() {
                    return OmnicommMessageOuterClass.OmnicommMessage.Other.getDefaultInstance();
                }

                public OmnicommMessageOuterClass.OmnicommMessage.Other build() {
                    OmnicommMessageOuterClass.OmnicommMessage.Other result = buildPartial();
                    if (!result.isInitialized())
                        throw newUninitializedMessageException(result);
                    return result;
                }

                public OmnicommMessageOuterClass.OmnicommMessage.Other buildPartial() {
                    OmnicommMessageOuterClass.OmnicommMessage.Other result = new OmnicommMessageOuterClass.OmnicommMessage.Other(this);
                    int from_bitField0_ = this.bitField0_;
                    int to_bitField0_ = 0;
                    if ((from_bitField0_ & 0x1) != 0) {
                        if (this.oneWireBuilder_ == null) {
                            result.oneWire_ = this.oneWire_;
                        } else {
                            result.oneWire_ = (OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire) this.oneWireBuilder_.build();
                        }
                        to_bitField0_ |= 0x1;
                    }
                    if ((from_bitField0_ & 0x2) != 0) {
                        if (this.pheripBuilder_ == null) {
                            result.pherip_ = this.pherip_;
                        } else {
                            result.pherip_ = (OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip) this.pheripBuilder_.build();
                        }
                        to_bitField0_ |= 0x2;
                    }
                    if ((from_bitField0_ & 0x4) != 0) {
                        if (this.exCANBuilder_ == null) {
                            result.exCAN_ = this.exCAN_;
                        } else {
                            result.exCAN_ = (OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN) this.exCANBuilder_.build();
                        }
                        to_bitField0_ |= 0x4;
                    }
                    if ((from_bitField0_ & 0x8) != 0) {
                        if (this.tahoDDDBuilder_ == null) {
                            result.tahoDDD_ = this.tahoDDD_;
                        } else {
                            result.tahoDDD_ = (OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD) this.tahoDDDBuilder_.build();
                        }
                        to_bitField0_ |= 0x8;
                    }
                    if ((from_bitField0_ & 0x10) != 0) {
                        if (this.aPCBuilder_ == null) {
                            result.aPC_ = this.aPC_;
                        } else {
                            result.aPC_ = (OmnicommMessageOuterClass.OmnicommMessage.Other.APC) this.aPCBuilder_.build();
                        }
                        to_bitField0_ |= 0x10;
                    }
                    if ((from_bitField0_ & 0x20) != 0) {
                        if (this.mobileEyeBuilder_ == null) {
                            result.mobileEye_ = this.mobileEye_;
                        } else {
                            result.mobileEye_ = (OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye) this.mobileEyeBuilder_.build();
                        }
                        to_bitField0_ |= 0x20;
                    }
                    if ((from_bitField0_ & 0x40) != 0) {
                        if (this.safeDrivingBuilder_ == null) {
                            result.safeDriving_ = this.safeDriving_;
                        } else {
                            result.safeDriving_ = (OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving) this.safeDrivingBuilder_.build();
                        }
                        to_bitField0_ |= 0x40;
                    }
                    if ((from_bitField0_ & 0x80) != 0) {
                        if (this.genCommBuilder_ == null) {
                            result.genComm_ = this.genComm_;
                        } else {
                            result.genComm_ = (OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm) this.genCommBuilder_.build();
                        }
                        to_bitField0_ |= 0x80;
                    }
                    if ((from_bitField0_ & 0x100) != 0) {
                        if (this.fuelSensorModbusBuilder_ == null) {
                            result.fuelSensorModbus_ = this.fuelSensorModbus_;
                        } else {
                            result.fuelSensorModbus_ = (OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus) this.fuelSensorModbusBuilder_.build();
                        }
                        to_bitField0_ |= 0x100;
                    }
                    if ((from_bitField0_ & 0x200) != 0) {
                        if (this.weightControlBuilder_ == null) {
                            result.weightControl_ = this.weightControl_;
                        } else {
                            result.weightControl_ = (OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl) this.weightControlBuilder_.build();
                        }
                        to_bitField0_ |= 0x200;
                    }
                    result.bitField0_ = to_bitField0_;
                    onBuilt();
                    return result;
                }

                public Builder clone() {
                    return (Builder) super.clone();
                }

                public Builder setField(Descriptors.FieldDescriptor field, Object value) {
                    return (Builder) super.setField(field, value);
                }

                public Builder clearField(Descriptors.FieldDescriptor field) {
                    return (Builder) super.clearField(field);
                }

                public Builder clearOneof(Descriptors.OneofDescriptor oneof) {
                    return (Builder) super.clearOneof(oneof);
                }

                public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
                    return (Builder) super.setRepeatedField(field, index, value);
                }

                public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
                    return (Builder) super.addRepeatedField(field, value);
                }

                public Builder mergeFrom(Message other) {
                    if (other instanceof OmnicommMessageOuterClass.OmnicommMessage.Other)
                        return mergeFrom((OmnicommMessageOuterClass.OmnicommMessage.Other) other);
                    super.mergeFrom(other);
                    return this;
                }

                public Builder mergeFrom(OmnicommMessageOuterClass.OmnicommMessage.Other other) {
                    if (other == OmnicommMessageOuterClass.OmnicommMessage.Other.getDefaultInstance())
                        return this;
                    if (other.hasOneWire())
                        mergeOneWire(other.getOneWire());
                    if (other.hasPherip())
                        mergePherip(other.getPherip());
                    if (other.hasExCAN())
                        mergeExCAN(other.getExCAN());
                    if (other.hasTahoDDD())
                        mergeTahoDDD(other.getTahoDDD());
                    if (other.hasAPC())
                        mergeAPC(other.getAPC());
                    if (other.hasMobileEye())
                        mergeMobileEye(other.getMobileEye());
                    if (other.hasSafeDriving())
                        mergeSafeDriving(other.getSafeDriving());
                    if (other.hasGenComm())
                        mergeGenComm(other.getGenComm());
                    if (other.hasFuelSensorModbus())
                        mergeFuelSensorModbus(other.getFuelSensorModbus());
                    if (other.hasWeightControl())
                        mergeWeightControl(other.getWeightControl());
                    mergeUnknownFields(other.unknownFields);
                    onChanged();
                    return this;
                }

                public final boolean isInitialized() {
                    return true;
                }

                public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                    OmnicommMessageOuterClass.OmnicommMessage.Other parsedMessage = null;
                    try {
                        parsedMessage = (OmnicommMessageOuterClass.OmnicommMessage.Other) OmnicommMessageOuterClass.OmnicommMessage.Other.PARSER.parsePartialFrom(input, extensionRegistry);
                    } catch (InvalidProtocolBufferException e) {
                        parsedMessage = (OmnicommMessageOuterClass.OmnicommMessage.Other) e.getUnfinishedMessage();
                        throw e.unwrapIOException();
                    } finally {
                        if (parsedMessage != null)
                            mergeFrom(parsedMessage);
                    }
                    return this;
                }

                public boolean hasOneWire() {
                    return ((this.bitField0_ & 0x1) != 0);
                }

                public OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire getOneWire() {
                    if (this.oneWireBuilder_ == null)
                        return (this.oneWire_ == null) ? OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire.getDefaultInstance() : this.oneWire_;
                    return (OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire) this.oneWireBuilder_.getMessage();
                }

                public Builder setOneWire(OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire value) {
                    if (this.oneWireBuilder_ == null) {
                        if (value == null)
                            throw new NullPointerException();
                        this.oneWire_ = value;
                        onChanged();
                    } else {
                        this.oneWireBuilder_.setMessage((AbstractMessage) value);
                    }
                    this.bitField0_ |= 0x1;
                    return this;
                }

                public Builder setOneWire(OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire.Builder builderForValue) {
                    if (this.oneWireBuilder_ == null) {
                        this.oneWire_ = builderForValue.build();
                        onChanged();
                    } else {
                        this.oneWireBuilder_.setMessage((AbstractMessage) builderForValue.build());
                    }
                    this.bitField0_ |= 0x1;
                    return this;
                }

                public Builder mergeOneWire(OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire value) {
                    if (this.oneWireBuilder_ == null) {
                        if ((this.bitField0_ & 0x1) != 0 && this.oneWire_ != null && this.oneWire_ != OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire.getDefaultInstance()) {
                            this.oneWire_ = OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire.newBuilder(this.oneWire_).mergeFrom(value).buildPartial();
                        } else {
                            this.oneWire_ = value;
                        }
                        onChanged();
                    } else {
                        this.oneWireBuilder_.mergeFrom((AbstractMessage) value);
                    }
                    this.bitField0_ |= 0x1;
                    return this;
                }

                public Builder clearOneWire() {
                    if (this.oneWireBuilder_ == null) {
                        this.oneWire_ = null;
                        onChanged();
                    } else {
                        this.oneWireBuilder_.clear();
                    }
                    this.bitField0_ &= 0xFFFFFFFE;
                    return this;
                }

                public OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire.Builder getOneWireBuilder() {
                    this.bitField0_ |= 0x1;
                    onChanged();
                    return (OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire.Builder) getOneWireFieldBuilder().getBuilder();
                }

                public OmnicommMessageOuterClass.OmnicommMessage.Other.OneWireOrBuilder getOneWireOrBuilder() {
                    if (this.oneWireBuilder_ != null)
                        return (OmnicommMessageOuterClass.OmnicommMessage.Other.OneWireOrBuilder) this.oneWireBuilder_.getMessageOrBuilder();
                    return (this.oneWire_ == null) ? OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire.getDefaultInstance() : this.oneWire_;
                }

                private SingleFieldBuilderV3<OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire, OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire.Builder, OmnicommMessageOuterClass.OmnicommMessage.Other.OneWireOrBuilder> getOneWireFieldBuilder() {
                    if (this.oneWireBuilder_ == null) {
                        this.oneWireBuilder_ = new SingleFieldBuilderV3((AbstractMessage) getOneWire(), (AbstractMessage.BuilderParent) getParentForChildren(), isClean());
                        this.oneWire_ = null;
                    }
                    return this.oneWireBuilder_;
                }

                public boolean hasPherip() {
                    return ((this.bitField0_ & 0x2) != 0);
                }

                public OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip getPherip() {
                    if (this.pheripBuilder_ == null)
                        return (this.pherip_ == null) ? OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip.getDefaultInstance() : this.pherip_;
                    return (OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip) this.pheripBuilder_.getMessage();
                }

                public Builder setPherip(OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip value) {
                    if (this.pheripBuilder_ == null) {
                        if (value == null)
                            throw new NullPointerException();
                        this.pherip_ = value;
                        onChanged();
                    } else {
                        this.pheripBuilder_.setMessage((AbstractMessage) value);
                    }
                    this.bitField0_ |= 0x2;
                    return this;
                }

                public Builder setPherip(OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip.Builder builderForValue) {
                    if (this.pheripBuilder_ == null) {
                        this.pherip_ = builderForValue.build();
                        onChanged();
                    } else {
                        this.pheripBuilder_.setMessage((AbstractMessage) builderForValue.build());
                    }
                    this.bitField0_ |= 0x2;
                    return this;
                }

                public Builder mergePherip(OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip value) {
                    if (this.pheripBuilder_ == null) {
                        if ((this.bitField0_ & 0x2) != 0 && this.pherip_ != null && this.pherip_ != OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip.getDefaultInstance()) {
                            this.pherip_ = OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip.newBuilder(this.pherip_).mergeFrom(value).buildPartial();
                        } else {
                            this.pherip_ = value;
                        }
                        onChanged();
                    } else {
                        this.pheripBuilder_.mergeFrom((AbstractMessage) value);
                    }
                    this.bitField0_ |= 0x2;
                    return this;
                }

                public Builder clearPherip() {
                    if (this.pheripBuilder_ == null) {
                        this.pherip_ = null;
                        onChanged();
                    } else {
                        this.pheripBuilder_.clear();
                    }
                    this.bitField0_ &= 0xFFFFFFFD;
                    return this;
                }

                public OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip.Builder getPheripBuilder() {
                    this.bitField0_ |= 0x2;
                    onChanged();
                    return (OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip.Builder) getPheripFieldBuilder().getBuilder();
                }

                public OmnicommMessageOuterClass.OmnicommMessage.Other.PheripOrBuilder getPheripOrBuilder() {
                    if (this.pheripBuilder_ != null)
                        return (OmnicommMessageOuterClass.OmnicommMessage.Other.PheripOrBuilder) this.pheripBuilder_.getMessageOrBuilder();
                    return (this.pherip_ == null) ? OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip.getDefaultInstance() : this.pherip_;
                }

                private SingleFieldBuilderV3<OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip, OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip.Builder, OmnicommMessageOuterClass.OmnicommMessage.Other.PheripOrBuilder> getPheripFieldBuilder() {
                    if (this.pheripBuilder_ == null) {
                        this.pheripBuilder_ = new SingleFieldBuilderV3((AbstractMessage) getPherip(), (AbstractMessage.BuilderParent) getParentForChildren(), isClean());
                        this.pherip_ = null;
                    }
                    return this.pheripBuilder_;
                }

                public boolean hasExCAN() {
                    return ((this.bitField0_ & 0x4) != 0);
                }

                public OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN getExCAN() {
                    if (this.exCANBuilder_ == null)
                        return (this.exCAN_ == null) ? OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN.getDefaultInstance() : this.exCAN_;
                    return (OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN) this.exCANBuilder_.getMessage();
                }

                public Builder setExCAN(OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN value) {
                    if (this.exCANBuilder_ == null) {
                        if (value == null)
                            throw new NullPointerException();
                        this.exCAN_ = value;
                        onChanged();
                    } else {
                        this.exCANBuilder_.setMessage((AbstractMessage) value);
                    }
                    this.bitField0_ |= 0x4;
                    return this;
                }

                public Builder setExCAN(OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN.Builder builderForValue) {
                    if (this.exCANBuilder_ == null) {
                        this.exCAN_ = builderForValue.build();
                        onChanged();
                    } else {
                        this.exCANBuilder_.setMessage((AbstractMessage) builderForValue.build());
                    }
                    this.bitField0_ |= 0x4;
                    return this;
                }

                public Builder mergeExCAN(OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN value) {
                    if (this.exCANBuilder_ == null) {
                        if ((this.bitField0_ & 0x4) != 0 && this.exCAN_ != null && this.exCAN_ != OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN.getDefaultInstance()) {
                            this.exCAN_ = OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN.newBuilder(this.exCAN_).mergeFrom(value).buildPartial();
                        } else {
                            this.exCAN_ = value;
                        }
                        onChanged();
                    } else {
                        this.exCANBuilder_.mergeFrom((AbstractMessage) value);
                    }
                    this.bitField0_ |= 0x4;
                    return this;
                }

                public Builder clearExCAN() {
                    if (this.exCANBuilder_ == null) {
                        this.exCAN_ = null;
                        onChanged();
                    } else {
                        this.exCANBuilder_.clear();
                    }
                    this.bitField0_ &= 0xFFFFFFFB;
                    return this;
                }

                public OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN.Builder getExCANBuilder() {
                    this.bitField0_ |= 0x4;
                    onChanged();
                    return (OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN.Builder) getExCANFieldBuilder().getBuilder();
                }

                public OmnicommMessageOuterClass.OmnicommMessage.Other.ExCANOrBuilder getExCANOrBuilder() {
                    if (this.exCANBuilder_ != null)
                        return (OmnicommMessageOuterClass.OmnicommMessage.Other.ExCANOrBuilder) this.exCANBuilder_.getMessageOrBuilder();
                    return (this.exCAN_ == null) ? OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN.getDefaultInstance() : this.exCAN_;
                }

                private SingleFieldBuilderV3<OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN, OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN.Builder, OmnicommMessageOuterClass.OmnicommMessage.Other.ExCANOrBuilder> getExCANFieldBuilder() {
                    if (this.exCANBuilder_ == null) {
                        this.exCANBuilder_ = new SingleFieldBuilderV3((AbstractMessage) getExCAN(), (AbstractMessage.BuilderParent) getParentForChildren(), isClean());
                        this.exCAN_ = null;
                    }
                    return this.exCANBuilder_;
                }

                public boolean hasTahoDDD() {
                    return ((this.bitField0_ & 0x8) != 0);
                }

                public OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD getTahoDDD() {
                    if (this.tahoDDDBuilder_ == null)
                        return (this.tahoDDD_ == null) ? OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD.getDefaultInstance() : this.tahoDDD_;
                    return (OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD) this.tahoDDDBuilder_.getMessage();
                }

                public Builder setTahoDDD(OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD value) {
                    if (this.tahoDDDBuilder_ == null) {
                        if (value == null)
                            throw new NullPointerException();
                        this.tahoDDD_ = value;
                        onChanged();
                    } else {
                        this.tahoDDDBuilder_.setMessage((AbstractMessage) value);
                    }
                    this.bitField0_ |= 0x8;
                    return this;
                }

                public Builder setTahoDDD(OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD.Builder builderForValue) {
                    if (this.tahoDDDBuilder_ == null) {
                        this.tahoDDD_ = builderForValue.build();
                        onChanged();
                    } else {
                        this.tahoDDDBuilder_.setMessage((AbstractMessage) builderForValue.build());
                    }
                    this.bitField0_ |= 0x8;
                    return this;
                }

                public Builder mergeTahoDDD(OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD value) {
                    if (this.tahoDDDBuilder_ == null) {
                        if ((this.bitField0_ & 0x8) != 0 && this.tahoDDD_ != null && this.tahoDDD_ != OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD.getDefaultInstance()) {
                            this.tahoDDD_ = OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD.newBuilder(this.tahoDDD_).mergeFrom(value).buildPartial();
                        } else {
                            this.tahoDDD_ = value;
                        }
                        onChanged();
                    } else {
                        this.tahoDDDBuilder_.mergeFrom((AbstractMessage) value);
                    }
                    this.bitField0_ |= 0x8;
                    return this;
                }

                public Builder clearTahoDDD() {
                    if (this.tahoDDDBuilder_ == null) {
                        this.tahoDDD_ = null;
                        onChanged();
                    } else {
                        this.tahoDDDBuilder_.clear();
                    }
                    this.bitField0_ &= 0xFFFFFFF7;
                    return this;
                }

                public OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD.Builder getTahoDDDBuilder() {
                    this.bitField0_ |= 0x8;
                    onChanged();
                    return (OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD.Builder) getTahoDDDFieldBuilder().getBuilder();
                }

                public OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDDOrBuilder getTahoDDDOrBuilder() {
                    if (this.tahoDDDBuilder_ != null)
                        return (OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDDOrBuilder) this.tahoDDDBuilder_.getMessageOrBuilder();
                    return (this.tahoDDD_ == null) ? OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD.getDefaultInstance() : this.tahoDDD_;
                }

                private SingleFieldBuilderV3<OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD, OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD.Builder, OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDDOrBuilder> getTahoDDDFieldBuilder() {
                    if (this.tahoDDDBuilder_ == null) {
                        this.tahoDDDBuilder_ = new SingleFieldBuilderV3((AbstractMessage) getTahoDDD(), (AbstractMessage.BuilderParent) getParentForChildren(), isClean());
                        this.tahoDDD_ = null;
                    }
                    return this.tahoDDDBuilder_;
                }

                public boolean hasAPC() {
                    return ((this.bitField0_ & 0x10) != 0);
                }

                public OmnicommMessageOuterClass.OmnicommMessage.Other.APC getAPC() {
                    if (this.aPCBuilder_ == null)
                        return (this.aPC_ == null) ? OmnicommMessageOuterClass.OmnicommMessage.Other.APC.getDefaultInstance() : this.aPC_;
                    return (OmnicommMessageOuterClass.OmnicommMessage.Other.APC) this.aPCBuilder_.getMessage();
                }

                public Builder setAPC(OmnicommMessageOuterClass.OmnicommMessage.Other.APC value) {
                    if (this.aPCBuilder_ == null) {
                        if (value == null)
                            throw new NullPointerException();
                        this.aPC_ = value;
                        onChanged();
                    } else {
                        this.aPCBuilder_.setMessage((AbstractMessage) value);
                    }
                    this.bitField0_ |= 0x10;
                    return this;
                }

                public Builder setAPC(OmnicommMessageOuterClass.OmnicommMessage.Other.APC.Builder builderForValue) {
                    if (this.aPCBuilder_ == null) {
                        this.aPC_ = builderForValue.build();
                        onChanged();
                    } else {
                        this.aPCBuilder_.setMessage((AbstractMessage) builderForValue.build());
                    }
                    this.bitField0_ |= 0x10;
                    return this;
                }

                public Builder mergeAPC(OmnicommMessageOuterClass.OmnicommMessage.Other.APC value) {
                    if (this.aPCBuilder_ == null) {
                        if ((this.bitField0_ & 0x10) != 0 && this.aPC_ != null && this.aPC_ != OmnicommMessageOuterClass.OmnicommMessage.Other.APC.getDefaultInstance()) {
                            this.aPC_ = OmnicommMessageOuterClass.OmnicommMessage.Other.APC.newBuilder(this.aPC_).mergeFrom(value).buildPartial();
                        } else {
                            this.aPC_ = value;
                        }
                        onChanged();
                    } else {
                        this.aPCBuilder_.mergeFrom((AbstractMessage) value);
                    }
                    this.bitField0_ |= 0x10;
                    return this;
                }

                public Builder clearAPC() {
                    if (this.aPCBuilder_ == null) {
                        this.aPC_ = null;
                        onChanged();
                    } else {
                        this.aPCBuilder_.clear();
                    }
                    this.bitField0_ &= 0xFFFFFFEF;
                    return this;
                }

                public OmnicommMessageOuterClass.OmnicommMessage.Other.APC.Builder getAPCBuilder() {
                    this.bitField0_ |= 0x10;
                    onChanged();
                    return (OmnicommMessageOuterClass.OmnicommMessage.Other.APC.Builder) getAPCFieldBuilder().getBuilder();
                }

                public OmnicommMessageOuterClass.OmnicommMessage.Other.APCOrBuilder getAPCOrBuilder() {
                    if (this.aPCBuilder_ != null)
                        return (OmnicommMessageOuterClass.OmnicommMessage.Other.APCOrBuilder) this.aPCBuilder_.getMessageOrBuilder();
                    return (this.aPC_ == null) ? OmnicommMessageOuterClass.OmnicommMessage.Other.APC.getDefaultInstance() : this.aPC_;
                }

                private SingleFieldBuilderV3<OmnicommMessageOuterClass.OmnicommMessage.Other.APC, OmnicommMessageOuterClass.OmnicommMessage.Other.APC.Builder, OmnicommMessageOuterClass.OmnicommMessage.Other.APCOrBuilder> getAPCFieldBuilder() {
                    if (this.aPCBuilder_ == null) {
                        this.aPCBuilder_ = new SingleFieldBuilderV3((AbstractMessage) getAPC(), (AbstractMessage.BuilderParent) getParentForChildren(), isClean());
                        this.aPC_ = null;
                    }
                    return this.aPCBuilder_;
                }

                public boolean hasMobileEye() {
                    return ((this.bitField0_ & 0x20) != 0);
                }

                public OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye getMobileEye() {
                    if (this.mobileEyeBuilder_ == null)
                        return (this.mobileEye_ == null) ? OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye.getDefaultInstance() : this.mobileEye_;
                    return (OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye) this.mobileEyeBuilder_.getMessage();
                }

                public Builder setMobileEye(OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye value) {
                    if (this.mobileEyeBuilder_ == null) {
                        if (value == null)
                            throw new NullPointerException();
                        this.mobileEye_ = value;
                        onChanged();
                    } else {
                        this.mobileEyeBuilder_.setMessage((AbstractMessage) value);
                    }
                    this.bitField0_ |= 0x20;
                    return this;
                }

                public Builder setMobileEye(OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye.Builder builderForValue) {
                    if (this.mobileEyeBuilder_ == null) {
                        this.mobileEye_ = builderForValue.build();
                        onChanged();
                    } else {
                        this.mobileEyeBuilder_.setMessage((AbstractMessage) builderForValue.build());
                    }
                    this.bitField0_ |= 0x20;
                    return this;
                }

                public Builder mergeMobileEye(OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye value) {
                    if (this.mobileEyeBuilder_ == null) {
                        if ((this.bitField0_ & 0x20) != 0 && this.mobileEye_ != null && this.mobileEye_ != OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye.getDefaultInstance()) {
                            this.mobileEye_ = OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye.newBuilder(this.mobileEye_).mergeFrom(value).buildPartial();
                        } else {
                            this.mobileEye_ = value;
                        }
                        onChanged();
                    } else {
                        this.mobileEyeBuilder_.mergeFrom((AbstractMessage) value);
                    }
                    this.bitField0_ |= 0x20;
                    return this;
                }

                public Builder clearMobileEye() {
                    if (this.mobileEyeBuilder_ == null) {
                        this.mobileEye_ = null;
                        onChanged();
                    } else {
                        this.mobileEyeBuilder_.clear();
                    }
                    this.bitField0_ &= 0xFFFFFFDF;
                    return this;
                }

                public OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye.Builder getMobileEyeBuilder() {
                    this.bitField0_ |= 0x20;
                    onChanged();
                    return (OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye.Builder) getMobileEyeFieldBuilder().getBuilder();
                }

                public OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEyeOrBuilder getMobileEyeOrBuilder() {
                    if (this.mobileEyeBuilder_ != null)
                        return (OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEyeOrBuilder) this.mobileEyeBuilder_.getMessageOrBuilder();
                    return (this.mobileEye_ == null) ? OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye.getDefaultInstance() : this.mobileEye_;
                }

                private SingleFieldBuilderV3<OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye, OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye.Builder, OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEyeOrBuilder> getMobileEyeFieldBuilder() {
                    if (this.mobileEyeBuilder_ == null) {
                        this.mobileEyeBuilder_ = new SingleFieldBuilderV3((AbstractMessage) getMobileEye(), (AbstractMessage.BuilderParent) getParentForChildren(), isClean());
                        this.mobileEye_ = null;
                    }
                    return this.mobileEyeBuilder_;
                }

                public boolean hasSafeDriving() {
                    return ((this.bitField0_ & 0x40) != 0);
                }

                public OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving getSafeDriving() {
                    if (this.safeDrivingBuilder_ == null)
                        return (this.safeDriving_ == null) ? OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving.getDefaultInstance() : this.safeDriving_;
                    return (OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving) this.safeDrivingBuilder_.getMessage();
                }

                public Builder setSafeDriving(OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving value) {
                    if (this.safeDrivingBuilder_ == null) {
                        if (value == null)
                            throw new NullPointerException();
                        this.safeDriving_ = value;
                        onChanged();
                    } else {
                        this.safeDrivingBuilder_.setMessage((AbstractMessage) value);
                    }
                    this.bitField0_ |= 0x40;
                    return this;
                }

                public Builder setSafeDriving(OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving.Builder builderForValue) {
                    if (this.safeDrivingBuilder_ == null) {
                        this.safeDriving_ = builderForValue.build();
                        onChanged();
                    } else {
                        this.safeDrivingBuilder_.setMessage((AbstractMessage) builderForValue.build());
                    }
                    this.bitField0_ |= 0x40;
                    return this;
                }

                public Builder mergeSafeDriving(OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving value) {
                    if (this.safeDrivingBuilder_ == null) {
                        if ((this.bitField0_ & 0x40) != 0 && this.safeDriving_ != null && this.safeDriving_ != OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving.getDefaultInstance()) {
                            this.safeDriving_ = OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving.newBuilder(this.safeDriving_).mergeFrom(value).buildPartial();
                        } else {
                            this.safeDriving_ = value;
                        }
                        onChanged();
                    } else {
                        this.safeDrivingBuilder_.mergeFrom((AbstractMessage) value);
                    }
                    this.bitField0_ |= 0x40;
                    return this;
                }

                public Builder clearSafeDriving() {
                    if (this.safeDrivingBuilder_ == null) {
                        this.safeDriving_ = null;
                        onChanged();
                    } else {
                        this.safeDrivingBuilder_.clear();
                    }
                    this.bitField0_ &= 0xFFFFFFBF;
                    return this;
                }

                public OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving.Builder getSafeDrivingBuilder() {
                    this.bitField0_ |= 0x40;
                    onChanged();
                    return (OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving.Builder) getSafeDrivingFieldBuilder().getBuilder();
                }

                public OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDrivingOrBuilder getSafeDrivingOrBuilder() {
                    if (this.safeDrivingBuilder_ != null)
                        return (OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDrivingOrBuilder) this.safeDrivingBuilder_.getMessageOrBuilder();
                    return (this.safeDriving_ == null) ? OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving.getDefaultInstance() : this.safeDriving_;
                }

                private SingleFieldBuilderV3<OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving, OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving.Builder, OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDrivingOrBuilder> getSafeDrivingFieldBuilder() {
                    if (this.safeDrivingBuilder_ == null) {
                        this.safeDrivingBuilder_ = new SingleFieldBuilderV3((AbstractMessage) getSafeDriving(), (AbstractMessage.BuilderParent) getParentForChildren(), isClean());
                        this.safeDriving_ = null;
                    }
                    return this.safeDrivingBuilder_;
                }

                public boolean hasGenComm() {
                    return ((this.bitField0_ & 0x80) != 0);
                }

                public OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm getGenComm() {
                    if (this.genCommBuilder_ == null)
                        return (this.genComm_ == null) ? OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm.getDefaultInstance() : this.genComm_;
                    return (OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm) this.genCommBuilder_.getMessage();
                }

                public Builder setGenComm(OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm value) {
                    if (this.genCommBuilder_ == null) {
                        if (value == null)
                            throw new NullPointerException();
                        this.genComm_ = value;
                        onChanged();
                    } else {
                        this.genCommBuilder_.setMessage((AbstractMessage) value);
                    }
                    this.bitField0_ |= 0x80;
                    return this;
                }

                public Builder setGenComm(OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm.Builder builderForValue) {
                    if (this.genCommBuilder_ == null) {
                        this.genComm_ = builderForValue.build();
                        onChanged();
                    } else {
                        this.genCommBuilder_.setMessage((AbstractMessage) builderForValue.build());
                    }
                    this.bitField0_ |= 0x80;
                    return this;
                }

                public Builder mergeGenComm(OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm value) {
                    if (this.genCommBuilder_ == null) {
                        if ((this.bitField0_ & 0x80) != 0 && this.genComm_ != null && this.genComm_ != OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm.getDefaultInstance()) {
                            this.genComm_ = OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm.newBuilder(this.genComm_).mergeFrom(value).buildPartial();
                        } else {
                            this.genComm_ = value;
                        }
                        onChanged();
                    } else {
                        this.genCommBuilder_.mergeFrom((AbstractMessage) value);
                    }
                    this.bitField0_ |= 0x80;
                    return this;
                }

                public Builder clearGenComm() {
                    if (this.genCommBuilder_ == null) {
                        this.genComm_ = null;
                        onChanged();
                    } else {
                        this.genCommBuilder_.clear();
                    }
                    this.bitField0_ &= 0xFFFFFF7F;
                    return this;
                }

                public OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm.Builder getGenCommBuilder() {
                    this.bitField0_ |= 0x80;
                    onChanged();
                    return (OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm.Builder) getGenCommFieldBuilder().getBuilder();
                }

                public OmnicommMessageOuterClass.OmnicommMessage.Other.GenCommOrBuilder getGenCommOrBuilder() {
                    if (this.genCommBuilder_ != null)
                        return (OmnicommMessageOuterClass.OmnicommMessage.Other.GenCommOrBuilder) this.genCommBuilder_.getMessageOrBuilder();
                    return (this.genComm_ == null) ? OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm.getDefaultInstance() : this.genComm_;
                }

                private SingleFieldBuilderV3<OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm, OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm.Builder, OmnicommMessageOuterClass.OmnicommMessage.Other.GenCommOrBuilder> getGenCommFieldBuilder() {
                    if (this.genCommBuilder_ == null) {
                        this.genCommBuilder_ = new SingleFieldBuilderV3((AbstractMessage) getGenComm(), (AbstractMessage.BuilderParent) getParentForChildren(), isClean());
                        this.genComm_ = null;
                    }
                    return this.genCommBuilder_;
                }

                public boolean hasFuelSensorModbus() {
                    return ((this.bitField0_ & 0x100) != 0);
                }

                public OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus getFuelSensorModbus() {
                    if (this.fuelSensorModbusBuilder_ == null)
                        return (this.fuelSensorModbus_ == null) ? OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus.getDefaultInstance() : this.fuelSensorModbus_;
                    return (OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus) this.fuelSensorModbusBuilder_.getMessage();
                }

                public Builder setFuelSensorModbus(OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus value) {
                    if (this.fuelSensorModbusBuilder_ == null) {
                        if (value == null)
                            throw new NullPointerException();
                        this.fuelSensorModbus_ = value;
                        onChanged();
                    } else {
                        this.fuelSensorModbusBuilder_.setMessage((AbstractMessage) value);
                    }
                    this.bitField0_ |= 0x100;
                    return this;
                }

                public Builder setFuelSensorModbus(OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus.Builder builderForValue) {
                    if (this.fuelSensorModbusBuilder_ == null) {
                        this.fuelSensorModbus_ = builderForValue.build();
                        onChanged();
                    } else {
                        this.fuelSensorModbusBuilder_.setMessage((AbstractMessage) builderForValue.build());
                    }
                    this.bitField0_ |= 0x100;
                    return this;
                }

                public Builder mergeFuelSensorModbus(OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus value) {
                    if (this.fuelSensorModbusBuilder_ == null) {
                        if ((this.bitField0_ & 0x100) != 0 && this.fuelSensorModbus_ != null && this.fuelSensorModbus_ != OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus.getDefaultInstance()) {
                            this.fuelSensorModbus_ = OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus.newBuilder(this.fuelSensorModbus_).mergeFrom(value).buildPartial();
                        } else {
                            this.fuelSensorModbus_ = value;
                        }
                        onChanged();
                    } else {
                        this.fuelSensorModbusBuilder_.mergeFrom((AbstractMessage) value);
                    }
                    this.bitField0_ |= 0x100;
                    return this;
                }

                public Builder clearFuelSensorModbus() {
                    if (this.fuelSensorModbusBuilder_ == null) {
                        this.fuelSensorModbus_ = null;
                        onChanged();
                    } else {
                        this.fuelSensorModbusBuilder_.clear();
                    }
                    this.bitField0_ &= 0xFFFFFEFF;
                    return this;
                }

                public OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus.Builder getFuelSensorModbusBuilder() {
                    this.bitField0_ |= 0x100;
                    onChanged();
                    return (OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus.Builder) getFuelSensorModbusFieldBuilder().getBuilder();
                }

                public OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbusOrBuilder getFuelSensorModbusOrBuilder() {
                    if (this.fuelSensorModbusBuilder_ != null)
                        return (OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbusOrBuilder) this.fuelSensorModbusBuilder_.getMessageOrBuilder();
                    return (this.fuelSensorModbus_ == null) ? OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus.getDefaultInstance() : this.fuelSensorModbus_;
                }

                private SingleFieldBuilderV3<OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus, OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus.Builder, OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbusOrBuilder> getFuelSensorModbusFieldBuilder() {
                    if (this.fuelSensorModbusBuilder_ == null) {
                        this.fuelSensorModbusBuilder_ = new SingleFieldBuilderV3((AbstractMessage) getFuelSensorModbus(), (AbstractMessage.BuilderParent) getParentForChildren(), isClean());
                        this.fuelSensorModbus_ = null;
                    }
                    return this.fuelSensorModbusBuilder_;
                }

                public boolean hasWeightControl() {
                    return ((this.bitField0_ & 0x200) != 0);
                }

                public OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl getWeightControl() {
                    if (this.weightControlBuilder_ == null)
                        return (this.weightControl_ == null) ? OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl.getDefaultInstance() : this.weightControl_;
                    return (OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl) this.weightControlBuilder_.getMessage();
                }

                public Builder setWeightControl(OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl value) {
                    if (this.weightControlBuilder_ == null) {
                        if (value == null)
                            throw new NullPointerException();
                        this.weightControl_ = value;
                        onChanged();
                    } else {
                        this.weightControlBuilder_.setMessage((AbstractMessage) value);
                    }
                    this.bitField0_ |= 0x200;
                    return this;
                }

                public Builder setWeightControl(OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl.Builder builderForValue) {
                    if (this.weightControlBuilder_ == null) {
                        this.weightControl_ = builderForValue.build();
                        onChanged();
                    } else {
                        this.weightControlBuilder_.setMessage((AbstractMessage) builderForValue.build());
                    }
                    this.bitField0_ |= 0x200;
                    return this;
                }

                public Builder mergeWeightControl(OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl value) {
                    if (this.weightControlBuilder_ == null) {
                        if ((this.bitField0_ & 0x200) != 0 && this.weightControl_ != null && this.weightControl_ != OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl.getDefaultInstance()) {
                            this.weightControl_ = OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl.newBuilder(this.weightControl_).mergeFrom(value).buildPartial();
                        } else {
                            this.weightControl_ = value;
                        }
                        onChanged();
                    } else {
                        this.weightControlBuilder_.mergeFrom((AbstractMessage) value);
                    }
                    this.bitField0_ |= 0x200;
                    return this;
                }

                public Builder clearWeightControl() {
                    if (this.weightControlBuilder_ == null) {
                        this.weightControl_ = null;
                        onChanged();
                    } else {
                        this.weightControlBuilder_.clear();
                    }
                    this.bitField0_ &= 0xFFFFFDFF;
                    return this;
                }

                public OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl.Builder getWeightControlBuilder() {
                    this.bitField0_ |= 0x200;
                    onChanged();
                    return (OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl.Builder) getWeightControlFieldBuilder().getBuilder();
                }

                public OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControlOrBuilder getWeightControlOrBuilder() {
                    if (this.weightControlBuilder_ != null)
                        return (OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControlOrBuilder) this.weightControlBuilder_.getMessageOrBuilder();
                    return (this.weightControl_ == null) ? OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl.getDefaultInstance() : this.weightControl_;
                }

                private SingleFieldBuilderV3<OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl, OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl.Builder, OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControlOrBuilder> getWeightControlFieldBuilder() {
                    if (this.weightControlBuilder_ == null) {
                        this.weightControlBuilder_ = new SingleFieldBuilderV3((AbstractMessage) getWeightControl(), (AbstractMessage.BuilderParent) getParentForChildren(), isClean());
                        this.weightControl_ = null;
                    }
                    return this.weightControlBuilder_;
                }

                public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
                    return (Builder) super.setUnknownFields(unknownFields);
                }

                public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
                    return (Builder) super.mergeUnknownFields(unknownFields);
                }
            }

            private static final Other DEFAULT_INSTANCE = new Other();

            public static Other getDefaultInstance() {
                return DEFAULT_INSTANCE;
            }

            @Deprecated
            public static final Parser<Other> PARSER = (Parser<Other>) new AbstractParser<Other>() {
                public OmnicommMessageOuterClass.OmnicommMessage.Other parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                    return new OmnicommMessageOuterClass.OmnicommMessage.Other(input, extensionRegistry);
                }
            };

            public static Parser<Other> parser() {
                return PARSER;
            }

            public Parser<Other> getParserForType() {
                return PARSER;
            }

            public Other getDefaultInstanceForType() {
                return DEFAULT_INSTANCE;
            }

            public static interface WeightControlOrBuilder extends MessageOrBuilder {
                List<Float> getAxelWeightList();

                int getAxelWeightCount();

                float getAxelWeight(int param3Int);

                List<Float> getAxelLimitList();

                int getAxelLimitCount();

                float getAxelLimit(int param3Int);

                boolean hasTotalWeight();

                float getTotalWeight();

                boolean hasTotalWeightLimit();

                float getTotalWeightLimit();
            }

            public static interface FuelSensorModbusOrBuilder extends MessageOrBuilder {
                boolean hasFuelLevel();

                float getFuelLevel();

                boolean hasMedianLevel();

                float getMedianLevel();

                boolean hasLevelPercent();

                int getLevelPercent();

                boolean hasFuelVolume();

                float getFuelVolume();

                boolean hasFuelTemp();

                int getFuelTemp();

                boolean hasFuelWeight();

                float getFuelWeight();

                boolean hasFuelDensity();

                float getFuelDensity();

                boolean hasVaporTemp();

                int getVaporTemp();

                boolean hasVaporWeight();

                float getVaporWeight();

                boolean hasLiquidWeight();

                float getLiquidWeight();

                List<Integer> getPointTempList();

                int getPointTempCount();

                int getPointTemp(int param3Int);
            }

            public static interface GenCommOrBuilder extends MessageOrBuilder {
                boolean hasGENOILPRESS1();

                int getGENOILPRESS1();

                boolean hasGENTEMP1();

                int getGENTEMP1();

                boolean hasGENVOLT1();

                float getGENVOLT1();

                boolean hasGENRPM1();

                int getGENRPM1();

                boolean hasGENUL11();

                float getGENUL11();

                boolean hasGENUL21();

                float getGENUL21();

                boolean hasGENUL31();

                float getGENUL31();

                boolean hasGENIL11();

                float getGENIL11();

                boolean hasGENIL21();

                float getGENIL21();

                boolean hasGENIL31();

                float getGENIL31();

                boolean hasGENSTATUS1();

                int getGENSTATUS1();

                boolean hasGENHOURS1();

                int getGENHOURS1();

                List<ByteString> getGENALARM1List();

                int getGENALARM1Count();

                ByteString getGENALARM1(int param3Int);

                boolean hasGENOILPRESS2();

                int getGENOILPRESS2();

                boolean hasGENTEMP2();

                int getGENTEMP2();

                boolean hasGENVOLT2();

                float getGENVOLT2();

                boolean hasGENRPM2();

                int getGENRPM2();

                boolean hasGENUL12();

                float getGENUL12();

                boolean hasGENUL22();

                float getGENUL22();

                boolean hasGENUL32();

                float getGENUL32();

                boolean hasGENIL12();

                float getGENIL12();

                boolean hasGENIL22();

                float getGENIL22();

                boolean hasGENIL32();

                float getGENIL32();

                boolean hasGENSTATUS2();

                int getGENSTATUS2();

                boolean hasGENHOURS2();

                int getGENHOURS2();

                List<ByteString> getGENALARM2List();

                int getGENALARM2Count();

                ByteString getGENALARM2(int param3Int);

                boolean hasGENOILPRESS3();

                int getGENOILPRESS3();

                boolean hasGENTEMP3();

                int getGENTEMP3();

                boolean hasGENVOLT3();

                float getGENVOLT3();

                boolean hasGENRPM3();

                int getGENRPM3();

                boolean hasGENUL13();

                float getGENUL13();

                boolean hasGENUL23();

                float getGENUL23();

                boolean hasGENUL33();

                float getGENUL33();

                boolean hasGENIL13();

                float getGENIL13();

                boolean hasGENIL23();

                float getGENIL23();

                boolean hasGENIL33();

                float getGENIL33();

                boolean hasGENSTATUS3();

                int getGENSTATUS3();

                boolean hasGENHOURS3();

                int getGENHOURS3();

                List<ByteString> getGENALARM3List();

                int getGENALARM3Count();

                ByteString getGENALARM3(int param3Int);

                boolean hasGENUC();

                float getGENUC();

                boolean hasGENIC();

                int getGENIC();

                boolean hasGENFREQ();

                float getGENFREQ();

                boolean hasGENUL1L2();

                float getGENUL1L2();

                boolean hasGENUL2L3();

                float getGENUL2L3();

                boolean hasGENUL1L3();

                float getGENUL1L3();

                boolean hasPOWACTL1();

                int getPOWACTL1();

                boolean hasPOWACTL2();

                int getPOWACTL2();

                boolean hasPOWACTL3();

                int getPOWACTL3();

                boolean hasPOWFULLL1();

                int getPOWFULLL1();

                boolean hasPOWFULLL2();

                int getPOWFULLL2();

                boolean hasPOWFULLL3();

                int getPOWFULLL3();

                boolean hasPOWREACTL1();

                int getPOWREACTL1();

                boolean hasPOWREACTL2();

                int getPOWREACTL2();

                boolean hasPOWREACTL3();

                int getPOWREACTL3();

                boolean hasPOWKOEF();

                float getPOWKOEF();

                boolean hasPOWGENTOTAL();

                int getPOWGENTOTAL();

                boolean hasFUELLEVEL();

                int getFUELLEVEL();

                boolean hasSMSREGS0();

                int getSMSREGS0();

                boolean hasSMSREGS1();

                int getSMSREGS1();

                boolean hasSMSREGS2();

                int getSMSREGS2();

                boolean hasSMSREGS3();

                int getSMSREGS3();

                boolean hasSMSREGS4();

                int getSMSREGS4();
            }

            public static interface SafeDrivingOrBuilder extends MessageOrBuilder {
                boolean hasEventMask();

                int getEventMask();

                boolean hasSpeedThreshold();

                int getSpeedThreshold();

                boolean hasRPMThreshold();

                int getRPMThreshold();

                List<Float> getAccelDangThsList();

                int getAccelDangThsCount();

                float getAccelDangThs(int param3Int);
            }

            public static interface MobileEyeOrBuilder extends MessageOrBuilder {
                boolean hasMobileEyeStatus();

                int getMobileEyeStatus();

                List<ByteString> getCAN700List();

                int getCAN700Count();

                ByteString getCAN700(int param3Int);

                List<ByteString> getCAN727List();

                int getCAN727Count();

                ByteString getCAN727(int param3Int);

                List<ByteString> getCAN760List();

                int getCAN760Count();

                ByteString getCAN760(int param3Int);
            }

            public static interface APCOrBuilder extends MessageOrBuilder {
                boolean hasAPCStatus1();

                int getAPCStatus1();

                boolean hasAPCStatus2();

                int getAPCStatus2();

                boolean hasAPCStatus3();

                int getAPCStatus3();

                boolean hasAPCStatus4();

                int getAPCStatus4();

                boolean hasAPCNumberIn1();

                int getAPCNumberIn1();

                boolean hasAPCNumberOut1();

                int getAPCNumberOut1();

                boolean hasAPCNumberIn2();

                int getAPCNumberIn2();

                boolean hasAPCNumberOut2();

                int getAPCNumberOut2();

                boolean hasAPCNumberIn3();

                int getAPCNumberIn3();

                boolean hasAPCNumberOut31();

                int getAPCNumberOut31();

                boolean hasAPCNumberIn4();

                int getAPCNumberIn4();

                boolean hasAPCNumberOut4();

                int getAPCNumberOut4();
            }

            public static interface Taho_DDDOrBuilder extends MessageOrBuilder {
                boolean hasBLKPOS();

                int getBLKPOS();

                boolean hasFILEDATA();

                ByteString getFILEDATA();

                boolean hasCARDID();

                ByteString getCARDID();

                boolean hasSTATUSDATA();

                int getSTATUSDATA();
            }

            public static interface ExCANOrBuilder extends MessageOrBuilder {
                List<Integer> getSPNidList();

                int getSPNidCount();

                int getSPNid(int param3Int);

                List<Integer> getSPNvalList();

                int getSPNvalCount();

                int getSPNval(int param3Int);

                boolean hasAdr64TEREX();

                long getAdr64TEREX();

                boolean hasAdr65TEREX();

                long getAdr65TEREX();

                boolean hasAdr66TEREX();

                long getAdr66TEREX();

                boolean hasAdr67TEREX();

                long getAdr67TEREX();

                List<Long> getAdr11TEREXList();

                int getAdr11TEREXCount();

                long getAdr11TEREX(int param3Int);

                boolean hasAdr69TEREX();

                long getAdr69TEREX();
            }

            public static interface PheripOrBuilder extends MessageOrBuilder {
                boolean hasPassengerIn();

                int getPassengerIn();

                boolean hasPassengerOut();

                int getPassengerOut();

                boolean hasDoorMask();

                int getDoorMask();

                boolean hasDriverStatus();

                int getDriverStatus();

                boolean hasTPMS();

                ByteString getTPMS();

                boolean hasIQFreeze();

                ByteString getIQFreeze();
            }

            public static interface OneWireOrBuilder extends MessageOrBuilder {
                boolean hasOneWire1();

                int getOneWire1();

                boolean hasOneWire2();

                int getOneWire2();

                boolean hasOneWire3();

                int getOneWire3();

                boolean hasOneWire4();

                int getOneWire4();

                boolean hasOneWire5();

                int getOneWire5();

                boolean hasOneWire6();

                int getOneWire6();

                boolean hasOneWire7();

                int getOneWire7();

                boolean hasOneWire8();

                int getOneWire8();
            }
        }

        public static final class Builder extends GeneratedMessageV3.Builder<Other.Builder> implements OtherOrBuilder {
            private int bitField0_;

            private OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire oneWire_;

            private SingleFieldBuilderV3<OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire, OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire.Builder, OmnicommMessageOuterClass.OmnicommMessage.Other.OneWireOrBuilder> oneWireBuilder_;

            private OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip pherip_;

            private SingleFieldBuilderV3<OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip, OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip.Builder, OmnicommMessageOuterClass.OmnicommMessage.Other.PheripOrBuilder> pheripBuilder_;

            private OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN exCAN_;

            private SingleFieldBuilderV3<OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN, OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN.Builder, OmnicommMessageOuterClass.OmnicommMessage.Other.ExCANOrBuilder> exCANBuilder_;

            private OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD tahoDDD_;

            private SingleFieldBuilderV3<OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD, OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD.Builder, OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDDOrBuilder> tahoDDDBuilder_;

            private OmnicommMessageOuterClass.OmnicommMessage.Other.APC aPC_;

            private SingleFieldBuilderV3<OmnicommMessageOuterClass.OmnicommMessage.Other.APC, OmnicommMessageOuterClass.OmnicommMessage.Other.APC.Builder, OmnicommMessageOuterClass.OmnicommMessage.Other.APCOrBuilder> aPCBuilder_;

            private OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye mobileEye_;

            private SingleFieldBuilderV3<OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye, OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye.Builder, OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEyeOrBuilder> mobileEyeBuilder_;

            private OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving safeDriving_;

            private SingleFieldBuilderV3<OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving, OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving.Builder, OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDrivingOrBuilder> safeDrivingBuilder_;

            private OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm genComm_;

            private SingleFieldBuilderV3<OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm, OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm.Builder, OmnicommMessageOuterClass.OmnicommMessage.Other.GenCommOrBuilder> genCommBuilder_;

            private OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus fuelSensorModbus_;

            private SingleFieldBuilderV3<OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus, OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus.Builder, OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbusOrBuilder> fuelSensorModbusBuilder_;

            private OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl weightControl_;

            private SingleFieldBuilderV3<OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl, OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl.Builder, OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControlOrBuilder> weightControlBuilder_;

            public static final Descriptors.Descriptor getDescriptor() {
                return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_descriptor;
            }

            protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
                return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_fieldAccessorTable.ensureFieldAccessorsInitialized(OmnicommMessageOuterClass.OmnicommMessage.Other.class, Builder.class);
            }

            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessageV3.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (OmnicommMessageOuterClass.OmnicommMessage.Other.alwaysUseFieldBuilders) {
                    getOneWireFieldBuilder();
                    getPheripFieldBuilder();
                    getExCANFieldBuilder();
                    getTahoDDDFieldBuilder();
                    getAPCFieldBuilder();
                    getMobileEyeFieldBuilder();
                    getSafeDrivingFieldBuilder();
                    getGenCommFieldBuilder();
                    getFuelSensorModbusFieldBuilder();
                    getWeightControlFieldBuilder();
                }
            }

            public Builder clear() {
                super.clear();
                if (this.oneWireBuilder_ == null) {
                    this.oneWire_ = null;
                } else {
                    this.oneWireBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFE;
                if (this.pheripBuilder_ == null) {
                    this.pherip_ = null;
                } else {
                    this.pheripBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFD;
                if (this.exCANBuilder_ == null) {
                    this.exCAN_ = null;
                } else {
                    this.exCANBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFB;
                if (this.tahoDDDBuilder_ == null) {
                    this.tahoDDD_ = null;
                } else {
                    this.tahoDDDBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFF7;
                if (this.aPCBuilder_ == null) {
                    this.aPC_ = null;
                } else {
                    this.aPCBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFEF;
                if (this.mobileEyeBuilder_ == null) {
                    this.mobileEye_ = null;
                } else {
                    this.mobileEyeBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFDF;
                if (this.safeDrivingBuilder_ == null) {
                    this.safeDriving_ = null;
                } else {
                    this.safeDrivingBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFBF;
                if (this.genCommBuilder_ == null) {
                    this.genComm_ = null;
                } else {
                    this.genCommBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFF7F;
                if (this.fuelSensorModbusBuilder_ == null) {
                    this.fuelSensorModbus_ = null;
                } else {
                    this.fuelSensorModbusBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFEFF;
                if (this.weightControlBuilder_ == null) {
                    this.weightControl_ = null;
                } else {
                    this.weightControlBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFDFF;
                return this;
            }

            public Descriptors.Descriptor getDescriptorForType() {
                return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_descriptor;
            }

            public OmnicommMessageOuterClass.OmnicommMessage.Other getDefaultInstanceForType() {
                return OmnicommMessageOuterClass.OmnicommMessage.Other.getDefaultInstance();
            }

            public OmnicommMessageOuterClass.OmnicommMessage.Other build() {
                OmnicommMessageOuterClass.OmnicommMessage.Other result = buildPartial();
                if (!result.isInitialized())
                    throw newUninitializedMessageException(result);
                return result;
            }

            public OmnicommMessageOuterClass.OmnicommMessage.Other buildPartial() {
                OmnicommMessageOuterClass.OmnicommMessage.Other result = new OmnicommMessageOuterClass.OmnicommMessage.Other(this);
                int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) != 0) {
                    if (this.oneWireBuilder_ == null) {
                        result.oneWire_ = this.oneWire_;
                    } else {
                        result.oneWire_ = (OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire) this.oneWireBuilder_.build();
                    }
                    to_bitField0_ |= 0x1;
                }
                if ((from_bitField0_ & 0x2) != 0) {
                    if (this.pheripBuilder_ == null) {
                        result.pherip_ = this.pherip_;
                    } else {
                        result.pherip_ = (OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip) this.pheripBuilder_.build();
                    }
                    to_bitField0_ |= 0x2;
                }
                if ((from_bitField0_ & 0x4) != 0) {
                    if (this.exCANBuilder_ == null) {
                        result.exCAN_ = this.exCAN_;
                    } else {
                        result.exCAN_ = (OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN) this.exCANBuilder_.build();
                    }
                    to_bitField0_ |= 0x4;
                }
                if ((from_bitField0_ & 0x8) != 0) {
                    if (this.tahoDDDBuilder_ == null) {
                        result.tahoDDD_ = this.tahoDDD_;
                    } else {
                        result.tahoDDD_ = (OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD) this.tahoDDDBuilder_.build();
                    }
                    to_bitField0_ |= 0x8;
                }
                if ((from_bitField0_ & 0x10) != 0) {
                    if (this.aPCBuilder_ == null) {
                        result.aPC_ = this.aPC_;
                    } else {
                        result.aPC_ = (OmnicommMessageOuterClass.OmnicommMessage.Other.APC) this.aPCBuilder_.build();
                    }
                    to_bitField0_ |= 0x10;
                }
                if ((from_bitField0_ & 0x20) != 0) {
                    if (this.mobileEyeBuilder_ == null) {
                        result.mobileEye_ = this.mobileEye_;
                    } else {
                        result.mobileEye_ = (OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye) this.mobileEyeBuilder_.build();
                    }
                    to_bitField0_ |= 0x20;
                }
                if ((from_bitField0_ & 0x40) != 0) {
                    if (this.safeDrivingBuilder_ == null) {
                        result.safeDriving_ = this.safeDriving_;
                    } else {
                        result.safeDriving_ = (OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving) this.safeDrivingBuilder_.build();
                    }
                    to_bitField0_ |= 0x40;
                }
                if ((from_bitField0_ & 0x80) != 0) {
                    if (this.genCommBuilder_ == null) {
                        result.genComm_ = this.genComm_;
                    } else {
                        result.genComm_ = (OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm) this.genCommBuilder_.build();
                    }
                    to_bitField0_ |= 0x80;
                }
                if ((from_bitField0_ & 0x100) != 0) {
                    if (this.fuelSensorModbusBuilder_ == null) {
                        result.fuelSensorModbus_ = this.fuelSensorModbus_;
                    } else {
                        result.fuelSensorModbus_ = (OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus) this.fuelSensorModbusBuilder_.build();
                    }
                    to_bitField0_ |= 0x100;
                }
                if ((from_bitField0_ & 0x200) != 0) {
                    if (this.weightControlBuilder_ == null) {
                        result.weightControl_ = this.weightControl_;
                    } else {
                        result.weightControl_ = (OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl) this.weightControlBuilder_.build();
                    }
                    to_bitField0_ |= 0x200;
                }
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }

            public Builder setField(Descriptors.FieldDescriptor field, Object value) {
                return (Builder) super.setField(field, value);
            }

            public Builder clearField(Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }

            public Builder clearOneof(Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }

            public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }

            public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }

            public Builder mergeFrom(Message other) {
                if (other instanceof OmnicommMessageOuterClass.OmnicommMessage.Other)
                    return mergeFrom((OmnicommMessageOuterClass.OmnicommMessage.Other) other);
                super.mergeFrom(other);
                return this;
            }

            public Builder mergeFrom(OmnicommMessageOuterClass.OmnicommMessage.Other other) {
                if (other == OmnicommMessageOuterClass.OmnicommMessage.Other.getDefaultInstance())
                    return this;
                if (other.hasOneWire())
                    mergeOneWire(other.getOneWire());
                if (other.hasPherip())
                    mergePherip(other.getPherip());
                if (other.hasExCAN())
                    mergeExCAN(other.getExCAN());
                if (other.hasTahoDDD())
                    mergeTahoDDD(other.getTahoDDD());
                if (other.hasAPC())
                    mergeAPC(other.getAPC());
                if (other.hasMobileEye())
                    mergeMobileEye(other.getMobileEye());
                if (other.hasSafeDriving())
                    mergeSafeDriving(other.getSafeDriving());
                if (other.hasGenComm())
                    mergeGenComm(other.getGenComm());
                if (other.hasFuelSensorModbus())
                    mergeFuelSensorModbus(other.getFuelSensorModbus());
                if (other.hasWeightControl())
                    mergeWeightControl(other.getWeightControl());
                mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                OmnicommMessageOuterClass.OmnicommMessage.Other parsedMessage = null;
                try {
                    parsedMessage = (OmnicommMessageOuterClass.OmnicommMessage.Other) OmnicommMessageOuterClass.OmnicommMessage.Other.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (OmnicommMessageOuterClass.OmnicommMessage.Other) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null)
                        mergeFrom(parsedMessage);
                }
                return this;
            }

            public boolean hasOneWire() {
                return ((this.bitField0_ & 0x1) != 0);
            }

            public OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire getOneWire() {
                if (this.oneWireBuilder_ == null)
                    return (this.oneWire_ == null) ? OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire.getDefaultInstance() : this.oneWire_;
                return (OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire) this.oneWireBuilder_.getMessage();
            }

            public Builder setOneWire(OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire value) {
                if (this.oneWireBuilder_ == null) {
                    if (value == null)
                        throw new NullPointerException();
                    this.oneWire_ = value;
                    onChanged();
                } else {
                    this.oneWireBuilder_.setMessage((AbstractMessage) value);
                }
                this.bitField0_ |= 0x1;
                return this;
            }

            public Builder setOneWire(OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire.Builder builderForValue) {
                if (this.oneWireBuilder_ == null) {
                    this.oneWire_ = builderForValue.build();
                    onChanged();
                } else {
                    this.oneWireBuilder_.setMessage((AbstractMessage) builderForValue.build());
                }
                this.bitField0_ |= 0x1;
                return this;
            }

            public Builder mergeOneWire(OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire value) {
                if (this.oneWireBuilder_ == null) {
                    if ((this.bitField0_ & 0x1) != 0 && this.oneWire_ != null && this.oneWire_ != OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire.getDefaultInstance()) {
                        this.oneWire_ = OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire.newBuilder(this.oneWire_).mergeFrom(value).buildPartial();
                    } else {
                        this.oneWire_ = value;
                    }
                    onChanged();
                } else {
                    this.oneWireBuilder_.mergeFrom((AbstractMessage) value);
                }
                this.bitField0_ |= 0x1;
                return this;
            }

            public Builder clearOneWire() {
                if (this.oneWireBuilder_ == null) {
                    this.oneWire_ = null;
                    onChanged();
                } else {
                    this.oneWireBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFE;
                return this;
            }

            public OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire.Builder getOneWireBuilder() {
                this.bitField0_ |= 0x1;
                onChanged();
                return (OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire.Builder) getOneWireFieldBuilder().getBuilder();
            }

            public OmnicommMessageOuterClass.OmnicommMessage.Other.OneWireOrBuilder getOneWireOrBuilder() {
                if (this.oneWireBuilder_ != null)
                    return (OmnicommMessageOuterClass.OmnicommMessage.Other.OneWireOrBuilder) this.oneWireBuilder_.getMessageOrBuilder();
                return (this.oneWire_ == null) ? OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire.getDefaultInstance() : this.oneWire_;
            }

            private SingleFieldBuilderV3<OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire, OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire.Builder, OmnicommMessageOuterClass.OmnicommMessage.Other.OneWireOrBuilder> getOneWireFieldBuilder() {
                if (this.oneWireBuilder_ == null) {
                    this.oneWireBuilder_ = new SingleFieldBuilderV3((AbstractMessage) getOneWire(), (AbstractMessage.BuilderParent) getParentForChildren(), isClean());
                    this.oneWire_ = null;
                }
                return this.oneWireBuilder_;
            }

            public boolean hasPherip() {
                return ((this.bitField0_ & 0x2) != 0);
            }

            public OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip getPherip() {
                if (this.pheripBuilder_ == null)
                    return (this.pherip_ == null) ? OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip.getDefaultInstance() : this.pherip_;
                return (OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip) this.pheripBuilder_.getMessage();
            }

            public Builder setPherip(OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip value) {
                if (this.pheripBuilder_ == null) {
                    if (value == null)
                        throw new NullPointerException();
                    this.pherip_ = value;
                    onChanged();
                } else {
                    this.pheripBuilder_.setMessage((AbstractMessage) value);
                }
                this.bitField0_ |= 0x2;
                return this;
            }

            public Builder setPherip(OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip.Builder builderForValue) {
                if (this.pheripBuilder_ == null) {
                    this.pherip_ = builderForValue.build();
                    onChanged();
                } else {
                    this.pheripBuilder_.setMessage((AbstractMessage) builderForValue.build());
                }
                this.bitField0_ |= 0x2;
                return this;
            }

            public Builder mergePherip(OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip value) {
                if (this.pheripBuilder_ == null) {
                    if ((this.bitField0_ & 0x2) != 0 && this.pherip_ != null && this.pherip_ != OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip.getDefaultInstance()) {
                        this.pherip_ = OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip.newBuilder(this.pherip_).mergeFrom(value).buildPartial();
                    } else {
                        this.pherip_ = value;
                    }
                    onChanged();
                } else {
                    this.pheripBuilder_.mergeFrom((AbstractMessage) value);
                }
                this.bitField0_ |= 0x2;
                return this;
            }

            public Builder clearPherip() {
                if (this.pheripBuilder_ == null) {
                    this.pherip_ = null;
                    onChanged();
                } else {
                    this.pheripBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFD;
                return this;
            }

            public OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip.Builder getPheripBuilder() {
                this.bitField0_ |= 0x2;
                onChanged();
                return (OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip.Builder) getPheripFieldBuilder().getBuilder();
            }

            public OmnicommMessageOuterClass.OmnicommMessage.Other.PheripOrBuilder getPheripOrBuilder() {
                if (this.pheripBuilder_ != null)
                    return (OmnicommMessageOuterClass.OmnicommMessage.Other.PheripOrBuilder) this.pheripBuilder_.getMessageOrBuilder();
                return (this.pherip_ == null) ? OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip.getDefaultInstance() : this.pherip_;
            }

            private SingleFieldBuilderV3<OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip, OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip.Builder, OmnicommMessageOuterClass.OmnicommMessage.Other.PheripOrBuilder> getPheripFieldBuilder() {
                if (this.pheripBuilder_ == null) {
                    this.pheripBuilder_ = new SingleFieldBuilderV3((AbstractMessage) getPherip(), (AbstractMessage.BuilderParent) getParentForChildren(), isClean());
                    this.pherip_ = null;
                }
                return this.pheripBuilder_;
            }

            public boolean hasExCAN() {
                return ((this.bitField0_ & 0x4) != 0);
            }

            public OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN getExCAN() {
                if (this.exCANBuilder_ == null)
                    return (this.exCAN_ == null) ? OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN.getDefaultInstance() : this.exCAN_;
                return (OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN) this.exCANBuilder_.getMessage();
            }

            public Builder setExCAN(OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN value) {
                if (this.exCANBuilder_ == null) {
                    if (value == null)
                        throw new NullPointerException();
                    this.exCAN_ = value;
                    onChanged();
                } else {
                    this.exCANBuilder_.setMessage((AbstractMessage) value);
                }
                this.bitField0_ |= 0x4;
                return this;
            }

            public Builder setExCAN(OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN.Builder builderForValue) {
                if (this.exCANBuilder_ == null) {
                    this.exCAN_ = builderForValue.build();
                    onChanged();
                } else {
                    this.exCANBuilder_.setMessage((AbstractMessage) builderForValue.build());
                }
                this.bitField0_ |= 0x4;
                return this;
            }

            public Builder mergeExCAN(OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN value) {
                if (this.exCANBuilder_ == null) {
                    if ((this.bitField0_ & 0x4) != 0 && this.exCAN_ != null && this.exCAN_ != OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN.getDefaultInstance()) {
                        this.exCAN_ = OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN.newBuilder(this.exCAN_).mergeFrom(value).buildPartial();
                    } else {
                        this.exCAN_ = value;
                    }
                    onChanged();
                } else {
                    this.exCANBuilder_.mergeFrom((AbstractMessage) value);
                }
                this.bitField0_ |= 0x4;
                return this;
            }

            public Builder clearExCAN() {
                if (this.exCANBuilder_ == null) {
                    this.exCAN_ = null;
                    onChanged();
                } else {
                    this.exCANBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFB;
                return this;
            }

            public OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN.Builder getExCANBuilder() {
                this.bitField0_ |= 0x4;
                onChanged();
                return (OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN.Builder) getExCANFieldBuilder().getBuilder();
            }

            public OmnicommMessageOuterClass.OmnicommMessage.Other.ExCANOrBuilder getExCANOrBuilder() {
                if (this.exCANBuilder_ != null)
                    return (OmnicommMessageOuterClass.OmnicommMessage.Other.ExCANOrBuilder) this.exCANBuilder_.getMessageOrBuilder();
                return (this.exCAN_ == null) ? OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN.getDefaultInstance() : this.exCAN_;
            }

            private SingleFieldBuilderV3<OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN, OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN.Builder, OmnicommMessageOuterClass.OmnicommMessage.Other.ExCANOrBuilder> getExCANFieldBuilder() {
                if (this.exCANBuilder_ == null) {
                    this.exCANBuilder_ = new SingleFieldBuilderV3((AbstractMessage) getExCAN(), (AbstractMessage.BuilderParent) getParentForChildren(), isClean());
                    this.exCAN_ = null;
                }
                return this.exCANBuilder_;
            }

            public boolean hasTahoDDD() {
                return ((this.bitField0_ & 0x8) != 0);
            }

            public OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD getTahoDDD() {
                if (this.tahoDDDBuilder_ == null)
                    return (this.tahoDDD_ == null) ? OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD.getDefaultInstance() : this.tahoDDD_;
                return (OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD) this.tahoDDDBuilder_.getMessage();
            }

            public Builder setTahoDDD(OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD value) {
                if (this.tahoDDDBuilder_ == null) {
                    if (value == null)
                        throw new NullPointerException();
                    this.tahoDDD_ = value;
                    onChanged();
                } else {
                    this.tahoDDDBuilder_.setMessage((AbstractMessage) value);
                }
                this.bitField0_ |= 0x8;
                return this;
            }

            public Builder setTahoDDD(OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD.Builder builderForValue) {
                if (this.tahoDDDBuilder_ == null) {
                    this.tahoDDD_ = builderForValue.build();
                    onChanged();
                } else {
                    this.tahoDDDBuilder_.setMessage((AbstractMessage) builderForValue.build());
                }
                this.bitField0_ |= 0x8;
                return this;
            }

            public Builder mergeTahoDDD(OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD value) {
                if (this.tahoDDDBuilder_ == null) {
                    if ((this.bitField0_ & 0x8) != 0 && this.tahoDDD_ != null && this.tahoDDD_ != OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD.getDefaultInstance()) {
                        this.tahoDDD_ = OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD.newBuilder(this.tahoDDD_).mergeFrom(value).buildPartial();
                    } else {
                        this.tahoDDD_ = value;
                    }
                    onChanged();
                } else {
                    this.tahoDDDBuilder_.mergeFrom((AbstractMessage) value);
                }
                this.bitField0_ |= 0x8;
                return this;
            }

            public Builder clearTahoDDD() {
                if (this.tahoDDDBuilder_ == null) {
                    this.tahoDDD_ = null;
                    onChanged();
                } else {
                    this.tahoDDDBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFF7;
                return this;
            }

            public OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD.Builder getTahoDDDBuilder() {
                this.bitField0_ |= 0x8;
                onChanged();
                return (OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD.Builder) getTahoDDDFieldBuilder().getBuilder();
            }

            public OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDDOrBuilder getTahoDDDOrBuilder() {
                if (this.tahoDDDBuilder_ != null)
                    return (OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDDOrBuilder) this.tahoDDDBuilder_.getMessageOrBuilder();
                return (this.tahoDDD_ == null) ? OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD.getDefaultInstance() : this.tahoDDD_;
            }

            private SingleFieldBuilderV3<OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD, OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD.Builder, OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDDOrBuilder> getTahoDDDFieldBuilder() {
                if (this.tahoDDDBuilder_ == null) {
                    this.tahoDDDBuilder_ = new SingleFieldBuilderV3((AbstractMessage) getTahoDDD(), (AbstractMessage.BuilderParent) getParentForChildren(), isClean());
                    this.tahoDDD_ = null;
                }
                return this.tahoDDDBuilder_;
            }

            public boolean hasAPC() {
                return ((this.bitField0_ & 0x10) != 0);
            }

            public OmnicommMessageOuterClass.OmnicommMessage.Other.APC getAPC() {
                if (this.aPCBuilder_ == null)
                    return (this.aPC_ == null) ? OmnicommMessageOuterClass.OmnicommMessage.Other.APC.getDefaultInstance() : this.aPC_;
                return (OmnicommMessageOuterClass.OmnicommMessage.Other.APC) this.aPCBuilder_.getMessage();
            }

            public Builder setAPC(OmnicommMessageOuterClass.OmnicommMessage.Other.APC value) {
                if (this.aPCBuilder_ == null) {
                    if (value == null)
                        throw new NullPointerException();
                    this.aPC_ = value;
                    onChanged();
                } else {
                    this.aPCBuilder_.setMessage((AbstractMessage) value);
                }
                this.bitField0_ |= 0x10;
                return this;
            }

            public Builder setAPC(OmnicommMessageOuterClass.OmnicommMessage.Other.APC.Builder builderForValue) {
                if (this.aPCBuilder_ == null) {
                    this.aPC_ = builderForValue.build();
                    onChanged();
                } else {
                    this.aPCBuilder_.setMessage((AbstractMessage) builderForValue.build());
                }
                this.bitField0_ |= 0x10;
                return this;
            }

            public Builder mergeAPC(OmnicommMessageOuterClass.OmnicommMessage.Other.APC value) {
                if (this.aPCBuilder_ == null) {
                    if ((this.bitField0_ & 0x10) != 0 && this.aPC_ != null && this.aPC_ != OmnicommMessageOuterClass.OmnicommMessage.Other.APC.getDefaultInstance()) {
                        this.aPC_ = OmnicommMessageOuterClass.OmnicommMessage.Other.APC.newBuilder(this.aPC_).mergeFrom(value).buildPartial();
                    } else {
                        this.aPC_ = value;
                    }
                    onChanged();
                } else {
                    this.aPCBuilder_.mergeFrom((AbstractMessage) value);
                }
                this.bitField0_ |= 0x10;
                return this;
            }

            public Builder clearAPC() {
                if (this.aPCBuilder_ == null) {
                    this.aPC_ = null;
                    onChanged();
                } else {
                    this.aPCBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFEF;
                return this;
            }

            public OmnicommMessageOuterClass.OmnicommMessage.Other.APC.Builder getAPCBuilder() {
                this.bitField0_ |= 0x10;
                onChanged();
                return (OmnicommMessageOuterClass.OmnicommMessage.Other.APC.Builder) getAPCFieldBuilder().getBuilder();
            }

            public OmnicommMessageOuterClass.OmnicommMessage.Other.APCOrBuilder getAPCOrBuilder() {
                if (this.aPCBuilder_ != null)
                    return (OmnicommMessageOuterClass.OmnicommMessage.Other.APCOrBuilder) this.aPCBuilder_.getMessageOrBuilder();
                return (this.aPC_ == null) ? OmnicommMessageOuterClass.OmnicommMessage.Other.APC.getDefaultInstance() : this.aPC_;
            }

            private SingleFieldBuilderV3<OmnicommMessageOuterClass.OmnicommMessage.Other.APC, OmnicommMessageOuterClass.OmnicommMessage.Other.APC.Builder, OmnicommMessageOuterClass.OmnicommMessage.Other.APCOrBuilder> getAPCFieldBuilder() {
                if (this.aPCBuilder_ == null) {
                    this.aPCBuilder_ = new SingleFieldBuilderV3((AbstractMessage) getAPC(), (AbstractMessage.BuilderParent) getParentForChildren(), isClean());
                    this.aPC_ = null;
                }
                return this.aPCBuilder_;
            }

            public boolean hasMobileEye() {
                return ((this.bitField0_ & 0x20) != 0);
            }

            public OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye getMobileEye() {
                if (this.mobileEyeBuilder_ == null)
                    return (this.mobileEye_ == null) ? OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye.getDefaultInstance() : this.mobileEye_;
                return (OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye) this.mobileEyeBuilder_.getMessage();
            }

            public Builder setMobileEye(OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye value) {
                if (this.mobileEyeBuilder_ == null) {
                    if (value == null)
                        throw new NullPointerException();
                    this.mobileEye_ = value;
                    onChanged();
                } else {
                    this.mobileEyeBuilder_.setMessage((AbstractMessage) value);
                }
                this.bitField0_ |= 0x20;
                return this;
            }

            public Builder setMobileEye(OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye.Builder builderForValue) {
                if (this.mobileEyeBuilder_ == null) {
                    this.mobileEye_ = builderForValue.build();
                    onChanged();
                } else {
                    this.mobileEyeBuilder_.setMessage((AbstractMessage) builderForValue.build());
                }
                this.bitField0_ |= 0x20;
                return this;
            }

            public Builder mergeMobileEye(OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye value) {
                if (this.mobileEyeBuilder_ == null) {
                    if ((this.bitField0_ & 0x20) != 0 && this.mobileEye_ != null && this.mobileEye_ != OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye.getDefaultInstance()) {
                        this.mobileEye_ = OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye.newBuilder(this.mobileEye_).mergeFrom(value).buildPartial();
                    } else {
                        this.mobileEye_ = value;
                    }
                    onChanged();
                } else {
                    this.mobileEyeBuilder_.mergeFrom((AbstractMessage) value);
                }
                this.bitField0_ |= 0x20;
                return this;
            }

            public Builder clearMobileEye() {
                if (this.mobileEyeBuilder_ == null) {
                    this.mobileEye_ = null;
                    onChanged();
                } else {
                    this.mobileEyeBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFDF;
                return this;
            }

            public OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye.Builder getMobileEyeBuilder() {
                this.bitField0_ |= 0x20;
                onChanged();
                return (OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye.Builder) getMobileEyeFieldBuilder().getBuilder();
            }

            public OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEyeOrBuilder getMobileEyeOrBuilder() {
                if (this.mobileEyeBuilder_ != null)
                    return (OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEyeOrBuilder) this.mobileEyeBuilder_.getMessageOrBuilder();
                return (this.mobileEye_ == null) ? OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye.getDefaultInstance() : this.mobileEye_;
            }

            private SingleFieldBuilderV3<OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye, OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye.Builder, OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEyeOrBuilder> getMobileEyeFieldBuilder() {
                if (this.mobileEyeBuilder_ == null) {
                    this.mobileEyeBuilder_ = new SingleFieldBuilderV3((AbstractMessage) getMobileEye(), (AbstractMessage.BuilderParent) getParentForChildren(), isClean());
                    this.mobileEye_ = null;
                }
                return this.mobileEyeBuilder_;
            }

            public boolean hasSafeDriving() {
                return ((this.bitField0_ & 0x40) != 0);
            }

            public OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving getSafeDriving() {
                if (this.safeDrivingBuilder_ == null)
                    return (this.safeDriving_ == null) ? OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving.getDefaultInstance() : this.safeDriving_;
                return (OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving) this.safeDrivingBuilder_.getMessage();
            }

            public Builder setSafeDriving(OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving value) {
                if (this.safeDrivingBuilder_ == null) {
                    if (value == null)
                        throw new NullPointerException();
                    this.safeDriving_ = value;
                    onChanged();
                } else {
                    this.safeDrivingBuilder_.setMessage((AbstractMessage) value);
                }
                this.bitField0_ |= 0x40;
                return this;
            }

            public Builder setSafeDriving(OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving.Builder builderForValue) {
                if (this.safeDrivingBuilder_ == null) {
                    this.safeDriving_ = builderForValue.build();
                    onChanged();
                } else {
                    this.safeDrivingBuilder_.setMessage((AbstractMessage) builderForValue.build());
                }
                this.bitField0_ |= 0x40;
                return this;
            }

            public Builder mergeSafeDriving(OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving value) {
                if (this.safeDrivingBuilder_ == null) {
                    if ((this.bitField0_ & 0x40) != 0 && this.safeDriving_ != null && this.safeDriving_ != OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving.getDefaultInstance()) {
                        this.safeDriving_ = OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving.newBuilder(this.safeDriving_).mergeFrom(value).buildPartial();
                    } else {
                        this.safeDriving_ = value;
                    }
                    onChanged();
                } else {
                    this.safeDrivingBuilder_.mergeFrom((AbstractMessage) value);
                }
                this.bitField0_ |= 0x40;
                return this;
            }

            public Builder clearSafeDriving() {
                if (this.safeDrivingBuilder_ == null) {
                    this.safeDriving_ = null;
                    onChanged();
                } else {
                    this.safeDrivingBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFBF;
                return this;
            }

            public OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving.Builder getSafeDrivingBuilder() {
                this.bitField0_ |= 0x40;
                onChanged();
                return (OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving.Builder) getSafeDrivingFieldBuilder().getBuilder();
            }

            public OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDrivingOrBuilder getSafeDrivingOrBuilder() {
                if (this.safeDrivingBuilder_ != null)
                    return (OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDrivingOrBuilder) this.safeDrivingBuilder_.getMessageOrBuilder();
                return (this.safeDriving_ == null) ? OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving.getDefaultInstance() : this.safeDriving_;
            }

            private SingleFieldBuilderV3<OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving, OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving.Builder, OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDrivingOrBuilder> getSafeDrivingFieldBuilder() {
                if (this.safeDrivingBuilder_ == null) {
                    this.safeDrivingBuilder_ = new SingleFieldBuilderV3((AbstractMessage) getSafeDriving(), (AbstractMessage.BuilderParent) getParentForChildren(), isClean());
                    this.safeDriving_ = null;
                }
                return this.safeDrivingBuilder_;
            }

            public boolean hasGenComm() {
                return ((this.bitField0_ & 0x80) != 0);
            }

            public OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm getGenComm() {
                if (this.genCommBuilder_ == null)
                    return (this.genComm_ == null) ? OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm.getDefaultInstance() : this.genComm_;
                return (OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm) this.genCommBuilder_.getMessage();
            }

            public Builder setGenComm(OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm value) {
                if (this.genCommBuilder_ == null) {
                    if (value == null)
                        throw new NullPointerException();
                    this.genComm_ = value;
                    onChanged();
                } else {
                    this.genCommBuilder_.setMessage((AbstractMessage) value);
                }
                this.bitField0_ |= 0x80;
                return this;
            }

            public Builder setGenComm(OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm.Builder builderForValue) {
                if (this.genCommBuilder_ == null) {
                    this.genComm_ = builderForValue.build();
                    onChanged();
                } else {
                    this.genCommBuilder_.setMessage((AbstractMessage) builderForValue.build());
                }
                this.bitField0_ |= 0x80;
                return this;
            }

            public Builder mergeGenComm(OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm value) {
                if (this.genCommBuilder_ == null) {
                    if ((this.bitField0_ & 0x80) != 0 && this.genComm_ != null && this.genComm_ != OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm.getDefaultInstance()) {
                        this.genComm_ = OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm.newBuilder(this.genComm_).mergeFrom(value).buildPartial();
                    } else {
                        this.genComm_ = value;
                    }
                    onChanged();
                } else {
                    this.genCommBuilder_.mergeFrom((AbstractMessage) value);
                }
                this.bitField0_ |= 0x80;
                return this;
            }

            public Builder clearGenComm() {
                if (this.genCommBuilder_ == null) {
                    this.genComm_ = null;
                    onChanged();
                } else {
                    this.genCommBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFF7F;
                return this;
            }

            public OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm.Builder getGenCommBuilder() {
                this.bitField0_ |= 0x80;
                onChanged();
                return (OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm.Builder) getGenCommFieldBuilder().getBuilder();
            }

            public OmnicommMessageOuterClass.OmnicommMessage.Other.GenCommOrBuilder getGenCommOrBuilder() {
                if (this.genCommBuilder_ != null)
                    return (OmnicommMessageOuterClass.OmnicommMessage.Other.GenCommOrBuilder) this.genCommBuilder_.getMessageOrBuilder();
                return (this.genComm_ == null) ? OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm.getDefaultInstance() : this.genComm_;
            }

            private SingleFieldBuilderV3<OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm, OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm.Builder, OmnicommMessageOuterClass.OmnicommMessage.Other.GenCommOrBuilder> getGenCommFieldBuilder() {
                if (this.genCommBuilder_ == null) {
                    this.genCommBuilder_ = new SingleFieldBuilderV3((AbstractMessage) getGenComm(), (AbstractMessage.BuilderParent) getParentForChildren(), isClean());
                    this.genComm_ = null;
                }
                return this.genCommBuilder_;
            }

            public boolean hasFuelSensorModbus() {
                return ((this.bitField0_ & 0x100) != 0);
            }

            public OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus getFuelSensorModbus() {
                if (this.fuelSensorModbusBuilder_ == null)
                    return (this.fuelSensorModbus_ == null) ? OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus.getDefaultInstance() : this.fuelSensorModbus_;
                return (OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus) this.fuelSensorModbusBuilder_.getMessage();
            }

            public Builder setFuelSensorModbus(OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus value) {
                if (this.fuelSensorModbusBuilder_ == null) {
                    if (value == null)
                        throw new NullPointerException();
                    this.fuelSensorModbus_ = value;
                    onChanged();
                } else {
                    this.fuelSensorModbusBuilder_.setMessage((AbstractMessage) value);
                }
                this.bitField0_ |= 0x100;
                return this;
            }

            public Builder setFuelSensorModbus(OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus.Builder builderForValue) {
                if (this.fuelSensorModbusBuilder_ == null) {
                    this.fuelSensorModbus_ = builderForValue.build();
                    onChanged();
                } else {
                    this.fuelSensorModbusBuilder_.setMessage((AbstractMessage) builderForValue.build());
                }
                this.bitField0_ |= 0x100;
                return this;
            }

            public Builder mergeFuelSensorModbus(OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus value) {
                if (this.fuelSensorModbusBuilder_ == null) {
                    if ((this.bitField0_ & 0x100) != 0 && this.fuelSensorModbus_ != null && this.fuelSensorModbus_ != OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus.getDefaultInstance()) {
                        this.fuelSensorModbus_ = OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus.newBuilder(this.fuelSensorModbus_).mergeFrom(value).buildPartial();
                    } else {
                        this.fuelSensorModbus_ = value;
                    }
                    onChanged();
                } else {
                    this.fuelSensorModbusBuilder_.mergeFrom((AbstractMessage) value);
                }
                this.bitField0_ |= 0x100;
                return this;
            }

            public Builder clearFuelSensorModbus() {
                if (this.fuelSensorModbusBuilder_ == null) {
                    this.fuelSensorModbus_ = null;
                    onChanged();
                } else {
                    this.fuelSensorModbusBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFEFF;
                return this;
            }

            public OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus.Builder getFuelSensorModbusBuilder() {
                this.bitField0_ |= 0x100;
                onChanged();
                return (OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus.Builder) getFuelSensorModbusFieldBuilder().getBuilder();
            }

            public OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbusOrBuilder getFuelSensorModbusOrBuilder() {
                if (this.fuelSensorModbusBuilder_ != null)
                    return (OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbusOrBuilder) this.fuelSensorModbusBuilder_.getMessageOrBuilder();
                return (this.fuelSensorModbus_ == null) ? OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus.getDefaultInstance() : this.fuelSensorModbus_;
            }

            private SingleFieldBuilderV3<OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus, OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus.Builder, OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbusOrBuilder> getFuelSensorModbusFieldBuilder() {
                if (this.fuelSensorModbusBuilder_ == null) {
                    this.fuelSensorModbusBuilder_ = new SingleFieldBuilderV3((AbstractMessage) getFuelSensorModbus(), (AbstractMessage.BuilderParent) getParentForChildren(), isClean());
                    this.fuelSensorModbus_ = null;
                }
                return this.fuelSensorModbusBuilder_;
            }

            public boolean hasWeightControl() {
                return ((this.bitField0_ & 0x200) != 0);
            }

            public OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl getWeightControl() {
                if (this.weightControlBuilder_ == null)
                    return (this.weightControl_ == null) ? OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl.getDefaultInstance() : this.weightControl_;
                return (OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl) this.weightControlBuilder_.getMessage();
            }

            public Builder setWeightControl(OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl value) {
                if (this.weightControlBuilder_ == null) {
                    if (value == null)
                        throw new NullPointerException();
                    this.weightControl_ = value;
                    onChanged();
                } else {
                    this.weightControlBuilder_.setMessage((AbstractMessage) value);
                }
                this.bitField0_ |= 0x200;
                return this;
            }

            public Builder setWeightControl(OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl.Builder builderForValue) {
                if (this.weightControlBuilder_ == null) {
                    this.weightControl_ = builderForValue.build();
                    onChanged();
                } else {
                    this.weightControlBuilder_.setMessage((AbstractMessage) builderForValue.build());
                }
                this.bitField0_ |= 0x200;
                return this;
            }

            public Builder mergeWeightControl(OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl value) {
                if (this.weightControlBuilder_ == null) {
                    if ((this.bitField0_ & 0x200) != 0 && this.weightControl_ != null && this.weightControl_ != OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl.getDefaultInstance()) {
                        this.weightControl_ = OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl.newBuilder(this.weightControl_).mergeFrom(value).buildPartial();
                    } else {
                        this.weightControl_ = value;
                    }
                    onChanged();
                } else {
                    this.weightControlBuilder_.mergeFrom((AbstractMessage) value);
                }
                this.bitField0_ |= 0x200;
                return this;
            }

            public Builder clearWeightControl() {
                if (this.weightControlBuilder_ == null) {
                    this.weightControl_ = null;
                    onChanged();
                } else {
                    this.weightControlBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFDFF;
                return this;
            }

            public OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl.Builder getWeightControlBuilder() {
                this.bitField0_ |= 0x200;
                onChanged();
                return (OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl.Builder) getWeightControlFieldBuilder().getBuilder();
            }

            public OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControlOrBuilder getWeightControlOrBuilder() {
                if (this.weightControlBuilder_ != null)
                    return (OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControlOrBuilder) this.weightControlBuilder_.getMessageOrBuilder();
                return (this.weightControl_ == null) ? OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl.getDefaultInstance() : this.weightControl_;
            }

            private SingleFieldBuilderV3<OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl, OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl.Builder, OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControlOrBuilder> getWeightControlFieldBuilder() {
                if (this.weightControlBuilder_ == null) {
                    this.weightControlBuilder_ = new SingleFieldBuilderV3((AbstractMessage) getWeightControl(), (AbstractMessage.BuilderParent) getParentForChildren(), isClean());
                    this.weightControl_ = null;
                }
                return this.weightControlBuilder_;
            }

            public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
                return (Builder) super.setUnknownFields(unknownFields);
            }

            public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
                return (Builder) super.mergeUnknownFields(unknownFields);
            }
        }

        public static final class ICONDt extends GeneratedMessageV3 implements ICONDtOrBuilder {
            private static final long serialVersionUID = 0L;

            private int bitField0_;

            public static final int VEHICLESTATUS_FIELD_NUMBER = 1;

            private ByteString vehicleStatus_;

            public static final int VEHICLESTATUSID_FIELD_NUMBER = 2;

            private int vehicleStatusID_;

            public static final int VEHICLESTATUSGROUPID_FIELD_NUMBER = 3;

            private int vehicleStatusGroupID_;

            public static final int MSGID_FIELD_NUMBER = 4;

            private long msgID_;

            public static final int MSGSTATUS_FIELD_NUMBER = 5;

            private int msgStatus_;

            public static final int STATDATE_FIELD_NUMBER = 6;

            private int statDate_;

            public static final int VEHICLESTATUSPREV_FIELD_NUMBER = 7;

            private ByteString vehicleStatusPrev_;

            public static final int VEHICLESTATUSFLAGS_FIELD_NUMBER = 8;

            private int vehicleStatusFlags_;

            private byte memoizedIsInitialized;

            private ICONDt(GeneratedMessageV3.Builder<?> builder) {
                super(builder);
                this.memoizedIsInitialized = -1;
            }

            private ICONDt() {
                this.memoizedIsInitialized = -1;
                this.vehicleStatus_ = ByteString.EMPTY;
                this.vehicleStatusPrev_ = ByteString.EMPTY;
            }

            protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) {
                return new ICONDt();
            }

            public final UnknownFieldSet getUnknownFields() {
                return this.unknownFields;
            }

            private ICONDt(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                this();
                if (extensionRegistry == null)
                    throw new NullPointerException();
                int mutable_bitField0_ = 0;
                UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
                try {
                    boolean done = false;
                    while (!done) {
                        int tag = input.readTag();
                        switch (tag) {
                            case 0:
                                done = true;
                                continue;
                            case 10:
                                this.bitField0_ |= 0x1;
                                this.vehicleStatus_ = input.readBytes();
                                continue;
                            case 16:
                                this.bitField0_ |= 0x2;
                                this.vehicleStatusID_ = input.readUInt32();
                                continue;
                            case 24:
                                this.bitField0_ |= 0x4;
                                this.vehicleStatusGroupID_ = input.readUInt32();
                                continue;
                            case 32:
                                this.bitField0_ |= 0x8;
                                this.msgID_ = input.readUInt64();
                                continue;
                            case 40:
                                this.bitField0_ |= 0x10;
                                this.msgStatus_ = input.readUInt32();
                                continue;
                            case 48:
                                this.bitField0_ |= 0x20;
                                this.statDate_ = input.readUInt32();
                                continue;
                            case 58:
                                this.bitField0_ |= 0x40;
                                this.vehicleStatusPrev_ = input.readBytes();
                                continue;
                            case 64:
                                this.bitField0_ |= 0x80;
                                this.vehicleStatusFlags_ = input.readUInt32();
                                continue;
                        }
                        if (!parseUnknownField(input, unknownFields, extensionRegistry, tag))
                            done = true;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e) {
                    throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this);
                } finally {
                    this.unknownFields = unknownFields.build();
                    makeExtensionsImmutable();
                }
            }

            public static final Descriptors.Descriptor getDescriptor() {
                return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_ICONDt_descriptor;
            }

            protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
                return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_ICONDt_fieldAccessorTable.ensureFieldAccessorsInitialized(ICONDt.class, Builder.class);
            }

            public boolean hasVehicleStatus() {
                return ((this.bitField0_ & 0x1) != 0);
            }

            public ByteString getVehicleStatus() {
                return this.vehicleStatus_;
            }

            public boolean hasVehicleStatusID() {
                return ((this.bitField0_ & 0x2) != 0);
            }

            public int getVehicleStatusID() {
                return this.vehicleStatusID_;
            }

            public boolean hasVehicleStatusGroupID() {
                return ((this.bitField0_ & 0x4) != 0);
            }

            public int getVehicleStatusGroupID() {
                return this.vehicleStatusGroupID_;
            }

            public boolean hasMsgID() {
                return ((this.bitField0_ & 0x8) != 0);
            }

            public long getMsgID() {
                return this.msgID_;
            }

            public boolean hasMsgStatus() {
                return ((this.bitField0_ & 0x10) != 0);
            }

            public int getMsgStatus() {
                return this.msgStatus_;
            }

            public boolean hasStatDate() {
                return ((this.bitField0_ & 0x20) != 0);
            }

            public int getStatDate() {
                return this.statDate_;
            }

            public boolean hasVehicleStatusPrev() {
                return ((this.bitField0_ & 0x40) != 0);
            }

            public ByteString getVehicleStatusPrev() {
                return this.vehicleStatusPrev_;
            }

            public boolean hasVehicleStatusFlags() {
                return ((this.bitField0_ & 0x80) != 0);
            }

            public int getVehicleStatusFlags() {
                return this.vehicleStatusFlags_;
            }

            public final boolean isInitialized() {
                byte isInitialized = this.memoizedIsInitialized;
                if (isInitialized == 1)
                    return true;
                if (isInitialized == 0)
                    return false;
                this.memoizedIsInitialized = 1;
                return true;
            }

            public void writeTo(CodedOutputStream output) throws IOException {
                if ((this.bitField0_ & 0x1) != 0)
                    output.writeBytes(1, this.vehicleStatus_);
                if ((this.bitField0_ & 0x2) != 0)
                    output.writeUInt32(2, this.vehicleStatusID_);
                if ((this.bitField0_ & 0x4) != 0)
                    output.writeUInt32(3, this.vehicleStatusGroupID_);
                if ((this.bitField0_ & 0x8) != 0)
                    output.writeUInt64(4, this.msgID_);
                if ((this.bitField0_ & 0x10) != 0)
                    output.writeUInt32(5, this.msgStatus_);
                if ((this.bitField0_ & 0x20) != 0)
                    output.writeUInt32(6, this.statDate_);
                if ((this.bitField0_ & 0x40) != 0)
                    output.writeBytes(7, this.vehicleStatusPrev_);
                if ((this.bitField0_ & 0x80) != 0)
                    output.writeUInt32(8, this.vehicleStatusFlags_);
                this.unknownFields.writeTo(output);
            }

            public int getSerializedSize() {
                int size = this.memoizedSize;
                if (size != -1)
                    return size;
                size = 0;
                if ((this.bitField0_ & 0x1) != 0)
                    size += CodedOutputStream.computeBytesSize(1, this.vehicleStatus_);
                if ((this.bitField0_ & 0x2) != 0)
                    size += CodedOutputStream.computeUInt32Size(2, this.vehicleStatusID_);
                if ((this.bitField0_ & 0x4) != 0)
                    size += CodedOutputStream.computeUInt32Size(3, this.vehicleStatusGroupID_);
                if ((this.bitField0_ & 0x8) != 0)
                    size += CodedOutputStream.computeUInt64Size(4, this.msgID_);
                if ((this.bitField0_ & 0x10) != 0)
                    size += CodedOutputStream.computeUInt32Size(5, this.msgStatus_);
                if ((this.bitField0_ & 0x20) != 0)
                    size += CodedOutputStream.computeUInt32Size(6, this.statDate_);
                if ((this.bitField0_ & 0x40) != 0)
                    size += CodedOutputStream.computeBytesSize(7, this.vehicleStatusPrev_);
                if ((this.bitField0_ & 0x80) != 0)
                    size += CodedOutputStream.computeUInt32Size(8, this.vehicleStatusFlags_);
                size += this.unknownFields.getSerializedSize();
                this.memoizedSize = size;
                return size;
            }

            public boolean equals(Object obj) {
                if (obj == this)
                    return true;
                if (!(obj instanceof ICONDt))
                    return super.equals(obj);
                ICONDt other = (ICONDt) obj;
                if (hasVehicleStatus() != other.hasVehicleStatus())
                    return false;
                if (hasVehicleStatus() && !getVehicleStatus().equals(other.getVehicleStatus()))
                    return false;
                if (hasVehicleStatusID() != other.hasVehicleStatusID())
                    return false;
                if (hasVehicleStatusID() && getVehicleStatusID() != other.getVehicleStatusID())
                    return false;
                if (hasVehicleStatusGroupID() != other.hasVehicleStatusGroupID())
                    return false;
                if (hasVehicleStatusGroupID() && getVehicleStatusGroupID() != other.getVehicleStatusGroupID())
                    return false;
                if (hasMsgID() != other.hasMsgID())
                    return false;
                if (hasMsgID() && getMsgID() != other.getMsgID())
                    return false;
                if (hasMsgStatus() != other.hasMsgStatus())
                    return false;
                if (hasMsgStatus() && getMsgStatus() != other.getMsgStatus())
                    return false;
                if (hasStatDate() != other.hasStatDate())
                    return false;
                if (hasStatDate() && getStatDate() != other.getStatDate())
                    return false;
                if (hasVehicleStatusPrev() != other.hasVehicleStatusPrev())
                    return false;
                if (hasVehicleStatusPrev() && !getVehicleStatusPrev().equals(other.getVehicleStatusPrev()))
                    return false;
                if (hasVehicleStatusFlags() != other.hasVehicleStatusFlags())
                    return false;
                if (hasVehicleStatusFlags() && getVehicleStatusFlags() != other.getVehicleStatusFlags())
                    return false;
                if (!this.unknownFields.equals(other.unknownFields))
                    return false;
                return true;
            }

            public int hashCode() {
                if (this.memoizedHashCode != 0)
                    return this.memoizedHashCode;
                int hash = 41;
                hash = 19 * hash + getDescriptor().hashCode();
                if (hasVehicleStatus()) {
                    hash = 37 * hash + 1;
                    hash = 53 * hash + getVehicleStatus().hashCode();
                }
                if (hasVehicleStatusID()) {
                    hash = 37 * hash + 2;
                    hash = 53 * hash + getVehicleStatusID();
                }
                if (hasVehicleStatusGroupID()) {
                    hash = 37 * hash + 3;
                    hash = 53 * hash + getVehicleStatusGroupID();
                }
                if (hasMsgID()) {
                    hash = 37 * hash + 4;
                    hash = 53 * hash + Internal.hashLong(getMsgID());
                }
                if (hasMsgStatus()) {
                    hash = 37 * hash + 5;
                    hash = 53 * hash + getMsgStatus();
                }
                if (hasStatDate()) {
                    hash = 37 * hash + 6;
                    hash = 53 * hash + getStatDate();
                }
                if (hasVehicleStatusPrev()) {
                    hash = 37 * hash + 7;
                    hash = 53 * hash + getVehicleStatusPrev().hashCode();
                }
                if (hasVehicleStatusFlags()) {
                    hash = 37 * hash + 8;
                    hash = 53 * hash + getVehicleStatusFlags();
                }
                hash = 29 * hash + this.unknownFields.hashCode();
                this.memoizedHashCode = hash;
                return hash;
            }

            public static ICONDt parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
                return (ICONDt) PARSER.parseFrom(data);
            }

            public static ICONDt parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return (ICONDt) PARSER.parseFrom(data, extensionRegistry);
            }

            public static ICONDt parseFrom(ByteString data) throws InvalidProtocolBufferException {
                return (ICONDt) PARSER.parseFrom(data);
            }

            public static ICONDt parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return (ICONDt) PARSER.parseFrom(data, extensionRegistry);
            }

            public static ICONDt parseFrom(byte[] data) throws InvalidProtocolBufferException {
                return (ICONDt) PARSER.parseFrom(data);
            }

            public static ICONDt parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return (ICONDt) PARSER.parseFrom(data, extensionRegistry);
            }

            public static ICONDt parseFrom(InputStream input) throws IOException {
                return (ICONDt) GeneratedMessageV3.parseWithIOException(PARSER, input);
            }

            public static ICONDt parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                return (ICONDt) GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
            }

            public static ICONDt parseDelimitedFrom(InputStream input) throws IOException {
                return (ICONDt) GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
            }

            public static ICONDt parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                return (ICONDt) GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
            }

            public static ICONDt parseFrom(CodedInputStream input) throws IOException {
                return (ICONDt) GeneratedMessageV3.parseWithIOException(PARSER, input);
            }

            public static ICONDt parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                return (ICONDt) GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
            }

            public Builder newBuilderForType() {
                return newBuilder();
            }

            public static Builder newBuilder() {
                return DEFAULT_INSTANCE.toBuilder();
            }

            public static Builder newBuilder(ICONDt prototype) {
                return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
            }

            public Builder toBuilder() {
                return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder()).mergeFrom(this);
            }

            protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
                Builder builder = new Builder(parent);
                return builder;
            }

            public static final class Builder extends GeneratedMessageV3.Builder<Builder> implements OmnicommMessageOuterClass.OmnicommMessage.ICONDtOrBuilder {
                private int bitField0_;

                private ByteString vehicleStatus_;

                private int vehicleStatusID_;

                private int vehicleStatusGroupID_;

                private long msgID_;

                private int msgStatus_;

                private int statDate_;

                private ByteString vehicleStatusPrev_;

                private int vehicleStatusFlags_;

                public static final Descriptors.Descriptor getDescriptor() {
                    return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_ICONDt_descriptor;
                }

                protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
                    return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_ICONDt_fieldAccessorTable.ensureFieldAccessorsInitialized(OmnicommMessageOuterClass.OmnicommMessage.ICONDt.class, Builder.class);
                }

                private Builder() {
                    this.vehicleStatus_ = ByteString.EMPTY;
                    this.vehicleStatusPrev_ = ByteString.EMPTY;
                    maybeForceBuilderInitialization();
                }

                private Builder(GeneratedMessageV3.BuilderParent parent) {
                    super(parent);
                    this.vehicleStatus_ = ByteString.EMPTY;
                    this.vehicleStatusPrev_ = ByteString.EMPTY;
                    maybeForceBuilderInitialization();
                }

                private void maybeForceBuilderInitialization() {
                    if (OmnicommMessageOuterClass.OmnicommMessage.ICONDt.alwaysUseFieldBuilders) ;
                }

                public Builder clear() {
                    super.clear();
                    this.vehicleStatus_ = ByteString.EMPTY;
                    this.bitField0_ &= 0xFFFFFFFE;
                    this.vehicleStatusID_ = 0;
                    this.bitField0_ &= 0xFFFFFFFD;
                    this.vehicleStatusGroupID_ = 0;
                    this.bitField0_ &= 0xFFFFFFFB;
                    this.msgID_ = 0L;
                    this.bitField0_ &= 0xFFFFFFF7;
                    this.msgStatus_ = 0;
                    this.bitField0_ &= 0xFFFFFFEF;
                    this.statDate_ = 0;
                    this.bitField0_ &= 0xFFFFFFDF;
                    this.vehicleStatusPrev_ = ByteString.EMPTY;
                    this.bitField0_ &= 0xFFFFFFBF;
                    this.vehicleStatusFlags_ = 0;
                    this.bitField0_ &= 0xFFFFFF7F;
                    return this;
                }

                public Descriptors.Descriptor getDescriptorForType() {
                    return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_ICONDt_descriptor;
                }

                public OmnicommMessageOuterClass.OmnicommMessage.ICONDt getDefaultInstanceForType() {
                    return OmnicommMessageOuterClass.OmnicommMessage.ICONDt.getDefaultInstance();
                }

                public OmnicommMessageOuterClass.OmnicommMessage.ICONDt build() {
                    OmnicommMessageOuterClass.OmnicommMessage.ICONDt result = buildPartial();
                    if (!result.isInitialized())
                        throw newUninitializedMessageException(result);
                    return result;
                }

                public OmnicommMessageOuterClass.OmnicommMessage.ICONDt buildPartial() {
                    OmnicommMessageOuterClass.OmnicommMessage.ICONDt result = new OmnicommMessageOuterClass.OmnicommMessage.ICONDt(this);
                    int from_bitField0_ = this.bitField0_;
                    int to_bitField0_ = 0;
                    if ((from_bitField0_ & 0x1) != 0)
                        to_bitField0_ |= 0x1;
                    result.vehicleStatus_ = this.vehicleStatus_;
                    if ((from_bitField0_ & 0x2) != 0) {
                        result.vehicleStatusID_ = this.vehicleStatusID_;
                        to_bitField0_ |= 0x2;
                    }
                    if ((from_bitField0_ & 0x4) != 0) {
                        result.vehicleStatusGroupID_ = this.vehicleStatusGroupID_;
                        to_bitField0_ |= 0x4;
                    }
                    if ((from_bitField0_ & 0x8) != 0) {
                        result.msgID_ = this.msgID_;
                        to_bitField0_ |= 0x8;
                    }
                    if ((from_bitField0_ & 0x10) != 0) {
                        result.msgStatus_ = this.msgStatus_;
                        to_bitField0_ |= 0x10;
                    }
                    if ((from_bitField0_ & 0x20) != 0) {
                        result.statDate_ = this.statDate_;
                        to_bitField0_ |= 0x20;
                    }
                    if ((from_bitField0_ & 0x40) != 0)
                        to_bitField0_ |= 0x40;
                    result.vehicleStatusPrev_ = this.vehicleStatusPrev_;
                    if ((from_bitField0_ & 0x80) != 0) {
                        result.vehicleStatusFlags_ = this.vehicleStatusFlags_;
                        to_bitField0_ |= 0x80;
                    }
                    result.bitField0_ = to_bitField0_;
                    onBuilt();
                    return result;
                }

                public Builder clone() {
                    return (Builder) super.clone();
                }

                public Builder setField(Descriptors.FieldDescriptor field, Object value) {
                    return (Builder) super.setField(field, value);
                }

                public Builder clearField(Descriptors.FieldDescriptor field) {
                    return (Builder) super.clearField(field);
                }

                public Builder clearOneof(Descriptors.OneofDescriptor oneof) {
                    return (Builder) super.clearOneof(oneof);
                }

                public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
                    return (Builder) super.setRepeatedField(field, index, value);
                }

                public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
                    return (Builder) super.addRepeatedField(field, value);
                }

                public Builder mergeFrom(Message other) {
                    if (other instanceof OmnicommMessageOuterClass.OmnicommMessage.ICONDt)
                        return mergeFrom((OmnicommMessageOuterClass.OmnicommMessage.ICONDt) other);
                    super.mergeFrom(other);
                    return this;
                }

                public Builder mergeFrom(OmnicommMessageOuterClass.OmnicommMessage.ICONDt other) {
                    if (other == OmnicommMessageOuterClass.OmnicommMessage.ICONDt.getDefaultInstance())
                        return this;
                    if (other.hasVehicleStatus())
                        setVehicleStatus(other.getVehicleStatus());
                    if (other.hasVehicleStatusID())
                        setVehicleStatusID(other.getVehicleStatusID());
                    if (other.hasVehicleStatusGroupID())
                        setVehicleStatusGroupID(other.getVehicleStatusGroupID());
                    if (other.hasMsgID())
                        setMsgID(other.getMsgID());
                    if (other.hasMsgStatus())
                        setMsgStatus(other.getMsgStatus());
                    if (other.hasStatDate())
                        setStatDate(other.getStatDate());
                    if (other.hasVehicleStatusPrev())
                        setVehicleStatusPrev(other.getVehicleStatusPrev());
                    if (other.hasVehicleStatusFlags())
                        setVehicleStatusFlags(other.getVehicleStatusFlags());
                    mergeUnknownFields(other.unknownFields);
                    onChanged();
                    return this;
                }

                public final boolean isInitialized() {
                    return true;
                }

                public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                    OmnicommMessageOuterClass.OmnicommMessage.ICONDt parsedMessage = null;
                    try {
                        parsedMessage = (OmnicommMessageOuterClass.OmnicommMessage.ICONDt) OmnicommMessageOuterClass.OmnicommMessage.ICONDt.PARSER.parsePartialFrom(input, extensionRegistry);
                    } catch (InvalidProtocolBufferException e) {
                        parsedMessage = (OmnicommMessageOuterClass.OmnicommMessage.ICONDt) e.getUnfinishedMessage();
                        throw e.unwrapIOException();
                    } finally {
                        if (parsedMessage != null)
                            mergeFrom(parsedMessage);
                    }
                    return this;
                }

                public boolean hasVehicleStatus() {
                    return ((this.bitField0_ & 0x1) != 0);
                }

                public ByteString getVehicleStatus() {
                    return this.vehicleStatus_;
                }

                public Builder setVehicleStatus(ByteString value) {
                    if (value == null)
                        throw new NullPointerException();
                    this.bitField0_ |= 0x1;
                    this.vehicleStatus_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearVehicleStatus() {
                    this.bitField0_ &= 0xFFFFFFFE;
                    this.vehicleStatus_ = OmnicommMessageOuterClass.OmnicommMessage.ICONDt.getDefaultInstance().getVehicleStatus();
                    onChanged();
                    return this;
                }

                public boolean hasVehicleStatusID() {
                    return ((this.bitField0_ & 0x2) != 0);
                }

                public int getVehicleStatusID() {
                    return this.vehicleStatusID_;
                }

                public Builder setVehicleStatusID(int value) {
                    this.bitField0_ |= 0x2;
                    this.vehicleStatusID_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearVehicleStatusID() {
                    this.bitField0_ &= 0xFFFFFFFD;
                    this.vehicleStatusID_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasVehicleStatusGroupID() {
                    return ((this.bitField0_ & 0x4) != 0);
                }

                public int getVehicleStatusGroupID() {
                    return this.vehicleStatusGroupID_;
                }

                public Builder setVehicleStatusGroupID(int value) {
                    this.bitField0_ |= 0x4;
                    this.vehicleStatusGroupID_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearVehicleStatusGroupID() {
                    this.bitField0_ &= 0xFFFFFFFB;
                    this.vehicleStatusGroupID_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasMsgID() {
                    return ((this.bitField0_ & 0x8) != 0);
                }

                public long getMsgID() {
                    return this.msgID_;
                }

                public Builder setMsgID(long value) {
                    this.bitField0_ |= 0x8;
                    this.msgID_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearMsgID() {
                    this.bitField0_ &= 0xFFFFFFF7;
                    this.msgID_ = 0L;
                    onChanged();
                    return this;
                }

                public boolean hasMsgStatus() {
                    return ((this.bitField0_ & 0x10) != 0);
                }

                public int getMsgStatus() {
                    return this.msgStatus_;
                }

                public Builder setMsgStatus(int value) {
                    this.bitField0_ |= 0x10;
                    this.msgStatus_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearMsgStatus() {
                    this.bitField0_ &= 0xFFFFFFEF;
                    this.msgStatus_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasStatDate() {
                    return ((this.bitField0_ & 0x20) != 0);
                }

                public int getStatDate() {
                    return this.statDate_;
                }

                public Builder setStatDate(int value) {
                    this.bitField0_ |= 0x20;
                    this.statDate_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearStatDate() {
                    this.bitField0_ &= 0xFFFFFFDF;
                    this.statDate_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasVehicleStatusPrev() {
                    return ((this.bitField0_ & 0x40) != 0);
                }

                public ByteString getVehicleStatusPrev() {
                    return this.vehicleStatusPrev_;
                }

                public Builder setVehicleStatusPrev(ByteString value) {
                    if (value == null)
                        throw new NullPointerException();
                    this.bitField0_ |= 0x40;
                    this.vehicleStatusPrev_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearVehicleStatusPrev() {
                    this.bitField0_ &= 0xFFFFFFBF;
                    this.vehicleStatusPrev_ = OmnicommMessageOuterClass.OmnicommMessage.ICONDt.getDefaultInstance().getVehicleStatusPrev();
                    onChanged();
                    return this;
                }

                public boolean hasVehicleStatusFlags() {
                    return ((this.bitField0_ & 0x80) != 0);
                }

                public int getVehicleStatusFlags() {
                    return this.vehicleStatusFlags_;
                }

                public Builder setVehicleStatusFlags(int value) {
                    this.bitField0_ |= 0x80;
                    this.vehicleStatusFlags_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearVehicleStatusFlags() {
                    this.bitField0_ &= 0xFFFFFF7F;
                    this.vehicleStatusFlags_ = 0;
                    onChanged();
                    return this;
                }

                public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
                    return (Builder) super.setUnknownFields(unknownFields);
                }

                public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
                    return (Builder) super.mergeUnknownFields(unknownFields);
                }
            }

            private static final ICONDt DEFAULT_INSTANCE = new ICONDt();

            public static ICONDt getDefaultInstance() {
                return DEFAULT_INSTANCE;
            }

            @Deprecated
            public static final Parser<ICONDt> PARSER = (Parser<ICONDt>) new AbstractParser<ICONDt>() {
                public OmnicommMessageOuterClass.OmnicommMessage.ICONDt parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                    return new OmnicommMessageOuterClass.OmnicommMessage.ICONDt(input, extensionRegistry);
                }
            };

            public static Parser<ICONDt> parser() {
                return PARSER;
            }

            public Parser<ICONDt> getParserForType() {
                return PARSER;
            }

            public ICONDt getDefaultInstanceForType() {
                return DEFAULT_INSTANCE;
            }
        }

        public static final class Builder extends GeneratedMessageV3.Builder<ICONDt.Builder> implements ICONDtOrBuilder {
            private int bitField0_;

            private ByteString vehicleStatus_;

            private int vehicleStatusID_;

            private int vehicleStatusGroupID_;

            private long msgID_;

            private int msgStatus_;

            private int statDate_;

            private ByteString vehicleStatusPrev_;

            private int vehicleStatusFlags_;

            public static final Descriptors.Descriptor getDescriptor() {
                return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_ICONDt_descriptor;
            }

            protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
                return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_ICONDt_fieldAccessorTable.ensureFieldAccessorsInitialized(OmnicommMessageOuterClass.OmnicommMessage.ICONDt.class, Builder.class);
            }

            private Builder() {
                this.vehicleStatus_ = ByteString.EMPTY;
                this.vehicleStatusPrev_ = ByteString.EMPTY;
                maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessageV3.BuilderParent parent) {
                super(parent);
                this.vehicleStatus_ = ByteString.EMPTY;
                this.vehicleStatusPrev_ = ByteString.EMPTY;
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (OmnicommMessageOuterClass.OmnicommMessage.ICONDt.alwaysUseFieldBuilders) ;
            }

            public Builder clear() {
                super.clear();
                this.vehicleStatus_ = ByteString.EMPTY;
                this.bitField0_ &= 0xFFFFFFFE;
                this.vehicleStatusID_ = 0;
                this.bitField0_ &= 0xFFFFFFFD;
                this.vehicleStatusGroupID_ = 0;
                this.bitField0_ &= 0xFFFFFFFB;
                this.msgID_ = 0L;
                this.bitField0_ &= 0xFFFFFFF7;
                this.msgStatus_ = 0;
                this.bitField0_ &= 0xFFFFFFEF;
                this.statDate_ = 0;
                this.bitField0_ &= 0xFFFFFFDF;
                this.vehicleStatusPrev_ = ByteString.EMPTY;
                this.bitField0_ &= 0xFFFFFFBF;
                this.vehicleStatusFlags_ = 0;
                this.bitField0_ &= 0xFFFFFF7F;
                return this;
            }

            public Descriptors.Descriptor getDescriptorForType() {
                return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_ICONDt_descriptor;
            }

            public OmnicommMessageOuterClass.OmnicommMessage.ICONDt getDefaultInstanceForType() {
                return OmnicommMessageOuterClass.OmnicommMessage.ICONDt.getDefaultInstance();
            }

            public OmnicommMessageOuterClass.OmnicommMessage.ICONDt build() {
                OmnicommMessageOuterClass.OmnicommMessage.ICONDt result = buildPartial();
                if (!result.isInitialized())
                    throw newUninitializedMessageException(result);
                return result;
            }

            public OmnicommMessageOuterClass.OmnicommMessage.ICONDt buildPartial() {
                OmnicommMessageOuterClass.OmnicommMessage.ICONDt result = new OmnicommMessageOuterClass.OmnicommMessage.ICONDt(this);
                int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) != 0)
                    to_bitField0_ |= 0x1;
                result.vehicleStatus_ = this.vehicleStatus_;
                if ((from_bitField0_ & 0x2) != 0) {
                    result.vehicleStatusID_ = this.vehicleStatusID_;
                    to_bitField0_ |= 0x2;
                }
                if ((from_bitField0_ & 0x4) != 0) {
                    result.vehicleStatusGroupID_ = this.vehicleStatusGroupID_;
                    to_bitField0_ |= 0x4;
                }
                if ((from_bitField0_ & 0x8) != 0) {
                    result.msgID_ = this.msgID_;
                    to_bitField0_ |= 0x8;
                }
                if ((from_bitField0_ & 0x10) != 0) {
                    result.msgStatus_ = this.msgStatus_;
                    to_bitField0_ |= 0x10;
                }
                if ((from_bitField0_ & 0x20) != 0) {
                    result.statDate_ = this.statDate_;
                    to_bitField0_ |= 0x20;
                }
                if ((from_bitField0_ & 0x40) != 0)
                    to_bitField0_ |= 0x40;
                result.vehicleStatusPrev_ = this.vehicleStatusPrev_;
                if ((from_bitField0_ & 0x80) != 0) {
                    result.vehicleStatusFlags_ = this.vehicleStatusFlags_;
                    to_bitField0_ |= 0x80;
                }
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }

            public Builder setField(Descriptors.FieldDescriptor field, Object value) {
                return (Builder) super.setField(field, value);
            }

            public Builder clearField(Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }

            public Builder clearOneof(Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }

            public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }

            public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }

            public Builder mergeFrom(Message other) {
                if (other instanceof OmnicommMessageOuterClass.OmnicommMessage.ICONDt)
                    return mergeFrom((OmnicommMessageOuterClass.OmnicommMessage.ICONDt) other);
                super.mergeFrom(other);
                return this;
            }

            public Builder mergeFrom(OmnicommMessageOuterClass.OmnicommMessage.ICONDt other) {
                if (other == OmnicommMessageOuterClass.OmnicommMessage.ICONDt.getDefaultInstance())
                    return this;
                if (other.hasVehicleStatus())
                    setVehicleStatus(other.getVehicleStatus());
                if (other.hasVehicleStatusID())
                    setVehicleStatusID(other.getVehicleStatusID());
                if (other.hasVehicleStatusGroupID())
                    setVehicleStatusGroupID(other.getVehicleStatusGroupID());
                if (other.hasMsgID())
                    setMsgID(other.getMsgID());
                if (other.hasMsgStatus())
                    setMsgStatus(other.getMsgStatus());
                if (other.hasStatDate())
                    setStatDate(other.getStatDate());
                if (other.hasVehicleStatusPrev())
                    setVehicleStatusPrev(other.getVehicleStatusPrev());
                if (other.hasVehicleStatusFlags())
                    setVehicleStatusFlags(other.getVehicleStatusFlags());
                mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                OmnicommMessageOuterClass.OmnicommMessage.ICONDt parsedMessage = null;
                try {
                    parsedMessage = (OmnicommMessageOuterClass.OmnicommMessage.ICONDt) OmnicommMessageOuterClass.OmnicommMessage.ICONDt.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (OmnicommMessageOuterClass.OmnicommMessage.ICONDt) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null)
                        mergeFrom(parsedMessage);
                }
                return this;
            }

            public boolean hasVehicleStatus() {
                return ((this.bitField0_ & 0x1) != 0);
            }

            public ByteString getVehicleStatus() {
                return this.vehicleStatus_;
            }

            public Builder setVehicleStatus(ByteString value) {
                if (value == null)
                    throw new NullPointerException();
                this.bitField0_ |= 0x1;
                this.vehicleStatus_ = value;
                onChanged();
                return this;
            }

            public Builder clearVehicleStatus() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.vehicleStatus_ = OmnicommMessageOuterClass.OmnicommMessage.ICONDt.getDefaultInstance().getVehicleStatus();
                onChanged();
                return this;
            }

            public boolean hasVehicleStatusID() {
                return ((this.bitField0_ & 0x2) != 0);
            }

            public int getVehicleStatusID() {
                return this.vehicleStatusID_;
            }

            public Builder setVehicleStatusID(int value) {
                this.bitField0_ |= 0x2;
                this.vehicleStatusID_ = value;
                onChanged();
                return this;
            }

            public Builder clearVehicleStatusID() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.vehicleStatusID_ = 0;
                onChanged();
                return this;
            }

            public boolean hasVehicleStatusGroupID() {
                return ((this.bitField0_ & 0x4) != 0);
            }

            public int getVehicleStatusGroupID() {
                return this.vehicleStatusGroupID_;
            }

            public Builder setVehicleStatusGroupID(int value) {
                this.bitField0_ |= 0x4;
                this.vehicleStatusGroupID_ = value;
                onChanged();
                return this;
            }

            public Builder clearVehicleStatusGroupID() {
                this.bitField0_ &= 0xFFFFFFFB;
                this.vehicleStatusGroupID_ = 0;
                onChanged();
                return this;
            }

            public boolean hasMsgID() {
                return ((this.bitField0_ & 0x8) != 0);
            }

            public long getMsgID() {
                return this.msgID_;
            }

            public Builder setMsgID(long value) {
                this.bitField0_ |= 0x8;
                this.msgID_ = value;
                onChanged();
                return this;
            }

            public Builder clearMsgID() {
                this.bitField0_ &= 0xFFFFFFF7;
                this.msgID_ = 0L;
                onChanged();
                return this;
            }

            public boolean hasMsgStatus() {
                return ((this.bitField0_ & 0x10) != 0);
            }

            public int getMsgStatus() {
                return this.msgStatus_;
            }

            public Builder setMsgStatus(int value) {
                this.bitField0_ |= 0x10;
                this.msgStatus_ = value;
                onChanged();
                return this;
            }

            public Builder clearMsgStatus() {
                this.bitField0_ &= 0xFFFFFFEF;
                this.msgStatus_ = 0;
                onChanged();
                return this;
            }

            public boolean hasStatDate() {
                return ((this.bitField0_ & 0x20) != 0);
            }

            public int getStatDate() {
                return this.statDate_;
            }

            public Builder setStatDate(int value) {
                this.bitField0_ |= 0x20;
                this.statDate_ = value;
                onChanged();
                return this;
            }

            public Builder clearStatDate() {
                this.bitField0_ &= 0xFFFFFFDF;
                this.statDate_ = 0;
                onChanged();
                return this;
            }

            public boolean hasVehicleStatusPrev() {
                return ((this.bitField0_ & 0x40) != 0);
            }

            public ByteString getVehicleStatusPrev() {
                return this.vehicleStatusPrev_;
            }

            public Builder setVehicleStatusPrev(ByteString value) {
                if (value == null)
                    throw new NullPointerException();
                this.bitField0_ |= 0x40;
                this.vehicleStatusPrev_ = value;
                onChanged();
                return this;
            }

            public Builder clearVehicleStatusPrev() {
                this.bitField0_ &= 0xFFFFFFBF;
                this.vehicleStatusPrev_ = OmnicommMessageOuterClass.OmnicommMessage.ICONDt.getDefaultInstance().getVehicleStatusPrev();
                onChanged();
                return this;
            }

            public boolean hasVehicleStatusFlags() {
                return ((this.bitField0_ & 0x80) != 0);
            }

            public int getVehicleStatusFlags() {
                return this.vehicleStatusFlags_;
            }

            public Builder setVehicleStatusFlags(int value) {
                this.bitField0_ |= 0x80;
                this.vehicleStatusFlags_ = value;
                onChanged();
                return this;
            }

            public Builder clearVehicleStatusFlags() {
                this.bitField0_ &= 0xFFFFFF7F;
                this.vehicleStatusFlags_ = 0;
                onChanged();
                return this;
            }

            public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
                return (Builder) super.setUnknownFields(unknownFields);
            }

            public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
                return (Builder) super.mergeUnknownFields(unknownFields);
            }
        }

        public static final class OBDDt_J1979 extends GeneratedMessageV3 implements OBDDt_J1979OrBuilder {
            private static final long serialVersionUID = 0L;

            private int bitField0_;

            public static final int SID_0X01_PID_0X0D_FIELD_NUMBER = 1;

            private int sID0X01PID0X0D_;

            public static final int SID_0X01_PID_0X31_FIELD_NUMBER = 2;

            private int sID0X01PID0X31_;

            public static final int SID_0X01_PID_0X4E_FIELD_NUMBER = 3;

            private int sID0X01PID0X4E_;

            public static final int SID_0X01_PID_0X42_FIELD_NUMBER = 4;

            private int sID0X01PID0X42_;

            public static final int SID_0X01_PID_0X0C_FIELD_NUMBER = 5;

            private int sID0X01PID0X0C_;

            public static final int SID_0X01_PID_0X2F_FIELD_NUMBER = 6;

            private int sID0X01PID0X2F_;

            public static final int SID_0X01_PID_0X5E_FIELD_NUMBER = 7;

            private int sID0X01PID0X5E_;

            public static final int SID_0X01_PID_0X5C_FIELD_NUMBER = 8;

            private int sID0X01PID0X5C_;

            public static final int SID_0X01_PID_0X05_FIELD_NUMBER = 9;

            private int sID0X01PID0X05_;

            public static final int SID_0X01_PID_0X01_FIELD_NUMBER = 10;

            private int sID0X01PID0X01_;

            public static final int SID_0X09_PID_0X02_FIELD_NUMBER = 11;

            private ByteString sID0X09PID0X02_;

            public static final int SID_0X01_PID_0X5E_QUANTITY_FIELD_NUMBER = 12;

            private int sID0X01PID0X5EQuantity_;

            private byte memoizedIsInitialized;

            private OBDDt_J1979(GeneratedMessageV3.Builder<?> builder) {
                super(builder);
                this.memoizedIsInitialized = -1;
            }

            private OBDDt_J1979() {
                this.memoizedIsInitialized = -1;
                this.sID0X09PID0X02_ = ByteString.EMPTY;
            }

            protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) {
                return new OBDDt_J1979();
            }

            public final UnknownFieldSet getUnknownFields() {
                return this.unknownFields;
            }

            private OBDDt_J1979(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                this();
                if (extensionRegistry == null)
                    throw new NullPointerException();
                int mutable_bitField0_ = 0;
                UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
                try {
                    boolean done = false;
                    while (!done) {
                        int tag = input.readTag();
                        switch (tag) {
                            case 0:
                                done = true;
                                continue;
                            case 8:
                                this.bitField0_ |= 0x1;
                                this.sID0X01PID0X0D_ = input.readUInt32();
                                continue;
                            case 16:
                                this.bitField0_ |= 0x2;
                                this.sID0X01PID0X31_ = input.readUInt32();
                                continue;
                            case 24:
                                this.bitField0_ |= 0x4;
                                this.sID0X01PID0X4E_ = input.readUInt32();
                                continue;
                            case 32:
                                this.bitField0_ |= 0x8;
                                this.sID0X01PID0X42_ = input.readUInt32();
                                continue;
                            case 40:
                                this.bitField0_ |= 0x10;
                                this.sID0X01PID0X0C_ = input.readUInt32();
                                continue;
                            case 48:
                                this.bitField0_ |= 0x20;
                                this.sID0X01PID0X2F_ = input.readUInt32();
                                continue;
                            case 56:
                                this.bitField0_ |= 0x40;
                                this.sID0X01PID0X5E_ = input.readUInt32();
                                continue;
                            case 64:
                                this.bitField0_ |= 0x80;
                                this.sID0X01PID0X5C_ = input.readUInt32();
                                continue;
                            case 72:
                                this.bitField0_ |= 0x100;
                                this.sID0X01PID0X05_ = input.readUInt32();
                                continue;
                            case 80:
                                this.bitField0_ |= 0x200;
                                this.sID0X01PID0X01_ = input.readUInt32();
                                continue;
                            case 90:
                                this.bitField0_ |= 0x400;
                                this.sID0X09PID0X02_ = input.readBytes();
                                continue;
                            case 96:
                                this.bitField0_ |= 0x800;
                                this.sID0X01PID0X5EQuantity_ = input.readUInt32();
                                continue;
                        }
                        if (!parseUnknownField(input, unknownFields, extensionRegistry, tag))
                            done = true;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e) {
                    throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this);
                } finally {
                    this.unknownFields = unknownFields.build();
                    makeExtensionsImmutable();
                }
            }

            public static final Descriptors.Descriptor getDescriptor() {
                return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_OBDDt_J1979_descriptor;
            }

            protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
                return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_OBDDt_J1979_fieldAccessorTable.ensureFieldAccessorsInitialized(OBDDt_J1979.class, Builder.class);
            }

            public boolean hasSID0X01PID0X0D() {
                return ((this.bitField0_ & 0x1) != 0);
            }

            public int getSID0X01PID0X0D() {
                return this.sID0X01PID0X0D_;
            }

            public boolean hasSID0X01PID0X31() {
                return ((this.bitField0_ & 0x2) != 0);
            }

            public int getSID0X01PID0X31() {
                return this.sID0X01PID0X31_;
            }

            public boolean hasSID0X01PID0X4E() {
                return ((this.bitField0_ & 0x4) != 0);
            }

            public int getSID0X01PID0X4E() {
                return this.sID0X01PID0X4E_;
            }

            public boolean hasSID0X01PID0X42() {
                return ((this.bitField0_ & 0x8) != 0);
            }

            public int getSID0X01PID0X42() {
                return this.sID0X01PID0X42_;
            }

            public boolean hasSID0X01PID0X0C() {
                return ((this.bitField0_ & 0x10) != 0);
            }

            public int getSID0X01PID0X0C() {
                return this.sID0X01PID0X0C_;
            }

            public boolean hasSID0X01PID0X2F() {
                return ((this.bitField0_ & 0x20) != 0);
            }

            public int getSID0X01PID0X2F() {
                return this.sID0X01PID0X2F_;
            }

            public boolean hasSID0X01PID0X5E() {
                return ((this.bitField0_ & 0x40) != 0);
            }

            public int getSID0X01PID0X5E() {
                return this.sID0X01PID0X5E_;
            }

            public boolean hasSID0X01PID0X5C() {
                return ((this.bitField0_ & 0x80) != 0);
            }

            public int getSID0X01PID0X5C() {
                return this.sID0X01PID0X5C_;
            }

            public boolean hasSID0X01PID0X05() {
                return ((this.bitField0_ & 0x100) != 0);
            }

            public int getSID0X01PID0X05() {
                return this.sID0X01PID0X05_;
            }

            public boolean hasSID0X01PID0X01() {
                return ((this.bitField0_ & 0x200) != 0);
            }

            public int getSID0X01PID0X01() {
                return this.sID0X01PID0X01_;
            }

            public boolean hasSID0X09PID0X02() {
                return ((this.bitField0_ & 0x400) != 0);
            }

            public ByteString getSID0X09PID0X02() {
                return this.sID0X09PID0X02_;
            }

            public boolean hasSID0X01PID0X5EQuantity() {
                return ((this.bitField0_ & 0x800) != 0);
            }

            public int getSID0X01PID0X5EQuantity() {
                return this.sID0X01PID0X5EQuantity_;
            }

            public final boolean isInitialized() {
                byte isInitialized = this.memoizedIsInitialized;
                if (isInitialized == 1)
                    return true;
                if (isInitialized == 0)
                    return false;
                this.memoizedIsInitialized = 1;
                return true;
            }

            public void writeTo(CodedOutputStream output) throws IOException {
                if ((this.bitField0_ & 0x1) != 0)
                    output.writeUInt32(1, this.sID0X01PID0X0D_);
                if ((this.bitField0_ & 0x2) != 0)
                    output.writeUInt32(2, this.sID0X01PID0X31_);
                if ((this.bitField0_ & 0x4) != 0)
                    output.writeUInt32(3, this.sID0X01PID0X4E_);
                if ((this.bitField0_ & 0x8) != 0)
                    output.writeUInt32(4, this.sID0X01PID0X42_);
                if ((this.bitField0_ & 0x10) != 0)
                    output.writeUInt32(5, this.sID0X01PID0X0C_);
                if ((this.bitField0_ & 0x20) != 0)
                    output.writeUInt32(6, this.sID0X01PID0X2F_);
                if ((this.bitField0_ & 0x40) != 0)
                    output.writeUInt32(7, this.sID0X01PID0X5E_);
                if ((this.bitField0_ & 0x80) != 0)
                    output.writeUInt32(8, this.sID0X01PID0X5C_);
                if ((this.bitField0_ & 0x100) != 0)
                    output.writeUInt32(9, this.sID0X01PID0X05_);
                if ((this.bitField0_ & 0x200) != 0)
                    output.writeUInt32(10, this.sID0X01PID0X01_);
                if ((this.bitField0_ & 0x400) != 0)
                    output.writeBytes(11, this.sID0X09PID0X02_);
                if ((this.bitField0_ & 0x800) != 0)
                    output.writeUInt32(12, this.sID0X01PID0X5EQuantity_);
                this.unknownFields.writeTo(output);
            }

            public int getSerializedSize() {
                int size = this.memoizedSize;
                if (size != -1)
                    return size;
                size = 0;
                if ((this.bitField0_ & 0x1) != 0)
                    size += CodedOutputStream.computeUInt32Size(1, this.sID0X01PID0X0D_);
                if ((this.bitField0_ & 0x2) != 0)
                    size += CodedOutputStream.computeUInt32Size(2, this.sID0X01PID0X31_);
                if ((this.bitField0_ & 0x4) != 0)
                    size += CodedOutputStream.computeUInt32Size(3, this.sID0X01PID0X4E_);
                if ((this.bitField0_ & 0x8) != 0)
                    size += CodedOutputStream.computeUInt32Size(4, this.sID0X01PID0X42_);
                if ((this.bitField0_ & 0x10) != 0)
                    size += CodedOutputStream.computeUInt32Size(5, this.sID0X01PID0X0C_);
                if ((this.bitField0_ & 0x20) != 0)
                    size += CodedOutputStream.computeUInt32Size(6, this.sID0X01PID0X2F_);
                if ((this.bitField0_ & 0x40) != 0)
                    size += CodedOutputStream.computeUInt32Size(7, this.sID0X01PID0X5E_);
                if ((this.bitField0_ & 0x80) != 0)
                    size += CodedOutputStream.computeUInt32Size(8, this.sID0X01PID0X5C_);
                if ((this.bitField0_ & 0x100) != 0)
                    size += CodedOutputStream.computeUInt32Size(9, this.sID0X01PID0X05_);
                if ((this.bitField0_ & 0x200) != 0)
                    size += CodedOutputStream.computeUInt32Size(10, this.sID0X01PID0X01_);
                if ((this.bitField0_ & 0x400) != 0)
                    size += CodedOutputStream.computeBytesSize(11, this.sID0X09PID0X02_);
                if ((this.bitField0_ & 0x800) != 0)
                    size += CodedOutputStream.computeUInt32Size(12, this.sID0X01PID0X5EQuantity_);
                size += this.unknownFields.getSerializedSize();
                this.memoizedSize = size;
                return size;
            }

            public boolean equals(Object obj) {
                if (obj == this)
                    return true;
                if (!(obj instanceof OBDDt_J1979))
                    return super.equals(obj);
                OBDDt_J1979 other = (OBDDt_J1979) obj;
                if (hasSID0X01PID0X0D() != other.hasSID0X01PID0X0D())
                    return false;
                if (hasSID0X01PID0X0D() && getSID0X01PID0X0D() != other.getSID0X01PID0X0D())
                    return false;
                if (hasSID0X01PID0X31() != other.hasSID0X01PID0X31())
                    return false;
                if (hasSID0X01PID0X31() && getSID0X01PID0X31() != other.getSID0X01PID0X31())
                    return false;
                if (hasSID0X01PID0X4E() != other.hasSID0X01PID0X4E())
                    return false;
                if (hasSID0X01PID0X4E() && getSID0X01PID0X4E() != other.getSID0X01PID0X4E())
                    return false;
                if (hasSID0X01PID0X42() != other.hasSID0X01PID0X42())
                    return false;
                if (hasSID0X01PID0X42() && getSID0X01PID0X42() != other.getSID0X01PID0X42())
                    return false;
                if (hasSID0X01PID0X0C() != other.hasSID0X01PID0X0C())
                    return false;
                if (hasSID0X01PID0X0C() && getSID0X01PID0X0C() != other.getSID0X01PID0X0C())
                    return false;
                if (hasSID0X01PID0X2F() != other.hasSID0X01PID0X2F())
                    return false;
                if (hasSID0X01PID0X2F() && getSID0X01PID0X2F() != other.getSID0X01PID0X2F())
                    return false;
                if (hasSID0X01PID0X5E() != other.hasSID0X01PID0X5E())
                    return false;
                if (hasSID0X01PID0X5E() && getSID0X01PID0X5E() != other.getSID0X01PID0X5E())
                    return false;
                if (hasSID0X01PID0X5C() != other.hasSID0X01PID0X5C())
                    return false;
                if (hasSID0X01PID0X5C() && getSID0X01PID0X5C() != other.getSID0X01PID0X5C())
                    return false;
                if (hasSID0X01PID0X05() != other.hasSID0X01PID0X05())
                    return false;
                if (hasSID0X01PID0X05() && getSID0X01PID0X05() != other.getSID0X01PID0X05())
                    return false;
                if (hasSID0X01PID0X01() != other.hasSID0X01PID0X01())
                    return false;
                if (hasSID0X01PID0X01() && getSID0X01PID0X01() != other.getSID0X01PID0X01())
                    return false;
                if (hasSID0X09PID0X02() != other.hasSID0X09PID0X02())
                    return false;
                if (hasSID0X09PID0X02() && !getSID0X09PID0X02().equals(other.getSID0X09PID0X02()))
                    return false;
                if (hasSID0X01PID0X5EQuantity() != other.hasSID0X01PID0X5EQuantity())
                    return false;
                if (hasSID0X01PID0X5EQuantity() && getSID0X01PID0X5EQuantity() != other.getSID0X01PID0X5EQuantity())
                    return false;
                if (!this.unknownFields.equals(other.unknownFields))
                    return false;
                return true;
            }

            public int hashCode() {
                if (this.memoizedHashCode != 0)
                    return this.memoizedHashCode;
                int hash = 41;
                hash = 19 * hash + getDescriptor().hashCode();
                if (hasSID0X01PID0X0D()) {
                    hash = 37 * hash + 1;
                    hash = 53 * hash + getSID0X01PID0X0D();
                }
                if (hasSID0X01PID0X31()) {
                    hash = 37 * hash + 2;
                    hash = 53 * hash + getSID0X01PID0X31();
                }
                if (hasSID0X01PID0X4E()) {
                    hash = 37 * hash + 3;
                    hash = 53 * hash + getSID0X01PID0X4E();
                }
                if (hasSID0X01PID0X42()) {
                    hash = 37 * hash + 4;
                    hash = 53 * hash + getSID0X01PID0X42();
                }
                if (hasSID0X01PID0X0C()) {
                    hash = 37 * hash + 5;
                    hash = 53 * hash + getSID0X01PID0X0C();
                }
                if (hasSID0X01PID0X2F()) {
                    hash = 37 * hash + 6;
                    hash = 53 * hash + getSID0X01PID0X2F();
                }
                if (hasSID0X01PID0X5E()) {
                    hash = 37 * hash + 7;
                    hash = 53 * hash + getSID0X01PID0X5E();
                }
                if (hasSID0X01PID0X5C()) {
                    hash = 37 * hash + 8;
                    hash = 53 * hash + getSID0X01PID0X5C();
                }
                if (hasSID0X01PID0X05()) {
                    hash = 37 * hash + 9;
                    hash = 53 * hash + getSID0X01PID0X05();
                }
                if (hasSID0X01PID0X01()) {
                    hash = 37 * hash + 10;
                    hash = 53 * hash + getSID0X01PID0X01();
                }
                if (hasSID0X09PID0X02()) {
                    hash = 37 * hash + 11;
                    hash = 53 * hash + getSID0X09PID0X02().hashCode();
                }
                if (hasSID0X01PID0X5EQuantity()) {
                    hash = 37 * hash + 12;
                    hash = 53 * hash + getSID0X01PID0X5EQuantity();
                }
                hash = 29 * hash + this.unknownFields.hashCode();
                this.memoizedHashCode = hash;
                return hash;
            }

            public static OBDDt_J1979 parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
                return (OBDDt_J1979) PARSER.parseFrom(data);
            }

            public static OBDDt_J1979 parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return (OBDDt_J1979) PARSER.parseFrom(data, extensionRegistry);
            }

            public static OBDDt_J1979 parseFrom(ByteString data) throws InvalidProtocolBufferException {
                return (OBDDt_J1979) PARSER.parseFrom(data);
            }

            public static OBDDt_J1979 parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return (OBDDt_J1979) PARSER.parseFrom(data, extensionRegistry);
            }

            public static OBDDt_J1979 parseFrom(byte[] data) throws InvalidProtocolBufferException {
                return (OBDDt_J1979) PARSER.parseFrom(data);
            }

            public static OBDDt_J1979 parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return (OBDDt_J1979) PARSER.parseFrom(data, extensionRegistry);
            }

            public static OBDDt_J1979 parseFrom(InputStream input) throws IOException {
                return (OBDDt_J1979) GeneratedMessageV3.parseWithIOException(PARSER, input);
            }

            public static OBDDt_J1979 parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                return (OBDDt_J1979) GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
            }

            public static OBDDt_J1979 parseDelimitedFrom(InputStream input) throws IOException {
                return (OBDDt_J1979) GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
            }

            public static OBDDt_J1979 parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                return (OBDDt_J1979) GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
            }

            public static OBDDt_J1979 parseFrom(CodedInputStream input) throws IOException {
                return (OBDDt_J1979) GeneratedMessageV3.parseWithIOException(PARSER, input);
            }

            public static OBDDt_J1979 parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                return (OBDDt_J1979) GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
            }

            public Builder newBuilderForType() {
                return newBuilder();
            }

            public static Builder newBuilder() {
                return DEFAULT_INSTANCE.toBuilder();
            }

            public static Builder newBuilder(OBDDt_J1979 prototype) {
                return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
            }

            public Builder toBuilder() {
                return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder()).mergeFrom(this);
            }

            protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
                Builder builder = new Builder(parent);
                return builder;
            }

            public static final class Builder extends GeneratedMessageV3.Builder<Builder> implements OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979OrBuilder {
                private int bitField0_;

                private int sID0X01PID0X0D_;

                private int sID0X01PID0X31_;

                private int sID0X01PID0X4E_;

                private int sID0X01PID0X42_;

                private int sID0X01PID0X0C_;

                private int sID0X01PID0X2F_;

                private int sID0X01PID0X5E_;

                private int sID0X01PID0X5C_;

                private int sID0X01PID0X05_;

                private int sID0X01PID0X01_;

                private ByteString sID0X09PID0X02_;

                private int sID0X01PID0X5EQuantity_;

                public static final Descriptors.Descriptor getDescriptor() {
                    return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_OBDDt_J1979_descriptor;
                }

                protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
                    return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_OBDDt_J1979_fieldAccessorTable.ensureFieldAccessorsInitialized(OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979.class, Builder.class);
                }

                private Builder() {
                    this.sID0X09PID0X02_ = ByteString.EMPTY;
                    maybeForceBuilderInitialization();
                }

                private Builder(GeneratedMessageV3.BuilderParent parent) {
                    super(parent);
                    this.sID0X09PID0X02_ = ByteString.EMPTY;
                    maybeForceBuilderInitialization();
                }

                private void maybeForceBuilderInitialization() {
                    if (OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979.alwaysUseFieldBuilders) ;
                }

                public Builder clear() {
                    super.clear();
                    this.sID0X01PID0X0D_ = 0;
                    this.bitField0_ &= 0xFFFFFFFE;
                    this.sID0X01PID0X31_ = 0;
                    this.bitField0_ &= 0xFFFFFFFD;
                    this.sID0X01PID0X4E_ = 0;
                    this.bitField0_ &= 0xFFFFFFFB;
                    this.sID0X01PID0X42_ = 0;
                    this.bitField0_ &= 0xFFFFFFF7;
                    this.sID0X01PID0X0C_ = 0;
                    this.bitField0_ &= 0xFFFFFFEF;
                    this.sID0X01PID0X2F_ = 0;
                    this.bitField0_ &= 0xFFFFFFDF;
                    this.sID0X01PID0X5E_ = 0;
                    this.bitField0_ &= 0xFFFFFFBF;
                    this.sID0X01PID0X5C_ = 0;
                    this.bitField0_ &= 0xFFFFFF7F;
                    this.sID0X01PID0X05_ = 0;
                    this.bitField0_ &= 0xFFFFFEFF;
                    this.sID0X01PID0X01_ = 0;
                    this.bitField0_ &= 0xFFFFFDFF;
                    this.sID0X09PID0X02_ = ByteString.EMPTY;
                    this.bitField0_ &= 0xFFFFFBFF;
                    this.sID0X01PID0X5EQuantity_ = 0;
                    this.bitField0_ &= 0xFFFFF7FF;
                    return this;
                }

                public Descriptors.Descriptor getDescriptorForType() {
                    return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_OBDDt_J1979_descriptor;
                }

                public OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979 getDefaultInstanceForType() {
                    return OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979.getDefaultInstance();
                }

                public OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979 build() {
                    OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979 result = buildPartial();
                    if (!result.isInitialized())
                        throw newUninitializedMessageException(result);
                    return result;
                }

                public OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979 buildPartial() {
                    OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979 result = new OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979(this);
                    int from_bitField0_ = this.bitField0_;
                    int to_bitField0_ = 0;
                    if ((from_bitField0_ & 0x1) != 0) {
                        result.sID0X01PID0X0D_ = this.sID0X01PID0X0D_;
                        to_bitField0_ |= 0x1;
                    }
                    if ((from_bitField0_ & 0x2) != 0) {
                        result.sID0X01PID0X31_ = this.sID0X01PID0X31_;
                        to_bitField0_ |= 0x2;
                    }
                    if ((from_bitField0_ & 0x4) != 0) {
                        result.sID0X01PID0X4E_ = this.sID0X01PID0X4E_;
                        to_bitField0_ |= 0x4;
                    }
                    if ((from_bitField0_ & 0x8) != 0) {
                        result.sID0X01PID0X42_ = this.sID0X01PID0X42_;
                        to_bitField0_ |= 0x8;
                    }
                    if ((from_bitField0_ & 0x10) != 0) {
                        result.sID0X01PID0X0C_ = this.sID0X01PID0X0C_;
                        to_bitField0_ |= 0x10;
                    }
                    if ((from_bitField0_ & 0x20) != 0) {
                        result.sID0X01PID0X2F_ = this.sID0X01PID0X2F_;
                        to_bitField0_ |= 0x20;
                    }
                    if ((from_bitField0_ & 0x40) != 0) {
                        result.sID0X01PID0X5E_ = this.sID0X01PID0X5E_;
                        to_bitField0_ |= 0x40;
                    }
                    if ((from_bitField0_ & 0x80) != 0) {
                        result.sID0X01PID0X5C_ = this.sID0X01PID0X5C_;
                        to_bitField0_ |= 0x80;
                    }
                    if ((from_bitField0_ & 0x100) != 0) {
                        result.sID0X01PID0X05_ = this.sID0X01PID0X05_;
                        to_bitField0_ |= 0x100;
                    }
                    if ((from_bitField0_ & 0x200) != 0) {
                        result.sID0X01PID0X01_ = this.sID0X01PID0X01_;
                        to_bitField0_ |= 0x200;
                    }
                    if ((from_bitField0_ & 0x400) != 0)
                        to_bitField0_ |= 0x400;
                    result.sID0X09PID0X02_ = this.sID0X09PID0X02_;
                    if ((from_bitField0_ & 0x800) != 0) {
                        result.sID0X01PID0X5EQuantity_ = this.sID0X01PID0X5EQuantity_;
                        to_bitField0_ |= 0x800;
                    }
                    result.bitField0_ = to_bitField0_;
                    onBuilt();
                    return result;
                }

                public Builder clone() {
                    return (Builder) super.clone();
                }

                public Builder setField(Descriptors.FieldDescriptor field, Object value) {
                    return (Builder) super.setField(field, value);
                }

                public Builder clearField(Descriptors.FieldDescriptor field) {
                    return (Builder) super.clearField(field);
                }

                public Builder clearOneof(Descriptors.OneofDescriptor oneof) {
                    return (Builder) super.clearOneof(oneof);
                }

                public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
                    return (Builder) super.setRepeatedField(field, index, value);
                }

                public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
                    return (Builder) super.addRepeatedField(field, value);
                }

                public Builder mergeFrom(Message other) {
                    if (other instanceof OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979)
                        return mergeFrom((OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979) other);
                    super.mergeFrom(other);
                    return this;
                }

                public Builder mergeFrom(OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979 other) {
                    if (other == OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979.getDefaultInstance())
                        return this;
                    if (other.hasSID0X01PID0X0D())
                        setSID0X01PID0X0D(other.getSID0X01PID0X0D());
                    if (other.hasSID0X01PID0X31())
                        setSID0X01PID0X31(other.getSID0X01PID0X31());
                    if (other.hasSID0X01PID0X4E())
                        setSID0X01PID0X4E(other.getSID0X01PID0X4E());
                    if (other.hasSID0X01PID0X42())
                        setSID0X01PID0X42(other.getSID0X01PID0X42());
                    if (other.hasSID0X01PID0X0C())
                        setSID0X01PID0X0C(other.getSID0X01PID0X0C());
                    if (other.hasSID0X01PID0X2F())
                        setSID0X01PID0X2F(other.getSID0X01PID0X2F());
                    if (other.hasSID0X01PID0X5E())
                        setSID0X01PID0X5E(other.getSID0X01PID0X5E());
                    if (other.hasSID0X01PID0X5C())
                        setSID0X01PID0X5C(other.getSID0X01PID0X5C());
                    if (other.hasSID0X01PID0X05())
                        setSID0X01PID0X05(other.getSID0X01PID0X05());
                    if (other.hasSID0X01PID0X01())
                        setSID0X01PID0X01(other.getSID0X01PID0X01());
                    if (other.hasSID0X09PID0X02())
                        setSID0X09PID0X02(other.getSID0X09PID0X02());
                    if (other.hasSID0X01PID0X5EQuantity())
                        setSID0X01PID0X5EQuantity(other.getSID0X01PID0X5EQuantity());
                    mergeUnknownFields(other.unknownFields);
                    onChanged();
                    return this;
                }

                public final boolean isInitialized() {
                    return true;
                }

                public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                    OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979 parsedMessage = null;
                    try {
                        parsedMessage = (OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979) OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979.PARSER.parsePartialFrom(input, extensionRegistry);
                    } catch (InvalidProtocolBufferException e) {
                        parsedMessage = (OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979) e.getUnfinishedMessage();
                        throw e.unwrapIOException();
                    } finally {
                        if (parsedMessage != null)
                            mergeFrom(parsedMessage);
                    }
                    return this;
                }

                public boolean hasSID0X01PID0X0D() {
                    return ((this.bitField0_ & 0x1) != 0);
                }

                public int getSID0X01PID0X0D() {
                    return this.sID0X01PID0X0D_;
                }

                public Builder setSID0X01PID0X0D(int value) {
                    this.bitField0_ |= 0x1;
                    this.sID0X01PID0X0D_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearSID0X01PID0X0D() {
                    this.bitField0_ &= 0xFFFFFFFE;
                    this.sID0X01PID0X0D_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasSID0X01PID0X31() {
                    return ((this.bitField0_ & 0x2) != 0);
                }

                public int getSID0X01PID0X31() {
                    return this.sID0X01PID0X31_;
                }

                public Builder setSID0X01PID0X31(int value) {
                    this.bitField0_ |= 0x2;
                    this.sID0X01PID0X31_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearSID0X01PID0X31() {
                    this.bitField0_ &= 0xFFFFFFFD;
                    this.sID0X01PID0X31_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasSID0X01PID0X4E() {
                    return ((this.bitField0_ & 0x4) != 0);
                }

                public int getSID0X01PID0X4E() {
                    return this.sID0X01PID0X4E_;
                }

                public Builder setSID0X01PID0X4E(int value) {
                    this.bitField0_ |= 0x4;
                    this.sID0X01PID0X4E_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearSID0X01PID0X4E() {
                    this.bitField0_ &= 0xFFFFFFFB;
                    this.sID0X01PID0X4E_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasSID0X01PID0X42() {
                    return ((this.bitField0_ & 0x8) != 0);
                }

                public int getSID0X01PID0X42() {
                    return this.sID0X01PID0X42_;
                }

                public Builder setSID0X01PID0X42(int value) {
                    this.bitField0_ |= 0x8;
                    this.sID0X01PID0X42_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearSID0X01PID0X42() {
                    this.bitField0_ &= 0xFFFFFFF7;
                    this.sID0X01PID0X42_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasSID0X01PID0X0C() {
                    return ((this.bitField0_ & 0x10) != 0);
                }

                public int getSID0X01PID0X0C() {
                    return this.sID0X01PID0X0C_;
                }

                public Builder setSID0X01PID0X0C(int value) {
                    this.bitField0_ |= 0x10;
                    this.sID0X01PID0X0C_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearSID0X01PID0X0C() {
                    this.bitField0_ &= 0xFFFFFFEF;
                    this.sID0X01PID0X0C_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasSID0X01PID0X2F() {
                    return ((this.bitField0_ & 0x20) != 0);
                }

                public int getSID0X01PID0X2F() {
                    return this.sID0X01PID0X2F_;
                }

                public Builder setSID0X01PID0X2F(int value) {
                    this.bitField0_ |= 0x20;
                    this.sID0X01PID0X2F_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearSID0X01PID0X2F() {
                    this.bitField0_ &= 0xFFFFFFDF;
                    this.sID0X01PID0X2F_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasSID0X01PID0X5E() {
                    return ((this.bitField0_ & 0x40) != 0);
                }

                public int getSID0X01PID0X5E() {
                    return this.sID0X01PID0X5E_;
                }

                public Builder setSID0X01PID0X5E(int value) {
                    this.bitField0_ |= 0x40;
                    this.sID0X01PID0X5E_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearSID0X01PID0X5E() {
                    this.bitField0_ &= 0xFFFFFFBF;
                    this.sID0X01PID0X5E_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasSID0X01PID0X5C() {
                    return ((this.bitField0_ & 0x80) != 0);
                }

                public int getSID0X01PID0X5C() {
                    return this.sID0X01PID0X5C_;
                }

                public Builder setSID0X01PID0X5C(int value) {
                    this.bitField0_ |= 0x80;
                    this.sID0X01PID0X5C_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearSID0X01PID0X5C() {
                    this.bitField0_ &= 0xFFFFFF7F;
                    this.sID0X01PID0X5C_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasSID0X01PID0X05() {
                    return ((this.bitField0_ & 0x100) != 0);
                }

                public int getSID0X01PID0X05() {
                    return this.sID0X01PID0X05_;
                }

                public Builder setSID0X01PID0X05(int value) {
                    this.bitField0_ |= 0x100;
                    this.sID0X01PID0X05_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearSID0X01PID0X05() {
                    this.bitField0_ &= 0xFFFFFEFF;
                    this.sID0X01PID0X05_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasSID0X01PID0X01() {
                    return ((this.bitField0_ & 0x200) != 0);
                }

                public int getSID0X01PID0X01() {
                    return this.sID0X01PID0X01_;
                }

                public Builder setSID0X01PID0X01(int value) {
                    this.bitField0_ |= 0x200;
                    this.sID0X01PID0X01_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearSID0X01PID0X01() {
                    this.bitField0_ &= 0xFFFFFDFF;
                    this.sID0X01PID0X01_ = 0;
                    onChanged();
                    return this;
                }

                public boolean hasSID0X09PID0X02() {
                    return ((this.bitField0_ & 0x400) != 0);
                }

                public ByteString getSID0X09PID0X02() {
                    return this.sID0X09PID0X02_;
                }

                public Builder setSID0X09PID0X02(ByteString value) {
                    if (value == null)
                        throw new NullPointerException();
                    this.bitField0_ |= 0x400;
                    this.sID0X09PID0X02_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearSID0X09PID0X02() {
                    this.bitField0_ &= 0xFFFFFBFF;
                    this.sID0X09PID0X02_ = OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979.getDefaultInstance().getSID0X09PID0X02();
                    onChanged();
                    return this;
                }

                public boolean hasSID0X01PID0X5EQuantity() {
                    return ((this.bitField0_ & 0x800) != 0);
                }

                public int getSID0X01PID0X5EQuantity() {
                    return this.sID0X01PID0X5EQuantity_;
                }

                public Builder setSID0X01PID0X5EQuantity(int value) {
                    this.bitField0_ |= 0x800;
                    this.sID0X01PID0X5EQuantity_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearSID0X01PID0X5EQuantity() {
                    this.bitField0_ &= 0xFFFFF7FF;
                    this.sID0X01PID0X5EQuantity_ = 0;
                    onChanged();
                    return this;
                }

                public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
                    return (Builder) super.setUnknownFields(unknownFields);
                }

                public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
                    return (Builder) super.mergeUnknownFields(unknownFields);
                }
            }

            private static final OBDDt_J1979 DEFAULT_INSTANCE = new OBDDt_J1979();

            public static OBDDt_J1979 getDefaultInstance() {
                return DEFAULT_INSTANCE;
            }

            @Deprecated
            public static final Parser<OBDDt_J1979> PARSER = (Parser<OBDDt_J1979>) new AbstractParser<OBDDt_J1979>() {
                public OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979 parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                    return new OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979(input, extensionRegistry);
                }
            };

            public static Parser<OBDDt_J1979> parser() {
                return PARSER;
            }

            public Parser<OBDDt_J1979> getParserForType() {
                return PARSER;
            }

            public OBDDt_J1979 getDefaultInstanceForType() {
                return DEFAULT_INSTANCE;
            }
        }

        public static final class Builder extends GeneratedMessageV3.Builder<OBDDt_J1979.Builder> implements OBDDt_J1979OrBuilder {
            private int bitField0_;

            private int sID0X01PID0X0D_;

            private int sID0X01PID0X31_;

            private int sID0X01PID0X4E_;

            private int sID0X01PID0X42_;

            private int sID0X01PID0X0C_;

            private int sID0X01PID0X2F_;

            private int sID0X01PID0X5E_;

            private int sID0X01PID0X5C_;

            private int sID0X01PID0X05_;

            private int sID0X01PID0X01_;

            private ByteString sID0X09PID0X02_;

            private int sID0X01PID0X5EQuantity_;

            public static final Descriptors.Descriptor getDescriptor() {
                return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_OBDDt_J1979_descriptor;
            }

            protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
                return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_OBDDt_J1979_fieldAccessorTable.ensureFieldAccessorsInitialized(OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979.class, Builder.class);
            }

            private Builder() {
                this.sID0X09PID0X02_ = ByteString.EMPTY;
                maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessageV3.BuilderParent parent) {
                super(parent);
                this.sID0X09PID0X02_ = ByteString.EMPTY;
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979.alwaysUseFieldBuilders) ;
            }

            public Builder clear() {
                super.clear();
                this.sID0X01PID0X0D_ = 0;
                this.bitField0_ &= 0xFFFFFFFE;
                this.sID0X01PID0X31_ = 0;
                this.bitField0_ &= 0xFFFFFFFD;
                this.sID0X01PID0X4E_ = 0;
                this.bitField0_ &= 0xFFFFFFFB;
                this.sID0X01PID0X42_ = 0;
                this.bitField0_ &= 0xFFFFFFF7;
                this.sID0X01PID0X0C_ = 0;
                this.bitField0_ &= 0xFFFFFFEF;
                this.sID0X01PID0X2F_ = 0;
                this.bitField0_ &= 0xFFFFFFDF;
                this.sID0X01PID0X5E_ = 0;
                this.bitField0_ &= 0xFFFFFFBF;
                this.sID0X01PID0X5C_ = 0;
                this.bitField0_ &= 0xFFFFFF7F;
                this.sID0X01PID0X05_ = 0;
                this.bitField0_ &= 0xFFFFFEFF;
                this.sID0X01PID0X01_ = 0;
                this.bitField0_ &= 0xFFFFFDFF;
                this.sID0X09PID0X02_ = ByteString.EMPTY;
                this.bitField0_ &= 0xFFFFFBFF;
                this.sID0X01PID0X5EQuantity_ = 0;
                this.bitField0_ &= 0xFFFFF7FF;
                return this;
            }

            public Descriptors.Descriptor getDescriptorForType() {
                return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_OBDDt_J1979_descriptor;
            }

            public OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979 getDefaultInstanceForType() {
                return OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979.getDefaultInstance();
            }

            public OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979 build() {
                OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979 result = buildPartial();
                if (!result.isInitialized())
                    throw newUninitializedMessageException(result);
                return result;
            }

            public OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979 buildPartial() {
                OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979 result = new OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979(this);
                int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) != 0) {
                    result.sID0X01PID0X0D_ = this.sID0X01PID0X0D_;
                    to_bitField0_ |= 0x1;
                }
                if ((from_bitField0_ & 0x2) != 0) {
                    result.sID0X01PID0X31_ = this.sID0X01PID0X31_;
                    to_bitField0_ |= 0x2;
                }
                if ((from_bitField0_ & 0x4) != 0) {
                    result.sID0X01PID0X4E_ = this.sID0X01PID0X4E_;
                    to_bitField0_ |= 0x4;
                }
                if ((from_bitField0_ & 0x8) != 0) {
                    result.sID0X01PID0X42_ = this.sID0X01PID0X42_;
                    to_bitField0_ |= 0x8;
                }
                if ((from_bitField0_ & 0x10) != 0) {
                    result.sID0X01PID0X0C_ = this.sID0X01PID0X0C_;
                    to_bitField0_ |= 0x10;
                }
                if ((from_bitField0_ & 0x20) != 0) {
                    result.sID0X01PID0X2F_ = this.sID0X01PID0X2F_;
                    to_bitField0_ |= 0x20;
                }
                if ((from_bitField0_ & 0x40) != 0) {
                    result.sID0X01PID0X5E_ = this.sID0X01PID0X5E_;
                    to_bitField0_ |= 0x40;
                }
                if ((from_bitField0_ & 0x80) != 0) {
                    result.sID0X01PID0X5C_ = this.sID0X01PID0X5C_;
                    to_bitField0_ |= 0x80;
                }
                if ((from_bitField0_ & 0x100) != 0) {
                    result.sID0X01PID0X05_ = this.sID0X01PID0X05_;
                    to_bitField0_ |= 0x100;
                }
                if ((from_bitField0_ & 0x200) != 0) {
                    result.sID0X01PID0X01_ = this.sID0X01PID0X01_;
                    to_bitField0_ |= 0x200;
                }
                if ((from_bitField0_ & 0x400) != 0)
                    to_bitField0_ |= 0x400;
                result.sID0X09PID0X02_ = this.sID0X09PID0X02_;
                if ((from_bitField0_ & 0x800) != 0) {
                    result.sID0X01PID0X5EQuantity_ = this.sID0X01PID0X5EQuantity_;
                    to_bitField0_ |= 0x800;
                }
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }

            public Builder setField(Descriptors.FieldDescriptor field, Object value) {
                return (Builder) super.setField(field, value);
            }

            public Builder clearField(Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }

            public Builder clearOneof(Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }

            public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }

            public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }

            public Builder mergeFrom(Message other) {
                if (other instanceof OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979)
                    return mergeFrom((OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979) other);
                super.mergeFrom(other);
                return this;
            }

            public Builder mergeFrom(OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979 other) {
                if (other == OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979.getDefaultInstance())
                    return this;
                if (other.hasSID0X01PID0X0D())
                    setSID0X01PID0X0D(other.getSID0X01PID0X0D());
                if (other.hasSID0X01PID0X31())
                    setSID0X01PID0X31(other.getSID0X01PID0X31());
                if (other.hasSID0X01PID0X4E())
                    setSID0X01PID0X4E(other.getSID0X01PID0X4E());
                if (other.hasSID0X01PID0X42())
                    setSID0X01PID0X42(other.getSID0X01PID0X42());
                if (other.hasSID0X01PID0X0C())
                    setSID0X01PID0X0C(other.getSID0X01PID0X0C());
                if (other.hasSID0X01PID0X2F())
                    setSID0X01PID0X2F(other.getSID0X01PID0X2F());
                if (other.hasSID0X01PID0X5E())
                    setSID0X01PID0X5E(other.getSID0X01PID0X5E());
                if (other.hasSID0X01PID0X5C())
                    setSID0X01PID0X5C(other.getSID0X01PID0X5C());
                if (other.hasSID0X01PID0X05())
                    setSID0X01PID0X05(other.getSID0X01PID0X05());
                if (other.hasSID0X01PID0X01())
                    setSID0X01PID0X01(other.getSID0X01PID0X01());
                if (other.hasSID0X09PID0X02())
                    setSID0X09PID0X02(other.getSID0X09PID0X02());
                if (other.hasSID0X01PID0X5EQuantity())
                    setSID0X01PID0X5EQuantity(other.getSID0X01PID0X5EQuantity());
                mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979 parsedMessage = null;
                try {
                    parsedMessage = (OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979) OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null)
                        mergeFrom(parsedMessage);
                }
                return this;
            }

            public boolean hasSID0X01PID0X0D() {
                return ((this.bitField0_ & 0x1) != 0);
            }

            public int getSID0X01PID0X0D() {
                return this.sID0X01PID0X0D_;
            }

            public Builder setSID0X01PID0X0D(int value) {
                this.bitField0_ |= 0x1;
                this.sID0X01PID0X0D_ = value;
                onChanged();
                return this;
            }

            public Builder clearSID0X01PID0X0D() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.sID0X01PID0X0D_ = 0;
                onChanged();
                return this;
            }

            public boolean hasSID0X01PID0X31() {
                return ((this.bitField0_ & 0x2) != 0);
            }

            public int getSID0X01PID0X31() {
                return this.sID0X01PID0X31_;
            }

            public Builder setSID0X01PID0X31(int value) {
                this.bitField0_ |= 0x2;
                this.sID0X01PID0X31_ = value;
                onChanged();
                return this;
            }

            public Builder clearSID0X01PID0X31() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.sID0X01PID0X31_ = 0;
                onChanged();
                return this;
            }

            public boolean hasSID0X01PID0X4E() {
                return ((this.bitField0_ & 0x4) != 0);
            }

            public int getSID0X01PID0X4E() {
                return this.sID0X01PID0X4E_;
            }

            public Builder setSID0X01PID0X4E(int value) {
                this.bitField0_ |= 0x4;
                this.sID0X01PID0X4E_ = value;
                onChanged();
                return this;
            }

            public Builder clearSID0X01PID0X4E() {
                this.bitField0_ &= 0xFFFFFFFB;
                this.sID0X01PID0X4E_ = 0;
                onChanged();
                return this;
            }

            public boolean hasSID0X01PID0X42() {
                return ((this.bitField0_ & 0x8) != 0);
            }

            public int getSID0X01PID0X42() {
                return this.sID0X01PID0X42_;
            }

            public Builder setSID0X01PID0X42(int value) {
                this.bitField0_ |= 0x8;
                this.sID0X01PID0X42_ = value;
                onChanged();
                return this;
            }

            public Builder clearSID0X01PID0X42() {
                this.bitField0_ &= 0xFFFFFFF7;
                this.sID0X01PID0X42_ = 0;
                onChanged();
                return this;
            }

            public boolean hasSID0X01PID0X0C() {
                return ((this.bitField0_ & 0x10) != 0);
            }

            public int getSID0X01PID0X0C() {
                return this.sID0X01PID0X0C_;
            }

            public Builder setSID0X01PID0X0C(int value) {
                this.bitField0_ |= 0x10;
                this.sID0X01PID0X0C_ = value;
                onChanged();
                return this;
            }

            public Builder clearSID0X01PID0X0C() {
                this.bitField0_ &= 0xFFFFFFEF;
                this.sID0X01PID0X0C_ = 0;
                onChanged();
                return this;
            }

            public boolean hasSID0X01PID0X2F() {
                return ((this.bitField0_ & 0x20) != 0);
            }

            public int getSID0X01PID0X2F() {
                return this.sID0X01PID0X2F_;
            }

            public Builder setSID0X01PID0X2F(int value) {
                this.bitField0_ |= 0x20;
                this.sID0X01PID0X2F_ = value;
                onChanged();
                return this;
            }

            public Builder clearSID0X01PID0X2F() {
                this.bitField0_ &= 0xFFFFFFDF;
                this.sID0X01PID0X2F_ = 0;
                onChanged();
                return this;
            }

            public boolean hasSID0X01PID0X5E() {
                return ((this.bitField0_ & 0x40) != 0);
            }

            public int getSID0X01PID0X5E() {
                return this.sID0X01PID0X5E_;
            }

            public Builder setSID0X01PID0X5E(int value) {
                this.bitField0_ |= 0x40;
                this.sID0X01PID0X5E_ = value;
                onChanged();
                return this;
            }

            public Builder clearSID0X01PID0X5E() {
                this.bitField0_ &= 0xFFFFFFBF;
                this.sID0X01PID0X5E_ = 0;
                onChanged();
                return this;
            }

            public boolean hasSID0X01PID0X5C() {
                return ((this.bitField0_ & 0x80) != 0);
            }

            public int getSID0X01PID0X5C() {
                return this.sID0X01PID0X5C_;
            }

            public Builder setSID0X01PID0X5C(int value) {
                this.bitField0_ |= 0x80;
                this.sID0X01PID0X5C_ = value;
                onChanged();
                return this;
            }

            public Builder clearSID0X01PID0X5C() {
                this.bitField0_ &= 0xFFFFFF7F;
                this.sID0X01PID0X5C_ = 0;
                onChanged();
                return this;
            }

            public boolean hasSID0X01PID0X05() {
                return ((this.bitField0_ & 0x100) != 0);
            }

            public int getSID0X01PID0X05() {
                return this.sID0X01PID0X05_;
            }

            public Builder setSID0X01PID0X05(int value) {
                this.bitField0_ |= 0x100;
                this.sID0X01PID0X05_ = value;
                onChanged();
                return this;
            }

            public Builder clearSID0X01PID0X05() {
                this.bitField0_ &= 0xFFFFFEFF;
                this.sID0X01PID0X05_ = 0;
                onChanged();
                return this;
            }

            public boolean hasSID0X01PID0X01() {
                return ((this.bitField0_ & 0x200) != 0);
            }

            public int getSID0X01PID0X01() {
                return this.sID0X01PID0X01_;
            }

            public Builder setSID0X01PID0X01(int value) {
                this.bitField0_ |= 0x200;
                this.sID0X01PID0X01_ = value;
                onChanged();
                return this;
            }

            public Builder clearSID0X01PID0X01() {
                this.bitField0_ &= 0xFFFFFDFF;
                this.sID0X01PID0X01_ = 0;
                onChanged();
                return this;
            }

            public boolean hasSID0X09PID0X02() {
                return ((this.bitField0_ & 0x400) != 0);
            }

            public ByteString getSID0X09PID0X02() {
                return this.sID0X09PID0X02_;
            }

            public Builder setSID0X09PID0X02(ByteString value) {
                if (value == null)
                    throw new NullPointerException();
                this.bitField0_ |= 0x400;
                this.sID0X09PID0X02_ = value;
                onChanged();
                return this;
            }

            public Builder clearSID0X09PID0X02() {
                this.bitField0_ &= 0xFFFFFBFF;
                this.sID0X09PID0X02_ = OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979.getDefaultInstance().getSID0X09PID0X02();
                onChanged();
                return this;
            }

            public boolean hasSID0X01PID0X5EQuantity() {
                return ((this.bitField0_ & 0x800) != 0);
            }

            public int getSID0X01PID0X5EQuantity() {
                return this.sID0X01PID0X5EQuantity_;
            }

            public Builder setSID0X01PID0X5EQuantity(int value) {
                this.bitField0_ |= 0x800;
                this.sID0X01PID0X5EQuantity_ = value;
                onChanged();
                return this;
            }

            public Builder clearSID0X01PID0X5EQuantity() {
                this.bitField0_ &= 0xFFFFF7FF;
                this.sID0X01PID0X5EQuantity_ = 0;
                onChanged();
                return this;
            }

            public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
                return (Builder) super.setUnknownFields(unknownFields);
            }

            public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
                return (Builder) super.mergeUnknownFields(unknownFields);
            }
        }

        public static final class LOG extends GeneratedMessageV3 implements LOGOrBuilder {
            private static final long serialVersionUID = 0L;

            private int bitField0_;

            public static final int DEBUG_FIELD_NUMBER = 1;

            private LazyStringList debug_;

            public static final int LLSREFNUM_FIELD_NUMBER = 2;

            private int lLSRefNum_;

            public static final int LLSREFLEVELBEF_FIELD_NUMBER = 3;

            private Internal.IntList lLSRefLevelBef_;

            private int lLSRefLevelBefMemoizedSerializedSize;

            public static final int LLSREFLEVELAFTER_FIELD_NUMBER = 4;

            private Internal.IntList lLSRefLevelAfter_;

            private int lLSRefLevelAfterMemoizedSerializedSize;

            public static final int LLSREFKOEF_FIELD_NUMBER = 5;

            private Internal.IntList lLSRefKoef_;

            private int lLSRefKoefMemoizedSerializedSize;

            public static final int LLSREFSENS_FIELD_NUMBER = 6;

            private Internal.IntList lLSRefSens_;

            private int lLSRefSensMemoizedSerializedSize;

            public static final int LLSREFTEMP_FIELD_NUMBER = 7;

            private Internal.IntList lLSRefTemp_;

            private int lLSRefTempMemoizedSerializedSize;

            private byte memoizedIsInitialized;

            private LOG(GeneratedMessageV3.Builder<?> builder) {
                super(builder);
                this.lLSRefLevelBefMemoizedSerializedSize = -1;
                this.lLSRefLevelAfterMemoizedSerializedSize = -1;
                this.lLSRefKoefMemoizedSerializedSize = -1;
                this.lLSRefSensMemoizedSerializedSize = -1;
                this.lLSRefTempMemoizedSerializedSize = -1;
                this.memoizedIsInitialized = -1;
            }

            private LOG() {
                this.lLSRefLevelBefMemoizedSerializedSize = -1;
                this.lLSRefLevelAfterMemoizedSerializedSize = -1;
                this.lLSRefKoefMemoizedSerializedSize = -1;
                this.lLSRefSensMemoizedSerializedSize = -1;
                this.lLSRefTempMemoizedSerializedSize = -1;
                this.memoizedIsInitialized = -1;
                this.debug_ = LazyStringArrayList.EMPTY;
                this.lLSRefLevelBef_ = emptyIntList();
                this.lLSRefLevelAfter_ = emptyIntList();
                this.lLSRefKoef_ = emptyIntList();
                this.lLSRefSens_ = emptyIntList();
                this.lLSRefTemp_ = emptyIntList();
            }

            protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) {
                return new LOG();
            }

            public final UnknownFieldSet getUnknownFields() {
                return this.unknownFields;
            }

            private LOG(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                this();
                if (extensionRegistry == null)
                    throw new NullPointerException();
                int mutable_bitField0_ = 0;
                UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
                try {
                    boolean done = false;
                    while (!done) {
                        ByteString bs;
                        int length, limit, tag = input.readTag();
                        switch (tag) {
                            case 0:
                                done = true;
                                continue;
                            case 10:
                                bs = input.readBytes();
                                if ((mutable_bitField0_ & 0x1) == 0) {
                                    this.debug_ = (LazyStringList) new LazyStringArrayList();
                                    mutable_bitField0_ |= 0x1;
                                }
                                this.debug_.add(bs);
                                continue;
                            case 16:
                                this.bitField0_ |= 0x1;
                                this.lLSRefNum_ = input.readUInt32();
                                continue;
                            case 24:
                                if ((mutable_bitField0_ & 0x4) == 0) {
                                    this.lLSRefLevelBef_ = newIntList();
                                    mutable_bitField0_ |= 0x4;
                                }
                                this.lLSRefLevelBef_.addInt(input.readUInt32());
                                continue;
                            case 26:
                                length = input.readRawVarint32();
                                limit = input.pushLimit(length);
                                if ((mutable_bitField0_ & 0x4) == 0 && input.getBytesUntilLimit() > 0) {
                                    this.lLSRefLevelBef_ = newIntList();
                                    mutable_bitField0_ |= 0x4;
                                }
                                while (input.getBytesUntilLimit() > 0)
                                    this.lLSRefLevelBef_.addInt(input.readUInt32());
                                input.popLimit(limit);
                                continue;
                            case 32:
                                if ((mutable_bitField0_ & 0x8) == 0) {
                                    this.lLSRefLevelAfter_ = newIntList();
                                    mutable_bitField0_ |= 0x8;
                                }
                                this.lLSRefLevelAfter_.addInt(input.readUInt32());
                                continue;
                            case 34:
                                length = input.readRawVarint32();
                                limit = input.pushLimit(length);
                                if ((mutable_bitField0_ & 0x8) == 0 && input.getBytesUntilLimit() > 0) {
                                    this.lLSRefLevelAfter_ = newIntList();
                                    mutable_bitField0_ |= 0x8;
                                }
                                while (input.getBytesUntilLimit() > 0)
                                    this.lLSRefLevelAfter_.addInt(input.readUInt32());
                                input.popLimit(limit);
                                continue;
                            case 40:
                                if ((mutable_bitField0_ & 0x10) == 0) {
                                    this.lLSRefKoef_ = newIntList();
                                    mutable_bitField0_ |= 0x10;
                                }
                                this.lLSRefKoef_.addInt(input.readUInt32());
                                continue;
                            case 42:
                                length = input.readRawVarint32();
                                limit = input.pushLimit(length);
                                if ((mutable_bitField0_ & 0x10) == 0 && input.getBytesUntilLimit() > 0) {
                                    this.lLSRefKoef_ = newIntList();
                                    mutable_bitField0_ |= 0x10;
                                }
                                while (input.getBytesUntilLimit() > 0)
                                    this.lLSRefKoef_.addInt(input.readUInt32());
                                input.popLimit(limit);
                                continue;
                            case 48:
                                if ((mutable_bitField0_ & 0x20) == 0) {
                                    this.lLSRefSens_ = newIntList();
                                    mutable_bitField0_ |= 0x20;
                                }
                                this.lLSRefSens_.addInt(input.readUInt32());
                                continue;
                            case 50:
                                length = input.readRawVarint32();
                                limit = input.pushLimit(length);
                                if ((mutable_bitField0_ & 0x20) == 0 && input.getBytesUntilLimit() > 0) {
                                    this.lLSRefSens_ = newIntList();
                                    mutable_bitField0_ |= 0x20;
                                }
                                while (input.getBytesUntilLimit() > 0)
                                    this.lLSRefSens_.addInt(input.readUInt32());
                                input.popLimit(limit);
                                continue;
                            case 56:
                                if ((mutable_bitField0_ & 0x40) == 0) {
                                    this.lLSRefTemp_ = newIntList();
                                    mutable_bitField0_ |= 0x40;
                                }
                                this.lLSRefTemp_.addInt(input.readUInt32());
                                continue;
                            case 58:
                                length = input.readRawVarint32();
                                limit = input.pushLimit(length);
                                if ((mutable_bitField0_ & 0x40) == 0 && input.getBytesUntilLimit() > 0) {
                                    this.lLSRefTemp_ = newIntList();
                                    mutable_bitField0_ |= 0x40;
                                }
                                while (input.getBytesUntilLimit() > 0)
                                    this.lLSRefTemp_.addInt(input.readUInt32());
                                input.popLimit(limit);
                                continue;
                        }
                        if (!parseUnknownField(input, unknownFields, extensionRegistry, tag))
                            done = true;
                    }
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e) {
                    throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this);
                } finally {
                    if ((mutable_bitField0_ & 0x1) != 0)
                        this.debug_ = this.debug_.getUnmodifiableView();
                    if ((mutable_bitField0_ & 0x4) != 0)
                        this.lLSRefLevelBef_.makeImmutable();
                    if ((mutable_bitField0_ & 0x8) != 0)
                        this.lLSRefLevelAfter_.makeImmutable();
                    if ((mutable_bitField0_ & 0x10) != 0)
                        this.lLSRefKoef_.makeImmutable();
                    if ((mutable_bitField0_ & 0x20) != 0)
                        this.lLSRefSens_.makeImmutable();
                    if ((mutable_bitField0_ & 0x40) != 0)
                        this.lLSRefTemp_.makeImmutable();
                    this.unknownFields = unknownFields.build();
                    makeExtensionsImmutable();
                }
            }

            public static final Descriptors.Descriptor getDescriptor() {
                return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_LOG_descriptor;
            }

            protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
                return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_LOG_fieldAccessorTable.ensureFieldAccessorsInitialized(LOG.class, Builder.class);
            }

            public ProtocolStringList getDebugList() {
                return (ProtocolStringList) this.debug_;
            }

            public int getDebugCount() {
                return this.debug_.size();
            }

            public String getDebug(int index) {
                return (String) this.debug_.get(index);
            }

            public ByteString getDebugBytes(int index) {
                return this.debug_.getByteString(index);
            }

            public boolean hasLLSRefNum() {
                return ((this.bitField0_ & 0x1) != 0);
            }

            public int getLLSRefNum() {
                return this.lLSRefNum_;
            }

            public List<Integer> getLLSRefLevelBefList() {
                return (List<Integer>) this.lLSRefLevelBef_;
            }

            public int getLLSRefLevelBefCount() {
                return this.lLSRefLevelBef_.size();
            }

            public int getLLSRefLevelBef(int index) {
                return this.lLSRefLevelBef_.getInt(index);
            }

            public List<Integer> getLLSRefLevelAfterList() {
                return (List<Integer>) this.lLSRefLevelAfter_;
            }

            public int getLLSRefLevelAfterCount() {
                return this.lLSRefLevelAfter_.size();
            }

            public int getLLSRefLevelAfter(int index) {
                return this.lLSRefLevelAfter_.getInt(index);
            }

            public List<Integer> getLLSRefKoefList() {
                return (List<Integer>) this.lLSRefKoef_;
            }

            public int getLLSRefKoefCount() {
                return this.lLSRefKoef_.size();
            }

            public int getLLSRefKoef(int index) {
                return this.lLSRefKoef_.getInt(index);
            }

            public List<Integer> getLLSRefSensList() {
                return (List<Integer>) this.lLSRefSens_;
            }

            public int getLLSRefSensCount() {
                return this.lLSRefSens_.size();
            }

            public int getLLSRefSens(int index) {
                return this.lLSRefSens_.getInt(index);
            }

            public List<Integer> getLLSRefTempList() {
                return (List<Integer>) this.lLSRefTemp_;
            }

            public int getLLSRefTempCount() {
                return this.lLSRefTemp_.size();
            }

            public int getLLSRefTemp(int index) {
                return this.lLSRefTemp_.getInt(index);
            }

            public final boolean isInitialized() {
                byte isInitialized = this.memoizedIsInitialized;
                if (isInitialized == 1)
                    return true;
                if (isInitialized == 0)
                    return false;
                this.memoizedIsInitialized = 1;
                return true;
            }

            public void writeTo(CodedOutputStream output) throws IOException {
                getSerializedSize();
                int i;
                for (i = 0; i < this.debug_.size(); i++)
                    GeneratedMessageV3.writeString(output, 1, this.debug_.getRaw(i));
                if ((this.bitField0_ & 0x1) != 0)
                    output.writeUInt32(2, this.lLSRefNum_);
                if (getLLSRefLevelBefList().size() > 0) {
                    output.writeUInt32NoTag(26);
                    output.writeUInt32NoTag(this.lLSRefLevelBefMemoizedSerializedSize);
                }
                for (i = 0; i < this.lLSRefLevelBef_.size(); i++)
                    output.writeUInt32NoTag(this.lLSRefLevelBef_.getInt(i));
                if (getLLSRefLevelAfterList().size() > 0) {
                    output.writeUInt32NoTag(34);
                    output.writeUInt32NoTag(this.lLSRefLevelAfterMemoizedSerializedSize);
                }
                for (i = 0; i < this.lLSRefLevelAfter_.size(); i++)
                    output.writeUInt32NoTag(this.lLSRefLevelAfter_.getInt(i));
                if (getLLSRefKoefList().size() > 0) {
                    output.writeUInt32NoTag(42);
                    output.writeUInt32NoTag(this.lLSRefKoefMemoizedSerializedSize);
                }
                for (i = 0; i < this.lLSRefKoef_.size(); i++)
                    output.writeUInt32NoTag(this.lLSRefKoef_.getInt(i));
                if (getLLSRefSensList().size() > 0) {
                    output.writeUInt32NoTag(50);
                    output.writeUInt32NoTag(this.lLSRefSensMemoizedSerializedSize);
                }
                for (i = 0; i < this.lLSRefSens_.size(); i++)
                    output.writeUInt32NoTag(this.lLSRefSens_.getInt(i));
                if (getLLSRefTempList().size() > 0) {
                    output.writeUInt32NoTag(58);
                    output.writeUInt32NoTag(this.lLSRefTempMemoizedSerializedSize);
                }
                for (i = 0; i < this.lLSRefTemp_.size(); i++)
                    output.writeUInt32NoTag(this.lLSRefTemp_.getInt(i));
                this.unknownFields.writeTo(output);
            }

            public int getSerializedSize() {
                int size = this.memoizedSize;
                if (size != -1)
                    return size;
                size = 0;
                int dataSize = 0;
                int i;
                for (i = 0; i < this.debug_.size(); i++)
                    dataSize += computeStringSizeNoTag(this.debug_.getRaw(i));
                size += dataSize;
                size += 1 * getDebugList().size();
                if ((this.bitField0_ & 0x1) != 0)
                    size += CodedOutputStream.computeUInt32Size(2, this.lLSRefNum_);
                dataSize = 0;
                for (i = 0; i < this.lLSRefLevelBef_.size(); i++)
                    dataSize += CodedOutputStream.computeUInt32SizeNoTag(this.lLSRefLevelBef_.getInt(i));
                size += dataSize;
                if (!getLLSRefLevelBefList().isEmpty()) {
                    size++;
                    size += CodedOutputStream.computeInt32SizeNoTag(dataSize);
                }
                this.lLSRefLevelBefMemoizedSerializedSize = dataSize;
                dataSize = 0;
                for (i = 0; i < this.lLSRefLevelAfter_.size(); i++)
                    dataSize += CodedOutputStream.computeUInt32SizeNoTag(this.lLSRefLevelAfter_.getInt(i));
                size += dataSize;
                if (!getLLSRefLevelAfterList().isEmpty()) {
                    size++;
                    size += CodedOutputStream.computeInt32SizeNoTag(dataSize);
                }
                this.lLSRefLevelAfterMemoizedSerializedSize = dataSize;
                dataSize = 0;
                for (i = 0; i < this.lLSRefKoef_.size(); i++)
                    dataSize += CodedOutputStream.computeUInt32SizeNoTag(this.lLSRefKoef_.getInt(i));
                size += dataSize;
                if (!getLLSRefKoefList().isEmpty()) {
                    size++;
                    size += CodedOutputStream.computeInt32SizeNoTag(dataSize);
                }
                this.lLSRefKoefMemoizedSerializedSize = dataSize;
                dataSize = 0;
                for (i = 0; i < this.lLSRefSens_.size(); i++)
                    dataSize += CodedOutputStream.computeUInt32SizeNoTag(this.lLSRefSens_.getInt(i));
                size += dataSize;
                if (!getLLSRefSensList().isEmpty()) {
                    size++;
                    size += CodedOutputStream.computeInt32SizeNoTag(dataSize);
                }
                this.lLSRefSensMemoizedSerializedSize = dataSize;
                dataSize = 0;
                for (i = 0; i < this.lLSRefTemp_.size(); i++)
                    dataSize += CodedOutputStream.computeUInt32SizeNoTag(this.lLSRefTemp_.getInt(i));
                size += dataSize;
                if (!getLLSRefTempList().isEmpty()) {
                    size++;
                    size += CodedOutputStream.computeInt32SizeNoTag(dataSize);
                }
                this.lLSRefTempMemoizedSerializedSize = dataSize;
                size += this.unknownFields.getSerializedSize();
                this.memoizedSize = size;
                return size;
            }

            public boolean equals(Object obj) {
                if (obj == this)
                    return true;
                if (!(obj instanceof LOG))
                    return super.equals(obj);
                LOG other = (LOG) obj;
                if (!getDebugList().equals(other.getDebugList()))
                    return false;
                if (hasLLSRefNum() != other.hasLLSRefNum())
                    return false;
                if (hasLLSRefNum() && getLLSRefNum() != other.getLLSRefNum())
                    return false;
                if (!getLLSRefLevelBefList().equals(other.getLLSRefLevelBefList()))
                    return false;
                if (!getLLSRefLevelAfterList().equals(other.getLLSRefLevelAfterList()))
                    return false;
                if (!getLLSRefKoefList().equals(other.getLLSRefKoefList()))
                    return false;
                if (!getLLSRefSensList().equals(other.getLLSRefSensList()))
                    return false;
                if (!getLLSRefTempList().equals(other.getLLSRefTempList()))
                    return false;
                if (!this.unknownFields.equals(other.unknownFields))
                    return false;
                return true;
            }

            public int hashCode() {
                if (this.memoizedHashCode != 0)
                    return this.memoizedHashCode;
                int hash = 41;
                hash = 19 * hash + getDescriptor().hashCode();
                if (getDebugCount() > 0) {
                    hash = 37 * hash + 1;
                    hash = 53 * hash + getDebugList().hashCode();
                }
                if (hasLLSRefNum()) {
                    hash = 37 * hash + 2;
                    hash = 53 * hash + getLLSRefNum();
                }
                if (getLLSRefLevelBefCount() > 0) {
                    hash = 37 * hash + 3;
                    hash = 53 * hash + getLLSRefLevelBefList().hashCode();
                }
                if (getLLSRefLevelAfterCount() > 0) {
                    hash = 37 * hash + 4;
                    hash = 53 * hash + getLLSRefLevelAfterList().hashCode();
                }
                if (getLLSRefKoefCount() > 0) {
                    hash = 37 * hash + 5;
                    hash = 53 * hash + getLLSRefKoefList().hashCode();
                }
                if (getLLSRefSensCount() > 0) {
                    hash = 37 * hash + 6;
                    hash = 53 * hash + getLLSRefSensList().hashCode();
                }
                if (getLLSRefTempCount() > 0) {
                    hash = 37 * hash + 7;
                    hash = 53 * hash + getLLSRefTempList().hashCode();
                }
                hash = 29 * hash + this.unknownFields.hashCode();
                this.memoizedHashCode = hash;
                return hash;
            }

            public static LOG parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
                return (LOG) PARSER.parseFrom(data);
            }

            public static LOG parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return (LOG) PARSER.parseFrom(data, extensionRegistry);
            }

            public static LOG parseFrom(ByteString data) throws InvalidProtocolBufferException {
                return (LOG) PARSER.parseFrom(data);
            }

            public static LOG parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return (LOG) PARSER.parseFrom(data, extensionRegistry);
            }

            public static LOG parseFrom(byte[] data) throws InvalidProtocolBufferException {
                return (LOG) PARSER.parseFrom(data);
            }

            public static LOG parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return (LOG) PARSER.parseFrom(data, extensionRegistry);
            }

            public static LOG parseFrom(InputStream input) throws IOException {
                return (LOG) GeneratedMessageV3.parseWithIOException(PARSER, input);
            }

            public static LOG parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                return (LOG) GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
            }

            public static LOG parseDelimitedFrom(InputStream input) throws IOException {
                return (LOG) GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
            }

            public static LOG parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                return (LOG) GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
            }

            public static LOG parseFrom(CodedInputStream input) throws IOException {
                return (LOG) GeneratedMessageV3.parseWithIOException(PARSER, input);
            }

            public static LOG parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                return (LOG) GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
            }

            public Builder newBuilderForType() {
                return newBuilder();
            }

            public static Builder newBuilder() {
                return DEFAULT_INSTANCE.toBuilder();
            }

            public static Builder newBuilder(LOG prototype) {
                return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
            }

            public Builder toBuilder() {
                return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder()).mergeFrom(this);
            }

            protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
                Builder builder = new Builder(parent);
                return builder;
            }

            public static final class Builder extends GeneratedMessageV3.Builder<Builder> implements OmnicommMessageOuterClass.OmnicommMessage.LOGOrBuilder {
                private int bitField0_;

                private LazyStringList debug_;

                private int lLSRefNum_;

                private Internal.IntList lLSRefLevelBef_;

                private Internal.IntList lLSRefLevelAfter_;

                private Internal.IntList lLSRefKoef_;

                private Internal.IntList lLSRefSens_;

                private Internal.IntList lLSRefTemp_;

                public static final Descriptors.Descriptor getDescriptor() {
                    return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_LOG_descriptor;
                }

                protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
                    return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_LOG_fieldAccessorTable.ensureFieldAccessorsInitialized(OmnicommMessageOuterClass.OmnicommMessage.LOG.class, Builder.class);
                }

                private Builder() {
                    this.debug_ = LazyStringArrayList.EMPTY;
                    this.lLSRefLevelBef_ = OmnicommMessageOuterClass.OmnicommMessage.LOG.emptyIntList();
                    this.lLSRefLevelAfter_ = OmnicommMessageOuterClass.OmnicommMessage.LOG.emptyIntList();
                    this.lLSRefKoef_ = OmnicommMessageOuterClass.OmnicommMessage.LOG.emptyIntList();
                    this.lLSRefSens_ = OmnicommMessageOuterClass.OmnicommMessage.LOG.emptyIntList();
                    this.lLSRefTemp_ = OmnicommMessageOuterClass.OmnicommMessage.LOG.emptyIntList();
                    maybeForceBuilderInitialization();
                }

                private Builder(GeneratedMessageV3.BuilderParent parent) {
                    super(parent);
                    this.debug_ = LazyStringArrayList.EMPTY;
                    this.lLSRefLevelBef_ = OmnicommMessageOuterClass.OmnicommMessage.LOG.emptyIntList();
                    this.lLSRefLevelAfter_ = OmnicommMessageOuterClass.OmnicommMessage.LOG.emptyIntList();
                    this.lLSRefKoef_ = OmnicommMessageOuterClass.OmnicommMessage.LOG.emptyIntList();
                    this.lLSRefSens_ = OmnicommMessageOuterClass.OmnicommMessage.LOG.emptyIntList();
                    this.lLSRefTemp_ = OmnicommMessageOuterClass.OmnicommMessage.LOG.emptyIntList();
                    maybeForceBuilderInitialization();
                }

                private void maybeForceBuilderInitialization() {
                    if (OmnicommMessageOuterClass.OmnicommMessage.LOG.alwaysUseFieldBuilders) ;
                }

                public Builder clear() {
                    super.clear();
                    this.debug_ = LazyStringArrayList.EMPTY;
                    this.bitField0_ &= 0xFFFFFFFE;
                    this.lLSRefNum_ = 0;
                    this.bitField0_ &= 0xFFFFFFFD;
                    this.lLSRefLevelBef_ = OmnicommMessageOuterClass.OmnicommMessage.LOG.emptyIntList();
                    this.bitField0_ &= 0xFFFFFFFB;
                    this.lLSRefLevelAfter_ = OmnicommMessageOuterClass.OmnicommMessage.LOG.emptyIntList();
                    this.bitField0_ &= 0xFFFFFFF7;
                    this.lLSRefKoef_ = OmnicommMessageOuterClass.OmnicommMessage.LOG.emptyIntList();
                    this.bitField0_ &= 0xFFFFFFEF;
                    this.lLSRefSens_ = OmnicommMessageOuterClass.OmnicommMessage.LOG.emptyIntList();
                    this.bitField0_ &= 0xFFFFFFDF;
                    this.lLSRefTemp_ = OmnicommMessageOuterClass.OmnicommMessage.LOG.emptyIntList();
                    this.bitField0_ &= 0xFFFFFFBF;
                    return this;
                }

                public Descriptors.Descriptor getDescriptorForType() {
                    return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_LOG_descriptor;
                }

                public OmnicommMessageOuterClass.OmnicommMessage.LOG getDefaultInstanceForType() {
                    return OmnicommMessageOuterClass.OmnicommMessage.LOG.getDefaultInstance();
                }

                public OmnicommMessageOuterClass.OmnicommMessage.LOG build() {
                    OmnicommMessageOuterClass.OmnicommMessage.LOG result = buildPartial();
                    if (!result.isInitialized())
                        throw newUninitializedMessageException(result);
                    return result;
                }

                public OmnicommMessageOuterClass.OmnicommMessage.LOG buildPartial() {
                    OmnicommMessageOuterClass.OmnicommMessage.LOG result = new OmnicommMessageOuterClass.OmnicommMessage.LOG(this);
                    int from_bitField0_ = this.bitField0_;
                    int to_bitField0_ = 0;
                    if ((this.bitField0_ & 0x1) != 0) {
                        this.debug_ = this.debug_.getUnmodifiableView();
                        this.bitField0_ &= 0xFFFFFFFE;
                    }
                    result.debug_ = this.debug_;
                    if ((from_bitField0_ & 0x2) != 0) {
                        result.lLSRefNum_ = this.lLSRefNum_;
                        to_bitField0_ |= 0x1;
                    }
                    if ((this.bitField0_ & 0x4) != 0) {
                        this.lLSRefLevelBef_.makeImmutable();
                        this.bitField0_ &= 0xFFFFFFFB;
                    }
                    result.lLSRefLevelBef_ = this.lLSRefLevelBef_;
                    if ((this.bitField0_ & 0x8) != 0) {
                        this.lLSRefLevelAfter_.makeImmutable();
                        this.bitField0_ &= 0xFFFFFFF7;
                    }
                    result.lLSRefLevelAfter_ = this.lLSRefLevelAfter_;
                    if ((this.bitField0_ & 0x10) != 0) {
                        this.lLSRefKoef_.makeImmutable();
                        this.bitField0_ &= 0xFFFFFFEF;
                    }
                    result.lLSRefKoef_ = this.lLSRefKoef_;
                    if ((this.bitField0_ & 0x20) != 0) {
                        this.lLSRefSens_.makeImmutable();
                        this.bitField0_ &= 0xFFFFFFDF;
                    }
                    result.lLSRefSens_ = this.lLSRefSens_;
                    if ((this.bitField0_ & 0x40) != 0) {
                        this.lLSRefTemp_.makeImmutable();
                        this.bitField0_ &= 0xFFFFFFBF;
                    }
                    result.lLSRefTemp_ = this.lLSRefTemp_;
                    result.bitField0_ = to_bitField0_;
                    onBuilt();
                    return result;
                }

                public Builder clone() {
                    return (Builder) super.clone();
                }

                public Builder setField(Descriptors.FieldDescriptor field, Object value) {
                    return (Builder) super.setField(field, value);
                }

                public Builder clearField(Descriptors.FieldDescriptor field) {
                    return (Builder) super.clearField(field);
                }

                public Builder clearOneof(Descriptors.OneofDescriptor oneof) {
                    return (Builder) super.clearOneof(oneof);
                }

                public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
                    return (Builder) super.setRepeatedField(field, index, value);
                }

                public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
                    return (Builder) super.addRepeatedField(field, value);
                }

                public Builder mergeFrom(Message other) {
                    if (other instanceof OmnicommMessageOuterClass.OmnicommMessage.LOG)
                        return mergeFrom((OmnicommMessageOuterClass.OmnicommMessage.LOG) other);
                    super.mergeFrom(other);
                    return this;
                }

                public Builder mergeFrom(OmnicommMessageOuterClass.OmnicommMessage.LOG other) {
                    if (other == OmnicommMessageOuterClass.OmnicommMessage.LOG.getDefaultInstance())
                        return this;
                    if (!other.debug_.isEmpty()) {
                        if (this.debug_.isEmpty()) {
                            this.debug_ = other.debug_;
                            this.bitField0_ &= 0xFFFFFFFE;
                        } else {
                            ensureDebugIsMutable();
                            this.debug_.addAll((Collection) other.debug_);
                        }
                        onChanged();
                    }
                    if (other.hasLLSRefNum())
                        setLLSRefNum(other.getLLSRefNum());
                    if (!other.lLSRefLevelBef_.isEmpty()) {
                        if (this.lLSRefLevelBef_.isEmpty()) {
                            this.lLSRefLevelBef_ = other.lLSRefLevelBef_;
                            this.bitField0_ &= 0xFFFFFFFB;
                        } else {
                            ensureLLSRefLevelBefIsMutable();
                            this.lLSRefLevelBef_.addAll((Collection) other.lLSRefLevelBef_);
                        }
                        onChanged();
                    }
                    if (!other.lLSRefLevelAfter_.isEmpty()) {
                        if (this.lLSRefLevelAfter_.isEmpty()) {
                            this.lLSRefLevelAfter_ = other.lLSRefLevelAfter_;
                            this.bitField0_ &= 0xFFFFFFF7;
                        } else {
                            ensureLLSRefLevelAfterIsMutable();
                            this.lLSRefLevelAfter_.addAll((Collection) other.lLSRefLevelAfter_);
                        }
                        onChanged();
                    }
                    if (!other.lLSRefKoef_.isEmpty()) {
                        if (this.lLSRefKoef_.isEmpty()) {
                            this.lLSRefKoef_ = other.lLSRefKoef_;
                            this.bitField0_ &= 0xFFFFFFEF;
                        } else {
                            ensureLLSRefKoefIsMutable();
                            this.lLSRefKoef_.addAll((Collection) other.lLSRefKoef_);
                        }
                        onChanged();
                    }
                    if (!other.lLSRefSens_.isEmpty()) {
                        if (this.lLSRefSens_.isEmpty()) {
                            this.lLSRefSens_ = other.lLSRefSens_;
                            this.bitField0_ &= 0xFFFFFFDF;
                        } else {
                            ensureLLSRefSensIsMutable();
                            this.lLSRefSens_.addAll((Collection) other.lLSRefSens_);
                        }
                        onChanged();
                    }
                    if (!other.lLSRefTemp_.isEmpty()) {
                        if (this.lLSRefTemp_.isEmpty()) {
                            this.lLSRefTemp_ = other.lLSRefTemp_;
                            this.bitField0_ &= 0xFFFFFFBF;
                        } else {
                            ensureLLSRefTempIsMutable();
                            this.lLSRefTemp_.addAll((Collection) other.lLSRefTemp_);
                        }
                        onChanged();
                    }
                    mergeUnknownFields(other.unknownFields);
                    onChanged();
                    return this;
                }

                public final boolean isInitialized() {
                    return true;
                }

                public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                    OmnicommMessageOuterClass.OmnicommMessage.LOG parsedMessage = null;
                    try {
                        parsedMessage = (OmnicommMessageOuterClass.OmnicommMessage.LOG) OmnicommMessageOuterClass.OmnicommMessage.LOG.PARSER.parsePartialFrom(input, extensionRegistry);
                    } catch (InvalidProtocolBufferException e) {
                        parsedMessage = (OmnicommMessageOuterClass.OmnicommMessage.LOG) e.getUnfinishedMessage();
                        throw e.unwrapIOException();
                    } finally {
                        if (parsedMessage != null)
                            mergeFrom(parsedMessage);
                    }
                    return this;
                }

                private void ensureDebugIsMutable() {
                    if ((this.bitField0_ & 0x1) == 0) {
                        this.debug_ = (LazyStringList) new LazyStringArrayList(this.debug_);
                        this.bitField0_ |= 0x1;
                    }
                }

                public ProtocolStringList getDebugList() {
                    return (ProtocolStringList) this.debug_.getUnmodifiableView();
                }

                public int getDebugCount() {
                    return this.debug_.size();
                }

                public String getDebug(int index) {
                    return (String) this.debug_.get(index);
                }

                public ByteString getDebugBytes(int index) {
                    return this.debug_.getByteString(index);
                }

                public Builder setDebug(int index, String value) {
                    if (value == null)
                        throw new NullPointerException();
                    ensureDebugIsMutable();
                    this.debug_.set(index, value);
                    onChanged();
                    return this;
                }

                public Builder addDebug(String value) {
                    if (value == null)
                        throw new NullPointerException();
                    ensureDebugIsMutable();
                    this.debug_.add(value);
                    onChanged();
                    return this;
                }

                public Builder addAllDebug(Iterable<String> values) {
                    ensureDebugIsMutable();
                    AbstractMessageLite.Builder.addAll(values, (List) this.debug_);
                    onChanged();
                    return this;
                }

                public Builder clearDebug() {
                    this.debug_ = LazyStringArrayList.EMPTY;
                    this.bitField0_ &= 0xFFFFFFFE;
                    onChanged();
                    return this;
                }

                public Builder addDebugBytes(ByteString value) {
                    if (value == null)
                        throw new NullPointerException();
                    ensureDebugIsMutable();
                    this.debug_.add(value);
                    onChanged();
                    return this;
                }

                public boolean hasLLSRefNum() {
                    return ((this.bitField0_ & 0x2) != 0);
                }

                public int getLLSRefNum() {
                    return this.lLSRefNum_;
                }

                public Builder setLLSRefNum(int value) {
                    this.bitField0_ |= 0x2;
                    this.lLSRefNum_ = value;
                    onChanged();
                    return this;
                }

                public Builder clearLLSRefNum() {
                    this.bitField0_ &= 0xFFFFFFFD;
                    this.lLSRefNum_ = 0;
                    onChanged();
                    return this;
                }

                private void ensureLLSRefLevelBefIsMutable() {
                    if ((this.bitField0_ & 0x4) == 0) {
                        this.lLSRefLevelBef_ = OmnicommMessageOuterClass.OmnicommMessage.LOG.mutableCopy(this.lLSRefLevelBef_);
                        this.bitField0_ |= 0x4;
                    }
                }

                public List<Integer> getLLSRefLevelBefList() {
                    return ((this.bitField0_ & 0x4) != 0) ? Collections.<Integer>unmodifiableList((List<? extends Integer>) this.lLSRefLevelBef_) : (List<Integer>) this.lLSRefLevelBef_;
                }

                public int getLLSRefLevelBefCount() {
                    return this.lLSRefLevelBef_.size();
                }

                public int getLLSRefLevelBef(int index) {
                    return this.lLSRefLevelBef_.getInt(index);
                }

                public Builder setLLSRefLevelBef(int index, int value) {
                    ensureLLSRefLevelBefIsMutable();
                    this.lLSRefLevelBef_.setInt(index, value);
                    onChanged();
                    return this;
                }

                public Builder addLLSRefLevelBef(int value) {
                    ensureLLSRefLevelBefIsMutable();
                    this.lLSRefLevelBef_.addInt(value);
                    onChanged();
                    return this;
                }

                public Builder addAllLLSRefLevelBef(Iterable<? extends Integer> values) {
                    ensureLLSRefLevelBefIsMutable();
                    AbstractMessageLite.Builder.addAll(values, (List) this.lLSRefLevelBef_);
                    onChanged();
                    return this;
                }

                public Builder clearLLSRefLevelBef() {
                    this.lLSRefLevelBef_ = OmnicommMessageOuterClass.OmnicommMessage.LOG.emptyIntList();
                    this.bitField0_ &= 0xFFFFFFFB;
                    onChanged();
                    return this;
                }

                private void ensureLLSRefLevelAfterIsMutable() {
                    if ((this.bitField0_ & 0x8) == 0) {
                        this.lLSRefLevelAfter_ = OmnicommMessageOuterClass.OmnicommMessage.LOG.mutableCopy(this.lLSRefLevelAfter_);
                        this.bitField0_ |= 0x8;
                    }
                }

                public List<Integer> getLLSRefLevelAfterList() {
                    return ((this.bitField0_ & 0x8) != 0) ? Collections.<Integer>unmodifiableList((List<? extends Integer>) this.lLSRefLevelAfter_) : (List<Integer>) this.lLSRefLevelAfter_;
                }

                public int getLLSRefLevelAfterCount() {
                    return this.lLSRefLevelAfter_.size();
                }

                public int getLLSRefLevelAfter(int index) {
                    return this.lLSRefLevelAfter_.getInt(index);
                }

                public Builder setLLSRefLevelAfter(int index, int value) {
                    ensureLLSRefLevelAfterIsMutable();
                    this.lLSRefLevelAfter_.setInt(index, value);
                    onChanged();
                    return this;
                }

                public Builder addLLSRefLevelAfter(int value) {
                    ensureLLSRefLevelAfterIsMutable();
                    this.lLSRefLevelAfter_.addInt(value);
                    onChanged();
                    return this;
                }

                public Builder addAllLLSRefLevelAfter(Iterable<? extends Integer> values) {
                    ensureLLSRefLevelAfterIsMutable();
                    AbstractMessageLite.Builder.addAll(values, (List) this.lLSRefLevelAfter_);
                    onChanged();
                    return this;
                }

                public Builder clearLLSRefLevelAfter() {
                    this.lLSRefLevelAfter_ = OmnicommMessageOuterClass.OmnicommMessage.LOG.emptyIntList();
                    this.bitField0_ &= 0xFFFFFFF7;
                    onChanged();
                    return this;
                }

                private void ensureLLSRefKoefIsMutable() {
                    if ((this.bitField0_ & 0x10) == 0) {
                        this.lLSRefKoef_ = OmnicommMessageOuterClass.OmnicommMessage.LOG.mutableCopy(this.lLSRefKoef_);
                        this.bitField0_ |= 0x10;
                    }
                }

                public List<Integer> getLLSRefKoefList() {
                    return ((this.bitField0_ & 0x10) != 0) ? Collections.<Integer>unmodifiableList((List<? extends Integer>) this.lLSRefKoef_) : (List<Integer>) this.lLSRefKoef_;
                }

                public int getLLSRefKoefCount() {
                    return this.lLSRefKoef_.size();
                }

                public int getLLSRefKoef(int index) {
                    return this.lLSRefKoef_.getInt(index);
                }

                public Builder setLLSRefKoef(int index, int value) {
                    ensureLLSRefKoefIsMutable();
                    this.lLSRefKoef_.setInt(index, value);
                    onChanged();
                    return this;
                }

                public Builder addLLSRefKoef(int value) {
                    ensureLLSRefKoefIsMutable();
                    this.lLSRefKoef_.addInt(value);
                    onChanged();
                    return this;
                }

                public Builder addAllLLSRefKoef(Iterable<? extends Integer> values) {
                    ensureLLSRefKoefIsMutable();
                    AbstractMessageLite.Builder.addAll(values, (List) this.lLSRefKoef_);
                    onChanged();
                    return this;
                }

                public Builder clearLLSRefKoef() {
                    this.lLSRefKoef_ = OmnicommMessageOuterClass.OmnicommMessage.LOG.emptyIntList();
                    this.bitField0_ &= 0xFFFFFFEF;
                    onChanged();
                    return this;
                }

                private void ensureLLSRefSensIsMutable() {
                    if ((this.bitField0_ & 0x20) == 0) {
                        this.lLSRefSens_ = OmnicommMessageOuterClass.OmnicommMessage.LOG.mutableCopy(this.lLSRefSens_);
                        this.bitField0_ |= 0x20;
                    }
                }

                public List<Integer> getLLSRefSensList() {
                    return ((this.bitField0_ & 0x20) != 0) ? Collections.<Integer>unmodifiableList((List<? extends Integer>) this.lLSRefSens_) : (List<Integer>) this.lLSRefSens_;
                }

                public int getLLSRefSensCount() {
                    return this.lLSRefSens_.size();
                }

                public int getLLSRefSens(int index) {
                    return this.lLSRefSens_.getInt(index);
                }

                public Builder setLLSRefSens(int index, int value) {
                    ensureLLSRefSensIsMutable();
                    this.lLSRefSens_.setInt(index, value);
                    onChanged();
                    return this;
                }

                public Builder addLLSRefSens(int value) {
                    ensureLLSRefSensIsMutable();
                    this.lLSRefSens_.addInt(value);
                    onChanged();
                    return this;
                }

                public Builder addAllLLSRefSens(Iterable<? extends Integer> values) {
                    ensureLLSRefSensIsMutable();
                    AbstractMessageLite.Builder.addAll(values, (List) this.lLSRefSens_);
                    onChanged();
                    return this;
                }

                public Builder clearLLSRefSens() {
                    this.lLSRefSens_ = OmnicommMessageOuterClass.OmnicommMessage.LOG.emptyIntList();
                    this.bitField0_ &= 0xFFFFFFDF;
                    onChanged();
                    return this;
                }

                private void ensureLLSRefTempIsMutable() {
                    if ((this.bitField0_ & 0x40) == 0) {
                        this.lLSRefTemp_ = OmnicommMessageOuterClass.OmnicommMessage.LOG.mutableCopy(this.lLSRefTemp_);
                        this.bitField0_ |= 0x40;
                    }
                }

                public List<Integer> getLLSRefTempList() {
                    return ((this.bitField0_ & 0x40) != 0) ? Collections.<Integer>unmodifiableList((List<? extends Integer>) this.lLSRefTemp_) : (List<Integer>) this.lLSRefTemp_;
                }

                public int getLLSRefTempCount() {
                    return this.lLSRefTemp_.size();
                }

                public int getLLSRefTemp(int index) {
                    return this.lLSRefTemp_.getInt(index);
                }

                public Builder setLLSRefTemp(int index, int value) {
                    ensureLLSRefTempIsMutable();
                    this.lLSRefTemp_.setInt(index, value);
                    onChanged();
                    return this;
                }

                public Builder addLLSRefTemp(int value) {
                    ensureLLSRefTempIsMutable();
                    this.lLSRefTemp_.addInt(value);
                    onChanged();
                    return this;
                }

                public Builder addAllLLSRefTemp(Iterable<? extends Integer> values) {
                    ensureLLSRefTempIsMutable();
                    AbstractMessageLite.Builder.addAll(values, (List) this.lLSRefTemp_);
                    onChanged();
                    return this;
                }

                public Builder clearLLSRefTemp() {
                    this.lLSRefTemp_ = OmnicommMessageOuterClass.OmnicommMessage.LOG.emptyIntList();
                    this.bitField0_ &= 0xFFFFFFBF;
                    onChanged();
                    return this;
                }

                public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
                    return (Builder) super.setUnknownFields(unknownFields);
                }

                public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
                    return (Builder) super.mergeUnknownFields(unknownFields);
                }
            }

            private static final LOG DEFAULT_INSTANCE = new LOG();

            public static LOG getDefaultInstance() {
                return DEFAULT_INSTANCE;
            }

            @Deprecated
            public static final Parser<LOG> PARSER = (Parser<LOG>) new AbstractParser<LOG>() {
                public OmnicommMessageOuterClass.OmnicommMessage.LOG parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                    return new OmnicommMessageOuterClass.OmnicommMessage.LOG(input, extensionRegistry);
                }
            };

            public static Parser<LOG> parser() {
                return PARSER;
            }

            public Parser<LOG> getParserForType() {
                return PARSER;
            }

            public LOG getDefaultInstanceForType() {
                return DEFAULT_INSTANCE;
            }
        }

        public static final class Builder extends GeneratedMessageV3.Builder<LOG.Builder> implements LOGOrBuilder {
            private int bitField0_;

            private LazyStringList debug_;

            private int lLSRefNum_;

            private Internal.IntList lLSRefLevelBef_;

            private Internal.IntList lLSRefLevelAfter_;

            private Internal.IntList lLSRefKoef_;

            private Internal.IntList lLSRefSens_;

            private Internal.IntList lLSRefTemp_;

            public static final Descriptors.Descriptor getDescriptor() {
                return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_LOG_descriptor;
            }

            protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
                return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_LOG_fieldAccessorTable.ensureFieldAccessorsInitialized(OmnicommMessageOuterClass.OmnicommMessage.LOG.class, Builder.class);
            }

            private Builder() {
                this.debug_ = LazyStringArrayList.EMPTY;
                this.lLSRefLevelBef_ = OmnicommMessageOuterClass.OmnicommMessage.LOG.emptyIntList();
                this.lLSRefLevelAfter_ = OmnicommMessageOuterClass.OmnicommMessage.LOG.emptyIntList();
                this.lLSRefKoef_ = OmnicommMessageOuterClass.OmnicommMessage.LOG.emptyIntList();
                this.lLSRefSens_ = OmnicommMessageOuterClass.OmnicommMessage.LOG.emptyIntList();
                this.lLSRefTemp_ = OmnicommMessageOuterClass.OmnicommMessage.LOG.emptyIntList();
                maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessageV3.BuilderParent parent) {
                super(parent);
                this.debug_ = LazyStringArrayList.EMPTY;
                this.lLSRefLevelBef_ = OmnicommMessageOuterClass.OmnicommMessage.LOG.emptyIntList();
                this.lLSRefLevelAfter_ = OmnicommMessageOuterClass.OmnicommMessage.LOG.emptyIntList();
                this.lLSRefKoef_ = OmnicommMessageOuterClass.OmnicommMessage.LOG.emptyIntList();
                this.lLSRefSens_ = OmnicommMessageOuterClass.OmnicommMessage.LOG.emptyIntList();
                this.lLSRefTemp_ = OmnicommMessageOuterClass.OmnicommMessage.LOG.emptyIntList();
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (OmnicommMessageOuterClass.OmnicommMessage.LOG.alwaysUseFieldBuilders) ;
            }

            public Builder clear() {
                super.clear();
                this.debug_ = LazyStringArrayList.EMPTY;
                this.bitField0_ &= 0xFFFFFFFE;
                this.lLSRefNum_ = 0;
                this.bitField0_ &= 0xFFFFFFFD;
                this.lLSRefLevelBef_ = OmnicommMessageOuterClass.OmnicommMessage.LOG.emptyIntList();
                this.bitField0_ &= 0xFFFFFFFB;
                this.lLSRefLevelAfter_ = OmnicommMessageOuterClass.OmnicommMessage.LOG.emptyIntList();
                this.bitField0_ &= 0xFFFFFFF7;
                this.lLSRefKoef_ = OmnicommMessageOuterClass.OmnicommMessage.LOG.emptyIntList();
                this.bitField0_ &= 0xFFFFFFEF;
                this.lLSRefSens_ = OmnicommMessageOuterClass.OmnicommMessage.LOG.emptyIntList();
                this.bitField0_ &= 0xFFFFFFDF;
                this.lLSRefTemp_ = OmnicommMessageOuterClass.OmnicommMessage.LOG.emptyIntList();
                this.bitField0_ &= 0xFFFFFFBF;
                return this;
            }

            public Descriptors.Descriptor getDescriptorForType() {
                return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_LOG_descriptor;
            }

            public OmnicommMessageOuterClass.OmnicommMessage.LOG getDefaultInstanceForType() {
                return OmnicommMessageOuterClass.OmnicommMessage.LOG.getDefaultInstance();
            }

            public OmnicommMessageOuterClass.OmnicommMessage.LOG build() {
                OmnicommMessageOuterClass.OmnicommMessage.LOG result = buildPartial();
                if (!result.isInitialized())
                    throw newUninitializedMessageException(result);
                return result;
            }

            public OmnicommMessageOuterClass.OmnicommMessage.LOG buildPartial() {
                OmnicommMessageOuterClass.OmnicommMessage.LOG result = new OmnicommMessageOuterClass.OmnicommMessage.LOG(this);
                int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((this.bitField0_ & 0x1) != 0) {
                    this.debug_ = this.debug_.getUnmodifiableView();
                    this.bitField0_ &= 0xFFFFFFFE;
                }
                result.debug_ = this.debug_;
                if ((from_bitField0_ & 0x2) != 0) {
                    result.lLSRefNum_ = this.lLSRefNum_;
                    to_bitField0_ |= 0x1;
                }
                if ((this.bitField0_ & 0x4) != 0) {
                    this.lLSRefLevelBef_.makeImmutable();
                    this.bitField0_ &= 0xFFFFFFFB;
                }
                result.lLSRefLevelBef_ = this.lLSRefLevelBef_;
                if ((this.bitField0_ & 0x8) != 0) {
                    this.lLSRefLevelAfter_.makeImmutable();
                    this.bitField0_ &= 0xFFFFFFF7;
                }
                result.lLSRefLevelAfter_ = this.lLSRefLevelAfter_;
                if ((this.bitField0_ & 0x10) != 0) {
                    this.lLSRefKoef_.makeImmutable();
                    this.bitField0_ &= 0xFFFFFFEF;
                }
                result.lLSRefKoef_ = this.lLSRefKoef_;
                if ((this.bitField0_ & 0x20) != 0) {
                    this.lLSRefSens_.makeImmutable();
                    this.bitField0_ &= 0xFFFFFFDF;
                }
                result.lLSRefSens_ = this.lLSRefSens_;
                if ((this.bitField0_ & 0x40) != 0) {
                    this.lLSRefTemp_.makeImmutable();
                    this.bitField0_ &= 0xFFFFFFBF;
                }
                result.lLSRefTemp_ = this.lLSRefTemp_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }

            public Builder setField(Descriptors.FieldDescriptor field, Object value) {
                return (Builder) super.setField(field, value);
            }

            public Builder clearField(Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }

            public Builder clearOneof(Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }

            public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }

            public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }

            public Builder mergeFrom(Message other) {
                if (other instanceof OmnicommMessageOuterClass.OmnicommMessage.LOG)
                    return mergeFrom((OmnicommMessageOuterClass.OmnicommMessage.LOG) other);
                super.mergeFrom(other);
                return this;
            }

            public Builder mergeFrom(OmnicommMessageOuterClass.OmnicommMessage.LOG other) {
                if (other == OmnicommMessageOuterClass.OmnicommMessage.LOG.getDefaultInstance())
                    return this;
                if (!other.debug_.isEmpty()) {
                    if (this.debug_.isEmpty()) {
                        this.debug_ = other.debug_;
                        this.bitField0_ &= 0xFFFFFFFE;
                    } else {
                        ensureDebugIsMutable();
                        this.debug_.addAll((Collection) other.debug_);
                    }
                    onChanged();
                }
                if (other.hasLLSRefNum())
                    setLLSRefNum(other.getLLSRefNum());
                if (!other.lLSRefLevelBef_.isEmpty()) {
                    if (this.lLSRefLevelBef_.isEmpty()) {
                        this.lLSRefLevelBef_ = other.lLSRefLevelBef_;
                        this.bitField0_ &= 0xFFFFFFFB;
                    } else {
                        ensureLLSRefLevelBefIsMutable();
                        this.lLSRefLevelBef_.addAll((Collection) other.lLSRefLevelBef_);
                    }
                    onChanged();
                }
                if (!other.lLSRefLevelAfter_.isEmpty()) {
                    if (this.lLSRefLevelAfter_.isEmpty()) {
                        this.lLSRefLevelAfter_ = other.lLSRefLevelAfter_;
                        this.bitField0_ &= 0xFFFFFFF7;
                    } else {
                        ensureLLSRefLevelAfterIsMutable();
                        this.lLSRefLevelAfter_.addAll((Collection) other.lLSRefLevelAfter_);
                    }
                    onChanged();
                }
                if (!other.lLSRefKoef_.isEmpty()) {
                    if (this.lLSRefKoef_.isEmpty()) {
                        this.lLSRefKoef_ = other.lLSRefKoef_;
                        this.bitField0_ &= 0xFFFFFFEF;
                    } else {
                        ensureLLSRefKoefIsMutable();
                        this.lLSRefKoef_.addAll((Collection) other.lLSRefKoef_);
                    }
                    onChanged();
                }
                if (!other.lLSRefSens_.isEmpty()) {
                    if (this.lLSRefSens_.isEmpty()) {
                        this.lLSRefSens_ = other.lLSRefSens_;
                        this.bitField0_ &= 0xFFFFFFDF;
                    } else {
                        ensureLLSRefSensIsMutable();
                        this.lLSRefSens_.addAll((Collection) other.lLSRefSens_);
                    }
                    onChanged();
                }
                if (!other.lLSRefTemp_.isEmpty()) {
                    if (this.lLSRefTemp_.isEmpty()) {
                        this.lLSRefTemp_ = other.lLSRefTemp_;
                        this.bitField0_ &= 0xFFFFFFBF;
                    } else {
                        ensureLLSRefTempIsMutable();
                        this.lLSRefTemp_.addAll((Collection) other.lLSRefTemp_);
                    }
                    onChanged();
                }
                mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                OmnicommMessageOuterClass.OmnicommMessage.LOG parsedMessage = null;
                try {
                    parsedMessage = (OmnicommMessageOuterClass.OmnicommMessage.LOG) OmnicommMessageOuterClass.OmnicommMessage.LOG.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (OmnicommMessageOuterClass.OmnicommMessage.LOG) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null)
                        mergeFrom(parsedMessage);
                }
                return this;
            }

            private void ensureDebugIsMutable() {
                if ((this.bitField0_ & 0x1) == 0) {
                    this.debug_ = (LazyStringList) new LazyStringArrayList(this.debug_);
                    this.bitField0_ |= 0x1;
                }
            }

            public ProtocolStringList getDebugList() {
                return (ProtocolStringList) this.debug_.getUnmodifiableView();
            }

            public int getDebugCount() {
                return this.debug_.size();
            }

            public String getDebug(int index) {
                return (String) this.debug_.get(index);
            }

            public ByteString getDebugBytes(int index) {
                return this.debug_.getByteString(index);
            }

            public Builder setDebug(int index, String value) {
                if (value == null)
                    throw new NullPointerException();
                ensureDebugIsMutable();
                this.debug_.set(index, value);
                onChanged();
                return this;
            }

            public Builder addDebug(String value) {
                if (value == null)
                    throw new NullPointerException();
                ensureDebugIsMutable();
                this.debug_.add(value);
                onChanged();
                return this;
            }

            public Builder addAllDebug(Iterable<String> values) {
                ensureDebugIsMutable();
                AbstractMessageLite.Builder.addAll(values, (List) this.debug_);
                onChanged();
                return this;
            }

            public Builder clearDebug() {
                this.debug_ = LazyStringArrayList.EMPTY;
                this.bitField0_ &= 0xFFFFFFFE;
                onChanged();
                return this;
            }

            public Builder addDebugBytes(ByteString value) {
                if (value == null)
                    throw new NullPointerException();
                ensureDebugIsMutable();
                this.debug_.add(value);
                onChanged();
                return this;
            }

            public boolean hasLLSRefNum() {
                return ((this.bitField0_ & 0x2) != 0);
            }

            public int getLLSRefNum() {
                return this.lLSRefNum_;
            }

            public Builder setLLSRefNum(int value) {
                this.bitField0_ |= 0x2;
                this.lLSRefNum_ = value;
                onChanged();
                return this;
            }

            public Builder clearLLSRefNum() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.lLSRefNum_ = 0;
                onChanged();
                return this;
            }

            private void ensureLLSRefLevelBefIsMutable() {
                if ((this.bitField0_ & 0x4) == 0) {
                    this.lLSRefLevelBef_ = OmnicommMessageOuterClass.OmnicommMessage.LOG.mutableCopy(this.lLSRefLevelBef_);
                    this.bitField0_ |= 0x4;
                }
            }

            public List<Integer> getLLSRefLevelBefList() {
                return ((this.bitField0_ & 0x4) != 0) ? Collections.<Integer>unmodifiableList((List<? extends Integer>) this.lLSRefLevelBef_) : (List<Integer>) this.lLSRefLevelBef_;
            }

            public int getLLSRefLevelBefCount() {
                return this.lLSRefLevelBef_.size();
            }

            public int getLLSRefLevelBef(int index) {
                return this.lLSRefLevelBef_.getInt(index);
            }

            public Builder setLLSRefLevelBef(int index, int value) {
                ensureLLSRefLevelBefIsMutable();
                this.lLSRefLevelBef_.setInt(index, value);
                onChanged();
                return this;
            }

            public Builder addLLSRefLevelBef(int value) {
                ensureLLSRefLevelBefIsMutable();
                this.lLSRefLevelBef_.addInt(value);
                onChanged();
                return this;
            }

            public Builder addAllLLSRefLevelBef(Iterable<? extends Integer> values) {
                ensureLLSRefLevelBefIsMutable();
                AbstractMessageLite.Builder.addAll(values, (List) this.lLSRefLevelBef_);
                onChanged();
                return this;
            }

            public Builder clearLLSRefLevelBef() {
                this.lLSRefLevelBef_ = OmnicommMessageOuterClass.OmnicommMessage.LOG.emptyIntList();
                this.bitField0_ &= 0xFFFFFFFB;
                onChanged();
                return this;
            }

            private void ensureLLSRefLevelAfterIsMutable() {
                if ((this.bitField0_ & 0x8) == 0) {
                    this.lLSRefLevelAfter_ = OmnicommMessageOuterClass.OmnicommMessage.LOG.mutableCopy(this.lLSRefLevelAfter_);
                    this.bitField0_ |= 0x8;
                }
            }

            public List<Integer> getLLSRefLevelAfterList() {
                return ((this.bitField0_ & 0x8) != 0) ? Collections.<Integer>unmodifiableList((List<? extends Integer>) this.lLSRefLevelAfter_) : (List<Integer>) this.lLSRefLevelAfter_;
            }

            public int getLLSRefLevelAfterCount() {
                return this.lLSRefLevelAfter_.size();
            }

            public int getLLSRefLevelAfter(int index) {
                return this.lLSRefLevelAfter_.getInt(index);
            }

            public Builder setLLSRefLevelAfter(int index, int value) {
                ensureLLSRefLevelAfterIsMutable();
                this.lLSRefLevelAfter_.setInt(index, value);
                onChanged();
                return this;
            }

            public Builder addLLSRefLevelAfter(int value) {
                ensureLLSRefLevelAfterIsMutable();
                this.lLSRefLevelAfter_.addInt(value);
                onChanged();
                return this;
            }

            public Builder addAllLLSRefLevelAfter(Iterable<? extends Integer> values) {
                ensureLLSRefLevelAfterIsMutable();
                AbstractMessageLite.Builder.addAll(values, (List) this.lLSRefLevelAfter_);
                onChanged();
                return this;
            }

            public Builder clearLLSRefLevelAfter() {
                this.lLSRefLevelAfter_ = OmnicommMessageOuterClass.OmnicommMessage.LOG.emptyIntList();
                this.bitField0_ &= 0xFFFFFFF7;
                onChanged();
                return this;
            }

            private void ensureLLSRefKoefIsMutable() {
                if ((this.bitField0_ & 0x10) == 0) {
                    this.lLSRefKoef_ = OmnicommMessageOuterClass.OmnicommMessage.LOG.mutableCopy(this.lLSRefKoef_);
                    this.bitField0_ |= 0x10;
                }
            }

            public List<Integer> getLLSRefKoefList() {
                return ((this.bitField0_ & 0x10) != 0) ? Collections.<Integer>unmodifiableList((List<? extends Integer>) this.lLSRefKoef_) : (List<Integer>) this.lLSRefKoef_;
            }

            public int getLLSRefKoefCount() {
                return this.lLSRefKoef_.size();
            }

            public int getLLSRefKoef(int index) {
                return this.lLSRefKoef_.getInt(index);
            }

            public Builder setLLSRefKoef(int index, int value) {
                ensureLLSRefKoefIsMutable();
                this.lLSRefKoef_.setInt(index, value);
                onChanged();
                return this;
            }

            public Builder addLLSRefKoef(int value) {
                ensureLLSRefKoefIsMutable();
                this.lLSRefKoef_.addInt(value);
                onChanged();
                return this;
            }

            public Builder addAllLLSRefKoef(Iterable<? extends Integer> values) {
                ensureLLSRefKoefIsMutable();
                AbstractMessageLite.Builder.addAll(values, (List) this.lLSRefKoef_);
                onChanged();
                return this;
            }

            public Builder clearLLSRefKoef() {
                this.lLSRefKoef_ = OmnicommMessageOuterClass.OmnicommMessage.LOG.emptyIntList();
                this.bitField0_ &= 0xFFFFFFEF;
                onChanged();
                return this;
            }

            private void ensureLLSRefSensIsMutable() {
                if ((this.bitField0_ & 0x20) == 0) {
                    this.lLSRefSens_ = OmnicommMessageOuterClass.OmnicommMessage.LOG.mutableCopy(this.lLSRefSens_);
                    this.bitField0_ |= 0x20;
                }
            }

            public List<Integer> getLLSRefSensList() {
                return ((this.bitField0_ & 0x20) != 0) ? Collections.<Integer>unmodifiableList((List<? extends Integer>) this.lLSRefSens_) : (List<Integer>) this.lLSRefSens_;
            }

            public int getLLSRefSensCount() {
                return this.lLSRefSens_.size();
            }

            public int getLLSRefSens(int index) {
                return this.lLSRefSens_.getInt(index);
            }

            public Builder setLLSRefSens(int index, int value) {
                ensureLLSRefSensIsMutable();
                this.lLSRefSens_.setInt(index, value);
                onChanged();
                return this;
            }

            public Builder addLLSRefSens(int value) {
                ensureLLSRefSensIsMutable();
                this.lLSRefSens_.addInt(value);
                onChanged();
                return this;
            }

            public Builder addAllLLSRefSens(Iterable<? extends Integer> values) {
                ensureLLSRefSensIsMutable();
                AbstractMessageLite.Builder.addAll(values, (List) this.lLSRefSens_);
                onChanged();
                return this;
            }

            public Builder clearLLSRefSens() {
                this.lLSRefSens_ = OmnicommMessageOuterClass.OmnicommMessage.LOG.emptyIntList();
                this.bitField0_ &= 0xFFFFFFDF;
                onChanged();
                return this;
            }

            private void ensureLLSRefTempIsMutable() {
                if ((this.bitField0_ & 0x40) == 0) {
                    this.lLSRefTemp_ = OmnicommMessageOuterClass.OmnicommMessage.LOG.mutableCopy(this.lLSRefTemp_);
                    this.bitField0_ |= 0x40;
                }
            }

            public List<Integer> getLLSRefTempList() {
                return ((this.bitField0_ & 0x40) != 0) ? Collections.<Integer>unmodifiableList((List<? extends Integer>) this.lLSRefTemp_) : (List<Integer>) this.lLSRefTemp_;
            }

            public int getLLSRefTempCount() {
                return this.lLSRefTemp_.size();
            }

            public int getLLSRefTemp(int index) {
                return this.lLSRefTemp_.getInt(index);
            }

            public Builder setLLSRefTemp(int index, int value) {
                ensureLLSRefTempIsMutable();
                this.lLSRefTemp_.setInt(index, value);
                onChanged();
                return this;
            }

            public Builder addLLSRefTemp(int value) {
                ensureLLSRefTempIsMutable();
                this.lLSRefTemp_.addInt(value);
                onChanged();
                return this;
            }

            public Builder addAllLLSRefTemp(Iterable<? extends Integer> values) {
                ensureLLSRefTempIsMutable();
                AbstractMessageLite.Builder.addAll(values, (List) this.lLSRefTemp_);
                onChanged();
                return this;
            }

            public Builder clearLLSRefTemp() {
                this.lLSRefTemp_ = OmnicommMessageOuterClass.OmnicommMessage.LOG.emptyIntList();
                this.bitField0_ &= 0xFFFFFFBF;
                onChanged();
                return this;
            }

            public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
                return (Builder) super.setUnknownFields(unknownFields);
            }

            public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
                return (Builder) super.mergeUnknownFields(unknownFields);
            }
        }

        public List<Integer> getMIDList() {
            return (List<Integer>) this.mID_;
        }

        public int getMIDCount() {
            return this.mID_.size();
        }

        public int getMID(int index) {
            return this.mID_.getInt(index);
        }

        public boolean hasGeneral() {
            return ((this.bitField0_ & 0x1) != 0);
        }

        public General getGeneral() {
            return (this.general_ == null) ? General.getDefaultInstance() : this.general_;
        }

        public GeneralOrBuilder getGeneralOrBuilder() {
            return (this.general_ == null) ? General.getDefaultInstance() : this.general_;
        }

        public boolean hasPhoto() {
            return ((this.bitField0_ & 0x2) != 0);
        }

        public Photo getPhoto() {
            return (this.photo_ == null) ? Photo.getDefaultInstance() : this.photo_;
        }

        public PhotoOrBuilder getPhotoOrBuilder() {
            return (this.photo_ == null) ? Photo.getDefaultInstance() : this.photo_;
        }

        public boolean hasNAV() {
            return ((this.bitField0_ & 0x4) != 0);
        }

        public NAV getNAV() {
            return (this.nAV_ == null) ? NAV.getDefaultInstance() : this.nAV_;
        }

        public NAVOrBuilder getNAVOrBuilder() {
            return (this.nAV_ == null) ? NAV.getDefaultInstance() : this.nAV_;
        }

        public boolean hasUniDt() {
            return ((this.bitField0_ & 0x8) != 0);
        }

        public UniDt getUniDt() {
            return (this.uniDt_ == null) ? UniDt.getDefaultInstance() : this.uniDt_;
        }

        public UniDtOrBuilder getUniDtOrBuilder() {
            return (this.uniDt_ == null) ? UniDt.getDefaultInstance() : this.uniDt_;
        }

        public boolean hasCanDtJ1939() {
            return ((this.bitField0_ & 0x10) != 0);
        }

        public CanDt_J1939 getCanDtJ1939() {
            return (this.canDtJ1939_ == null) ? CanDt_J1939.getDefaultInstance() : this.canDtJ1939_;
        }

        public CanDt_J1939OrBuilder getCanDtJ1939OrBuilder() {
            return (this.canDtJ1939_ == null) ? CanDt_J1939.getDefaultInstance() : this.canDtJ1939_;
        }

        public boolean hasLLSDt() {
            return ((this.bitField0_ & 0x20) != 0);
        }

        public LLSDt getLLSDt() {
            return (this.lLSDt_ == null) ? LLSDt.getDefaultInstance() : this.lLSDt_;
        }

        public LLSDtOrBuilder getLLSDtOrBuilder() {
            return (this.lLSDt_ == null) ? LLSDt.getDefaultInstance() : this.lLSDt_;
        }

        public boolean hasOther() {
            return ((this.bitField0_ & 0x40) != 0);
        }

        public Other getOther() {
            return (this.other_ == null) ? Other.getDefaultInstance() : this.other_;
        }

        public OtherOrBuilder getOtherOrBuilder() {
            return (this.other_ == null) ? Other.getDefaultInstance() : this.other_;
        }

        public boolean hasICONDt() {
            return ((this.bitField0_ & 0x80) != 0);
        }

        public ICONDt getICONDt() {
            return (this.iCONDt_ == null) ? ICONDt.getDefaultInstance() : this.iCONDt_;
        }

        public ICONDtOrBuilder getICONDtOrBuilder() {
            return (this.iCONDt_ == null) ? ICONDt.getDefaultInstance() : this.iCONDt_;
        }

        public boolean hasOBDDtJ1979() {
            return ((this.bitField0_ & 0x100) != 0);
        }

        public OBDDt_J1979 getOBDDtJ1979() {
            return (this.oBDDtJ1979_ == null) ? OBDDt_J1979.getDefaultInstance() : this.oBDDtJ1979_;
        }

        public OBDDt_J1979OrBuilder getOBDDtJ1979OrBuilder() {
            return (this.oBDDtJ1979_ == null) ? OBDDt_J1979.getDefaultInstance() : this.oBDDtJ1979_;
        }

        public boolean hasLOG() {
            return ((this.bitField0_ & 0x200) != 0);
        }

        public LOG getLOG() {
            return (this.lOG_ == null) ? LOG.getDefaultInstance() : this.lOG_;
        }

        public LOGOrBuilder getLOGOrBuilder() {
            return (this.lOG_ == null) ? LOG.getDefaultInstance() : this.lOG_;
        }

        public final boolean isInitialized() {
            byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized == 1)
                return true;
            if (isInitialized == 0)
                return false;
            if (hasNAV() &&
                    !getNAV().isInitialized()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream output) throws IOException {
            getSerializedSize();
            if (getMIDList().size() > 0) {
                output.writeUInt32NoTag(10);
                output.writeUInt32NoTag(this.mIDMemoizedSerializedSize);
            }
            for (int i = 0; i < this.mID_.size(); i++)
                output.writeUInt32NoTag(this.mID_.getInt(i));
            if ((this.bitField0_ & 0x1) != 0)
                output.writeGroup(2, (MessageLite) getGeneral());
            if ((this.bitField0_ & 0x2) != 0)
                output.writeGroup(4, (MessageLite) getPhoto());
            if ((this.bitField0_ & 0x4) != 0)
                output.writeGroup(5, (MessageLite) getNAV());
            if ((this.bitField0_ & 0x8) != 0)
                output.writeGroup(6, (MessageLite) getUniDt());
            if ((this.bitField0_ & 0x10) != 0)
                output.writeGroup(7, (MessageLite) getCanDtJ1939());
            if ((this.bitField0_ & 0x20) != 0)
                output.writeGroup(8, (MessageLite) getLLSDt());
            if ((this.bitField0_ & 0x40) != 0)
                output.writeGroup(9, (MessageLite) getOther());
            if ((this.bitField0_ & 0x80) != 0)
                output.writeGroup(10, (MessageLite) getICONDt());
            if ((this.bitField0_ & 0x100) != 0)
                output.writeGroup(11, (MessageLite) getOBDDtJ1979());
            if ((this.bitField0_ & 0x200) != 0)
                output.writeGroup(16, (MessageLite) getLOG());
            this.unknownFields.writeTo(output);
        }

        public int getSerializedSize() {
            int size = this.memoizedSize;
            if (size != -1)
                return size;
            size = 0;
            int dataSize = 0;
            for (int i = 0; i < this.mID_.size(); i++)
                dataSize +=
                        CodedOutputStream.computeUInt32SizeNoTag(this.mID_.getInt(i));
            size += dataSize;
            if (!getMIDList().isEmpty()) {
                size++;
                size +=
                        CodedOutputStream.computeInt32SizeNoTag(dataSize);
            }
            this.mIDMemoizedSerializedSize = dataSize;
            if ((this.bitField0_ & 0x1) != 0)
                size +=
                        CodedOutputStream.computeGroupSize(2, (MessageLite) getGeneral());
            if ((this.bitField0_ & 0x2) != 0)
                size +=
                        CodedOutputStream.computeGroupSize(4, (MessageLite) getPhoto());
            if ((this.bitField0_ & 0x4) != 0)
                size +=
                        CodedOutputStream.computeGroupSize(5, (MessageLite) getNAV());
            if ((this.bitField0_ & 0x8) != 0)
                size +=
                        CodedOutputStream.computeGroupSize(6, (MessageLite) getUniDt());
            if ((this.bitField0_ & 0x10) != 0)
                size +=
                        CodedOutputStream.computeGroupSize(7, (MessageLite) getCanDtJ1939());
            if ((this.bitField0_ & 0x20) != 0)
                size +=
                        CodedOutputStream.computeGroupSize(8, (MessageLite) getLLSDt());
            if ((this.bitField0_ & 0x40) != 0)
                size +=
                        CodedOutputStream.computeGroupSize(9, (MessageLite) getOther());
            if ((this.bitField0_ & 0x80) != 0)
                size +=
                        CodedOutputStream.computeGroupSize(10, (MessageLite) getICONDt());
            if ((this.bitField0_ & 0x100) != 0)
                size +=
                        CodedOutputStream.computeGroupSize(11, (MessageLite) getOBDDtJ1979());
            if ((this.bitField0_ & 0x200) != 0)
                size +=
                        CodedOutputStream.computeGroupSize(16, (MessageLite) getLOG());
            size += this.unknownFields.getSerializedSize();
            this.memoizedSize = size;
            return size;
        }

        public boolean equals(Object obj) {
            if (obj == this)
                return true;
            if (!(obj instanceof OmnicommMessage))
                return super.equals(obj);
            OmnicommMessage other = (OmnicommMessage) obj;
            if (!getMIDList().equals(other.getMIDList()))
                return false;
            if (hasGeneral() != other.hasGeneral())
                return false;
            if (hasGeneral() &&

                    !getGeneral().equals(other.getGeneral()))
                return false;
            if (hasPhoto() != other.hasPhoto())
                return false;
            if (hasPhoto() &&

                    !getPhoto().equals(other.getPhoto()))
                return false;
            if (hasNAV() != other.hasNAV())
                return false;
            if (hasNAV() &&

                    !getNAV().equals(other.getNAV()))
                return false;
            if (hasUniDt() != other.hasUniDt())
                return false;
            if (hasUniDt() &&

                    !getUniDt().equals(other.getUniDt()))
                return false;
            if (hasCanDtJ1939() != other.hasCanDtJ1939())
                return false;
            if (hasCanDtJ1939() &&

                    !getCanDtJ1939().equals(other.getCanDtJ1939()))
                return false;
            if (hasLLSDt() != other.hasLLSDt())
                return false;
            if (hasLLSDt() &&

                    !getLLSDt().equals(other.getLLSDt()))
                return false;
            if (hasOther() != other.hasOther())
                return false;
            if (hasOther() &&

                    !getOther().equals(other.getOther()))
                return false;
            if (hasICONDt() != other.hasICONDt())
                return false;
            if (hasICONDt() &&

                    !getICONDt().equals(other.getICONDt()))
                return false;
            if (hasOBDDtJ1979() != other.hasOBDDtJ1979())
                return false;
            if (hasOBDDtJ1979() &&

                    !getOBDDtJ1979().equals(other.getOBDDtJ1979()))
                return false;
            if (hasLOG() != other.hasLOG())
                return false;
            if (hasLOG() &&

                    !getLOG().equals(other.getLOG()))
                return false;
            if (!this.unknownFields.equals(other.unknownFields))
                return false;
            return true;
        }

        public int hashCode() {
            if (this.memoizedHashCode != 0)
                return this.memoizedHashCode;
            int hash = 41;
            hash = 19 * hash + getDescriptor().hashCode();
            if (getMIDCount() > 0) {
                hash = 37 * hash + 1;
                hash = 53 * hash + getMIDList().hashCode();
            }
            if (hasGeneral()) {
                hash = 37 * hash + 2;
                hash = 53 * hash + getGeneral().hashCode();
            }
            if (hasPhoto()) {
                hash = 37 * hash + 4;
                hash = 53 * hash + getPhoto().hashCode();
            }
            if (hasNAV()) {
                hash = 37 * hash + 5;
                hash = 53 * hash + getNAV().hashCode();
            }
            if (hasUniDt()) {
                hash = 37 * hash + 6;
                hash = 53 * hash + getUniDt().hashCode();
            }
            if (hasCanDtJ1939()) {
                hash = 37 * hash + 7;
                hash = 53 * hash + getCanDtJ1939().hashCode();
            }
            if (hasLLSDt()) {
                hash = 37 * hash + 8;
                hash = 53 * hash + getLLSDt().hashCode();
            }
            if (hasOther()) {
                hash = 37 * hash + 9;
                hash = 53 * hash + getOther().hashCode();
            }
            if (hasICONDt()) {
                hash = 37 * hash + 10;
                hash = 53 * hash + getICONDt().hashCode();
            }
            if (hasOBDDtJ1979()) {
                hash = 37 * hash + 11;
                hash = 53 * hash + getOBDDtJ1979().hashCode();
            }
            if (hasLOG()) {
                hash = 37 * hash + 16;
                hash = 53 * hash + getLOG().hashCode();
            }
            hash = 29 * hash + this.unknownFields.hashCode();
            this.memoizedHashCode = hash;
            return hash;
        }

        public static OmnicommMessage parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
            return (OmnicommMessage) PARSER.parseFrom(data);
        }

        public static OmnicommMessage parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (OmnicommMessage) PARSER.parseFrom(data, extensionRegistry);
        }

        public static OmnicommMessage parseFrom(ByteString data) throws InvalidProtocolBufferException {
            return (OmnicommMessage) PARSER.parseFrom(data);
        }

        public static OmnicommMessage parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (OmnicommMessage) PARSER.parseFrom(data, extensionRegistry);
        }

        public static OmnicommMessage parseFrom(byte[] data) throws InvalidProtocolBufferException {
            return (OmnicommMessage) PARSER.parseFrom(data);
        }

        public static OmnicommMessage parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return (OmnicommMessage) PARSER.parseFrom(data, extensionRegistry);
        }

        public static OmnicommMessage parseFrom(InputStream input) throws IOException {
            return
                    (OmnicommMessage) GeneratedMessageV3.parseWithIOException(PARSER, input);
        }

        public static OmnicommMessage parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return
                    (OmnicommMessage) GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static OmnicommMessage parseDelimitedFrom(InputStream input) throws IOException {
            return
                    (OmnicommMessage) GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
        }

        public static OmnicommMessage parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return
                    (OmnicommMessage) GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static OmnicommMessage parseFrom(CodedInputStream input) throws IOException {
            return
                    (OmnicommMessage) GeneratedMessageV3.parseWithIOException(PARSER, input);
        }

        public static OmnicommMessage parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
            return
                    (OmnicommMessage) GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(OmnicommMessage prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder())
                    .mergeFrom(this);
        }

        protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        public static final class Builder extends GeneratedMessageV3.Builder<Builder> implements OmnicommMessageOuterClass.OmnicommMessageOrBuilder {
            private int bitField0_;

            private Internal.IntList mID_;

            private OmnicommMessageOuterClass.OmnicommMessage.General general_;

            private SingleFieldBuilderV3<OmnicommMessageOuterClass.OmnicommMessage.General, OmnicommMessageOuterClass.OmnicommMessage.General.Builder, OmnicommMessageOuterClass.OmnicommMessage.GeneralOrBuilder> generalBuilder_;

            private OmnicommMessageOuterClass.OmnicommMessage.Photo photo_;

            private SingleFieldBuilderV3<OmnicommMessageOuterClass.OmnicommMessage.Photo, OmnicommMessageOuterClass.OmnicommMessage.Photo.Builder, OmnicommMessageOuterClass.OmnicommMessage.PhotoOrBuilder> photoBuilder_;

            private OmnicommMessageOuterClass.OmnicommMessage.NAV nAV_;

            private SingleFieldBuilderV3<OmnicommMessageOuterClass.OmnicommMessage.NAV, OmnicommMessageOuterClass.OmnicommMessage.NAV.Builder, OmnicommMessageOuterClass.OmnicommMessage.NAVOrBuilder> nAVBuilder_;

            private OmnicommMessageOuterClass.OmnicommMessage.UniDt uniDt_;

            private SingleFieldBuilderV3<OmnicommMessageOuterClass.OmnicommMessage.UniDt, OmnicommMessageOuterClass.OmnicommMessage.UniDt.Builder, OmnicommMessageOuterClass.OmnicommMessage.UniDtOrBuilder> uniDtBuilder_;

            private OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939 canDtJ1939_;

            private SingleFieldBuilderV3<OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939, OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939.Builder, OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939OrBuilder> canDtJ1939Builder_;

            private OmnicommMessageOuterClass.OmnicommMessage.LLSDt lLSDt_;

            private SingleFieldBuilderV3<OmnicommMessageOuterClass.OmnicommMessage.LLSDt, OmnicommMessageOuterClass.OmnicommMessage.LLSDt.Builder, OmnicommMessageOuterClass.OmnicommMessage.LLSDtOrBuilder> lLSDtBuilder_;

            private OmnicommMessageOuterClass.OmnicommMessage.Other other_;

            private SingleFieldBuilderV3<OmnicommMessageOuterClass.OmnicommMessage.Other, OmnicommMessageOuterClass.OmnicommMessage.Other.Builder, OmnicommMessageOuterClass.OmnicommMessage.OtherOrBuilder> otherBuilder_;

            private OmnicommMessageOuterClass.OmnicommMessage.ICONDt iCONDt_;

            private SingleFieldBuilderV3<OmnicommMessageOuterClass.OmnicommMessage.ICONDt, OmnicommMessageOuterClass.OmnicommMessage.ICONDt.Builder, OmnicommMessageOuterClass.OmnicommMessage.ICONDtOrBuilder> iCONDtBuilder_;

            private OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979 oBDDtJ1979_;

            private SingleFieldBuilderV3<OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979, OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979.Builder, OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979OrBuilder> oBDDtJ1979Builder_;

            private OmnicommMessageOuterClass.OmnicommMessage.LOG lOG_;

            private SingleFieldBuilderV3<OmnicommMessageOuterClass.OmnicommMessage.LOG, OmnicommMessageOuterClass.OmnicommMessage.LOG.Builder, OmnicommMessageOuterClass.OmnicommMessage.LOGOrBuilder> lOGBuilder_;

            public static final Descriptors.Descriptor getDescriptor() {
                return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_descriptor;
            }

            protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
                return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(OmnicommMessageOuterClass.OmnicommMessage.class, Builder.class);
            }

            private Builder() {
                this.mID_ = OmnicommMessageOuterClass.OmnicommMessage.emptyIntList();
                maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessageV3.BuilderParent parent) {
                super(parent);
                this.mID_ = OmnicommMessageOuterClass.OmnicommMessage.emptyIntList();
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (OmnicommMessageOuterClass.OmnicommMessage.alwaysUseFieldBuilders) {
                    getGeneralFieldBuilder();
                    getPhotoFieldBuilder();
                    getNAVFieldBuilder();
                    getUniDtFieldBuilder();
                    getCanDtJ1939FieldBuilder();
                    getLLSDtFieldBuilder();
                    getOtherFieldBuilder();
                    getICONDtFieldBuilder();
                    getOBDDtJ1979FieldBuilder();
                    getLOGFieldBuilder();
                }
            }

            public Builder clear() {
                super.clear();
                this.mID_ = OmnicommMessageOuterClass.OmnicommMessage.emptyIntList();
                this.bitField0_ &= 0xFFFFFFFE;
                if (this.generalBuilder_ == null) {
                    this.general_ = null;
                } else {
                    this.generalBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFD;
                if (this.photoBuilder_ == null) {
                    this.photo_ = null;
                } else {
                    this.photoBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFB;
                if (this.nAVBuilder_ == null) {
                    this.nAV_ = null;
                } else {
                    this.nAVBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFF7;
                if (this.uniDtBuilder_ == null) {
                    this.uniDt_ = null;
                } else {
                    this.uniDtBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFEF;
                if (this.canDtJ1939Builder_ == null) {
                    this.canDtJ1939_ = null;
                } else {
                    this.canDtJ1939Builder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFDF;
                if (this.lLSDtBuilder_ == null) {
                    this.lLSDt_ = null;
                } else {
                    this.lLSDtBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFBF;
                if (this.otherBuilder_ == null) {
                    this.other_ = null;
                } else {
                    this.otherBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFF7F;
                if (this.iCONDtBuilder_ == null) {
                    this.iCONDt_ = null;
                } else {
                    this.iCONDtBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFEFF;
                if (this.oBDDtJ1979Builder_ == null) {
                    this.oBDDtJ1979_ = null;
                } else {
                    this.oBDDtJ1979Builder_.clear();
                }
                this.bitField0_ &= 0xFFFFFDFF;
                if (this.lOGBuilder_ == null) {
                    this.lOG_ = null;
                } else {
                    this.lOGBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFBFF;
                return this;
            }

            public Descriptors.Descriptor getDescriptorForType() {
                return OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_descriptor;
            }

            public OmnicommMessageOuterClass.OmnicommMessage getDefaultInstanceForType() {
                return OmnicommMessageOuterClass.OmnicommMessage.getDefaultInstance();
            }

            public OmnicommMessageOuterClass.OmnicommMessage build() {
                OmnicommMessageOuterClass.OmnicommMessage result = buildPartial();
                if (!result.isInitialized())
                    throw newUninitializedMessageException(result);
                return result;
            }

            public OmnicommMessageOuterClass.OmnicommMessage buildPartial() {
                OmnicommMessageOuterClass.OmnicommMessage result = new OmnicommMessageOuterClass.OmnicommMessage(this);
                int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((this.bitField0_ & 0x1) != 0) {
                    this.mID_.makeImmutable();
                    this.bitField0_ &= 0xFFFFFFFE;
                }
                result.mID_ = this.mID_;
                if ((from_bitField0_ & 0x2) != 0) {
                    if (this.generalBuilder_ == null) {
                        result.general_ = this.general_;
                    } else {
                        result.general_ = (OmnicommMessageOuterClass.OmnicommMessage.General) this.generalBuilder_.build();
                    }
                    to_bitField0_ |= 0x1;
                }
                if ((from_bitField0_ & 0x4) != 0) {
                    if (this.photoBuilder_ == null) {
                        result.photo_ = this.photo_;
                    } else {
                        result.photo_ = (OmnicommMessageOuterClass.OmnicommMessage.Photo) this.photoBuilder_.build();
                    }
                    to_bitField0_ |= 0x2;
                }
                if ((from_bitField0_ & 0x8) != 0) {
                    if (this.nAVBuilder_ == null) {
                        result.nAV_ = this.nAV_;
                    } else {
                        result.nAV_ = (OmnicommMessageOuterClass.OmnicommMessage.NAV) this.nAVBuilder_.build();
                    }
                    to_bitField0_ |= 0x4;
                }
                if ((from_bitField0_ & 0x10) != 0) {
                    if (this.uniDtBuilder_ == null) {
                        result.uniDt_ = this.uniDt_;
                    } else {
                        result.uniDt_ = (OmnicommMessageOuterClass.OmnicommMessage.UniDt) this.uniDtBuilder_.build();
                    }
                    to_bitField0_ |= 0x8;
                }
                if ((from_bitField0_ & 0x20) != 0) {
                    if (this.canDtJ1939Builder_ == null) {
                        result.canDtJ1939_ = this.canDtJ1939_;
                    } else {
                        result.canDtJ1939_ = (OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939) this.canDtJ1939Builder_.build();
                    }
                    to_bitField0_ |= 0x10;
                }
                if ((from_bitField0_ & 0x40) != 0) {
                    if (this.lLSDtBuilder_ == null) {
                        result.lLSDt_ = this.lLSDt_;
                    } else {
                        result.lLSDt_ = (OmnicommMessageOuterClass.OmnicommMessage.LLSDt) this.lLSDtBuilder_.build();
                    }
                    to_bitField0_ |= 0x20;
                }
                if ((from_bitField0_ & 0x80) != 0) {
                    if (this.otherBuilder_ == null) {
                        result.other_ = this.other_;
                    } else {
                        result.other_ = (OmnicommMessageOuterClass.OmnicommMessage.Other) this.otherBuilder_.build();
                    }
                    to_bitField0_ |= 0x40;
                }
                if ((from_bitField0_ & 0x100) != 0) {
                    if (this.iCONDtBuilder_ == null) {
                        result.iCONDt_ = this.iCONDt_;
                    } else {
                        result.iCONDt_ = (OmnicommMessageOuterClass.OmnicommMessage.ICONDt) this.iCONDtBuilder_.build();
                    }
                    to_bitField0_ |= 0x80;
                }
                if ((from_bitField0_ & 0x200) != 0) {
                    if (this.oBDDtJ1979Builder_ == null) {
                        result.oBDDtJ1979_ = this.oBDDtJ1979_;
                    } else {
                        result.oBDDtJ1979_ = (OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979) this.oBDDtJ1979Builder_.build();
                    }
                    to_bitField0_ |= 0x100;
                }
                if ((from_bitField0_ & 0x400) != 0) {
                    if (this.lOGBuilder_ == null) {
                        result.lOG_ = this.lOG_;
                    } else {
                        result.lOG_ = (OmnicommMessageOuterClass.OmnicommMessage.LOG) this.lOGBuilder_.build();
                    }
                    to_bitField0_ |= 0x200;
                }
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }

            public Builder setField(Descriptors.FieldDescriptor field, Object value) {
                return (Builder) super.setField(field, value);
            }

            public Builder clearField(Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }

            public Builder clearOneof(Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }

            public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }

            public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }

            public Builder mergeFrom(Message other) {
                if (other instanceof OmnicommMessageOuterClass.OmnicommMessage)
                    return mergeFrom((OmnicommMessageOuterClass.OmnicommMessage) other);
                super.mergeFrom(other);
                return this;
            }

            public Builder mergeFrom(OmnicommMessageOuterClass.OmnicommMessage other) {
                if (other == OmnicommMessageOuterClass.OmnicommMessage.getDefaultInstance())
                    return this;
                if (!other.mID_.isEmpty()) {
                    if (this.mID_.isEmpty()) {
                        this.mID_ = other.mID_;
                        this.bitField0_ &= 0xFFFFFFFE;
                    } else {
                        ensureMIDIsMutable();
                        this.mID_.addAll((Collection) other.mID_);
                    }
                    onChanged();
                }
                if (other.hasGeneral())
                    mergeGeneral(other.getGeneral());
                if (other.hasPhoto())
                    mergePhoto(other.getPhoto());
                if (other.hasNAV())
                    mergeNAV(other.getNAV());
                if (other.hasUniDt())
                    mergeUniDt(other.getUniDt());
                if (other.hasCanDtJ1939())
                    mergeCanDtJ1939(other.getCanDtJ1939());
                if (other.hasLLSDt())
                    mergeLLSDt(other.getLLSDt());
                if (other.hasOther())
                    mergeOther(other.getOther());
                if (other.hasICONDt())
                    mergeICONDt(other.getICONDt());
                if (other.hasOBDDtJ1979())
                    mergeOBDDtJ1979(other.getOBDDtJ1979());
                if (other.hasLOG())
                    mergeLOG(other.getLOG());
                mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                if (hasNAV() && !getNAV().isInitialized())
                    return false;
                return true;
            }

            public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
                OmnicommMessageOuterClass.OmnicommMessage parsedMessage = null;
                try {
                    parsedMessage = (OmnicommMessageOuterClass.OmnicommMessage) OmnicommMessageOuterClass.OmnicommMessage.PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (OmnicommMessageOuterClass.OmnicommMessage) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null)
                        mergeFrom(parsedMessage);
                }
                return this;
            }

            private void ensureMIDIsMutable() {
                if ((this.bitField0_ & 0x1) == 0) {
                    this.mID_ = OmnicommMessageOuterClass.OmnicommMessage.mutableCopy(this.mID_);
                    this.bitField0_ |= 0x1;
                }
            }

            public List<Integer> getMIDList() {
                return ((this.bitField0_ & 0x1) != 0) ?
                        Collections.<Integer>unmodifiableList((List<? extends Integer>) this.mID_) : (List<Integer>) this.mID_;
            }

            public int getMIDCount() {
                return this.mID_.size();
            }

            public int getMID(int index) {
                return this.mID_.getInt(index);
            }

            public Builder setMID(int index, int value) {
                ensureMIDIsMutable();
                this.mID_.setInt(index, value);
                onChanged();
                return this;
            }

            public Builder addMID(int value) {
                ensureMIDIsMutable();
                this.mID_.addInt(value);
                onChanged();
                return this;
            }

            public Builder addAllMID(Iterable<? extends Integer> values) {
                ensureMIDIsMutable();
                AbstractMessageLite.Builder.addAll(values, (List) this.mID_);
                onChanged();
                return this;
            }

            public Builder clearMID() {
                this.mID_ = OmnicommMessageOuterClass.OmnicommMessage.emptyIntList();
                this.bitField0_ &= 0xFFFFFFFE;
                onChanged();
                return this;
            }

            public boolean hasGeneral() {
                return ((this.bitField0_ & 0x2) != 0);
            }

            public OmnicommMessageOuterClass.OmnicommMessage.General getGeneral() {
                if (this.generalBuilder_ == null)
                    return (this.general_ == null) ? OmnicommMessageOuterClass.OmnicommMessage.General.getDefaultInstance() : this.general_;
                return (OmnicommMessageOuterClass.OmnicommMessage.General) this.generalBuilder_.getMessage();
            }

            public Builder setGeneral(OmnicommMessageOuterClass.OmnicommMessage.General value) {
                if (this.generalBuilder_ == null) {
                    if (value == null)
                        throw new NullPointerException();
                    this.general_ = value;
                    onChanged();
                } else {
                    this.generalBuilder_.setMessage((AbstractMessage) value);
                }
                this.bitField0_ |= 0x2;
                return this;
            }

            public Builder setGeneral(OmnicommMessageOuterClass.OmnicommMessage.General.Builder builderForValue) {
                if (this.generalBuilder_ == null) {
                    this.general_ = builderForValue.build();
                    onChanged();
                } else {
                    this.generalBuilder_.setMessage((AbstractMessage) builderForValue.build());
                }
                this.bitField0_ |= 0x2;
                return this;
            }

            public Builder mergeGeneral(OmnicommMessageOuterClass.OmnicommMessage.General value) {
                if (this.generalBuilder_ == null) {
                    if ((this.bitField0_ & 0x2) != 0 && this.general_ != null && this.general_ !=

                            OmnicommMessageOuterClass.OmnicommMessage.General.getDefaultInstance()) {
                        this
                                .general_ = OmnicommMessageOuterClass.OmnicommMessage.General.newBuilder(this.general_).mergeFrom(value).buildPartial();
                    } else {
                        this.general_ = value;
                    }
                    onChanged();
                } else {
                    this.generalBuilder_.mergeFrom((AbstractMessage) value);
                }
                this.bitField0_ |= 0x2;
                return this;
            }

            public Builder clearGeneral() {
                if (this.generalBuilder_ == null) {
                    this.general_ = null;
                    onChanged();
                } else {
                    this.generalBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFD;
                return this;
            }

            public OmnicommMessageOuterClass.OmnicommMessage.General.Builder getGeneralBuilder() {
                this.bitField0_ |= 0x2;
                onChanged();
                return (OmnicommMessageOuterClass.OmnicommMessage.General.Builder) getGeneralFieldBuilder().getBuilder();
            }

            public OmnicommMessageOuterClass.OmnicommMessage.GeneralOrBuilder getGeneralOrBuilder() {
                if (this.generalBuilder_ != null)
                    return (OmnicommMessageOuterClass.OmnicommMessage.GeneralOrBuilder) this.generalBuilder_.getMessageOrBuilder();
                return (this.general_ == null) ?
                        OmnicommMessageOuterClass.OmnicommMessage.General.getDefaultInstance() : this.general_;
            }

            private SingleFieldBuilderV3<OmnicommMessageOuterClass.OmnicommMessage.General, OmnicommMessageOuterClass.OmnicommMessage.General.Builder, OmnicommMessageOuterClass.OmnicommMessage.GeneralOrBuilder> getGeneralFieldBuilder() {
                if (this.generalBuilder_ == null) {
                    this

                            .generalBuilder_ = new SingleFieldBuilderV3((AbstractMessage) getGeneral(), (AbstractMessage.BuilderParent) getParentForChildren(), isClean());
                    this.general_ = null;
                }
                return this.generalBuilder_;
            }

            public boolean hasPhoto() {
                return ((this.bitField0_ & 0x4) != 0);
            }

            public OmnicommMessageOuterClass.OmnicommMessage.Photo getPhoto() {
                if (this.photoBuilder_ == null)
                    return (this.photo_ == null) ? OmnicommMessageOuterClass.OmnicommMessage.Photo.getDefaultInstance() : this.photo_;
                return (OmnicommMessageOuterClass.OmnicommMessage.Photo) this.photoBuilder_.getMessage();
            }

            public Builder setPhoto(OmnicommMessageOuterClass.OmnicommMessage.Photo value) {
                if (this.photoBuilder_ == null) {
                    if (value == null)
                        throw new NullPointerException();
                    this.photo_ = value;
                    onChanged();
                } else {
                    this.photoBuilder_.setMessage((AbstractMessage) value);
                }
                this.bitField0_ |= 0x4;
                return this;
            }

            public Builder setPhoto(OmnicommMessageOuterClass.OmnicommMessage.Photo.Builder builderForValue) {
                if (this.photoBuilder_ == null) {
                    this.photo_ = builderForValue.build();
                    onChanged();
                } else {
                    this.photoBuilder_.setMessage((AbstractMessage) builderForValue.build());
                }
                this.bitField0_ |= 0x4;
                return this;
            }

            public Builder mergePhoto(OmnicommMessageOuterClass.OmnicommMessage.Photo value) {
                if (this.photoBuilder_ == null) {
                    if ((this.bitField0_ & 0x4) != 0 && this.photo_ != null && this.photo_ !=

                            OmnicommMessageOuterClass.OmnicommMessage.Photo.getDefaultInstance()) {
                        this
                                .photo_ = OmnicommMessageOuterClass.OmnicommMessage.Photo.newBuilder(this.photo_).mergeFrom(value).buildPartial();
                    } else {
                        this.photo_ = value;
                    }
                    onChanged();
                } else {
                    this.photoBuilder_.mergeFrom((AbstractMessage) value);
                }
                this.bitField0_ |= 0x4;
                return this;
            }

            public Builder clearPhoto() {
                if (this.photoBuilder_ == null) {
                    this.photo_ = null;
                    onChanged();
                } else {
                    this.photoBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFB;
                return this;
            }

            public OmnicommMessageOuterClass.OmnicommMessage.Photo.Builder getPhotoBuilder() {
                this.bitField0_ |= 0x4;
                onChanged();
                return (OmnicommMessageOuterClass.OmnicommMessage.Photo.Builder) getPhotoFieldBuilder().getBuilder();
            }

            public OmnicommMessageOuterClass.OmnicommMessage.PhotoOrBuilder getPhotoOrBuilder() {
                if (this.photoBuilder_ != null)
                    return (OmnicommMessageOuterClass.OmnicommMessage.PhotoOrBuilder) this.photoBuilder_.getMessageOrBuilder();
                return (this.photo_ == null) ?
                        OmnicommMessageOuterClass.OmnicommMessage.Photo.getDefaultInstance() : this.photo_;
            }

            private SingleFieldBuilderV3<OmnicommMessageOuterClass.OmnicommMessage.Photo, OmnicommMessageOuterClass.OmnicommMessage.Photo.Builder, OmnicommMessageOuterClass.OmnicommMessage.PhotoOrBuilder> getPhotoFieldBuilder() {
                if (this.photoBuilder_ == null) {
                    this

                            .photoBuilder_ = new SingleFieldBuilderV3((AbstractMessage) getPhoto(), (AbstractMessage.BuilderParent) getParentForChildren(), isClean());
                    this.photo_ = null;
                }
                return this.photoBuilder_;
            }

            public boolean hasNAV() {
                return ((this.bitField0_ & 0x8) != 0);
            }

            public OmnicommMessageOuterClass.OmnicommMessage.NAV getNAV() {
                if (this.nAVBuilder_ == null)
                    return (this.nAV_ == null) ? OmnicommMessageOuterClass.OmnicommMessage.NAV.getDefaultInstance() : this.nAV_;
                return (OmnicommMessageOuterClass.OmnicommMessage.NAV) this.nAVBuilder_.getMessage();
            }

            public Builder setNAV(OmnicommMessageOuterClass.OmnicommMessage.NAV value) {
                if (this.nAVBuilder_ == null) {
                    if (value == null)
                        throw new NullPointerException();
                    this.nAV_ = value;
                    onChanged();
                } else {
                    this.nAVBuilder_.setMessage((AbstractMessage) value);
                }
                this.bitField0_ |= 0x8;
                return this;
            }

            public Builder setNAV(OmnicommMessageOuterClass.OmnicommMessage.NAV.Builder builderForValue) {
                if (this.nAVBuilder_ == null) {
                    this.nAV_ = builderForValue.build();
                    onChanged();
                } else {
                    this.nAVBuilder_.setMessage((AbstractMessage) builderForValue.build());
                }
                this.bitField0_ |= 0x8;
                return this;
            }

            public Builder mergeNAV(OmnicommMessageOuterClass.OmnicommMessage.NAV value) {
                if (this.nAVBuilder_ == null) {
                    if ((this.bitField0_ & 0x8) != 0 && this.nAV_ != null && this.nAV_ !=

                            OmnicommMessageOuterClass.OmnicommMessage.NAV.getDefaultInstance()) {
                        this
                                .nAV_ = OmnicommMessageOuterClass.OmnicommMessage.NAV.newBuilder(this.nAV_).mergeFrom(value).buildPartial();
                    } else {
                        this.nAV_ = value;
                    }
                    onChanged();
                } else {
                    this.nAVBuilder_.mergeFrom((AbstractMessage) value);
                }
                this.bitField0_ |= 0x8;
                return this;
            }

            public Builder clearNAV() {
                if (this.nAVBuilder_ == null) {
                    this.nAV_ = null;
                    onChanged();
                } else {
                    this.nAVBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFF7;
                return this;
            }

            public OmnicommMessageOuterClass.OmnicommMessage.NAV.Builder getNAVBuilder() {
                this.bitField0_ |= 0x8;
                onChanged();
                return (OmnicommMessageOuterClass.OmnicommMessage.NAV.Builder) getNAVFieldBuilder().getBuilder();
            }

            public OmnicommMessageOuterClass.OmnicommMessage.NAVOrBuilder getNAVOrBuilder() {
                if (this.nAVBuilder_ != null)
                    return (OmnicommMessageOuterClass.OmnicommMessage.NAVOrBuilder) this.nAVBuilder_.getMessageOrBuilder();
                return (this.nAV_ == null) ?
                        OmnicommMessageOuterClass.OmnicommMessage.NAV.getDefaultInstance() : this.nAV_;
            }

            private SingleFieldBuilderV3<OmnicommMessageOuterClass.OmnicommMessage.NAV, OmnicommMessageOuterClass.OmnicommMessage.NAV.Builder, OmnicommMessageOuterClass.OmnicommMessage.NAVOrBuilder> getNAVFieldBuilder() {
                if (this.nAVBuilder_ == null) {
                    this

                            .nAVBuilder_ = new SingleFieldBuilderV3((AbstractMessage) getNAV(), (AbstractMessage.BuilderParent) getParentForChildren(), isClean());
                    this.nAV_ = null;
                }
                return this.nAVBuilder_;
            }

            public boolean hasUniDt() {
                return ((this.bitField0_ & 0x10) != 0);
            }

            public OmnicommMessageOuterClass.OmnicommMessage.UniDt getUniDt() {
                if (this.uniDtBuilder_ == null)
                    return (this.uniDt_ == null) ? OmnicommMessageOuterClass.OmnicommMessage.UniDt.getDefaultInstance() : this.uniDt_;
                return (OmnicommMessageOuterClass.OmnicommMessage.UniDt) this.uniDtBuilder_.getMessage();
            }

            public Builder setUniDt(OmnicommMessageOuterClass.OmnicommMessage.UniDt value) {
                if (this.uniDtBuilder_ == null) {
                    if (value == null)
                        throw new NullPointerException();
                    this.uniDt_ = value;
                    onChanged();
                } else {
                    this.uniDtBuilder_.setMessage((AbstractMessage) value);
                }
                this.bitField0_ |= 0x10;
                return this;
            }

            public Builder setUniDt(OmnicommMessageOuterClass.OmnicommMessage.UniDt.Builder builderForValue) {
                if (this.uniDtBuilder_ == null) {
                    this.uniDt_ = builderForValue.build();
                    onChanged();
                } else {
                    this.uniDtBuilder_.setMessage((AbstractMessage) builderForValue.build());
                }
                this.bitField0_ |= 0x10;
                return this;
            }

            public Builder mergeUniDt(OmnicommMessageOuterClass.OmnicommMessage.UniDt value) {
                if (this.uniDtBuilder_ == null) {
                    if ((this.bitField0_ & 0x10) != 0 && this.uniDt_ != null && this.uniDt_ !=

                            OmnicommMessageOuterClass.OmnicommMessage.UniDt.getDefaultInstance()) {
                        this
                                .uniDt_ = OmnicommMessageOuterClass.OmnicommMessage.UniDt.newBuilder(this.uniDt_).mergeFrom(value).buildPartial();
                    } else {
                        this.uniDt_ = value;
                    }
                    onChanged();
                } else {
                    this.uniDtBuilder_.mergeFrom((AbstractMessage) value);
                }
                this.bitField0_ |= 0x10;
                return this;
            }

            public Builder clearUniDt() {
                if (this.uniDtBuilder_ == null) {
                    this.uniDt_ = null;
                    onChanged();
                } else {
                    this.uniDtBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFEF;
                return this;
            }

            public OmnicommMessageOuterClass.OmnicommMessage.UniDt.Builder getUniDtBuilder() {
                this.bitField0_ |= 0x10;
                onChanged();
                return (OmnicommMessageOuterClass.OmnicommMessage.UniDt.Builder) getUniDtFieldBuilder().getBuilder();
            }

            public OmnicommMessageOuterClass.OmnicommMessage.UniDtOrBuilder getUniDtOrBuilder() {
                if (this.uniDtBuilder_ != null)
                    return (OmnicommMessageOuterClass.OmnicommMessage.UniDtOrBuilder) this.uniDtBuilder_.getMessageOrBuilder();
                return (this.uniDt_ == null) ?
                        OmnicommMessageOuterClass.OmnicommMessage.UniDt.getDefaultInstance() : this.uniDt_;
            }

            private SingleFieldBuilderV3<OmnicommMessageOuterClass.OmnicommMessage.UniDt, OmnicommMessageOuterClass.OmnicommMessage.UniDt.Builder, OmnicommMessageOuterClass.OmnicommMessage.UniDtOrBuilder> getUniDtFieldBuilder() {
                if (this.uniDtBuilder_ == null) {
                    this

                            .uniDtBuilder_ = new SingleFieldBuilderV3((AbstractMessage) getUniDt(), (AbstractMessage.BuilderParent) getParentForChildren(), isClean());
                    this.uniDt_ = null;
                }
                return this.uniDtBuilder_;
            }

            public boolean hasCanDtJ1939() {
                return ((this.bitField0_ & 0x20) != 0);
            }

            public OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939 getCanDtJ1939() {
                if (this.canDtJ1939Builder_ == null)
                    return (this.canDtJ1939_ == null) ? OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939.getDefaultInstance() : this.canDtJ1939_;
                return (OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939) this.canDtJ1939Builder_.getMessage();
            }

            public Builder setCanDtJ1939(OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939 value) {
                if (this.canDtJ1939Builder_ == null) {
                    if (value == null)
                        throw new NullPointerException();
                    this.canDtJ1939_ = value;
                    onChanged();
                } else {
                    this.canDtJ1939Builder_.setMessage((AbstractMessage) value);
                }
                this.bitField0_ |= 0x20;
                return this;
            }

            public Builder setCanDtJ1939(OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939.Builder builderForValue) {
                if (this.canDtJ1939Builder_ == null) {
                    this.canDtJ1939_ = builderForValue.build();
                    onChanged();
                } else {
                    this.canDtJ1939Builder_.setMessage((AbstractMessage) builderForValue.build());
                }
                this.bitField0_ |= 0x20;
                return this;
            }

            public Builder mergeCanDtJ1939(OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939 value) {
                if (this.canDtJ1939Builder_ == null) {
                    if ((this.bitField0_ & 0x20) != 0 && this.canDtJ1939_ != null && this.canDtJ1939_ !=

                            OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939.getDefaultInstance()) {
                        this
                                .canDtJ1939_ = OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939.newBuilder(this.canDtJ1939_).mergeFrom(value).buildPartial();
                    } else {
                        this.canDtJ1939_ = value;
                    }
                    onChanged();
                } else {
                    this.canDtJ1939Builder_.mergeFrom((AbstractMessage) value);
                }
                this.bitField0_ |= 0x20;
                return this;
            }

            public Builder clearCanDtJ1939() {
                if (this.canDtJ1939Builder_ == null) {
                    this.canDtJ1939_ = null;
                    onChanged();
                } else {
                    this.canDtJ1939Builder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFDF;
                return this;
            }

            public OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939.Builder getCanDtJ1939Builder() {
                this.bitField0_ |= 0x20;
                onChanged();
                return (OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939.Builder) getCanDtJ1939FieldBuilder().getBuilder();
            }

            public OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939OrBuilder getCanDtJ1939OrBuilder() {
                if (this.canDtJ1939Builder_ != null)
                    return (OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939OrBuilder) this.canDtJ1939Builder_.getMessageOrBuilder();
                return (this.canDtJ1939_ == null) ?
                        OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939.getDefaultInstance() : this.canDtJ1939_;
            }

            private SingleFieldBuilderV3<OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939, OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939.Builder, OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939OrBuilder> getCanDtJ1939FieldBuilder() {
                if (this.canDtJ1939Builder_ == null) {
                    this

                            .canDtJ1939Builder_ = new SingleFieldBuilderV3((AbstractMessage) getCanDtJ1939(), (AbstractMessage.BuilderParent) getParentForChildren(), isClean());
                    this.canDtJ1939_ = null;
                }
                return this.canDtJ1939Builder_;
            }

            public boolean hasLLSDt() {
                return ((this.bitField0_ & 0x40) != 0);
            }

            public OmnicommMessageOuterClass.OmnicommMessage.LLSDt getLLSDt() {
                if (this.lLSDtBuilder_ == null)
                    return (this.lLSDt_ == null) ? OmnicommMessageOuterClass.OmnicommMessage.LLSDt.getDefaultInstance() : this.lLSDt_;
                return (OmnicommMessageOuterClass.OmnicommMessage.LLSDt) this.lLSDtBuilder_.getMessage();
            }

            public Builder setLLSDt(OmnicommMessageOuterClass.OmnicommMessage.LLSDt value) {
                if (this.lLSDtBuilder_ == null) {
                    if (value == null)
                        throw new NullPointerException();
                    this.lLSDt_ = value;
                    onChanged();
                } else {
                    this.lLSDtBuilder_.setMessage((AbstractMessage) value);
                }
                this.bitField0_ |= 0x40;
                return this;
            }

            public Builder setLLSDt(OmnicommMessageOuterClass.OmnicommMessage.LLSDt.Builder builderForValue) {
                if (this.lLSDtBuilder_ == null) {
                    this.lLSDt_ = builderForValue.build();
                    onChanged();
                } else {
                    this.lLSDtBuilder_.setMessage((AbstractMessage) builderForValue.build());
                }
                this.bitField0_ |= 0x40;
                return this;
            }

            public Builder mergeLLSDt(OmnicommMessageOuterClass.OmnicommMessage.LLSDt value) {
                if (this.lLSDtBuilder_ == null) {
                    if ((this.bitField0_ & 0x40) != 0 && this.lLSDt_ != null && this.lLSDt_ !=

                            OmnicommMessageOuterClass.OmnicommMessage.LLSDt.getDefaultInstance()) {
                        this
                                .lLSDt_ = OmnicommMessageOuterClass.OmnicommMessage.LLSDt.newBuilder(this.lLSDt_).mergeFrom(value).buildPartial();
                    } else {
                        this.lLSDt_ = value;
                    }
                    onChanged();
                } else {
                    this.lLSDtBuilder_.mergeFrom((AbstractMessage) value);
                }
                this.bitField0_ |= 0x40;
                return this;
            }

            public Builder clearLLSDt() {
                if (this.lLSDtBuilder_ == null) {
                    this.lLSDt_ = null;
                    onChanged();
                } else {
                    this.lLSDtBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFBF;
                return this;
            }

            public OmnicommMessageOuterClass.OmnicommMessage.LLSDt.Builder getLLSDtBuilder() {
                this.bitField0_ |= 0x40;
                onChanged();
                return (OmnicommMessageOuterClass.OmnicommMessage.LLSDt.Builder) getLLSDtFieldBuilder().getBuilder();
            }

            public OmnicommMessageOuterClass.OmnicommMessage.LLSDtOrBuilder getLLSDtOrBuilder() {
                if (this.lLSDtBuilder_ != null)
                    return (OmnicommMessageOuterClass.OmnicommMessage.LLSDtOrBuilder) this.lLSDtBuilder_.getMessageOrBuilder();
                return (this.lLSDt_ == null) ?
                        OmnicommMessageOuterClass.OmnicommMessage.LLSDt.getDefaultInstance() : this.lLSDt_;
            }

            private SingleFieldBuilderV3<OmnicommMessageOuterClass.OmnicommMessage.LLSDt, OmnicommMessageOuterClass.OmnicommMessage.LLSDt.Builder, OmnicommMessageOuterClass.OmnicommMessage.LLSDtOrBuilder> getLLSDtFieldBuilder() {
                if (this.lLSDtBuilder_ == null) {
                    this

                            .lLSDtBuilder_ = new SingleFieldBuilderV3((AbstractMessage) getLLSDt(), (AbstractMessage.BuilderParent) getParentForChildren(), isClean());
                    this.lLSDt_ = null;
                }
                return this.lLSDtBuilder_;
            }

            public boolean hasOther() {
                return ((this.bitField0_ & 0x80) != 0);
            }

            public OmnicommMessageOuterClass.OmnicommMessage.Other getOther() {
                if (this.otherBuilder_ == null)
                    return (this.other_ == null) ? OmnicommMessageOuterClass.OmnicommMessage.Other.getDefaultInstance() : this.other_;
                return (OmnicommMessageOuterClass.OmnicommMessage.Other) this.otherBuilder_.getMessage();
            }

            public Builder setOther(OmnicommMessageOuterClass.OmnicommMessage.Other value) {
                if (this.otherBuilder_ == null) {
                    if (value == null)
                        throw new NullPointerException();
                    this.other_ = value;
                    onChanged();
                } else {
                    this.otherBuilder_.setMessage((AbstractMessage) value);
                }
                this.bitField0_ |= 0x80;
                return this;
            }

            public Builder setOther(OmnicommMessageOuterClass.OmnicommMessage.Other.Builder builderForValue) {
                if (this.otherBuilder_ == null) {
                    this.other_ = builderForValue.build();
                    onChanged();
                } else {
                    this.otherBuilder_.setMessage((AbstractMessage) builderForValue.build());
                }
                this.bitField0_ |= 0x80;
                return this;
            }

            public Builder mergeOther(OmnicommMessageOuterClass.OmnicommMessage.Other value) {
                if (this.otherBuilder_ == null) {
                    if ((this.bitField0_ & 0x80) != 0 && this.other_ != null && this.other_ !=

                            OmnicommMessageOuterClass.OmnicommMessage.Other.getDefaultInstance()) {
                        this
                                .other_ = OmnicommMessageOuterClass.OmnicommMessage.Other.newBuilder(this.other_).mergeFrom(value).buildPartial();
                    } else {
                        this.other_ = value;
                    }
                    onChanged();
                } else {
                    this.otherBuilder_.mergeFrom((AbstractMessage) value);
                }
                this.bitField0_ |= 0x80;
                return this;
            }

            public Builder clearOther() {
                if (this.otherBuilder_ == null) {
                    this.other_ = null;
                    onChanged();
                } else {
                    this.otherBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFF7F;
                return this;
            }

            public OmnicommMessageOuterClass.OmnicommMessage.Other.Builder getOtherBuilder() {
                this.bitField0_ |= 0x80;
                onChanged();
                return (OmnicommMessageOuterClass.OmnicommMessage.Other.Builder) getOtherFieldBuilder().getBuilder();
            }

            public OmnicommMessageOuterClass.OmnicommMessage.OtherOrBuilder getOtherOrBuilder() {
                if (this.otherBuilder_ != null)
                    return (OmnicommMessageOuterClass.OmnicommMessage.OtherOrBuilder) this.otherBuilder_.getMessageOrBuilder();
                return (this.other_ == null) ?
                        OmnicommMessageOuterClass.OmnicommMessage.Other.getDefaultInstance() : this.other_;
            }

            private SingleFieldBuilderV3<OmnicommMessageOuterClass.OmnicommMessage.Other, OmnicommMessageOuterClass.OmnicommMessage.Other.Builder, OmnicommMessageOuterClass.OmnicommMessage.OtherOrBuilder> getOtherFieldBuilder() {
                if (this.otherBuilder_ == null) {
                    this

                            .otherBuilder_ = new SingleFieldBuilderV3((AbstractMessage) getOther(), (AbstractMessage.BuilderParent) getParentForChildren(), isClean());
                    this.other_ = null;
                }
                return this.otherBuilder_;
            }

            public boolean hasICONDt() {
                return ((this.bitField0_ & 0x100) != 0);
            }

            public OmnicommMessageOuterClass.OmnicommMessage.ICONDt getICONDt() {
                if (this.iCONDtBuilder_ == null)
                    return (this.iCONDt_ == null) ? OmnicommMessageOuterClass.OmnicommMessage.ICONDt.getDefaultInstance() : this.iCONDt_;
                return (OmnicommMessageOuterClass.OmnicommMessage.ICONDt) this.iCONDtBuilder_.getMessage();
            }

            public Builder setICONDt(OmnicommMessageOuterClass.OmnicommMessage.ICONDt value) {
                if (this.iCONDtBuilder_ == null) {
                    if (value == null)
                        throw new NullPointerException();
                    this.iCONDt_ = value;
                    onChanged();
                } else {
                    this.iCONDtBuilder_.setMessage((AbstractMessage) value);
                }
                this.bitField0_ |= 0x100;
                return this;
            }

            public Builder setICONDt(OmnicommMessageOuterClass.OmnicommMessage.ICONDt.Builder builderForValue) {
                if (this.iCONDtBuilder_ == null) {
                    this.iCONDt_ = builderForValue.build();
                    onChanged();
                } else {
                    this.iCONDtBuilder_.setMessage((AbstractMessage) builderForValue.build());
                }
                this.bitField0_ |= 0x100;
                return this;
            }

            public Builder mergeICONDt(OmnicommMessageOuterClass.OmnicommMessage.ICONDt value) {
                if (this.iCONDtBuilder_ == null) {
                    if ((this.bitField0_ & 0x100) != 0 && this.iCONDt_ != null && this.iCONDt_ !=

                            OmnicommMessageOuterClass.OmnicommMessage.ICONDt.getDefaultInstance()) {
                        this
                                .iCONDt_ = OmnicommMessageOuterClass.OmnicommMessage.ICONDt.newBuilder(this.iCONDt_).mergeFrom(value).buildPartial();
                    } else {
                        this.iCONDt_ = value;
                    }
                    onChanged();
                } else {
                    this.iCONDtBuilder_.mergeFrom((AbstractMessage) value);
                }
                this.bitField0_ |= 0x100;
                return this;
            }

            public Builder clearICONDt() {
                if (this.iCONDtBuilder_ == null) {
                    this.iCONDt_ = null;
                    onChanged();
                } else {
                    this.iCONDtBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFEFF;
                return this;
            }

            public OmnicommMessageOuterClass.OmnicommMessage.ICONDt.Builder getICONDtBuilder() {
                this.bitField0_ |= 0x100;
                onChanged();
                return (OmnicommMessageOuterClass.OmnicommMessage.ICONDt.Builder) getICONDtFieldBuilder().getBuilder();
            }

            public OmnicommMessageOuterClass.OmnicommMessage.ICONDtOrBuilder getICONDtOrBuilder() {
                if (this.iCONDtBuilder_ != null)
                    return (OmnicommMessageOuterClass.OmnicommMessage.ICONDtOrBuilder) this.iCONDtBuilder_.getMessageOrBuilder();
                return (this.iCONDt_ == null) ?
                        OmnicommMessageOuterClass.OmnicommMessage.ICONDt.getDefaultInstance() : this.iCONDt_;
            }

            private SingleFieldBuilderV3<OmnicommMessageOuterClass.OmnicommMessage.ICONDt, OmnicommMessageOuterClass.OmnicommMessage.ICONDt.Builder, OmnicommMessageOuterClass.OmnicommMessage.ICONDtOrBuilder> getICONDtFieldBuilder() {
                if (this.iCONDtBuilder_ == null) {
                    this

                            .iCONDtBuilder_ = new SingleFieldBuilderV3((AbstractMessage) getICONDt(), (AbstractMessage.BuilderParent) getParentForChildren(), isClean());
                    this.iCONDt_ = null;
                }
                return this.iCONDtBuilder_;
            }

            public boolean hasOBDDtJ1979() {
                return ((this.bitField0_ & 0x200) != 0);
            }

            public OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979 getOBDDtJ1979() {
                if (this.oBDDtJ1979Builder_ == null)
                    return (this.oBDDtJ1979_ == null) ? OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979.getDefaultInstance() : this.oBDDtJ1979_;
                return (OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979) this.oBDDtJ1979Builder_.getMessage();
            }

            public Builder setOBDDtJ1979(OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979 value) {
                if (this.oBDDtJ1979Builder_ == null) {
                    if (value == null)
                        throw new NullPointerException();
                    this.oBDDtJ1979_ = value;
                    onChanged();
                } else {
                    this.oBDDtJ1979Builder_.setMessage((AbstractMessage) value);
                }
                this.bitField0_ |= 0x200;
                return this;
            }

            public Builder setOBDDtJ1979(OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979.Builder builderForValue) {
                if (this.oBDDtJ1979Builder_ == null) {
                    this.oBDDtJ1979_ = builderForValue.build();
                    onChanged();
                } else {
                    this.oBDDtJ1979Builder_.setMessage((AbstractMessage) builderForValue.build());
                }
                this.bitField0_ |= 0x200;
                return this;
            }

            public Builder mergeOBDDtJ1979(OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979 value) {
                if (this.oBDDtJ1979Builder_ == null) {
                    if ((this.bitField0_ & 0x200) != 0 && this.oBDDtJ1979_ != null && this.oBDDtJ1979_ !=

                            OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979.getDefaultInstance()) {
                        this
                                .oBDDtJ1979_ = OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979.newBuilder(this.oBDDtJ1979_).mergeFrom(value).buildPartial();
                    } else {
                        this.oBDDtJ1979_ = value;
                    }
                    onChanged();
                } else {
                    this.oBDDtJ1979Builder_.mergeFrom((AbstractMessage) value);
                }
                this.bitField0_ |= 0x200;
                return this;
            }

            public Builder clearOBDDtJ1979() {
                if (this.oBDDtJ1979Builder_ == null) {
                    this.oBDDtJ1979_ = null;
                    onChanged();
                } else {
                    this.oBDDtJ1979Builder_.clear();
                }
                this.bitField0_ &= 0xFFFFFDFF;
                return this;
            }

            public OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979.Builder getOBDDtJ1979Builder() {
                this.bitField0_ |= 0x200;
                onChanged();
                return (OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979.Builder) getOBDDtJ1979FieldBuilder().getBuilder();
            }

            public OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979OrBuilder getOBDDtJ1979OrBuilder() {
                if (this.oBDDtJ1979Builder_ != null)
                    return (OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979OrBuilder) this.oBDDtJ1979Builder_.getMessageOrBuilder();
                return (this.oBDDtJ1979_ == null) ?
                        OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979.getDefaultInstance() : this.oBDDtJ1979_;
            }

            private SingleFieldBuilderV3<OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979, OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979.Builder, OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979OrBuilder> getOBDDtJ1979FieldBuilder() {
                if (this.oBDDtJ1979Builder_ == null) {
                    this

                            .oBDDtJ1979Builder_ = new SingleFieldBuilderV3((AbstractMessage) getOBDDtJ1979(), (AbstractMessage.BuilderParent) getParentForChildren(), isClean());
                    this.oBDDtJ1979_ = null;
                }
                return this.oBDDtJ1979Builder_;
            }

            public boolean hasLOG() {
                return ((this.bitField0_ & 0x400) != 0);
            }

            public OmnicommMessageOuterClass.OmnicommMessage.LOG getLOG() {
                if (this.lOGBuilder_ == null)
                    return (this.lOG_ == null) ? OmnicommMessageOuterClass.OmnicommMessage.LOG.getDefaultInstance() : this.lOG_;
                return (OmnicommMessageOuterClass.OmnicommMessage.LOG) this.lOGBuilder_.getMessage();
            }

            public Builder setLOG(OmnicommMessageOuterClass.OmnicommMessage.LOG value) {
                if (this.lOGBuilder_ == null) {
                    if (value == null)
                        throw new NullPointerException();
                    this.lOG_ = value;
                    onChanged();
                } else {
                    this.lOGBuilder_.setMessage((AbstractMessage) value);
                }
                this.bitField0_ |= 0x400;
                return this;
            }

            public Builder setLOG(OmnicommMessageOuterClass.OmnicommMessage.LOG.Builder builderForValue) {
                if (this.lOGBuilder_ == null) {
                    this.lOG_ = builderForValue.build();
                    onChanged();
                } else {
                    this.lOGBuilder_.setMessage((AbstractMessage) builderForValue.build());
                }
                this.bitField0_ |= 0x400;
                return this;
            }

            public Builder mergeLOG(OmnicommMessageOuterClass.OmnicommMessage.LOG value) {
                if (this.lOGBuilder_ == null) {
                    if ((this.bitField0_ & 0x400) != 0 && this.lOG_ != null && this.lOG_ !=

                            OmnicommMessageOuterClass.OmnicommMessage.LOG.getDefaultInstance()) {
                        this
                                .lOG_ = OmnicommMessageOuterClass.OmnicommMessage.LOG.newBuilder(this.lOG_).mergeFrom(value).buildPartial();
                    } else {
                        this.lOG_ = value;
                    }
                    onChanged();
                } else {
                    this.lOGBuilder_.mergeFrom((AbstractMessage) value);
                }
                this.bitField0_ |= 0x400;
                return this;
            }

            public Builder clearLOG() {
                if (this.lOGBuilder_ == null) {
                    this.lOG_ = null;
                    onChanged();
                } else {
                    this.lOGBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFBFF;
                return this;
            }

            public OmnicommMessageOuterClass.OmnicommMessage.LOG.Builder getLOGBuilder() {
                this.bitField0_ |= 0x400;
                onChanged();
                return (OmnicommMessageOuterClass.OmnicommMessage.LOG.Builder) getLOGFieldBuilder().getBuilder();
            }

            public OmnicommMessageOuterClass.OmnicommMessage.LOGOrBuilder getLOGOrBuilder() {
                if (this.lOGBuilder_ != null)
                    return (OmnicommMessageOuterClass.OmnicommMessage.LOGOrBuilder) this.lOGBuilder_.getMessageOrBuilder();
                return (this.lOG_ == null) ?
                        OmnicommMessageOuterClass.OmnicommMessage.LOG.getDefaultInstance() : this.lOG_;
            }

            private SingleFieldBuilderV3<OmnicommMessageOuterClass.OmnicommMessage.LOG, OmnicommMessageOuterClass.OmnicommMessage.LOG.Builder, OmnicommMessageOuterClass.OmnicommMessage.LOGOrBuilder> getLOGFieldBuilder() {
                if (this.lOGBuilder_ == null) {
                    this

                            .lOGBuilder_ = new SingleFieldBuilderV3((AbstractMessage) getLOG(), (AbstractMessage.BuilderParent) getParentForChildren(), isClean());
                    this.lOG_ = null;
                }
                return this.lOGBuilder_;
            }

            public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
                return (Builder) super.setUnknownFields(unknownFields);
            }

            public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
                return (Builder) super.mergeUnknownFields(unknownFields);
            }
        }

        private static final OmnicommMessage DEFAULT_INSTANCE = new OmnicommMessage();

        public static OmnicommMessage getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        @Deprecated
        public static final Parser<OmnicommMessage> PARSER = (Parser<OmnicommMessage>) new AbstractParser<OmnicommMessage>() {
            public OmnicommMessageOuterClass.OmnicommMessage parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                return new OmnicommMessageOuterClass.OmnicommMessage(input, extensionRegistry);
            }
        };

        public static Parser<OmnicommMessage> parser() {
            return PARSER;
        }

        public Parser<OmnicommMessage> getParserForType() {
            return PARSER;
        }

        public OmnicommMessage getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

        public static interface LOGOrBuilder extends MessageOrBuilder {
            List<String> getDebugList();

            int getDebugCount();

            String getDebug(int param2Int);

            ByteString getDebugBytes(int param2Int);

            boolean hasLLSRefNum();

            int getLLSRefNum();

            List<Integer> getLLSRefLevelBefList();

            int getLLSRefLevelBefCount();

            int getLLSRefLevelBef(int param2Int);

            List<Integer> getLLSRefLevelAfterList();

            int getLLSRefLevelAfterCount();

            int getLLSRefLevelAfter(int param2Int);

            List<Integer> getLLSRefKoefList();

            int getLLSRefKoefCount();

            int getLLSRefKoef(int param2Int);

            List<Integer> getLLSRefSensList();

            int getLLSRefSensCount();

            int getLLSRefSens(int param2Int);

            List<Integer> getLLSRefTempList();

            int getLLSRefTempCount();

            int getLLSRefTemp(int param2Int);
        }

        public static interface OBDDt_J1979OrBuilder extends MessageOrBuilder {
            boolean hasSID0X01PID0X0D();

            int getSID0X01PID0X0D();

            boolean hasSID0X01PID0X31();

            int getSID0X01PID0X31();

            boolean hasSID0X01PID0X4E();

            int getSID0X01PID0X4E();

            boolean hasSID0X01PID0X42();

            int getSID0X01PID0X42();

            boolean hasSID0X01PID0X0C();

            int getSID0X01PID0X0C();

            boolean hasSID0X01PID0X2F();

            int getSID0X01PID0X2F();

            boolean hasSID0X01PID0X5E();

            int getSID0X01PID0X5E();

            boolean hasSID0X01PID0X5C();

            int getSID0X01PID0X5C();

            boolean hasSID0X01PID0X05();

            int getSID0X01PID0X05();

            boolean hasSID0X01PID0X01();

            int getSID0X01PID0X01();

            boolean hasSID0X09PID0X02();

            ByteString getSID0X09PID0X02();

            boolean hasSID0X01PID0X5EQuantity();

            int getSID0X01PID0X5EQuantity();
        }

        public static interface ICONDtOrBuilder extends MessageOrBuilder {
            boolean hasVehicleStatus();

            ByteString getVehicleStatus();

            boolean hasVehicleStatusID();

            int getVehicleStatusID();

            boolean hasVehicleStatusGroupID();

            int getVehicleStatusGroupID();

            boolean hasMsgID();

            long getMsgID();

            boolean hasMsgStatus();

            int getMsgStatus();

            boolean hasStatDate();

            int getStatDate();

            boolean hasVehicleStatusPrev();

            ByteString getVehicleStatusPrev();

            boolean hasVehicleStatusFlags();

            int getVehicleStatusFlags();
        }

        public static interface OtherOrBuilder extends MessageOrBuilder {
            boolean hasOneWire();

            OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire getOneWire();

            OmnicommMessageOuterClass.OmnicommMessage.Other.OneWireOrBuilder getOneWireOrBuilder();

            boolean hasPherip();

            OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip getPherip();

            OmnicommMessageOuterClass.OmnicommMessage.Other.PheripOrBuilder getPheripOrBuilder();

            boolean hasExCAN();

            OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN getExCAN();

            OmnicommMessageOuterClass.OmnicommMessage.Other.ExCANOrBuilder getExCANOrBuilder();

            boolean hasTahoDDD();

            OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD getTahoDDD();

            OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDDOrBuilder getTahoDDDOrBuilder();

            boolean hasAPC();

            OmnicommMessageOuterClass.OmnicommMessage.Other.APC getAPC();

            OmnicommMessageOuterClass.OmnicommMessage.Other.APCOrBuilder getAPCOrBuilder();

            boolean hasMobileEye();

            OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye getMobileEye();

            OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEyeOrBuilder getMobileEyeOrBuilder();

            boolean hasSafeDriving();

            OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving getSafeDriving();

            OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDrivingOrBuilder getSafeDrivingOrBuilder();

            boolean hasGenComm();

            OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm getGenComm();

            OmnicommMessageOuterClass.OmnicommMessage.Other.GenCommOrBuilder getGenCommOrBuilder();

            boolean hasFuelSensorModbus();

            OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus getFuelSensorModbus();

            OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbusOrBuilder getFuelSensorModbusOrBuilder();

            boolean hasWeightControl();

            OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl getWeightControl();

            OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControlOrBuilder getWeightControlOrBuilder();
        }

        public static interface LLSDtOrBuilder extends MessageOrBuilder {
            boolean hasTLLS1();

            int getTLLS1();

            boolean hasCLLS1();

            int getCLLS1();

            boolean hasFLLS1();

            int getFLLS1();

            boolean hasTLLS2();

            int getTLLS2();

            boolean hasCLLS2();

            int getCLLS2();

            boolean hasFLLS2();

            int getFLLS2();

            boolean hasTLLS3();

            int getTLLS3();

            boolean hasCLLS3();

            int getCLLS3();

            boolean hasFLLS3();

            int getFLLS3();

            boolean hasTLLS4();

            int getTLLS4();

            boolean hasCLLS4();

            int getCLLS4();

            boolean hasFLLS4();

            int getFLLS4();

            boolean hasTLLS5();

            int getTLLS5();

            boolean hasCLLS5();

            int getCLLS5();

            boolean hasFLLS5();

            int getFLLS5();

            boolean hasTLLS6();

            int getTLLS6();

            boolean hasCLLS6();

            int getCLLS6();

            boolean hasFLLS6();

            int getFLLS6();

            boolean hasTLLS7();

            int getTLLS7();

            boolean hasCLLS7();

            int getCLLS7();

            boolean hasFLLS7();

            int getFLLS7();

            boolean hasTLLS8();

            int getTLLS8();

            boolean hasCLLS8();

            int getCLLS8();

            boolean hasFLLS8();

            int getFLLS8();

            List<Integer> getLLSRefKoefList();

            int getLLSRefKoefCount();

            int getLLSRefKoef(int param2Int);
        }

        public static interface CanDt_J1939OrBuilder extends MessageOrBuilder {
            boolean hasSPN70();

            int getSPN70();

            boolean hasSPN91();

            int getSPN91();

            boolean hasSPN96();

            int getSPN96();

            boolean hasSPN100();

            int getSPN100();

            boolean hasSPN110();

            int getSPN110();

            boolean hasSPN174();

            int getSPN174();

            boolean hasSPN175();

            int getSPN175();

            boolean hasSPN182();

            int getSPN182();

            boolean hasSPN184();

            int getSPN184();

            boolean hasSPN190();

            int getSPN190();

            boolean hasSPN244();

            int getSPN244();

            boolean hasSPN245();

            int getSPN245();

            boolean hasSPN247();

            int getSPN247();

            boolean hasSPN250();

            int getSPN250();

            boolean hasSPN521();

            int getSPN521();

            boolean hasSPN522();

            int getSPN522();

            boolean hasSPN527();

            int getSPN527();

            List<Integer> getSPN582List();

            int getSPN582Count();

            int getSPN582(int param2Int);

            boolean hasSPN597();

            int getSPN597();

            boolean hasSPN598();

            int getSPN598();

            boolean hasSPN914();

            int getSPN914();

            boolean hasSPN916();

            int getSPN916();

            List<Integer> getSPN928List();

            int getSPN928Count();

            int getSPN928(int param2Int);

            boolean hasSPN1624();

            int getSPN1624();

            boolean hasSPN1821();

            int getSPN1821();

            boolean hasSPN1856();

            int getSPN1856();
        }

        public static interface UniDtOrBuilder extends MessageOrBuilder {
            boolean hasUniVal0();

            int getUniVal0();

            boolean hasUniVal1();

            int getUniVal1();

            boolean hasUniVal2();

            int getUniVal2();

            boolean hasUniVal3();

            int getUniVal3();

            boolean hasUniVal4();

            int getUniVal4();

            boolean hasUniVal5();

            int getUniVal5();
        }

        public static interface NAVOrBuilder extends MessageOrBuilder {
            boolean hasLAT();

            int getLAT();

            boolean hasLON();

            int getLON();

            boolean hasGPSVel();

            int getGPSVel();

            boolean hasGPSDir();

            int getGPSDir();

            boolean hasGPSNSat();

            int getGPSNSat();

            boolean hasGPSAlt();

            int getGPSAlt();

            boolean hasGPSTime();

            int getGPSTime();
        }

        public static interface PhotoOrBuilder extends MessageOrBuilder {
            boolean hasPOSBLK();

            int getPOSBLK();

            boolean hasSZPHOTO();

            int getSZPHOTO();

            boolean hasSIZEBLK();

            int getSIZEBLK();

            boolean hasIMGDAT();

            ByteString getIMGDAT();

            boolean hasIDPH();

            int getIDPH();

            boolean hasIMGSTAT();

            int getIMGSTAT();
        }

        public static interface GeneralOrBuilder extends MessageOrBuilder {
            boolean hasTime();

            int getTime();

            boolean hasIDFAS();

            int getIDFAS();

            boolean hasIDDrv();

            ByteString getIDDrv();

            boolean hasFLG();

            int getFLG();

            boolean hasMileage();

            int getMileage();

            boolean hasVImp();

            int getVImp();

            boolean hasTImp();

            int getTImp();

            boolean hasUboard();

            int getUboard();

            boolean hasBatLife();

            int getBatLife();

            boolean hasSumAcc();

            int getSumAcc();

            boolean hasPhone();

            ByteString getPhone();

            boolean hasAmtrX();

            int getAmtrX();

            boolean hasAmtrY();

            int getAmtrY();

            boolean hasAmtrZ();

            int getAmtrZ();

            boolean hasTachoCardID();

            ByteString getTachoCardID();

            boolean hasAccelStatus();

            int getAccelStatus();

            boolean hasHoursKoef();

            int getHoursKoef();

            boolean hasGsmSignalQuality();

            int getGsmSignalQuality();

            boolean hasWifiSignalQuality();

            int getWifiSignalQuality();
        }
    }

    public static Descriptors.FileDescriptor getDescriptor() {
        return descriptor;
    }

    static {
        String[] descriptorData = {"\n\025OmnicommMessage.proto\022\035org.traccar.protobuf.omnicomm\"\n\017OmnicommMessage\022\017\n\003mID\030\001 \003(\rB\002\020\001\022G\n\007general\030\002 \001(\n26.org.traccar.protobuf.omnicomm.OmnicommMessage.General\022C\n\005photo\030\004 \001(\n24.org.traccar.protobuf.omnicomm.OmnicommMessage.Photo\022?\n\003nav\030\005 \001(\n22.org.traccar.protobuf.omnicomm.OmnicommMessage.NAV\022C\n\005unidt\030\006 \001(\n24.org.traccar.protobuf.omnicomm.OmnicommMessage.UniDt\022O\n\013candt_j1939\030\007 \001(\n2:.org.traccar.protobuf.omnicomm.OmnicommMessage.CanDt_J1939\022C\n\005llsdt\030\b \001(\n24.org.traccar.protobuf.omnicomm.OmnicommMessage.LLSDt\022C\n\005other\030\t \001(\n24.org.traccar.protobuf.omnicomm.OmnicommMessage.Other\022E\n\006icondt\030\n \001(\n25.org.traccar.protobuf.omnicomm.OmnicommMessage.ICONDt\022O\n\013obddt_j1979\030\013 \001(\n2:.org.traccar.protobuf.omnicomm.OmnicommMessage.OBDDt_J1979\022?\n\003log\030\020 \001(\n22.org.traccar.protobuf.omnicomm.OmnicommMessage.LOG\032\002\n\007General\022\f\n\004Time\030\001 \001(\r\022\r\n\005IDFAS\030\002 \001(\r\022\r\n\005IDDrv\030\003 \001(\f\022\013\n\003FLG\030\004 \001(\r\022\017\n\007Mileage\030\005 \001(\r\022\f\n\004VImp\030\006 \001(\r\022\f\n\004TImp\030\007 \001(\r\022\016\n\006Uboard\030\b \001(\r\022\017\n\007BatLife\030\t \001(\r\022\016\n\006SumAcc\030\n \001(\021\022\r\n\005Phone\030\013 \001(\f\022\r\n\005AmtrX\030\f \001(\021\022\r\n\005AmtrY\030\r \001(\021\022\r\n\005AmtrZ\030\016 \001(\021\022\023\n\013TachoCardID\030\017 \001(\f\022\023\n\013AccelStatus\030\020 \001(\r\022\021\n\tHoursKoef\030\021 \001(\r\022\030\n\020GsmSignalQuality\030\022 \001(\r\022\031\n\021WifiSignalQuality\030\023 \001(\r\032h\n\005Photo\022\016\n\006POSBLK\030\001 \001(\r\022\017\n\007SZPHOTO\030\002 \001(\r\022\017\n\007SIZEBLK\030\003 \001(\r\022\016\n\006IMGDAT\030\004 \001(\f\022\f\n\004IDPH\030\005 \001(\r\022\017\n\007IMGSTAT\030\006 \001(\r\032q\n\003NAV\022\013\n\003LAT\030\001 \002(\021\022\013\n\003LON\030\002 \002(\021\022\016\n\006GPSVel\030\003 \002(\r\022\016\n\006GPSDir\030\004 \002(\r\022\017\n\007GPSNSat\030\005 \002(\r\022\016\n\006GPSAlt\030\006 \002(\021\022\017\n\007GPSTime\030\007 \001(\r\032m\n\005UniDt\022\017\n\007UniVal0\030\001 \001(\021\022\017\n\007UniVal1\030\002 \001(\021\022\017\n\007UniVal2\030\003 \001(\021\022\017\n\007UniVal3\030\004 \001(\021\022\017\n\007UniVal4\030\005 \001(\021\022\017\n\007UniVal5\030\006 \001(\021\032\003\n\013CanDt_J1939\022\r\n\005SPN70\030F \001(\r\022\r\n\005SPN91\030[ \001(\r\022\r\n\005SPN96\030` \001(\r\022\016\n\006SPN100\030d \001(\r\022\016\n\006SPN110\030n \001(\r\022\017\n\006SPN174\030\001 \001(\r\022\017\n\006SPN175\030\001 \001(\r\022\017\n\006SPN182\030\001 \001(\r\022\017\n\006SPN184\030\001 \001(\r\022\017\n\006SPN190\030\001 \001(\r\022\017\n\006SPN244\030\001 \001(\r\022\017\n\006SPN245\030\001 \001(\r\022\017\n\006SPN247\030\001 \001(\r\022\017\n\006SPN250\030\001 \001(\r\022\017\n\006SPN521\030\004 \001(\r\022\017\n\006SPN522\030\004 \001(\r\022\017\n\006SPN527\030\004 \001(\r\022\023\n\006SPN582\030\004 \003(\rB\002\020\001\022\017\n\006SPN597\030\004 \001(\r\022\017\n\006SPN598\030\004 \001(\r\022\017\n\006SPN914\030\007 \001(\r\022\017\n\006SPN916\030\007 \001(\r\022\023\n\006SPN928\030\007 \003(\rB\002\020\001\022\020\n\007SPN1624\030\f \001(\r\022\020\n\007SPN1821\030\016 \001(\r\022\020\n\007SPN1856\030\016 \001(\r\032\003\n\005LLSDt\022\r\n\005TLLS1\030\001 \001(\021\022\r\n\005CLLS1\030\002 \001(\r\022\r\n\005FLLS1\030\003 \001(\021\022\r\n\005TLLS2\030\004 \001(\021\022\r\n\005CLLS2\030\005 \001(\r\022\r\n\005FLLS2\030\006 \001(\021\022\r\n\005TLLS3\030\007 \001(\021\022\r\n\005CLLS3\030\b \001(\r\022\r\n\005FLLS3\030\t \001(\021\022\r\n\005TLLS4\030\n \001(\021\022\r\n\005CLLS4\030\013 \001(\r\022\r\n\005FLLS4\030\f \001(\021\022\r\n\005TLLS5\030\r \001(\021\022\r\n\005CLLS5\030\016 \001(\r\022\r\n\005FLLS5\030\017 \001(\021\022\r\n\005TLLS6\030\020 \001(\021\022\r\n\005CLLS6\030\021 \001(\r\022\r\n\005FLLS6\030\022 \001(\021\022\r\n\005TLLS7\030\023 \001(\021\022\r\n\005CLLS7\030\024 \001(\r\022\r\n\005FLLS7\030\025 \001(\021\022\r\n\005TLLS8\030\026 \001(\021\022\r\n\005CLLS8\030\027 \001(\r\022\r\n\005FLLS8\030\030 \001(\021\022\026\n\nLLSRefKoef\030\031 \003(\rB\002\020\001\032\032\n\005Other\022M\n\007onewire\030\001 \001(\n2<.org.traccar.protobuf.omnicomm.OmnicommMessage.Other.OneWire\022K\n\006pherip\030\002 \001(\n2;.org.traccar.protobuf.omnicomm.OmnicommMessage.Other.Pherip\022I\n\005excan\030\003 \001(\n2:.org.traccar.protobuf.omnicomm.OmnicommMessage.Other.ExCAN\022O\n\btaho_ddd\030\004 \001(\n2=.org.traccar.protobuf.omnicomm.OmnicommMessage.Other.Taho_DDD\022E\n\003apc\030\005 \001(\n28.org.traccar.protobuf.omnicomm.OmnicommMessage.Other.APC\022Q\n\tmobileeye\030\006 \001(\n2>.org.traccar.protobuf.omnicomm.OmnicommMessage.Other.MobileEye\022U\n\013safedriving\030\007 \001(\n2@.org.traccar.protobuf.omnicomm.OmnicommMessage.Other.SafeDriving\022M\n\007gencomm\030\b \001(\n2<.org.traccar.protobuf.omnicomm.OmnicommMessage.Other.GenComm\022_\n\020fuelsensormodbus\030\t \001(\n2E.org.traccar.protobuf.omnicomm.OmnicommMessage.Other.FuelSensorModbus\022Y\n\rweightcontrol\030\n \001(\n2B.org.traccar.protobuf.omnicomm.OmnicommMessage.Other.WeightControl\032\001\n\007OneWire\022\020\n\bOneWire1\030\001 \001(\021\022\020\n\bOneWire2\030\002 \001(\021\022\020\n\bOneWire3\030\003 \001(\021\022\020\n\bOneWire4\030\004 \001(\021\022\020\n\bOneWire5\030\005 \001(\021\022\020\n\bOneWire6\030\006 \001(\021\022\020\n\bOneWire7\030\007 \001(\021\022\020\n\bOneWire8\030\b \001(\021\032{\n\006Pherip\022\023\n\013PassengerIn\030\001 \001(\r\022\024\n\fPassengerOut\030\002 \001(\r\022\020\n\bDoorMask\030\003 \001(\r\022\024\n\fDriverStatus\030\004 \001(\r\022\f\n\004TPMS\030\005 \001(\f\022\020\n\biQFreeze\030\006 \001(\f\032\001\n\005ExCAN\022\r\n\005SPNid\030\001 \003(\r\022\016\n\006SPNval\030\002 \003(\r\022\022\n\nAdr64TEREX\030\n \001(\004\022\022\n\nAdr65TEREX\030\013 \001(\004\022\022\n\nAdr66TEREX\030\f \001(\004\022\022\n\nAdr67TEREX\030\r \001(\004\022\022\n\nAdr11TEREX\030\016 \003(\004\022\022\n\nAdr69TEREX\030\017 \001(\004\032Q\n\bTaho_DDD\022\016\n\006BLKPOS\030\001 \001(\r\022\020\n\bFILEDATA\030\002 \001(\f\022\016\n\006CARDID\030\003 \001(\f\022\023\n\013STATUS_DATA\030\004 \001(\r\032\002\n\003APC\022\022\n\nAPCStatus1\030\001 \001(\r\022\022\n\nAPCStatus2\030\002 \001(\r\022\022\n\nAPCStatus3\030\003 \001(\r\022\022\n\nAPCStatus4\030\004 \001(\r\022\024\n\fAPCNumberIn1\030\005 \001(\r\022\025\n\rAPCNumberOut1\030\006 \001(\r\022\024\n\fAPCNumberIn2\030\007 \001(\r\022\025\n\rAPCNumberOut2\030\b \001(\r\022\024\n\fAPCNumberIn3\030\t \001(\r\022\026\n\016APCNumberOut31\030\n \001(\r\022\024\n\fAPCNumberIn4\030\013 \001(\r\022\025\n\rAPCNumberOut4\030\f \001(\r\032T\n\tMobileEye\022\027\n\017MobileEyeStatus\030\001 \001(\r\022\016\n\006CAN700\030\002 \003(\f\022\016\n\006CAN727\030\003 \003(\f\022\016\n\006CAN760\030\004 \003(\f\032h\n\013SafeDriving\022\021\n\tEventMask\030\001 \001(\r\022\026\n\016SpeedThreshold\030\002 \001(\r\022\024\n\fRPMThreshold\030\003 \001(\r\022\030\n\fAccelDangThs\030\004 \003(\002B\002\020\001\032\t\n\007GenComm\022\025\n\rGEN_OILPRESS1\030\001 \001(\r\022\021\n\tGEN_TEMP1\030\002 \001(\021\022\021\n\tGEN_VOLT1\030\003 \001(\002\022\020\n\bGEN_RPM1\030\004 \001(\r\022\021\n\tGEN_UL1_1\030\005 \001(\002\022\021\n\tGEN_UL2_1\030\006 \001(\002\022\021\n\tGEN_UL3_1\030\007 \001(\002\022\021\n\tGEN_IL1_1\030\b \001(\002\022\021\n\tGEN_IL2_1\030\t \001(\002\022\021\n\tGEN_IL3_1\030\n \001(\002\022\023\n\013GEN_STATUS1\030\013 \001(\r\022\022\n\nGEN_HOURS1\030\f \001(\r\022\022\n\nGEN_ALARM1\030\r \003(\f\022\025\n\rGEN_OILPRESS2\030\016 \001(\r\022\021\n\tGEN_TEMP2\030\017 \001(\021\022\021\n\tGEN_VOLT2\030\020 \001(\002\022\020\n\bGEN_RPM2\030\021 \001(\r\022\021\n\tGEN_UL1_2\030\022 \001(\002\022\021\n\tGEN_UL2_2\030\023 \001(\002\022\021\n\tGEN_UL3_2\030\024 \001(\002\022\021\n\tGEN_IL1_2\030\025 \001(\002\022\021\n\tGEN_IL2_2\030\026 \001(\002\022\021\n\tGEN_IL3_2\030\027 \001(\002\022\023\n\013GEN_STATUS2\030\030 \001(\r\022\022\n\nGEN_HOURS2\030\031 \001(\r\022\022\n\nGEN_ALARM2\030\032 \003(\f\022\025\n\rGEN_OILPRESS3\030\033 \001(\r\022\021\n\tGEN_TEMP3\030\034 \001(\021\022\021\n\tGEN_VOLT3\030\035 \001(\002\022\020\n\bGEN_RPM3\030\036 \001(\r\022\021\n\tGEN_UL1_3\030\037 \001(\002\022\021\n\tGEN_UL2_3\030  \001(\002\022\021\n\tGEN_UL3_3\030! \001(\002\022\021\n\tGEN_IL1_3\030\" \001(\002\022\021\n\tGEN_IL2_3\030# \001(\002\022\021\n\tGEN_IL3_3\030$ \001(\002\022\023\n\013GEN_STATUS3\030% \001(\r\022\022\n\nGEN_HOURS3\030& \001(\r\022\022\n\nGEN_ALARM3\030' \003(\f\022\016\n\006GEN_UC\030( \001(\002\022\016\n\006GEN_IC\030) \001(\r\022\020\n\bGEN_FREQ\030* \001(\002\022\021\n\tGEN_UL1L2\030+ \001(\002\022\021\n\tGEN_UL2L3\030, \001(\002\022\021\n\tGEN_UL1L3\030- \001(\002\022\022\n\nPOW_ACT_L1\030. \001(\r\022\022\n\nPOW_ACT_L2\030/ \001(\r\022\022\n\nPOW_ACT_L3\0300 \001(\r\022\023\n\013POW_FULL_L1\0301 \001(\r\022\023\n\013POW_FULL_L2\0302 \001(\r\022\023\n\013POW_FULL_L3\0303 \001(\r\022\024\n\fPOW_REACT_L1\0304 \001(\r\022\024\n\fPOW_REACT_L2\0305 \001(\r\022\024\n\fPOW_REACT_L3\0306 \001(\r\022\020\n\bPOW_KOEF\0307 \001(\002\022\025\n\rPOW_GEN_TOTAL\0308 \001(\r\022\022\n\nFUEL_LEVEL\0309 \001(\r\022\022\n\nSMS_REGS_0\030< \001(\r\022\022\n\nSMS_REGS_1\030= \001(\r\022\022\n\nSMS_REGS_2\030> \001(\r\022\022\n\nSMS_REGS_3\030? \001(\r\022\022\n\nSMS_REGS_4\030@ \001(\r\032\001\n\020FuelSensorModbus\022\021\n\tFuelLevel\030\001 \001(\002\022\023\n\013MedianLevel\030\002 \001(\002\022\024\n\fLevelPercent\030\003 \001(\r\022\022\n\nFuelVolume\030\004 \001(\002\022\020\n\bFuelTemp\030\005 \001(\021\022\022\n\nFuelWeight\030\006 \001(\002\022\023\n\013FuelDensity\030\007 \001(\002\022\021\n\tVaporTemp\030\b \001(\021\022\023\n\013VaporWeight\030\t \001(\002\022\024\n\fLiquidWeight\030\n \001(\002\022\021\n\tPointTemp\030\013 \003(\021\032e\n\rWeightControl\022\022\n\nAxelWeight\030\001 \003(\002\022\021\n\tAxelLimit\030\002 \003(\002\022\023\n\013TotalWeight\030\003 \001(\002\022\030\n\020TotalWeightLimit\030\004 \001(\002\032\001\n\006ICONDt\022\025\n\rVehicleStatus\030\001 \001(\f\022\027\n\017VehicleStatusID\030\002 \001(\r\022\034\n\024VehicleStatusGroupID\030\003 \001(\r\022\r\n\005MsgID\030\004 \001(\004\022\021\n\tMsgStatus\030\005 \001(\r\022\020\n\bStatDate\030\006 \001(\r\022\031\n\021VehicleStatusPrev\030\007 \001(\f\022\032\n\022VehicleStatusFlags\030\b \001(\r\032\002\n\013OBDDt_J1979\022\031\n\021SID_0x01_PID_0x0D\030\001 \001(\r\022\031\n\021SID_0x01_PID_0x31\030\002 \001(\r\022\031\n\021SID_0x01_PID_0x4E\030\003 \001(\r\022\031\n\021SID_0x01_PID_0x42\030\004 \001(\r\022\031\n\021SID_0x01_PID_0x0C\030\005 \001(\r\022\031\n\021SID_0x01_PID_0x2F\030\006 \001(\r\022\031\n\021SID_0x01_PID_0x5E\030\007 \001(\r\022\031\n\021SID_0x01_PID_0x5C\030\b \001(\r\022\031\n\021SID_0x01_PID_0x05\030\t \001(\r\022\031\n\021SID_0x01_PID_0x01\030\n \001(\r\022\031\n\021SID_0x09_PID_0x02\030\013 \001(\f\022\"\n\032SID_0x01_PID_0x5E_quantity\030\f \001(\r\032\001\n\003LOG\022\r\n\005Debug\030\001 \003(\t\022\021\n\tLLSRefNum\030\002 \001(\r\022\032\n\016LLSRefLevelBef\030\003 \003(\rB\002\020\001\022\034\n\020LLSRefLevelAfter\030\004 \003(\rB\002\020\001\022\026\n\nLLSRefKoef\030\005 \003(\rB\002\020\001\022\026\n\nLLSRefSens\030\006 \003(\rB\002\020\001\022\026\n\nLLSRefTemp\030\007 \003(\rB\002\020\001"};
        descriptor = Descriptors.FileDescriptor.internalBuildGeneratedFileFrom(descriptorData, new Descriptors.FileDescriptor[0]);
        internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_descriptor = getDescriptor().getMessageTypes().get(0);
        internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_descriptor, new String[]{
                "MID", "General", "Photo", "NAV", "UniDt", "CanDtJ1939", "LLSDt", "Other", "ICONDt", "OBDDtJ1979",
                "LOG"});
        internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_General_descriptor = internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_descriptor.getNestedTypes().get(0);
        internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_General_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_General_descriptor, new String[]{
                "Time", "IDFAS", "IDDrv", "FLG", "Mileage", "VImp", "TImp", "Uboard", "BatLife", "SumAcc",
                "Phone", "AmtrX", "AmtrY", "AmtrZ", "TachoCardID", "AccelStatus", "HoursKoef", "GsmSignalQuality", "WifiSignalQuality"});
        internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Photo_descriptor = internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_descriptor.getNestedTypes().get(1);
        internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Photo_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Photo_descriptor, new String[]{"POSBLK", "SZPHOTO", "SIZEBLK", "IMGDAT", "IDPH", "IMGSTAT"});
        internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_NAV_descriptor = internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_descriptor.getNestedTypes().get(2);
        internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_NAV_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_NAV_descriptor, new String[]{"LAT", "LON", "GPSVel", "GPSDir", "GPSNSat", "GPSAlt", "GPSTime"});
        internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_UniDt_descriptor = internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_descriptor.getNestedTypes().get(3);
        internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_UniDt_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_UniDt_descriptor, new String[]{"UniVal0", "UniVal1", "UniVal2", "UniVal3", "UniVal4", "UniVal5"});
        internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_CanDt_J1939_descriptor = internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_descriptor.getNestedTypes().get(4);
        internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_CanDt_J1939_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_CanDt_J1939_descriptor, new String[]{
                "SPN70", "SPN91", "SPN96", "SPN100", "SPN110", "SPN174", "SPN175", "SPN182", "SPN184", "SPN190",
                "SPN244", "SPN245", "SPN247", "SPN250", "SPN521", "SPN522", "SPN527", "SPN582", "SPN597", "SPN598",
                "SPN914", "SPN916", "SPN928", "SPN1624", "SPN1821", "SPN1856"});
        internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_LLSDt_descriptor = internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_descriptor.getNestedTypes().get(5);
        internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_LLSDt_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_LLSDt_descriptor, new String[]{
                "TLLS1", "CLLS1", "FLLS1", "TLLS2", "CLLS2", "FLLS2", "TLLS3", "CLLS3", "FLLS3", "TLLS4",
                "CLLS4", "FLLS4", "TLLS5", "CLLS5", "FLLS5", "TLLS6", "CLLS6", "FLLS6", "TLLS7", "CLLS7",
                "FLLS7", "TLLS8", "CLLS8", "FLLS8", "LLSRefKoef"});
        internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_descriptor = internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_descriptor.getNestedTypes().get(6);
        internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_descriptor, new String[]{"OneWire", "Pherip", "ExCAN", "TahoDDD", "APC", "MobileEye", "SafeDriving", "GenComm", "FuelSensorModbus", "WeightControl"});
        internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_OneWire_descriptor = internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_descriptor.getNestedTypes().get(0);
        internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_OneWire_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_OneWire_descriptor, new String[]{"OneWire1", "OneWire2", "OneWire3", "OneWire4", "OneWire5", "OneWire6", "OneWire7", "OneWire8"});
        internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_Pherip_descriptor = internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_descriptor.getNestedTypes().get(1);
        internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_Pherip_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_Pherip_descriptor, new String[]{"PassengerIn", "PassengerOut", "DoorMask", "DriverStatus", "TPMS", "IQFreeze"});
        internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_ExCAN_descriptor = internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_descriptor.getNestedTypes().get(2);
        internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_ExCAN_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_ExCAN_descriptor, new String[]{"SPNid", "SPNval", "Adr64TEREX", "Adr65TEREX", "Adr66TEREX", "Adr67TEREX", "Adr11TEREX", "Adr69TEREX"});
        internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_Taho_DDD_descriptor = internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_descriptor.getNestedTypes().get(3);
        internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_Taho_DDD_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_Taho_DDD_descriptor, new String[]{"BLKPOS", "FILEDATA", "CARDID", "STATUSDATA"});
        internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_APC_descriptor = internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_descriptor.getNestedTypes().get(4);
        internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_APC_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_APC_descriptor, new String[]{
                "APCStatus1", "APCStatus2", "APCStatus3", "APCStatus4", "APCNumberIn1", "APCNumberOut1", "APCNumberIn2", "APCNumberOut2", "APCNumberIn3", "APCNumberOut31",
                "APCNumberIn4", "APCNumberOut4"});
        internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_MobileEye_descriptor = internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_descriptor.getNestedTypes().get(5);
        internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_MobileEye_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_MobileEye_descriptor, new String[]{"MobileEyeStatus", "CAN700", "CAN727", "CAN760"});
        internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_SafeDriving_descriptor = internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_descriptor.getNestedTypes().get(6);
        internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_SafeDriving_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_SafeDriving_descriptor, new String[]{"EventMask", "SpeedThreshold", "RPMThreshold", "AccelDangThs"});
        internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_GenComm_descriptor = internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_descriptor.getNestedTypes().get(7);
        internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_GenComm_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_GenComm_descriptor, new String[]{
                "GENOILPRESS1", "GENTEMP1", "GENVOLT1", "GENRPM1", "GENUL11", "GENUL21", "GENUL31", "GENIL11", "GENIL21", "GENIL31",
                "GENSTATUS1", "GENHOURS1", "GENALARM1", "GENOILPRESS2", "GENTEMP2", "GENVOLT2", "GENRPM2", "GENUL12", "GENUL22", "GENUL32",
                "GENIL12", "GENIL22", "GENIL32", "GENSTATUS2", "GENHOURS2", "GENALARM2", "GENOILPRESS3", "GENTEMP3", "GENVOLT3", "GENRPM3",
                "GENUL13", "GENUL23", "GENUL33", "GENIL13", "GENIL23", "GENIL33", "GENSTATUS3", "GENHOURS3", "GENALARM3", "GENUC",
                "GENIC", "GENFREQ", "GENUL1L2", "GENUL2L3", "GENUL1L3", "POWACTL1", "POWACTL2", "POWACTL3", "POWFULLL1", "POWFULLL2",
                "POWFULLL3", "POWREACTL1", "POWREACTL2", "POWREACTL3", "POWKOEF", "POWGENTOTAL", "FUELLEVEL", "SMSREGS0", "SMSREGS1", "SMSREGS2",
                "SMSREGS3", "SMSREGS4"});
        internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_FuelSensorModbus_descriptor = internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_descriptor.getNestedTypes().get(8);
        internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_FuelSensorModbus_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_FuelSensorModbus_descriptor, new String[]{
                "FuelLevel", "MedianLevel", "LevelPercent", "FuelVolume", "FuelTemp", "FuelWeight", "FuelDensity", "VaporTemp", "VaporWeight", "LiquidWeight",
                "PointTemp"});
        internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_WeightControl_descriptor = internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_descriptor.getNestedTypes().get(9);
        internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_WeightControl_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_WeightControl_descriptor, new String[]{"AxelWeight", "AxelLimit", "TotalWeight", "TotalWeightLimit"});
        internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_ICONDt_descriptor = internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_descriptor.getNestedTypes().get(7);
        internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_ICONDt_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_ICONDt_descriptor, new String[]{"VehicleStatus", "VehicleStatusID", "VehicleStatusGroupID", "MsgID", "MsgStatus", "StatDate", "VehicleStatusPrev", "VehicleStatusFlags"});
        internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_OBDDt_J1979_descriptor = internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_descriptor.getNestedTypes().get(8);
        internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_OBDDt_J1979_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_OBDDt_J1979_descriptor, new String[]{
                "SID0X01PID0X0D", "SID0X01PID0X31", "SID0X01PID0X4E", "SID0X01PID0X42", "SID0X01PID0X0C", "SID0X01PID0X2F", "SID0X01PID0X5E", "SID0X01PID0X5C", "SID0X01PID0X05", "SID0X01PID0X01",
                "SID0X09PID0X02", "SID0X01PID0X5EQuantity"});
        internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_LOG_descriptor = internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_descriptor.getNestedTypes().get(9);
        internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_LOG_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_LOG_descriptor, new String[]{"Debug", "LLSRefNum", "LLSRefLevelBef", "LLSRefLevelAfter", "LLSRefKoef", "LLSRefSens", "LLSRefTemp"});
    }

    public static interface OmnicommMessageOrBuilder extends MessageOrBuilder {
        List<Integer> getMIDList();

        int getMIDCount();

        int getMID(int param1Int);

        boolean hasGeneral();

        OmnicommMessageOuterClass.OmnicommMessage.General getGeneral();

        OmnicommMessageOuterClass.OmnicommMessage.GeneralOrBuilder getGeneralOrBuilder();

        boolean hasPhoto();

        OmnicommMessageOuterClass.OmnicommMessage.Photo getPhoto();

        OmnicommMessageOuterClass.OmnicommMessage.PhotoOrBuilder getPhotoOrBuilder();

        boolean hasNAV();

        OmnicommMessageOuterClass.OmnicommMessage.NAV getNAV();

        OmnicommMessageOuterClass.OmnicommMessage.NAVOrBuilder getNAVOrBuilder();

        boolean hasUniDt();

        OmnicommMessageOuterClass.OmnicommMessage.UniDt getUniDt();

        OmnicommMessageOuterClass.OmnicommMessage.UniDtOrBuilder getUniDtOrBuilder();

        boolean hasCanDtJ1939();

        OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939 getCanDtJ1939();

        OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939OrBuilder getCanDtJ1939OrBuilder();

        boolean hasLLSDt();

        OmnicommMessageOuterClass.OmnicommMessage.LLSDt getLLSDt();

        OmnicommMessageOuterClass.OmnicommMessage.LLSDtOrBuilder getLLSDtOrBuilder();

        boolean hasOther();

        OmnicommMessageOuterClass.OmnicommMessage.Other getOther();

        OmnicommMessageOuterClass.OmnicommMessage.OtherOrBuilder getOtherOrBuilder();

        boolean hasICONDt();

        OmnicommMessageOuterClass.OmnicommMessage.ICONDt getICONDt();

        OmnicommMessageOuterClass.OmnicommMessage.ICONDtOrBuilder getICONDtOrBuilder();

        boolean hasOBDDtJ1979();

        OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979 getOBDDtJ1979();

        OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979OrBuilder getOBDDtJ1979OrBuilder();

        boolean hasLOG();

        OmnicommMessageOuterClass.OmnicommMessage.LOG getLOG();

        OmnicommMessageOuterClass.OmnicommMessage.LOGOrBuilder getLOGOrBuilder();
    }
}
