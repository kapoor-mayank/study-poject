/*       */ package org.traccar.protobuf.starlink;public final class StarLinkMessage { private static final Descriptors.Descriptor internal_static_org_traccar_protobuf_starlink_StarLink_Message_descriptor; private static final GeneratedMessageV3.FieldAccessorTable internal_static_org_traccar_protobuf_starlink_StarLink_Message_fieldAccessorTable; private static final Descriptors.Descriptor internal_static_org_traccar_protobuf_starlink_mMessage_descriptor; private static final GeneratedMessageV3.FieldAccessorTable internal_static_org_traccar_protobuf_starlink_mMessage_fieldAccessorTable; private static final Descriptors.Descriptor internal_static_org_traccar_protobuf_starlink_mWakeUp_descriptor; private static final GeneratedMessageV3.FieldAccessorTable internal_static_org_traccar_protobuf_starlink_mWakeUp_fieldAccessorTable; private static final Descriptors.Descriptor internal_static_org_traccar_protobuf_starlink_mConfirmation_descriptor; private static final GeneratedMessageV3.FieldAccessorTable internal_static_org_traccar_protobuf_starlink_mConfirmation_fieldAccessorTable; private static final Descriptors.Descriptor internal_static_org_traccar_protobuf_starlink_mParamResponse_descriptor; private static final GeneratedMessageV3.FieldAccessorTable internal_static_org_traccar_protobuf_starlink_mParamResponse_fieldAccessorTable; private static final Descriptors.Descriptor internal_static_org_traccar_protobuf_starlink_mEventReport_descriptor; private static final GeneratedMessageV3.FieldAccessorTable internal_static_org_traccar_protobuf_starlink_mEventReport_fieldAccessorTable; private static final Descriptors.Descriptor internal_static_org_traccar_protobuf_starlink_mEventReport_TDx_descriptor; private static final GeneratedMessageV3.FieldAccessorTable internal_static_org_traccar_protobuf_starlink_mEventReport_TDx_fieldAccessorTable; private static final Descriptors.Descriptor internal_static_org_traccar_protobuf_starlink_mGeoZone_descriptor; private static final GeneratedMessageV3.FieldAccessorTable internal_static_org_traccar_protobuf_starlink_mGeoZone_fieldAccessorTable; private static final Descriptors.Descriptor internal_static_org_traccar_protobuf_starlink_mOutputs_descriptor; private static final GeneratedMessageV3.FieldAccessorTable internal_static_org_traccar_protobuf_starlink_mOutputs_fieldAccessorTable; private static final Descriptors.Descriptor internal_static_org_traccar_protobuf_starlink_mEventConfig_descriptor; private static final GeneratedMessageV3.FieldAccessorTable internal_static_org_traccar_protobuf_starlink_mEventConfig_fieldAccessorTable; private static final Descriptors.Descriptor internal_static_org_traccar_protobuf_starlink_mInputs_descriptor; private static final GeneratedMessageV3.FieldAccessorTable internal_static_org_traccar_protobuf_starlink_mInputs_fieldAccessorTable; private static final Descriptors.Descriptor internal_static_org_traccar_protobuf_starlink_mInputConfig_descriptor; private static final GeneratedMessageV3.FieldAccessorTable internal_static_org_traccar_protobuf_starlink_mInputConfig_fieldAccessorTable; private static final Descriptors.Descriptor internal_static_org_traccar_protobuf_starlink_mSpeedLimit_descriptor; private static final GeneratedMessageV3.FieldAccessorTable internal_static_org_traccar_protobuf_starlink_mSpeedLimit_fieldAccessorTable; private static final Descriptors.Descriptor internal_static_org_traccar_protobuf_starlink_mUnitIDChanged_descriptor; private static final GeneratedMessageV3.FieldAccessorTable internal_static_org_traccar_protobuf_starlink_mUnitIDChanged_fieldAccessorTable; private static final Descriptors.Descriptor internal_static_org_traccar_protobuf_starlink_mGenDeviceMsg_descriptor; private static final GeneratedMessageV3.FieldAccessorTable internal_static_org_traccar_protobuf_starlink_mGenDeviceMsg_fieldAccessorTable; private static final Descriptors.Descriptor internal_static_org_traccar_protobuf_starlink_mGenDeviceFW_descriptor; private static final GeneratedMessageV3.FieldAccessorTable internal_static_org_traccar_protobuf_starlink_mGenDeviceFW_fieldAccessorTable; private static final Descriptors.Descriptor internal_static_org_traccar_protobuf_starlink_mConfigServer_descriptor; private static final GeneratedMessageV3.FieldAccessorTable internal_static_org_traccar_protobuf_starlink_mConfigServer_fieldAccessorTable; private static final Descriptors.Descriptor internal_static_org_traccar_protobuf_starlink_mReadIButton_descriptor; private static final GeneratedMessageV3.FieldAccessorTable internal_static_org_traccar_protobuf_starlink_mReadIButton_fieldAccessorTable; private static final Descriptors.Descriptor internal_static_org_traccar_protobuf_starlink_mGetPattern_descriptor; private static final GeneratedMessageV3.FieldAccessorTable internal_static_org_traccar_protobuf_starlink_mGetPattern_fieldAccessorTable; private static final Descriptors.Descriptor internal_static_org_traccar_protobuf_starlink_mMultiParam_descriptor; private static final GeneratedMessageV3.FieldAccessorTable internal_static_org_traccar_protobuf_starlink_mMultiParam_fieldAccessorTable; private static final Descriptors.Descriptor internal_static_org_traccar_protobuf_starlink_mTempConfig_descriptor; private static final GeneratedMessageV3.FieldAccessorTable internal_static_org_traccar_protobuf_starlink_mTempConfig_fieldAccessorTable; private static final Descriptors.Descriptor internal_static_org_traccar_protobuf_starlink_mDeviceList_descriptor;
/*       */   private static final GeneratedMessageV3.FieldAccessorTable internal_static_org_traccar_protobuf_starlink_mDeviceList_fieldAccessorTable;
/*       */   private static final Descriptors.Descriptor internal_static_org_traccar_protobuf_starlink_mTeachRemote_descriptor;
/*       */   private static final GeneratedMessageV3.FieldAccessorTable internal_static_org_traccar_protobuf_starlink_mTeachRemote_fieldAccessorTable;
/*       */   private static final Descriptors.Descriptor internal_static_org_traccar_protobuf_starlink_mAuthenticate_descriptor;
/*       */   private static final GeneratedMessageV3.FieldAccessorTable internal_static_org_traccar_protobuf_starlink_mAuthenticate_fieldAccessorTable;
/*       */   private static final Descriptors.Descriptor internal_static_org_traccar_protobuf_starlink_mLatLong_descriptor;
/*       */   private static final GeneratedMessageV3.FieldAccessorTable internal_static_org_traccar_protobuf_starlink_mLatLong_fieldAccessorTable;
/*       */   private static Descriptors.FileDescriptor descriptor;
/*       */   
/*       */   public static void registerAllExtensions(ExtensionRegistryLite registry) {}
/*       */   
/*       */   public static void registerAllExtensions(ExtensionRegistry registry) {
/*    14 */     registerAllExtensions((ExtensionRegistryLite)registry);
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public static interface StarLink_MessageOrBuilder
/*       */     extends MessageOrBuilder
/*       */   {
/*       */     boolean hasFID();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getFID();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIMEI();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     String getIMEI();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getIMEIBytes();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasUID();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getUID();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasAckRef();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getAckRef();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     List<StarLinkMessage.mMessage> getMessageList();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     StarLinkMessage.mMessage getMessage(int param1Int);
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getMessageCount();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     List<? extends StarLinkMessage.mMessageOrBuilder> getMessageOrBuilderList();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     StarLinkMessage.mMessageOrBuilder getMessageOrBuilder(int param1Int);
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public static final class StarLink_Message
/*       */     extends GeneratedMessageV3
/*       */     implements StarLink_MessageOrBuilder
/*       */   {
/*       */     private static final long serialVersionUID = 0L;
/*       */ 
/*       */ 
/*       */     
/*       */     private int bitField0_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int FID_FIELD_NUMBER = 1;
/*       */ 
/*       */ 
/*       */     
/*       */     private int fID_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int IMEI_FIELD_NUMBER = 2;
/*       */ 
/*       */ 
/*       */     
/*       */     private volatile Object iMEI_;
/*       */ 
/*       */     
/*       */     public static final int UID_FIELD_NUMBER = 3;
/*       */ 
/*       */     
/*       */     private int uID_;
/*       */ 
/*       */     
/*       */     public static final int ACKREF_FIELD_NUMBER = 4;
/*       */ 
/*       */     
/*       */     private int ackRef_;
/*       */ 
/*       */     
/*       */     public static final int MESSAGE_FIELD_NUMBER = 5;
/*       */ 
/*       */     
/*       */     private List<StarLinkMessage.mMessage> message_;
/*       */ 
/*       */     
/*       */     private byte memoizedIsInitialized;
/*       */ 
/*       */ 
/*       */     
/*       */     private StarLink_Message(GeneratedMessageV3.Builder<?> builder)
/*       */     {
/*   145 */       super(builder);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*   430 */       this.memoizedIsInitialized = -1; } private StarLink_Message() { this.memoizedIsInitialized = -1; this.iMEI_ = ""; this.message_ = Collections.emptyList(); } protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) { return new StarLink_Message(); } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private StarLink_Message(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this(); if (extensionRegistry == null) throw new NullPointerException();  int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { ByteString bs; int tag = input.readTag(); switch (tag) { case 0: done = true; continue;case 8: this.bitField0_ |= 0x1; this.fID_ = input.readUInt32(); continue;case 18: bs = input.readBytes(); this.bitField0_ |= 0x2; this.iMEI_ = bs; continue;case 24: this.bitField0_ |= 0x4; this.uID_ = input.readUInt32(); continue;case 32: this.bitField0_ |= 0x8; this.ackRef_ = input.readUInt32(); continue;case 42: if ((mutable_bitField0_ & 0x10) == 0) { this.message_ = new ArrayList<>(); mutable_bitField0_ |= 0x10; }  this.message_.add(input.readMessage(StarLinkMessage.mMessage.PARSER, extensionRegistry)); continue; }  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this); } finally { if ((mutable_bitField0_ & 0x10) != 0) this.message_ = Collections.unmodifiableList(this.message_);  this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_StarLink_Message_descriptor; } protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() { return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_StarLink_Message_fieldAccessorTable.ensureFieldAccessorsInitialized(StarLink_Message.class, Builder.class); } public boolean hasFID() { return ((this.bitField0_ & 0x1) != 0); } public int getFID() { return this.fID_; } public boolean hasIMEI() { return ((this.bitField0_ & 0x2) != 0); } public String getIMEI() { Object ref = this.iMEI_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.iMEI_ = s;  return s; } public ByteString getIMEIBytes() { Object ref = this.iMEI_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.iMEI_ = b; return b; }  return (ByteString)ref; } public boolean hasUID() { return ((this.bitField0_ & 0x4) != 0); } public int getUID() { return this.uID_; } public boolean hasAckRef() { return ((this.bitField0_ & 0x8) != 0); } public int getAckRef() { return this.ackRef_; } public List<StarLinkMessage.mMessage> getMessageList() { return this.message_; } public List<? extends StarLinkMessage.mMessageOrBuilder> getMessageOrBuilderList() { return (List)this.message_; } public int getMessageCount() { return this.message_.size(); }
/*       */     public StarLinkMessage.mMessage getMessage(int index) { return this.message_.get(index); }
/*       */     public StarLinkMessage.mMessageOrBuilder getMessageOrBuilder(int index) { return this.message_.get(index); }
/*   433 */     public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized;
/*   434 */       if (isInitialized == 1) return true; 
/*   435 */       if (isInitialized == 0) return false;
/*       */       
/*   437 */       for (int i = 0; i < getMessageCount(); i++) {
/*   438 */         if (!getMessage(i).isInitialized()) {
/*   439 */           this.memoizedIsInitialized = 0;
/*   440 */           return false;
/*       */         } 
/*       */       } 
/*   443 */       this.memoizedIsInitialized = 1;
/*   444 */       return true; }
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/*   450 */       if ((this.bitField0_ & 0x1) != 0) {
/*   451 */         output.writeUInt32(1, this.fID_);
/*       */       }
/*   453 */       if ((this.bitField0_ & 0x2) != 0) {
/*   454 */         GeneratedMessageV3.writeString(output, 2, this.iMEI_);
/*       */       }
/*   456 */       if ((this.bitField0_ & 0x4) != 0) {
/*   457 */         output.writeUInt32(3, this.uID_);
/*       */       }
/*   459 */       if ((this.bitField0_ & 0x8) != 0) {
/*   460 */         output.writeUInt32(4, this.ackRef_);
/*       */       }
/*   462 */       for (int i = 0; i < this.message_.size(); i++) {
/*   463 */         output.writeMessage(5, (MessageLite)this.message_.get(i));
/*       */       }
/*   465 */       this.unknownFields.writeTo(output);
/*       */     }
/*       */ 
/*       */     
/*       */     public int getSerializedSize() {
/*   470 */       int size = this.memoizedSize;
/*   471 */       if (size != -1) return size;
/*       */       
/*   473 */       size = 0;
/*   474 */       if ((this.bitField0_ & 0x1) != 0) {
/*   475 */         size += 
/*   476 */           CodedOutputStream.computeUInt32Size(1, this.fID_);
/*       */       }
/*   478 */       if ((this.bitField0_ & 0x2) != 0) {
/*   479 */         size += GeneratedMessageV3.computeStringSize(2, this.iMEI_);
/*       */       }
/*   481 */       if ((this.bitField0_ & 0x4) != 0) {
/*   482 */         size += 
/*   483 */           CodedOutputStream.computeUInt32Size(3, this.uID_);
/*       */       }
/*   485 */       if ((this.bitField0_ & 0x8) != 0) {
/*   486 */         size += 
/*   487 */           CodedOutputStream.computeUInt32Size(4, this.ackRef_);
/*       */       }
/*   489 */       for (int i = 0; i < this.message_.size(); i++) {
/*   490 */         size += 
/*   491 */           CodedOutputStream.computeMessageSize(5, (MessageLite)this.message_.get(i));
/*       */       }
/*   493 */       size += this.unknownFields.getSerializedSize();
/*   494 */       this.memoizedSize = size;
/*   495 */       return size;
/*       */     }
/*       */ 
/*       */     
/*       */     public boolean equals(Object obj) {
/*   500 */       if (obj == this) {
/*   501 */         return true;
/*       */       }
/*   503 */       if (!(obj instanceof StarLink_Message)) {
/*   504 */         return super.equals(obj);
/*       */       }
/*   506 */       StarLink_Message other = (StarLink_Message)obj;
/*       */       
/*   508 */       if (hasFID() != other.hasFID()) return false; 
/*   509 */       if (hasFID() && 
/*   510 */         getFID() != other
/*   511 */         .getFID()) return false;
/*       */       
/*   513 */       if (hasIMEI() != other.hasIMEI()) return false; 
/*   514 */       if (hasIMEI() && 
/*       */         
/*   516 */         !getIMEI().equals(other.getIMEI())) return false;
/*       */       
/*   518 */       if (hasUID() != other.hasUID()) return false; 
/*   519 */       if (hasUID() && 
/*   520 */         getUID() != other
/*   521 */         .getUID()) return false;
/*       */       
/*   523 */       if (hasAckRef() != other.hasAckRef()) return false; 
/*   524 */       if (hasAckRef() && 
/*   525 */         getAckRef() != other
/*   526 */         .getAckRef()) return false;
/*       */ 
/*       */       
/*   529 */       if (!getMessageList().equals(other.getMessageList())) return false; 
/*   530 */       if (!this.unknownFields.equals(other.unknownFields)) return false; 
/*   531 */       return true;
/*       */     }
/*       */ 
/*       */     
/*       */     public int hashCode() {
/*   536 */       if (this.memoizedHashCode != 0) {
/*   537 */         return this.memoizedHashCode;
/*       */       }
/*   539 */       int hash = 41;
/*   540 */       hash = 19 * hash + getDescriptor().hashCode();
/*   541 */       if (hasFID()) {
/*   542 */         hash = 37 * hash + 1;
/*   543 */         hash = 53 * hash + getFID();
/*       */       } 
/*   545 */       if (hasIMEI()) {
/*   546 */         hash = 37 * hash + 2;
/*   547 */         hash = 53 * hash + getIMEI().hashCode();
/*       */       } 
/*   549 */       if (hasUID()) {
/*   550 */         hash = 37 * hash + 3;
/*   551 */         hash = 53 * hash + getUID();
/*       */       } 
/*   553 */       if (hasAckRef()) {
/*   554 */         hash = 37 * hash + 4;
/*   555 */         hash = 53 * hash + getAckRef();
/*       */       } 
/*   557 */       if (getMessageCount() > 0) {
/*   558 */         hash = 37 * hash + 5;
/*   559 */         hash = 53 * hash + getMessageList().hashCode();
/*       */       } 
/*   561 */       hash = 29 * hash + this.unknownFields.hashCode();
/*   562 */       this.memoizedHashCode = hash;
/*   563 */       return hash;
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static StarLink_Message parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
/*   569 */       return (StarLink_Message)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static StarLink_Message parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*   575 */       return (StarLink_Message)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static StarLink_Message parseFrom(ByteString data) throws InvalidProtocolBufferException {
/*   580 */       return (StarLink_Message)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static StarLink_Message parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*   586 */       return (StarLink_Message)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static StarLink_Message parseFrom(byte[] data) throws InvalidProtocolBufferException {
/*   590 */       return (StarLink_Message)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static StarLink_Message parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*   596 */       return (StarLink_Message)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static StarLink_Message parseFrom(InputStream input) throws IOException {
/*   600 */       return 
/*   601 */         (StarLink_Message)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static StarLink_Message parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*   607 */       return 
/*   608 */         (StarLink_Message)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static StarLink_Message parseDelimitedFrom(InputStream input) throws IOException {
/*   612 */       return 
/*   613 */         (StarLink_Message)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static StarLink_Message parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*   619 */       return 
/*   620 */         (StarLink_Message)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static StarLink_Message parseFrom(CodedInputStream input) throws IOException {
/*   625 */       return 
/*   626 */         (StarLink_Message)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static StarLink_Message parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*   632 */       return 
/*   633 */         (StarLink_Message)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public Builder newBuilderForType() {
/*   637 */       return newBuilder();
/*       */     } public static Builder newBuilder() {
/*   639 */       return DEFAULT_INSTANCE.toBuilder();
/*       */     }
/*       */     public static Builder newBuilder(StarLink_Message prototype) {
/*   642 */       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
/*       */     }
/*       */     
/*       */     public Builder toBuilder() {
/*   646 */       return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder())
/*   647 */         .mergeFrom(this);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
/*   653 */       Builder builder = new Builder(parent);
/*   654 */       return builder;
/*       */     }
/*       */     
/*       */     public static final class Builder
/*       */       extends GeneratedMessageV3.Builder<Builder>
/*       */       implements StarLinkMessage.StarLink_MessageOrBuilder {
/*       */       private int bitField0_;
/*       */       private int fID_;
/*       */       private Object iMEI_;
/*       */       private int uID_;
/*       */       private int ackRef_;
/*       */       private List<StarLinkMessage.mMessage> message_;
/*       */       private RepeatedFieldBuilderV3<StarLinkMessage.mMessage, StarLinkMessage.mMessage.Builder, StarLinkMessage.mMessageOrBuilder> messageBuilder_;
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/*   669 */         return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_StarLink_Message_descriptor;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
/*   675 */         return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_StarLink_Message_fieldAccessorTable
/*   676 */           .ensureFieldAccessorsInitialized(StarLinkMessage.StarLink_Message.class, Builder.class);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private Builder()
/*       */       {
/*   945 */         this.iMEI_ = "";
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/*  1163 */         this
/*  1164 */           .message_ = Collections.emptyList(); maybeForceBuilderInitialization(); } private Builder(GeneratedMessageV3.BuilderParent parent) { super(parent); this.iMEI_ = ""; this.message_ = Collections.emptyList(); maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (StarLinkMessage.StarLink_Message.alwaysUseFieldBuilders) getMessageFieldBuilder();  } public Builder clear() { super.clear(); this.fID_ = 0; this.bitField0_ &= 0xFFFFFFFE; this.iMEI_ = ""; this.bitField0_ &= 0xFFFFFFFD; this.uID_ = 0; this.bitField0_ &= 0xFFFFFFFB; this.ackRef_ = 0; this.bitField0_ &= 0xFFFFFFF7; if (this.messageBuilder_ == null) { this.message_ = Collections.emptyList(); this.bitField0_ &= 0xFFFFFFEF; } else { this.messageBuilder_.clear(); }  return this; } public Descriptors.Descriptor getDescriptorForType() { return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_StarLink_Message_descriptor; } public StarLinkMessage.StarLink_Message getDefaultInstanceForType() { return StarLinkMessage.StarLink_Message.getDefaultInstance(); } public StarLinkMessage.StarLink_Message build() { StarLinkMessage.StarLink_Message result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public StarLinkMessage.StarLink_Message buildPartial() { StarLinkMessage.StarLink_Message result = new StarLinkMessage.StarLink_Message(this); int from_bitField0_ = this.bitField0_; int to_bitField0_ = 0; if ((from_bitField0_ & 0x1) != 0) { result.fID_ = this.fID_; to_bitField0_ |= 0x1; }  if ((from_bitField0_ & 0x2) != 0) to_bitField0_ |= 0x2;  result.iMEI_ = this.iMEI_; if ((from_bitField0_ & 0x4) != 0) { result.uID_ = this.uID_; to_bitField0_ |= 0x4; }  if ((from_bitField0_ & 0x8) != 0) { result.ackRef_ = this.ackRef_; to_bitField0_ |= 0x8; }  if (this.messageBuilder_ == null) { if ((this.bitField0_ & 0x10) != 0) { this.message_ = Collections.unmodifiableList(this.message_); this.bitField0_ &= 0xFFFFFFEF; }  result.message_ = this.message_; } else { result.message_ = this.messageBuilder_.build(); }  result.bitField0_ = to_bitField0_; onBuilt(); return result; } public Builder clone() { return (Builder)super.clone(); } public Builder setField(Descriptors.FieldDescriptor field, Object value) { return (Builder)super.setField(field, value); } public Builder clearField(Descriptors.FieldDescriptor field) { return (Builder)super.clearField(field); } public Builder clearOneof(Descriptors.OneofDescriptor oneof) { return (Builder)super.clearOneof(oneof); } public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) { return (Builder)super.setRepeatedField(field, index, value); } public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) { return (Builder)super.addRepeatedField(field, value); } public Builder mergeFrom(Message other) { if (other instanceof StarLinkMessage.StarLink_Message) return mergeFrom((StarLinkMessage.StarLink_Message)other);  super.mergeFrom(other); return this; } public Builder mergeFrom(StarLinkMessage.StarLink_Message other) { if (other == StarLinkMessage.StarLink_Message.getDefaultInstance()) return this;  if (other.hasFID()) setFID(other.getFID());  if (other.hasIMEI()) { this.bitField0_ |= 0x2; this.iMEI_ = other.iMEI_; onChanged(); }  if (other.hasUID()) setUID(other.getUID());  if (other.hasAckRef()) setAckRef(other.getAckRef());  if (this.messageBuilder_ == null) { if (!other.message_.isEmpty()) { if (this.message_.isEmpty()) { this.message_ = other.message_; this.bitField0_ &= 0xFFFFFFEF; } else { ensureMessageIsMutable(); this.message_.addAll(other.message_); }  onChanged(); }  } else if (!other.message_.isEmpty()) { if (this.messageBuilder_.isEmpty()) { this.messageBuilder_.dispose(); this.messageBuilder_ = null; this.message_ = other.message_; this.bitField0_ &= 0xFFFFFFEF; this.messageBuilder_ = StarLinkMessage.StarLink_Message.alwaysUseFieldBuilders ? getMessageFieldBuilder() : null; } else { this.messageBuilder_.addAllMessages(other.message_); }  }  mergeUnknownFields(other.unknownFields); onChanged(); return this; } public final boolean isInitialized() { for (int i = 0; i < getMessageCount(); i++) { if (!getMessage(i).isInitialized()) return false;  }  return true; } public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { StarLinkMessage.StarLink_Message parsedMessage = null; try { parsedMessage = (StarLinkMessage.StarLink_Message)StarLinkMessage.StarLink_Message.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (StarLinkMessage.StarLink_Message)e.getUnfinishedMessage(); throw e.unwrapIOException(); } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; } public boolean hasFID() { return ((this.bitField0_ & 0x1) != 0); } public int getFID() { return this.fID_; } public Builder setFID(int value) { this.bitField0_ |= 0x1; this.fID_ = value; onChanged(); return this; } public Builder clearFID() { this.bitField0_ &= 0xFFFFFFFE; this.fID_ = 0; onChanged(); return this; } public boolean hasIMEI() { return ((this.bitField0_ & 0x2) != 0); } public String getIMEI() { Object ref = this.iMEI_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.iMEI_ = s;  return s; }  return (String)ref; } public ByteString getIMEIBytes() { Object ref = this.iMEI_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.iMEI_ = b; return b; }  return (ByteString)ref; } public Builder setIMEI(String value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x2; this.iMEI_ = value; onChanged(); return this; } public Builder clearIMEI() { this.bitField0_ &= 0xFFFFFFFD; this.iMEI_ = StarLinkMessage.StarLink_Message.getDefaultInstance().getIMEI(); onChanged(); return this; } public Builder setIMEIBytes(ByteString value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x2; this.iMEI_ = value; onChanged(); return this; } public boolean hasUID() { return ((this.bitField0_ & 0x4) != 0); } public int getUID() { return this.uID_; } public Builder setUID(int value) { this.bitField0_ |= 0x4; this.uID_ = value; onChanged(); return this; } public Builder clearUID() { this.bitField0_ &= 0xFFFFFFFB; this.uID_ = 0; onChanged(); return this; } public boolean hasAckRef() { return ((this.bitField0_ & 0x8) != 0); } public int getAckRef() { return this.ackRef_; } public Builder setAckRef(int value) { this.bitField0_ |= 0x8; this.ackRef_ = value; onChanged(); return this; }
/*       */       public Builder clearAckRef() { this.bitField0_ &= 0xFFFFFFF7; this.ackRef_ = 0; onChanged(); return this; }
/*  1166 */       private void ensureMessageIsMutable() { if ((this.bitField0_ & 0x10) == 0) {
/*  1167 */           this.message_ = new ArrayList<>(this.message_);
/*  1168 */           this.bitField0_ |= 0x10;
/*       */         }  }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public List<StarLinkMessage.mMessage> getMessageList() {
/*  1179 */         if (this.messageBuilder_ == null) {
/*  1180 */           return Collections.unmodifiableList(this.message_);
/*       */         }
/*  1182 */         return this.messageBuilder_.getMessageList();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getMessageCount() {
/*  1189 */         if (this.messageBuilder_ == null) {
/*  1190 */           return this.message_.size();
/*       */         }
/*  1192 */         return this.messageBuilder_.getCount();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public StarLinkMessage.mMessage getMessage(int index) {
/*  1199 */         if (this.messageBuilder_ == null) {
/*  1200 */           return this.message_.get(index);
/*       */         }
/*  1202 */         return (StarLinkMessage.mMessage)this.messageBuilder_.getMessage(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setMessage(int index, StarLinkMessage.mMessage value) {
/*  1210 */         if (this.messageBuilder_ == null) {
/*  1211 */           if (value == null) {
/*  1212 */             throw new NullPointerException();
/*       */           }
/*  1214 */           ensureMessageIsMutable();
/*  1215 */           this.message_.set(index, value);
/*  1216 */           onChanged();
/*       */         } else {
/*  1218 */           this.messageBuilder_.setMessage(index, (AbstractMessage)value);
/*       */         } 
/*  1220 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setMessage(int index, StarLinkMessage.mMessage.Builder builderForValue) {
/*  1227 */         if (this.messageBuilder_ == null) {
/*  1228 */           ensureMessageIsMutable();
/*  1229 */           this.message_.set(index, builderForValue.build());
/*  1230 */           onChanged();
/*       */         } else {
/*  1232 */           this.messageBuilder_.setMessage(index, (AbstractMessage)builderForValue.build());
/*       */         } 
/*  1234 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addMessage(StarLinkMessage.mMessage value) {
/*  1240 */         if (this.messageBuilder_ == null) {
/*  1241 */           if (value == null) {
/*  1242 */             throw new NullPointerException();
/*       */           }
/*  1244 */           ensureMessageIsMutable();
/*  1245 */           this.message_.add(value);
/*  1246 */           onChanged();
/*       */         } else {
/*  1248 */           this.messageBuilder_.addMessage((AbstractMessage)value);
/*       */         } 
/*  1250 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addMessage(int index, StarLinkMessage.mMessage value) {
/*  1257 */         if (this.messageBuilder_ == null) {
/*  1258 */           if (value == null) {
/*  1259 */             throw new NullPointerException();
/*       */           }
/*  1261 */           ensureMessageIsMutable();
/*  1262 */           this.message_.add(index, value);
/*  1263 */           onChanged();
/*       */         } else {
/*  1265 */           this.messageBuilder_.addMessage(index, (AbstractMessage)value);
/*       */         } 
/*  1267 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addMessage(StarLinkMessage.mMessage.Builder builderForValue) {
/*  1274 */         if (this.messageBuilder_ == null) {
/*  1275 */           ensureMessageIsMutable();
/*  1276 */           this.message_.add(builderForValue.build());
/*  1277 */           onChanged();
/*       */         } else {
/*  1279 */           this.messageBuilder_.addMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*  1281 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addMessage(int index, StarLinkMessage.mMessage.Builder builderForValue) {
/*  1288 */         if (this.messageBuilder_ == null) {
/*  1289 */           ensureMessageIsMutable();
/*  1290 */           this.message_.add(index, builderForValue.build());
/*  1291 */           onChanged();
/*       */         } else {
/*  1293 */           this.messageBuilder_.addMessage(index, (AbstractMessage)builderForValue.build());
/*       */         } 
/*  1295 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addAllMessage(Iterable<? extends StarLinkMessage.mMessage> values) {
/*  1302 */         if (this.messageBuilder_ == null) {
/*  1303 */           ensureMessageIsMutable();
/*  1304 */           AbstractMessageLite.Builder.addAll(values, this.message_);
/*       */           
/*  1306 */           onChanged();
/*       */         } else {
/*  1308 */           this.messageBuilder_.addAllMessages(values);
/*       */         } 
/*  1310 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearMessage() {
/*  1316 */         if (this.messageBuilder_ == null) {
/*  1317 */           this.message_ = Collections.emptyList();
/*  1318 */           this.bitField0_ &= 0xFFFFFFEF;
/*  1319 */           onChanged();
/*       */         } else {
/*  1321 */           this.messageBuilder_.clear();
/*       */         } 
/*  1323 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder removeMessage(int index) {
/*  1329 */         if (this.messageBuilder_ == null) {
/*  1330 */           ensureMessageIsMutable();
/*  1331 */           this.message_.remove(index);
/*  1332 */           onChanged();
/*       */         } else {
/*  1334 */           this.messageBuilder_.remove(index);
/*       */         } 
/*  1336 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public StarLinkMessage.mMessage.Builder getMessageBuilder(int index) {
/*  1343 */         return (StarLinkMessage.mMessage.Builder)getMessageFieldBuilder().getBuilder(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public StarLinkMessage.mMessageOrBuilder getMessageOrBuilder(int index) {
/*  1350 */         if (this.messageBuilder_ == null)
/*  1351 */           return this.message_.get(index); 
/*  1352 */         return (StarLinkMessage.mMessageOrBuilder)this.messageBuilder_.getMessageOrBuilder(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public List<? extends StarLinkMessage.mMessageOrBuilder> getMessageOrBuilderList() {
/*  1360 */         if (this.messageBuilder_ != null) {
/*  1361 */           return this.messageBuilder_.getMessageOrBuilderList();
/*       */         }
/*  1363 */         return Collections.unmodifiableList((List)this.message_);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public StarLinkMessage.mMessage.Builder addMessageBuilder() {
/*  1370 */         return (StarLinkMessage.mMessage.Builder)getMessageFieldBuilder().addBuilder(
/*  1371 */             (AbstractMessage)StarLinkMessage.mMessage.getDefaultInstance());
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public StarLinkMessage.mMessage.Builder addMessageBuilder(int index) {
/*  1378 */         return (StarLinkMessage.mMessage.Builder)getMessageFieldBuilder().addBuilder(index, 
/*  1379 */             (AbstractMessage)StarLinkMessage.mMessage.getDefaultInstance());
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public List<StarLinkMessage.mMessage.Builder> getMessageBuilderList() {
/*  1386 */         return getMessageFieldBuilder().getBuilderList();
/*       */       }
/*       */ 
/*       */       
/*       */       private RepeatedFieldBuilderV3<StarLinkMessage.mMessage, StarLinkMessage.mMessage.Builder, StarLinkMessage.mMessageOrBuilder> getMessageFieldBuilder() {
/*  1391 */         if (this.messageBuilder_ == null) {
/*  1392 */           this
/*       */ 
/*       */ 
/*       */ 
/*       */             
/*  1397 */             .messageBuilder_ = new RepeatedFieldBuilderV3(this.message_, ((this.bitField0_ & 0x10) != 0), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*  1398 */           this.message_ = null;
/*       */         } 
/*  1400 */         return this.messageBuilder_;
/*       */       }
/*       */ 
/*       */       
/*       */       public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
/*  1405 */         return (Builder)super.setUnknownFields(unknownFields);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
/*  1411 */         return (Builder)super.mergeUnknownFields(unknownFields);
/*       */       }
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*  1421 */     private static final StarLink_Message DEFAULT_INSTANCE = new StarLink_Message();
/*       */ 
/*       */     
/*       */     public static StarLink_Message getDefaultInstance() {
/*  1425 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */     
/*       */     @Deprecated
/*  1429 */     public static final Parser<StarLink_Message> PARSER = (Parser<StarLink_Message>)new AbstractParser<StarLink_Message>()
/*       */       {
/*       */ 
/*       */         
/*       */         public StarLinkMessage.StarLink_Message parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException
/*       */         {
/*  1435 */           return new StarLinkMessage.StarLink_Message(input, extensionRegistry);
/*       */         }
/*       */       };
/*       */     
/*       */     public static Parser<StarLink_Message> parser() {
/*  1440 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public Parser<StarLink_Message> getParserForType() {
/*  1445 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public StarLink_Message getDefaultInstanceForType() {
/*  1450 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */   }
/*       */ 
/*       */ 
/*       */   
/*       */   public static interface mMessageOrBuilder
/*       */     extends MessageOrBuilder
/*       */   {
/*       */     boolean hasReferenceNumber();
/*       */ 
/*       */ 
/*       */     
/*       */     long getReferenceNumber();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasReferenceNumberDiff();
/*       */ 
/*       */ 
/*       */     
/*       */     int getReferenceNumberDiff();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasMessageType();
/*       */ 
/*       */ 
/*       */     
/*       */     int getMessageType();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasWakeUp();
/*       */ 
/*       */ 
/*       */     
/*       */     StarLinkMessage.mWakeUp getWakeUp();
/*       */ 
/*       */ 
/*       */     
/*       */     StarLinkMessage.mWakeUpOrBuilder getWakeUpOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasConfirmation();
/*       */ 
/*       */ 
/*       */     
/*       */     StarLinkMessage.mConfirmation getConfirmation();
/*       */ 
/*       */ 
/*       */     
/*       */     StarLinkMessage.mConfirmationOrBuilder getConfirmationOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasParamResponse();
/*       */ 
/*       */ 
/*       */     
/*       */     StarLinkMessage.mParamResponse getParamResponse();
/*       */ 
/*       */ 
/*       */     
/*       */     StarLinkMessage.mParamResponseOrBuilder getParamResponseOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasEventReport();
/*       */ 
/*       */ 
/*       */     
/*       */     StarLinkMessage.mEventReport getEventReport();
/*       */ 
/*       */ 
/*       */     
/*       */     StarLinkMessage.mEventReportOrBuilder getEventReportOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasGeoZone();
/*       */ 
/*       */ 
/*       */     
/*       */     StarLinkMessage.mGeoZone getGeoZone();
/*       */ 
/*       */ 
/*       */     
/*       */     StarLinkMessage.mGeoZoneOrBuilder getGeoZoneOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasOutputs();
/*       */ 
/*       */ 
/*       */     
/*       */     StarLinkMessage.mOutputs getOutputs();
/*       */ 
/*       */ 
/*       */     
/*       */     StarLinkMessage.mOutputsOrBuilder getOutputsOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasEventConfig();
/*       */ 
/*       */ 
/*       */     
/*       */     StarLinkMessage.mEventConfig getEventConfig();
/*       */ 
/*       */ 
/*       */     
/*       */     StarLinkMessage.mEventConfigOrBuilder getEventConfigOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasInputs();
/*       */ 
/*       */ 
/*       */     
/*       */     StarLinkMessage.mInputs getInputs();
/*       */ 
/*       */ 
/*       */     
/*       */     StarLinkMessage.mInputsOrBuilder getInputsOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasInputConfig();
/*       */ 
/*       */ 
/*       */     
/*       */     StarLinkMessage.mInputConfig getInputConfig();
/*       */ 
/*       */ 
/*       */     
/*       */     StarLinkMessage.mInputConfigOrBuilder getInputConfigOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasSpeedLimit();
/*       */ 
/*       */ 
/*       */     
/*       */     StarLinkMessage.mSpeedLimit getSpeedLimit();
/*       */ 
/*       */ 
/*       */     
/*       */     StarLinkMessage.mSpeedLimitOrBuilder getSpeedLimitOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasUnitIDChanged();
/*       */ 
/*       */ 
/*       */     
/*       */     StarLinkMessage.mUnitIDChanged getUnitIDChanged();
/*       */ 
/*       */ 
/*       */     
/*       */     StarLinkMessage.mUnitIDChangedOrBuilder getUnitIDChangedOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasGenericDeviceMsg();
/*       */ 
/*       */ 
/*       */     
/*       */     StarLinkMessage.mGenDeviceMsg getGenericDeviceMsg();
/*       */ 
/*       */ 
/*       */     
/*       */     StarLinkMessage.mGenDeviceMsgOrBuilder getGenericDeviceMsgOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasGenericDeviceFW();
/*       */ 
/*       */ 
/*       */     
/*       */     StarLinkMessage.mGenDeviceFW getGenericDeviceFW();
/*       */ 
/*       */ 
/*       */     
/*       */     StarLinkMessage.mGenDeviceFWOrBuilder getGenericDeviceFWOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasReadIButton();
/*       */ 
/*       */ 
/*       */     
/*       */     StarLinkMessage.mReadIButton getReadIButton();
/*       */ 
/*       */ 
/*       */     
/*       */     StarLinkMessage.mReadIButtonOrBuilder getReadIButtonOrBuilder();
/*       */ 
/*       */     
/*       */     boolean hasGetPattern();
/*       */ 
/*       */     
/*       */     StarLinkMessage.mGetPattern getGetPattern();
/*       */ 
/*       */     
/*       */     StarLinkMessage.mGetPatternOrBuilder getGetPatternOrBuilder();
/*       */ 
/*       */     
/*       */     boolean hasMultiParameter();
/*       */ 
/*       */     
/*       */     StarLinkMessage.mMultiParam getMultiParameter();
/*       */ 
/*       */     
/*       */     StarLinkMessage.mMultiParamOrBuilder getMultiParameterOrBuilder();
/*       */ 
/*       */     
/*       */     boolean hasTempConfig();
/*       */ 
/*       */     
/*       */     StarLinkMessage.mTempConfig getTempConfig();
/*       */ 
/*       */     
/*       */     StarLinkMessage.mTempConfigOrBuilder getTempConfigOrBuilder();
/*       */ 
/*       */     
/*       */     boolean hasDeviceList();
/*       */ 
/*       */     
/*       */     StarLinkMessage.mDeviceList getDeviceList();
/*       */ 
/*       */     
/*       */     StarLinkMessage.mDeviceListOrBuilder getDeviceListOrBuilder();
/*       */ 
/*       */     
/*       */     boolean hasTeachRemote();
/*       */ 
/*       */     
/*       */     StarLinkMessage.mTeachRemote getTeachRemote();
/*       */ 
/*       */     
/*       */     StarLinkMessage.mTeachRemoteOrBuilder getTeachRemoteOrBuilder();
/*       */ 
/*       */     
/*       */     boolean hasAuthenticate();
/*       */ 
/*       */     
/*       */     StarLinkMessage.mAuthenticate getAuthenticate();
/*       */ 
/*       */     
/*       */     StarLinkMessage.mAuthenticateOrBuilder getAuthenticateOrBuilder();
/*       */ 
/*       */     
/*       */     boolean hasCurrentLocation();
/*       */ 
/*       */     
/*       */     StarLinkMessage.mEventReport getCurrentLocation();
/*       */ 
/*       */     
/*       */     StarLinkMessage.mEventReportOrBuilder getCurrentLocationOrBuilder();
/*       */ 
/*       */     
/*       */     boolean hasConfigServer();
/*       */ 
/*       */     
/*       */     StarLinkMessage.mConfigServer getConfigServer();
/*       */ 
/*       */     
/*       */     StarLinkMessage.mConfigServerOrBuilder getConfigServerOrBuilder();
/*       */   }
/*       */ 
/*       */   
/*       */   public static final class mMessage
/*       */     extends GeneratedMessageV3
/*       */     implements mMessageOrBuilder
/*       */   {
/*       */     private static final long serialVersionUID = 0L;
/*       */     
/*       */     private int bitField0_;
/*       */     
/*       */     public static final int REFERENCENUMBER_FIELD_NUMBER = 100;
/*       */     
/*       */     private long referenceNumber_;
/*       */     
/*       */     public static final int REFERENCENUMBERDIFF_FIELD_NUMBER = 101;
/*       */     
/*       */     private int referenceNumberDiff_;
/*       */     
/*       */     public static final int MESSAGETYPE_FIELD_NUMBER = 102;
/*       */     
/*       */     private int messageType_;
/*       */     
/*       */     public static final int WAKEUP_FIELD_NUMBER = 1;
/*       */     
/*       */     private StarLinkMessage.mWakeUp wakeUp_;
/*       */     
/*       */     public static final int CONFIRMATION_FIELD_NUMBER = 2;
/*       */     
/*       */     private StarLinkMessage.mConfirmation confirmation_;
/*       */     
/*       */     public static final int PARAMRESPONSE_FIELD_NUMBER = 3;
/*       */     
/*       */     private StarLinkMessage.mParamResponse paramResponse_;
/*       */     
/*       */     public static final int EVENTREPORT_FIELD_NUMBER = 6;
/*       */     
/*       */     private StarLinkMessage.mEventReport eventReport_;
/*       */     
/*       */     public static final int GEOZONE_FIELD_NUMBER = 10;
/*       */     
/*       */     private StarLinkMessage.mGeoZone geoZone_;
/*       */     
/*       */     public static final int OUTPUTS_FIELD_NUMBER = 12;
/*       */     
/*       */     private StarLinkMessage.mOutputs outputs_;
/*       */     
/*       */     public static final int EVENTCONFIG_FIELD_NUMBER = 14;
/*       */     
/*       */     private StarLinkMessage.mEventConfig eventConfig_;
/*       */     
/*       */     public static final int INPUTS_FIELD_NUMBER = 16;
/*       */     
/*       */     private StarLinkMessage.mInputs inputs_;
/*       */     
/*       */     public static final int INPUTCONFIG_FIELD_NUMBER = 17;
/*       */     
/*       */     private StarLinkMessage.mInputConfig inputConfig_;
/*       */     
/*       */     public static final int SPEEDLIMIT_FIELD_NUMBER = 27;
/*       */     
/*       */     private StarLinkMessage.mSpeedLimit speedLimit_;
/*       */     
/*       */     public static final int UNITIDCHANGED_FIELD_NUMBER = 29;
/*       */     
/*       */     private StarLinkMessage.mUnitIDChanged unitIDChanged_;
/*       */     
/*       */     public static final int GENERICDEVICEMSG_FIELD_NUMBER = 30;
/*       */     
/*       */     private StarLinkMessage.mGenDeviceMsg genericDeviceMsg_;
/*       */     
/*       */     public static final int GENERICDEVICEFW_FIELD_NUMBER = 35;
/*       */     
/*       */     private StarLinkMessage.mGenDeviceFW genericDeviceFW_;
/*       */     
/*       */     public static final int READIBUTTON_FIELD_NUMBER = 42;
/*       */     
/*       */     private StarLinkMessage.mReadIButton readIButton_;
/*       */     
/*       */     public static final int GETPATTERN_FIELD_NUMBER = 43;
/*       */     
/*       */     private StarLinkMessage.mGetPattern getPattern_;
/*       */     
/*       */     public static final int MULTIPARAMETER_FIELD_NUMBER = 45;
/*       */     
/*       */     private StarLinkMessage.mMultiParam multiParameter_;
/*       */     
/*       */     public static final int TEMPCONFIG_FIELD_NUMBER = 52;
/*       */     
/*       */     private StarLinkMessage.mTempConfig tempConfig_;
/*       */     
/*       */     public static final int DEVICELIST_FIELD_NUMBER = 56;
/*       */     
/*       */     private StarLinkMessage.mDeviceList deviceList_;
/*       */     
/*       */     public static final int TEACHREMOTE_FIELD_NUMBER = 58;
/*       */     
/*       */     private StarLinkMessage.mTeachRemote teachRemote_;
/*       */     
/*       */     public static final int AUTHENTICATE_FIELD_NUMBER = 95;
/*       */     
/*       */     private StarLinkMessage.mAuthenticate authenticate_;
/*       */     
/*       */     public static final int CURRENTLOCATION_FIELD_NUMBER = 96;
/*       */     
/*       */     private StarLinkMessage.mEventReport currentLocation_;
/*       */     
/*       */     public static final int CONFIGSERVER_FIELD_NUMBER = 98;
/*       */     
/*       */     private StarLinkMessage.mConfigServer configServer_;
/*       */     
/*       */     private byte memoizedIsInitialized;
/*       */ 
/*       */     
/*       */     private mMessage(GeneratedMessageV3.Builder<?> builder)
/*       */     {
/*  1836 */       super(builder);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*  2835 */       this.memoizedIsInitialized = -1; } private mMessage() { this.memoizedIsInitialized = -1; } protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) { return new mMessage(); } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private mMessage(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this(); if (extensionRegistry == null) throw new NullPointerException();  int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { StarLinkMessage.mWakeUp.Builder builder20; StarLinkMessage.mConfirmation.Builder builder19; StarLinkMessage.mParamResponse.Builder builder18; StarLinkMessage.mEventReport.Builder builder17; StarLinkMessage.mGeoZone.Builder builder16; StarLinkMessage.mOutputs.Builder builder15; StarLinkMessage.mEventConfig.Builder builder14; StarLinkMessage.mInputs.Builder builder13; StarLinkMessage.mInputConfig.Builder builder12; StarLinkMessage.mSpeedLimit.Builder builder11; StarLinkMessage.mUnitIDChanged.Builder builder10; StarLinkMessage.mGenDeviceMsg.Builder builder9; StarLinkMessage.mGenDeviceFW.Builder builder8; StarLinkMessage.mReadIButton.Builder builder7; StarLinkMessage.mGetPattern.Builder builder6; StarLinkMessage.mMultiParam.Builder builder5; StarLinkMessage.mTempConfig.Builder builder4; StarLinkMessage.mDeviceList.Builder builder3; StarLinkMessage.mTeachRemote.Builder builder2; StarLinkMessage.mAuthenticate.Builder builder; StarLinkMessage.mEventReport.Builder builder1; StarLinkMessage.mConfigServer.Builder subBuilder; int tag = input.readTag(); switch (tag) { case 0: done = true; continue;case 10: builder20 = null; if ((this.bitField0_ & 0x8) != 0) builder20 = this.wakeUp_.toBuilder();  this.wakeUp_ = (StarLinkMessage.mWakeUp)input.readMessage(StarLinkMessage.mWakeUp.PARSER, extensionRegistry); if (builder20 != null) { builder20.mergeFrom(this.wakeUp_); this.wakeUp_ = builder20.buildPartial(); }  this.bitField0_ |= 0x8; continue;case 18: builder19 = null; if ((this.bitField0_ & 0x10) != 0) builder19 = this.confirmation_.toBuilder();  this.confirmation_ = (StarLinkMessage.mConfirmation)input.readMessage(StarLinkMessage.mConfirmation.PARSER, extensionRegistry); if (builder19 != null) { builder19.mergeFrom(this.confirmation_); this.confirmation_ = builder19.buildPartial(); }  this.bitField0_ |= 0x10; continue;case 26: builder18 = null; if ((this.bitField0_ & 0x20) != 0) builder18 = this.paramResponse_.toBuilder();  this.paramResponse_ = (StarLinkMessage.mParamResponse)input.readMessage(StarLinkMessage.mParamResponse.PARSER, extensionRegistry); if (builder18 != null) { builder18.mergeFrom(this.paramResponse_); this.paramResponse_ = builder18.buildPartial(); }  this.bitField0_ |= 0x20; continue;case 50: builder17 = null; if ((this.bitField0_ & 0x40) != 0) builder17 = this.eventReport_.toBuilder();  this.eventReport_ = (StarLinkMessage.mEventReport)input.readMessage(StarLinkMessage.mEventReport.PARSER, extensionRegistry); if (builder17 != null) { builder17.mergeFrom(this.eventReport_); this.eventReport_ = builder17.buildPartial(); }  this.bitField0_ |= 0x40; continue;case 82: builder16 = null; if ((this.bitField0_ & 0x80) != 0) builder16 = this.geoZone_.toBuilder();  this.geoZone_ = (StarLinkMessage.mGeoZone)input.readMessage(StarLinkMessage.mGeoZone.PARSER, extensionRegistry); if (builder16 != null) { builder16.mergeFrom(this.geoZone_); this.geoZone_ = builder16.buildPartial(); }  this.bitField0_ |= 0x80; continue;case 98: builder15 = null; if ((this.bitField0_ & 0x100) != 0) builder15 = this.outputs_.toBuilder();  this.outputs_ = (StarLinkMessage.mOutputs)input.readMessage(StarLinkMessage.mOutputs.PARSER, extensionRegistry); if (builder15 != null) { builder15.mergeFrom(this.outputs_); this.outputs_ = builder15.buildPartial(); }  this.bitField0_ |= 0x100; continue;case 114: builder14 = null; if ((this.bitField0_ & 0x200) != 0) builder14 = this.eventConfig_.toBuilder();  this.eventConfig_ = (StarLinkMessage.mEventConfig)input.readMessage(StarLinkMessage.mEventConfig.PARSER, extensionRegistry); if (builder14 != null) { builder14.mergeFrom(this.eventConfig_); this.eventConfig_ = builder14.buildPartial(); }  this.bitField0_ |= 0x200; continue;case 130: builder13 = null; if ((this.bitField0_ & 0x400) != 0) builder13 = this.inputs_.toBuilder();  this.inputs_ = (StarLinkMessage.mInputs)input.readMessage(StarLinkMessage.mInputs.PARSER, extensionRegistry); if (builder13 != null) { builder13.mergeFrom(this.inputs_); this.inputs_ = builder13.buildPartial(); }  this.bitField0_ |= 0x400; continue;case 138: builder12 = null; if ((this.bitField0_ & 0x800) != 0) builder12 = this.inputConfig_.toBuilder();  this.inputConfig_ = (StarLinkMessage.mInputConfig)input.readMessage(StarLinkMessage.mInputConfig.PARSER, extensionRegistry); if (builder12 != null) { builder12.mergeFrom(this.inputConfig_); this.inputConfig_ = builder12.buildPartial(); }  this.bitField0_ |= 0x800; continue;case 218: builder11 = null; if ((this.bitField0_ & 0x1000) != 0) builder11 = this.speedLimit_.toBuilder();  this.speedLimit_ = (StarLinkMessage.mSpeedLimit)input.readMessage(StarLinkMessage.mSpeedLimit.PARSER, extensionRegistry); if (builder11 != null) { builder11.mergeFrom(this.speedLimit_); this.speedLimit_ = builder11.buildPartial(); }  this.bitField0_ |= 0x1000; continue;case 234: builder10 = null; if ((this.bitField0_ & 0x2000) != 0) builder10 = this.unitIDChanged_.toBuilder();  this.unitIDChanged_ = (StarLinkMessage.mUnitIDChanged)input.readMessage(StarLinkMessage.mUnitIDChanged.PARSER, extensionRegistry); if (builder10 != null) { builder10.mergeFrom(this.unitIDChanged_); this.unitIDChanged_ = builder10.buildPartial(); }  this.bitField0_ |= 0x2000; continue;case 242: builder9 = null; if ((this.bitField0_ & 0x4000) != 0) builder9 = this.genericDeviceMsg_.toBuilder();  this.genericDeviceMsg_ = (StarLinkMessage.mGenDeviceMsg)input.readMessage(StarLinkMessage.mGenDeviceMsg.PARSER, extensionRegistry); if (builder9 != null) { builder9.mergeFrom(this.genericDeviceMsg_); this.genericDeviceMsg_ = builder9.buildPartial(); }  this.bitField0_ |= 0x4000; continue;case 282: builder8 = null; if ((this.bitField0_ & 0x8000) != 0) builder8 = this.genericDeviceFW_.toBuilder();  this.genericDeviceFW_ = (StarLinkMessage.mGenDeviceFW)input.readMessage(StarLinkMessage.mGenDeviceFW.PARSER, extensionRegistry); if (builder8 != null) { builder8.mergeFrom(this.genericDeviceFW_); this.genericDeviceFW_ = builder8.buildPartial(); }  this.bitField0_ |= 0x8000; continue;case 338: builder7 = null; if ((this.bitField0_ & 0x10000) != 0) builder7 = this.readIButton_.toBuilder();  this.readIButton_ = (StarLinkMessage.mReadIButton)input.readMessage(StarLinkMessage.mReadIButton.PARSER, extensionRegistry); if (builder7 != null) { builder7.mergeFrom(this.readIButton_); this.readIButton_ = builder7.buildPartial(); }  this.bitField0_ |= 0x10000; continue;case 346: builder6 = null; if ((this.bitField0_ & 0x20000) != 0) builder6 = this.getPattern_.toBuilder();  this.getPattern_ = (StarLinkMessage.mGetPattern)input.readMessage(StarLinkMessage.mGetPattern.PARSER, extensionRegistry); if (builder6 != null) { builder6.mergeFrom(this.getPattern_); this.getPattern_ = builder6.buildPartial(); }  this.bitField0_ |= 0x20000; continue;case 362: builder5 = null; if ((this.bitField0_ & 0x40000) != 0) builder5 = this.multiParameter_.toBuilder();  this.multiParameter_ = (StarLinkMessage.mMultiParam)input.readMessage(StarLinkMessage.mMultiParam.PARSER, extensionRegistry); if (builder5 != null) { builder5.mergeFrom(this.multiParameter_); this.multiParameter_ = builder5.buildPartial(); }  this.bitField0_ |= 0x40000; continue;case 418: builder4 = null; if ((this.bitField0_ & 0x80000) != 0) builder4 = this.tempConfig_.toBuilder();  this.tempConfig_ = (StarLinkMessage.mTempConfig)input.readMessage(StarLinkMessage.mTempConfig.PARSER, extensionRegistry); if (builder4 != null) { builder4.mergeFrom(this.tempConfig_); this.tempConfig_ = builder4.buildPartial(); }  this.bitField0_ |= 0x80000; continue;case 450: builder3 = null; if ((this.bitField0_ & 0x100000) != 0) builder3 = this.deviceList_.toBuilder();  this.deviceList_ = (StarLinkMessage.mDeviceList)input.readMessage(StarLinkMessage.mDeviceList.PARSER, extensionRegistry); if (builder3 != null) { builder3.mergeFrom(this.deviceList_); this.deviceList_ = builder3.buildPartial(); }  this.bitField0_ |= 0x100000; continue;case 466: builder2 = null; if ((this.bitField0_ & 0x200000) != 0) builder2 = this.teachRemote_.toBuilder();  this.teachRemote_ = (StarLinkMessage.mTeachRemote)input.readMessage(StarLinkMessage.mTeachRemote.PARSER, extensionRegistry); if (builder2 != null) { builder2.mergeFrom(this.teachRemote_); this.teachRemote_ = builder2.buildPartial(); }  this.bitField0_ |= 0x200000; continue;case 762: builder = null; if ((this.bitField0_ & 0x400000) != 0) builder = this.authenticate_.toBuilder();  this.authenticate_ = (StarLinkMessage.mAuthenticate)input.readMessage(StarLinkMessage.mAuthenticate.PARSER, extensionRegistry); if (builder != null) { builder.mergeFrom(this.authenticate_); this.authenticate_ = builder.buildPartial(); }  this.bitField0_ |= 0x400000; continue;case 770: builder1 = null; if ((this.bitField0_ & 0x800000) != 0) builder1 = this.currentLocation_.toBuilder();  this.currentLocation_ = (StarLinkMessage.mEventReport)input.readMessage(StarLinkMessage.mEventReport.PARSER, extensionRegistry); if (builder1 != null) { builder1.mergeFrom(this.currentLocation_); this.currentLocation_ = builder1.buildPartial(); }  this.bitField0_ |= 0x800000; continue;case 786: subBuilder = null; if ((this.bitField0_ & 0x1000000) != 0) subBuilder = this.configServer_.toBuilder();  this.configServer_ = (StarLinkMessage.mConfigServer)input.readMessage(StarLinkMessage.mConfigServer.PARSER, extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.configServer_); this.configServer_ = subBuilder.buildPartial(); }  this.bitField0_ |= 0x1000000; continue;case 800: this.bitField0_ |= 0x1; this.referenceNumber_ = input.readUInt64(); continue;case 808: this.bitField0_ |= 0x2; this.referenceNumberDiff_ = input.readUInt32(); continue;case 816: this.bitField0_ |= 0x4; this.messageType_ = input.readUInt32(); continue; }  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this); } finally { this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_mMessage_descriptor; } protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() { return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_mMessage_fieldAccessorTable.ensureFieldAccessorsInitialized(mMessage.class, Builder.class); } public boolean hasReferenceNumber() { return ((this.bitField0_ & 0x1) != 0); } public long getReferenceNumber() { return this.referenceNumber_; } public boolean hasReferenceNumberDiff() { return ((this.bitField0_ & 0x2) != 0); } public int getReferenceNumberDiff() { return this.referenceNumberDiff_; } public boolean hasMessageType() { return ((this.bitField0_ & 0x4) != 0); } public int getMessageType() { return this.messageType_; } public boolean hasWakeUp() { return ((this.bitField0_ & 0x8) != 0); } public StarLinkMessage.mWakeUp getWakeUp() { return (this.wakeUp_ == null) ? StarLinkMessage.mWakeUp.getDefaultInstance() : this.wakeUp_; } public StarLinkMessage.mWakeUpOrBuilder getWakeUpOrBuilder() { return (this.wakeUp_ == null) ? StarLinkMessage.mWakeUp.getDefaultInstance() : this.wakeUp_; } public boolean hasConfirmation() { return ((this.bitField0_ & 0x10) != 0); } public StarLinkMessage.mConfirmation getConfirmation() { return (this.confirmation_ == null) ? StarLinkMessage.mConfirmation.getDefaultInstance() : this.confirmation_; } public StarLinkMessage.mConfirmationOrBuilder getConfirmationOrBuilder() { return (this.confirmation_ == null) ? StarLinkMessage.mConfirmation.getDefaultInstance() : this.confirmation_; } public boolean hasParamResponse() { return ((this.bitField0_ & 0x20) != 0); } public StarLinkMessage.mParamResponse getParamResponse() { return (this.paramResponse_ == null) ? StarLinkMessage.mParamResponse.getDefaultInstance() : this.paramResponse_; } public StarLinkMessage.mParamResponseOrBuilder getParamResponseOrBuilder() { return (this.paramResponse_ == null) ? StarLinkMessage.mParamResponse.getDefaultInstance() : this.paramResponse_; } public boolean hasEventReport() { return ((this.bitField0_ & 0x40) != 0); } public StarLinkMessage.mEventReport getEventReport() { return (this.eventReport_ == null) ? StarLinkMessage.mEventReport.getDefaultInstance() : this.eventReport_; } public StarLinkMessage.mEventReportOrBuilder getEventReportOrBuilder() { return (this.eventReport_ == null) ? StarLinkMessage.mEventReport.getDefaultInstance() : this.eventReport_; } public boolean hasGeoZone() { return ((this.bitField0_ & 0x80) != 0); } public StarLinkMessage.mGeoZone getGeoZone() { return (this.geoZone_ == null) ? StarLinkMessage.mGeoZone.getDefaultInstance() : this.geoZone_; } public StarLinkMessage.mGeoZoneOrBuilder getGeoZoneOrBuilder() { return (this.geoZone_ == null) ? StarLinkMessage.mGeoZone.getDefaultInstance() : this.geoZone_; } public boolean hasOutputs() { return ((this.bitField0_ & 0x100) != 0); } public StarLinkMessage.mOutputs getOutputs() { return (this.outputs_ == null) ? StarLinkMessage.mOutputs.getDefaultInstance() : this.outputs_; } public StarLinkMessage.mOutputsOrBuilder getOutputsOrBuilder() { return (this.outputs_ == null) ? StarLinkMessage.mOutputs.getDefaultInstance() : this.outputs_; } public boolean hasEventConfig() { return ((this.bitField0_ & 0x200) != 0); } public StarLinkMessage.mEventConfig getEventConfig() { return (this.eventConfig_ == null) ? StarLinkMessage.mEventConfig.getDefaultInstance() : this.eventConfig_; } public StarLinkMessage.mEventConfigOrBuilder getEventConfigOrBuilder() { return (this.eventConfig_ == null) ? StarLinkMessage.mEventConfig.getDefaultInstance() : this.eventConfig_; } public boolean hasInputs() { return ((this.bitField0_ & 0x400) != 0); } public StarLinkMessage.mInputs getInputs() { return (this.inputs_ == null) ? StarLinkMessage.mInputs.getDefaultInstance() : this.inputs_; } public StarLinkMessage.mInputsOrBuilder getInputsOrBuilder() { return (this.inputs_ == null) ? StarLinkMessage.mInputs.getDefaultInstance() : this.inputs_; } public boolean hasInputConfig() { return ((this.bitField0_ & 0x800) != 0); } public StarLinkMessage.mInputConfig getInputConfig() { return (this.inputConfig_ == null) ? StarLinkMessage.mInputConfig.getDefaultInstance() : this.inputConfig_; } public StarLinkMessage.mInputConfigOrBuilder getInputConfigOrBuilder() { return (this.inputConfig_ == null) ? StarLinkMessage.mInputConfig.getDefaultInstance() : this.inputConfig_; } public boolean hasSpeedLimit() { return ((this.bitField0_ & 0x1000) != 0); } public StarLinkMessage.mSpeedLimit getSpeedLimit() { return (this.speedLimit_ == null) ? StarLinkMessage.mSpeedLimit.getDefaultInstance() : this.speedLimit_; } public StarLinkMessage.mSpeedLimitOrBuilder getSpeedLimitOrBuilder() { return (this.speedLimit_ == null) ? StarLinkMessage.mSpeedLimit.getDefaultInstance() : this.speedLimit_; } public boolean hasUnitIDChanged() { return ((this.bitField0_ & 0x2000) != 0); } public StarLinkMessage.mUnitIDChanged getUnitIDChanged() { return (this.unitIDChanged_ == null) ? StarLinkMessage.mUnitIDChanged.getDefaultInstance() : this.unitIDChanged_; } public StarLinkMessage.mUnitIDChangedOrBuilder getUnitIDChangedOrBuilder() { return (this.unitIDChanged_ == null) ? StarLinkMessage.mUnitIDChanged.getDefaultInstance() : this.unitIDChanged_; } public boolean hasGenericDeviceMsg() { return ((this.bitField0_ & 0x4000) != 0); } public StarLinkMessage.mGenDeviceMsg getGenericDeviceMsg() { return (this.genericDeviceMsg_ == null) ? StarLinkMessage.mGenDeviceMsg.getDefaultInstance() : this.genericDeviceMsg_; } public StarLinkMessage.mGenDeviceMsgOrBuilder getGenericDeviceMsgOrBuilder() { return (this.genericDeviceMsg_ == null) ? StarLinkMessage.mGenDeviceMsg.getDefaultInstance() : this.genericDeviceMsg_; } public boolean hasGenericDeviceFW() { return ((this.bitField0_ & 0x8000) != 0); } public StarLinkMessage.mGenDeviceFW getGenericDeviceFW() { return (this.genericDeviceFW_ == null) ? StarLinkMessage.mGenDeviceFW.getDefaultInstance() : this.genericDeviceFW_; } public StarLinkMessage.mGenDeviceFWOrBuilder getGenericDeviceFWOrBuilder() { return (this.genericDeviceFW_ == null) ? StarLinkMessage.mGenDeviceFW.getDefaultInstance() : this.genericDeviceFW_; } public boolean hasReadIButton() { return ((this.bitField0_ & 0x10000) != 0); } public StarLinkMessage.mReadIButton getReadIButton() { return (this.readIButton_ == null) ? StarLinkMessage.mReadIButton.getDefaultInstance() : this.readIButton_; } public StarLinkMessage.mReadIButtonOrBuilder getReadIButtonOrBuilder() { return (this.readIButton_ == null) ? StarLinkMessage.mReadIButton.getDefaultInstance() : this.readIButton_; } public boolean hasGetPattern() { return ((this.bitField0_ & 0x20000) != 0); } public StarLinkMessage.mGetPattern getGetPattern() { return (this.getPattern_ == null) ? StarLinkMessage.mGetPattern.getDefaultInstance() : this.getPattern_; } public StarLinkMessage.mGetPatternOrBuilder getGetPatternOrBuilder() { return (this.getPattern_ == null) ? StarLinkMessage.mGetPattern.getDefaultInstance() : this.getPattern_; } public boolean hasMultiParameter() { return ((this.bitField0_ & 0x40000) != 0); } public StarLinkMessage.mMultiParam getMultiParameter() { return (this.multiParameter_ == null) ? StarLinkMessage.mMultiParam.getDefaultInstance() : this.multiParameter_; } public StarLinkMessage.mMultiParamOrBuilder getMultiParameterOrBuilder() { return (this.multiParameter_ == null) ? StarLinkMessage.mMultiParam.getDefaultInstance() : this.multiParameter_; } public boolean hasTempConfig() { return ((this.bitField0_ & 0x80000) != 0); } public StarLinkMessage.mTempConfig getTempConfig() { return (this.tempConfig_ == null) ? StarLinkMessage.mTempConfig.getDefaultInstance() : this.tempConfig_; } public StarLinkMessage.mTempConfigOrBuilder getTempConfigOrBuilder() { return (this.tempConfig_ == null) ? StarLinkMessage.mTempConfig.getDefaultInstance() : this.tempConfig_; } public boolean hasDeviceList() { return ((this.bitField0_ & 0x100000) != 0); } public StarLinkMessage.mDeviceList getDeviceList() { return (this.deviceList_ == null) ? StarLinkMessage.mDeviceList.getDefaultInstance() : this.deviceList_; } public StarLinkMessage.mDeviceListOrBuilder getDeviceListOrBuilder() { return (this.deviceList_ == null) ? StarLinkMessage.mDeviceList.getDefaultInstance() : this.deviceList_; } public boolean hasTeachRemote() { return ((this.bitField0_ & 0x200000) != 0); } public StarLinkMessage.mTeachRemote getTeachRemote() { return (this.teachRemote_ == null) ? StarLinkMessage.mTeachRemote.getDefaultInstance() : this.teachRemote_; } public StarLinkMessage.mTeachRemoteOrBuilder getTeachRemoteOrBuilder() { return (this.teachRemote_ == null) ? StarLinkMessage.mTeachRemote.getDefaultInstance() : this.teachRemote_; } public boolean hasAuthenticate() { return ((this.bitField0_ & 0x400000) != 0); } public StarLinkMessage.mAuthenticate getAuthenticate() { return (this.authenticate_ == null) ? StarLinkMessage.mAuthenticate.getDefaultInstance() : this.authenticate_; } public StarLinkMessage.mAuthenticateOrBuilder getAuthenticateOrBuilder() { return (this.authenticate_ == null) ? StarLinkMessage.mAuthenticate.getDefaultInstance() : this.authenticate_; } public boolean hasCurrentLocation() { return ((this.bitField0_ & 0x800000) != 0); } public StarLinkMessage.mEventReport getCurrentLocation() { return (this.currentLocation_ == null) ? StarLinkMessage.mEventReport.getDefaultInstance() : this.currentLocation_; } public StarLinkMessage.mEventReportOrBuilder getCurrentLocationOrBuilder() { return (this.currentLocation_ == null) ? StarLinkMessage.mEventReport.getDefaultInstance() : this.currentLocation_; } public boolean hasConfigServer() { return ((this.bitField0_ & 0x1000000) != 0); }
/*       */     public StarLinkMessage.mConfigServer getConfigServer() { return (this.configServer_ == null) ? StarLinkMessage.mConfigServer.getDefaultInstance() : this.configServer_; }
/*       */     public StarLinkMessage.mConfigServerOrBuilder getConfigServerOrBuilder() { return (this.configServer_ == null) ? StarLinkMessage.mConfigServer.getDefaultInstance() : this.configServer_; }
/*  2838 */     public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized;
/*  2839 */       if (isInitialized == 1) return true; 
/*  2840 */       if (isInitialized == 0) return false;
/*       */       
/*  2842 */       if (hasWakeUp() && 
/*  2843 */         !getWakeUp().isInitialized()) {
/*  2844 */         this.memoizedIsInitialized = 0;
/*  2845 */         return false;
/*       */       } 
/*       */       
/*  2848 */       if (hasConfirmation() && 
/*  2849 */         !getConfirmation().isInitialized()) {
/*  2850 */         this.memoizedIsInitialized = 0;
/*  2851 */         return false;
/*       */       } 
/*       */       
/*  2854 */       if (hasParamResponse() && 
/*  2855 */         !getParamResponse().isInitialized()) {
/*  2856 */         this.memoizedIsInitialized = 0;
/*  2857 */         return false;
/*       */       } 
/*       */       
/*  2860 */       if (hasEventReport() && 
/*  2861 */         !getEventReport().isInitialized()) {
/*  2862 */         this.memoizedIsInitialized = 0;
/*  2863 */         return false;
/*       */       } 
/*       */       
/*  2866 */       if (hasGeoZone() && 
/*  2867 */         !getGeoZone().isInitialized()) {
/*  2868 */         this.memoizedIsInitialized = 0;
/*  2869 */         return false;
/*       */       } 
/*       */       
/*  2872 */       if (hasOutputs() && 
/*  2873 */         !getOutputs().isInitialized()) {
/*  2874 */         this.memoizedIsInitialized = 0;
/*  2875 */         return false;
/*       */       } 
/*       */       
/*  2878 */       if (hasEventConfig() && 
/*  2879 */         !getEventConfig().isInitialized()) {
/*  2880 */         this.memoizedIsInitialized = 0;
/*  2881 */         return false;
/*       */       } 
/*       */       
/*  2884 */       if (hasInputs() && 
/*  2885 */         !getInputs().isInitialized()) {
/*  2886 */         this.memoizedIsInitialized = 0;
/*  2887 */         return false;
/*       */       } 
/*       */       
/*  2890 */       if (hasInputConfig() && 
/*  2891 */         !getInputConfig().isInitialized()) {
/*  2892 */         this.memoizedIsInitialized = 0;
/*  2893 */         return false;
/*       */       } 
/*       */       
/*  2896 */       if (hasSpeedLimit() && 
/*  2897 */         !getSpeedLimit().isInitialized()) {
/*  2898 */         this.memoizedIsInitialized = 0;
/*  2899 */         return false;
/*       */       } 
/*       */       
/*  2902 */       if (hasUnitIDChanged() && 
/*  2903 */         !getUnitIDChanged().isInitialized()) {
/*  2904 */         this.memoizedIsInitialized = 0;
/*  2905 */         return false;
/*       */       } 
/*       */       
/*  2908 */       if (hasGenericDeviceMsg() && 
/*  2909 */         !getGenericDeviceMsg().isInitialized()) {
/*  2910 */         this.memoizedIsInitialized = 0;
/*  2911 */         return false;
/*       */       } 
/*       */       
/*  2914 */       if (hasReadIButton() && 
/*  2915 */         !getReadIButton().isInitialized()) {
/*  2916 */         this.memoizedIsInitialized = 0;
/*  2917 */         return false;
/*       */       } 
/*       */       
/*  2920 */       if (hasGetPattern() && 
/*  2921 */         !getGetPattern().isInitialized()) {
/*  2922 */         this.memoizedIsInitialized = 0;
/*  2923 */         return false;
/*       */       } 
/*       */       
/*  2926 */       if (hasTempConfig() && 
/*  2927 */         !getTempConfig().isInitialized()) {
/*  2928 */         this.memoizedIsInitialized = 0;
/*  2929 */         return false;
/*       */       } 
/*       */       
/*  2932 */       if (hasTeachRemote() && 
/*  2933 */         !getTeachRemote().isInitialized()) {
/*  2934 */         this.memoizedIsInitialized = 0;
/*  2935 */         return false;
/*       */       } 
/*       */       
/*  2938 */       if (hasAuthenticate() && 
/*  2939 */         !getAuthenticate().isInitialized()) {
/*  2940 */         this.memoizedIsInitialized = 0;
/*  2941 */         return false;
/*       */       } 
/*       */       
/*  2944 */       if (hasCurrentLocation() && 
/*  2945 */         !getCurrentLocation().isInitialized()) {
/*  2946 */         this.memoizedIsInitialized = 0;
/*  2947 */         return false;
/*       */       } 
/*       */       
/*  2950 */       if (hasConfigServer() && 
/*  2951 */         !getConfigServer().isInitialized()) {
/*  2952 */         this.memoizedIsInitialized = 0;
/*  2953 */         return false;
/*       */       } 
/*       */       
/*  2956 */       this.memoizedIsInitialized = 1;
/*  2957 */       return true; }
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/*  2963 */       if ((this.bitField0_ & 0x8) != 0) {
/*  2964 */         output.writeMessage(1, (MessageLite)getWakeUp());
/*       */       }
/*  2966 */       if ((this.bitField0_ & 0x10) != 0) {
/*  2967 */         output.writeMessage(2, (MessageLite)getConfirmation());
/*       */       }
/*  2969 */       if ((this.bitField0_ & 0x20) != 0) {
/*  2970 */         output.writeMessage(3, (MessageLite)getParamResponse());
/*       */       }
/*  2972 */       if ((this.bitField0_ & 0x40) != 0) {
/*  2973 */         output.writeMessage(6, (MessageLite)getEventReport());
/*       */       }
/*  2975 */       if ((this.bitField0_ & 0x80) != 0) {
/*  2976 */         output.writeMessage(10, (MessageLite)getGeoZone());
/*       */       }
/*  2978 */       if ((this.bitField0_ & 0x100) != 0) {
/*  2979 */         output.writeMessage(12, (MessageLite)getOutputs());
/*       */       }
/*  2981 */       if ((this.bitField0_ & 0x200) != 0) {
/*  2982 */         output.writeMessage(14, (MessageLite)getEventConfig());
/*       */       }
/*  2984 */       if ((this.bitField0_ & 0x400) != 0) {
/*  2985 */         output.writeMessage(16, (MessageLite)getInputs());
/*       */       }
/*  2987 */       if ((this.bitField0_ & 0x800) != 0) {
/*  2988 */         output.writeMessage(17, (MessageLite)getInputConfig());
/*       */       }
/*  2990 */       if ((this.bitField0_ & 0x1000) != 0) {
/*  2991 */         output.writeMessage(27, (MessageLite)getSpeedLimit());
/*       */       }
/*  2993 */       if ((this.bitField0_ & 0x2000) != 0) {
/*  2994 */         output.writeMessage(29, (MessageLite)getUnitIDChanged());
/*       */       }
/*  2996 */       if ((this.bitField0_ & 0x4000) != 0) {
/*  2997 */         output.writeMessage(30, (MessageLite)getGenericDeviceMsg());
/*       */       }
/*  2999 */       if ((this.bitField0_ & 0x8000) != 0) {
/*  3000 */         output.writeMessage(35, (MessageLite)getGenericDeviceFW());
/*       */       }
/*  3002 */       if ((this.bitField0_ & 0x10000) != 0) {
/*  3003 */         output.writeMessage(42, (MessageLite)getReadIButton());
/*       */       }
/*  3005 */       if ((this.bitField0_ & 0x20000) != 0) {
/*  3006 */         output.writeMessage(43, (MessageLite)getGetPattern());
/*       */       }
/*  3008 */       if ((this.bitField0_ & 0x40000) != 0) {
/*  3009 */         output.writeMessage(45, (MessageLite)getMultiParameter());
/*       */       }
/*  3011 */       if ((this.bitField0_ & 0x80000) != 0) {
/*  3012 */         output.writeMessage(52, (MessageLite)getTempConfig());
/*       */       }
/*  3014 */       if ((this.bitField0_ & 0x100000) != 0) {
/*  3015 */         output.writeMessage(56, (MessageLite)getDeviceList());
/*       */       }
/*  3017 */       if ((this.bitField0_ & 0x200000) != 0) {
/*  3018 */         output.writeMessage(58, (MessageLite)getTeachRemote());
/*       */       }
/*  3020 */       if ((this.bitField0_ & 0x400000) != 0) {
/*  3021 */         output.writeMessage(95, (MessageLite)getAuthenticate());
/*       */       }
/*  3023 */       if ((this.bitField0_ & 0x800000) != 0) {
/*  3024 */         output.writeMessage(96, (MessageLite)getCurrentLocation());
/*       */       }
/*  3026 */       if ((this.bitField0_ & 0x1000000) != 0) {
/*  3027 */         output.writeMessage(98, (MessageLite)getConfigServer());
/*       */       }
/*  3029 */       if ((this.bitField0_ & 0x1) != 0) {
/*  3030 */         output.writeUInt64(100, this.referenceNumber_);
/*       */       }
/*  3032 */       if ((this.bitField0_ & 0x2) != 0) {
/*  3033 */         output.writeUInt32(101, this.referenceNumberDiff_);
/*       */       }
/*  3035 */       if ((this.bitField0_ & 0x4) != 0) {
/*  3036 */         output.writeUInt32(102, this.messageType_);
/*       */       }
/*  3038 */       this.unknownFields.writeTo(output);
/*       */     }
/*       */ 
/*       */     
/*       */     public int getSerializedSize() {
/*  3043 */       int size = this.memoizedSize;
/*  3044 */       if (size != -1) return size;
/*       */       
/*  3046 */       size = 0;
/*  3047 */       if ((this.bitField0_ & 0x8) != 0) {
/*  3048 */         size += 
/*  3049 */           CodedOutputStream.computeMessageSize(1, (MessageLite)getWakeUp());
/*       */       }
/*  3051 */       if ((this.bitField0_ & 0x10) != 0) {
/*  3052 */         size += 
/*  3053 */           CodedOutputStream.computeMessageSize(2, (MessageLite)getConfirmation());
/*       */       }
/*  3055 */       if ((this.bitField0_ & 0x20) != 0) {
/*  3056 */         size += 
/*  3057 */           CodedOutputStream.computeMessageSize(3, (MessageLite)getParamResponse());
/*       */       }
/*  3059 */       if ((this.bitField0_ & 0x40) != 0) {
/*  3060 */         size += 
/*  3061 */           CodedOutputStream.computeMessageSize(6, (MessageLite)getEventReport());
/*       */       }
/*  3063 */       if ((this.bitField0_ & 0x80) != 0) {
/*  3064 */         size += 
/*  3065 */           CodedOutputStream.computeMessageSize(10, (MessageLite)getGeoZone());
/*       */       }
/*  3067 */       if ((this.bitField0_ & 0x100) != 0) {
/*  3068 */         size += 
/*  3069 */           CodedOutputStream.computeMessageSize(12, (MessageLite)getOutputs());
/*       */       }
/*  3071 */       if ((this.bitField0_ & 0x200) != 0) {
/*  3072 */         size += 
/*  3073 */           CodedOutputStream.computeMessageSize(14, (MessageLite)getEventConfig());
/*       */       }
/*  3075 */       if ((this.bitField0_ & 0x400) != 0) {
/*  3076 */         size += 
/*  3077 */           CodedOutputStream.computeMessageSize(16, (MessageLite)getInputs());
/*       */       }
/*  3079 */       if ((this.bitField0_ & 0x800) != 0) {
/*  3080 */         size += 
/*  3081 */           CodedOutputStream.computeMessageSize(17, (MessageLite)getInputConfig());
/*       */       }
/*  3083 */       if ((this.bitField0_ & 0x1000) != 0) {
/*  3084 */         size += 
/*  3085 */           CodedOutputStream.computeMessageSize(27, (MessageLite)getSpeedLimit());
/*       */       }
/*  3087 */       if ((this.bitField0_ & 0x2000) != 0) {
/*  3088 */         size += 
/*  3089 */           CodedOutputStream.computeMessageSize(29, (MessageLite)getUnitIDChanged());
/*       */       }
/*  3091 */       if ((this.bitField0_ & 0x4000) != 0) {
/*  3092 */         size += 
/*  3093 */           CodedOutputStream.computeMessageSize(30, (MessageLite)getGenericDeviceMsg());
/*       */       }
/*  3095 */       if ((this.bitField0_ & 0x8000) != 0) {
/*  3096 */         size += 
/*  3097 */           CodedOutputStream.computeMessageSize(35, (MessageLite)getGenericDeviceFW());
/*       */       }
/*  3099 */       if ((this.bitField0_ & 0x10000) != 0) {
/*  3100 */         size += 
/*  3101 */           CodedOutputStream.computeMessageSize(42, (MessageLite)getReadIButton());
/*       */       }
/*  3103 */       if ((this.bitField0_ & 0x20000) != 0) {
/*  3104 */         size += 
/*  3105 */           CodedOutputStream.computeMessageSize(43, (MessageLite)getGetPattern());
/*       */       }
/*  3107 */       if ((this.bitField0_ & 0x40000) != 0) {
/*  3108 */         size += 
/*  3109 */           CodedOutputStream.computeMessageSize(45, (MessageLite)getMultiParameter());
/*       */       }
/*  3111 */       if ((this.bitField0_ & 0x80000) != 0) {
/*  3112 */         size += 
/*  3113 */           CodedOutputStream.computeMessageSize(52, (MessageLite)getTempConfig());
/*       */       }
/*  3115 */       if ((this.bitField0_ & 0x100000) != 0) {
/*  3116 */         size += 
/*  3117 */           CodedOutputStream.computeMessageSize(56, (MessageLite)getDeviceList());
/*       */       }
/*  3119 */       if ((this.bitField0_ & 0x200000) != 0) {
/*  3120 */         size += 
/*  3121 */           CodedOutputStream.computeMessageSize(58, (MessageLite)getTeachRemote());
/*       */       }
/*  3123 */       if ((this.bitField0_ & 0x400000) != 0) {
/*  3124 */         size += 
/*  3125 */           CodedOutputStream.computeMessageSize(95, (MessageLite)getAuthenticate());
/*       */       }
/*  3127 */       if ((this.bitField0_ & 0x800000) != 0) {
/*  3128 */         size += 
/*  3129 */           CodedOutputStream.computeMessageSize(96, (MessageLite)getCurrentLocation());
/*       */       }
/*  3131 */       if ((this.bitField0_ & 0x1000000) != 0) {
/*  3132 */         size += 
/*  3133 */           CodedOutputStream.computeMessageSize(98, (MessageLite)getConfigServer());
/*       */       }
/*  3135 */       if ((this.bitField0_ & 0x1) != 0) {
/*  3136 */         size += 
/*  3137 */           CodedOutputStream.computeUInt64Size(100, this.referenceNumber_);
/*       */       }
/*  3139 */       if ((this.bitField0_ & 0x2) != 0) {
/*  3140 */         size += 
/*  3141 */           CodedOutputStream.computeUInt32Size(101, this.referenceNumberDiff_);
/*       */       }
/*  3143 */       if ((this.bitField0_ & 0x4) != 0) {
/*  3144 */         size += 
/*  3145 */           CodedOutputStream.computeUInt32Size(102, this.messageType_);
/*       */       }
/*  3147 */       size += this.unknownFields.getSerializedSize();
/*  3148 */       this.memoizedSize = size;
/*  3149 */       return size;
/*       */     }
/*       */ 
/*       */     
/*       */     public boolean equals(Object obj) {
/*  3154 */       if (obj == this) {
/*  3155 */         return true;
/*       */       }
/*  3157 */       if (!(obj instanceof mMessage)) {
/*  3158 */         return super.equals(obj);
/*       */       }
/*  3160 */       mMessage other = (mMessage)obj;
/*       */       
/*  3162 */       if (hasReferenceNumber() != other.hasReferenceNumber()) return false; 
/*  3163 */       if (hasReferenceNumber() && 
/*  3164 */         getReferenceNumber() != other
/*  3165 */         .getReferenceNumber()) return false;
/*       */       
/*  3167 */       if (hasReferenceNumberDiff() != other.hasReferenceNumberDiff()) return false; 
/*  3168 */       if (hasReferenceNumberDiff() && 
/*  3169 */         getReferenceNumberDiff() != other
/*  3170 */         .getReferenceNumberDiff()) return false;
/*       */       
/*  3172 */       if (hasMessageType() != other.hasMessageType()) return false; 
/*  3173 */       if (hasMessageType() && 
/*  3174 */         getMessageType() != other
/*  3175 */         .getMessageType()) return false;
/*       */       
/*  3177 */       if (hasWakeUp() != other.hasWakeUp()) return false; 
/*  3178 */       if (hasWakeUp() && 
/*       */         
/*  3180 */         !getWakeUp().equals(other.getWakeUp())) return false;
/*       */       
/*  3182 */       if (hasConfirmation() != other.hasConfirmation()) return false; 
/*  3183 */       if (hasConfirmation() && 
/*       */         
/*  3185 */         !getConfirmation().equals(other.getConfirmation())) return false;
/*       */       
/*  3187 */       if (hasParamResponse() != other.hasParamResponse()) return false; 
/*  3188 */       if (hasParamResponse() && 
/*       */         
/*  3190 */         !getParamResponse().equals(other.getParamResponse())) return false;
/*       */       
/*  3192 */       if (hasEventReport() != other.hasEventReport()) return false; 
/*  3193 */       if (hasEventReport() && 
/*       */         
/*  3195 */         !getEventReport().equals(other.getEventReport())) return false;
/*       */       
/*  3197 */       if (hasGeoZone() != other.hasGeoZone()) return false; 
/*  3198 */       if (hasGeoZone() && 
/*       */         
/*  3200 */         !getGeoZone().equals(other.getGeoZone())) return false;
/*       */       
/*  3202 */       if (hasOutputs() != other.hasOutputs()) return false; 
/*  3203 */       if (hasOutputs() && 
/*       */         
/*  3205 */         !getOutputs().equals(other.getOutputs())) return false;
/*       */       
/*  3207 */       if (hasEventConfig() != other.hasEventConfig()) return false; 
/*  3208 */       if (hasEventConfig() && 
/*       */         
/*  3210 */         !getEventConfig().equals(other.getEventConfig())) return false;
/*       */       
/*  3212 */       if (hasInputs() != other.hasInputs()) return false; 
/*  3213 */       if (hasInputs() && 
/*       */         
/*  3215 */         !getInputs().equals(other.getInputs())) return false;
/*       */       
/*  3217 */       if (hasInputConfig() != other.hasInputConfig()) return false; 
/*  3218 */       if (hasInputConfig() && 
/*       */         
/*  3220 */         !getInputConfig().equals(other.getInputConfig())) return false;
/*       */       
/*  3222 */       if (hasSpeedLimit() != other.hasSpeedLimit()) return false; 
/*  3223 */       if (hasSpeedLimit() && 
/*       */         
/*  3225 */         !getSpeedLimit().equals(other.getSpeedLimit())) return false;
/*       */       
/*  3227 */       if (hasUnitIDChanged() != other.hasUnitIDChanged()) return false; 
/*  3228 */       if (hasUnitIDChanged() && 
/*       */         
/*  3230 */         !getUnitIDChanged().equals(other.getUnitIDChanged())) return false;
/*       */       
/*  3232 */       if (hasGenericDeviceMsg() != other.hasGenericDeviceMsg()) return false; 
/*  3233 */       if (hasGenericDeviceMsg() && 
/*       */         
/*  3235 */         !getGenericDeviceMsg().equals(other.getGenericDeviceMsg())) return false;
/*       */       
/*  3237 */       if (hasGenericDeviceFW() != other.hasGenericDeviceFW()) return false; 
/*  3238 */       if (hasGenericDeviceFW() && 
/*       */         
/*  3240 */         !getGenericDeviceFW().equals(other.getGenericDeviceFW())) return false;
/*       */       
/*  3242 */       if (hasReadIButton() != other.hasReadIButton()) return false; 
/*  3243 */       if (hasReadIButton() && 
/*       */         
/*  3245 */         !getReadIButton().equals(other.getReadIButton())) return false;
/*       */       
/*  3247 */       if (hasGetPattern() != other.hasGetPattern()) return false; 
/*  3248 */       if (hasGetPattern() && 
/*       */         
/*  3250 */         !getGetPattern().equals(other.getGetPattern())) return false;
/*       */       
/*  3252 */       if (hasMultiParameter() != other.hasMultiParameter()) return false; 
/*  3253 */       if (hasMultiParameter() && 
/*       */         
/*  3255 */         !getMultiParameter().equals(other.getMultiParameter())) return false;
/*       */       
/*  3257 */       if (hasTempConfig() != other.hasTempConfig()) return false; 
/*  3258 */       if (hasTempConfig() && 
/*       */         
/*  3260 */         !getTempConfig().equals(other.getTempConfig())) return false;
/*       */       
/*  3262 */       if (hasDeviceList() != other.hasDeviceList()) return false; 
/*  3263 */       if (hasDeviceList() && 
/*       */         
/*  3265 */         !getDeviceList().equals(other.getDeviceList())) return false;
/*       */       
/*  3267 */       if (hasTeachRemote() != other.hasTeachRemote()) return false; 
/*  3268 */       if (hasTeachRemote() && 
/*       */         
/*  3270 */         !getTeachRemote().equals(other.getTeachRemote())) return false;
/*       */       
/*  3272 */       if (hasAuthenticate() != other.hasAuthenticate()) return false; 
/*  3273 */       if (hasAuthenticate() && 
/*       */         
/*  3275 */         !getAuthenticate().equals(other.getAuthenticate())) return false;
/*       */       
/*  3277 */       if (hasCurrentLocation() != other.hasCurrentLocation()) return false; 
/*  3278 */       if (hasCurrentLocation() && 
/*       */         
/*  3280 */         !getCurrentLocation().equals(other.getCurrentLocation())) return false;
/*       */       
/*  3282 */       if (hasConfigServer() != other.hasConfigServer()) return false; 
/*  3283 */       if (hasConfigServer() && 
/*       */         
/*  3285 */         !getConfigServer().equals(other.getConfigServer())) return false;
/*       */       
/*  3287 */       if (!this.unknownFields.equals(other.unknownFields)) return false; 
/*  3288 */       return true;
/*       */     }
/*       */ 
/*       */     
/*       */     public int hashCode() {
/*  3293 */       if (this.memoizedHashCode != 0) {
/*  3294 */         return this.memoizedHashCode;
/*       */       }
/*  3296 */       int hash = 41;
/*  3297 */       hash = 19 * hash + getDescriptor().hashCode();
/*  3298 */       if (hasReferenceNumber()) {
/*  3299 */         hash = 37 * hash + 100;
/*  3300 */         hash = 53 * hash + Internal.hashLong(
/*  3301 */             getReferenceNumber());
/*       */       } 
/*  3303 */       if (hasReferenceNumberDiff()) {
/*  3304 */         hash = 37 * hash + 101;
/*  3305 */         hash = 53 * hash + getReferenceNumberDiff();
/*       */       } 
/*  3307 */       if (hasMessageType()) {
/*  3308 */         hash = 37 * hash + 102;
/*  3309 */         hash = 53 * hash + getMessageType();
/*       */       } 
/*  3311 */       if (hasWakeUp()) {
/*  3312 */         hash = 37 * hash + 1;
/*  3313 */         hash = 53 * hash + getWakeUp().hashCode();
/*       */       } 
/*  3315 */       if (hasConfirmation()) {
/*  3316 */         hash = 37 * hash + 2;
/*  3317 */         hash = 53 * hash + getConfirmation().hashCode();
/*       */       } 
/*  3319 */       if (hasParamResponse()) {
/*  3320 */         hash = 37 * hash + 3;
/*  3321 */         hash = 53 * hash + getParamResponse().hashCode();
/*       */       } 
/*  3323 */       if (hasEventReport()) {
/*  3324 */         hash = 37 * hash + 6;
/*  3325 */         hash = 53 * hash + getEventReport().hashCode();
/*       */       } 
/*  3327 */       if (hasGeoZone()) {
/*  3328 */         hash = 37 * hash + 10;
/*  3329 */         hash = 53 * hash + getGeoZone().hashCode();
/*       */       } 
/*  3331 */       if (hasOutputs()) {
/*  3332 */         hash = 37 * hash + 12;
/*  3333 */         hash = 53 * hash + getOutputs().hashCode();
/*       */       } 
/*  3335 */       if (hasEventConfig()) {
/*  3336 */         hash = 37 * hash + 14;
/*  3337 */         hash = 53 * hash + getEventConfig().hashCode();
/*       */       } 
/*  3339 */       if (hasInputs()) {
/*  3340 */         hash = 37 * hash + 16;
/*  3341 */         hash = 53 * hash + getInputs().hashCode();
/*       */       } 
/*  3343 */       if (hasInputConfig()) {
/*  3344 */         hash = 37 * hash + 17;
/*  3345 */         hash = 53 * hash + getInputConfig().hashCode();
/*       */       } 
/*  3347 */       if (hasSpeedLimit()) {
/*  3348 */         hash = 37 * hash + 27;
/*  3349 */         hash = 53 * hash + getSpeedLimit().hashCode();
/*       */       } 
/*  3351 */       if (hasUnitIDChanged()) {
/*  3352 */         hash = 37 * hash + 29;
/*  3353 */         hash = 53 * hash + getUnitIDChanged().hashCode();
/*       */       } 
/*  3355 */       if (hasGenericDeviceMsg()) {
/*  3356 */         hash = 37 * hash + 30;
/*  3357 */         hash = 53 * hash + getGenericDeviceMsg().hashCode();
/*       */       } 
/*  3359 */       if (hasGenericDeviceFW()) {
/*  3360 */         hash = 37 * hash + 35;
/*  3361 */         hash = 53 * hash + getGenericDeviceFW().hashCode();
/*       */       } 
/*  3363 */       if (hasReadIButton()) {
/*  3364 */         hash = 37 * hash + 42;
/*  3365 */         hash = 53 * hash + getReadIButton().hashCode();
/*       */       } 
/*  3367 */       if (hasGetPattern()) {
/*  3368 */         hash = 37 * hash + 43;
/*  3369 */         hash = 53 * hash + getGetPattern().hashCode();
/*       */       } 
/*  3371 */       if (hasMultiParameter()) {
/*  3372 */         hash = 37 * hash + 45;
/*  3373 */         hash = 53 * hash + getMultiParameter().hashCode();
/*       */       } 
/*  3375 */       if (hasTempConfig()) {
/*  3376 */         hash = 37 * hash + 52;
/*  3377 */         hash = 53 * hash + getTempConfig().hashCode();
/*       */       } 
/*  3379 */       if (hasDeviceList()) {
/*  3380 */         hash = 37 * hash + 56;
/*  3381 */         hash = 53 * hash + getDeviceList().hashCode();
/*       */       } 
/*  3383 */       if (hasTeachRemote()) {
/*  3384 */         hash = 37 * hash + 58;
/*  3385 */         hash = 53 * hash + getTeachRemote().hashCode();
/*       */       } 
/*  3387 */       if (hasAuthenticate()) {
/*  3388 */         hash = 37 * hash + 95;
/*  3389 */         hash = 53 * hash + getAuthenticate().hashCode();
/*       */       } 
/*  3391 */       if (hasCurrentLocation()) {
/*  3392 */         hash = 37 * hash + 96;
/*  3393 */         hash = 53 * hash + getCurrentLocation().hashCode();
/*       */       } 
/*  3395 */       if (hasConfigServer()) {
/*  3396 */         hash = 37 * hash + 98;
/*  3397 */         hash = 53 * hash + getConfigServer().hashCode();
/*       */       } 
/*  3399 */       hash = 29 * hash + this.unknownFields.hashCode();
/*  3400 */       this.memoizedHashCode = hash;
/*  3401 */       return hash;
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mMessage parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
/*  3407 */       return (mMessage)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mMessage parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*  3413 */       return (mMessage)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static mMessage parseFrom(ByteString data) throws InvalidProtocolBufferException {
/*  3418 */       return (mMessage)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mMessage parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*  3424 */       return (mMessage)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static mMessage parseFrom(byte[] data) throws InvalidProtocolBufferException {
/*  3428 */       return (mMessage)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mMessage parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*  3434 */       return (mMessage)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static mMessage parseFrom(InputStream input) throws IOException {
/*  3438 */       return 
/*  3439 */         (mMessage)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mMessage parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*  3445 */       return 
/*  3446 */         (mMessage)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static mMessage parseDelimitedFrom(InputStream input) throws IOException {
/*  3450 */       return 
/*  3451 */         (mMessage)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mMessage parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*  3457 */       return 
/*  3458 */         (mMessage)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static mMessage parseFrom(CodedInputStream input) throws IOException {
/*  3463 */       return 
/*  3464 */         (mMessage)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mMessage parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*  3470 */       return 
/*  3471 */         (mMessage)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public Builder newBuilderForType() {
/*  3475 */       return newBuilder();
/*       */     } public static Builder newBuilder() {
/*  3477 */       return DEFAULT_INSTANCE.toBuilder();
/*       */     }
/*       */     public static Builder newBuilder(mMessage prototype) {
/*  3480 */       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
/*       */     }
/*       */     
/*       */     public Builder toBuilder() {
/*  3484 */       return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder())
/*  3485 */         .mergeFrom(this);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
/*  3491 */       Builder builder = new Builder(parent);
/*  3492 */       return builder;
/*       */     }
/*       */     public static final class Builder extends GeneratedMessageV3.Builder<Builder> implements StarLinkMessage.mMessageOrBuilder { private int bitField0_; private long referenceNumber_; private int referenceNumberDiff_; private int messageType_; private StarLinkMessage.mWakeUp wakeUp_; private SingleFieldBuilderV3<StarLinkMessage.mWakeUp, StarLinkMessage.mWakeUp.Builder, StarLinkMessage.mWakeUpOrBuilder> wakeUpBuilder_; private StarLinkMessage.mConfirmation confirmation_; private SingleFieldBuilderV3<StarLinkMessage.mConfirmation, StarLinkMessage.mConfirmation.Builder, StarLinkMessage.mConfirmationOrBuilder> confirmationBuilder_; private StarLinkMessage.mParamResponse paramResponse_; private SingleFieldBuilderV3<StarLinkMessage.mParamResponse, StarLinkMessage.mParamResponse.Builder, StarLinkMessage.mParamResponseOrBuilder> paramResponseBuilder_; private StarLinkMessage.mEventReport eventReport_; private SingleFieldBuilderV3<StarLinkMessage.mEventReport, StarLinkMessage.mEventReport.Builder, StarLinkMessage.mEventReportOrBuilder> eventReportBuilder_; private StarLinkMessage.mGeoZone geoZone_; private SingleFieldBuilderV3<StarLinkMessage.mGeoZone, StarLinkMessage.mGeoZone.Builder, StarLinkMessage.mGeoZoneOrBuilder> geoZoneBuilder_; private StarLinkMessage.mOutputs outputs_; private SingleFieldBuilderV3<StarLinkMessage.mOutputs, StarLinkMessage.mOutputs.Builder, StarLinkMessage.mOutputsOrBuilder> outputsBuilder_; private StarLinkMessage.mEventConfig eventConfig_; private SingleFieldBuilderV3<StarLinkMessage.mEventConfig, StarLinkMessage.mEventConfig.Builder, StarLinkMessage.mEventConfigOrBuilder> eventConfigBuilder_; private StarLinkMessage.mInputs inputs_; private SingleFieldBuilderV3<StarLinkMessage.mInputs, StarLinkMessage.mInputs.Builder, StarLinkMessage.mInputsOrBuilder> inputsBuilder_; private StarLinkMessage.mInputConfig inputConfig_; private SingleFieldBuilderV3<StarLinkMessage.mInputConfig, StarLinkMessage.mInputConfig.Builder, StarLinkMessage.mInputConfigOrBuilder> inputConfigBuilder_; private StarLinkMessage.mSpeedLimit speedLimit_; private SingleFieldBuilderV3<StarLinkMessage.mSpeedLimit, StarLinkMessage.mSpeedLimit.Builder, StarLinkMessage.mSpeedLimitOrBuilder> speedLimitBuilder_; private StarLinkMessage.mUnitIDChanged unitIDChanged_; private SingleFieldBuilderV3<StarLinkMessage.mUnitIDChanged, StarLinkMessage.mUnitIDChanged.Builder, StarLinkMessage.mUnitIDChangedOrBuilder> unitIDChangedBuilder_; private StarLinkMessage.mGenDeviceMsg genericDeviceMsg_; private SingleFieldBuilderV3<StarLinkMessage.mGenDeviceMsg, StarLinkMessage.mGenDeviceMsg.Builder, StarLinkMessage.mGenDeviceMsgOrBuilder> genericDeviceMsgBuilder_; private StarLinkMessage.mGenDeviceFW genericDeviceFW_; private SingleFieldBuilderV3<StarLinkMessage.mGenDeviceFW, StarLinkMessage.mGenDeviceFW.Builder, StarLinkMessage.mGenDeviceFWOrBuilder> genericDeviceFWBuilder_; private StarLinkMessage.mReadIButton readIButton_; private SingleFieldBuilderV3<StarLinkMessage.mReadIButton, StarLinkMessage.mReadIButton.Builder, StarLinkMessage.mReadIButtonOrBuilder> readIButtonBuilder_; private StarLinkMessage.mGetPattern getPattern_; private SingleFieldBuilderV3<StarLinkMessage.mGetPattern, StarLinkMessage.mGetPattern.Builder, StarLinkMessage.mGetPatternOrBuilder> getPatternBuilder_; private StarLinkMessage.mMultiParam multiParameter_; private SingleFieldBuilderV3<StarLinkMessage.mMultiParam, StarLinkMessage.mMultiParam.Builder, StarLinkMessage.mMultiParamOrBuilder> multiParameterBuilder_; private StarLinkMessage.mTempConfig tempConfig_; private SingleFieldBuilderV3<StarLinkMessage.mTempConfig, StarLinkMessage.mTempConfig.Builder, StarLinkMessage.mTempConfigOrBuilder> tempConfigBuilder_;
/*       */       private StarLinkMessage.mDeviceList deviceList_;
/*       */       private SingleFieldBuilderV3<StarLinkMessage.mDeviceList, StarLinkMessage.mDeviceList.Builder, StarLinkMessage.mDeviceListOrBuilder> deviceListBuilder_;
/*       */       private StarLinkMessage.mTeachRemote teachRemote_;
/*       */       private SingleFieldBuilderV3<StarLinkMessage.mTeachRemote, StarLinkMessage.mTeachRemote.Builder, StarLinkMessage.mTeachRemoteOrBuilder> teachRemoteBuilder_;
/*       */       private StarLinkMessage.mAuthenticate authenticate_;
/*       */       private SingleFieldBuilderV3<StarLinkMessage.mAuthenticate, StarLinkMessage.mAuthenticate.Builder, StarLinkMessage.mAuthenticateOrBuilder> authenticateBuilder_;
/*       */       private StarLinkMessage.mEventReport currentLocation_;
/*       */       private SingleFieldBuilderV3<StarLinkMessage.mEventReport, StarLinkMessage.mEventReport.Builder, StarLinkMessage.mEventReportOrBuilder> currentLocationBuilder_;
/*       */       private StarLinkMessage.mConfigServer configServer_;
/*       */       private SingleFieldBuilderV3<StarLinkMessage.mConfigServer, StarLinkMessage.mConfigServer.Builder, StarLinkMessage.mConfigServerOrBuilder> configServerBuilder_;
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/*  3507 */         return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_mMessage_descriptor;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
/*  3513 */         return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_mMessage_fieldAccessorTable
/*  3514 */           .ensureFieldAccessorsInitialized(StarLinkMessage.mMessage.class, Builder.class);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       private Builder() {
/*  3520 */         maybeForceBuilderInitialization();
/*       */       }
/*       */ 
/*       */       
/*       */       private Builder(GeneratedMessageV3.BuilderParent parent) {
/*  3525 */         super(parent);
/*  3526 */         maybeForceBuilderInitialization();
/*       */       }
/*       */       
/*       */       private void maybeForceBuilderInitialization() {
/*  3530 */         if (StarLinkMessage.mMessage.alwaysUseFieldBuilders) {
/*  3531 */           getWakeUpFieldBuilder();
/*  3532 */           getConfirmationFieldBuilder();
/*  3533 */           getParamResponseFieldBuilder();
/*  3534 */           getEventReportFieldBuilder();
/*  3535 */           getGeoZoneFieldBuilder();
/*  3536 */           getOutputsFieldBuilder();
/*  3537 */           getEventConfigFieldBuilder();
/*  3538 */           getInputsFieldBuilder();
/*  3539 */           getInputConfigFieldBuilder();
/*  3540 */           getSpeedLimitFieldBuilder();
/*  3541 */           getUnitIDChangedFieldBuilder();
/*  3542 */           getGenericDeviceMsgFieldBuilder();
/*  3543 */           getGenericDeviceFWFieldBuilder();
/*  3544 */           getReadIButtonFieldBuilder();
/*  3545 */           getGetPatternFieldBuilder();
/*  3546 */           getMultiParameterFieldBuilder();
/*  3547 */           getTempConfigFieldBuilder();
/*  3548 */           getDeviceListFieldBuilder();
/*  3549 */           getTeachRemoteFieldBuilder();
/*  3550 */           getAuthenticateFieldBuilder();
/*  3551 */           getCurrentLocationFieldBuilder();
/*  3552 */           getConfigServerFieldBuilder();
/*       */         } 
/*       */       }
/*       */       
/*       */       public Builder clear() {
/*  3557 */         super.clear();
/*  3558 */         this.referenceNumber_ = 0L;
/*  3559 */         this.bitField0_ &= 0xFFFFFFFE;
/*  3560 */         this.referenceNumberDiff_ = 0;
/*  3561 */         this.bitField0_ &= 0xFFFFFFFD;
/*  3562 */         this.messageType_ = 0;
/*  3563 */         this.bitField0_ &= 0xFFFFFFFB;
/*  3564 */         if (this.wakeUpBuilder_ == null) {
/*  3565 */           this.wakeUp_ = null;
/*       */         } else {
/*  3567 */           this.wakeUpBuilder_.clear();
/*       */         } 
/*  3569 */         this.bitField0_ &= 0xFFFFFFF7;
/*  3570 */         if (this.confirmationBuilder_ == null) {
/*  3571 */           this.confirmation_ = null;
/*       */         } else {
/*  3573 */           this.confirmationBuilder_.clear();
/*       */         } 
/*  3575 */         this.bitField0_ &= 0xFFFFFFEF;
/*  3576 */         if (this.paramResponseBuilder_ == null) {
/*  3577 */           this.paramResponse_ = null;
/*       */         } else {
/*  3579 */           this.paramResponseBuilder_.clear();
/*       */         } 
/*  3581 */         this.bitField0_ &= 0xFFFFFFDF;
/*  3582 */         if (this.eventReportBuilder_ == null) {
/*  3583 */           this.eventReport_ = null;
/*       */         } else {
/*  3585 */           this.eventReportBuilder_.clear();
/*       */         } 
/*  3587 */         this.bitField0_ &= 0xFFFFFFBF;
/*  3588 */         if (this.geoZoneBuilder_ == null) {
/*  3589 */           this.geoZone_ = null;
/*       */         } else {
/*  3591 */           this.geoZoneBuilder_.clear();
/*       */         } 
/*  3593 */         this.bitField0_ &= 0xFFFFFF7F;
/*  3594 */         if (this.outputsBuilder_ == null) {
/*  3595 */           this.outputs_ = null;
/*       */         } else {
/*  3597 */           this.outputsBuilder_.clear();
/*       */         } 
/*  3599 */         this.bitField0_ &= 0xFFFFFEFF;
/*  3600 */         if (this.eventConfigBuilder_ == null) {
/*  3601 */           this.eventConfig_ = null;
/*       */         } else {
/*  3603 */           this.eventConfigBuilder_.clear();
/*       */         } 
/*  3605 */         this.bitField0_ &= 0xFFFFFDFF;
/*  3606 */         if (this.inputsBuilder_ == null) {
/*  3607 */           this.inputs_ = null;
/*       */         } else {
/*  3609 */           this.inputsBuilder_.clear();
/*       */         } 
/*  3611 */         this.bitField0_ &= 0xFFFFFBFF;
/*  3612 */         if (this.inputConfigBuilder_ == null) {
/*  3613 */           this.inputConfig_ = null;
/*       */         } else {
/*  3615 */           this.inputConfigBuilder_.clear();
/*       */         } 
/*  3617 */         this.bitField0_ &= 0xFFFFF7FF;
/*  3618 */         if (this.speedLimitBuilder_ == null) {
/*  3619 */           this.speedLimit_ = null;
/*       */         } else {
/*  3621 */           this.speedLimitBuilder_.clear();
/*       */         } 
/*  3623 */         this.bitField0_ &= 0xFFFFEFFF;
/*  3624 */         if (this.unitIDChangedBuilder_ == null) {
/*  3625 */           this.unitIDChanged_ = null;
/*       */         } else {
/*  3627 */           this.unitIDChangedBuilder_.clear();
/*       */         } 
/*  3629 */         this.bitField0_ &= 0xFFFFDFFF;
/*  3630 */         if (this.genericDeviceMsgBuilder_ == null) {
/*  3631 */           this.genericDeviceMsg_ = null;
/*       */         } else {
/*  3633 */           this.genericDeviceMsgBuilder_.clear();
/*       */         } 
/*  3635 */         this.bitField0_ &= 0xFFFFBFFF;
/*  3636 */         if (this.genericDeviceFWBuilder_ == null) {
/*  3637 */           this.genericDeviceFW_ = null;
/*       */         } else {
/*  3639 */           this.genericDeviceFWBuilder_.clear();
/*       */         } 
/*  3641 */         this.bitField0_ &= 0xFFFF7FFF;
/*  3642 */         if (this.readIButtonBuilder_ == null) {
/*  3643 */           this.readIButton_ = null;
/*       */         } else {
/*  3645 */           this.readIButtonBuilder_.clear();
/*       */         } 
/*  3647 */         this.bitField0_ &= 0xFFFEFFFF;
/*  3648 */         if (this.getPatternBuilder_ == null) {
/*  3649 */           this.getPattern_ = null;
/*       */         } else {
/*  3651 */           this.getPatternBuilder_.clear();
/*       */         } 
/*  3653 */         this.bitField0_ &= 0xFFFDFFFF;
/*  3654 */         if (this.multiParameterBuilder_ == null) {
/*  3655 */           this.multiParameter_ = null;
/*       */         } else {
/*  3657 */           this.multiParameterBuilder_.clear();
/*       */         } 
/*  3659 */         this.bitField0_ &= 0xFFFBFFFF;
/*  3660 */         if (this.tempConfigBuilder_ == null) {
/*  3661 */           this.tempConfig_ = null;
/*       */         } else {
/*  3663 */           this.tempConfigBuilder_.clear();
/*       */         } 
/*  3665 */         this.bitField0_ &= 0xFFF7FFFF;
/*  3666 */         if (this.deviceListBuilder_ == null) {
/*  3667 */           this.deviceList_ = null;
/*       */         } else {
/*  3669 */           this.deviceListBuilder_.clear();
/*       */         } 
/*  3671 */         this.bitField0_ &= 0xFFEFFFFF;
/*  3672 */         if (this.teachRemoteBuilder_ == null) {
/*  3673 */           this.teachRemote_ = null;
/*       */         } else {
/*  3675 */           this.teachRemoteBuilder_.clear();
/*       */         } 
/*  3677 */         this.bitField0_ &= 0xFFDFFFFF;
/*  3678 */         if (this.authenticateBuilder_ == null) {
/*  3679 */           this.authenticate_ = null;
/*       */         } else {
/*  3681 */           this.authenticateBuilder_.clear();
/*       */         } 
/*  3683 */         this.bitField0_ &= 0xFFBFFFFF;
/*  3684 */         if (this.currentLocationBuilder_ == null) {
/*  3685 */           this.currentLocation_ = null;
/*       */         } else {
/*  3687 */           this.currentLocationBuilder_.clear();
/*       */         } 
/*  3689 */         this.bitField0_ &= 0xFF7FFFFF;
/*  3690 */         if (this.configServerBuilder_ == null) {
/*  3691 */           this.configServer_ = null;
/*       */         } else {
/*  3693 */           this.configServerBuilder_.clear();
/*       */         } 
/*  3695 */         this.bitField0_ &= 0xFEFFFFFF;
/*  3696 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Descriptors.Descriptor getDescriptorForType() {
/*  3702 */         return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_mMessage_descriptor;
/*       */       }
/*       */ 
/*       */       
/*       */       public StarLinkMessage.mMessage getDefaultInstanceForType() {
/*  3707 */         return StarLinkMessage.mMessage.getDefaultInstance();
/*       */       }
/*       */ 
/*       */       
/*       */       public StarLinkMessage.mMessage build() {
/*  3712 */         StarLinkMessage.mMessage result = buildPartial();
/*  3713 */         if (!result.isInitialized()) {
/*  3714 */           throw newUninitializedMessageException(result);
/*       */         }
/*  3716 */         return result;
/*       */       }
/*       */ 
/*       */       
/*       */       public StarLinkMessage.mMessage buildPartial() {
/*  3721 */         StarLinkMessage.mMessage result = new StarLinkMessage.mMessage(this);
/*  3722 */         int from_bitField0_ = this.bitField0_;
/*  3723 */         int to_bitField0_ = 0;
/*  3724 */         if ((from_bitField0_ & 0x1) != 0) {
/*  3725 */           result.referenceNumber_ = this.referenceNumber_;
/*  3726 */           to_bitField0_ |= 0x1;
/*       */         } 
/*  3728 */         if ((from_bitField0_ & 0x2) != 0) {
/*  3729 */           result.referenceNumberDiff_ = this.referenceNumberDiff_;
/*  3730 */           to_bitField0_ |= 0x2;
/*       */         } 
/*  3732 */         if ((from_bitField0_ & 0x4) != 0) {
/*  3733 */           result.messageType_ = this.messageType_;
/*  3734 */           to_bitField0_ |= 0x4;
/*       */         } 
/*  3736 */         if ((from_bitField0_ & 0x8) != 0) {
/*  3737 */           if (this.wakeUpBuilder_ == null) {
/*  3738 */             result.wakeUp_ = this.wakeUp_;
/*       */           } else {
/*  3740 */             result.wakeUp_ = (StarLinkMessage.mWakeUp)this.wakeUpBuilder_.build();
/*       */           } 
/*  3742 */           to_bitField0_ |= 0x8;
/*       */         } 
/*  3744 */         if ((from_bitField0_ & 0x10) != 0) {
/*  3745 */           if (this.confirmationBuilder_ == null) {
/*  3746 */             result.confirmation_ = this.confirmation_;
/*       */           } else {
/*  3748 */             result.confirmation_ = (StarLinkMessage.mConfirmation)this.confirmationBuilder_.build();
/*       */           } 
/*  3750 */           to_bitField0_ |= 0x10;
/*       */         } 
/*  3752 */         if ((from_bitField0_ & 0x20) != 0) {
/*  3753 */           if (this.paramResponseBuilder_ == null) {
/*  3754 */             result.paramResponse_ = this.paramResponse_;
/*       */           } else {
/*  3756 */             result.paramResponse_ = (StarLinkMessage.mParamResponse)this.paramResponseBuilder_.build();
/*       */           } 
/*  3758 */           to_bitField0_ |= 0x20;
/*       */         } 
/*  3760 */         if ((from_bitField0_ & 0x40) != 0) {
/*  3761 */           if (this.eventReportBuilder_ == null) {
/*  3762 */             result.eventReport_ = this.eventReport_;
/*       */           } else {
/*  3764 */             result.eventReport_ = (StarLinkMessage.mEventReport)this.eventReportBuilder_.build();
/*       */           } 
/*  3766 */           to_bitField0_ |= 0x40;
/*       */         } 
/*  3768 */         if ((from_bitField0_ & 0x80) != 0) {
/*  3769 */           if (this.geoZoneBuilder_ == null) {
/*  3770 */             result.geoZone_ = this.geoZone_;
/*       */           } else {
/*  3772 */             result.geoZone_ = (StarLinkMessage.mGeoZone)this.geoZoneBuilder_.build();
/*       */           } 
/*  3774 */           to_bitField0_ |= 0x80;
/*       */         } 
/*  3776 */         if ((from_bitField0_ & 0x100) != 0) {
/*  3777 */           if (this.outputsBuilder_ == null) {
/*  3778 */             result.outputs_ = this.outputs_;
/*       */           } else {
/*  3780 */             result.outputs_ = (StarLinkMessage.mOutputs)this.outputsBuilder_.build();
/*       */           } 
/*  3782 */           to_bitField0_ |= 0x100;
/*       */         } 
/*  3784 */         if ((from_bitField0_ & 0x200) != 0) {
/*  3785 */           if (this.eventConfigBuilder_ == null) {
/*  3786 */             result.eventConfig_ = this.eventConfig_;
/*       */           } else {
/*  3788 */             result.eventConfig_ = (StarLinkMessage.mEventConfig)this.eventConfigBuilder_.build();
/*       */           } 
/*  3790 */           to_bitField0_ |= 0x200;
/*       */         } 
/*  3792 */         if ((from_bitField0_ & 0x400) != 0) {
/*  3793 */           if (this.inputsBuilder_ == null) {
/*  3794 */             result.inputs_ = this.inputs_;
/*       */           } else {
/*  3796 */             result.inputs_ = (StarLinkMessage.mInputs)this.inputsBuilder_.build();
/*       */           } 
/*  3798 */           to_bitField0_ |= 0x400;
/*       */         } 
/*  3800 */         if ((from_bitField0_ & 0x800) != 0) {
/*  3801 */           if (this.inputConfigBuilder_ == null) {
/*  3802 */             result.inputConfig_ = this.inputConfig_;
/*       */           } else {
/*  3804 */             result.inputConfig_ = (StarLinkMessage.mInputConfig)this.inputConfigBuilder_.build();
/*       */           } 
/*  3806 */           to_bitField0_ |= 0x800;
/*       */         } 
/*  3808 */         if ((from_bitField0_ & 0x1000) != 0) {
/*  3809 */           if (this.speedLimitBuilder_ == null) {
/*  3810 */             result.speedLimit_ = this.speedLimit_;
/*       */           } else {
/*  3812 */             result.speedLimit_ = (StarLinkMessage.mSpeedLimit)this.speedLimitBuilder_.build();
/*       */           } 
/*  3814 */           to_bitField0_ |= 0x1000;
/*       */         } 
/*  3816 */         if ((from_bitField0_ & 0x2000) != 0) {
/*  3817 */           if (this.unitIDChangedBuilder_ == null) {
/*  3818 */             result.unitIDChanged_ = this.unitIDChanged_;
/*       */           } else {
/*  3820 */             result.unitIDChanged_ = (StarLinkMessage.mUnitIDChanged)this.unitIDChangedBuilder_.build();
/*       */           } 
/*  3822 */           to_bitField0_ |= 0x2000;
/*       */         } 
/*  3824 */         if ((from_bitField0_ & 0x4000) != 0) {
/*  3825 */           if (this.genericDeviceMsgBuilder_ == null) {
/*  3826 */             result.genericDeviceMsg_ = this.genericDeviceMsg_;
/*       */           } else {
/*  3828 */             result.genericDeviceMsg_ = (StarLinkMessage.mGenDeviceMsg)this.genericDeviceMsgBuilder_.build();
/*       */           } 
/*  3830 */           to_bitField0_ |= 0x4000;
/*       */         } 
/*  3832 */         if ((from_bitField0_ & 0x8000) != 0) {
/*  3833 */           if (this.genericDeviceFWBuilder_ == null) {
/*  3834 */             result.genericDeviceFW_ = this.genericDeviceFW_;
/*       */           } else {
/*  3836 */             result.genericDeviceFW_ = (StarLinkMessage.mGenDeviceFW)this.genericDeviceFWBuilder_.build();
/*       */           } 
/*  3838 */           to_bitField0_ |= 0x8000;
/*       */         } 
/*  3840 */         if ((from_bitField0_ & 0x10000) != 0) {
/*  3841 */           if (this.readIButtonBuilder_ == null) {
/*  3842 */             result.readIButton_ = this.readIButton_;
/*       */           } else {
/*  3844 */             result.readIButton_ = (StarLinkMessage.mReadIButton)this.readIButtonBuilder_.build();
/*       */           } 
/*  3846 */           to_bitField0_ |= 0x10000;
/*       */         } 
/*  3848 */         if ((from_bitField0_ & 0x20000) != 0) {
/*  3849 */           if (this.getPatternBuilder_ == null) {
/*  3850 */             result.getPattern_ = this.getPattern_;
/*       */           } else {
/*  3852 */             result.getPattern_ = (StarLinkMessage.mGetPattern)this.getPatternBuilder_.build();
/*       */           } 
/*  3854 */           to_bitField0_ |= 0x20000;
/*       */         } 
/*  3856 */         if ((from_bitField0_ & 0x40000) != 0) {
/*  3857 */           if (this.multiParameterBuilder_ == null) {
/*  3858 */             result.multiParameter_ = this.multiParameter_;
/*       */           } else {
/*  3860 */             result.multiParameter_ = (StarLinkMessage.mMultiParam)this.multiParameterBuilder_.build();
/*       */           } 
/*  3862 */           to_bitField0_ |= 0x40000;
/*       */         } 
/*  3864 */         if ((from_bitField0_ & 0x80000) != 0) {
/*  3865 */           if (this.tempConfigBuilder_ == null) {
/*  3866 */             result.tempConfig_ = this.tempConfig_;
/*       */           } else {
/*  3868 */             result.tempConfig_ = (StarLinkMessage.mTempConfig)this.tempConfigBuilder_.build();
/*       */           } 
/*  3870 */           to_bitField0_ |= 0x80000;
/*       */         } 
/*  3872 */         if ((from_bitField0_ & 0x100000) != 0) {
/*  3873 */           if (this.deviceListBuilder_ == null) {
/*  3874 */             result.deviceList_ = this.deviceList_;
/*       */           } else {
/*  3876 */             result.deviceList_ = (StarLinkMessage.mDeviceList)this.deviceListBuilder_.build();
/*       */           } 
/*  3878 */           to_bitField0_ |= 0x100000;
/*       */         } 
/*  3880 */         if ((from_bitField0_ & 0x200000) != 0) {
/*  3881 */           if (this.teachRemoteBuilder_ == null) {
/*  3882 */             result.teachRemote_ = this.teachRemote_;
/*       */           } else {
/*  3884 */             result.teachRemote_ = (StarLinkMessage.mTeachRemote)this.teachRemoteBuilder_.build();
/*       */           } 
/*  3886 */           to_bitField0_ |= 0x200000;
/*       */         } 
/*  3888 */         if ((from_bitField0_ & 0x400000) != 0) {
/*  3889 */           if (this.authenticateBuilder_ == null) {
/*  3890 */             result.authenticate_ = this.authenticate_;
/*       */           } else {
/*  3892 */             result.authenticate_ = (StarLinkMessage.mAuthenticate)this.authenticateBuilder_.build();
/*       */           } 
/*  3894 */           to_bitField0_ |= 0x400000;
/*       */         } 
/*  3896 */         if ((from_bitField0_ & 0x800000) != 0) {
/*  3897 */           if (this.currentLocationBuilder_ == null) {
/*  3898 */             result.currentLocation_ = this.currentLocation_;
/*       */           } else {
/*  3900 */             result.currentLocation_ = (StarLinkMessage.mEventReport)this.currentLocationBuilder_.build();
/*       */           } 
/*  3902 */           to_bitField0_ |= 0x800000;
/*       */         } 
/*  3904 */         if ((from_bitField0_ & 0x1000000) != 0) {
/*  3905 */           if (this.configServerBuilder_ == null) {
/*  3906 */             result.configServer_ = this.configServer_;
/*       */           } else {
/*  3908 */             result.configServer_ = (StarLinkMessage.mConfigServer)this.configServerBuilder_.build();
/*       */           } 
/*  3910 */           to_bitField0_ |= 0x1000000;
/*       */         } 
/*  3912 */         result.bitField0_ = to_bitField0_;
/*  3913 */         onBuilt();
/*  3914 */         return result;
/*       */       }
/*       */ 
/*       */       
/*       */       public Builder clone() {
/*  3919 */         return (Builder)super.clone();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setField(Descriptors.FieldDescriptor field, Object value) {
/*  3925 */         return (Builder)super.setField(field, value);
/*       */       }
/*       */ 
/*       */       
/*       */       public Builder clearField(Descriptors.FieldDescriptor field) {
/*  3930 */         return (Builder)super.clearField(field);
/*       */       }
/*       */ 
/*       */       
/*       */       public Builder clearOneof(Descriptors.OneofDescriptor oneof) {
/*  3935 */         return (Builder)super.clearOneof(oneof);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
/*  3941 */         return (Builder)super.setRepeatedField(field, index, value);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
/*  3947 */         return (Builder)super.addRepeatedField(field, value);
/*       */       }
/*       */       
/*       */       public Builder mergeFrom(Message other) {
/*  3951 */         if (other instanceof StarLinkMessage.mMessage) {
/*  3952 */           return mergeFrom((StarLinkMessage.mMessage)other);
/*       */         }
/*  3954 */         super.mergeFrom(other);
/*  3955 */         return this;
/*       */       }
/*       */ 
/*       */       
/*       */       public Builder mergeFrom(StarLinkMessage.mMessage other) {
/*  3960 */         if (other == StarLinkMessage.mMessage.getDefaultInstance()) return this; 
/*  3961 */         if (other.hasReferenceNumber()) {
/*  3962 */           setReferenceNumber(other.getReferenceNumber());
/*       */         }
/*  3964 */         if (other.hasReferenceNumberDiff()) {
/*  3965 */           setReferenceNumberDiff(other.getReferenceNumberDiff());
/*       */         }
/*  3967 */         if (other.hasMessageType()) {
/*  3968 */           setMessageType(other.getMessageType());
/*       */         }
/*  3970 */         if (other.hasWakeUp()) {
/*  3971 */           mergeWakeUp(other.getWakeUp());
/*       */         }
/*  3973 */         if (other.hasConfirmation()) {
/*  3974 */           mergeConfirmation(other.getConfirmation());
/*       */         }
/*  3976 */         if (other.hasParamResponse()) {
/*  3977 */           mergeParamResponse(other.getParamResponse());
/*       */         }
/*  3979 */         if (other.hasEventReport()) {
/*  3980 */           mergeEventReport(other.getEventReport());
/*       */         }
/*  3982 */         if (other.hasGeoZone()) {
/*  3983 */           mergeGeoZone(other.getGeoZone());
/*       */         }
/*  3985 */         if (other.hasOutputs()) {
/*  3986 */           mergeOutputs(other.getOutputs());
/*       */         }
/*  3988 */         if (other.hasEventConfig()) {
/*  3989 */           mergeEventConfig(other.getEventConfig());
/*       */         }
/*  3991 */         if (other.hasInputs()) {
/*  3992 */           mergeInputs(other.getInputs());
/*       */         }
/*  3994 */         if (other.hasInputConfig()) {
/*  3995 */           mergeInputConfig(other.getInputConfig());
/*       */         }
/*  3997 */         if (other.hasSpeedLimit()) {
/*  3998 */           mergeSpeedLimit(other.getSpeedLimit());
/*       */         }
/*  4000 */         if (other.hasUnitIDChanged()) {
/*  4001 */           mergeUnitIDChanged(other.getUnitIDChanged());
/*       */         }
/*  4003 */         if (other.hasGenericDeviceMsg()) {
/*  4004 */           mergeGenericDeviceMsg(other.getGenericDeviceMsg());
/*       */         }
/*  4006 */         if (other.hasGenericDeviceFW()) {
/*  4007 */           mergeGenericDeviceFW(other.getGenericDeviceFW());
/*       */         }
/*  4009 */         if (other.hasReadIButton()) {
/*  4010 */           mergeReadIButton(other.getReadIButton());
/*       */         }
/*  4012 */         if (other.hasGetPattern()) {
/*  4013 */           mergeGetPattern(other.getGetPattern());
/*       */         }
/*  4015 */         if (other.hasMultiParameter()) {
/*  4016 */           mergeMultiParameter(other.getMultiParameter());
/*       */         }
/*  4018 */         if (other.hasTempConfig()) {
/*  4019 */           mergeTempConfig(other.getTempConfig());
/*       */         }
/*  4021 */         if (other.hasDeviceList()) {
/*  4022 */           mergeDeviceList(other.getDeviceList());
/*       */         }
/*  4024 */         if (other.hasTeachRemote()) {
/*  4025 */           mergeTeachRemote(other.getTeachRemote());
/*       */         }
/*  4027 */         if (other.hasAuthenticate()) {
/*  4028 */           mergeAuthenticate(other.getAuthenticate());
/*       */         }
/*  4030 */         if (other.hasCurrentLocation()) {
/*  4031 */           mergeCurrentLocation(other.getCurrentLocation());
/*       */         }
/*  4033 */         if (other.hasConfigServer()) {
/*  4034 */           mergeConfigServer(other.getConfigServer());
/*       */         }
/*  4036 */         mergeUnknownFields(other.unknownFields);
/*  4037 */         onChanged();
/*  4038 */         return this;
/*       */       }
/*       */ 
/*       */       
/*       */       public final boolean isInitialized() {
/*  4043 */         if (hasWakeUp() && 
/*  4044 */           !getWakeUp().isInitialized()) {
/*  4045 */           return false;
/*       */         }
/*       */         
/*  4048 */         if (hasConfirmation() && 
/*  4049 */           !getConfirmation().isInitialized()) {
/*  4050 */           return false;
/*       */         }
/*       */         
/*  4053 */         if (hasParamResponse() && 
/*  4054 */           !getParamResponse().isInitialized()) {
/*  4055 */           return false;
/*       */         }
/*       */         
/*  4058 */         if (hasEventReport() && 
/*  4059 */           !getEventReport().isInitialized()) {
/*  4060 */           return false;
/*       */         }
/*       */         
/*  4063 */         if (hasGeoZone() && 
/*  4064 */           !getGeoZone().isInitialized()) {
/*  4065 */           return false;
/*       */         }
/*       */         
/*  4068 */         if (hasOutputs() && 
/*  4069 */           !getOutputs().isInitialized()) {
/*  4070 */           return false;
/*       */         }
/*       */         
/*  4073 */         if (hasEventConfig() && 
/*  4074 */           !getEventConfig().isInitialized()) {
/*  4075 */           return false;
/*       */         }
/*       */         
/*  4078 */         if (hasInputs() && 
/*  4079 */           !getInputs().isInitialized()) {
/*  4080 */           return false;
/*       */         }
/*       */         
/*  4083 */         if (hasInputConfig() && 
/*  4084 */           !getInputConfig().isInitialized()) {
/*  4085 */           return false;
/*       */         }
/*       */         
/*  4088 */         if (hasSpeedLimit() && 
/*  4089 */           !getSpeedLimit().isInitialized()) {
/*  4090 */           return false;
/*       */         }
/*       */         
/*  4093 */         if (hasUnitIDChanged() && 
/*  4094 */           !getUnitIDChanged().isInitialized()) {
/*  4095 */           return false;
/*       */         }
/*       */         
/*  4098 */         if (hasGenericDeviceMsg() && 
/*  4099 */           !getGenericDeviceMsg().isInitialized()) {
/*  4100 */           return false;
/*       */         }
/*       */         
/*  4103 */         if (hasReadIButton() && 
/*  4104 */           !getReadIButton().isInitialized()) {
/*  4105 */           return false;
/*       */         }
/*       */         
/*  4108 */         if (hasGetPattern() && 
/*  4109 */           !getGetPattern().isInitialized()) {
/*  4110 */           return false;
/*       */         }
/*       */         
/*  4113 */         if (hasTempConfig() && 
/*  4114 */           !getTempConfig().isInitialized()) {
/*  4115 */           return false;
/*       */         }
/*       */         
/*  4118 */         if (hasTeachRemote() && 
/*  4119 */           !getTeachRemote().isInitialized()) {
/*  4120 */           return false;
/*       */         }
/*       */         
/*  4123 */         if (hasAuthenticate() && 
/*  4124 */           !getAuthenticate().isInitialized()) {
/*  4125 */           return false;
/*       */         }
/*       */         
/*  4128 */         if (hasCurrentLocation() && 
/*  4129 */           !getCurrentLocation().isInitialized()) {
/*  4130 */           return false;
/*       */         }
/*       */         
/*  4133 */         if (hasConfigServer() && 
/*  4134 */           !getConfigServer().isInitialized()) {
/*  4135 */           return false;
/*       */         }
/*       */         
/*  4138 */         return true;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*  4146 */         StarLinkMessage.mMessage parsedMessage = null;
/*       */         try {
/*  4148 */           parsedMessage = (StarLinkMessage.mMessage)StarLinkMessage.mMessage.PARSER.parsePartialFrom(input, extensionRegistry);
/*  4149 */         } catch (InvalidProtocolBufferException e) {
/*  4150 */           parsedMessage = (StarLinkMessage.mMessage)e.getUnfinishedMessage();
/*  4151 */           throw e.unwrapIOException();
/*       */         } finally {
/*  4153 */           if (parsedMessage != null) {
/*  4154 */             mergeFrom(parsedMessage);
/*       */           }
/*       */         } 
/*  4157 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasReferenceNumber() {
/*  4168 */         return ((this.bitField0_ & 0x1) != 0);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public long getReferenceNumber() {
/*  4176 */         return this.referenceNumber_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setReferenceNumber(long value) {
/*  4184 */         this.bitField0_ |= 0x1;
/*  4185 */         this.referenceNumber_ = value;
/*  4186 */         onChanged();
/*  4187 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearReferenceNumber() {
/*  4194 */         this.bitField0_ &= 0xFFFFFFFE;
/*  4195 */         this.referenceNumber_ = 0L;
/*  4196 */         onChanged();
/*  4197 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasReferenceNumberDiff() {
/*  4207 */         return ((this.bitField0_ & 0x2) != 0);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getReferenceNumberDiff() {
/*  4215 */         return this.referenceNumberDiff_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setReferenceNumberDiff(int value) {
/*  4223 */         this.bitField0_ |= 0x2;
/*  4224 */         this.referenceNumberDiff_ = value;
/*  4225 */         onChanged();
/*  4226 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearReferenceNumberDiff() {
/*  4233 */         this.bitField0_ &= 0xFFFFFFFD;
/*  4234 */         this.referenceNumberDiff_ = 0;
/*  4235 */         onChanged();
/*  4236 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasMessageType() {
/*  4246 */         return ((this.bitField0_ & 0x4) != 0);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getMessageType() {
/*  4254 */         return this.messageType_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setMessageType(int value) {
/*  4262 */         this.bitField0_ |= 0x4;
/*  4263 */         this.messageType_ = value;
/*  4264 */         onChanged();
/*  4265 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearMessageType() {
/*  4272 */         this.bitField0_ &= 0xFFFFFFFB;
/*  4273 */         this.messageType_ = 0;
/*  4274 */         onChanged();
/*  4275 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasWakeUp() {
/*  4286 */         return ((this.bitField0_ & 0x8) != 0);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public StarLinkMessage.mWakeUp getWakeUp() {
/*  4293 */         if (this.wakeUpBuilder_ == null) {
/*  4294 */           return (this.wakeUp_ == null) ? StarLinkMessage.mWakeUp.getDefaultInstance() : this.wakeUp_;
/*       */         }
/*  4296 */         return (StarLinkMessage.mWakeUp)this.wakeUpBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setWakeUp(StarLinkMessage.mWakeUp value) {
/*  4303 */         if (this.wakeUpBuilder_ == null) {
/*  4304 */           if (value == null) {
/*  4305 */             throw new NullPointerException();
/*       */           }
/*  4307 */           this.wakeUp_ = value;
/*  4308 */           onChanged();
/*       */         } else {
/*  4310 */           this.wakeUpBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*  4312 */         this.bitField0_ |= 0x8;
/*  4313 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setWakeUp(StarLinkMessage.mWakeUp.Builder builderForValue) {
/*  4320 */         if (this.wakeUpBuilder_ == null) {
/*  4321 */           this.wakeUp_ = builderForValue.build();
/*  4322 */           onChanged();
/*       */         } else {
/*  4324 */           this.wakeUpBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*  4326 */         this.bitField0_ |= 0x8;
/*  4327 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeWakeUp(StarLinkMessage.mWakeUp value) {
/*  4333 */         if (this.wakeUpBuilder_ == null) {
/*  4334 */           if ((this.bitField0_ & 0x8) != 0 && this.wakeUp_ != null && this.wakeUp_ != 
/*       */             
/*  4336 */             StarLinkMessage.mWakeUp.getDefaultInstance()) {
/*  4337 */             this
/*  4338 */               .wakeUp_ = StarLinkMessage.mWakeUp.newBuilder(this.wakeUp_).mergeFrom(value).buildPartial();
/*       */           } else {
/*  4340 */             this.wakeUp_ = value;
/*       */           } 
/*  4342 */           onChanged();
/*       */         } else {
/*  4344 */           this.wakeUpBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*  4346 */         this.bitField0_ |= 0x8;
/*  4347 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearWakeUp() {
/*  4353 */         if (this.wakeUpBuilder_ == null) {
/*  4354 */           this.wakeUp_ = null;
/*  4355 */           onChanged();
/*       */         } else {
/*  4357 */           this.wakeUpBuilder_.clear();
/*       */         } 
/*  4359 */         this.bitField0_ &= 0xFFFFFFF7;
/*  4360 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public StarLinkMessage.mWakeUp.Builder getWakeUpBuilder() {
/*  4366 */         this.bitField0_ |= 0x8;
/*  4367 */         onChanged();
/*  4368 */         return (StarLinkMessage.mWakeUp.Builder)getWakeUpFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public StarLinkMessage.mWakeUpOrBuilder getWakeUpOrBuilder() {
/*  4374 */         if (this.wakeUpBuilder_ != null) {
/*  4375 */           return (StarLinkMessage.mWakeUpOrBuilder)this.wakeUpBuilder_.getMessageOrBuilder();
/*       */         }
/*  4377 */         return (this.wakeUp_ == null) ? 
/*  4378 */           StarLinkMessage.mWakeUp.getDefaultInstance() : this.wakeUp_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<StarLinkMessage.mWakeUp, StarLinkMessage.mWakeUp.Builder, StarLinkMessage.mWakeUpOrBuilder> getWakeUpFieldBuilder() {
/*  4387 */         if (this.wakeUpBuilder_ == null) {
/*  4388 */           this
/*       */ 
/*       */ 
/*       */             
/*  4392 */             .wakeUpBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getWakeUp(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*  4393 */           this.wakeUp_ = null;
/*       */         } 
/*  4395 */         return this.wakeUpBuilder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasConfirmation() {
/*  4406 */         return ((this.bitField0_ & 0x10) != 0);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public StarLinkMessage.mConfirmation getConfirmation() {
/*  4413 */         if (this.confirmationBuilder_ == null) {
/*  4414 */           return (this.confirmation_ == null) ? StarLinkMessage.mConfirmation.getDefaultInstance() : this.confirmation_;
/*       */         }
/*  4416 */         return (StarLinkMessage.mConfirmation)this.confirmationBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setConfirmation(StarLinkMessage.mConfirmation value) {
/*  4423 */         if (this.confirmationBuilder_ == null) {
/*  4424 */           if (value == null) {
/*  4425 */             throw new NullPointerException();
/*       */           }
/*  4427 */           this.confirmation_ = value;
/*  4428 */           onChanged();
/*       */         } else {
/*  4430 */           this.confirmationBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*  4432 */         this.bitField0_ |= 0x10;
/*  4433 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setConfirmation(StarLinkMessage.mConfirmation.Builder builderForValue) {
/*  4440 */         if (this.confirmationBuilder_ == null) {
/*  4441 */           this.confirmation_ = builderForValue.build();
/*  4442 */           onChanged();
/*       */         } else {
/*  4444 */           this.confirmationBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*  4446 */         this.bitField0_ |= 0x10;
/*  4447 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeConfirmation(StarLinkMessage.mConfirmation value) {
/*  4453 */         if (this.confirmationBuilder_ == null) {
/*  4454 */           if ((this.bitField0_ & 0x10) != 0 && this.confirmation_ != null && this.confirmation_ != 
/*       */             
/*  4456 */             StarLinkMessage.mConfirmation.getDefaultInstance()) {
/*  4457 */             this
/*  4458 */               .confirmation_ = StarLinkMessage.mConfirmation.newBuilder(this.confirmation_).mergeFrom(value).buildPartial();
/*       */           } else {
/*  4460 */             this.confirmation_ = value;
/*       */           } 
/*  4462 */           onChanged();
/*       */         } else {
/*  4464 */           this.confirmationBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*  4466 */         this.bitField0_ |= 0x10;
/*  4467 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearConfirmation() {
/*  4473 */         if (this.confirmationBuilder_ == null) {
/*  4474 */           this.confirmation_ = null;
/*  4475 */           onChanged();
/*       */         } else {
/*  4477 */           this.confirmationBuilder_.clear();
/*       */         } 
/*  4479 */         this.bitField0_ &= 0xFFFFFFEF;
/*  4480 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public StarLinkMessage.mConfirmation.Builder getConfirmationBuilder() {
/*  4486 */         this.bitField0_ |= 0x10;
/*  4487 */         onChanged();
/*  4488 */         return (StarLinkMessage.mConfirmation.Builder)getConfirmationFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public StarLinkMessage.mConfirmationOrBuilder getConfirmationOrBuilder() {
/*  4494 */         if (this.confirmationBuilder_ != null) {
/*  4495 */           return (StarLinkMessage.mConfirmationOrBuilder)this.confirmationBuilder_.getMessageOrBuilder();
/*       */         }
/*  4497 */         return (this.confirmation_ == null) ? 
/*  4498 */           StarLinkMessage.mConfirmation.getDefaultInstance() : this.confirmation_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<StarLinkMessage.mConfirmation, StarLinkMessage.mConfirmation.Builder, StarLinkMessage.mConfirmationOrBuilder> getConfirmationFieldBuilder() {
/*  4507 */         if (this.confirmationBuilder_ == null) {
/*  4508 */           this
/*       */ 
/*       */ 
/*       */             
/*  4512 */             .confirmationBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getConfirmation(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*  4513 */           this.confirmation_ = null;
/*       */         } 
/*  4515 */         return this.confirmationBuilder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasParamResponse() {
/*  4526 */         return ((this.bitField0_ & 0x20) != 0);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public StarLinkMessage.mParamResponse getParamResponse() {
/*  4533 */         if (this.paramResponseBuilder_ == null) {
/*  4534 */           return (this.paramResponse_ == null) ? StarLinkMessage.mParamResponse.getDefaultInstance() : this.paramResponse_;
/*       */         }
/*  4536 */         return (StarLinkMessage.mParamResponse)this.paramResponseBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setParamResponse(StarLinkMessage.mParamResponse value) {
/*  4543 */         if (this.paramResponseBuilder_ == null) {
/*  4544 */           if (value == null) {
/*  4545 */             throw new NullPointerException();
/*       */           }
/*  4547 */           this.paramResponse_ = value;
/*  4548 */           onChanged();
/*       */         } else {
/*  4550 */           this.paramResponseBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*  4552 */         this.bitField0_ |= 0x20;
/*  4553 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setParamResponse(StarLinkMessage.mParamResponse.Builder builderForValue) {
/*  4560 */         if (this.paramResponseBuilder_ == null) {
/*  4561 */           this.paramResponse_ = builderForValue.build();
/*  4562 */           onChanged();
/*       */         } else {
/*  4564 */           this.paramResponseBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*  4566 */         this.bitField0_ |= 0x20;
/*  4567 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeParamResponse(StarLinkMessage.mParamResponse value) {
/*  4573 */         if (this.paramResponseBuilder_ == null) {
/*  4574 */           if ((this.bitField0_ & 0x20) != 0 && this.paramResponse_ != null && this.paramResponse_ != 
/*       */             
/*  4576 */             StarLinkMessage.mParamResponse.getDefaultInstance()) {
/*  4577 */             this
/*  4578 */               .paramResponse_ = StarLinkMessage.mParamResponse.newBuilder(this.paramResponse_).mergeFrom(value).buildPartial();
/*       */           } else {
/*  4580 */             this.paramResponse_ = value;
/*       */           } 
/*  4582 */           onChanged();
/*       */         } else {
/*  4584 */           this.paramResponseBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*  4586 */         this.bitField0_ |= 0x20;
/*  4587 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearParamResponse() {
/*  4593 */         if (this.paramResponseBuilder_ == null) {
/*  4594 */           this.paramResponse_ = null;
/*  4595 */           onChanged();
/*       */         } else {
/*  4597 */           this.paramResponseBuilder_.clear();
/*       */         } 
/*  4599 */         this.bitField0_ &= 0xFFFFFFDF;
/*  4600 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public StarLinkMessage.mParamResponse.Builder getParamResponseBuilder() {
/*  4606 */         this.bitField0_ |= 0x20;
/*  4607 */         onChanged();
/*  4608 */         return (StarLinkMessage.mParamResponse.Builder)getParamResponseFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public StarLinkMessage.mParamResponseOrBuilder getParamResponseOrBuilder() {
/*  4614 */         if (this.paramResponseBuilder_ != null) {
/*  4615 */           return (StarLinkMessage.mParamResponseOrBuilder)this.paramResponseBuilder_.getMessageOrBuilder();
/*       */         }
/*  4617 */         return (this.paramResponse_ == null) ? 
/*  4618 */           StarLinkMessage.mParamResponse.getDefaultInstance() : this.paramResponse_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<StarLinkMessage.mParamResponse, StarLinkMessage.mParamResponse.Builder, StarLinkMessage.mParamResponseOrBuilder> getParamResponseFieldBuilder() {
/*  4627 */         if (this.paramResponseBuilder_ == null) {
/*  4628 */           this
/*       */ 
/*       */ 
/*       */             
/*  4632 */             .paramResponseBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getParamResponse(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*  4633 */           this.paramResponse_ = null;
/*       */         } 
/*  4635 */         return this.paramResponseBuilder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasEventReport() {
/*  4646 */         return ((this.bitField0_ & 0x40) != 0);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public StarLinkMessage.mEventReport getEventReport() {
/*  4653 */         if (this.eventReportBuilder_ == null) {
/*  4654 */           return (this.eventReport_ == null) ? StarLinkMessage.mEventReport.getDefaultInstance() : this.eventReport_;
/*       */         }
/*  4656 */         return (StarLinkMessage.mEventReport)this.eventReportBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setEventReport(StarLinkMessage.mEventReport value) {
/*  4663 */         if (this.eventReportBuilder_ == null) {
/*  4664 */           if (value == null) {
/*  4665 */             throw new NullPointerException();
/*       */           }
/*  4667 */           this.eventReport_ = value;
/*  4668 */           onChanged();
/*       */         } else {
/*  4670 */           this.eventReportBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*  4672 */         this.bitField0_ |= 0x40;
/*  4673 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setEventReport(StarLinkMessage.mEventReport.Builder builderForValue) {
/*  4680 */         if (this.eventReportBuilder_ == null) {
/*  4681 */           this.eventReport_ = builderForValue.build();
/*  4682 */           onChanged();
/*       */         } else {
/*  4684 */           this.eventReportBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*  4686 */         this.bitField0_ |= 0x40;
/*  4687 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeEventReport(StarLinkMessage.mEventReport value) {
/*  4693 */         if (this.eventReportBuilder_ == null) {
/*  4694 */           if ((this.bitField0_ & 0x40) != 0 && this.eventReport_ != null && this.eventReport_ != 
/*       */             
/*  4696 */             StarLinkMessage.mEventReport.getDefaultInstance()) {
/*  4697 */             this
/*  4698 */               .eventReport_ = StarLinkMessage.mEventReport.newBuilder(this.eventReport_).mergeFrom(value).buildPartial();
/*       */           } else {
/*  4700 */             this.eventReport_ = value;
/*       */           } 
/*  4702 */           onChanged();
/*       */         } else {
/*  4704 */           this.eventReportBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*  4706 */         this.bitField0_ |= 0x40;
/*  4707 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearEventReport() {
/*  4713 */         if (this.eventReportBuilder_ == null) {
/*  4714 */           this.eventReport_ = null;
/*  4715 */           onChanged();
/*       */         } else {
/*  4717 */           this.eventReportBuilder_.clear();
/*       */         } 
/*  4719 */         this.bitField0_ &= 0xFFFFFFBF;
/*  4720 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public StarLinkMessage.mEventReport.Builder getEventReportBuilder() {
/*  4726 */         this.bitField0_ |= 0x40;
/*  4727 */         onChanged();
/*  4728 */         return (StarLinkMessage.mEventReport.Builder)getEventReportFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public StarLinkMessage.mEventReportOrBuilder getEventReportOrBuilder() {
/*  4734 */         if (this.eventReportBuilder_ != null) {
/*  4735 */           return (StarLinkMessage.mEventReportOrBuilder)this.eventReportBuilder_.getMessageOrBuilder();
/*       */         }
/*  4737 */         return (this.eventReport_ == null) ? 
/*  4738 */           StarLinkMessage.mEventReport.getDefaultInstance() : this.eventReport_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<StarLinkMessage.mEventReport, StarLinkMessage.mEventReport.Builder, StarLinkMessage.mEventReportOrBuilder> getEventReportFieldBuilder() {
/*  4747 */         if (this.eventReportBuilder_ == null) {
/*  4748 */           this
/*       */ 
/*       */ 
/*       */             
/*  4752 */             .eventReportBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getEventReport(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*  4753 */           this.eventReport_ = null;
/*       */         } 
/*  4755 */         return this.eventReportBuilder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasGeoZone() {
/*  4766 */         return ((this.bitField0_ & 0x80) != 0);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public StarLinkMessage.mGeoZone getGeoZone() {
/*  4773 */         if (this.geoZoneBuilder_ == null) {
/*  4774 */           return (this.geoZone_ == null) ? StarLinkMessage.mGeoZone.getDefaultInstance() : this.geoZone_;
/*       */         }
/*  4776 */         return (StarLinkMessage.mGeoZone)this.geoZoneBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setGeoZone(StarLinkMessage.mGeoZone value) {
/*  4783 */         if (this.geoZoneBuilder_ == null) {
/*  4784 */           if (value == null) {
/*  4785 */             throw new NullPointerException();
/*       */           }
/*  4787 */           this.geoZone_ = value;
/*  4788 */           onChanged();
/*       */         } else {
/*  4790 */           this.geoZoneBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*  4792 */         this.bitField0_ |= 0x80;
/*  4793 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setGeoZone(StarLinkMessage.mGeoZone.Builder builderForValue) {
/*  4800 */         if (this.geoZoneBuilder_ == null) {
/*  4801 */           this.geoZone_ = builderForValue.build();
/*  4802 */           onChanged();
/*       */         } else {
/*  4804 */           this.geoZoneBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*  4806 */         this.bitField0_ |= 0x80;
/*  4807 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeGeoZone(StarLinkMessage.mGeoZone value) {
/*  4813 */         if (this.geoZoneBuilder_ == null) {
/*  4814 */           if ((this.bitField0_ & 0x80) != 0 && this.geoZone_ != null && this.geoZone_ != 
/*       */             
/*  4816 */             StarLinkMessage.mGeoZone.getDefaultInstance()) {
/*  4817 */             this
/*  4818 */               .geoZone_ = StarLinkMessage.mGeoZone.newBuilder(this.geoZone_).mergeFrom(value).buildPartial();
/*       */           } else {
/*  4820 */             this.geoZone_ = value;
/*       */           } 
/*  4822 */           onChanged();
/*       */         } else {
/*  4824 */           this.geoZoneBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*  4826 */         this.bitField0_ |= 0x80;
/*  4827 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearGeoZone() {
/*  4833 */         if (this.geoZoneBuilder_ == null) {
/*  4834 */           this.geoZone_ = null;
/*  4835 */           onChanged();
/*       */         } else {
/*  4837 */           this.geoZoneBuilder_.clear();
/*       */         } 
/*  4839 */         this.bitField0_ &= 0xFFFFFF7F;
/*  4840 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public StarLinkMessage.mGeoZone.Builder getGeoZoneBuilder() {
/*  4846 */         this.bitField0_ |= 0x80;
/*  4847 */         onChanged();
/*  4848 */         return (StarLinkMessage.mGeoZone.Builder)getGeoZoneFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public StarLinkMessage.mGeoZoneOrBuilder getGeoZoneOrBuilder() {
/*  4854 */         if (this.geoZoneBuilder_ != null) {
/*  4855 */           return (StarLinkMessage.mGeoZoneOrBuilder)this.geoZoneBuilder_.getMessageOrBuilder();
/*       */         }
/*  4857 */         return (this.geoZone_ == null) ? 
/*  4858 */           StarLinkMessage.mGeoZone.getDefaultInstance() : this.geoZone_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<StarLinkMessage.mGeoZone, StarLinkMessage.mGeoZone.Builder, StarLinkMessage.mGeoZoneOrBuilder> getGeoZoneFieldBuilder() {
/*  4867 */         if (this.geoZoneBuilder_ == null) {
/*  4868 */           this
/*       */ 
/*       */ 
/*       */             
/*  4872 */             .geoZoneBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getGeoZone(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*  4873 */           this.geoZone_ = null;
/*       */         } 
/*  4875 */         return this.geoZoneBuilder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasOutputs() {
/*  4886 */         return ((this.bitField0_ & 0x100) != 0);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public StarLinkMessage.mOutputs getOutputs() {
/*  4893 */         if (this.outputsBuilder_ == null) {
/*  4894 */           return (this.outputs_ == null) ? StarLinkMessage.mOutputs.getDefaultInstance() : this.outputs_;
/*       */         }
/*  4896 */         return (StarLinkMessage.mOutputs)this.outputsBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setOutputs(StarLinkMessage.mOutputs value) {
/*  4903 */         if (this.outputsBuilder_ == null) {
/*  4904 */           if (value == null) {
/*  4905 */             throw new NullPointerException();
/*       */           }
/*  4907 */           this.outputs_ = value;
/*  4908 */           onChanged();
/*       */         } else {
/*  4910 */           this.outputsBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*  4912 */         this.bitField0_ |= 0x100;
/*  4913 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setOutputs(StarLinkMessage.mOutputs.Builder builderForValue) {
/*  4920 */         if (this.outputsBuilder_ == null) {
/*  4921 */           this.outputs_ = builderForValue.build();
/*  4922 */           onChanged();
/*       */         } else {
/*  4924 */           this.outputsBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*  4926 */         this.bitField0_ |= 0x100;
/*  4927 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeOutputs(StarLinkMessage.mOutputs value) {
/*  4933 */         if (this.outputsBuilder_ == null) {
/*  4934 */           if ((this.bitField0_ & 0x100) != 0 && this.outputs_ != null && this.outputs_ != 
/*       */             
/*  4936 */             StarLinkMessage.mOutputs.getDefaultInstance()) {
/*  4937 */             this
/*  4938 */               .outputs_ = StarLinkMessage.mOutputs.newBuilder(this.outputs_).mergeFrom(value).buildPartial();
/*       */           } else {
/*  4940 */             this.outputs_ = value;
/*       */           } 
/*  4942 */           onChanged();
/*       */         } else {
/*  4944 */           this.outputsBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*  4946 */         this.bitField0_ |= 0x100;
/*  4947 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearOutputs() {
/*  4953 */         if (this.outputsBuilder_ == null) {
/*  4954 */           this.outputs_ = null;
/*  4955 */           onChanged();
/*       */         } else {
/*  4957 */           this.outputsBuilder_.clear();
/*       */         } 
/*  4959 */         this.bitField0_ &= 0xFFFFFEFF;
/*  4960 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public StarLinkMessage.mOutputs.Builder getOutputsBuilder() {
/*  4966 */         this.bitField0_ |= 0x100;
/*  4967 */         onChanged();
/*  4968 */         return (StarLinkMessage.mOutputs.Builder)getOutputsFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public StarLinkMessage.mOutputsOrBuilder getOutputsOrBuilder() {
/*  4974 */         if (this.outputsBuilder_ != null) {
/*  4975 */           return (StarLinkMessage.mOutputsOrBuilder)this.outputsBuilder_.getMessageOrBuilder();
/*       */         }
/*  4977 */         return (this.outputs_ == null) ? 
/*  4978 */           StarLinkMessage.mOutputs.getDefaultInstance() : this.outputs_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<StarLinkMessage.mOutputs, StarLinkMessage.mOutputs.Builder, StarLinkMessage.mOutputsOrBuilder> getOutputsFieldBuilder() {
/*  4987 */         if (this.outputsBuilder_ == null) {
/*  4988 */           this
/*       */ 
/*       */ 
/*       */             
/*  4992 */             .outputsBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getOutputs(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*  4993 */           this.outputs_ = null;
/*       */         } 
/*  4995 */         return this.outputsBuilder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasEventConfig() {
/*  5006 */         return ((this.bitField0_ & 0x200) != 0);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public StarLinkMessage.mEventConfig getEventConfig() {
/*  5013 */         if (this.eventConfigBuilder_ == null) {
/*  5014 */           return (this.eventConfig_ == null) ? StarLinkMessage.mEventConfig.getDefaultInstance() : this.eventConfig_;
/*       */         }
/*  5016 */         return (StarLinkMessage.mEventConfig)this.eventConfigBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setEventConfig(StarLinkMessage.mEventConfig value) {
/*  5023 */         if (this.eventConfigBuilder_ == null) {
/*  5024 */           if (value == null) {
/*  5025 */             throw new NullPointerException();
/*       */           }
/*  5027 */           this.eventConfig_ = value;
/*  5028 */           onChanged();
/*       */         } else {
/*  5030 */           this.eventConfigBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*  5032 */         this.bitField0_ |= 0x200;
/*  5033 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setEventConfig(StarLinkMessage.mEventConfig.Builder builderForValue) {
/*  5040 */         if (this.eventConfigBuilder_ == null) {
/*  5041 */           this.eventConfig_ = builderForValue.build();
/*  5042 */           onChanged();
/*       */         } else {
/*  5044 */           this.eventConfigBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*  5046 */         this.bitField0_ |= 0x200;
/*  5047 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeEventConfig(StarLinkMessage.mEventConfig value) {
/*  5053 */         if (this.eventConfigBuilder_ == null) {
/*  5054 */           if ((this.bitField0_ & 0x200) != 0 && this.eventConfig_ != null && this.eventConfig_ != 
/*       */             
/*  5056 */             StarLinkMessage.mEventConfig.getDefaultInstance()) {
/*  5057 */             this
/*  5058 */               .eventConfig_ = StarLinkMessage.mEventConfig.newBuilder(this.eventConfig_).mergeFrom(value).buildPartial();
/*       */           } else {
/*  5060 */             this.eventConfig_ = value;
/*       */           } 
/*  5062 */           onChanged();
/*       */         } else {
/*  5064 */           this.eventConfigBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*  5066 */         this.bitField0_ |= 0x200;
/*  5067 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearEventConfig() {
/*  5073 */         if (this.eventConfigBuilder_ == null) {
/*  5074 */           this.eventConfig_ = null;
/*  5075 */           onChanged();
/*       */         } else {
/*  5077 */           this.eventConfigBuilder_.clear();
/*       */         } 
/*  5079 */         this.bitField0_ &= 0xFFFFFDFF;
/*  5080 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public StarLinkMessage.mEventConfig.Builder getEventConfigBuilder() {
/*  5086 */         this.bitField0_ |= 0x200;
/*  5087 */         onChanged();
/*  5088 */         return (StarLinkMessage.mEventConfig.Builder)getEventConfigFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public StarLinkMessage.mEventConfigOrBuilder getEventConfigOrBuilder() {
/*  5094 */         if (this.eventConfigBuilder_ != null) {
/*  5095 */           return (StarLinkMessage.mEventConfigOrBuilder)this.eventConfigBuilder_.getMessageOrBuilder();
/*       */         }
/*  5097 */         return (this.eventConfig_ == null) ? 
/*  5098 */           StarLinkMessage.mEventConfig.getDefaultInstance() : this.eventConfig_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<StarLinkMessage.mEventConfig, StarLinkMessage.mEventConfig.Builder, StarLinkMessage.mEventConfigOrBuilder> getEventConfigFieldBuilder() {
/*  5107 */         if (this.eventConfigBuilder_ == null) {
/*  5108 */           this
/*       */ 
/*       */ 
/*       */             
/*  5112 */             .eventConfigBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getEventConfig(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*  5113 */           this.eventConfig_ = null;
/*       */         } 
/*  5115 */         return this.eventConfigBuilder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasInputs() {
/*  5126 */         return ((this.bitField0_ & 0x400) != 0);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public StarLinkMessage.mInputs getInputs() {
/*  5133 */         if (this.inputsBuilder_ == null) {
/*  5134 */           return (this.inputs_ == null) ? StarLinkMessage.mInputs.getDefaultInstance() : this.inputs_;
/*       */         }
/*  5136 */         return (StarLinkMessage.mInputs)this.inputsBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setInputs(StarLinkMessage.mInputs value) {
/*  5143 */         if (this.inputsBuilder_ == null) {
/*  5144 */           if (value == null) {
/*  5145 */             throw new NullPointerException();
/*       */           }
/*  5147 */           this.inputs_ = value;
/*  5148 */           onChanged();
/*       */         } else {
/*  5150 */           this.inputsBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*  5152 */         this.bitField0_ |= 0x400;
/*  5153 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setInputs(StarLinkMessage.mInputs.Builder builderForValue) {
/*  5160 */         if (this.inputsBuilder_ == null) {
/*  5161 */           this.inputs_ = builderForValue.build();
/*  5162 */           onChanged();
/*       */         } else {
/*  5164 */           this.inputsBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*  5166 */         this.bitField0_ |= 0x400;
/*  5167 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeInputs(StarLinkMessage.mInputs value) {
/*  5173 */         if (this.inputsBuilder_ == null) {
/*  5174 */           if ((this.bitField0_ & 0x400) != 0 && this.inputs_ != null && this.inputs_ != 
/*       */             
/*  5176 */             StarLinkMessage.mInputs.getDefaultInstance()) {
/*  5177 */             this
/*  5178 */               .inputs_ = StarLinkMessage.mInputs.newBuilder(this.inputs_).mergeFrom(value).buildPartial();
/*       */           } else {
/*  5180 */             this.inputs_ = value;
/*       */           } 
/*  5182 */           onChanged();
/*       */         } else {
/*  5184 */           this.inputsBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*  5186 */         this.bitField0_ |= 0x400;
/*  5187 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearInputs() {
/*  5193 */         if (this.inputsBuilder_ == null) {
/*  5194 */           this.inputs_ = null;
/*  5195 */           onChanged();
/*       */         } else {
/*  5197 */           this.inputsBuilder_.clear();
/*       */         } 
/*  5199 */         this.bitField0_ &= 0xFFFFFBFF;
/*  5200 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public StarLinkMessage.mInputs.Builder getInputsBuilder() {
/*  5206 */         this.bitField0_ |= 0x400;
/*  5207 */         onChanged();
/*  5208 */         return (StarLinkMessage.mInputs.Builder)getInputsFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public StarLinkMessage.mInputsOrBuilder getInputsOrBuilder() {
/*  5214 */         if (this.inputsBuilder_ != null) {
/*  5215 */           return (StarLinkMessage.mInputsOrBuilder)this.inputsBuilder_.getMessageOrBuilder();
/*       */         }
/*  5217 */         return (this.inputs_ == null) ? 
/*  5218 */           StarLinkMessage.mInputs.getDefaultInstance() : this.inputs_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<StarLinkMessage.mInputs, StarLinkMessage.mInputs.Builder, StarLinkMessage.mInputsOrBuilder> getInputsFieldBuilder() {
/*  5227 */         if (this.inputsBuilder_ == null) {
/*  5228 */           this
/*       */ 
/*       */ 
/*       */             
/*  5232 */             .inputsBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getInputs(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*  5233 */           this.inputs_ = null;
/*       */         } 
/*  5235 */         return this.inputsBuilder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasInputConfig() {
/*  5246 */         return ((this.bitField0_ & 0x800) != 0);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public StarLinkMessage.mInputConfig getInputConfig() {
/*  5253 */         if (this.inputConfigBuilder_ == null) {
/*  5254 */           return (this.inputConfig_ == null) ? StarLinkMessage.mInputConfig.getDefaultInstance() : this.inputConfig_;
/*       */         }
/*  5256 */         return (StarLinkMessage.mInputConfig)this.inputConfigBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setInputConfig(StarLinkMessage.mInputConfig value) {
/*  5263 */         if (this.inputConfigBuilder_ == null) {
/*  5264 */           if (value == null) {
/*  5265 */             throw new NullPointerException();
/*       */           }
/*  5267 */           this.inputConfig_ = value;
/*  5268 */           onChanged();
/*       */         } else {
/*  5270 */           this.inputConfigBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*  5272 */         this.bitField0_ |= 0x800;
/*  5273 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setInputConfig(StarLinkMessage.mInputConfig.Builder builderForValue) {
/*  5280 */         if (this.inputConfigBuilder_ == null) {
/*  5281 */           this.inputConfig_ = builderForValue.build();
/*  5282 */           onChanged();
/*       */         } else {
/*  5284 */           this.inputConfigBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*  5286 */         this.bitField0_ |= 0x800;
/*  5287 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeInputConfig(StarLinkMessage.mInputConfig value) {
/*  5293 */         if (this.inputConfigBuilder_ == null) {
/*  5294 */           if ((this.bitField0_ & 0x800) != 0 && this.inputConfig_ != null && this.inputConfig_ != 
/*       */             
/*  5296 */             StarLinkMessage.mInputConfig.getDefaultInstance()) {
/*  5297 */             this
/*  5298 */               .inputConfig_ = StarLinkMessage.mInputConfig.newBuilder(this.inputConfig_).mergeFrom(value).buildPartial();
/*       */           } else {
/*  5300 */             this.inputConfig_ = value;
/*       */           } 
/*  5302 */           onChanged();
/*       */         } else {
/*  5304 */           this.inputConfigBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*  5306 */         this.bitField0_ |= 0x800;
/*  5307 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearInputConfig() {
/*  5313 */         if (this.inputConfigBuilder_ == null) {
/*  5314 */           this.inputConfig_ = null;
/*  5315 */           onChanged();
/*       */         } else {
/*  5317 */           this.inputConfigBuilder_.clear();
/*       */         } 
/*  5319 */         this.bitField0_ &= 0xFFFFF7FF;
/*  5320 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public StarLinkMessage.mInputConfig.Builder getInputConfigBuilder() {
/*  5326 */         this.bitField0_ |= 0x800;
/*  5327 */         onChanged();
/*  5328 */         return (StarLinkMessage.mInputConfig.Builder)getInputConfigFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public StarLinkMessage.mInputConfigOrBuilder getInputConfigOrBuilder() {
/*  5334 */         if (this.inputConfigBuilder_ != null) {
/*  5335 */           return (StarLinkMessage.mInputConfigOrBuilder)this.inputConfigBuilder_.getMessageOrBuilder();
/*       */         }
/*  5337 */         return (this.inputConfig_ == null) ? 
/*  5338 */           StarLinkMessage.mInputConfig.getDefaultInstance() : this.inputConfig_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<StarLinkMessage.mInputConfig, StarLinkMessage.mInputConfig.Builder, StarLinkMessage.mInputConfigOrBuilder> getInputConfigFieldBuilder() {
/*  5347 */         if (this.inputConfigBuilder_ == null) {
/*  5348 */           this
/*       */ 
/*       */ 
/*       */             
/*  5352 */             .inputConfigBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getInputConfig(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*  5353 */           this.inputConfig_ = null;
/*       */         } 
/*  5355 */         return this.inputConfigBuilder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasSpeedLimit() {
/*  5366 */         return ((this.bitField0_ & 0x1000) != 0);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public StarLinkMessage.mSpeedLimit getSpeedLimit() {
/*  5373 */         if (this.speedLimitBuilder_ == null) {
/*  5374 */           return (this.speedLimit_ == null) ? StarLinkMessage.mSpeedLimit.getDefaultInstance() : this.speedLimit_;
/*       */         }
/*  5376 */         return (StarLinkMessage.mSpeedLimit)this.speedLimitBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setSpeedLimit(StarLinkMessage.mSpeedLimit value) {
/*  5383 */         if (this.speedLimitBuilder_ == null) {
/*  5384 */           if (value == null) {
/*  5385 */             throw new NullPointerException();
/*       */           }
/*  5387 */           this.speedLimit_ = value;
/*  5388 */           onChanged();
/*       */         } else {
/*  5390 */           this.speedLimitBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*  5392 */         this.bitField0_ |= 0x1000;
/*  5393 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setSpeedLimit(StarLinkMessage.mSpeedLimit.Builder builderForValue) {
/*  5400 */         if (this.speedLimitBuilder_ == null) {
/*  5401 */           this.speedLimit_ = builderForValue.build();
/*  5402 */           onChanged();
/*       */         } else {
/*  5404 */           this.speedLimitBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*  5406 */         this.bitField0_ |= 0x1000;
/*  5407 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeSpeedLimit(StarLinkMessage.mSpeedLimit value) {
/*  5413 */         if (this.speedLimitBuilder_ == null) {
/*  5414 */           if ((this.bitField0_ & 0x1000) != 0 && this.speedLimit_ != null && this.speedLimit_ != 
/*       */             
/*  5416 */             StarLinkMessage.mSpeedLimit.getDefaultInstance()) {
/*  5417 */             this
/*  5418 */               .speedLimit_ = StarLinkMessage.mSpeedLimit.newBuilder(this.speedLimit_).mergeFrom(value).buildPartial();
/*       */           } else {
/*  5420 */             this.speedLimit_ = value;
/*       */           } 
/*  5422 */           onChanged();
/*       */         } else {
/*  5424 */           this.speedLimitBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*  5426 */         this.bitField0_ |= 0x1000;
/*  5427 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearSpeedLimit() {
/*  5433 */         if (this.speedLimitBuilder_ == null) {
/*  5434 */           this.speedLimit_ = null;
/*  5435 */           onChanged();
/*       */         } else {
/*  5437 */           this.speedLimitBuilder_.clear();
/*       */         } 
/*  5439 */         this.bitField0_ &= 0xFFFFEFFF;
/*  5440 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public StarLinkMessage.mSpeedLimit.Builder getSpeedLimitBuilder() {
/*  5446 */         this.bitField0_ |= 0x1000;
/*  5447 */         onChanged();
/*  5448 */         return (StarLinkMessage.mSpeedLimit.Builder)getSpeedLimitFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public StarLinkMessage.mSpeedLimitOrBuilder getSpeedLimitOrBuilder() {
/*  5454 */         if (this.speedLimitBuilder_ != null) {
/*  5455 */           return (StarLinkMessage.mSpeedLimitOrBuilder)this.speedLimitBuilder_.getMessageOrBuilder();
/*       */         }
/*  5457 */         return (this.speedLimit_ == null) ? 
/*  5458 */           StarLinkMessage.mSpeedLimit.getDefaultInstance() : this.speedLimit_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<StarLinkMessage.mSpeedLimit, StarLinkMessage.mSpeedLimit.Builder, StarLinkMessage.mSpeedLimitOrBuilder> getSpeedLimitFieldBuilder() {
/*  5467 */         if (this.speedLimitBuilder_ == null) {
/*  5468 */           this
/*       */ 
/*       */ 
/*       */             
/*  5472 */             .speedLimitBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getSpeedLimit(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*  5473 */           this.speedLimit_ = null;
/*       */         } 
/*  5475 */         return this.speedLimitBuilder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasUnitIDChanged() {
/*  5486 */         return ((this.bitField0_ & 0x2000) != 0);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public StarLinkMessage.mUnitIDChanged getUnitIDChanged() {
/*  5493 */         if (this.unitIDChangedBuilder_ == null) {
/*  5494 */           return (this.unitIDChanged_ == null) ? StarLinkMessage.mUnitIDChanged.getDefaultInstance() : this.unitIDChanged_;
/*       */         }
/*  5496 */         return (StarLinkMessage.mUnitIDChanged)this.unitIDChangedBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setUnitIDChanged(StarLinkMessage.mUnitIDChanged value) {
/*  5503 */         if (this.unitIDChangedBuilder_ == null) {
/*  5504 */           if (value == null) {
/*  5505 */             throw new NullPointerException();
/*       */           }
/*  5507 */           this.unitIDChanged_ = value;
/*  5508 */           onChanged();
/*       */         } else {
/*  5510 */           this.unitIDChangedBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*  5512 */         this.bitField0_ |= 0x2000;
/*  5513 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setUnitIDChanged(StarLinkMessage.mUnitIDChanged.Builder builderForValue) {
/*  5520 */         if (this.unitIDChangedBuilder_ == null) {
/*  5521 */           this.unitIDChanged_ = builderForValue.build();
/*  5522 */           onChanged();
/*       */         } else {
/*  5524 */           this.unitIDChangedBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*  5526 */         this.bitField0_ |= 0x2000;
/*  5527 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeUnitIDChanged(StarLinkMessage.mUnitIDChanged value) {
/*  5533 */         if (this.unitIDChangedBuilder_ == null) {
/*  5534 */           if ((this.bitField0_ & 0x2000) != 0 && this.unitIDChanged_ != null && this.unitIDChanged_ != 
/*       */             
/*  5536 */             StarLinkMessage.mUnitIDChanged.getDefaultInstance()) {
/*  5537 */             this
/*  5538 */               .unitIDChanged_ = StarLinkMessage.mUnitIDChanged.newBuilder(this.unitIDChanged_).mergeFrom(value).buildPartial();
/*       */           } else {
/*  5540 */             this.unitIDChanged_ = value;
/*       */           } 
/*  5542 */           onChanged();
/*       */         } else {
/*  5544 */           this.unitIDChangedBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*  5546 */         this.bitField0_ |= 0x2000;
/*  5547 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearUnitIDChanged() {
/*  5553 */         if (this.unitIDChangedBuilder_ == null) {
/*  5554 */           this.unitIDChanged_ = null;
/*  5555 */           onChanged();
/*       */         } else {
/*  5557 */           this.unitIDChangedBuilder_.clear();
/*       */         } 
/*  5559 */         this.bitField0_ &= 0xFFFFDFFF;
/*  5560 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public StarLinkMessage.mUnitIDChanged.Builder getUnitIDChangedBuilder() {
/*  5566 */         this.bitField0_ |= 0x2000;
/*  5567 */         onChanged();
/*  5568 */         return (StarLinkMessage.mUnitIDChanged.Builder)getUnitIDChangedFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public StarLinkMessage.mUnitIDChangedOrBuilder getUnitIDChangedOrBuilder() {
/*  5574 */         if (this.unitIDChangedBuilder_ != null) {
/*  5575 */           return (StarLinkMessage.mUnitIDChangedOrBuilder)this.unitIDChangedBuilder_.getMessageOrBuilder();
/*       */         }
/*  5577 */         return (this.unitIDChanged_ == null) ? 
/*  5578 */           StarLinkMessage.mUnitIDChanged.getDefaultInstance() : this.unitIDChanged_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<StarLinkMessage.mUnitIDChanged, StarLinkMessage.mUnitIDChanged.Builder, StarLinkMessage.mUnitIDChangedOrBuilder> getUnitIDChangedFieldBuilder() {
/*  5587 */         if (this.unitIDChangedBuilder_ == null) {
/*  5588 */           this
/*       */ 
/*       */ 
/*       */             
/*  5592 */             .unitIDChangedBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getUnitIDChanged(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*  5593 */           this.unitIDChanged_ = null;
/*       */         } 
/*  5595 */         return this.unitIDChangedBuilder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasGenericDeviceMsg() {
/*  5606 */         return ((this.bitField0_ & 0x4000) != 0);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public StarLinkMessage.mGenDeviceMsg getGenericDeviceMsg() {
/*  5613 */         if (this.genericDeviceMsgBuilder_ == null) {
/*  5614 */           return (this.genericDeviceMsg_ == null) ? StarLinkMessage.mGenDeviceMsg.getDefaultInstance() : this.genericDeviceMsg_;
/*       */         }
/*  5616 */         return (StarLinkMessage.mGenDeviceMsg)this.genericDeviceMsgBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setGenericDeviceMsg(StarLinkMessage.mGenDeviceMsg value) {
/*  5623 */         if (this.genericDeviceMsgBuilder_ == null) {
/*  5624 */           if (value == null) {
/*  5625 */             throw new NullPointerException();
/*       */           }
/*  5627 */           this.genericDeviceMsg_ = value;
/*  5628 */           onChanged();
/*       */         } else {
/*  5630 */           this.genericDeviceMsgBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*  5632 */         this.bitField0_ |= 0x4000;
/*  5633 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setGenericDeviceMsg(StarLinkMessage.mGenDeviceMsg.Builder builderForValue) {
/*  5640 */         if (this.genericDeviceMsgBuilder_ == null) {
/*  5641 */           this.genericDeviceMsg_ = builderForValue.build();
/*  5642 */           onChanged();
/*       */         } else {
/*  5644 */           this.genericDeviceMsgBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*  5646 */         this.bitField0_ |= 0x4000;
/*  5647 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeGenericDeviceMsg(StarLinkMessage.mGenDeviceMsg value) {
/*  5653 */         if (this.genericDeviceMsgBuilder_ == null) {
/*  5654 */           if ((this.bitField0_ & 0x4000) != 0 && this.genericDeviceMsg_ != null && this.genericDeviceMsg_ != 
/*       */             
/*  5656 */             StarLinkMessage.mGenDeviceMsg.getDefaultInstance()) {
/*  5657 */             this
/*  5658 */               .genericDeviceMsg_ = StarLinkMessage.mGenDeviceMsg.newBuilder(this.genericDeviceMsg_).mergeFrom(value).buildPartial();
/*       */           } else {
/*  5660 */             this.genericDeviceMsg_ = value;
/*       */           } 
/*  5662 */           onChanged();
/*       */         } else {
/*  5664 */           this.genericDeviceMsgBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*  5666 */         this.bitField0_ |= 0x4000;
/*  5667 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearGenericDeviceMsg() {
/*  5673 */         if (this.genericDeviceMsgBuilder_ == null) {
/*  5674 */           this.genericDeviceMsg_ = null;
/*  5675 */           onChanged();
/*       */         } else {
/*  5677 */           this.genericDeviceMsgBuilder_.clear();
/*       */         } 
/*  5679 */         this.bitField0_ &= 0xFFFFBFFF;
/*  5680 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public StarLinkMessage.mGenDeviceMsg.Builder getGenericDeviceMsgBuilder() {
/*  5686 */         this.bitField0_ |= 0x4000;
/*  5687 */         onChanged();
/*  5688 */         return (StarLinkMessage.mGenDeviceMsg.Builder)getGenericDeviceMsgFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public StarLinkMessage.mGenDeviceMsgOrBuilder getGenericDeviceMsgOrBuilder() {
/*  5694 */         if (this.genericDeviceMsgBuilder_ != null) {
/*  5695 */           return (StarLinkMessage.mGenDeviceMsgOrBuilder)this.genericDeviceMsgBuilder_.getMessageOrBuilder();
/*       */         }
/*  5697 */         return (this.genericDeviceMsg_ == null) ? 
/*  5698 */           StarLinkMessage.mGenDeviceMsg.getDefaultInstance() : this.genericDeviceMsg_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<StarLinkMessage.mGenDeviceMsg, StarLinkMessage.mGenDeviceMsg.Builder, StarLinkMessage.mGenDeviceMsgOrBuilder> getGenericDeviceMsgFieldBuilder() {
/*  5707 */         if (this.genericDeviceMsgBuilder_ == null) {
/*  5708 */           this
/*       */ 
/*       */ 
/*       */             
/*  5712 */             .genericDeviceMsgBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getGenericDeviceMsg(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*  5713 */           this.genericDeviceMsg_ = null;
/*       */         } 
/*  5715 */         return this.genericDeviceMsgBuilder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasGenericDeviceFW() {
/*  5726 */         return ((this.bitField0_ & 0x8000) != 0);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public StarLinkMessage.mGenDeviceFW getGenericDeviceFW() {
/*  5733 */         if (this.genericDeviceFWBuilder_ == null) {
/*  5734 */           return (this.genericDeviceFW_ == null) ? StarLinkMessage.mGenDeviceFW.getDefaultInstance() : this.genericDeviceFW_;
/*       */         }
/*  5736 */         return (StarLinkMessage.mGenDeviceFW)this.genericDeviceFWBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setGenericDeviceFW(StarLinkMessage.mGenDeviceFW value) {
/*  5743 */         if (this.genericDeviceFWBuilder_ == null) {
/*  5744 */           if (value == null) {
/*  5745 */             throw new NullPointerException();
/*       */           }
/*  5747 */           this.genericDeviceFW_ = value;
/*  5748 */           onChanged();
/*       */         } else {
/*  5750 */           this.genericDeviceFWBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*  5752 */         this.bitField0_ |= 0x8000;
/*  5753 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setGenericDeviceFW(StarLinkMessage.mGenDeviceFW.Builder builderForValue) {
/*  5760 */         if (this.genericDeviceFWBuilder_ == null) {
/*  5761 */           this.genericDeviceFW_ = builderForValue.build();
/*  5762 */           onChanged();
/*       */         } else {
/*  5764 */           this.genericDeviceFWBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*  5766 */         this.bitField0_ |= 0x8000;
/*  5767 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeGenericDeviceFW(StarLinkMessage.mGenDeviceFW value) {
/*  5773 */         if (this.genericDeviceFWBuilder_ == null) {
/*  5774 */           if ((this.bitField0_ & 0x8000) != 0 && this.genericDeviceFW_ != null && this.genericDeviceFW_ != 
/*       */             
/*  5776 */             StarLinkMessage.mGenDeviceFW.getDefaultInstance()) {
/*  5777 */             this
/*  5778 */               .genericDeviceFW_ = StarLinkMessage.mGenDeviceFW.newBuilder(this.genericDeviceFW_).mergeFrom(value).buildPartial();
/*       */           } else {
/*  5780 */             this.genericDeviceFW_ = value;
/*       */           } 
/*  5782 */           onChanged();
/*       */         } else {
/*  5784 */           this.genericDeviceFWBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*  5786 */         this.bitField0_ |= 0x8000;
/*  5787 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearGenericDeviceFW() {
/*  5793 */         if (this.genericDeviceFWBuilder_ == null) {
/*  5794 */           this.genericDeviceFW_ = null;
/*  5795 */           onChanged();
/*       */         } else {
/*  5797 */           this.genericDeviceFWBuilder_.clear();
/*       */         } 
/*  5799 */         this.bitField0_ &= 0xFFFF7FFF;
/*  5800 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public StarLinkMessage.mGenDeviceFW.Builder getGenericDeviceFWBuilder() {
/*  5806 */         this.bitField0_ |= 0x8000;
/*  5807 */         onChanged();
/*  5808 */         return (StarLinkMessage.mGenDeviceFW.Builder)getGenericDeviceFWFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public StarLinkMessage.mGenDeviceFWOrBuilder getGenericDeviceFWOrBuilder() {
/*  5814 */         if (this.genericDeviceFWBuilder_ != null) {
/*  5815 */           return (StarLinkMessage.mGenDeviceFWOrBuilder)this.genericDeviceFWBuilder_.getMessageOrBuilder();
/*       */         }
/*  5817 */         return (this.genericDeviceFW_ == null) ? 
/*  5818 */           StarLinkMessage.mGenDeviceFW.getDefaultInstance() : this.genericDeviceFW_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<StarLinkMessage.mGenDeviceFW, StarLinkMessage.mGenDeviceFW.Builder, StarLinkMessage.mGenDeviceFWOrBuilder> getGenericDeviceFWFieldBuilder() {
/*  5827 */         if (this.genericDeviceFWBuilder_ == null) {
/*  5828 */           this
/*       */ 
/*       */ 
/*       */             
/*  5832 */             .genericDeviceFWBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getGenericDeviceFW(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*  5833 */           this.genericDeviceFW_ = null;
/*       */         } 
/*  5835 */         return this.genericDeviceFWBuilder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasReadIButton() {
/*  5846 */         return ((this.bitField0_ & 0x10000) != 0);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public StarLinkMessage.mReadIButton getReadIButton() {
/*  5853 */         if (this.readIButtonBuilder_ == null) {
/*  5854 */           return (this.readIButton_ == null) ? StarLinkMessage.mReadIButton.getDefaultInstance() : this.readIButton_;
/*       */         }
/*  5856 */         return (StarLinkMessage.mReadIButton)this.readIButtonBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setReadIButton(StarLinkMessage.mReadIButton value) {
/*  5863 */         if (this.readIButtonBuilder_ == null) {
/*  5864 */           if (value == null) {
/*  5865 */             throw new NullPointerException();
/*       */           }
/*  5867 */           this.readIButton_ = value;
/*  5868 */           onChanged();
/*       */         } else {
/*  5870 */           this.readIButtonBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*  5872 */         this.bitField0_ |= 0x10000;
/*  5873 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setReadIButton(StarLinkMessage.mReadIButton.Builder builderForValue) {
/*  5880 */         if (this.readIButtonBuilder_ == null) {
/*  5881 */           this.readIButton_ = builderForValue.build();
/*  5882 */           onChanged();
/*       */         } else {
/*  5884 */           this.readIButtonBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*  5886 */         this.bitField0_ |= 0x10000;
/*  5887 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeReadIButton(StarLinkMessage.mReadIButton value) {
/*  5893 */         if (this.readIButtonBuilder_ == null) {
/*  5894 */           if ((this.bitField0_ & 0x10000) != 0 && this.readIButton_ != null && this.readIButton_ != 
/*       */             
/*  5896 */             StarLinkMessage.mReadIButton.getDefaultInstance()) {
/*  5897 */             this
/*  5898 */               .readIButton_ = StarLinkMessage.mReadIButton.newBuilder(this.readIButton_).mergeFrom(value).buildPartial();
/*       */           } else {
/*  5900 */             this.readIButton_ = value;
/*       */           } 
/*  5902 */           onChanged();
/*       */         } else {
/*  5904 */           this.readIButtonBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*  5906 */         this.bitField0_ |= 0x10000;
/*  5907 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearReadIButton() {
/*  5913 */         if (this.readIButtonBuilder_ == null) {
/*  5914 */           this.readIButton_ = null;
/*  5915 */           onChanged();
/*       */         } else {
/*  5917 */           this.readIButtonBuilder_.clear();
/*       */         } 
/*  5919 */         this.bitField0_ &= 0xFFFEFFFF;
/*  5920 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public StarLinkMessage.mReadIButton.Builder getReadIButtonBuilder() {
/*  5926 */         this.bitField0_ |= 0x10000;
/*  5927 */         onChanged();
/*  5928 */         return (StarLinkMessage.mReadIButton.Builder)getReadIButtonFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public StarLinkMessage.mReadIButtonOrBuilder getReadIButtonOrBuilder() {
/*  5934 */         if (this.readIButtonBuilder_ != null) {
/*  5935 */           return (StarLinkMessage.mReadIButtonOrBuilder)this.readIButtonBuilder_.getMessageOrBuilder();
/*       */         }
/*  5937 */         return (this.readIButton_ == null) ? 
/*  5938 */           StarLinkMessage.mReadIButton.getDefaultInstance() : this.readIButton_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<StarLinkMessage.mReadIButton, StarLinkMessage.mReadIButton.Builder, StarLinkMessage.mReadIButtonOrBuilder> getReadIButtonFieldBuilder() {
/*  5947 */         if (this.readIButtonBuilder_ == null) {
/*  5948 */           this
/*       */ 
/*       */ 
/*       */             
/*  5952 */             .readIButtonBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getReadIButton(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*  5953 */           this.readIButton_ = null;
/*       */         } 
/*  5955 */         return this.readIButtonBuilder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasGetPattern() {
/*  5966 */         return ((this.bitField0_ & 0x20000) != 0);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public StarLinkMessage.mGetPattern getGetPattern() {
/*  5973 */         if (this.getPatternBuilder_ == null) {
/*  5974 */           return (this.getPattern_ == null) ? StarLinkMessage.mGetPattern.getDefaultInstance() : this.getPattern_;
/*       */         }
/*  5976 */         return (StarLinkMessage.mGetPattern)this.getPatternBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setGetPattern(StarLinkMessage.mGetPattern value) {
/*  5983 */         if (this.getPatternBuilder_ == null) {
/*  5984 */           if (value == null) {
/*  5985 */             throw new NullPointerException();
/*       */           }
/*  5987 */           this.getPattern_ = value;
/*  5988 */           onChanged();
/*       */         } else {
/*  5990 */           this.getPatternBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*  5992 */         this.bitField0_ |= 0x20000;
/*  5993 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setGetPattern(StarLinkMessage.mGetPattern.Builder builderForValue) {
/*  6000 */         if (this.getPatternBuilder_ == null) {
/*  6001 */           this.getPattern_ = builderForValue.build();
/*  6002 */           onChanged();
/*       */         } else {
/*  6004 */           this.getPatternBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*  6006 */         this.bitField0_ |= 0x20000;
/*  6007 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeGetPattern(StarLinkMessage.mGetPattern value) {
/*  6013 */         if (this.getPatternBuilder_ == null) {
/*  6014 */           if ((this.bitField0_ & 0x20000) != 0 && this.getPattern_ != null && this.getPattern_ != 
/*       */             
/*  6016 */             StarLinkMessage.mGetPattern.getDefaultInstance()) {
/*  6017 */             this
/*  6018 */               .getPattern_ = StarLinkMessage.mGetPattern.newBuilder(this.getPattern_).mergeFrom(value).buildPartial();
/*       */           } else {
/*  6020 */             this.getPattern_ = value;
/*       */           } 
/*  6022 */           onChanged();
/*       */         } else {
/*  6024 */           this.getPatternBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*  6026 */         this.bitField0_ |= 0x20000;
/*  6027 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearGetPattern() {
/*  6033 */         if (this.getPatternBuilder_ == null) {
/*  6034 */           this.getPattern_ = null;
/*  6035 */           onChanged();
/*       */         } else {
/*  6037 */           this.getPatternBuilder_.clear();
/*       */         } 
/*  6039 */         this.bitField0_ &= 0xFFFDFFFF;
/*  6040 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public StarLinkMessage.mGetPattern.Builder getGetPatternBuilder() {
/*  6046 */         this.bitField0_ |= 0x20000;
/*  6047 */         onChanged();
/*  6048 */         return (StarLinkMessage.mGetPattern.Builder)getGetPatternFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public StarLinkMessage.mGetPatternOrBuilder getGetPatternOrBuilder() {
/*  6054 */         if (this.getPatternBuilder_ != null) {
/*  6055 */           return (StarLinkMessage.mGetPatternOrBuilder)this.getPatternBuilder_.getMessageOrBuilder();
/*       */         }
/*  6057 */         return (this.getPattern_ == null) ? 
/*  6058 */           StarLinkMessage.mGetPattern.getDefaultInstance() : this.getPattern_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<StarLinkMessage.mGetPattern, StarLinkMessage.mGetPattern.Builder, StarLinkMessage.mGetPatternOrBuilder> getGetPatternFieldBuilder() {
/*  6067 */         if (this.getPatternBuilder_ == null) {
/*  6068 */           this
/*       */ 
/*       */ 
/*       */             
/*  6072 */             .getPatternBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getGetPattern(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*  6073 */           this.getPattern_ = null;
/*       */         } 
/*  6075 */         return this.getPatternBuilder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasMultiParameter() {
/*  6086 */         return ((this.bitField0_ & 0x40000) != 0);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public StarLinkMessage.mMultiParam getMultiParameter() {
/*  6093 */         if (this.multiParameterBuilder_ == null) {
/*  6094 */           return (this.multiParameter_ == null) ? StarLinkMessage.mMultiParam.getDefaultInstance() : this.multiParameter_;
/*       */         }
/*  6096 */         return (StarLinkMessage.mMultiParam)this.multiParameterBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setMultiParameter(StarLinkMessage.mMultiParam value) {
/*  6103 */         if (this.multiParameterBuilder_ == null) {
/*  6104 */           if (value == null) {
/*  6105 */             throw new NullPointerException();
/*       */           }
/*  6107 */           this.multiParameter_ = value;
/*  6108 */           onChanged();
/*       */         } else {
/*  6110 */           this.multiParameterBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*  6112 */         this.bitField0_ |= 0x40000;
/*  6113 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setMultiParameter(StarLinkMessage.mMultiParam.Builder builderForValue) {
/*  6120 */         if (this.multiParameterBuilder_ == null) {
/*  6121 */           this.multiParameter_ = builderForValue.build();
/*  6122 */           onChanged();
/*       */         } else {
/*  6124 */           this.multiParameterBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*  6126 */         this.bitField0_ |= 0x40000;
/*  6127 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeMultiParameter(StarLinkMessage.mMultiParam value) {
/*  6133 */         if (this.multiParameterBuilder_ == null) {
/*  6134 */           if ((this.bitField0_ & 0x40000) != 0 && this.multiParameter_ != null && this.multiParameter_ != 
/*       */             
/*  6136 */             StarLinkMessage.mMultiParam.getDefaultInstance()) {
/*  6137 */             this
/*  6138 */               .multiParameter_ = StarLinkMessage.mMultiParam.newBuilder(this.multiParameter_).mergeFrom(value).buildPartial();
/*       */           } else {
/*  6140 */             this.multiParameter_ = value;
/*       */           } 
/*  6142 */           onChanged();
/*       */         } else {
/*  6144 */           this.multiParameterBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*  6146 */         this.bitField0_ |= 0x40000;
/*  6147 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearMultiParameter() {
/*  6153 */         if (this.multiParameterBuilder_ == null) {
/*  6154 */           this.multiParameter_ = null;
/*  6155 */           onChanged();
/*       */         } else {
/*  6157 */           this.multiParameterBuilder_.clear();
/*       */         } 
/*  6159 */         this.bitField0_ &= 0xFFFBFFFF;
/*  6160 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public StarLinkMessage.mMultiParam.Builder getMultiParameterBuilder() {
/*  6166 */         this.bitField0_ |= 0x40000;
/*  6167 */         onChanged();
/*  6168 */         return (StarLinkMessage.mMultiParam.Builder)getMultiParameterFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public StarLinkMessage.mMultiParamOrBuilder getMultiParameterOrBuilder() {
/*  6174 */         if (this.multiParameterBuilder_ != null) {
/*  6175 */           return (StarLinkMessage.mMultiParamOrBuilder)this.multiParameterBuilder_.getMessageOrBuilder();
/*       */         }
/*  6177 */         return (this.multiParameter_ == null) ? 
/*  6178 */           StarLinkMessage.mMultiParam.getDefaultInstance() : this.multiParameter_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<StarLinkMessage.mMultiParam, StarLinkMessage.mMultiParam.Builder, StarLinkMessage.mMultiParamOrBuilder> getMultiParameterFieldBuilder() {
/*  6187 */         if (this.multiParameterBuilder_ == null) {
/*  6188 */           this
/*       */ 
/*       */ 
/*       */             
/*  6192 */             .multiParameterBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getMultiParameter(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*  6193 */           this.multiParameter_ = null;
/*       */         } 
/*  6195 */         return this.multiParameterBuilder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasTempConfig() {
/*  6206 */         return ((this.bitField0_ & 0x80000) != 0);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public StarLinkMessage.mTempConfig getTempConfig() {
/*  6213 */         if (this.tempConfigBuilder_ == null) {
/*  6214 */           return (this.tempConfig_ == null) ? StarLinkMessage.mTempConfig.getDefaultInstance() : this.tempConfig_;
/*       */         }
/*  6216 */         return (StarLinkMessage.mTempConfig)this.tempConfigBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setTempConfig(StarLinkMessage.mTempConfig value) {
/*  6223 */         if (this.tempConfigBuilder_ == null) {
/*  6224 */           if (value == null) {
/*  6225 */             throw new NullPointerException();
/*       */           }
/*  6227 */           this.tempConfig_ = value;
/*  6228 */           onChanged();
/*       */         } else {
/*  6230 */           this.tempConfigBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*  6232 */         this.bitField0_ |= 0x80000;
/*  6233 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setTempConfig(StarLinkMessage.mTempConfig.Builder builderForValue) {
/*  6240 */         if (this.tempConfigBuilder_ == null) {
/*  6241 */           this.tempConfig_ = builderForValue.build();
/*  6242 */           onChanged();
/*       */         } else {
/*  6244 */           this.tempConfigBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*  6246 */         this.bitField0_ |= 0x80000;
/*  6247 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeTempConfig(StarLinkMessage.mTempConfig value) {
/*  6253 */         if (this.tempConfigBuilder_ == null) {
/*  6254 */           if ((this.bitField0_ & 0x80000) != 0 && this.tempConfig_ != null && this.tempConfig_ != 
/*       */             
/*  6256 */             StarLinkMessage.mTempConfig.getDefaultInstance()) {
/*  6257 */             this
/*  6258 */               .tempConfig_ = StarLinkMessage.mTempConfig.newBuilder(this.tempConfig_).mergeFrom(value).buildPartial();
/*       */           } else {
/*  6260 */             this.tempConfig_ = value;
/*       */           } 
/*  6262 */           onChanged();
/*       */         } else {
/*  6264 */           this.tempConfigBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*  6266 */         this.bitField0_ |= 0x80000;
/*  6267 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearTempConfig() {
/*  6273 */         if (this.tempConfigBuilder_ == null) {
/*  6274 */           this.tempConfig_ = null;
/*  6275 */           onChanged();
/*       */         } else {
/*  6277 */           this.tempConfigBuilder_.clear();
/*       */         } 
/*  6279 */         this.bitField0_ &= 0xFFF7FFFF;
/*  6280 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public StarLinkMessage.mTempConfig.Builder getTempConfigBuilder() {
/*  6286 */         this.bitField0_ |= 0x80000;
/*  6287 */         onChanged();
/*  6288 */         return (StarLinkMessage.mTempConfig.Builder)getTempConfigFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public StarLinkMessage.mTempConfigOrBuilder getTempConfigOrBuilder() {
/*  6294 */         if (this.tempConfigBuilder_ != null) {
/*  6295 */           return (StarLinkMessage.mTempConfigOrBuilder)this.tempConfigBuilder_.getMessageOrBuilder();
/*       */         }
/*  6297 */         return (this.tempConfig_ == null) ? 
/*  6298 */           StarLinkMessage.mTempConfig.getDefaultInstance() : this.tempConfig_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<StarLinkMessage.mTempConfig, StarLinkMessage.mTempConfig.Builder, StarLinkMessage.mTempConfigOrBuilder> getTempConfigFieldBuilder() {
/*  6307 */         if (this.tempConfigBuilder_ == null) {
/*  6308 */           this
/*       */ 
/*       */ 
/*       */             
/*  6312 */             .tempConfigBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getTempConfig(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*  6313 */           this.tempConfig_ = null;
/*       */         } 
/*  6315 */         return this.tempConfigBuilder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasDeviceList() {
/*  6326 */         return ((this.bitField0_ & 0x100000) != 0);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public StarLinkMessage.mDeviceList getDeviceList() {
/*  6333 */         if (this.deviceListBuilder_ == null) {
/*  6334 */           return (this.deviceList_ == null) ? StarLinkMessage.mDeviceList.getDefaultInstance() : this.deviceList_;
/*       */         }
/*  6336 */         return (StarLinkMessage.mDeviceList)this.deviceListBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setDeviceList(StarLinkMessage.mDeviceList value) {
/*  6343 */         if (this.deviceListBuilder_ == null) {
/*  6344 */           if (value == null) {
/*  6345 */             throw new NullPointerException();
/*       */           }
/*  6347 */           this.deviceList_ = value;
/*  6348 */           onChanged();
/*       */         } else {
/*  6350 */           this.deviceListBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*  6352 */         this.bitField0_ |= 0x100000;
/*  6353 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setDeviceList(StarLinkMessage.mDeviceList.Builder builderForValue) {
/*  6360 */         if (this.deviceListBuilder_ == null) {
/*  6361 */           this.deviceList_ = builderForValue.build();
/*  6362 */           onChanged();
/*       */         } else {
/*  6364 */           this.deviceListBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*  6366 */         this.bitField0_ |= 0x100000;
/*  6367 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeDeviceList(StarLinkMessage.mDeviceList value) {
/*  6373 */         if (this.deviceListBuilder_ == null) {
/*  6374 */           if ((this.bitField0_ & 0x100000) != 0 && this.deviceList_ != null && this.deviceList_ != 
/*       */             
/*  6376 */             StarLinkMessage.mDeviceList.getDefaultInstance()) {
/*  6377 */             this
/*  6378 */               .deviceList_ = StarLinkMessage.mDeviceList.newBuilder(this.deviceList_).mergeFrom(value).buildPartial();
/*       */           } else {
/*  6380 */             this.deviceList_ = value;
/*       */           } 
/*  6382 */           onChanged();
/*       */         } else {
/*  6384 */           this.deviceListBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*  6386 */         this.bitField0_ |= 0x100000;
/*  6387 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearDeviceList() {
/*  6393 */         if (this.deviceListBuilder_ == null) {
/*  6394 */           this.deviceList_ = null;
/*  6395 */           onChanged();
/*       */         } else {
/*  6397 */           this.deviceListBuilder_.clear();
/*       */         } 
/*  6399 */         this.bitField0_ &= 0xFFEFFFFF;
/*  6400 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public StarLinkMessage.mDeviceList.Builder getDeviceListBuilder() {
/*  6406 */         this.bitField0_ |= 0x100000;
/*  6407 */         onChanged();
/*  6408 */         return (StarLinkMessage.mDeviceList.Builder)getDeviceListFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public StarLinkMessage.mDeviceListOrBuilder getDeviceListOrBuilder() {
/*  6414 */         if (this.deviceListBuilder_ != null) {
/*  6415 */           return (StarLinkMessage.mDeviceListOrBuilder)this.deviceListBuilder_.getMessageOrBuilder();
/*       */         }
/*  6417 */         return (this.deviceList_ == null) ? 
/*  6418 */           StarLinkMessage.mDeviceList.getDefaultInstance() : this.deviceList_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<StarLinkMessage.mDeviceList, StarLinkMessage.mDeviceList.Builder, StarLinkMessage.mDeviceListOrBuilder> getDeviceListFieldBuilder() {
/*  6427 */         if (this.deviceListBuilder_ == null) {
/*  6428 */           this
/*       */ 
/*       */ 
/*       */             
/*  6432 */             .deviceListBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getDeviceList(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*  6433 */           this.deviceList_ = null;
/*       */         } 
/*  6435 */         return this.deviceListBuilder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasTeachRemote() {
/*  6446 */         return ((this.bitField0_ & 0x200000) != 0);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public StarLinkMessage.mTeachRemote getTeachRemote() {
/*  6453 */         if (this.teachRemoteBuilder_ == null) {
/*  6454 */           return (this.teachRemote_ == null) ? StarLinkMessage.mTeachRemote.getDefaultInstance() : this.teachRemote_;
/*       */         }
/*  6456 */         return (StarLinkMessage.mTeachRemote)this.teachRemoteBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setTeachRemote(StarLinkMessage.mTeachRemote value) {
/*  6463 */         if (this.teachRemoteBuilder_ == null) {
/*  6464 */           if (value == null) {
/*  6465 */             throw new NullPointerException();
/*       */           }
/*  6467 */           this.teachRemote_ = value;
/*  6468 */           onChanged();
/*       */         } else {
/*  6470 */           this.teachRemoteBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*  6472 */         this.bitField0_ |= 0x200000;
/*  6473 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setTeachRemote(StarLinkMessage.mTeachRemote.Builder builderForValue) {
/*  6480 */         if (this.teachRemoteBuilder_ == null) {
/*  6481 */           this.teachRemote_ = builderForValue.build();
/*  6482 */           onChanged();
/*       */         } else {
/*  6484 */           this.teachRemoteBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*  6486 */         this.bitField0_ |= 0x200000;
/*  6487 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeTeachRemote(StarLinkMessage.mTeachRemote value) {
/*  6493 */         if (this.teachRemoteBuilder_ == null) {
/*  6494 */           if ((this.bitField0_ & 0x200000) != 0 && this.teachRemote_ != null && this.teachRemote_ != 
/*       */             
/*  6496 */             StarLinkMessage.mTeachRemote.getDefaultInstance()) {
/*  6497 */             this
/*  6498 */               .teachRemote_ = StarLinkMessage.mTeachRemote.newBuilder(this.teachRemote_).mergeFrom(value).buildPartial();
/*       */           } else {
/*  6500 */             this.teachRemote_ = value;
/*       */           } 
/*  6502 */           onChanged();
/*       */         } else {
/*  6504 */           this.teachRemoteBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*  6506 */         this.bitField0_ |= 0x200000;
/*  6507 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearTeachRemote() {
/*  6513 */         if (this.teachRemoteBuilder_ == null) {
/*  6514 */           this.teachRemote_ = null;
/*  6515 */           onChanged();
/*       */         } else {
/*  6517 */           this.teachRemoteBuilder_.clear();
/*       */         } 
/*  6519 */         this.bitField0_ &= 0xFFDFFFFF;
/*  6520 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public StarLinkMessage.mTeachRemote.Builder getTeachRemoteBuilder() {
/*  6526 */         this.bitField0_ |= 0x200000;
/*  6527 */         onChanged();
/*  6528 */         return (StarLinkMessage.mTeachRemote.Builder)getTeachRemoteFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public StarLinkMessage.mTeachRemoteOrBuilder getTeachRemoteOrBuilder() {
/*  6534 */         if (this.teachRemoteBuilder_ != null) {
/*  6535 */           return (StarLinkMessage.mTeachRemoteOrBuilder)this.teachRemoteBuilder_.getMessageOrBuilder();
/*       */         }
/*  6537 */         return (this.teachRemote_ == null) ? 
/*  6538 */           StarLinkMessage.mTeachRemote.getDefaultInstance() : this.teachRemote_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<StarLinkMessage.mTeachRemote, StarLinkMessage.mTeachRemote.Builder, StarLinkMessage.mTeachRemoteOrBuilder> getTeachRemoteFieldBuilder() {
/*  6547 */         if (this.teachRemoteBuilder_ == null) {
/*  6548 */           this
/*       */ 
/*       */ 
/*       */             
/*  6552 */             .teachRemoteBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getTeachRemote(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*  6553 */           this.teachRemote_ = null;
/*       */         } 
/*  6555 */         return this.teachRemoteBuilder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasAuthenticate() {
/*  6566 */         return ((this.bitField0_ & 0x400000) != 0);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public StarLinkMessage.mAuthenticate getAuthenticate() {
/*  6573 */         if (this.authenticateBuilder_ == null) {
/*  6574 */           return (this.authenticate_ == null) ? StarLinkMessage.mAuthenticate.getDefaultInstance() : this.authenticate_;
/*       */         }
/*  6576 */         return (StarLinkMessage.mAuthenticate)this.authenticateBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setAuthenticate(StarLinkMessage.mAuthenticate value) {
/*  6583 */         if (this.authenticateBuilder_ == null) {
/*  6584 */           if (value == null) {
/*  6585 */             throw new NullPointerException();
/*       */           }
/*  6587 */           this.authenticate_ = value;
/*  6588 */           onChanged();
/*       */         } else {
/*  6590 */           this.authenticateBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*  6592 */         this.bitField0_ |= 0x400000;
/*  6593 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setAuthenticate(StarLinkMessage.mAuthenticate.Builder builderForValue) {
/*  6600 */         if (this.authenticateBuilder_ == null) {
/*  6601 */           this.authenticate_ = builderForValue.build();
/*  6602 */           onChanged();
/*       */         } else {
/*  6604 */           this.authenticateBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*  6606 */         this.bitField0_ |= 0x400000;
/*  6607 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeAuthenticate(StarLinkMessage.mAuthenticate value) {
/*  6613 */         if (this.authenticateBuilder_ == null) {
/*  6614 */           if ((this.bitField0_ & 0x400000) != 0 && this.authenticate_ != null && this.authenticate_ != 
/*       */             
/*  6616 */             StarLinkMessage.mAuthenticate.getDefaultInstance()) {
/*  6617 */             this
/*  6618 */               .authenticate_ = StarLinkMessage.mAuthenticate.newBuilder(this.authenticate_).mergeFrom(value).buildPartial();
/*       */           } else {
/*  6620 */             this.authenticate_ = value;
/*       */           } 
/*  6622 */           onChanged();
/*       */         } else {
/*  6624 */           this.authenticateBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*  6626 */         this.bitField0_ |= 0x400000;
/*  6627 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearAuthenticate() {
/*  6633 */         if (this.authenticateBuilder_ == null) {
/*  6634 */           this.authenticate_ = null;
/*  6635 */           onChanged();
/*       */         } else {
/*  6637 */           this.authenticateBuilder_.clear();
/*       */         } 
/*  6639 */         this.bitField0_ &= 0xFFBFFFFF;
/*  6640 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public StarLinkMessage.mAuthenticate.Builder getAuthenticateBuilder() {
/*  6646 */         this.bitField0_ |= 0x400000;
/*  6647 */         onChanged();
/*  6648 */         return (StarLinkMessage.mAuthenticate.Builder)getAuthenticateFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public StarLinkMessage.mAuthenticateOrBuilder getAuthenticateOrBuilder() {
/*  6654 */         if (this.authenticateBuilder_ != null) {
/*  6655 */           return (StarLinkMessage.mAuthenticateOrBuilder)this.authenticateBuilder_.getMessageOrBuilder();
/*       */         }
/*  6657 */         return (this.authenticate_ == null) ? 
/*  6658 */           StarLinkMessage.mAuthenticate.getDefaultInstance() : this.authenticate_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<StarLinkMessage.mAuthenticate, StarLinkMessage.mAuthenticate.Builder, StarLinkMessage.mAuthenticateOrBuilder> getAuthenticateFieldBuilder() {
/*  6667 */         if (this.authenticateBuilder_ == null) {
/*  6668 */           this
/*       */ 
/*       */ 
/*       */             
/*  6672 */             .authenticateBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getAuthenticate(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*  6673 */           this.authenticate_ = null;
/*       */         } 
/*  6675 */         return this.authenticateBuilder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasCurrentLocation() {
/*  6686 */         return ((this.bitField0_ & 0x800000) != 0);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public StarLinkMessage.mEventReport getCurrentLocation() {
/*  6693 */         if (this.currentLocationBuilder_ == null) {
/*  6694 */           return (this.currentLocation_ == null) ? StarLinkMessage.mEventReport.getDefaultInstance() : this.currentLocation_;
/*       */         }
/*  6696 */         return (StarLinkMessage.mEventReport)this.currentLocationBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setCurrentLocation(StarLinkMessage.mEventReport value) {
/*  6703 */         if (this.currentLocationBuilder_ == null) {
/*  6704 */           if (value == null) {
/*  6705 */             throw new NullPointerException();
/*       */           }
/*  6707 */           this.currentLocation_ = value;
/*  6708 */           onChanged();
/*       */         } else {
/*  6710 */           this.currentLocationBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*  6712 */         this.bitField0_ |= 0x800000;
/*  6713 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setCurrentLocation(StarLinkMessage.mEventReport.Builder builderForValue) {
/*  6720 */         if (this.currentLocationBuilder_ == null) {
/*  6721 */           this.currentLocation_ = builderForValue.build();
/*  6722 */           onChanged();
/*       */         } else {
/*  6724 */           this.currentLocationBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*  6726 */         this.bitField0_ |= 0x800000;
/*  6727 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeCurrentLocation(StarLinkMessage.mEventReport value) {
/*  6733 */         if (this.currentLocationBuilder_ == null) {
/*  6734 */           if ((this.bitField0_ & 0x800000) != 0 && this.currentLocation_ != null && this.currentLocation_ != 
/*       */             
/*  6736 */             StarLinkMessage.mEventReport.getDefaultInstance()) {
/*  6737 */             this
/*  6738 */               .currentLocation_ = StarLinkMessage.mEventReport.newBuilder(this.currentLocation_).mergeFrom(value).buildPartial();
/*       */           } else {
/*  6740 */             this.currentLocation_ = value;
/*       */           } 
/*  6742 */           onChanged();
/*       */         } else {
/*  6744 */           this.currentLocationBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*  6746 */         this.bitField0_ |= 0x800000;
/*  6747 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearCurrentLocation() {
/*  6753 */         if (this.currentLocationBuilder_ == null) {
/*  6754 */           this.currentLocation_ = null;
/*  6755 */           onChanged();
/*       */         } else {
/*  6757 */           this.currentLocationBuilder_.clear();
/*       */         } 
/*  6759 */         this.bitField0_ &= 0xFF7FFFFF;
/*  6760 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public StarLinkMessage.mEventReport.Builder getCurrentLocationBuilder() {
/*  6766 */         this.bitField0_ |= 0x800000;
/*  6767 */         onChanged();
/*  6768 */         return (StarLinkMessage.mEventReport.Builder)getCurrentLocationFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public StarLinkMessage.mEventReportOrBuilder getCurrentLocationOrBuilder() {
/*  6774 */         if (this.currentLocationBuilder_ != null) {
/*  6775 */           return (StarLinkMessage.mEventReportOrBuilder)this.currentLocationBuilder_.getMessageOrBuilder();
/*       */         }
/*  6777 */         return (this.currentLocation_ == null) ? 
/*  6778 */           StarLinkMessage.mEventReport.getDefaultInstance() : this.currentLocation_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<StarLinkMessage.mEventReport, StarLinkMessage.mEventReport.Builder, StarLinkMessage.mEventReportOrBuilder> getCurrentLocationFieldBuilder() {
/*  6787 */         if (this.currentLocationBuilder_ == null) {
/*  6788 */           this
/*       */ 
/*       */ 
/*       */             
/*  6792 */             .currentLocationBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getCurrentLocation(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*  6793 */           this.currentLocation_ = null;
/*       */         } 
/*  6795 */         return this.currentLocationBuilder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasConfigServer() {
/*  6806 */         return ((this.bitField0_ & 0x1000000) != 0);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public StarLinkMessage.mConfigServer getConfigServer() {
/*  6813 */         if (this.configServerBuilder_ == null) {
/*  6814 */           return (this.configServer_ == null) ? StarLinkMessage.mConfigServer.getDefaultInstance() : this.configServer_;
/*       */         }
/*  6816 */         return (StarLinkMessage.mConfigServer)this.configServerBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setConfigServer(StarLinkMessage.mConfigServer value) {
/*  6823 */         if (this.configServerBuilder_ == null) {
/*  6824 */           if (value == null) {
/*  6825 */             throw new NullPointerException();
/*       */           }
/*  6827 */           this.configServer_ = value;
/*  6828 */           onChanged();
/*       */         } else {
/*  6830 */           this.configServerBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*  6832 */         this.bitField0_ |= 0x1000000;
/*  6833 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setConfigServer(StarLinkMessage.mConfigServer.Builder builderForValue) {
/*  6840 */         if (this.configServerBuilder_ == null) {
/*  6841 */           this.configServer_ = builderForValue.build();
/*  6842 */           onChanged();
/*       */         } else {
/*  6844 */           this.configServerBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*  6846 */         this.bitField0_ |= 0x1000000;
/*  6847 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeConfigServer(StarLinkMessage.mConfigServer value) {
/*  6853 */         if (this.configServerBuilder_ == null) {
/*  6854 */           if ((this.bitField0_ & 0x1000000) != 0 && this.configServer_ != null && this.configServer_ != 
/*       */             
/*  6856 */             StarLinkMessage.mConfigServer.getDefaultInstance()) {
/*  6857 */             this
/*  6858 */               .configServer_ = StarLinkMessage.mConfigServer.newBuilder(this.configServer_).mergeFrom(value).buildPartial();
/*       */           } else {
/*  6860 */             this.configServer_ = value;
/*       */           } 
/*  6862 */           onChanged();
/*       */         } else {
/*  6864 */           this.configServerBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*  6866 */         this.bitField0_ |= 0x1000000;
/*  6867 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearConfigServer() {
/*  6873 */         if (this.configServerBuilder_ == null) {
/*  6874 */           this.configServer_ = null;
/*  6875 */           onChanged();
/*       */         } else {
/*  6877 */           this.configServerBuilder_.clear();
/*       */         } 
/*  6879 */         this.bitField0_ &= 0xFEFFFFFF;
/*  6880 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public StarLinkMessage.mConfigServer.Builder getConfigServerBuilder() {
/*  6886 */         this.bitField0_ |= 0x1000000;
/*  6887 */         onChanged();
/*  6888 */         return (StarLinkMessage.mConfigServer.Builder)getConfigServerFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public StarLinkMessage.mConfigServerOrBuilder getConfigServerOrBuilder() {
/*  6894 */         if (this.configServerBuilder_ != null) {
/*  6895 */           return (StarLinkMessage.mConfigServerOrBuilder)this.configServerBuilder_.getMessageOrBuilder();
/*       */         }
/*  6897 */         return (this.configServer_ == null) ? 
/*  6898 */           StarLinkMessage.mConfigServer.getDefaultInstance() : this.configServer_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<StarLinkMessage.mConfigServer, StarLinkMessage.mConfigServer.Builder, StarLinkMessage.mConfigServerOrBuilder> getConfigServerFieldBuilder() {
/*  6907 */         if (this.configServerBuilder_ == null) {
/*  6908 */           this
/*       */ 
/*       */ 
/*       */             
/*  6912 */             .configServerBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getConfigServer(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*  6913 */           this.configServer_ = null;
/*       */         } 
/*  6915 */         return this.configServerBuilder_;
/*       */       }
/*       */ 
/*       */       
/*       */       public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
/*  6920 */         return (Builder)super.setUnknownFields(unknownFields);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
/*  6926 */         return (Builder)super.mergeUnknownFields(unknownFields);
/*       */       } }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*  6936 */     private static final mMessage DEFAULT_INSTANCE = new mMessage();
/*       */ 
/*       */     
/*       */     public static mMessage getDefaultInstance() {
/*  6940 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */     
/*       */     @Deprecated
/*  6944 */     public static final Parser<mMessage> PARSER = (Parser<mMessage>)new AbstractParser<mMessage>()
/*       */       {
/*       */ 
/*       */         
/*       */         public StarLinkMessage.mMessage parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException
/*       */         {
/*  6950 */           return new StarLinkMessage.mMessage(input, extensionRegistry);
/*       */         }
/*       */       };
/*       */     
/*       */     public static Parser<mMessage> parser() {
/*  6955 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public Parser<mMessage> getParserForType() {
/*  6960 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public mMessage getDefaultInstanceForType() {
/*  6965 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */   }
/*       */ 
/*       */ 
/*       */   
/*       */   public static interface mWakeUpOrBuilder
/*       */     extends MessageOrBuilder
/*       */   {
/*       */     boolean hasUnitVersion();
/*       */ 
/*       */ 
/*       */     
/*       */     String getUnitVersion();
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getUnitVersionBytes();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasProtocolVersion();
/*       */ 
/*       */ 
/*       */     
/*       */     String getProtocolVersion();
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getProtocolVersionBytes();
/*       */   }
/*       */ 
/*       */ 
/*       */   
/*       */   public static final class mWakeUp
/*       */     extends GeneratedMessageV3
/*       */     implements mWakeUpOrBuilder
/*       */   {
/*       */     private static final long serialVersionUID = 0L;
/*       */ 
/*       */     
/*       */     private int bitField0_;
/*       */ 
/*       */     
/*       */     public static final int UNITVERSION_FIELD_NUMBER = 1;
/*       */     
/*       */     private volatile Object unitVersion_;
/*       */     
/*       */     public static final int PROTOCOLVERSION_FIELD_NUMBER = 2;
/*       */     
/*       */     private volatile Object protocolVersion_;
/*       */     
/*       */     private byte memoizedIsInitialized;
/*       */ 
/*       */     
/*       */     private mWakeUp(GeneratedMessageV3.Builder<?> builder)
/*       */     {
/*  7022 */       super(builder);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*  7201 */       this.memoizedIsInitialized = -1; } private mWakeUp() { this.memoizedIsInitialized = -1; this.unitVersion_ = ""; this.protocolVersion_ = ""; } protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) { return new mWakeUp(); } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private mWakeUp(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this(); if (extensionRegistry == null) throw new NullPointerException();  int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { ByteString bs; int tag = input.readTag(); switch (tag) { case 0: done = true; continue;case 10: bs = input.readBytes(); this.bitField0_ |= 0x1; this.unitVersion_ = bs; continue;case 18: bs = input.readBytes(); this.bitField0_ |= 0x2; this.protocolVersion_ = bs; continue; }  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this); } finally { this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_mWakeUp_descriptor; } protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() { return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_mWakeUp_fieldAccessorTable.ensureFieldAccessorsInitialized(mWakeUp.class, Builder.class); } public boolean hasUnitVersion() { return ((this.bitField0_ & 0x1) != 0); } public String getUnitVersion() { Object ref = this.unitVersion_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.unitVersion_ = s;  return s; } public ByteString getUnitVersionBytes() { Object ref = this.unitVersion_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.unitVersion_ = b; return b; }  return (ByteString)ref; } public boolean hasProtocolVersion() { return ((this.bitField0_ & 0x2) != 0); }
/*       */     public String getProtocolVersion() { Object ref = this.protocolVersion_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.protocolVersion_ = s;  return s; }
/*       */     public ByteString getProtocolVersionBytes() { Object ref = this.protocolVersion_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.protocolVersion_ = b; return b; }  return (ByteString)ref; }
/*  7204 */     public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized;
/*  7205 */       if (isInitialized == 1) return true; 
/*  7206 */       if (isInitialized == 0) return false;
/*       */       
/*  7208 */       if (!hasUnitVersion()) {
/*  7209 */         this.memoizedIsInitialized = 0;
/*  7210 */         return false;
/*       */       } 
/*  7212 */       if (!hasProtocolVersion()) {
/*  7213 */         this.memoizedIsInitialized = 0;
/*  7214 */         return false;
/*       */       } 
/*  7216 */       this.memoizedIsInitialized = 1;
/*  7217 */       return true; }
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/*  7223 */       if ((this.bitField0_ & 0x1) != 0) {
/*  7224 */         GeneratedMessageV3.writeString(output, 1, this.unitVersion_);
/*       */       }
/*  7226 */       if ((this.bitField0_ & 0x2) != 0) {
/*  7227 */         GeneratedMessageV3.writeString(output, 2, this.protocolVersion_);
/*       */       }
/*  7229 */       this.unknownFields.writeTo(output);
/*       */     }
/*       */ 
/*       */     
/*       */     public int getSerializedSize() {
/*  7234 */       int size = this.memoizedSize;
/*  7235 */       if (size != -1) return size;
/*       */       
/*  7237 */       size = 0;
/*  7238 */       if ((this.bitField0_ & 0x1) != 0) {
/*  7239 */         size += GeneratedMessageV3.computeStringSize(1, this.unitVersion_);
/*       */       }
/*  7241 */       if ((this.bitField0_ & 0x2) != 0) {
/*  7242 */         size += GeneratedMessageV3.computeStringSize(2, this.protocolVersion_);
/*       */       }
/*  7244 */       size += this.unknownFields.getSerializedSize();
/*  7245 */       this.memoizedSize = size;
/*  7246 */       return size;
/*       */     }
/*       */ 
/*       */     
/*       */     public boolean equals(Object obj) {
/*  7251 */       if (obj == this) {
/*  7252 */         return true;
/*       */       }
/*  7254 */       if (!(obj instanceof mWakeUp)) {
/*  7255 */         return super.equals(obj);
/*       */       }
/*  7257 */       mWakeUp other = (mWakeUp)obj;
/*       */       
/*  7259 */       if (hasUnitVersion() != other.hasUnitVersion()) return false; 
/*  7260 */       if (hasUnitVersion() && 
/*       */         
/*  7262 */         !getUnitVersion().equals(other.getUnitVersion())) return false;
/*       */       
/*  7264 */       if (hasProtocolVersion() != other.hasProtocolVersion()) return false; 
/*  7265 */       if (hasProtocolVersion() && 
/*       */         
/*  7267 */         !getProtocolVersion().equals(other.getProtocolVersion())) return false;
/*       */       
/*  7269 */       if (!this.unknownFields.equals(other.unknownFields)) return false; 
/*  7270 */       return true;
/*       */     }
/*       */ 
/*       */     
/*       */     public int hashCode() {
/*  7275 */       if (this.memoizedHashCode != 0) {
/*  7276 */         return this.memoizedHashCode;
/*       */       }
/*  7278 */       int hash = 41;
/*  7279 */       hash = 19 * hash + getDescriptor().hashCode();
/*  7280 */       if (hasUnitVersion()) {
/*  7281 */         hash = 37 * hash + 1;
/*  7282 */         hash = 53 * hash + getUnitVersion().hashCode();
/*       */       } 
/*  7284 */       if (hasProtocolVersion()) {
/*  7285 */         hash = 37 * hash + 2;
/*  7286 */         hash = 53 * hash + getProtocolVersion().hashCode();
/*       */       } 
/*  7288 */       hash = 29 * hash + this.unknownFields.hashCode();
/*  7289 */       this.memoizedHashCode = hash;
/*  7290 */       return hash;
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mWakeUp parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
/*  7296 */       return (mWakeUp)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mWakeUp parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*  7302 */       return (mWakeUp)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static mWakeUp parseFrom(ByteString data) throws InvalidProtocolBufferException {
/*  7307 */       return (mWakeUp)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mWakeUp parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*  7313 */       return (mWakeUp)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static mWakeUp parseFrom(byte[] data) throws InvalidProtocolBufferException {
/*  7317 */       return (mWakeUp)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mWakeUp parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*  7323 */       return (mWakeUp)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static mWakeUp parseFrom(InputStream input) throws IOException {
/*  7327 */       return 
/*  7328 */         (mWakeUp)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mWakeUp parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*  7334 */       return 
/*  7335 */         (mWakeUp)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static mWakeUp parseDelimitedFrom(InputStream input) throws IOException {
/*  7339 */       return 
/*  7340 */         (mWakeUp)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mWakeUp parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*  7346 */       return 
/*  7347 */         (mWakeUp)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static mWakeUp parseFrom(CodedInputStream input) throws IOException {
/*  7352 */       return 
/*  7353 */         (mWakeUp)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mWakeUp parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*  7359 */       return 
/*  7360 */         (mWakeUp)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public Builder newBuilderForType() {
/*  7364 */       return newBuilder();
/*       */     } public static Builder newBuilder() {
/*  7366 */       return DEFAULT_INSTANCE.toBuilder();
/*       */     }
/*       */     public static Builder newBuilder(mWakeUp prototype) {
/*  7369 */       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
/*       */     }
/*       */     
/*       */     public Builder toBuilder() {
/*  7373 */       return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder())
/*  7374 */         .mergeFrom(this);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
/*  7380 */       Builder builder = new Builder(parent);
/*  7381 */       return builder;
/*       */     }
/*       */ 
/*       */     
/*       */     public static final class Builder
/*       */       extends GeneratedMessageV3.Builder<Builder>
/*       */       implements StarLinkMessage.mWakeUpOrBuilder
/*       */     {
/*       */       private int bitField0_;
/*       */       
/*       */       private Object unitVersion_;
/*       */       
/*       */       private Object protocolVersion_;
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/*  7396 */         return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_mWakeUp_descriptor;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
/*  7402 */         return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_mWakeUp_fieldAccessorTable
/*  7403 */           .ensureFieldAccessorsInitialized(StarLinkMessage.mWakeUp.class, Builder.class);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private Builder()
/*       */       {
/*  7560 */         this.unitVersion_ = "";
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/*  7644 */         this.protocolVersion_ = ""; maybeForceBuilderInitialization(); } private Builder(GeneratedMessageV3.BuilderParent parent) { super(parent); this.unitVersion_ = ""; this.protocolVersion_ = ""; maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (StarLinkMessage.mWakeUp.alwaysUseFieldBuilders); } public Builder clear() { super.clear(); this.unitVersion_ = ""; this.bitField0_ &= 0xFFFFFFFE; this.protocolVersion_ = ""; this.bitField0_ &= 0xFFFFFFFD; return this; } public Descriptors.Descriptor getDescriptorForType() { return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_mWakeUp_descriptor; } public StarLinkMessage.mWakeUp getDefaultInstanceForType() { return StarLinkMessage.mWakeUp.getDefaultInstance(); } public StarLinkMessage.mWakeUp build() { StarLinkMessage.mWakeUp result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public StarLinkMessage.mWakeUp buildPartial() { StarLinkMessage.mWakeUp result = new StarLinkMessage.mWakeUp(this); int from_bitField0_ = this.bitField0_; int to_bitField0_ = 0; if ((from_bitField0_ & 0x1) != 0) to_bitField0_ |= 0x1;  result.unitVersion_ = this.unitVersion_; if ((from_bitField0_ & 0x2) != 0) to_bitField0_ |= 0x2;  result.protocolVersion_ = this.protocolVersion_; result.bitField0_ = to_bitField0_; onBuilt(); return result; } public Builder clone() { return (Builder)super.clone(); } public Builder setField(Descriptors.FieldDescriptor field, Object value) { return (Builder)super.setField(field, value); } public Builder clearField(Descriptors.FieldDescriptor field) { return (Builder)super.clearField(field); } public Builder clearOneof(Descriptors.OneofDescriptor oneof) { return (Builder)super.clearOneof(oneof); } public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) { return (Builder)super.setRepeatedField(field, index, value); } public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) { return (Builder)super.addRepeatedField(field, value); } public Builder mergeFrom(Message other) { if (other instanceof StarLinkMessage.mWakeUp) return mergeFrom((StarLinkMessage.mWakeUp)other);  super.mergeFrom(other); return this; } public Builder mergeFrom(StarLinkMessage.mWakeUp other) { if (other == StarLinkMessage.mWakeUp.getDefaultInstance()) return this;  if (other.hasUnitVersion()) { this.bitField0_ |= 0x1; this.unitVersion_ = other.unitVersion_; onChanged(); }  if (other.hasProtocolVersion()) { this.bitField0_ |= 0x2; this.protocolVersion_ = other.protocolVersion_; onChanged(); }  mergeUnknownFields(other.unknownFields); onChanged(); return this; } public final boolean isInitialized() { if (!hasUnitVersion()) return false;  if (!hasProtocolVersion()) return false;  return true; } public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { StarLinkMessage.mWakeUp parsedMessage = null; try { parsedMessage = (StarLinkMessage.mWakeUp)StarLinkMessage.mWakeUp.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (StarLinkMessage.mWakeUp)e.getUnfinishedMessage(); throw e.unwrapIOException(); } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; } public boolean hasUnitVersion() { return ((this.bitField0_ & 0x1) != 0); }
/*       */       public String getUnitVersion() { Object ref = this.unitVersion_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.unitVersion_ = s;  return s; }  return (String)ref; }
/*       */       public ByteString getUnitVersionBytes() { Object ref = this.unitVersion_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.unitVersion_ = b; return b; }  return (ByteString)ref; }
/*       */       public Builder setUnitVersion(String value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x1; this.unitVersion_ = value; onChanged(); return this; }
/*       */       public Builder clearUnitVersion() { this.bitField0_ &= 0xFFFFFFFE; this.unitVersion_ = StarLinkMessage.mWakeUp.getDefaultInstance().getUnitVersion(); onChanged(); return this; }
/*       */       public Builder setUnitVersionBytes(ByteString value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x1; this.unitVersion_ = value; onChanged(); return this; }
/*  7650 */       public boolean hasProtocolVersion() { return ((this.bitField0_ & 0x2) != 0); }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public String getProtocolVersion() {
/*  7657 */         Object ref = this.protocolVersion_;
/*  7658 */         if (!(ref instanceof String)) {
/*  7659 */           ByteString bs = (ByteString)ref;
/*       */           
/*  7661 */           String s = bs.toStringUtf8();
/*  7662 */           if (bs.isValidUtf8()) {
/*  7663 */             this.protocolVersion_ = s;
/*       */           }
/*  7665 */           return s;
/*       */         } 
/*  7667 */         return (String)ref;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public ByteString getProtocolVersionBytes() {
/*  7676 */         Object ref = this.protocolVersion_;
/*  7677 */         if (ref instanceof String) {
/*       */           
/*  7679 */           ByteString b = ByteString.copyFromUtf8((String)ref);
/*       */           
/*  7681 */           this.protocolVersion_ = b;
/*  7682 */           return b;
/*       */         } 
/*  7684 */         return (ByteString)ref;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setProtocolVersion(String value) {
/*  7694 */         if (value == null) {
/*  7695 */           throw new NullPointerException();
/*       */         }
/*  7697 */         this.bitField0_ |= 0x2;
/*  7698 */         this.protocolVersion_ = value;
/*  7699 */         onChanged();
/*  7700 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearProtocolVersion() {
/*  7707 */         this.bitField0_ &= 0xFFFFFFFD;
/*  7708 */         this.protocolVersion_ = StarLinkMessage.mWakeUp.getDefaultInstance().getProtocolVersion();
/*  7709 */         onChanged();
/*  7710 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setProtocolVersionBytes(ByteString value) {
/*  7719 */         if (value == null) {
/*  7720 */           throw new NullPointerException();
/*       */         }
/*  7722 */         this.bitField0_ |= 0x2;
/*  7723 */         this.protocolVersion_ = value;
/*  7724 */         onChanged();
/*  7725 */         return this;
/*       */       }
/*       */ 
/*       */       
/*       */       public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
/*  7730 */         return (Builder)super.setUnknownFields(unknownFields);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
/*  7736 */         return (Builder)super.mergeUnknownFields(unknownFields);
/*       */       }
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*  7746 */     private static final mWakeUp DEFAULT_INSTANCE = new mWakeUp();
/*       */ 
/*       */     
/*       */     public static mWakeUp getDefaultInstance() {
/*  7750 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */     
/*       */     @Deprecated
/*  7754 */     public static final Parser<mWakeUp> PARSER = (Parser<mWakeUp>)new AbstractParser<mWakeUp>()
/*       */       {
/*       */ 
/*       */         
/*       */         public StarLinkMessage.mWakeUp parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException
/*       */         {
/*  7760 */           return new StarLinkMessage.mWakeUp(input, extensionRegistry);
/*       */         }
/*       */       };
/*       */     
/*       */     public static Parser<mWakeUp> parser() {
/*  7765 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public Parser<mWakeUp> getParserForType() {
/*  7770 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public mWakeUp getDefaultInstanceForType() {
/*  7775 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public static interface mConfirmationOrBuilder
/*       */     extends MessageOrBuilder
/*       */   {
/*       */     boolean hasResultCode();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getResultCode();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasReferenceNumber();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getReferenceNumber();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasMessageType();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getMessageType();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasParameterAck();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getParameterAck();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasParametersChanged();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getParametersChanged();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasParametersFailed();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getParametersFailed();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     List<Integer> getParameterFailedListList();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getParameterFailedListCount();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getParameterFailedList(int param1Int);
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasCodesInList();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getCodesInList();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasEmptySlots();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getEmptySlots();
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public static final class mConfirmation
/*       */     extends GeneratedMessageV3
/*       */     implements mConfirmationOrBuilder
/*       */   {
/*       */     private static final long serialVersionUID = 0L;
/*       */ 
/*       */     
/*       */     private int bitField0_;
/*       */ 
/*       */     
/*       */     public static final int RESULTCODE_FIELD_NUMBER = 1;
/*       */ 
/*       */     
/*       */     private int resultCode_;
/*       */ 
/*       */     
/*       */     public static final int REFERENCENUMBER_FIELD_NUMBER = 2;
/*       */ 
/*       */     
/*       */     private int referenceNumber_;
/*       */ 
/*       */     
/*       */     public static final int MESSAGETYPE_FIELD_NUMBER = 3;
/*       */ 
/*       */     
/*       */     private int messageType_;
/*       */ 
/*       */     
/*       */     public static final int PARAMETERACK_FIELD_NUMBER = 4;
/*       */ 
/*       */     
/*       */     private int parameterAck_;
/*       */ 
/*       */     
/*       */     public static final int PARAMETERSCHANGED_FIELD_NUMBER = 5;
/*       */ 
/*       */     
/*       */     private int parametersChanged_;
/*       */ 
/*       */     
/*       */     public static final int PARAMETERSFAILED_FIELD_NUMBER = 6;
/*       */ 
/*       */     
/*       */     private int parametersFailed_;
/*       */ 
/*       */     
/*       */     public static final int PARAMETERFAILEDLIST_FIELD_NUMBER = 9;
/*       */ 
/*       */     
/*       */     private Internal.IntList parameterFailedList_;
/*       */ 
/*       */     
/*       */     public static final int CODESINLIST_FIELD_NUMBER = 7;
/*       */ 
/*       */     
/*       */     private int codesInList_;
/*       */ 
/*       */     
/*       */     public static final int EMPTYSLOTS_FIELD_NUMBER = 8;
/*       */ 
/*       */     
/*       */     private int emptySlots_;
/*       */ 
/*       */     
/*       */     private byte memoizedIsInitialized;
/*       */ 
/*       */ 
/*       */     
/*       */     private mConfirmation(GeneratedMessageV3.Builder<?> builder)
/*       */     {
/*  7951 */       super(builder);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*  8312 */       this.memoizedIsInitialized = -1; } private mConfirmation() { this.memoizedIsInitialized = -1; this.parameterFailedList_ = emptyIntList(); } protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) { return new mConfirmation(); } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private mConfirmation(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this(); if (extensionRegistry == null) throw new NullPointerException();  int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { int length, limit, tag = input.readTag(); switch (tag) { case 0: done = true; continue;case 8: this.bitField0_ |= 0x1; this.resultCode_ = input.readUInt32(); continue;case 16: this.bitField0_ |= 0x2; this.referenceNumber_ = input.readUInt32(); continue;case 24: this.bitField0_ |= 0x4; this.messageType_ = input.readUInt32(); continue;case 32: this.bitField0_ |= 0x8; this.parameterAck_ = input.readUInt32(); continue;case 40: this.bitField0_ |= 0x10; this.parametersChanged_ = input.readUInt32(); continue;case 48: this.bitField0_ |= 0x20; this.parametersFailed_ = input.readUInt32(); continue;case 56: this.bitField0_ |= 0x40; this.codesInList_ = input.readUInt32(); continue;case 64: this.bitField0_ |= 0x80; this.emptySlots_ = input.readUInt32(); continue;case 72: if ((mutable_bitField0_ & 0x40) == 0) { this.parameterFailedList_ = newIntList(); mutable_bitField0_ |= 0x40; }  this.parameterFailedList_.addInt(input.readUInt32()); continue;case 74: length = input.readRawVarint32(); limit = input.pushLimit(length); if ((mutable_bitField0_ & 0x40) == 0 && input.getBytesUntilLimit() > 0) { this.parameterFailedList_ = newIntList(); mutable_bitField0_ |= 0x40; }  while (input.getBytesUntilLimit() > 0) this.parameterFailedList_.addInt(input.readUInt32());  input.popLimit(limit); continue; }  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this); } finally { if ((mutable_bitField0_ & 0x40) != 0) this.parameterFailedList_.makeImmutable();  this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_mConfirmation_descriptor; } protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() { return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_mConfirmation_fieldAccessorTable.ensureFieldAccessorsInitialized(mConfirmation.class, Builder.class); } public boolean hasResultCode() { return ((this.bitField0_ & 0x1) != 0); } public int getResultCode() { return this.resultCode_; } public boolean hasReferenceNumber() { return ((this.bitField0_ & 0x2) != 0); } public int getReferenceNumber() { return this.referenceNumber_; } public boolean hasMessageType() { return ((this.bitField0_ & 0x4) != 0); } public int getMessageType() { return this.messageType_; } public boolean hasParameterAck() { return ((this.bitField0_ & 0x8) != 0); } public int getParameterAck() { return this.parameterAck_; } public boolean hasParametersChanged() { return ((this.bitField0_ & 0x10) != 0); } public int getParametersChanged() { return this.parametersChanged_; } public boolean hasParametersFailed() { return ((this.bitField0_ & 0x20) != 0); } public int getParametersFailed() { return this.parametersFailed_; } public List<Integer> getParameterFailedListList() { return (List<Integer>)this.parameterFailedList_; } public int getParameterFailedListCount() { return this.parameterFailedList_.size(); } public int getParameterFailedList(int index) { return this.parameterFailedList_.getInt(index); } public boolean hasCodesInList() { return ((this.bitField0_ & 0x40) != 0); } public int getCodesInList() { return this.codesInList_; }
/*       */     public boolean hasEmptySlots() { return ((this.bitField0_ & 0x80) != 0); }
/*       */     public int getEmptySlots() { return this.emptySlots_; }
/*  8315 */     public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized;
/*  8316 */       if (isInitialized == 1) return true; 
/*  8317 */       if (isInitialized == 0) return false;
/*       */       
/*  8319 */       if (!hasResultCode()) {
/*  8320 */         this.memoizedIsInitialized = 0;
/*  8321 */         return false;
/*       */       } 
/*  8323 */       this.memoizedIsInitialized = 1;
/*  8324 */       return true; }
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/*  8330 */       if ((this.bitField0_ & 0x1) != 0) {
/*  8331 */         output.writeUInt32(1, this.resultCode_);
/*       */       }
/*  8333 */       if ((this.bitField0_ & 0x2) != 0) {
/*  8334 */         output.writeUInt32(2, this.referenceNumber_);
/*       */       }
/*  8336 */       if ((this.bitField0_ & 0x4) != 0) {
/*  8337 */         output.writeUInt32(3, this.messageType_);
/*       */       }
/*  8339 */       if ((this.bitField0_ & 0x8) != 0) {
/*  8340 */         output.writeUInt32(4, this.parameterAck_);
/*       */       }
/*  8342 */       if ((this.bitField0_ & 0x10) != 0) {
/*  8343 */         output.writeUInt32(5, this.parametersChanged_);
/*       */       }
/*  8345 */       if ((this.bitField0_ & 0x20) != 0) {
/*  8346 */         output.writeUInt32(6, this.parametersFailed_);
/*       */       }
/*  8348 */       if ((this.bitField0_ & 0x40) != 0) {
/*  8349 */         output.writeUInt32(7, this.codesInList_);
/*       */       }
/*  8351 */       if ((this.bitField0_ & 0x80) != 0) {
/*  8352 */         output.writeUInt32(8, this.emptySlots_);
/*       */       }
/*  8354 */       for (int i = 0; i < this.parameterFailedList_.size(); i++) {
/*  8355 */         output.writeUInt32(9, this.parameterFailedList_.getInt(i));
/*       */       }
/*  8357 */       this.unknownFields.writeTo(output);
/*       */     }
/*       */ 
/*       */     
/*       */     public int getSerializedSize() {
/*  8362 */       int size = this.memoizedSize;
/*  8363 */       if (size != -1) return size;
/*       */       
/*  8365 */       size = 0;
/*  8366 */       if ((this.bitField0_ & 0x1) != 0) {
/*  8367 */         size += 
/*  8368 */           CodedOutputStream.computeUInt32Size(1, this.resultCode_);
/*       */       }
/*  8370 */       if ((this.bitField0_ & 0x2) != 0) {
/*  8371 */         size += 
/*  8372 */           CodedOutputStream.computeUInt32Size(2, this.referenceNumber_);
/*       */       }
/*  8374 */       if ((this.bitField0_ & 0x4) != 0) {
/*  8375 */         size += 
/*  8376 */           CodedOutputStream.computeUInt32Size(3, this.messageType_);
/*       */       }
/*  8378 */       if ((this.bitField0_ & 0x8) != 0) {
/*  8379 */         size += 
/*  8380 */           CodedOutputStream.computeUInt32Size(4, this.parameterAck_);
/*       */       }
/*  8382 */       if ((this.bitField0_ & 0x10) != 0) {
/*  8383 */         size += 
/*  8384 */           CodedOutputStream.computeUInt32Size(5, this.parametersChanged_);
/*       */       }
/*  8386 */       if ((this.bitField0_ & 0x20) != 0) {
/*  8387 */         size += 
/*  8388 */           CodedOutputStream.computeUInt32Size(6, this.parametersFailed_);
/*       */       }
/*  8390 */       if ((this.bitField0_ & 0x40) != 0) {
/*  8391 */         size += 
/*  8392 */           CodedOutputStream.computeUInt32Size(7, this.codesInList_);
/*       */       }
/*  8394 */       if ((this.bitField0_ & 0x80) != 0) {
/*  8395 */         size += 
/*  8396 */           CodedOutputStream.computeUInt32Size(8, this.emptySlots_);
/*       */       }
/*       */       
/*  8399 */       int dataSize = 0;
/*  8400 */       for (int i = 0; i < this.parameterFailedList_.size(); i++) {
/*  8401 */         dataSize += 
/*  8402 */           CodedOutputStream.computeUInt32SizeNoTag(this.parameterFailedList_.getInt(i));
/*       */       }
/*  8404 */       size += dataSize;
/*  8405 */       size += 1 * getParameterFailedListList().size();
/*       */       
/*  8407 */       size += this.unknownFields.getSerializedSize();
/*  8408 */       this.memoizedSize = size;
/*  8409 */       return size;
/*       */     }
/*       */ 
/*       */     
/*       */     public boolean equals(Object obj) {
/*  8414 */       if (obj == this) {
/*  8415 */         return true;
/*       */       }
/*  8417 */       if (!(obj instanceof mConfirmation)) {
/*  8418 */         return super.equals(obj);
/*       */       }
/*  8420 */       mConfirmation other = (mConfirmation)obj;
/*       */       
/*  8422 */       if (hasResultCode() != other.hasResultCode()) return false; 
/*  8423 */       if (hasResultCode() && 
/*  8424 */         getResultCode() != other
/*  8425 */         .getResultCode()) return false;
/*       */       
/*  8427 */       if (hasReferenceNumber() != other.hasReferenceNumber()) return false; 
/*  8428 */       if (hasReferenceNumber() && 
/*  8429 */         getReferenceNumber() != other
/*  8430 */         .getReferenceNumber()) return false;
/*       */       
/*  8432 */       if (hasMessageType() != other.hasMessageType()) return false; 
/*  8433 */       if (hasMessageType() && 
/*  8434 */         getMessageType() != other
/*  8435 */         .getMessageType()) return false;
/*       */       
/*  8437 */       if (hasParameterAck() != other.hasParameterAck()) return false; 
/*  8438 */       if (hasParameterAck() && 
/*  8439 */         getParameterAck() != other
/*  8440 */         .getParameterAck()) return false;
/*       */       
/*  8442 */       if (hasParametersChanged() != other.hasParametersChanged()) return false; 
/*  8443 */       if (hasParametersChanged() && 
/*  8444 */         getParametersChanged() != other
/*  8445 */         .getParametersChanged()) return false;
/*       */       
/*  8447 */       if (hasParametersFailed() != other.hasParametersFailed()) return false; 
/*  8448 */       if (hasParametersFailed() && 
/*  8449 */         getParametersFailed() != other
/*  8450 */         .getParametersFailed()) return false;
/*       */ 
/*       */       
/*  8453 */       if (!getParameterFailedListList().equals(other.getParameterFailedListList())) return false; 
/*  8454 */       if (hasCodesInList() != other.hasCodesInList()) return false; 
/*  8455 */       if (hasCodesInList() && 
/*  8456 */         getCodesInList() != other
/*  8457 */         .getCodesInList()) return false;
/*       */       
/*  8459 */       if (hasEmptySlots() != other.hasEmptySlots()) return false; 
/*  8460 */       if (hasEmptySlots() && 
/*  8461 */         getEmptySlots() != other
/*  8462 */         .getEmptySlots()) return false;
/*       */       
/*  8464 */       if (!this.unknownFields.equals(other.unknownFields)) return false; 
/*  8465 */       return true;
/*       */     }
/*       */ 
/*       */     
/*       */     public int hashCode() {
/*  8470 */       if (this.memoizedHashCode != 0) {
/*  8471 */         return this.memoizedHashCode;
/*       */       }
/*  8473 */       int hash = 41;
/*  8474 */       hash = 19 * hash + getDescriptor().hashCode();
/*  8475 */       if (hasResultCode()) {
/*  8476 */         hash = 37 * hash + 1;
/*  8477 */         hash = 53 * hash + getResultCode();
/*       */       } 
/*  8479 */       if (hasReferenceNumber()) {
/*  8480 */         hash = 37 * hash + 2;
/*  8481 */         hash = 53 * hash + getReferenceNumber();
/*       */       } 
/*  8483 */       if (hasMessageType()) {
/*  8484 */         hash = 37 * hash + 3;
/*  8485 */         hash = 53 * hash + getMessageType();
/*       */       } 
/*  8487 */       if (hasParameterAck()) {
/*  8488 */         hash = 37 * hash + 4;
/*  8489 */         hash = 53 * hash + getParameterAck();
/*       */       } 
/*  8491 */       if (hasParametersChanged()) {
/*  8492 */         hash = 37 * hash + 5;
/*  8493 */         hash = 53 * hash + getParametersChanged();
/*       */       } 
/*  8495 */       if (hasParametersFailed()) {
/*  8496 */         hash = 37 * hash + 6;
/*  8497 */         hash = 53 * hash + getParametersFailed();
/*       */       } 
/*  8499 */       if (getParameterFailedListCount() > 0) {
/*  8500 */         hash = 37 * hash + 9;
/*  8501 */         hash = 53 * hash + getParameterFailedListList().hashCode();
/*       */       } 
/*  8503 */       if (hasCodesInList()) {
/*  8504 */         hash = 37 * hash + 7;
/*  8505 */         hash = 53 * hash + getCodesInList();
/*       */       } 
/*  8507 */       if (hasEmptySlots()) {
/*  8508 */         hash = 37 * hash + 8;
/*  8509 */         hash = 53 * hash + getEmptySlots();
/*       */       } 
/*  8511 */       hash = 29 * hash + this.unknownFields.hashCode();
/*  8512 */       this.memoizedHashCode = hash;
/*  8513 */       return hash;
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mConfirmation parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
/*  8519 */       return (mConfirmation)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mConfirmation parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*  8525 */       return (mConfirmation)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static mConfirmation parseFrom(ByteString data) throws InvalidProtocolBufferException {
/*  8530 */       return (mConfirmation)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mConfirmation parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*  8536 */       return (mConfirmation)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static mConfirmation parseFrom(byte[] data) throws InvalidProtocolBufferException {
/*  8540 */       return (mConfirmation)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mConfirmation parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*  8546 */       return (mConfirmation)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static mConfirmation parseFrom(InputStream input) throws IOException {
/*  8550 */       return 
/*  8551 */         (mConfirmation)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mConfirmation parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*  8557 */       return 
/*  8558 */         (mConfirmation)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static mConfirmation parseDelimitedFrom(InputStream input) throws IOException {
/*  8562 */       return 
/*  8563 */         (mConfirmation)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mConfirmation parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*  8569 */       return 
/*  8570 */         (mConfirmation)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static mConfirmation parseFrom(CodedInputStream input) throws IOException {
/*  8575 */       return 
/*  8576 */         (mConfirmation)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mConfirmation parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*  8582 */       return 
/*  8583 */         (mConfirmation)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public Builder newBuilderForType() {
/*  8587 */       return newBuilder();
/*       */     } public static Builder newBuilder() {
/*  8589 */       return DEFAULT_INSTANCE.toBuilder();
/*       */     }
/*       */     public static Builder newBuilder(mConfirmation prototype) {
/*  8592 */       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
/*       */     }
/*       */     
/*       */     public Builder toBuilder() {
/*  8596 */       return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder())
/*  8597 */         .mergeFrom(this);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
/*  8603 */       Builder builder = new Builder(parent);
/*  8604 */       return builder;
/*       */     }
/*       */     
/*       */     public static final class Builder extends GeneratedMessageV3.Builder<Builder> implements StarLinkMessage.mConfirmationOrBuilder { private int bitField0_;
/*       */       private int resultCode_;
/*       */       private int referenceNumber_;
/*       */       private int messageType_;
/*       */       private int parameterAck_;
/*       */       private int parametersChanged_;
/*       */       private int parametersFailed_;
/*       */       private Internal.IntList parameterFailedList_;
/*       */       private int codesInList_;
/*       */       private int emptySlots_;
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/*  8619 */         return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_mConfirmation_descriptor;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
/*  8625 */         return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_mConfirmation_fieldAccessorTable
/*  8626 */           .ensureFieldAccessorsInitialized(StarLinkMessage.mConfirmation.class, Builder.class);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private Builder()
/*       */       {
/*  9161 */         this.parameterFailedList_ = StarLinkMessage.mConfirmation.emptyIntList(); maybeForceBuilderInitialization(); } private Builder(GeneratedMessageV3.BuilderParent parent) { super(parent); this.parameterFailedList_ = StarLinkMessage.mConfirmation.emptyIntList(); maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (StarLinkMessage.mConfirmation.alwaysUseFieldBuilders); } public Builder clear() { super.clear(); this.resultCode_ = 0; this.bitField0_ &= 0xFFFFFFFE; this.referenceNumber_ = 0; this.bitField0_ &= 0xFFFFFFFD; this.messageType_ = 0; this.bitField0_ &= 0xFFFFFFFB; this.parameterAck_ = 0; this.bitField0_ &= 0xFFFFFFF7; this.parametersChanged_ = 0; this.bitField0_ &= 0xFFFFFFEF; this.parametersFailed_ = 0; this.bitField0_ &= 0xFFFFFFDF; this.parameterFailedList_ = StarLinkMessage.mConfirmation.emptyIntList(); this.bitField0_ &= 0xFFFFFFBF; this.codesInList_ = 0; this.bitField0_ &= 0xFFFFFF7F; this.emptySlots_ = 0; this.bitField0_ &= 0xFFFFFEFF; return this; } public Descriptors.Descriptor getDescriptorForType() { return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_mConfirmation_descriptor; } public StarLinkMessage.mConfirmation getDefaultInstanceForType() { return StarLinkMessage.mConfirmation.getDefaultInstance(); } public StarLinkMessage.mConfirmation build() { StarLinkMessage.mConfirmation result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public StarLinkMessage.mConfirmation buildPartial() { StarLinkMessage.mConfirmation result = new StarLinkMessage.mConfirmation(this); int from_bitField0_ = this.bitField0_; int to_bitField0_ = 0; if ((from_bitField0_ & 0x1) != 0) { result.resultCode_ = this.resultCode_; to_bitField0_ |= 0x1; }  if ((from_bitField0_ & 0x2) != 0) { result.referenceNumber_ = this.referenceNumber_; to_bitField0_ |= 0x2; }  if ((from_bitField0_ & 0x4) != 0) { result.messageType_ = this.messageType_; to_bitField0_ |= 0x4; }  if ((from_bitField0_ & 0x8) != 0) { result.parameterAck_ = this.parameterAck_; to_bitField0_ |= 0x8; }  if ((from_bitField0_ & 0x10) != 0) { result.parametersChanged_ = this.parametersChanged_; to_bitField0_ |= 0x10; }  if ((from_bitField0_ & 0x20) != 0) { result.parametersFailed_ = this.parametersFailed_; to_bitField0_ |= 0x20; }  if ((this.bitField0_ & 0x40) != 0) { this.parameterFailedList_.makeImmutable(); this.bitField0_ &= 0xFFFFFFBF; }  result.parameterFailedList_ = this.parameterFailedList_; if ((from_bitField0_ & 0x80) != 0) { result.codesInList_ = this.codesInList_; to_bitField0_ |= 0x40; }  if ((from_bitField0_ & 0x100) != 0) { result.emptySlots_ = this.emptySlots_; to_bitField0_ |= 0x80; }  result.bitField0_ = to_bitField0_; onBuilt(); return result; } public Builder clone() { return (Builder)super.clone(); } public Builder setField(Descriptors.FieldDescriptor field, Object value) { return (Builder)super.setField(field, value); } public Builder clearField(Descriptors.FieldDescriptor field) { return (Builder)super.clearField(field); } public Builder clearOneof(Descriptors.OneofDescriptor oneof) { return (Builder)super.clearOneof(oneof); } public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) { return (Builder)super.setRepeatedField(field, index, value); } public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) { return (Builder)super.addRepeatedField(field, value); } public Builder mergeFrom(Message other) { if (other instanceof StarLinkMessage.mConfirmation) return mergeFrom((StarLinkMessage.mConfirmation)other);  super.mergeFrom(other); return this; } public Builder mergeFrom(StarLinkMessage.mConfirmation other) { if (other == StarLinkMessage.mConfirmation.getDefaultInstance()) return this;  if (other.hasResultCode()) setResultCode(other.getResultCode());  if (other.hasReferenceNumber()) setReferenceNumber(other.getReferenceNumber());  if (other.hasMessageType()) setMessageType(other.getMessageType());  if (other.hasParameterAck()) setParameterAck(other.getParameterAck());  if (other.hasParametersChanged()) setParametersChanged(other.getParametersChanged());  if (other.hasParametersFailed()) setParametersFailed(other.getParametersFailed());  if (!other.parameterFailedList_.isEmpty()) { if (this.parameterFailedList_.isEmpty()) { this.parameterFailedList_ = other.parameterFailedList_; this.bitField0_ &= 0xFFFFFFBF; } else { ensureParameterFailedListIsMutable(); this.parameterFailedList_.addAll((Collection)other.parameterFailedList_); }  onChanged(); }  if (other.hasCodesInList()) setCodesInList(other.getCodesInList());  if (other.hasEmptySlots()) setEmptySlots(other.getEmptySlots());  mergeUnknownFields(other.unknownFields); onChanged(); return this; } public final boolean isInitialized() { if (!hasResultCode()) return false;  return true; } public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { StarLinkMessage.mConfirmation parsedMessage = null; try { parsedMessage = (StarLinkMessage.mConfirmation)StarLinkMessage.mConfirmation.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (StarLinkMessage.mConfirmation)e.getUnfinishedMessage(); throw e.unwrapIOException(); } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; } public boolean hasResultCode() { return ((this.bitField0_ & 0x1) != 0); } public int getResultCode() { return this.resultCode_; } public Builder setResultCode(int value) { this.bitField0_ |= 0x1; this.resultCode_ = value; onChanged(); return this; } public Builder clearResultCode() { this.bitField0_ &= 0xFFFFFFFE; this.resultCode_ = 0; onChanged(); return this; } public boolean hasReferenceNumber() { return ((this.bitField0_ & 0x2) != 0); } public int getReferenceNumber() { return this.referenceNumber_; } public Builder setReferenceNumber(int value) { this.bitField0_ |= 0x2; this.referenceNumber_ = value; onChanged(); return this; } public Builder clearReferenceNumber() { this.bitField0_ &= 0xFFFFFFFD; this.referenceNumber_ = 0; onChanged(); return this; } public boolean hasMessageType() { return ((this.bitField0_ & 0x4) != 0); } public int getMessageType() { return this.messageType_; } public Builder setMessageType(int value) { this.bitField0_ |= 0x4; this.messageType_ = value; onChanged(); return this; } public Builder clearMessageType() { this.bitField0_ &= 0xFFFFFFFB; this.messageType_ = 0; onChanged(); return this; } public boolean hasParameterAck() { return ((this.bitField0_ & 0x8) != 0); } public int getParameterAck() { return this.parameterAck_; } public Builder setParameterAck(int value) { this.bitField0_ |= 0x8; this.parameterAck_ = value; onChanged(); return this; } public Builder clearParameterAck() { this.bitField0_ &= 0xFFFFFFF7; this.parameterAck_ = 0; onChanged(); return this; } public boolean hasParametersChanged() { return ((this.bitField0_ & 0x10) != 0); } public int getParametersChanged() { return this.parametersChanged_; } public Builder setParametersChanged(int value) { this.bitField0_ |= 0x10; this.parametersChanged_ = value; onChanged(); return this; } public Builder clearParametersChanged() { this.bitField0_ &= 0xFFFFFFEF; this.parametersChanged_ = 0; onChanged(); return this; } public boolean hasParametersFailed() { return ((this.bitField0_ & 0x20) != 0); } public int getParametersFailed() { return this.parametersFailed_; } public Builder setParametersFailed(int value) { this.bitField0_ |= 0x20; this.parametersFailed_ = value; onChanged(); return this; }
/*       */       public Builder clearParametersFailed() { this.bitField0_ &= 0xFFFFFFDF; this.parametersFailed_ = 0; onChanged(); return this; }
/*  9163 */       private void ensureParameterFailedListIsMutable() { if ((this.bitField0_ & 0x40) == 0) {
/*  9164 */           this.parameterFailedList_ = StarLinkMessage.mConfirmation.mutableCopy(this.parameterFailedList_);
/*  9165 */           this.bitField0_ |= 0x40;
/*       */         }  }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public List<Integer> getParameterFailedListList() {
/*  9174 */         return ((this.bitField0_ & 0x40) != 0) ? 
/*  9175 */           Collections.<Integer>unmodifiableList((List<? extends Integer>)this.parameterFailedList_) : (List<Integer>)this.parameterFailedList_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getParameterFailedListCount() {
/*  9182 */         return this.parameterFailedList_.size();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getParameterFailedList(int index) {
/*  9190 */         return this.parameterFailedList_.getInt(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setParameterFailedList(int index, int value) {
/*  9200 */         ensureParameterFailedListIsMutable();
/*  9201 */         this.parameterFailedList_.setInt(index, value);
/*  9202 */         onChanged();
/*  9203 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addParameterFailedList(int value) {
/*  9211 */         ensureParameterFailedListIsMutable();
/*  9212 */         this.parameterFailedList_.addInt(value);
/*  9213 */         onChanged();
/*  9214 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addAllParameterFailedList(Iterable<? extends Integer> values) {
/*  9223 */         ensureParameterFailedListIsMutable();
/*  9224 */         AbstractMessageLite.Builder.addAll(values, (List)this.parameterFailedList_);
/*       */         
/*  9226 */         onChanged();
/*  9227 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearParameterFailedList() {
/*  9234 */         this.parameterFailedList_ = StarLinkMessage.mConfirmation.emptyIntList();
/*  9235 */         this.bitField0_ &= 0xFFFFFFBF;
/*  9236 */         onChanged();
/*  9237 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasCodesInList() {
/*  9251 */         return ((this.bitField0_ & 0x80) != 0);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getCodesInList() {
/*  9263 */         return this.codesInList_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setCodesInList(int value) {
/*  9275 */         this.bitField0_ |= 0x80;
/*  9276 */         this.codesInList_ = value;
/*  9277 */         onChanged();
/*  9278 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearCodesInList() {
/*  9289 */         this.bitField0_ &= 0xFFFFFF7F;
/*  9290 */         this.codesInList_ = 0;
/*  9291 */         onChanged();
/*  9292 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasEmptySlots() {
/*  9302 */         return ((this.bitField0_ & 0x100) != 0);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getEmptySlots() {
/*  9310 */         return this.emptySlots_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setEmptySlots(int value) {
/*  9318 */         this.bitField0_ |= 0x100;
/*  9319 */         this.emptySlots_ = value;
/*  9320 */         onChanged();
/*  9321 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearEmptySlots() {
/*  9328 */         this.bitField0_ &= 0xFFFFFEFF;
/*  9329 */         this.emptySlots_ = 0;
/*  9330 */         onChanged();
/*  9331 */         return this;
/*       */       }
/*       */ 
/*       */       
/*       */       public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
/*  9336 */         return (Builder)super.setUnknownFields(unknownFields);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
/*  9342 */         return (Builder)super.mergeUnknownFields(unknownFields);
/*       */       } }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*  9352 */     private static final mConfirmation DEFAULT_INSTANCE = new mConfirmation();
/*       */ 
/*       */     
/*       */     public static mConfirmation getDefaultInstance() {
/*  9356 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */     
/*       */     @Deprecated
/*  9360 */     public static final Parser<mConfirmation> PARSER = (Parser<mConfirmation>)new AbstractParser<mConfirmation>()
/*       */       {
/*       */ 
/*       */         
/*       */         public StarLinkMessage.mConfirmation parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException
/*       */         {
/*  9366 */           return new StarLinkMessage.mConfirmation(input, extensionRegistry);
/*       */         }
/*       */       };
/*       */     
/*       */     public static Parser<mConfirmation> parser() {
/*  9371 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public Parser<mConfirmation> getParserForType() {
/*  9376 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public mConfirmation getDefaultInstanceForType() {
/*  9381 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */   }
/*       */ 
/*       */ 
/*       */   
/*       */   public static interface mParamResponseOrBuilder
/*       */     extends MessageOrBuilder
/*       */   {
/*       */     boolean hasParameterNumber();
/*       */ 
/*       */ 
/*       */     
/*       */     int getParameterNumber();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasValue();
/*       */ 
/*       */ 
/*       */     
/*       */     String getValue();
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getValueBytes();
/*       */   }
/*       */ 
/*       */ 
/*       */   
/*       */   public static final class mParamResponse
/*       */     extends GeneratedMessageV3
/*       */     implements mParamResponseOrBuilder
/*       */   {
/*       */     private static final long serialVersionUID = 0L;
/*       */     
/*       */     private int bitField0_;
/*       */     
/*       */     public static final int PARAMETERNUMBER_FIELD_NUMBER = 1;
/*       */     
/*       */     private int parameterNumber_;
/*       */     
/*       */     public static final int VALUE_FIELD_NUMBER = 2;
/*       */     
/*       */     private volatile Object value_;
/*       */     
/*       */     private byte memoizedIsInitialized;
/*       */ 
/*       */     
/*       */     private mParamResponse(GeneratedMessageV3.Builder<?> builder)
/*       */     {
/*  9432 */       super(builder);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*  9580 */       this.memoizedIsInitialized = -1; } private mParamResponse() { this.memoizedIsInitialized = -1; this.value_ = ""; } protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) { return new mParamResponse(); } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private mParamResponse(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this(); if (extensionRegistry == null) throw new NullPointerException();  int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { ByteString bs; int tag = input.readTag(); switch (tag) { case 0: done = true; continue;case 8: this.bitField0_ |= 0x1; this.parameterNumber_ = input.readUInt32(); continue;case 18: bs = input.readBytes(); this.bitField0_ |= 0x2; this.value_ = bs; continue; }  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this); } finally { this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_mParamResponse_descriptor; } protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() { return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_mParamResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(mParamResponse.class, Builder.class); } public boolean hasParameterNumber() { return ((this.bitField0_ & 0x1) != 0); } public int getParameterNumber() { return this.parameterNumber_; } public boolean hasValue() { return ((this.bitField0_ & 0x2) != 0); }
/*       */     public String getValue() { Object ref = this.value_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.value_ = s;  return s; }
/*       */     public ByteString getValueBytes() { Object ref = this.value_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.value_ = b; return b; }  return (ByteString)ref; }
/*  9583 */     public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized;
/*  9584 */       if (isInitialized == 1) return true; 
/*  9585 */       if (isInitialized == 0) return false;
/*       */       
/*  9587 */       if (!hasParameterNumber()) {
/*  9588 */         this.memoizedIsInitialized = 0;
/*  9589 */         return false;
/*       */       } 
/*  9591 */       if (!hasValue()) {
/*  9592 */         this.memoizedIsInitialized = 0;
/*  9593 */         return false;
/*       */       } 
/*  9595 */       this.memoizedIsInitialized = 1;
/*  9596 */       return true; }
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/*  9602 */       if ((this.bitField0_ & 0x1) != 0) {
/*  9603 */         output.writeUInt32(1, this.parameterNumber_);
/*       */       }
/*  9605 */       if ((this.bitField0_ & 0x2) != 0) {
/*  9606 */         GeneratedMessageV3.writeString(output, 2, this.value_);
/*       */       }
/*  9608 */       this.unknownFields.writeTo(output);
/*       */     }
/*       */ 
/*       */     
/*       */     public int getSerializedSize() {
/*  9613 */       int size = this.memoizedSize;
/*  9614 */       if (size != -1) return size;
/*       */       
/*  9616 */       size = 0;
/*  9617 */       if ((this.bitField0_ & 0x1) != 0) {
/*  9618 */         size += 
/*  9619 */           CodedOutputStream.computeUInt32Size(1, this.parameterNumber_);
/*       */       }
/*  9621 */       if ((this.bitField0_ & 0x2) != 0) {
/*  9622 */         size += GeneratedMessageV3.computeStringSize(2, this.value_);
/*       */       }
/*  9624 */       size += this.unknownFields.getSerializedSize();
/*  9625 */       this.memoizedSize = size;
/*  9626 */       return size;
/*       */     }
/*       */ 
/*       */     
/*       */     public boolean equals(Object obj) {
/*  9631 */       if (obj == this) {
/*  9632 */         return true;
/*       */       }
/*  9634 */       if (!(obj instanceof mParamResponse)) {
/*  9635 */         return super.equals(obj);
/*       */       }
/*  9637 */       mParamResponse other = (mParamResponse)obj;
/*       */       
/*  9639 */       if (hasParameterNumber() != other.hasParameterNumber()) return false; 
/*  9640 */       if (hasParameterNumber() && 
/*  9641 */         getParameterNumber() != other
/*  9642 */         .getParameterNumber()) return false;
/*       */       
/*  9644 */       if (hasValue() != other.hasValue()) return false; 
/*  9645 */       if (hasValue() && 
/*       */         
/*  9647 */         !getValue().equals(other.getValue())) return false;
/*       */       
/*  9649 */       if (!this.unknownFields.equals(other.unknownFields)) return false; 
/*  9650 */       return true;
/*       */     }
/*       */ 
/*       */     
/*       */     public int hashCode() {
/*  9655 */       if (this.memoizedHashCode != 0) {
/*  9656 */         return this.memoizedHashCode;
/*       */       }
/*  9658 */       int hash = 41;
/*  9659 */       hash = 19 * hash + getDescriptor().hashCode();
/*  9660 */       if (hasParameterNumber()) {
/*  9661 */         hash = 37 * hash + 1;
/*  9662 */         hash = 53 * hash + getParameterNumber();
/*       */       } 
/*  9664 */       if (hasValue()) {
/*  9665 */         hash = 37 * hash + 2;
/*  9666 */         hash = 53 * hash + getValue().hashCode();
/*       */       } 
/*  9668 */       hash = 29 * hash + this.unknownFields.hashCode();
/*  9669 */       this.memoizedHashCode = hash;
/*  9670 */       return hash;
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mParamResponse parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
/*  9676 */       return (mParamResponse)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mParamResponse parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*  9682 */       return (mParamResponse)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static mParamResponse parseFrom(ByteString data) throws InvalidProtocolBufferException {
/*  9687 */       return (mParamResponse)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mParamResponse parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*  9693 */       return (mParamResponse)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static mParamResponse parseFrom(byte[] data) throws InvalidProtocolBufferException {
/*  9697 */       return (mParamResponse)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mParamResponse parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*  9703 */       return (mParamResponse)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static mParamResponse parseFrom(InputStream input) throws IOException {
/*  9707 */       return 
/*  9708 */         (mParamResponse)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mParamResponse parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*  9714 */       return 
/*  9715 */         (mParamResponse)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static mParamResponse parseDelimitedFrom(InputStream input) throws IOException {
/*  9719 */       return 
/*  9720 */         (mParamResponse)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mParamResponse parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*  9726 */       return 
/*  9727 */         (mParamResponse)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static mParamResponse parseFrom(CodedInputStream input) throws IOException {
/*  9732 */       return 
/*  9733 */         (mParamResponse)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mParamResponse parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*  9739 */       return 
/*  9740 */         (mParamResponse)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public Builder newBuilderForType() {
/*  9744 */       return newBuilder();
/*       */     } public static Builder newBuilder() {
/*  9746 */       return DEFAULT_INSTANCE.toBuilder();
/*       */     }
/*       */     public static Builder newBuilder(mParamResponse prototype) {
/*  9749 */       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
/*       */     }
/*       */     
/*       */     public Builder toBuilder() {
/*  9753 */       return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder())
/*  9754 */         .mergeFrom(this);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
/*  9760 */       Builder builder = new Builder(parent);
/*  9761 */       return builder;
/*       */     }
/*       */ 
/*       */     
/*       */     public static final class Builder
/*       */       extends GeneratedMessageV3.Builder<Builder>
/*       */       implements StarLinkMessage.mParamResponseOrBuilder
/*       */     {
/*       */       private int bitField0_;
/*       */       
/*       */       private int parameterNumber_;
/*       */       
/*       */       private Object value_;
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/*  9776 */         return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_mParamResponse_descriptor;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
/*  9782 */         return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_mParamResponse_fieldAccessorTable
/*  9783 */           .ensureFieldAccessorsInitialized(StarLinkMessage.mParamResponse.class, Builder.class);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private Builder()
/*       */       {
/*  9977 */         this.value_ = ""; maybeForceBuilderInitialization(); } private Builder(GeneratedMessageV3.BuilderParent parent) { super(parent); this.value_ = ""; maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (StarLinkMessage.mParamResponse.alwaysUseFieldBuilders); } public Builder clear() { super.clear(); this.parameterNumber_ = 0; this.bitField0_ &= 0xFFFFFFFE; this.value_ = ""; this.bitField0_ &= 0xFFFFFFFD; return this; } public Descriptors.Descriptor getDescriptorForType() { return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_mParamResponse_descriptor; } public StarLinkMessage.mParamResponse getDefaultInstanceForType() { return StarLinkMessage.mParamResponse.getDefaultInstance(); } public StarLinkMessage.mParamResponse build() { StarLinkMessage.mParamResponse result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public StarLinkMessage.mParamResponse buildPartial() { StarLinkMessage.mParamResponse result = new StarLinkMessage.mParamResponse(this); int from_bitField0_ = this.bitField0_; int to_bitField0_ = 0; if ((from_bitField0_ & 0x1) != 0) { result.parameterNumber_ = this.parameterNumber_; to_bitField0_ |= 0x1; }  if ((from_bitField0_ & 0x2) != 0) to_bitField0_ |= 0x2;  result.value_ = this.value_; result.bitField0_ = to_bitField0_; onBuilt(); return result; } public Builder clone() { return (Builder)super.clone(); } public Builder setField(Descriptors.FieldDescriptor field, Object value) { return (Builder)super.setField(field, value); } public Builder clearField(Descriptors.FieldDescriptor field) { return (Builder)super.clearField(field); } public Builder clearOneof(Descriptors.OneofDescriptor oneof) { return (Builder)super.clearOneof(oneof); } public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) { return (Builder)super.setRepeatedField(field, index, value); } public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) { return (Builder)super.addRepeatedField(field, value); } public Builder mergeFrom(Message other) { if (other instanceof StarLinkMessage.mParamResponse) return mergeFrom((StarLinkMessage.mParamResponse)other);  super.mergeFrom(other); return this; } public Builder mergeFrom(StarLinkMessage.mParamResponse other) { if (other == StarLinkMessage.mParamResponse.getDefaultInstance()) return this;  if (other.hasParameterNumber()) setParameterNumber(other.getParameterNumber());  if (other.hasValue()) { this.bitField0_ |= 0x2; this.value_ = other.value_; onChanged(); }  mergeUnknownFields(other.unknownFields); onChanged(); return this; } public final boolean isInitialized() { if (!hasParameterNumber()) return false;  if (!hasValue()) return false;  return true; }
/*       */       public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { StarLinkMessage.mParamResponse parsedMessage = null; try { parsedMessage = (StarLinkMessage.mParamResponse)StarLinkMessage.mParamResponse.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (StarLinkMessage.mParamResponse)e.getUnfinishedMessage(); throw e.unwrapIOException(); } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; }
/*       */       public boolean hasParameterNumber() { return ((this.bitField0_ & 0x1) != 0); }
/*       */       public int getParameterNumber() { return this.parameterNumber_; }
/*       */       public Builder setParameterNumber(int value) { this.bitField0_ |= 0x1; this.parameterNumber_ = value; onChanged(); return this; }
/*       */       public Builder clearParameterNumber() { this.bitField0_ &= 0xFFFFFFFE; this.parameterNumber_ = 0; onChanged(); return this; }
/*  9983 */       public boolean hasValue() { return ((this.bitField0_ & 0x2) != 0); }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public String getValue() {
/*  9990 */         Object ref = this.value_;
/*  9991 */         if (!(ref instanceof String)) {
/*  9992 */           ByteString bs = (ByteString)ref;
/*       */           
/*  9994 */           String s = bs.toStringUtf8();
/*  9995 */           if (bs.isValidUtf8()) {
/*  9996 */             this.value_ = s;
/*       */           }
/*  9998 */           return s;
/*       */         } 
/* 10000 */         return (String)ref;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public ByteString getValueBytes() {
/* 10009 */         Object ref = this.value_;
/* 10010 */         if (ref instanceof String) {
/*       */           
/* 10012 */           ByteString b = ByteString.copyFromUtf8((String)ref);
/*       */           
/* 10014 */           this.value_ = b;
/* 10015 */           return b;
/*       */         } 
/* 10017 */         return (ByteString)ref;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setValue(String value) {
/* 10027 */         if (value == null) {
/* 10028 */           throw new NullPointerException();
/*       */         }
/* 10030 */         this.bitField0_ |= 0x2;
/* 10031 */         this.value_ = value;
/* 10032 */         onChanged();
/* 10033 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearValue() {
/* 10040 */         this.bitField0_ &= 0xFFFFFFFD;
/* 10041 */         this.value_ = StarLinkMessage.mParamResponse.getDefaultInstance().getValue();
/* 10042 */         onChanged();
/* 10043 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setValueBytes(ByteString value) {
/* 10052 */         if (value == null) {
/* 10053 */           throw new NullPointerException();
/*       */         }
/* 10055 */         this.bitField0_ |= 0x2;
/* 10056 */         this.value_ = value;
/* 10057 */         onChanged();
/* 10058 */         return this;
/*       */       }
/*       */ 
/*       */       
/*       */       public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
/* 10063 */         return (Builder)super.setUnknownFields(unknownFields);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
/* 10069 */         return (Builder)super.mergeUnknownFields(unknownFields);
/*       */       }
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 10079 */     private static final mParamResponse DEFAULT_INSTANCE = new mParamResponse();
/*       */ 
/*       */     
/*       */     public static mParamResponse getDefaultInstance() {
/* 10083 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */     
/*       */     @Deprecated
/* 10087 */     public static final Parser<mParamResponse> PARSER = (Parser<mParamResponse>)new AbstractParser<mParamResponse>()
/*       */       {
/*       */ 
/*       */         
/*       */         public StarLinkMessage.mParamResponse parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException
/*       */         {
/* 10093 */           return new StarLinkMessage.mParamResponse(input, extensionRegistry);
/*       */         }
/*       */       };
/*       */     
/*       */     public static Parser<mParamResponse> parser() {
/* 10098 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public Parser<mParamResponse> getParserForType() {
/* 10103 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public mParamResponse getDefaultInstanceForType() {
/* 10108 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public static interface mEventReportOrBuilder
/*       */     extends MessageOrBuilder
/*       */   {
/*       */     boolean hasEID();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getEID();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasEDESC();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     String getEDESC();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getEDESCBytes();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasEDT();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getEDT();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasEDTDiff();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getEDTDiff();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasNXT();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getNXT();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasNXTS();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getNXTS();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasExtraData();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     String getExtraData();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getExtraDataBytes();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasPDT();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getPDT();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasPDTDiff();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getPDTDiff();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasLAT();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getLAT();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasLATDiff();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getLATDiff();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasLONG();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getLONG();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasLONGDiff();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getLONGDiff();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasALT();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getALT();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasALTDiff();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getALTDiff();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasSPD();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getSPD();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasSPDK();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getSPDK();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasHEAD();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getHEAD();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasHDOP();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getHDOP();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasVDOP();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getVDOP();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasPDOP();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getPDOP();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasSAT();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getSAT();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasSATN();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getSATN();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasSATU();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getSATU();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasGSS();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getGSS();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasGSSN();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getGSSN();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasFIX();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getFIX();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasLOCA();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getLOCA();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasLOCS();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getLOCS();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasODO();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getODO();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasODODiff();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getODODiff();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasODOD();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getODOD();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasODODDiff();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getODODDiff();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasCID();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getCID();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasLAC();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getLAC();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasCSS();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getCSS();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasCSSDiff();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getCSSDiff();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasCTA();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getCTA();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasCCN();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getCCN();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasJAM();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean getJAM();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasNC();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getNC();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasNM();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getNM();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasNT();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getNT();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasCU();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getCU();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasVIN();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getVIN();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasVINDiff();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getVINDiff();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasVBAT();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getVBAT();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasVBATDiff();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getVBATDiff();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasV3();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getV3();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasV3Diff();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getV3Diff();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasV4();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getV4();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasV4Diff();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getV4Diff();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasBATH();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getBATH();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasBATC();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getBATC();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasSTRT();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getSTRT();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasTVI();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getTVI();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasInputs();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getInputs();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasDInputs();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getDInputs();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIgnitionEngine();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getIgnitionEngine();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasOutputs();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getOutputs();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasUSER();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     String getUSER();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getUSERBytes();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasEDV1();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     String getEDV1();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getEDV1Bytes();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasEDV2();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     String getEDV2();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getEDV2Bytes();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasEDV3();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     String getEDV3();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getEDV3Bytes();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasEDV4();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     String getEDV4();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getEDV4Bytes();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasCV1();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getCV1();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasCV2();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getCV2();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasCV3();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getCV3();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasCV4();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getCV4();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasCV5();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getCV5();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasCV6();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getCV6();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasCV7();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getCV7();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasCV8();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getCV8();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasCV9();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getCV9();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasCV10();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getCV10();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasCV11();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getCV11();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasCV12();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getCV12();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIARM();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean getIARM();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasDID();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     String getDID();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getDIDBytes();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasDAL();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     String getDAL();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getDALBytes();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasDEST();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getDEST();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasOVM();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean getOVM();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasCFL();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getCFL();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasCFL2();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getCFL2();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasRPM();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getRPM();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasDUR();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getDUR();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasTDUR();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getTDUR();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIDL();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getIDL();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasSTP();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getSTP();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     List<StarLinkMessage.mEventReport_TDx> getTDxList();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     StarLinkMessage.mEventReport_TDx getTDx(int param1Int);
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getTDxCount();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     List<? extends StarLinkMessage.mEventReport_TDxOrBuilder> getTDxOrBuilderList();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     StarLinkMessage.mEventReport_TDxOrBuilder getTDxOrBuilder(int param1Int);
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public static final class mEventReport
/*       */     extends GeneratedMessageV3
/*       */     implements mEventReportOrBuilder
/*       */   {
/*       */     private static final long serialVersionUID = 0L;
/*       */ 
/*       */ 
/*       */     
/*       */     private int bitField0_;
/*       */ 
/*       */ 
/*       */     
/*       */     private int bitField1_;
/*       */ 
/*       */ 
/*       */     
/*       */     private int bitField2_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int EID_FIELD_NUMBER = 1;
/*       */ 
/*       */ 
/*       */     
/*       */     private int eID_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int EDESC_FIELD_NUMBER = 2;
/*       */ 
/*       */ 
/*       */     
/*       */     private volatile Object eDESC_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int EDT_FIELD_NUMBER = 3;
/*       */ 
/*       */ 
/*       */     
/*       */     private int eDT_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int EDT_DIFF_FIELD_NUMBER = 4;
/*       */ 
/*       */ 
/*       */     
/*       */     private int eDTDiff_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int NXT_FIELD_NUMBER = 5;
/*       */ 
/*       */ 
/*       */     
/*       */     private int nXT_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int NXTS_FIELD_NUMBER = 81;
/*       */ 
/*       */ 
/*       */     
/*       */     private int nXTS_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int EXTRADATA_FIELD_NUMBER = 254;
/*       */ 
/*       */ 
/*       */     
/*       */     private volatile Object extraData_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int PDT_FIELD_NUMBER = 6;
/*       */ 
/*       */ 
/*       */     
/*       */     private int pDT_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int PDT_DIFF_FIELD_NUMBER = 7;
/*       */ 
/*       */ 
/*       */     
/*       */     private int pDTDiff_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int LAT_FIELD_NUMBER = 8;
/*       */ 
/*       */ 
/*       */     
/*       */     private int lAT_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int LAT_DIFF_FIELD_NUMBER = 9;
/*       */ 
/*       */ 
/*       */     
/*       */     private int lATDiff_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int LONG_FIELD_NUMBER = 10;
/*       */ 
/*       */ 
/*       */     
/*       */     private int lONG_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int LONG_DIFF_FIELD_NUMBER = 11;
/*       */ 
/*       */ 
/*       */     
/*       */     private int lONGDiff_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int ALT_FIELD_NUMBER = 12;
/*       */ 
/*       */ 
/*       */     
/*       */     private int aLT_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int ALT_DIFF_FIELD_NUMBER = 13;
/*       */ 
/*       */ 
/*       */     
/*       */     private int aLTDiff_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int SPD_FIELD_NUMBER = 14;
/*       */ 
/*       */ 
/*       */     
/*       */     private int sPD_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int SPDK_FIELD_NUMBER = 15;
/*       */ 
/*       */ 
/*       */     
/*       */     private int sPDK_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int HEAD_FIELD_NUMBER = 16;
/*       */ 
/*       */ 
/*       */     
/*       */     private int hEAD_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int HDOP_FIELD_NUMBER = 17;
/*       */ 
/*       */ 
/*       */     
/*       */     private int hDOP_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int VDOP_FIELD_NUMBER = 18;
/*       */ 
/*       */ 
/*       */     
/*       */     private int vDOP_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int PDOP_FIELD_NUMBER = 19;
/*       */ 
/*       */ 
/*       */     
/*       */     private int pDOP_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int SAT_FIELD_NUMBER = 20;
/*       */ 
/*       */ 
/*       */     
/*       */     private int sAT_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int SATN_FIELD_NUMBER = 21;
/*       */ 
/*       */ 
/*       */     
/*       */     private int sATN_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int SATU_FIELD_NUMBER = 22;
/*       */ 
/*       */ 
/*       */     
/*       */     private int sATU_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int GSS_FIELD_NUMBER = 23;
/*       */ 
/*       */ 
/*       */     
/*       */     private int gSS_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int GSSN_FIELD_NUMBER = 24;
/*       */ 
/*       */ 
/*       */     
/*       */     private int gSSN_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int FIX_FIELD_NUMBER = 25;
/*       */ 
/*       */ 
/*       */     
/*       */     private int fIX_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int LOCA_FIELD_NUMBER = 26;
/*       */ 
/*       */ 
/*       */     
/*       */     private int lOCA_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int LOCS_FIELD_NUMBER = 79;
/*       */ 
/*       */ 
/*       */     
/*       */     private int lOCS_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int ODO_FIELD_NUMBER = 27;
/*       */ 
/*       */ 
/*       */     
/*       */     private int oDO_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int ODO_DIFF_FIELD_NUMBER = 28;
/*       */ 
/*       */ 
/*       */     
/*       */     private int oDODiff_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int ODOD_FIELD_NUMBER = 29;
/*       */ 
/*       */ 
/*       */     
/*       */     private int oDOD_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int ODOD_DIFF_FIELD_NUMBER = 30;
/*       */ 
/*       */ 
/*       */     
/*       */     private int oDODDiff_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int CID_FIELD_NUMBER = 31;
/*       */ 
/*       */ 
/*       */     
/*       */     private int cID_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int LAC_FIELD_NUMBER = 32;
/*       */ 
/*       */ 
/*       */     
/*       */     private int lAC_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int CSS_FIELD_NUMBER = 33;
/*       */ 
/*       */ 
/*       */     
/*       */     private int cSS_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int CSS_DIFF_FIELD_NUMBER = 34;
/*       */ 
/*       */ 
/*       */     
/*       */     private int cSSDiff_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int CTA_FIELD_NUMBER = 35;
/*       */ 
/*       */ 
/*       */     
/*       */     private int cTA_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int CCN_FIELD_NUMBER = 36;
/*       */ 
/*       */ 
/*       */     
/*       */     private int cCN_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int JAM_FIELD_NUMBER = 37;
/*       */ 
/*       */ 
/*       */     
/*       */     private boolean jAM_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int NC_FIELD_NUMBER = 38;
/*       */ 
/*       */ 
/*       */     
/*       */     private int nC_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int NM_FIELD_NUMBER = 39;
/*       */ 
/*       */ 
/*       */     
/*       */     private int nM_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int NT_FIELD_NUMBER = 76;
/*       */ 
/*       */ 
/*       */     
/*       */     private int nT_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int CU_FIELD_NUMBER = 77;
/*       */ 
/*       */ 
/*       */     
/*       */     private int cU_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int VIN_FIELD_NUMBER = 40;
/*       */ 
/*       */ 
/*       */     
/*       */     private int vIN_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int VIN_DIFF_FIELD_NUMBER = 41;
/*       */ 
/*       */ 
/*       */     
/*       */     private int vINDiff_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int VBAT_FIELD_NUMBER = 42;
/*       */ 
/*       */ 
/*       */     
/*       */     private int vBAT_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int VBAT_DIFF_FIELD_NUMBER = 43;
/*       */ 
/*       */ 
/*       */     
/*       */     private int vBATDiff_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int V3_FIELD_NUMBER = 44;
/*       */ 
/*       */ 
/*       */     
/*       */     private int v3_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int V3_DIFF_FIELD_NUMBER = 45;
/*       */ 
/*       */ 
/*       */     
/*       */     private int v3Diff_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int V4_FIELD_NUMBER = 46;
/*       */ 
/*       */ 
/*       */     
/*       */     private int v4_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int V4_DIFF_FIELD_NUMBER = 47;
/*       */ 
/*       */ 
/*       */     
/*       */     private int v4Diff_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int BATH_FIELD_NUMBER = 48;
/*       */ 
/*       */ 
/*       */     
/*       */     private int bATH_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int BATC_FIELD_NUMBER = 49;
/*       */ 
/*       */ 
/*       */     
/*       */     private int bATC_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int STRT_FIELD_NUMBER = 50;
/*       */ 
/*       */ 
/*       */     
/*       */     private int sTRT_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int TVI_FIELD_NUMBER = 51;
/*       */ 
/*       */ 
/*       */     
/*       */     private int tVI_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int INPUTS_FIELD_NUMBER = 52;
/*       */ 
/*       */ 
/*       */     
/*       */     private int inputs_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int DINPUTS_FIELD_NUMBER = 53;
/*       */ 
/*       */ 
/*       */     
/*       */     private int dInputs_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int IGNITIONENGINE_FIELD_NUMBER = 54;
/*       */ 
/*       */ 
/*       */     
/*       */     private int ignitionEngine_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int OUTPUTS_FIELD_NUMBER = 55;
/*       */ 
/*       */ 
/*       */     
/*       */     private int outputs_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int USER_FIELD_NUMBER = 56;
/*       */ 
/*       */ 
/*       */     
/*       */     private volatile Object uSER_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int EDV1_FIELD_NUMBER = 57;
/*       */ 
/*       */ 
/*       */     
/*       */     private volatile Object eDV1_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int EDV2_FIELD_NUMBER = 58;
/*       */ 
/*       */ 
/*       */     
/*       */     private volatile Object eDV2_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int EDV3_FIELD_NUMBER = 59;
/*       */ 
/*       */ 
/*       */     
/*       */     private volatile Object eDV3_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int EDV4_FIELD_NUMBER = 60;
/*       */ 
/*       */ 
/*       */     
/*       */     private volatile Object eDV4_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int CV1_FIELD_NUMBER = 61;
/*       */ 
/*       */ 
/*       */     
/*       */     private int cV1_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int CV2_FIELD_NUMBER = 62;
/*       */ 
/*       */ 
/*       */     
/*       */     private int cV2_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int CV3_FIELD_NUMBER = 63;
/*       */ 
/*       */ 
/*       */     
/*       */     private int cV3_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int CV4_FIELD_NUMBER = 64;
/*       */ 
/*       */ 
/*       */     
/*       */     private int cV4_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int CV5_FIELD_NUMBER = 82;
/*       */ 
/*       */ 
/*       */     
/*       */     private int cV5_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int CV6_FIELD_NUMBER = 83;
/*       */ 
/*       */ 
/*       */     
/*       */     private int cV6_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int CV7_FIELD_NUMBER = 84;
/*       */ 
/*       */ 
/*       */     
/*       */     private int cV7_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int CV8_FIELD_NUMBER = 85;
/*       */ 
/*       */ 
/*       */     
/*       */     private int cV8_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int CV9_FIELD_NUMBER = 86;
/*       */ 
/*       */ 
/*       */     
/*       */     private int cV9_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int CV10_FIELD_NUMBER = 87;
/*       */ 
/*       */ 
/*       */     
/*       */     private int cV10_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int CV11_FIELD_NUMBER = 88;
/*       */ 
/*       */ 
/*       */     
/*       */     private int cV11_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int CV12_FIELD_NUMBER = 89;
/*       */ 
/*       */ 
/*       */     
/*       */     private int cV12_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int IARM_FIELD_NUMBER = 65;
/*       */ 
/*       */ 
/*       */     
/*       */     private boolean iARM_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int DID_FIELD_NUMBER = 66;
/*       */ 
/*       */ 
/*       */     
/*       */     private volatile Object dID_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int DAL_FIELD_NUMBER = 67;
/*       */ 
/*       */ 
/*       */     
/*       */     private volatile Object dAL_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int DEST_FIELD_NUMBER = 68;
/*       */ 
/*       */ 
/*       */     
/*       */     private int dEST_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int OVM_FIELD_NUMBER = 73;
/*       */ 
/*       */ 
/*       */     
/*       */     private boolean oVM_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int CFL_FIELD_NUMBER = 69;
/*       */ 
/*       */ 
/*       */     
/*       */     private int cFL_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int CFL2_FIELD_NUMBER = 80;
/*       */ 
/*       */ 
/*       */     
/*       */     private int cFL2_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int RPM_FIELD_NUMBER = 70;
/*       */ 
/*       */ 
/*       */     
/*       */     private int rPM_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int DUR_FIELD_NUMBER = 71;
/*       */ 
/*       */ 
/*       */     
/*       */     private int dUR_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int TDUR_FIELD_NUMBER = 72;
/*       */ 
/*       */ 
/*       */     
/*       */     private int tDUR_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int IDL_FIELD_NUMBER = 74;
/*       */ 
/*       */ 
/*       */     
/*       */     private int iDL_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int STP_FIELD_NUMBER = 75;
/*       */ 
/*       */ 
/*       */     
/*       */     private int sTP_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int TDX_FIELD_NUMBER = 78;
/*       */ 
/*       */ 
/*       */     
/*       */     private List<StarLinkMessage.mEventReport_TDx> tDx_;
/*       */ 
/*       */ 
/*       */     
/*       */     private byte memoizedIsInitialized;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private mEventReport(GeneratedMessageV3.Builder<?> builder)
/*       */     {
/* 11928 */       super(builder);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/* 15209 */       this.memoizedIsInitialized = -1; } private mEventReport() { this.memoizedIsInitialized = -1; this.eDESC_ = ""; this.extraData_ = ""; this.uSER_ = ""; this.eDV1_ = ""; this.eDV2_ = ""; this.eDV3_ = ""; this.eDV4_ = ""; this.dID_ = ""; this.dAL_ = ""; this.tDx_ = Collections.emptyList(); } protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) { return new mEventReport(); } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private mEventReport(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this(); if (extensionRegistry == null) throw new NullPointerException();  int mutable_bitField0_ = 0; int mutable_bitField1_ = 0; int mutable_bitField2_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { ByteString bs; int tag = input.readTag(); switch (tag) { case 0: done = true; continue;case 8: this.bitField0_ |= 0x1; this.eID_ = input.readUInt32(); continue;case 18: bs = input.readBytes(); this.bitField0_ |= 0x2; this.eDESC_ = bs; continue;case 24: this.bitField0_ |= 0x4; this.eDT_ = input.readUInt32(); continue;case 32: this.bitField0_ |= 0x8; this.eDTDiff_ = input.readSInt32(); continue;case 40: this.bitField0_ |= 0x10; this.nXT_ = input.readUInt32(); continue;case 48: this.bitField0_ |= 0x80; this.pDT_ = input.readUInt32(); continue;case 56: this.bitField0_ |= 0x100; this.pDTDiff_ = input.readSInt32(); continue;case 64: this.bitField0_ |= 0x200; this.lAT_ = input.readSInt32(); continue;case 72: this.bitField0_ |= 0x400; this.lATDiff_ = input.readSInt32(); continue;case 80: this.bitField0_ |= 0x800; this.lONG_ = input.readSInt32(); continue;case 88: this.bitField0_ |= 0x1000; this.lONGDiff_ = input.readSInt32(); continue;case 96: this.bitField0_ |= 0x2000; this.aLT_ = input.readSInt32(); continue;case 104: this.bitField0_ |= 0x4000; this.aLTDiff_ = input.readSInt32(); continue;case 112: this.bitField0_ |= 0x8000; this.sPD_ = input.readUInt32(); continue;case 120: this.bitField0_ |= 0x10000; this.sPDK_ = input.readUInt32(); continue;case 128: this.bitField0_ |= 0x20000; this.hEAD_ = input.readUInt32(); continue;case 136: this.bitField0_ |= 0x40000; this.hDOP_ = input.readUInt32(); continue;case 144: this.bitField0_ |= 0x80000; this.vDOP_ = input.readUInt32(); continue;case 152: this.bitField0_ |= 0x100000; this.pDOP_ = input.readUInt32(); continue;case 160: this.bitField0_ |= 0x200000; this.sAT_ = input.readUInt32(); continue;case 168: this.bitField0_ |= 0x400000; this.sATN_ = input.readUInt32(); continue;case 176: this.bitField0_ |= 0x800000; this.sATU_ = input.readUInt32(); continue;case 184: this.bitField0_ |= 0x1000000; this.gSS_ = input.readUInt32(); continue;case 192: this.bitField0_ |= 0x2000000; this.gSSN_ = input.readUInt32(); continue;case 200: this.bitField0_ |= 0x4000000; this.fIX_ = input.readUInt32(); continue;case 208: this.bitField0_ |= 0x8000000; this.lOCA_ = input.readUInt32(); continue;case 216: this.bitField0_ |= 0x20000000; this.oDO_ = input.readUInt32(); continue;case 224: this.bitField0_ |= 0x40000000; this.oDODiff_ = input.readSInt32(); continue;case 232: this.bitField0_ |= Integer.MIN_VALUE; this.oDOD_ = input.readUInt32(); continue;case 240: this.bitField1_ |= 0x1; this.oDODDiff_ = input.readSInt32(); continue;case 248: this.bitField1_ |= 0x2; this.cID_ = input.readUInt32(); continue;case 256: this.bitField1_ |= 0x4; this.lAC_ = input.readUInt32(); continue;case 264: this.bitField1_ |= 0x8; this.cSS_ = input.readUInt32(); continue;case 272: this.bitField1_ |= 0x10; this.cSSDiff_ = input.readSInt32(); continue;case 280: this.bitField1_ |= 0x20; this.cTA_ = input.readUInt32(); continue;case 288: this.bitField1_ |= 0x40; this.cCN_ = input.readUInt32(); continue;case 296: this.bitField1_ |= 0x80; this.jAM_ = input.readBool(); continue;case 304: this.bitField1_ |= 0x100; this.nC_ = input.readUInt32(); continue;case 312: this.bitField1_ |= 0x200; this.nM_ = input.readUInt32(); continue;case 320: this.bitField1_ |= 0x1000; this.vIN_ = input.readUInt32(); continue;case 328: this.bitField1_ |= 0x2000; this.vINDiff_ = input.readSInt32(); continue;case 336: this.bitField1_ |= 0x4000; this.vBAT_ = input.readUInt32(); continue;case 344: this.bitField1_ |= 0x8000; this.vBATDiff_ = input.readSInt32(); continue;case 352: this.bitField1_ |= 0x10000; this.v3_ = input.readUInt32(); continue;case 360: this.bitField1_ |= 0x20000; this.v3Diff_ = input.readSInt32(); continue;case 368: this.bitField1_ |= 0x40000; this.v4_ = input.readUInt32(); continue;case 376: this.bitField1_ |= 0x80000; this.v4Diff_ = input.readSInt32(); continue;case 384: this.bitField1_ |= 0x100000; this.bATH_ = input.readUInt32(); continue;case 392: this.bitField1_ |= 0x200000; this.bATC_ = input.readUInt32(); continue;case 400: this.bitField1_ |= 0x400000; this.sTRT_ = input.readUInt32(); continue;case 408: this.bitField1_ |= 0x800000; this.tVI_ = input.readSInt32(); continue;case 416: this.bitField1_ |= 0x1000000; this.inputs_ = input.readUInt32(); continue;case 424: this.bitField1_ |= 0x2000000; this.dInputs_ = input.readUInt32(); continue;case 432: this.bitField1_ |= 0x4000000; this.ignitionEngine_ = input.readUInt32(); continue;case 440: this.bitField1_ |= 0x8000000; this.outputs_ = input.readUInt32(); continue;case 450: bs = input.readBytes(); this.bitField1_ |= 0x10000000; this.uSER_ = bs; continue;case 458: bs = input.readBytes(); this.bitField1_ |= 0x20000000; this.eDV1_ = bs; continue;case 466: bs = input.readBytes(); this.bitField1_ |= 0x40000000; this.eDV2_ = bs; continue;case 474: bs = input.readBytes(); this.bitField1_ |= Integer.MIN_VALUE; this.eDV3_ = bs; continue;case 482: bs = input.readBytes(); this.bitField2_ |= 0x1; this.eDV4_ = bs; continue;case 488: this.bitField2_ |= 0x2; this.cV1_ = input.readSInt32(); continue;case 496: this.bitField2_ |= 0x4; this.cV2_ = input.readSInt32(); continue;case 504: this.bitField2_ |= 0x8; this.cV3_ = input.readSInt32(); continue;case 512: this.bitField2_ |= 0x10; this.cV4_ = input.readSInt32(); continue;case 520: this.bitField2_ |= 0x2000; this.iARM_ = input.readBool(); continue;case 530: bs = input.readBytes(); this.bitField2_ |= 0x4000; this.dID_ = bs; continue;case 538: bs = input.readBytes(); this.bitField2_ |= 0x8000; this.dAL_ = bs; continue;case 544: this.bitField2_ |= 0x10000; this.dEST_ = input.readUInt32(); continue;case 552: this.bitField2_ |= 0x40000; this.cFL_ = input.readUInt32(); continue;case 560: this.bitField2_ |= 0x100000; this.rPM_ = input.readUInt32(); continue;case 568: this.bitField2_ |= 0x200000; this.dUR_ = input.readUInt32(); continue;case 576: this.bitField2_ |= 0x400000; this.tDUR_ = input.readUInt32(); continue;case 584: this.bitField2_ |= 0x20000; this.oVM_ = input.readBool(); continue;case 592: this.bitField2_ |= 0x800000; this.iDL_ = input.readUInt32(); continue;case 600: this.bitField2_ |= 0x1000000; this.sTP_ = input.readUInt32(); continue;case 608: this.bitField1_ |= 0x400; this.nT_ = input.readUInt32(); continue;case 616: this.bitField1_ |= 0x800; this.cU_ = input.readUInt32(); continue;case 626: if ((mutable_bitField2_ & 0x2000000) == 0) { this.tDx_ = new ArrayList<>(); mutable_bitField2_ |= 0x2000000; }  this.tDx_.add(input.readMessage(StarLinkMessage.mEventReport_TDx.PARSER, extensionRegistry)); continue;case 632: this.bitField0_ |= 0x10000000; this.lOCS_ = input.readUInt32(); continue;case 640: this.bitField2_ |= 0x80000; this.cFL2_ = input.readUInt32(); continue;case 648: this.bitField0_ |= 0x20; this.nXTS_ = input.readUInt32(); continue;case 656: this.bitField2_ |= 0x20; this.cV5_ = input.readSInt32(); continue;case 664: this.bitField2_ |= 0x40; this.cV6_ = input.readSInt32(); continue;case 672: this.bitField2_ |= 0x80; this.cV7_ = input.readSInt32(); continue;case 680: this.bitField2_ |= 0x100; this.cV8_ = input.readSInt32(); continue;case 688: this.bitField2_ |= 0x200; this.cV9_ = input.readSInt32(); continue;case 696: this.bitField2_ |= 0x400; this.cV10_ = input.readSInt32(); continue;case 704: this.bitField2_ |= 0x800; this.cV11_ = input.readSInt32(); continue;case 712: this.bitField2_ |= 0x1000; this.cV12_ = input.readSInt32(); continue;case 2034: bs = input.readBytes(); this.bitField0_ |= 0x40; this.extraData_ = bs; continue; }  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this); } finally { if ((mutable_bitField2_ & 0x2000000) != 0) this.tDx_ = Collections.unmodifiableList(this.tDx_);  this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_mEventReport_descriptor; } protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() { return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_mEventReport_fieldAccessorTable.ensureFieldAccessorsInitialized(mEventReport.class, Builder.class); } public boolean hasEID() { return ((this.bitField0_ & 0x1) != 0); } public int getEID() { return this.eID_; } public boolean hasEDESC() { return ((this.bitField0_ & 0x2) != 0); } public String getEDESC() { Object ref = this.eDESC_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.eDESC_ = s;  return s; } public ByteString getEDESCBytes() { Object ref = this.eDESC_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.eDESC_ = b; return b; }  return (ByteString)ref; } public boolean hasEDT() { return ((this.bitField0_ & 0x4) != 0); } public int getEDT() { return this.eDT_; } public boolean hasEDTDiff() { return ((this.bitField0_ & 0x8) != 0); } public int getEDTDiff() { return this.eDTDiff_; } public boolean hasNXT() { return ((this.bitField0_ & 0x10) != 0); } public int getNXT() { return this.nXT_; } public boolean hasNXTS() { return ((this.bitField0_ & 0x20) != 0); } public int getNXTS() { return this.nXTS_; } public boolean hasExtraData() { return ((this.bitField0_ & 0x40) != 0); } public String getExtraData() { Object ref = this.extraData_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.extraData_ = s;  return s; } public ByteString getExtraDataBytes() { Object ref = this.extraData_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.extraData_ = b; return b; }  return (ByteString)ref; } public boolean hasPDT() { return ((this.bitField0_ & 0x80) != 0); } public int getPDT() { return this.pDT_; } public boolean hasPDTDiff() { return ((this.bitField0_ & 0x100) != 0); } public int getPDTDiff() { return this.pDTDiff_; } public boolean hasLAT() { return ((this.bitField0_ & 0x200) != 0); } public int getLAT() { return this.lAT_; } public boolean hasLATDiff() { return ((this.bitField0_ & 0x400) != 0); } public int getLATDiff() { return this.lATDiff_; } public boolean hasLONG() { return ((this.bitField0_ & 0x800) != 0); } public int getLONG() { return this.lONG_; } public boolean hasLONGDiff() { return ((this.bitField0_ & 0x1000) != 0); } public int getLONGDiff() { return this.lONGDiff_; } public boolean hasALT() { return ((this.bitField0_ & 0x2000) != 0); } public int getALT() { return this.aLT_; } public boolean hasALTDiff() { return ((this.bitField0_ & 0x4000) != 0); } public int getALTDiff() { return this.aLTDiff_; } public boolean hasSPD() { return ((this.bitField0_ & 0x8000) != 0); } public int getSPD() { return this.sPD_; } public boolean hasSPDK() { return ((this.bitField0_ & 0x10000) != 0); } public int getSPDK() { return this.sPDK_; } public boolean hasHEAD() { return ((this.bitField0_ & 0x20000) != 0); } public int getHEAD() { return this.hEAD_; } public boolean hasHDOP() { return ((this.bitField0_ & 0x40000) != 0); } public int getHDOP() { return this.hDOP_; } public boolean hasVDOP() { return ((this.bitField0_ & 0x80000) != 0); } public int getVDOP() { return this.vDOP_; } public boolean hasPDOP() { return ((this.bitField0_ & 0x100000) != 0); } public int getPDOP() { return this.pDOP_; } public boolean hasSAT() { return ((this.bitField0_ & 0x200000) != 0); } public int getSAT() { return this.sAT_; } public boolean hasSATN() { return ((this.bitField0_ & 0x400000) != 0); } public int getSATN() { return this.sATN_; } public boolean hasSATU() { return ((this.bitField0_ & 0x800000) != 0); } public int getSATU() { return this.sATU_; } public boolean hasGSS() { return ((this.bitField0_ & 0x1000000) != 0); } public int getGSS() { return this.gSS_; } public boolean hasGSSN() { return ((this.bitField0_ & 0x2000000) != 0); } public int getGSSN() { return this.gSSN_; } public boolean hasFIX() { return ((this.bitField0_ & 0x4000000) != 0); } public int getFIX() { return this.fIX_; } public boolean hasLOCA() { return ((this.bitField0_ & 0x8000000) != 0); } public int getLOCA() { return this.lOCA_; } public boolean hasLOCS() { return ((this.bitField0_ & 0x10000000) != 0); } public int getLOCS() { return this.lOCS_; } public boolean hasODO() { return ((this.bitField0_ & 0x20000000) != 0); } public int getODO() { return this.oDO_; } public boolean hasODODiff() { return ((this.bitField0_ & 0x40000000) != 0); } public int getODODiff() { return this.oDODiff_; } public boolean hasODOD() { return ((this.bitField0_ & Integer.MIN_VALUE) != 0); } public int getODOD() { return this.oDOD_; } public boolean hasODODDiff() { return ((this.bitField1_ & 0x1) != 0); } public int getODODDiff() { return this.oDODDiff_; } public boolean hasCID() { return ((this.bitField1_ & 0x2) != 0); } public int getCID() { return this.cID_; } public boolean hasLAC() { return ((this.bitField1_ & 0x4) != 0); } public int getLAC() { return this.lAC_; } public boolean hasCSS() { return ((this.bitField1_ & 0x8) != 0); } public int getCSS() { return this.cSS_; } public boolean hasCSSDiff() { return ((this.bitField1_ & 0x10) != 0); } public int getCSSDiff() { return this.cSSDiff_; } public boolean hasCTA() { return ((this.bitField1_ & 0x20) != 0); } public int getCTA() { return this.cTA_; } public boolean hasCCN() { return ((this.bitField1_ & 0x40) != 0); } public int getCCN() { return this.cCN_; } public boolean hasJAM() { return ((this.bitField1_ & 0x80) != 0); } public boolean getJAM() { return this.jAM_; } public boolean hasNC() { return ((this.bitField1_ & 0x100) != 0); } public int getNC() { return this.nC_; } public boolean hasNM() { return ((this.bitField1_ & 0x200) != 0); } public int getNM() { return this.nM_; } public boolean hasNT() { return ((this.bitField1_ & 0x400) != 0); } public int getNT() { return this.nT_; } public boolean hasCU() { return ((this.bitField1_ & 0x800) != 0); } public int getCU() { return this.cU_; } public boolean hasVIN() { return ((this.bitField1_ & 0x1000) != 0); } public int getVIN() { return this.vIN_; } public boolean hasVINDiff() { return ((this.bitField1_ & 0x2000) != 0); } public int getVINDiff() { return this.vINDiff_; } public boolean hasVBAT() { return ((this.bitField1_ & 0x4000) != 0); } public int getVBAT() { return this.vBAT_; } public boolean hasVBATDiff() { return ((this.bitField1_ & 0x8000) != 0); } public int getVBATDiff() { return this.vBATDiff_; } public boolean hasV3() { return ((this.bitField1_ & 0x10000) != 0); } public int getV3() { return this.v3_; } public boolean hasV3Diff() { return ((this.bitField1_ & 0x20000) != 0); } public int getV3Diff() { return this.v3Diff_; } public boolean hasV4() { return ((this.bitField1_ & 0x40000) != 0); } public int getV4() { return this.v4_; } public boolean hasV4Diff() { return ((this.bitField1_ & 0x80000) != 0); } public int getV4Diff() { return this.v4Diff_; } public boolean hasBATH() { return ((this.bitField1_ & 0x100000) != 0); } public int getBATH() { return this.bATH_; } public boolean hasBATC() { return ((this.bitField1_ & 0x200000) != 0); } public int getBATC() { return this.bATC_; } public boolean hasSTRT() { return ((this.bitField1_ & 0x400000) != 0); } public int getSTRT() { return this.sTRT_; } public boolean hasTVI() { return ((this.bitField1_ & 0x800000) != 0); } public int getTVI() { return this.tVI_; } public boolean hasInputs() { return ((this.bitField1_ & 0x1000000) != 0); } public int getInputs() { return this.inputs_; } public boolean hasDInputs() { return ((this.bitField1_ & 0x2000000) != 0); } public int getDInputs() { return this.dInputs_; } public boolean hasIgnitionEngine() { return ((this.bitField1_ & 0x4000000) != 0); } public int getIgnitionEngine() { return this.ignitionEngine_; } public boolean hasOutputs() { return ((this.bitField1_ & 0x8000000) != 0); } public int getOutputs() { return this.outputs_; } public boolean hasUSER() { return ((this.bitField1_ & 0x10000000) != 0); } public String getUSER() { Object ref = this.uSER_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.uSER_ = s;  return s; } public ByteString getUSERBytes() { Object ref = this.uSER_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.uSER_ = b; return b; }  return (ByteString)ref; } public boolean hasEDV1() { return ((this.bitField1_ & 0x20000000) != 0); } public String getEDV1() { Object ref = this.eDV1_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.eDV1_ = s;  return s; } public ByteString getEDV1Bytes() { Object ref = this.eDV1_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.eDV1_ = b; return b; }  return (ByteString)ref; } public boolean hasEDV2() { return ((this.bitField1_ & 0x40000000) != 0); } public String getEDV2() { Object ref = this.eDV2_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.eDV2_ = s;  return s; } public ByteString getEDV2Bytes() { Object ref = this.eDV2_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.eDV2_ = b; return b; }  return (ByteString)ref; } public boolean hasEDV3() { return ((this.bitField1_ & Integer.MIN_VALUE) != 0); } public String getEDV3() { Object ref = this.eDV3_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.eDV3_ = s;  return s; } public ByteString getEDV3Bytes() { Object ref = this.eDV3_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.eDV3_ = b; return b; }  return (ByteString)ref; } public boolean hasEDV4() { return ((this.bitField2_ & 0x1) != 0); } public String getEDV4() { Object ref = this.eDV4_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.eDV4_ = s;  return s; } public ByteString getEDV4Bytes() { Object ref = this.eDV4_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.eDV4_ = b; return b; }  return (ByteString)ref; } public boolean hasCV1() { return ((this.bitField2_ & 0x2) != 0); } public int getCV1() { return this.cV1_; } public boolean hasCV2() { return ((this.bitField2_ & 0x4) != 0); } public int getCV2() { return this.cV2_; } public boolean hasCV3() { return ((this.bitField2_ & 0x8) != 0); } public int getCV3() { return this.cV3_; } public boolean hasCV4() { return ((this.bitField2_ & 0x10) != 0); } public int getCV4() { return this.cV4_; } public boolean hasCV5() { return ((this.bitField2_ & 0x20) != 0); } public int getCV5() { return this.cV5_; } public boolean hasCV6() { return ((this.bitField2_ & 0x40) != 0); } public int getCV6() { return this.cV6_; } public boolean hasCV7() { return ((this.bitField2_ & 0x80) != 0); } public int getCV7() { return this.cV7_; } public boolean hasCV8() { return ((this.bitField2_ & 0x100) != 0); } public int getCV8() { return this.cV8_; } public boolean hasCV9() { return ((this.bitField2_ & 0x200) != 0); } public int getCV9() { return this.cV9_; } public boolean hasCV10() { return ((this.bitField2_ & 0x400) != 0); } public int getCV10() { return this.cV10_; } public boolean hasCV11() { return ((this.bitField2_ & 0x800) != 0); } public int getCV11() { return this.cV11_; } public boolean hasCV12() { return ((this.bitField2_ & 0x1000) != 0); } public int getCV12() { return this.cV12_; } public boolean hasIARM() { return ((this.bitField2_ & 0x2000) != 0); } public boolean getIARM() { return this.iARM_; } public boolean hasDID() { return ((this.bitField2_ & 0x4000) != 0); } public String getDID() { Object ref = this.dID_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.dID_ = s;  return s; } public ByteString getDIDBytes() { Object ref = this.dID_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.dID_ = b; return b; }  return (ByteString)ref; } public boolean hasDAL() { return ((this.bitField2_ & 0x8000) != 0); } public String getDAL() { Object ref = this.dAL_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.dAL_ = s;  return s; } public ByteString getDALBytes() { Object ref = this.dAL_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.dAL_ = b; return b; }  return (ByteString)ref; } public boolean hasDEST() { return ((this.bitField2_ & 0x10000) != 0); } public int getDEST() { return this.dEST_; } public boolean hasOVM() { return ((this.bitField2_ & 0x20000) != 0); } public boolean getOVM() { return this.oVM_; } public boolean hasCFL() { return ((this.bitField2_ & 0x40000) != 0); } public int getCFL() { return this.cFL_; } public boolean hasCFL2() { return ((this.bitField2_ & 0x80000) != 0); } public int getCFL2() { return this.cFL2_; } public boolean hasRPM() { return ((this.bitField2_ & 0x100000) != 0); } public int getRPM() { return this.rPM_; } public boolean hasDUR() { return ((this.bitField2_ & 0x200000) != 0); } public int getDUR() { return this.dUR_; } public boolean hasTDUR() { return ((this.bitField2_ & 0x400000) != 0); } public int getTDUR() { return this.tDUR_; } public boolean hasIDL() { return ((this.bitField2_ & 0x800000) != 0); } public int getIDL() { return this.iDL_; } public boolean hasSTP() { return ((this.bitField2_ & 0x1000000) != 0); } public int getSTP() { return this.sTP_; } public List<StarLinkMessage.mEventReport_TDx> getTDxList() { return this.tDx_; } public List<? extends StarLinkMessage.mEventReport_TDxOrBuilder> getTDxOrBuilderList() { return (List)this.tDx_; } public int getTDxCount() { return this.tDx_.size(); }
/*       */     public StarLinkMessage.mEventReport_TDx getTDx(int index) { return this.tDx_.get(index); }
/*       */     public StarLinkMessage.mEventReport_TDxOrBuilder getTDxOrBuilder(int index) { return this.tDx_.get(index); }
/* 15212 */     public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized;
/* 15213 */       if (isInitialized == 1) return true; 
/* 15214 */       if (isInitialized == 0) return false;
/*       */       
/* 15216 */       for (int i = 0; i < getTDxCount(); i++) {
/* 15217 */         if (!getTDx(i).isInitialized()) {
/* 15218 */           this.memoizedIsInitialized = 0;
/* 15219 */           return false;
/*       */         } 
/*       */       } 
/* 15222 */       this.memoizedIsInitialized = 1;
/* 15223 */       return true; }
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/* 15229 */       if ((this.bitField0_ & 0x1) != 0) {
/* 15230 */         output.writeUInt32(1, this.eID_);
/*       */       }
/* 15232 */       if ((this.bitField0_ & 0x2) != 0) {
/* 15233 */         GeneratedMessageV3.writeString(output, 2, this.eDESC_);
/*       */       }
/* 15235 */       if ((this.bitField0_ & 0x4) != 0) {
/* 15236 */         output.writeUInt32(3, this.eDT_);
/*       */       }
/* 15238 */       if ((this.bitField0_ & 0x8) != 0) {
/* 15239 */         output.writeSInt32(4, this.eDTDiff_);
/*       */       }
/* 15241 */       if ((this.bitField0_ & 0x10) != 0) {
/* 15242 */         output.writeUInt32(5, this.nXT_);
/*       */       }
/* 15244 */       if ((this.bitField0_ & 0x80) != 0) {
/* 15245 */         output.writeUInt32(6, this.pDT_);
/*       */       }
/* 15247 */       if ((this.bitField0_ & 0x100) != 0) {
/* 15248 */         output.writeSInt32(7, this.pDTDiff_);
/*       */       }
/* 15250 */       if ((this.bitField0_ & 0x200) != 0) {
/* 15251 */         output.writeSInt32(8, this.lAT_);
/*       */       }
/* 15253 */       if ((this.bitField0_ & 0x400) != 0) {
/* 15254 */         output.writeSInt32(9, this.lATDiff_);
/*       */       }
/* 15256 */       if ((this.bitField0_ & 0x800) != 0) {
/* 15257 */         output.writeSInt32(10, this.lONG_);
/*       */       }
/* 15259 */       if ((this.bitField0_ & 0x1000) != 0) {
/* 15260 */         output.writeSInt32(11, this.lONGDiff_);
/*       */       }
/* 15262 */       if ((this.bitField0_ & 0x2000) != 0) {
/* 15263 */         output.writeSInt32(12, this.aLT_);
/*       */       }
/* 15265 */       if ((this.bitField0_ & 0x4000) != 0) {
/* 15266 */         output.writeSInt32(13, this.aLTDiff_);
/*       */       }
/* 15268 */       if ((this.bitField0_ & 0x8000) != 0) {
/* 15269 */         output.writeUInt32(14, this.sPD_);
/*       */       }
/* 15271 */       if ((this.bitField0_ & 0x10000) != 0) {
/* 15272 */         output.writeUInt32(15, this.sPDK_);
/*       */       }
/* 15274 */       if ((this.bitField0_ & 0x20000) != 0) {
/* 15275 */         output.writeUInt32(16, this.hEAD_);
/*       */       }
/* 15277 */       if ((this.bitField0_ & 0x40000) != 0) {
/* 15278 */         output.writeUInt32(17, this.hDOP_);
/*       */       }
/* 15280 */       if ((this.bitField0_ & 0x80000) != 0) {
/* 15281 */         output.writeUInt32(18, this.vDOP_);
/*       */       }
/* 15283 */       if ((this.bitField0_ & 0x100000) != 0) {
/* 15284 */         output.writeUInt32(19, this.pDOP_);
/*       */       }
/* 15286 */       if ((this.bitField0_ & 0x200000) != 0) {
/* 15287 */         output.writeUInt32(20, this.sAT_);
/*       */       }
/* 15289 */       if ((this.bitField0_ & 0x400000) != 0) {
/* 15290 */         output.writeUInt32(21, this.sATN_);
/*       */       }
/* 15292 */       if ((this.bitField0_ & 0x800000) != 0) {
/* 15293 */         output.writeUInt32(22, this.sATU_);
/*       */       }
/* 15295 */       if ((this.bitField0_ & 0x1000000) != 0) {
/* 15296 */         output.writeUInt32(23, this.gSS_);
/*       */       }
/* 15298 */       if ((this.bitField0_ & 0x2000000) != 0) {
/* 15299 */         output.writeUInt32(24, this.gSSN_);
/*       */       }
/* 15301 */       if ((this.bitField0_ & 0x4000000) != 0) {
/* 15302 */         output.writeUInt32(25, this.fIX_);
/*       */       }
/* 15304 */       if ((this.bitField0_ & 0x8000000) != 0) {
/* 15305 */         output.writeUInt32(26, this.lOCA_);
/*       */       }
/* 15307 */       if ((this.bitField0_ & 0x20000000) != 0) {
/* 15308 */         output.writeUInt32(27, this.oDO_);
/*       */       }
/* 15310 */       if ((this.bitField0_ & 0x40000000) != 0) {
/* 15311 */         output.writeSInt32(28, this.oDODiff_);
/*       */       }
/* 15313 */       if ((this.bitField0_ & Integer.MIN_VALUE) != 0) {
/* 15314 */         output.writeUInt32(29, this.oDOD_);
/*       */       }
/* 15316 */       if ((this.bitField1_ & 0x1) != 0) {
/* 15317 */         output.writeSInt32(30, this.oDODDiff_);
/*       */       }
/* 15319 */       if ((this.bitField1_ & 0x2) != 0) {
/* 15320 */         output.writeUInt32(31, this.cID_);
/*       */       }
/* 15322 */       if ((this.bitField1_ & 0x4) != 0) {
/* 15323 */         output.writeUInt32(32, this.lAC_);
/*       */       }
/* 15325 */       if ((this.bitField1_ & 0x8) != 0) {
/* 15326 */         output.writeUInt32(33, this.cSS_);
/*       */       }
/* 15328 */       if ((this.bitField1_ & 0x10) != 0) {
/* 15329 */         output.writeSInt32(34, this.cSSDiff_);
/*       */       }
/* 15331 */       if ((this.bitField1_ & 0x20) != 0) {
/* 15332 */         output.writeUInt32(35, this.cTA_);
/*       */       }
/* 15334 */       if ((this.bitField1_ & 0x40) != 0) {
/* 15335 */         output.writeUInt32(36, this.cCN_);
/*       */       }
/* 15337 */       if ((this.bitField1_ & 0x80) != 0) {
/* 15338 */         output.writeBool(37, this.jAM_);
/*       */       }
/* 15340 */       if ((this.bitField1_ & 0x100) != 0) {
/* 15341 */         output.writeUInt32(38, this.nC_);
/*       */       }
/* 15343 */       if ((this.bitField1_ & 0x200) != 0) {
/* 15344 */         output.writeUInt32(39, this.nM_);
/*       */       }
/* 15346 */       if ((this.bitField1_ & 0x1000) != 0) {
/* 15347 */         output.writeUInt32(40, this.vIN_);
/*       */       }
/* 15349 */       if ((this.bitField1_ & 0x2000) != 0) {
/* 15350 */         output.writeSInt32(41, this.vINDiff_);
/*       */       }
/* 15352 */       if ((this.bitField1_ & 0x4000) != 0) {
/* 15353 */         output.writeUInt32(42, this.vBAT_);
/*       */       }
/* 15355 */       if ((this.bitField1_ & 0x8000) != 0) {
/* 15356 */         output.writeSInt32(43, this.vBATDiff_);
/*       */       }
/* 15358 */       if ((this.bitField1_ & 0x10000) != 0) {
/* 15359 */         output.writeUInt32(44, this.v3_);
/*       */       }
/* 15361 */       if ((this.bitField1_ & 0x20000) != 0) {
/* 15362 */         output.writeSInt32(45, this.v3Diff_);
/*       */       }
/* 15364 */       if ((this.bitField1_ & 0x40000) != 0) {
/* 15365 */         output.writeUInt32(46, this.v4_);
/*       */       }
/* 15367 */       if ((this.bitField1_ & 0x80000) != 0) {
/* 15368 */         output.writeSInt32(47, this.v4Diff_);
/*       */       }
/* 15370 */       if ((this.bitField1_ & 0x100000) != 0) {
/* 15371 */         output.writeUInt32(48, this.bATH_);
/*       */       }
/* 15373 */       if ((this.bitField1_ & 0x200000) != 0) {
/* 15374 */         output.writeUInt32(49, this.bATC_);
/*       */       }
/* 15376 */       if ((this.bitField1_ & 0x400000) != 0) {
/* 15377 */         output.writeUInt32(50, this.sTRT_);
/*       */       }
/* 15379 */       if ((this.bitField1_ & 0x800000) != 0) {
/* 15380 */         output.writeSInt32(51, this.tVI_);
/*       */       }
/* 15382 */       if ((this.bitField1_ & 0x1000000) != 0) {
/* 15383 */         output.writeUInt32(52, this.inputs_);
/*       */       }
/* 15385 */       if ((this.bitField1_ & 0x2000000) != 0) {
/* 15386 */         output.writeUInt32(53, this.dInputs_);
/*       */       }
/* 15388 */       if ((this.bitField1_ & 0x4000000) != 0) {
/* 15389 */         output.writeUInt32(54, this.ignitionEngine_);
/*       */       }
/* 15391 */       if ((this.bitField1_ & 0x8000000) != 0) {
/* 15392 */         output.writeUInt32(55, this.outputs_);
/*       */       }
/* 15394 */       if ((this.bitField1_ & 0x10000000) != 0) {
/* 15395 */         GeneratedMessageV3.writeString(output, 56, this.uSER_);
/*       */       }
/* 15397 */       if ((this.bitField1_ & 0x20000000) != 0) {
/* 15398 */         GeneratedMessageV3.writeString(output, 57, this.eDV1_);
/*       */       }
/* 15400 */       if ((this.bitField1_ & 0x40000000) != 0) {
/* 15401 */         GeneratedMessageV3.writeString(output, 58, this.eDV2_);
/*       */       }
/* 15403 */       if ((this.bitField1_ & Integer.MIN_VALUE) != 0) {
/* 15404 */         GeneratedMessageV3.writeString(output, 59, this.eDV3_);
/*       */       }
/* 15406 */       if ((this.bitField2_ & 0x1) != 0) {
/* 15407 */         GeneratedMessageV3.writeString(output, 60, this.eDV4_);
/*       */       }
/* 15409 */       if ((this.bitField2_ & 0x2) != 0) {
/* 15410 */         output.writeSInt32(61, this.cV1_);
/*       */       }
/* 15412 */       if ((this.bitField2_ & 0x4) != 0) {
/* 15413 */         output.writeSInt32(62, this.cV2_);
/*       */       }
/* 15415 */       if ((this.bitField2_ & 0x8) != 0) {
/* 15416 */         output.writeSInt32(63, this.cV3_);
/*       */       }
/* 15418 */       if ((this.bitField2_ & 0x10) != 0) {
/* 15419 */         output.writeSInt32(64, this.cV4_);
/*       */       }
/* 15421 */       if ((this.bitField2_ & 0x2000) != 0) {
/* 15422 */         output.writeBool(65, this.iARM_);
/*       */       }
/* 15424 */       if ((this.bitField2_ & 0x4000) != 0) {
/* 15425 */         GeneratedMessageV3.writeString(output, 66, this.dID_);
/*       */       }
/* 15427 */       if ((this.bitField2_ & 0x8000) != 0) {
/* 15428 */         GeneratedMessageV3.writeString(output, 67, this.dAL_);
/*       */       }
/* 15430 */       if ((this.bitField2_ & 0x10000) != 0) {
/* 15431 */         output.writeUInt32(68, this.dEST_);
/*       */       }
/* 15433 */       if ((this.bitField2_ & 0x40000) != 0) {
/* 15434 */         output.writeUInt32(69, this.cFL_);
/*       */       }
/* 15436 */       if ((this.bitField2_ & 0x100000) != 0) {
/* 15437 */         output.writeUInt32(70, this.rPM_);
/*       */       }
/* 15439 */       if ((this.bitField2_ & 0x200000) != 0) {
/* 15440 */         output.writeUInt32(71, this.dUR_);
/*       */       }
/* 15442 */       if ((this.bitField2_ & 0x400000) != 0) {
/* 15443 */         output.writeUInt32(72, this.tDUR_);
/*       */       }
/* 15445 */       if ((this.bitField2_ & 0x20000) != 0) {
/* 15446 */         output.writeBool(73, this.oVM_);
/*       */       }
/* 15448 */       if ((this.bitField2_ & 0x800000) != 0) {
/* 15449 */         output.writeUInt32(74, this.iDL_);
/*       */       }
/* 15451 */       if ((this.bitField2_ & 0x1000000) != 0) {
/* 15452 */         output.writeUInt32(75, this.sTP_);
/*       */       }
/* 15454 */       if ((this.bitField1_ & 0x400) != 0) {
/* 15455 */         output.writeUInt32(76, this.nT_);
/*       */       }
/* 15457 */       if ((this.bitField1_ & 0x800) != 0) {
/* 15458 */         output.writeUInt32(77, this.cU_);
/*       */       }
/* 15460 */       for (int i = 0; i < this.tDx_.size(); i++) {
/* 15461 */         output.writeMessage(78, (MessageLite)this.tDx_.get(i));
/*       */       }
/* 15463 */       if ((this.bitField0_ & 0x10000000) != 0) {
/* 15464 */         output.writeUInt32(79, this.lOCS_);
/*       */       }
/* 15466 */       if ((this.bitField2_ & 0x80000) != 0) {
/* 15467 */         output.writeUInt32(80, this.cFL2_);
/*       */       }
/* 15469 */       if ((this.bitField0_ & 0x20) != 0) {
/* 15470 */         output.writeUInt32(81, this.nXTS_);
/*       */       }
/* 15472 */       if ((this.bitField2_ & 0x20) != 0) {
/* 15473 */         output.writeSInt32(82, this.cV5_);
/*       */       }
/* 15475 */       if ((this.bitField2_ & 0x40) != 0) {
/* 15476 */         output.writeSInt32(83, this.cV6_);
/*       */       }
/* 15478 */       if ((this.bitField2_ & 0x80) != 0) {
/* 15479 */         output.writeSInt32(84, this.cV7_);
/*       */       }
/* 15481 */       if ((this.bitField2_ & 0x100) != 0) {
/* 15482 */         output.writeSInt32(85, this.cV8_);
/*       */       }
/* 15484 */       if ((this.bitField2_ & 0x200) != 0) {
/* 15485 */         output.writeSInt32(86, this.cV9_);
/*       */       }
/* 15487 */       if ((this.bitField2_ & 0x400) != 0) {
/* 15488 */         output.writeSInt32(87, this.cV10_);
/*       */       }
/* 15490 */       if ((this.bitField2_ & 0x800) != 0) {
/* 15491 */         output.writeSInt32(88, this.cV11_);
/*       */       }
/* 15493 */       if ((this.bitField2_ & 0x1000) != 0) {
/* 15494 */         output.writeSInt32(89, this.cV12_);
/*       */       }
/* 15496 */       if ((this.bitField0_ & 0x40) != 0) {
/* 15497 */         GeneratedMessageV3.writeString(output, 254, this.extraData_);
/*       */       }
/* 15499 */       this.unknownFields.writeTo(output);
/*       */     }
/*       */ 
/*       */     
/*       */     public int getSerializedSize() {
/* 15504 */       int size = this.memoizedSize;
/* 15505 */       if (size != -1) return size;
/*       */       
/* 15507 */       size = 0;
/* 15508 */       if ((this.bitField0_ & 0x1) != 0) {
/* 15509 */         size += 
/* 15510 */           CodedOutputStream.computeUInt32Size(1, this.eID_);
/*       */       }
/* 15512 */       if ((this.bitField0_ & 0x2) != 0) {
/* 15513 */         size += GeneratedMessageV3.computeStringSize(2, this.eDESC_);
/*       */       }
/* 15515 */       if ((this.bitField0_ & 0x4) != 0) {
/* 15516 */         size += 
/* 15517 */           CodedOutputStream.computeUInt32Size(3, this.eDT_);
/*       */       }
/* 15519 */       if ((this.bitField0_ & 0x8) != 0) {
/* 15520 */         size += 
/* 15521 */           CodedOutputStream.computeSInt32Size(4, this.eDTDiff_);
/*       */       }
/* 15523 */       if ((this.bitField0_ & 0x10) != 0) {
/* 15524 */         size += 
/* 15525 */           CodedOutputStream.computeUInt32Size(5, this.nXT_);
/*       */       }
/* 15527 */       if ((this.bitField0_ & 0x80) != 0) {
/* 15528 */         size += 
/* 15529 */           CodedOutputStream.computeUInt32Size(6, this.pDT_);
/*       */       }
/* 15531 */       if ((this.bitField0_ & 0x100) != 0) {
/* 15532 */         size += 
/* 15533 */           CodedOutputStream.computeSInt32Size(7, this.pDTDiff_);
/*       */       }
/* 15535 */       if ((this.bitField0_ & 0x200) != 0) {
/* 15536 */         size += 
/* 15537 */           CodedOutputStream.computeSInt32Size(8, this.lAT_);
/*       */       }
/* 15539 */       if ((this.bitField0_ & 0x400) != 0) {
/* 15540 */         size += 
/* 15541 */           CodedOutputStream.computeSInt32Size(9, this.lATDiff_);
/*       */       }
/* 15543 */       if ((this.bitField0_ & 0x800) != 0) {
/* 15544 */         size += 
/* 15545 */           CodedOutputStream.computeSInt32Size(10, this.lONG_);
/*       */       }
/* 15547 */       if ((this.bitField0_ & 0x1000) != 0) {
/* 15548 */         size += 
/* 15549 */           CodedOutputStream.computeSInt32Size(11, this.lONGDiff_);
/*       */       }
/* 15551 */       if ((this.bitField0_ & 0x2000) != 0) {
/* 15552 */         size += 
/* 15553 */           CodedOutputStream.computeSInt32Size(12, this.aLT_);
/*       */       }
/* 15555 */       if ((this.bitField0_ & 0x4000) != 0) {
/* 15556 */         size += 
/* 15557 */           CodedOutputStream.computeSInt32Size(13, this.aLTDiff_);
/*       */       }
/* 15559 */       if ((this.bitField0_ & 0x8000) != 0) {
/* 15560 */         size += 
/* 15561 */           CodedOutputStream.computeUInt32Size(14, this.sPD_);
/*       */       }
/* 15563 */       if ((this.bitField0_ & 0x10000) != 0) {
/* 15564 */         size += 
/* 15565 */           CodedOutputStream.computeUInt32Size(15, this.sPDK_);
/*       */       }
/* 15567 */       if ((this.bitField0_ & 0x20000) != 0) {
/* 15568 */         size += 
/* 15569 */           CodedOutputStream.computeUInt32Size(16, this.hEAD_);
/*       */       }
/* 15571 */       if ((this.bitField0_ & 0x40000) != 0) {
/* 15572 */         size += 
/* 15573 */           CodedOutputStream.computeUInt32Size(17, this.hDOP_);
/*       */       }
/* 15575 */       if ((this.bitField0_ & 0x80000) != 0) {
/* 15576 */         size += 
/* 15577 */           CodedOutputStream.computeUInt32Size(18, this.vDOP_);
/*       */       }
/* 15579 */       if ((this.bitField0_ & 0x100000) != 0) {
/* 15580 */         size += 
/* 15581 */           CodedOutputStream.computeUInt32Size(19, this.pDOP_);
/*       */       }
/* 15583 */       if ((this.bitField0_ & 0x200000) != 0) {
/* 15584 */         size += 
/* 15585 */           CodedOutputStream.computeUInt32Size(20, this.sAT_);
/*       */       }
/* 15587 */       if ((this.bitField0_ & 0x400000) != 0) {
/* 15588 */         size += 
/* 15589 */           CodedOutputStream.computeUInt32Size(21, this.sATN_);
/*       */       }
/* 15591 */       if ((this.bitField0_ & 0x800000) != 0) {
/* 15592 */         size += 
/* 15593 */           CodedOutputStream.computeUInt32Size(22, this.sATU_);
/*       */       }
/* 15595 */       if ((this.bitField0_ & 0x1000000) != 0) {
/* 15596 */         size += 
/* 15597 */           CodedOutputStream.computeUInt32Size(23, this.gSS_);
/*       */       }
/* 15599 */       if ((this.bitField0_ & 0x2000000) != 0) {
/* 15600 */         size += 
/* 15601 */           CodedOutputStream.computeUInt32Size(24, this.gSSN_);
/*       */       }
/* 15603 */       if ((this.bitField0_ & 0x4000000) != 0) {
/* 15604 */         size += 
/* 15605 */           CodedOutputStream.computeUInt32Size(25, this.fIX_);
/*       */       }
/* 15607 */       if ((this.bitField0_ & 0x8000000) != 0) {
/* 15608 */         size += 
/* 15609 */           CodedOutputStream.computeUInt32Size(26, this.lOCA_);
/*       */       }
/* 15611 */       if ((this.bitField0_ & 0x20000000) != 0) {
/* 15612 */         size += 
/* 15613 */           CodedOutputStream.computeUInt32Size(27, this.oDO_);
/*       */       }
/* 15615 */       if ((this.bitField0_ & 0x40000000) != 0) {
/* 15616 */         size += 
/* 15617 */           CodedOutputStream.computeSInt32Size(28, this.oDODiff_);
/*       */       }
/* 15619 */       if ((this.bitField0_ & Integer.MIN_VALUE) != 0) {
/* 15620 */         size += 
/* 15621 */           CodedOutputStream.computeUInt32Size(29, this.oDOD_);
/*       */       }
/* 15623 */       if ((this.bitField1_ & 0x1) != 0) {
/* 15624 */         size += 
/* 15625 */           CodedOutputStream.computeSInt32Size(30, this.oDODDiff_);
/*       */       }
/* 15627 */       if ((this.bitField1_ & 0x2) != 0) {
/* 15628 */         size += 
/* 15629 */           CodedOutputStream.computeUInt32Size(31, this.cID_);
/*       */       }
/* 15631 */       if ((this.bitField1_ & 0x4) != 0) {
/* 15632 */         size += 
/* 15633 */           CodedOutputStream.computeUInt32Size(32, this.lAC_);
/*       */       }
/* 15635 */       if ((this.bitField1_ & 0x8) != 0) {
/* 15636 */         size += 
/* 15637 */           CodedOutputStream.computeUInt32Size(33, this.cSS_);
/*       */       }
/* 15639 */       if ((this.bitField1_ & 0x10) != 0) {
/* 15640 */         size += 
/* 15641 */           CodedOutputStream.computeSInt32Size(34, this.cSSDiff_);
/*       */       }
/* 15643 */       if ((this.bitField1_ & 0x20) != 0) {
/* 15644 */         size += 
/* 15645 */           CodedOutputStream.computeUInt32Size(35, this.cTA_);
/*       */       }
/* 15647 */       if ((this.bitField1_ & 0x40) != 0) {
/* 15648 */         size += 
/* 15649 */           CodedOutputStream.computeUInt32Size(36, this.cCN_);
/*       */       }
/* 15651 */       if ((this.bitField1_ & 0x80) != 0) {
/* 15652 */         size += 
/* 15653 */           CodedOutputStream.computeBoolSize(37, this.jAM_);
/*       */       }
/* 15655 */       if ((this.bitField1_ & 0x100) != 0) {
/* 15656 */         size += 
/* 15657 */           CodedOutputStream.computeUInt32Size(38, this.nC_);
/*       */       }
/* 15659 */       if ((this.bitField1_ & 0x200) != 0) {
/* 15660 */         size += 
/* 15661 */           CodedOutputStream.computeUInt32Size(39, this.nM_);
/*       */       }
/* 15663 */       if ((this.bitField1_ & 0x1000) != 0) {
/* 15664 */         size += 
/* 15665 */           CodedOutputStream.computeUInt32Size(40, this.vIN_);
/*       */       }
/* 15667 */       if ((this.bitField1_ & 0x2000) != 0) {
/* 15668 */         size += 
/* 15669 */           CodedOutputStream.computeSInt32Size(41, this.vINDiff_);
/*       */       }
/* 15671 */       if ((this.bitField1_ & 0x4000) != 0) {
/* 15672 */         size += 
/* 15673 */           CodedOutputStream.computeUInt32Size(42, this.vBAT_);
/*       */       }
/* 15675 */       if ((this.bitField1_ & 0x8000) != 0) {
/* 15676 */         size += 
/* 15677 */           CodedOutputStream.computeSInt32Size(43, this.vBATDiff_);
/*       */       }
/* 15679 */       if ((this.bitField1_ & 0x10000) != 0) {
/* 15680 */         size += 
/* 15681 */           CodedOutputStream.computeUInt32Size(44, this.v3_);
/*       */       }
/* 15683 */       if ((this.bitField1_ & 0x20000) != 0) {
/* 15684 */         size += 
/* 15685 */           CodedOutputStream.computeSInt32Size(45, this.v3Diff_);
/*       */       }
/* 15687 */       if ((this.bitField1_ & 0x40000) != 0) {
/* 15688 */         size += 
/* 15689 */           CodedOutputStream.computeUInt32Size(46, this.v4_);
/*       */       }
/* 15691 */       if ((this.bitField1_ & 0x80000) != 0) {
/* 15692 */         size += 
/* 15693 */           CodedOutputStream.computeSInt32Size(47, this.v4Diff_);
/*       */       }
/* 15695 */       if ((this.bitField1_ & 0x100000) != 0) {
/* 15696 */         size += 
/* 15697 */           CodedOutputStream.computeUInt32Size(48, this.bATH_);
/*       */       }
/* 15699 */       if ((this.bitField1_ & 0x200000) != 0) {
/* 15700 */         size += 
/* 15701 */           CodedOutputStream.computeUInt32Size(49, this.bATC_);
/*       */       }
/* 15703 */       if ((this.bitField1_ & 0x400000) != 0) {
/* 15704 */         size += 
/* 15705 */           CodedOutputStream.computeUInt32Size(50, this.sTRT_);
/*       */       }
/* 15707 */       if ((this.bitField1_ & 0x800000) != 0) {
/* 15708 */         size += 
/* 15709 */           CodedOutputStream.computeSInt32Size(51, this.tVI_);
/*       */       }
/* 15711 */       if ((this.bitField1_ & 0x1000000) != 0) {
/* 15712 */         size += 
/* 15713 */           CodedOutputStream.computeUInt32Size(52, this.inputs_);
/*       */       }
/* 15715 */       if ((this.bitField1_ & 0x2000000) != 0) {
/* 15716 */         size += 
/* 15717 */           CodedOutputStream.computeUInt32Size(53, this.dInputs_);
/*       */       }
/* 15719 */       if ((this.bitField1_ & 0x4000000) != 0) {
/* 15720 */         size += 
/* 15721 */           CodedOutputStream.computeUInt32Size(54, this.ignitionEngine_);
/*       */       }
/* 15723 */       if ((this.bitField1_ & 0x8000000) != 0) {
/* 15724 */         size += 
/* 15725 */           CodedOutputStream.computeUInt32Size(55, this.outputs_);
/*       */       }
/* 15727 */       if ((this.bitField1_ & 0x10000000) != 0) {
/* 15728 */         size += GeneratedMessageV3.computeStringSize(56, this.uSER_);
/*       */       }
/* 15730 */       if ((this.bitField1_ & 0x20000000) != 0) {
/* 15731 */         size += GeneratedMessageV3.computeStringSize(57, this.eDV1_);
/*       */       }
/* 15733 */       if ((this.bitField1_ & 0x40000000) != 0) {
/* 15734 */         size += GeneratedMessageV3.computeStringSize(58, this.eDV2_);
/*       */       }
/* 15736 */       if ((this.bitField1_ & Integer.MIN_VALUE) != 0) {
/* 15737 */         size += GeneratedMessageV3.computeStringSize(59, this.eDV3_);
/*       */       }
/* 15739 */       if ((this.bitField2_ & 0x1) != 0) {
/* 15740 */         size += GeneratedMessageV3.computeStringSize(60, this.eDV4_);
/*       */       }
/* 15742 */       if ((this.bitField2_ & 0x2) != 0) {
/* 15743 */         size += 
/* 15744 */           CodedOutputStream.computeSInt32Size(61, this.cV1_);
/*       */       }
/* 15746 */       if ((this.bitField2_ & 0x4) != 0) {
/* 15747 */         size += 
/* 15748 */           CodedOutputStream.computeSInt32Size(62, this.cV2_);
/*       */       }
/* 15750 */       if ((this.bitField2_ & 0x8) != 0) {
/* 15751 */         size += 
/* 15752 */           CodedOutputStream.computeSInt32Size(63, this.cV3_);
/*       */       }
/* 15754 */       if ((this.bitField2_ & 0x10) != 0) {
/* 15755 */         size += 
/* 15756 */           CodedOutputStream.computeSInt32Size(64, this.cV4_);
/*       */       }
/* 15758 */       if ((this.bitField2_ & 0x2000) != 0) {
/* 15759 */         size += 
/* 15760 */           CodedOutputStream.computeBoolSize(65, this.iARM_);
/*       */       }
/* 15762 */       if ((this.bitField2_ & 0x4000) != 0) {
/* 15763 */         size += GeneratedMessageV3.computeStringSize(66, this.dID_);
/*       */       }
/* 15765 */       if ((this.bitField2_ & 0x8000) != 0) {
/* 15766 */         size += GeneratedMessageV3.computeStringSize(67, this.dAL_);
/*       */       }
/* 15768 */       if ((this.bitField2_ & 0x10000) != 0) {
/* 15769 */         size += 
/* 15770 */           CodedOutputStream.computeUInt32Size(68, this.dEST_);
/*       */       }
/* 15772 */       if ((this.bitField2_ & 0x40000) != 0) {
/* 15773 */         size += 
/* 15774 */           CodedOutputStream.computeUInt32Size(69, this.cFL_);
/*       */       }
/* 15776 */       if ((this.bitField2_ & 0x100000) != 0) {
/* 15777 */         size += 
/* 15778 */           CodedOutputStream.computeUInt32Size(70, this.rPM_);
/*       */       }
/* 15780 */       if ((this.bitField2_ & 0x200000) != 0) {
/* 15781 */         size += 
/* 15782 */           CodedOutputStream.computeUInt32Size(71, this.dUR_);
/*       */       }
/* 15784 */       if ((this.bitField2_ & 0x400000) != 0) {
/* 15785 */         size += 
/* 15786 */           CodedOutputStream.computeUInt32Size(72, this.tDUR_);
/*       */       }
/* 15788 */       if ((this.bitField2_ & 0x20000) != 0) {
/* 15789 */         size += 
/* 15790 */           CodedOutputStream.computeBoolSize(73, this.oVM_);
/*       */       }
/* 15792 */       if ((this.bitField2_ & 0x800000) != 0) {
/* 15793 */         size += 
/* 15794 */           CodedOutputStream.computeUInt32Size(74, this.iDL_);
/*       */       }
/* 15796 */       if ((this.bitField2_ & 0x1000000) != 0) {
/* 15797 */         size += 
/* 15798 */           CodedOutputStream.computeUInt32Size(75, this.sTP_);
/*       */       }
/* 15800 */       if ((this.bitField1_ & 0x400) != 0) {
/* 15801 */         size += 
/* 15802 */           CodedOutputStream.computeUInt32Size(76, this.nT_);
/*       */       }
/* 15804 */       if ((this.bitField1_ & 0x800) != 0) {
/* 15805 */         size += 
/* 15806 */           CodedOutputStream.computeUInt32Size(77, this.cU_);
/*       */       }
/* 15808 */       for (int i = 0; i < this.tDx_.size(); i++) {
/* 15809 */         size += 
/* 15810 */           CodedOutputStream.computeMessageSize(78, (MessageLite)this.tDx_.get(i));
/*       */       }
/* 15812 */       if ((this.bitField0_ & 0x10000000) != 0) {
/* 15813 */         size += 
/* 15814 */           CodedOutputStream.computeUInt32Size(79, this.lOCS_);
/*       */       }
/* 15816 */       if ((this.bitField2_ & 0x80000) != 0) {
/* 15817 */         size += 
/* 15818 */           CodedOutputStream.computeUInt32Size(80, this.cFL2_);
/*       */       }
/* 15820 */       if ((this.bitField0_ & 0x20) != 0) {
/* 15821 */         size += 
/* 15822 */           CodedOutputStream.computeUInt32Size(81, this.nXTS_);
/*       */       }
/* 15824 */       if ((this.bitField2_ & 0x20) != 0) {
/* 15825 */         size += 
/* 15826 */           CodedOutputStream.computeSInt32Size(82, this.cV5_);
/*       */       }
/* 15828 */       if ((this.bitField2_ & 0x40) != 0) {
/* 15829 */         size += 
/* 15830 */           CodedOutputStream.computeSInt32Size(83, this.cV6_);
/*       */       }
/* 15832 */       if ((this.bitField2_ & 0x80) != 0) {
/* 15833 */         size += 
/* 15834 */           CodedOutputStream.computeSInt32Size(84, this.cV7_);
/*       */       }
/* 15836 */       if ((this.bitField2_ & 0x100) != 0) {
/* 15837 */         size += 
/* 15838 */           CodedOutputStream.computeSInt32Size(85, this.cV8_);
/*       */       }
/* 15840 */       if ((this.bitField2_ & 0x200) != 0) {
/* 15841 */         size += 
/* 15842 */           CodedOutputStream.computeSInt32Size(86, this.cV9_);
/*       */       }
/* 15844 */       if ((this.bitField2_ & 0x400) != 0) {
/* 15845 */         size += 
/* 15846 */           CodedOutputStream.computeSInt32Size(87, this.cV10_);
/*       */       }
/* 15848 */       if ((this.bitField2_ & 0x800) != 0) {
/* 15849 */         size += 
/* 15850 */           CodedOutputStream.computeSInt32Size(88, this.cV11_);
/*       */       }
/* 15852 */       if ((this.bitField2_ & 0x1000) != 0) {
/* 15853 */         size += 
/* 15854 */           CodedOutputStream.computeSInt32Size(89, this.cV12_);
/*       */       }
/* 15856 */       if ((this.bitField0_ & 0x40) != 0) {
/* 15857 */         size += GeneratedMessageV3.computeStringSize(254, this.extraData_);
/*       */       }
/* 15859 */       size += this.unknownFields.getSerializedSize();
/* 15860 */       this.memoizedSize = size;
/* 15861 */       return size;
/*       */     }
/*       */ 
/*       */     
/*       */     public boolean equals(Object obj) {
/* 15866 */       if (obj == this) {
/* 15867 */         return true;
/*       */       }
/* 15869 */       if (!(obj instanceof mEventReport)) {
/* 15870 */         return super.equals(obj);
/*       */       }
/* 15872 */       mEventReport other = (mEventReport)obj;
/*       */       
/* 15874 */       if (hasEID() != other.hasEID()) return false; 
/* 15875 */       if (hasEID() && 
/* 15876 */         getEID() != other
/* 15877 */         .getEID()) return false;
/*       */       
/* 15879 */       if (hasEDESC() != other.hasEDESC()) return false; 
/* 15880 */       if (hasEDESC() && 
/*       */         
/* 15882 */         !getEDESC().equals(other.getEDESC())) return false;
/*       */       
/* 15884 */       if (hasEDT() != other.hasEDT()) return false; 
/* 15885 */       if (hasEDT() && 
/* 15886 */         getEDT() != other
/* 15887 */         .getEDT()) return false;
/*       */       
/* 15889 */       if (hasEDTDiff() != other.hasEDTDiff()) return false; 
/* 15890 */       if (hasEDTDiff() && 
/* 15891 */         getEDTDiff() != other
/* 15892 */         .getEDTDiff()) return false;
/*       */       
/* 15894 */       if (hasNXT() != other.hasNXT()) return false; 
/* 15895 */       if (hasNXT() && 
/* 15896 */         getNXT() != other
/* 15897 */         .getNXT()) return false;
/*       */       
/* 15899 */       if (hasNXTS() != other.hasNXTS()) return false; 
/* 15900 */       if (hasNXTS() && 
/* 15901 */         getNXTS() != other
/* 15902 */         .getNXTS()) return false;
/*       */       
/* 15904 */       if (hasExtraData() != other.hasExtraData()) return false; 
/* 15905 */       if (hasExtraData() && 
/*       */         
/* 15907 */         !getExtraData().equals(other.getExtraData())) return false;
/*       */       
/* 15909 */       if (hasPDT() != other.hasPDT()) return false; 
/* 15910 */       if (hasPDT() && 
/* 15911 */         getPDT() != other
/* 15912 */         .getPDT()) return false;
/*       */       
/* 15914 */       if (hasPDTDiff() != other.hasPDTDiff()) return false; 
/* 15915 */       if (hasPDTDiff() && 
/* 15916 */         getPDTDiff() != other
/* 15917 */         .getPDTDiff()) return false;
/*       */       
/* 15919 */       if (hasLAT() != other.hasLAT()) return false; 
/* 15920 */       if (hasLAT() && 
/* 15921 */         getLAT() != other
/* 15922 */         .getLAT()) return false;
/*       */       
/* 15924 */       if (hasLATDiff() != other.hasLATDiff()) return false; 
/* 15925 */       if (hasLATDiff() && 
/* 15926 */         getLATDiff() != other
/* 15927 */         .getLATDiff()) return false;
/*       */       
/* 15929 */       if (hasLONG() != other.hasLONG()) return false; 
/* 15930 */       if (hasLONG() && 
/* 15931 */         getLONG() != other
/* 15932 */         .getLONG()) return false;
/*       */       
/* 15934 */       if (hasLONGDiff() != other.hasLONGDiff()) return false; 
/* 15935 */       if (hasLONGDiff() && 
/* 15936 */         getLONGDiff() != other
/* 15937 */         .getLONGDiff()) return false;
/*       */       
/* 15939 */       if (hasALT() != other.hasALT()) return false; 
/* 15940 */       if (hasALT() && 
/* 15941 */         getALT() != other
/* 15942 */         .getALT()) return false;
/*       */       
/* 15944 */       if (hasALTDiff() != other.hasALTDiff()) return false; 
/* 15945 */       if (hasALTDiff() && 
/* 15946 */         getALTDiff() != other
/* 15947 */         .getALTDiff()) return false;
/*       */       
/* 15949 */       if (hasSPD() != other.hasSPD()) return false; 
/* 15950 */       if (hasSPD() && 
/* 15951 */         getSPD() != other
/* 15952 */         .getSPD()) return false;
/*       */       
/* 15954 */       if (hasSPDK() != other.hasSPDK()) return false; 
/* 15955 */       if (hasSPDK() && 
/* 15956 */         getSPDK() != other
/* 15957 */         .getSPDK()) return false;
/*       */       
/* 15959 */       if (hasHEAD() != other.hasHEAD()) return false; 
/* 15960 */       if (hasHEAD() && 
/* 15961 */         getHEAD() != other
/* 15962 */         .getHEAD()) return false;
/*       */       
/* 15964 */       if (hasHDOP() != other.hasHDOP()) return false; 
/* 15965 */       if (hasHDOP() && 
/* 15966 */         getHDOP() != other
/* 15967 */         .getHDOP()) return false;
/*       */       
/* 15969 */       if (hasVDOP() != other.hasVDOP()) return false; 
/* 15970 */       if (hasVDOP() && 
/* 15971 */         getVDOP() != other
/* 15972 */         .getVDOP()) return false;
/*       */       
/* 15974 */       if (hasPDOP() != other.hasPDOP()) return false; 
/* 15975 */       if (hasPDOP() && 
/* 15976 */         getPDOP() != other
/* 15977 */         .getPDOP()) return false;
/*       */       
/* 15979 */       if (hasSAT() != other.hasSAT()) return false; 
/* 15980 */       if (hasSAT() && 
/* 15981 */         getSAT() != other
/* 15982 */         .getSAT()) return false;
/*       */       
/* 15984 */       if (hasSATN() != other.hasSATN()) return false; 
/* 15985 */       if (hasSATN() && 
/* 15986 */         getSATN() != other
/* 15987 */         .getSATN()) return false;
/*       */       
/* 15989 */       if (hasSATU() != other.hasSATU()) return false; 
/* 15990 */       if (hasSATU() && 
/* 15991 */         getSATU() != other
/* 15992 */         .getSATU()) return false;
/*       */       
/* 15994 */       if (hasGSS() != other.hasGSS()) return false; 
/* 15995 */       if (hasGSS() && 
/* 15996 */         getGSS() != other
/* 15997 */         .getGSS()) return false;
/*       */       
/* 15999 */       if (hasGSSN() != other.hasGSSN()) return false; 
/* 16000 */       if (hasGSSN() && 
/* 16001 */         getGSSN() != other
/* 16002 */         .getGSSN()) return false;
/*       */       
/* 16004 */       if (hasFIX() != other.hasFIX()) return false; 
/* 16005 */       if (hasFIX() && 
/* 16006 */         getFIX() != other
/* 16007 */         .getFIX()) return false;
/*       */       
/* 16009 */       if (hasLOCA() != other.hasLOCA()) return false; 
/* 16010 */       if (hasLOCA() && 
/* 16011 */         getLOCA() != other
/* 16012 */         .getLOCA()) return false;
/*       */       
/* 16014 */       if (hasLOCS() != other.hasLOCS()) return false; 
/* 16015 */       if (hasLOCS() && 
/* 16016 */         getLOCS() != other
/* 16017 */         .getLOCS()) return false;
/*       */       
/* 16019 */       if (hasODO() != other.hasODO()) return false; 
/* 16020 */       if (hasODO() && 
/* 16021 */         getODO() != other
/* 16022 */         .getODO()) return false;
/*       */       
/* 16024 */       if (hasODODiff() != other.hasODODiff()) return false; 
/* 16025 */       if (hasODODiff() && 
/* 16026 */         getODODiff() != other
/* 16027 */         .getODODiff()) return false;
/*       */       
/* 16029 */       if (hasODOD() != other.hasODOD()) return false; 
/* 16030 */       if (hasODOD() && 
/* 16031 */         getODOD() != other
/* 16032 */         .getODOD()) return false;
/*       */       
/* 16034 */       if (hasODODDiff() != other.hasODODDiff()) return false; 
/* 16035 */       if (hasODODDiff() && 
/* 16036 */         getODODDiff() != other
/* 16037 */         .getODODDiff()) return false;
/*       */       
/* 16039 */       if (hasCID() != other.hasCID()) return false; 
/* 16040 */       if (hasCID() && 
/* 16041 */         getCID() != other
/* 16042 */         .getCID()) return false;
/*       */       
/* 16044 */       if (hasLAC() != other.hasLAC()) return false; 
/* 16045 */       if (hasLAC() && 
/* 16046 */         getLAC() != other
/* 16047 */         .getLAC()) return false;
/*       */       
/* 16049 */       if (hasCSS() != other.hasCSS()) return false; 
/* 16050 */       if (hasCSS() && 
/* 16051 */         getCSS() != other
/* 16052 */         .getCSS()) return false;
/*       */       
/* 16054 */       if (hasCSSDiff() != other.hasCSSDiff()) return false; 
/* 16055 */       if (hasCSSDiff() && 
/* 16056 */         getCSSDiff() != other
/* 16057 */         .getCSSDiff()) return false;
/*       */       
/* 16059 */       if (hasCTA() != other.hasCTA()) return false; 
/* 16060 */       if (hasCTA() && 
/* 16061 */         getCTA() != other
/* 16062 */         .getCTA()) return false;
/*       */       
/* 16064 */       if (hasCCN() != other.hasCCN()) return false; 
/* 16065 */       if (hasCCN() && 
/* 16066 */         getCCN() != other
/* 16067 */         .getCCN()) return false;
/*       */       
/* 16069 */       if (hasJAM() != other.hasJAM()) return false; 
/* 16070 */       if (hasJAM() && 
/* 16071 */         getJAM() != other
/* 16072 */         .getJAM()) return false;
/*       */       
/* 16074 */       if (hasNC() != other.hasNC()) return false; 
/* 16075 */       if (hasNC() && 
/* 16076 */         getNC() != other
/* 16077 */         .getNC()) return false;
/*       */       
/* 16079 */       if (hasNM() != other.hasNM()) return false; 
/* 16080 */       if (hasNM() && 
/* 16081 */         getNM() != other
/* 16082 */         .getNM()) return false;
/*       */       
/* 16084 */       if (hasNT() != other.hasNT()) return false; 
/* 16085 */       if (hasNT() && 
/* 16086 */         getNT() != other
/* 16087 */         .getNT()) return false;
/*       */       
/* 16089 */       if (hasCU() != other.hasCU()) return false; 
/* 16090 */       if (hasCU() && 
/* 16091 */         getCU() != other
/* 16092 */         .getCU()) return false;
/*       */       
/* 16094 */       if (hasVIN() != other.hasVIN()) return false; 
/* 16095 */       if (hasVIN() && 
/* 16096 */         getVIN() != other
/* 16097 */         .getVIN()) return false;
/*       */       
/* 16099 */       if (hasVINDiff() != other.hasVINDiff()) return false; 
/* 16100 */       if (hasVINDiff() && 
/* 16101 */         getVINDiff() != other
/* 16102 */         .getVINDiff()) return false;
/*       */       
/* 16104 */       if (hasVBAT() != other.hasVBAT()) return false; 
/* 16105 */       if (hasVBAT() && 
/* 16106 */         getVBAT() != other
/* 16107 */         .getVBAT()) return false;
/*       */       
/* 16109 */       if (hasVBATDiff() != other.hasVBATDiff()) return false; 
/* 16110 */       if (hasVBATDiff() && 
/* 16111 */         getVBATDiff() != other
/* 16112 */         .getVBATDiff()) return false;
/*       */       
/* 16114 */       if (hasV3() != other.hasV3()) return false; 
/* 16115 */       if (hasV3() && 
/* 16116 */         getV3() != other
/* 16117 */         .getV3()) return false;
/*       */       
/* 16119 */       if (hasV3Diff() != other.hasV3Diff()) return false; 
/* 16120 */       if (hasV3Diff() && 
/* 16121 */         getV3Diff() != other
/* 16122 */         .getV3Diff()) return false;
/*       */       
/* 16124 */       if (hasV4() != other.hasV4()) return false; 
/* 16125 */       if (hasV4() && 
/* 16126 */         getV4() != other
/* 16127 */         .getV4()) return false;
/*       */       
/* 16129 */       if (hasV4Diff() != other.hasV4Diff()) return false; 
/* 16130 */       if (hasV4Diff() && 
/* 16131 */         getV4Diff() != other
/* 16132 */         .getV4Diff()) return false;
/*       */       
/* 16134 */       if (hasBATH() != other.hasBATH()) return false; 
/* 16135 */       if (hasBATH() && 
/* 16136 */         getBATH() != other
/* 16137 */         .getBATH()) return false;
/*       */       
/* 16139 */       if (hasBATC() != other.hasBATC()) return false; 
/* 16140 */       if (hasBATC() && 
/* 16141 */         getBATC() != other
/* 16142 */         .getBATC()) return false;
/*       */       
/* 16144 */       if (hasSTRT() != other.hasSTRT()) return false; 
/* 16145 */       if (hasSTRT() && 
/* 16146 */         getSTRT() != other
/* 16147 */         .getSTRT()) return false;
/*       */       
/* 16149 */       if (hasTVI() != other.hasTVI()) return false; 
/* 16150 */       if (hasTVI() && 
/* 16151 */         getTVI() != other
/* 16152 */         .getTVI()) return false;
/*       */       
/* 16154 */       if (hasInputs() != other.hasInputs()) return false; 
/* 16155 */       if (hasInputs() && 
/* 16156 */         getInputs() != other
/* 16157 */         .getInputs()) return false;
/*       */       
/* 16159 */       if (hasDInputs() != other.hasDInputs()) return false; 
/* 16160 */       if (hasDInputs() && 
/* 16161 */         getDInputs() != other
/* 16162 */         .getDInputs()) return false;
/*       */       
/* 16164 */       if (hasIgnitionEngine() != other.hasIgnitionEngine()) return false; 
/* 16165 */       if (hasIgnitionEngine() && 
/* 16166 */         getIgnitionEngine() != other
/* 16167 */         .getIgnitionEngine()) return false;
/*       */       
/* 16169 */       if (hasOutputs() != other.hasOutputs()) return false; 
/* 16170 */       if (hasOutputs() && 
/* 16171 */         getOutputs() != other
/* 16172 */         .getOutputs()) return false;
/*       */       
/* 16174 */       if (hasUSER() != other.hasUSER()) return false; 
/* 16175 */       if (hasUSER() && 
/*       */         
/* 16177 */         !getUSER().equals(other.getUSER())) return false;
/*       */       
/* 16179 */       if (hasEDV1() != other.hasEDV1()) return false; 
/* 16180 */       if (hasEDV1() && 
/*       */         
/* 16182 */         !getEDV1().equals(other.getEDV1())) return false;
/*       */       
/* 16184 */       if (hasEDV2() != other.hasEDV2()) return false; 
/* 16185 */       if (hasEDV2() && 
/*       */         
/* 16187 */         !getEDV2().equals(other.getEDV2())) return false;
/*       */       
/* 16189 */       if (hasEDV3() != other.hasEDV3()) return false; 
/* 16190 */       if (hasEDV3() && 
/*       */         
/* 16192 */         !getEDV3().equals(other.getEDV3())) return false;
/*       */       
/* 16194 */       if (hasEDV4() != other.hasEDV4()) return false; 
/* 16195 */       if (hasEDV4() && 
/*       */         
/* 16197 */         !getEDV4().equals(other.getEDV4())) return false;
/*       */       
/* 16199 */       if (hasCV1() != other.hasCV1()) return false; 
/* 16200 */       if (hasCV1() && 
/* 16201 */         getCV1() != other
/* 16202 */         .getCV1()) return false;
/*       */       
/* 16204 */       if (hasCV2() != other.hasCV2()) return false; 
/* 16205 */       if (hasCV2() && 
/* 16206 */         getCV2() != other
/* 16207 */         .getCV2()) return false;
/*       */       
/* 16209 */       if (hasCV3() != other.hasCV3()) return false; 
/* 16210 */       if (hasCV3() && 
/* 16211 */         getCV3() != other
/* 16212 */         .getCV3()) return false;
/*       */       
/* 16214 */       if (hasCV4() != other.hasCV4()) return false; 
/* 16215 */       if (hasCV4() && 
/* 16216 */         getCV4() != other
/* 16217 */         .getCV4()) return false;
/*       */       
/* 16219 */       if (hasCV5() != other.hasCV5()) return false; 
/* 16220 */       if (hasCV5() && 
/* 16221 */         getCV5() != other
/* 16222 */         .getCV5()) return false;
/*       */       
/* 16224 */       if (hasCV6() != other.hasCV6()) return false; 
/* 16225 */       if (hasCV6() && 
/* 16226 */         getCV6() != other
/* 16227 */         .getCV6()) return false;
/*       */       
/* 16229 */       if (hasCV7() != other.hasCV7()) return false; 
/* 16230 */       if (hasCV7() && 
/* 16231 */         getCV7() != other
/* 16232 */         .getCV7()) return false;
/*       */       
/* 16234 */       if (hasCV8() != other.hasCV8()) return false; 
/* 16235 */       if (hasCV8() && 
/* 16236 */         getCV8() != other
/* 16237 */         .getCV8()) return false;
/*       */       
/* 16239 */       if (hasCV9() != other.hasCV9()) return false; 
/* 16240 */       if (hasCV9() && 
/* 16241 */         getCV9() != other
/* 16242 */         .getCV9()) return false;
/*       */       
/* 16244 */       if (hasCV10() != other.hasCV10()) return false; 
/* 16245 */       if (hasCV10() && 
/* 16246 */         getCV10() != other
/* 16247 */         .getCV10()) return false;
/*       */       
/* 16249 */       if (hasCV11() != other.hasCV11()) return false; 
/* 16250 */       if (hasCV11() && 
/* 16251 */         getCV11() != other
/* 16252 */         .getCV11()) return false;
/*       */       
/* 16254 */       if (hasCV12() != other.hasCV12()) return false; 
/* 16255 */       if (hasCV12() && 
/* 16256 */         getCV12() != other
/* 16257 */         .getCV12()) return false;
/*       */       
/* 16259 */       if (hasIARM() != other.hasIARM()) return false; 
/* 16260 */       if (hasIARM() && 
/* 16261 */         getIARM() != other
/* 16262 */         .getIARM()) return false;
/*       */       
/* 16264 */       if (hasDID() != other.hasDID()) return false; 
/* 16265 */       if (hasDID() && 
/*       */         
/* 16267 */         !getDID().equals(other.getDID())) return false;
/*       */       
/* 16269 */       if (hasDAL() != other.hasDAL()) return false; 
/* 16270 */       if (hasDAL() && 
/*       */         
/* 16272 */         !getDAL().equals(other.getDAL())) return false;
/*       */       
/* 16274 */       if (hasDEST() != other.hasDEST()) return false; 
/* 16275 */       if (hasDEST() && 
/* 16276 */         getDEST() != other
/* 16277 */         .getDEST()) return false;
/*       */       
/* 16279 */       if (hasOVM() != other.hasOVM()) return false; 
/* 16280 */       if (hasOVM() && 
/* 16281 */         getOVM() != other
/* 16282 */         .getOVM()) return false;
/*       */       
/* 16284 */       if (hasCFL() != other.hasCFL()) return false; 
/* 16285 */       if (hasCFL() && 
/* 16286 */         getCFL() != other
/* 16287 */         .getCFL()) return false;
/*       */       
/* 16289 */       if (hasCFL2() != other.hasCFL2()) return false; 
/* 16290 */       if (hasCFL2() && 
/* 16291 */         getCFL2() != other
/* 16292 */         .getCFL2()) return false;
/*       */       
/* 16294 */       if (hasRPM() != other.hasRPM()) return false; 
/* 16295 */       if (hasRPM() && 
/* 16296 */         getRPM() != other
/* 16297 */         .getRPM()) return false;
/*       */       
/* 16299 */       if (hasDUR() != other.hasDUR()) return false; 
/* 16300 */       if (hasDUR() && 
/* 16301 */         getDUR() != other
/* 16302 */         .getDUR()) return false;
/*       */       
/* 16304 */       if (hasTDUR() != other.hasTDUR()) return false; 
/* 16305 */       if (hasTDUR() && 
/* 16306 */         getTDUR() != other
/* 16307 */         .getTDUR()) return false;
/*       */       
/* 16309 */       if (hasIDL() != other.hasIDL()) return false; 
/* 16310 */       if (hasIDL() && 
/* 16311 */         getIDL() != other
/* 16312 */         .getIDL()) return false;
/*       */       
/* 16314 */       if (hasSTP() != other.hasSTP()) return false; 
/* 16315 */       if (hasSTP() && 
/* 16316 */         getSTP() != other
/* 16317 */         .getSTP()) return false;
/*       */ 
/*       */       
/* 16320 */       if (!getTDxList().equals(other.getTDxList())) return false; 
/* 16321 */       if (!this.unknownFields.equals(other.unknownFields)) return false; 
/* 16322 */       return true;
/*       */     }
/*       */ 
/*       */     
/*       */     public int hashCode() {
/* 16327 */       if (this.memoizedHashCode != 0) {
/* 16328 */         return this.memoizedHashCode;
/*       */       }
/* 16330 */       int hash = 41;
/* 16331 */       hash = 19 * hash + getDescriptor().hashCode();
/* 16332 */       if (hasEID()) {
/* 16333 */         hash = 37 * hash + 1;
/* 16334 */         hash = 53 * hash + getEID();
/*       */       } 
/* 16336 */       if (hasEDESC()) {
/* 16337 */         hash = 37 * hash + 2;
/* 16338 */         hash = 53 * hash + getEDESC().hashCode();
/*       */       } 
/* 16340 */       if (hasEDT()) {
/* 16341 */         hash = 37 * hash + 3;
/* 16342 */         hash = 53 * hash + getEDT();
/*       */       } 
/* 16344 */       if (hasEDTDiff()) {
/* 16345 */         hash = 37 * hash + 4;
/* 16346 */         hash = 53 * hash + getEDTDiff();
/*       */       } 
/* 16348 */       if (hasNXT()) {
/* 16349 */         hash = 37 * hash + 5;
/* 16350 */         hash = 53 * hash + getNXT();
/*       */       } 
/* 16352 */       if (hasNXTS()) {
/* 16353 */         hash = 37 * hash + 81;
/* 16354 */         hash = 53 * hash + getNXTS();
/*       */       } 
/* 16356 */       if (hasExtraData()) {
/* 16357 */         hash = 37 * hash + 254;
/* 16358 */         hash = 53 * hash + getExtraData().hashCode();
/*       */       } 
/* 16360 */       if (hasPDT()) {
/* 16361 */         hash = 37 * hash + 6;
/* 16362 */         hash = 53 * hash + getPDT();
/*       */       } 
/* 16364 */       if (hasPDTDiff()) {
/* 16365 */         hash = 37 * hash + 7;
/* 16366 */         hash = 53 * hash + getPDTDiff();
/*       */       } 
/* 16368 */       if (hasLAT()) {
/* 16369 */         hash = 37 * hash + 8;
/* 16370 */         hash = 53 * hash + getLAT();
/*       */       } 
/* 16372 */       if (hasLATDiff()) {
/* 16373 */         hash = 37 * hash + 9;
/* 16374 */         hash = 53 * hash + getLATDiff();
/*       */       } 
/* 16376 */       if (hasLONG()) {
/* 16377 */         hash = 37 * hash + 10;
/* 16378 */         hash = 53 * hash + getLONG();
/*       */       } 
/* 16380 */       if (hasLONGDiff()) {
/* 16381 */         hash = 37 * hash + 11;
/* 16382 */         hash = 53 * hash + getLONGDiff();
/*       */       } 
/* 16384 */       if (hasALT()) {
/* 16385 */         hash = 37 * hash + 12;
/* 16386 */         hash = 53 * hash + getALT();
/*       */       } 
/* 16388 */       if (hasALTDiff()) {
/* 16389 */         hash = 37 * hash + 13;
/* 16390 */         hash = 53 * hash + getALTDiff();
/*       */       } 
/* 16392 */       if (hasSPD()) {
/* 16393 */         hash = 37 * hash + 14;
/* 16394 */         hash = 53 * hash + getSPD();
/*       */       } 
/* 16396 */       if (hasSPDK()) {
/* 16397 */         hash = 37 * hash + 15;
/* 16398 */         hash = 53 * hash + getSPDK();
/*       */       } 
/* 16400 */       if (hasHEAD()) {
/* 16401 */         hash = 37 * hash + 16;
/* 16402 */         hash = 53 * hash + getHEAD();
/*       */       } 
/* 16404 */       if (hasHDOP()) {
/* 16405 */         hash = 37 * hash + 17;
/* 16406 */         hash = 53 * hash + getHDOP();
/*       */       } 
/* 16408 */       if (hasVDOP()) {
/* 16409 */         hash = 37 * hash + 18;
/* 16410 */         hash = 53 * hash + getVDOP();
/*       */       } 
/* 16412 */       if (hasPDOP()) {
/* 16413 */         hash = 37 * hash + 19;
/* 16414 */         hash = 53 * hash + getPDOP();
/*       */       } 
/* 16416 */       if (hasSAT()) {
/* 16417 */         hash = 37 * hash + 20;
/* 16418 */         hash = 53 * hash + getSAT();
/*       */       } 
/* 16420 */       if (hasSATN()) {
/* 16421 */         hash = 37 * hash + 21;
/* 16422 */         hash = 53 * hash + getSATN();
/*       */       } 
/* 16424 */       if (hasSATU()) {
/* 16425 */         hash = 37 * hash + 22;
/* 16426 */         hash = 53 * hash + getSATU();
/*       */       } 
/* 16428 */       if (hasGSS()) {
/* 16429 */         hash = 37 * hash + 23;
/* 16430 */         hash = 53 * hash + getGSS();
/*       */       } 
/* 16432 */       if (hasGSSN()) {
/* 16433 */         hash = 37 * hash + 24;
/* 16434 */         hash = 53 * hash + getGSSN();
/*       */       } 
/* 16436 */       if (hasFIX()) {
/* 16437 */         hash = 37 * hash + 25;
/* 16438 */         hash = 53 * hash + getFIX();
/*       */       } 
/* 16440 */       if (hasLOCA()) {
/* 16441 */         hash = 37 * hash + 26;
/* 16442 */         hash = 53 * hash + getLOCA();
/*       */       } 
/* 16444 */       if (hasLOCS()) {
/* 16445 */         hash = 37 * hash + 79;
/* 16446 */         hash = 53 * hash + getLOCS();
/*       */       } 
/* 16448 */       if (hasODO()) {
/* 16449 */         hash = 37 * hash + 27;
/* 16450 */         hash = 53 * hash + getODO();
/*       */       } 
/* 16452 */       if (hasODODiff()) {
/* 16453 */         hash = 37 * hash + 28;
/* 16454 */         hash = 53 * hash + getODODiff();
/*       */       } 
/* 16456 */       if (hasODOD()) {
/* 16457 */         hash = 37 * hash + 29;
/* 16458 */         hash = 53 * hash + getODOD();
/*       */       } 
/* 16460 */       if (hasODODDiff()) {
/* 16461 */         hash = 37 * hash + 30;
/* 16462 */         hash = 53 * hash + getODODDiff();
/*       */       } 
/* 16464 */       if (hasCID()) {
/* 16465 */         hash = 37 * hash + 31;
/* 16466 */         hash = 53 * hash + getCID();
/*       */       } 
/* 16468 */       if (hasLAC()) {
/* 16469 */         hash = 37 * hash + 32;
/* 16470 */         hash = 53 * hash + getLAC();
/*       */       } 
/* 16472 */       if (hasCSS()) {
/* 16473 */         hash = 37 * hash + 33;
/* 16474 */         hash = 53 * hash + getCSS();
/*       */       } 
/* 16476 */       if (hasCSSDiff()) {
/* 16477 */         hash = 37 * hash + 34;
/* 16478 */         hash = 53 * hash + getCSSDiff();
/*       */       } 
/* 16480 */       if (hasCTA()) {
/* 16481 */         hash = 37 * hash + 35;
/* 16482 */         hash = 53 * hash + getCTA();
/*       */       } 
/* 16484 */       if (hasCCN()) {
/* 16485 */         hash = 37 * hash + 36;
/* 16486 */         hash = 53 * hash + getCCN();
/*       */       } 
/* 16488 */       if (hasJAM()) {
/* 16489 */         hash = 37 * hash + 37;
/* 16490 */         hash = 53 * hash + Internal.hashBoolean(
/* 16491 */             getJAM());
/*       */       } 
/* 16493 */       if (hasNC()) {
/* 16494 */         hash = 37 * hash + 38;
/* 16495 */         hash = 53 * hash + getNC();
/*       */       } 
/* 16497 */       if (hasNM()) {
/* 16498 */         hash = 37 * hash + 39;
/* 16499 */         hash = 53 * hash + getNM();
/*       */       } 
/* 16501 */       if (hasNT()) {
/* 16502 */         hash = 37 * hash + 76;
/* 16503 */         hash = 53 * hash + getNT();
/*       */       } 
/* 16505 */       if (hasCU()) {
/* 16506 */         hash = 37 * hash + 77;
/* 16507 */         hash = 53 * hash + getCU();
/*       */       } 
/* 16509 */       if (hasVIN()) {
/* 16510 */         hash = 37 * hash + 40;
/* 16511 */         hash = 53 * hash + getVIN();
/*       */       } 
/* 16513 */       if (hasVINDiff()) {
/* 16514 */         hash = 37 * hash + 41;
/* 16515 */         hash = 53 * hash + getVINDiff();
/*       */       } 
/* 16517 */       if (hasVBAT()) {
/* 16518 */         hash = 37 * hash + 42;
/* 16519 */         hash = 53 * hash + getVBAT();
/*       */       } 
/* 16521 */       if (hasVBATDiff()) {
/* 16522 */         hash = 37 * hash + 43;
/* 16523 */         hash = 53 * hash + getVBATDiff();
/*       */       } 
/* 16525 */       if (hasV3()) {
/* 16526 */         hash = 37 * hash + 44;
/* 16527 */         hash = 53 * hash + getV3();
/*       */       } 
/* 16529 */       if (hasV3Diff()) {
/* 16530 */         hash = 37 * hash + 45;
/* 16531 */         hash = 53 * hash + getV3Diff();
/*       */       } 
/* 16533 */       if (hasV4()) {
/* 16534 */         hash = 37 * hash + 46;
/* 16535 */         hash = 53 * hash + getV4();
/*       */       } 
/* 16537 */       if (hasV4Diff()) {
/* 16538 */         hash = 37 * hash + 47;
/* 16539 */         hash = 53 * hash + getV4Diff();
/*       */       } 
/* 16541 */       if (hasBATH()) {
/* 16542 */         hash = 37 * hash + 48;
/* 16543 */         hash = 53 * hash + getBATH();
/*       */       } 
/* 16545 */       if (hasBATC()) {
/* 16546 */         hash = 37 * hash + 49;
/* 16547 */         hash = 53 * hash + getBATC();
/*       */       } 
/* 16549 */       if (hasSTRT()) {
/* 16550 */         hash = 37 * hash + 50;
/* 16551 */         hash = 53 * hash + getSTRT();
/*       */       } 
/* 16553 */       if (hasTVI()) {
/* 16554 */         hash = 37 * hash + 51;
/* 16555 */         hash = 53 * hash + getTVI();
/*       */       } 
/* 16557 */       if (hasInputs()) {
/* 16558 */         hash = 37 * hash + 52;
/* 16559 */         hash = 53 * hash + getInputs();
/*       */       } 
/* 16561 */       if (hasDInputs()) {
/* 16562 */         hash = 37 * hash + 53;
/* 16563 */         hash = 53 * hash + getDInputs();
/*       */       } 
/* 16565 */       if (hasIgnitionEngine()) {
/* 16566 */         hash = 37 * hash + 54;
/* 16567 */         hash = 53 * hash + getIgnitionEngine();
/*       */       } 
/* 16569 */       if (hasOutputs()) {
/* 16570 */         hash = 37 * hash + 55;
/* 16571 */         hash = 53 * hash + getOutputs();
/*       */       } 
/* 16573 */       if (hasUSER()) {
/* 16574 */         hash = 37 * hash + 56;
/* 16575 */         hash = 53 * hash + getUSER().hashCode();
/*       */       } 
/* 16577 */       if (hasEDV1()) {
/* 16578 */         hash = 37 * hash + 57;
/* 16579 */         hash = 53 * hash + getEDV1().hashCode();
/*       */       } 
/* 16581 */       if (hasEDV2()) {
/* 16582 */         hash = 37 * hash + 58;
/* 16583 */         hash = 53 * hash + getEDV2().hashCode();
/*       */       } 
/* 16585 */       if (hasEDV3()) {
/* 16586 */         hash = 37 * hash + 59;
/* 16587 */         hash = 53 * hash + getEDV3().hashCode();
/*       */       } 
/* 16589 */       if (hasEDV4()) {
/* 16590 */         hash = 37 * hash + 60;
/* 16591 */         hash = 53 * hash + getEDV4().hashCode();
/*       */       } 
/* 16593 */       if (hasCV1()) {
/* 16594 */         hash = 37 * hash + 61;
/* 16595 */         hash = 53 * hash + getCV1();
/*       */       } 
/* 16597 */       if (hasCV2()) {
/* 16598 */         hash = 37 * hash + 62;
/* 16599 */         hash = 53 * hash + getCV2();
/*       */       } 
/* 16601 */       if (hasCV3()) {
/* 16602 */         hash = 37 * hash + 63;
/* 16603 */         hash = 53 * hash + getCV3();
/*       */       } 
/* 16605 */       if (hasCV4()) {
/* 16606 */         hash = 37 * hash + 64;
/* 16607 */         hash = 53 * hash + getCV4();
/*       */       } 
/* 16609 */       if (hasCV5()) {
/* 16610 */         hash = 37 * hash + 82;
/* 16611 */         hash = 53 * hash + getCV5();
/*       */       } 
/* 16613 */       if (hasCV6()) {
/* 16614 */         hash = 37 * hash + 83;
/* 16615 */         hash = 53 * hash + getCV6();
/*       */       } 
/* 16617 */       if (hasCV7()) {
/* 16618 */         hash = 37 * hash + 84;
/* 16619 */         hash = 53 * hash + getCV7();
/*       */       } 
/* 16621 */       if (hasCV8()) {
/* 16622 */         hash = 37 * hash + 85;
/* 16623 */         hash = 53 * hash + getCV8();
/*       */       } 
/* 16625 */       if (hasCV9()) {
/* 16626 */         hash = 37 * hash + 86;
/* 16627 */         hash = 53 * hash + getCV9();
/*       */       } 
/* 16629 */       if (hasCV10()) {
/* 16630 */         hash = 37 * hash + 87;
/* 16631 */         hash = 53 * hash + getCV10();
/*       */       } 
/* 16633 */       if (hasCV11()) {
/* 16634 */         hash = 37 * hash + 88;
/* 16635 */         hash = 53 * hash + getCV11();
/*       */       } 
/* 16637 */       if (hasCV12()) {
/* 16638 */         hash = 37 * hash + 89;
/* 16639 */         hash = 53 * hash + getCV12();
/*       */       } 
/* 16641 */       if (hasIARM()) {
/* 16642 */         hash = 37 * hash + 65;
/* 16643 */         hash = 53 * hash + Internal.hashBoolean(
/* 16644 */             getIARM());
/*       */       } 
/* 16646 */       if (hasDID()) {
/* 16647 */         hash = 37 * hash + 66;
/* 16648 */         hash = 53 * hash + getDID().hashCode();
/*       */       } 
/* 16650 */       if (hasDAL()) {
/* 16651 */         hash = 37 * hash + 67;
/* 16652 */         hash = 53 * hash + getDAL().hashCode();
/*       */       } 
/* 16654 */       if (hasDEST()) {
/* 16655 */         hash = 37 * hash + 68;
/* 16656 */         hash = 53 * hash + getDEST();
/*       */       } 
/* 16658 */       if (hasOVM()) {
/* 16659 */         hash = 37 * hash + 73;
/* 16660 */         hash = 53 * hash + Internal.hashBoolean(
/* 16661 */             getOVM());
/*       */       } 
/* 16663 */       if (hasCFL()) {
/* 16664 */         hash = 37 * hash + 69;
/* 16665 */         hash = 53 * hash + getCFL();
/*       */       } 
/* 16667 */       if (hasCFL2()) {
/* 16668 */         hash = 37 * hash + 80;
/* 16669 */         hash = 53 * hash + getCFL2();
/*       */       } 
/* 16671 */       if (hasRPM()) {
/* 16672 */         hash = 37 * hash + 70;
/* 16673 */         hash = 53 * hash + getRPM();
/*       */       } 
/* 16675 */       if (hasDUR()) {
/* 16676 */         hash = 37 * hash + 71;
/* 16677 */         hash = 53 * hash + getDUR();
/*       */       } 
/* 16679 */       if (hasTDUR()) {
/* 16680 */         hash = 37 * hash + 72;
/* 16681 */         hash = 53 * hash + getTDUR();
/*       */       } 
/* 16683 */       if (hasIDL()) {
/* 16684 */         hash = 37 * hash + 74;
/* 16685 */         hash = 53 * hash + getIDL();
/*       */       } 
/* 16687 */       if (hasSTP()) {
/* 16688 */         hash = 37 * hash + 75;
/* 16689 */         hash = 53 * hash + getSTP();
/*       */       } 
/* 16691 */       if (getTDxCount() > 0) {
/* 16692 */         hash = 37 * hash + 78;
/* 16693 */         hash = 53 * hash + getTDxList().hashCode();
/*       */       } 
/* 16695 */       hash = 29 * hash + this.unknownFields.hashCode();
/* 16696 */       this.memoizedHashCode = hash;
/* 16697 */       return hash;
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mEventReport parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
/* 16703 */       return (mEventReport)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mEventReport parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 16709 */       return (mEventReport)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static mEventReport parseFrom(ByteString data) throws InvalidProtocolBufferException {
/* 16714 */       return (mEventReport)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mEventReport parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 16720 */       return (mEventReport)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static mEventReport parseFrom(byte[] data) throws InvalidProtocolBufferException {
/* 16724 */       return (mEventReport)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mEventReport parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 16730 */       return (mEventReport)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static mEventReport parseFrom(InputStream input) throws IOException {
/* 16734 */       return 
/* 16735 */         (mEventReport)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mEventReport parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 16741 */       return 
/* 16742 */         (mEventReport)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static mEventReport parseDelimitedFrom(InputStream input) throws IOException {
/* 16746 */       return 
/* 16747 */         (mEventReport)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mEventReport parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 16753 */       return 
/* 16754 */         (mEventReport)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static mEventReport parseFrom(CodedInputStream input) throws IOException {
/* 16759 */       return 
/* 16760 */         (mEventReport)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mEventReport parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 16766 */       return 
/* 16767 */         (mEventReport)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public Builder newBuilderForType() {
/* 16771 */       return newBuilder();
/*       */     } public static Builder newBuilder() {
/* 16773 */       return DEFAULT_INSTANCE.toBuilder();
/*       */     }
/*       */     public static Builder newBuilder(mEventReport prototype) {
/* 16776 */       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
/*       */     }
/*       */     
/*       */     public Builder toBuilder() {
/* 16780 */       return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder())
/* 16781 */         .mergeFrom(this);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
/* 16787 */       Builder builder = new Builder(parent);
/* 16788 */       return builder;
/*       */     }
/*       */     public static final class Builder extends GeneratedMessageV3.Builder<Builder> implements StarLinkMessage.mEventReportOrBuilder { private int bitField0_; private int bitField1_; private int bitField2_; private int eID_; private Object eDESC_; private int eDT_; private int eDTDiff_; private int nXT_; private int nXTS_; private Object extraData_; private int pDT_; private int pDTDiff_; private int lAT_; private int lATDiff_; private int lONG_; private int lONGDiff_; private int aLT_; private int aLTDiff_; private int sPD_; private int sPDK_; private int hEAD_; private int hDOP_; private int vDOP_; private int pDOP_; private int sAT_; private int sATN_; private int sATU_; private int gSS_; private int gSSN_; private int fIX_; private int lOCA_; private int lOCS_; private int oDO_; private int oDODiff_; private int oDOD_; private int oDODDiff_; private int cID_; private int lAC_; private int cSS_; private int cSSDiff_; private int cTA_; private int cCN_; private boolean jAM_; private int nC_; private int nM_; private int nT_; private int cU_; private int vIN_; private int vINDiff_; private int vBAT_; private int vBATDiff_; private int v3_; private int v3Diff_; private int v4_; private int v4Diff_; private int bATH_; private int bATC_; private int sTRT_; private int tVI_; private int inputs_; private int dInputs_; private int ignitionEngine_; private int outputs_; private Object uSER_; private Object eDV1_; private Object eDV2_; private Object eDV3_; private Object eDV4_; private int cV1_; private int cV2_; private int cV3_; private int cV4_; private int cV5_; private int cV6_; private int cV7_; private int cV8_; private int cV9_; private int cV10_; private int cV11_; private int cV12_; private boolean iARM_; private Object dID_; private Object dAL_; private int dEST_;
/*       */       private boolean oVM_;
/*       */       private int cFL_;
/*       */       private int cFL2_;
/*       */       private int rPM_;
/*       */       private int dUR_;
/*       */       private int tDUR_;
/*       */       private int iDL_;
/*       */       private int sTP_;
/*       */       private List<StarLinkMessage.mEventReport_TDx> tDx_;
/*       */       private RepeatedFieldBuilderV3<StarLinkMessage.mEventReport_TDx, StarLinkMessage.mEventReport_TDx.Builder, StarLinkMessage.mEventReport_TDxOrBuilder> tDxBuilder_;
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/* 16803 */         return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_mEventReport_descriptor;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
/* 16809 */         return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_mEventReport_fieldAccessorTable
/* 16810 */           .ensureFieldAccessorsInitialized(StarLinkMessage.mEventReport.class, Builder.class);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private Builder()
/*       */       {
/* 17868 */         this.eDESC_ = "";
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 18196 */         this.extraData_ = "";
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 21163 */         this.uSER_ = "";
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 21271 */         this.eDV1_ = "";
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 21379 */         this.eDV2_ = "";
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 21487 */         this.eDV3_ = "";
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 21595 */         this.eDV4_ = "";
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 22418 */         this.dID_ = "";
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 22526 */         this.dAL_ = "";
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 23129 */         this
/* 23130 */           .tDx_ = Collections.emptyList(); maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (StarLinkMessage.mEventReport.alwaysUseFieldBuilders) getTDxFieldBuilder();  } public Builder clear() { super.clear(); this.eID_ = 0; this.bitField0_ &= 0xFFFFFFFE; this.eDESC_ = ""; this.bitField0_ &= 0xFFFFFFFD; this.eDT_ = 0; this.bitField0_ &= 0xFFFFFFFB; this.eDTDiff_ = 0; this.bitField0_ &= 0xFFFFFFF7; this.nXT_ = 0; this.bitField0_ &= 0xFFFFFFEF; this.nXTS_ = 0; this.bitField0_ &= 0xFFFFFFDF; this.extraData_ = ""; this.bitField0_ &= 0xFFFFFFBF; this.pDT_ = 0; this.bitField0_ &= 0xFFFFFF7F; this.pDTDiff_ = 0; this.bitField0_ &= 0xFFFFFEFF; this.lAT_ = 0; this.bitField0_ &= 0xFFFFFDFF; this.lATDiff_ = 0; this.bitField0_ &= 0xFFFFFBFF; this.lONG_ = 0; this.bitField0_ &= 0xFFFFF7FF; this.lONGDiff_ = 0; this.bitField0_ &= 0xFFFFEFFF; this.aLT_ = 0; this.bitField0_ &= 0xFFFFDFFF; this.aLTDiff_ = 0; this.bitField0_ &= 0xFFFFBFFF; this.sPD_ = 0; this.bitField0_ &= 0xFFFF7FFF; this.sPDK_ = 0; this.bitField0_ &= 0xFFFEFFFF; this.hEAD_ = 0; this.bitField0_ &= 0xFFFDFFFF; this.hDOP_ = 0; this.bitField0_ &= 0xFFFBFFFF; this.vDOP_ = 0; this.bitField0_ &= 0xFFF7FFFF; this.pDOP_ = 0; this.bitField0_ &= 0xFFEFFFFF; this.sAT_ = 0; this.bitField0_ &= 0xFFDFFFFF; this.sATN_ = 0; this.bitField0_ &= 0xFFBFFFFF; this.sATU_ = 0; this.bitField0_ &= 0xFF7FFFFF; this.gSS_ = 0; this.bitField0_ &= 0xFEFFFFFF; this.gSSN_ = 0; this.bitField0_ &= 0xFDFFFFFF; this.fIX_ = 0; this.bitField0_ &= 0xFBFFFFFF; this.lOCA_ = 0; this.bitField0_ &= 0xF7FFFFFF; this.lOCS_ = 0; this.bitField0_ &= 0xEFFFFFFF; this.oDO_ = 0; this.bitField0_ &= 0xDFFFFFFF; this.oDODiff_ = 0; this.bitField0_ &= 0xBFFFFFFF; this.oDOD_ = 0; this.bitField0_ &= Integer.MAX_VALUE; this.oDODDiff_ = 0; this.bitField1_ &= 0xFFFFFFFE; this.cID_ = 0; this.bitField1_ &= 0xFFFFFFFD; this.lAC_ = 0; this.bitField1_ &= 0xFFFFFFFB; this.cSS_ = 0; this.bitField1_ &= 0xFFFFFFF7; this.cSSDiff_ = 0; this.bitField1_ &= 0xFFFFFFEF; this.cTA_ = 0; this.bitField1_ &= 0xFFFFFFDF; this.cCN_ = 0; this.bitField1_ &= 0xFFFFFFBF; this.jAM_ = false; this.bitField1_ &= 0xFFFFFF7F; this.nC_ = 0; this.bitField1_ &= 0xFFFFFEFF; this.nM_ = 0; this.bitField1_ &= 0xFFFFFDFF; this.nT_ = 0; this.bitField1_ &= 0xFFFFFBFF; this.cU_ = 0; this.bitField1_ &= 0xFFFFF7FF; this.vIN_ = 0; this.bitField1_ &= 0xFFFFEFFF; this.vINDiff_ = 0; this.bitField1_ &= 0xFFFFDFFF; this.vBAT_ = 0; this.bitField1_ &= 0xFFFFBFFF; this.vBATDiff_ = 0; this.bitField1_ &= 0xFFFF7FFF; this.v3_ = 0; this.bitField1_ &= 0xFFFEFFFF; this.v3Diff_ = 0; this.bitField1_ &= 0xFFFDFFFF; this.v4_ = 0; this.bitField1_ &= 0xFFFBFFFF; this.v4Diff_ = 0; this.bitField1_ &= 0xFFF7FFFF; this.bATH_ = 0; this.bitField1_ &= 0xFFEFFFFF; this.bATC_ = 0; this.bitField1_ &= 0xFFDFFFFF; this.sTRT_ = 0; this.bitField1_ &= 0xFFBFFFFF; this.tVI_ = 0; this.bitField1_ &= 0xFF7FFFFF; this.inputs_ = 0; this.bitField1_ &= 0xFEFFFFFF; this.dInputs_ = 0; this.bitField1_ &= 0xFDFFFFFF; this.ignitionEngine_ = 0; this.bitField1_ &= 0xFBFFFFFF; this.outputs_ = 0; this.bitField1_ &= 0xF7FFFFFF; this.uSER_ = ""; this.bitField1_ &= 0xEFFFFFFF; this.eDV1_ = ""; this.bitField1_ &= 0xDFFFFFFF; this.eDV2_ = ""; this.bitField1_ &= 0xBFFFFFFF; this.eDV3_ = ""; this.bitField1_ &= Integer.MAX_VALUE; this.eDV4_ = ""; this.bitField2_ &= 0xFFFFFFFE; this.cV1_ = 0; this.bitField2_ &= 0xFFFFFFFD; this.cV2_ = 0; this.bitField2_ &= 0xFFFFFFFB; this.cV3_ = 0; this.bitField2_ &= 0xFFFFFFF7; this.cV4_ = 0; this.bitField2_ &= 0xFFFFFFEF; this.cV5_ = 0; this.bitField2_ &= 0xFFFFFFDF; this.cV6_ = 0; this.bitField2_ &= 0xFFFFFFBF; this.cV7_ = 0; this.bitField2_ &= 0xFFFFFF7F; this.cV8_ = 0; this.bitField2_ &= 0xFFFFFEFF; this.cV9_ = 0; this.bitField2_ &= 0xFFFFFDFF; this.cV10_ = 0; this.bitField2_ &= 0xFFFFFBFF; this.cV11_ = 0; this.bitField2_ &= 0xFFFFF7FF; this.cV12_ = 0; this.bitField2_ &= 0xFFFFEFFF; this.iARM_ = false; this.bitField2_ &= 0xFFFFDFFF; this.dID_ = ""; this.bitField2_ &= 0xFFFFBFFF; this.dAL_ = ""; this.bitField2_ &= 0xFFFF7FFF; this.dEST_ = 0; this.bitField2_ &= 0xFFFEFFFF; this.oVM_ = false; this.bitField2_ &= 0xFFFDFFFF; this.cFL_ = 0; this.bitField2_ &= 0xFFFBFFFF; this.cFL2_ = 0; this.bitField2_ &= 0xFFF7FFFF; this.rPM_ = 0; this.bitField2_ &= 0xFFEFFFFF; this.dUR_ = 0; this.bitField2_ &= 0xFFDFFFFF; this.tDUR_ = 0; this.bitField2_ &= 0xFFBFFFFF; this.iDL_ = 0; this.bitField2_ &= 0xFF7FFFFF; this.sTP_ = 0; this.bitField2_ &= 0xFEFFFFFF; if (this.tDxBuilder_ == null) { this.tDx_ = Collections.emptyList(); this.bitField2_ &= 0xFDFFFFFF; } else { this.tDxBuilder_.clear(); }  return this; } public Descriptors.Descriptor getDescriptorForType() { return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_mEventReport_descriptor; } public StarLinkMessage.mEventReport getDefaultInstanceForType() { return StarLinkMessage.mEventReport.getDefaultInstance(); } public StarLinkMessage.mEventReport build() { StarLinkMessage.mEventReport result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public StarLinkMessage.mEventReport buildPartial() { StarLinkMessage.mEventReport result = new StarLinkMessage.mEventReport(this); int from_bitField0_ = this.bitField0_; int from_bitField1_ = this.bitField1_; int from_bitField2_ = this.bitField2_; int to_bitField0_ = 0; int to_bitField1_ = 0; int to_bitField2_ = 0; if ((from_bitField0_ & 0x1) != 0) { result.eID_ = this.eID_; to_bitField0_ |= 0x1; }  if ((from_bitField0_ & 0x2) != 0) to_bitField0_ |= 0x2;  result.eDESC_ = this.eDESC_; if ((from_bitField0_ & 0x4) != 0) { result.eDT_ = this.eDT_; to_bitField0_ |= 0x4; }  if ((from_bitField0_ & 0x8) != 0) { result.eDTDiff_ = this.eDTDiff_; to_bitField0_ |= 0x8; }  if ((from_bitField0_ & 0x10) != 0) { result.nXT_ = this.nXT_; to_bitField0_ |= 0x10; }  if ((from_bitField0_ & 0x20) != 0) { result.nXTS_ = this.nXTS_; to_bitField0_ |= 0x20; }  if ((from_bitField0_ & 0x40) != 0) to_bitField0_ |= 0x40;  result.extraData_ = this.extraData_; if ((from_bitField0_ & 0x80) != 0) { result.pDT_ = this.pDT_; to_bitField0_ |= 0x80; }  if ((from_bitField0_ & 0x100) != 0) { result.pDTDiff_ = this.pDTDiff_; to_bitField0_ |= 0x100; }  if ((from_bitField0_ & 0x200) != 0) { result.lAT_ = this.lAT_; to_bitField0_ |= 0x200; }  if ((from_bitField0_ & 0x400) != 0) { result.lATDiff_ = this.lATDiff_; to_bitField0_ |= 0x400; }  if ((from_bitField0_ & 0x800) != 0) { result.lONG_ = this.lONG_; to_bitField0_ |= 0x800; }  if ((from_bitField0_ & 0x1000) != 0) { result.lONGDiff_ = this.lONGDiff_; to_bitField0_ |= 0x1000; }  if ((from_bitField0_ & 0x2000) != 0) { result.aLT_ = this.aLT_; to_bitField0_ |= 0x2000; }  if ((from_bitField0_ & 0x4000) != 0) { result.aLTDiff_ = this.aLTDiff_; to_bitField0_ |= 0x4000; }  if ((from_bitField0_ & 0x8000) != 0) { result.sPD_ = this.sPD_; to_bitField0_ |= 0x8000; }  if ((from_bitField0_ & 0x10000) != 0) { result.sPDK_ = this.sPDK_; to_bitField0_ |= 0x10000; }  if ((from_bitField0_ & 0x20000) != 0) { result.hEAD_ = this.hEAD_; to_bitField0_ |= 0x20000; }  if ((from_bitField0_ & 0x40000) != 0) { result.hDOP_ = this.hDOP_; to_bitField0_ |= 0x40000; }  if ((from_bitField0_ & 0x80000) != 0) { result.vDOP_ = this.vDOP_; to_bitField0_ |= 0x80000; }  if ((from_bitField0_ & 0x100000) != 0) { result.pDOP_ = this.pDOP_; to_bitField0_ |= 0x100000; }  if ((from_bitField0_ & 0x200000) != 0) { result.sAT_ = this.sAT_; to_bitField0_ |= 0x200000; }  if ((from_bitField0_ & 0x400000) != 0) { result.sATN_ = this.sATN_; to_bitField0_ |= 0x400000; }  if ((from_bitField0_ & 0x800000) != 0) { result.sATU_ = this.sATU_; to_bitField0_ |= 0x800000; }  if ((from_bitField0_ & 0x1000000) != 0) { result.gSS_ = this.gSS_; to_bitField0_ |= 0x1000000; }  if ((from_bitField0_ & 0x2000000) != 0) { result.gSSN_ = this.gSSN_; to_bitField0_ |= 0x2000000; }  if ((from_bitField0_ & 0x4000000) != 0) { result.fIX_ = this.fIX_; to_bitField0_ |= 0x4000000; }  if ((from_bitField0_ & 0x8000000) != 0) { result.lOCA_ = this.lOCA_; to_bitField0_ |= 0x8000000; }  if ((from_bitField0_ & 0x10000000) != 0) { result.lOCS_ = this.lOCS_; to_bitField0_ |= 0x10000000; }  if ((from_bitField0_ & 0x20000000) != 0) { result.oDO_ = this.oDO_; to_bitField0_ |= 0x20000000; }  if ((from_bitField0_ & 0x40000000) != 0) { result.oDODiff_ = this.oDODiff_; to_bitField0_ |= 0x40000000; }  if ((from_bitField0_ & Integer.MIN_VALUE) != 0) { result.oDOD_ = this.oDOD_; to_bitField0_ |= Integer.MIN_VALUE; }  if ((from_bitField1_ & 0x1) != 0) { result.oDODDiff_ = this.oDODDiff_; to_bitField1_ |= 0x1; }  if ((from_bitField1_ & 0x2) != 0) { result.cID_ = this.cID_; to_bitField1_ |= 0x2; }  if ((from_bitField1_ & 0x4) != 0) { result.lAC_ = this.lAC_; to_bitField1_ |= 0x4; }  if ((from_bitField1_ & 0x8) != 0) { result.cSS_ = this.cSS_; to_bitField1_ |= 0x8; }  if ((from_bitField1_ & 0x10) != 0) { result.cSSDiff_ = this.cSSDiff_; to_bitField1_ |= 0x10; }  if ((from_bitField1_ & 0x20) != 0) { result.cTA_ = this.cTA_; to_bitField1_ |= 0x20; }  if ((from_bitField1_ & 0x40) != 0) { result.cCN_ = this.cCN_; to_bitField1_ |= 0x40; }  if ((from_bitField1_ & 0x80) != 0) { result.jAM_ = this.jAM_; to_bitField1_ |= 0x80; }  if ((from_bitField1_ & 0x100) != 0) { result.nC_ = this.nC_; to_bitField1_ |= 0x100; }  if ((from_bitField1_ & 0x200) != 0) { result.nM_ = this.nM_; to_bitField1_ |= 0x200; }  if ((from_bitField1_ & 0x400) != 0) { result.nT_ = this.nT_; to_bitField1_ |= 0x400; }  if ((from_bitField1_ & 0x800) != 0) { result.cU_ = this.cU_; to_bitField1_ |= 0x800; }  if ((from_bitField1_ & 0x1000) != 0) { result.vIN_ = this.vIN_; to_bitField1_ |= 0x1000; }  if ((from_bitField1_ & 0x2000) != 0) { result.vINDiff_ = this.vINDiff_; to_bitField1_ |= 0x2000; }  if ((from_bitField1_ & 0x4000) != 0) { result.vBAT_ = this.vBAT_; to_bitField1_ |= 0x4000; }  if ((from_bitField1_ & 0x8000) != 0) { result.vBATDiff_ = this.vBATDiff_; to_bitField1_ |= 0x8000; }  if ((from_bitField1_ & 0x10000) != 0) { result.v3_ = this.v3_; to_bitField1_ |= 0x10000; }  if ((from_bitField1_ & 0x20000) != 0) { result.v3Diff_ = this.v3Diff_; to_bitField1_ |= 0x20000; }  if ((from_bitField1_ & 0x40000) != 0) { result.v4_ = this.v4_; to_bitField1_ |= 0x40000; }  if ((from_bitField1_ & 0x80000) != 0) { result.v4Diff_ = this.v4Diff_; to_bitField1_ |= 0x80000; }  if ((from_bitField1_ & 0x100000) != 0) { result.bATH_ = this.bATH_; to_bitField1_ |= 0x100000; }  if ((from_bitField1_ & 0x200000) != 0) { result.bATC_ = this.bATC_; to_bitField1_ |= 0x200000; }  if ((from_bitField1_ & 0x400000) != 0) { result.sTRT_ = this.sTRT_; to_bitField1_ |= 0x400000; }  if ((from_bitField1_ & 0x800000) != 0) { result.tVI_ = this.tVI_; to_bitField1_ |= 0x800000; }  if ((from_bitField1_ & 0x1000000) != 0) { result.inputs_ = this.inputs_; to_bitField1_ |= 0x1000000; }  if ((from_bitField1_ & 0x2000000) != 0) { result.dInputs_ = this.dInputs_; to_bitField1_ |= 0x2000000; }  if ((from_bitField1_ & 0x4000000) != 0) { result.ignitionEngine_ = this.ignitionEngine_; to_bitField1_ |= 0x4000000; }  if ((from_bitField1_ & 0x8000000) != 0) { result.outputs_ = this.outputs_; to_bitField1_ |= 0x8000000; }  if ((from_bitField1_ & 0x10000000) != 0) to_bitField1_ |= 0x10000000;  result.uSER_ = this.uSER_; if ((from_bitField1_ & 0x20000000) != 0) to_bitField1_ |= 0x20000000;  result.eDV1_ = this.eDV1_; if ((from_bitField1_ & 0x40000000) != 0) to_bitField1_ |= 0x40000000;  result.eDV2_ = this.eDV2_; if ((from_bitField1_ & Integer.MIN_VALUE) != 0) to_bitField1_ |= Integer.MIN_VALUE;  result.eDV3_ = this.eDV3_; if ((from_bitField2_ & 0x1) != 0) to_bitField2_ |= 0x1;  result.eDV4_ = this.eDV4_; if ((from_bitField2_ & 0x2) != 0) { result.cV1_ = this.cV1_; to_bitField2_ |= 0x2; }  if ((from_bitField2_ & 0x4) != 0) { result.cV2_ = this.cV2_; to_bitField2_ |= 0x4; }  if ((from_bitField2_ & 0x8) != 0) { result.cV3_ = this.cV3_; to_bitField2_ |= 0x8; }  if ((from_bitField2_ & 0x10) != 0) { result.cV4_ = this.cV4_; to_bitField2_ |= 0x10; }  if ((from_bitField2_ & 0x20) != 0) { result.cV5_ = this.cV5_; to_bitField2_ |= 0x20; }  if ((from_bitField2_ & 0x40) != 0) { result.cV6_ = this.cV6_; to_bitField2_ |= 0x40; }  if ((from_bitField2_ & 0x80) != 0) { result.cV7_ = this.cV7_; to_bitField2_ |= 0x80; }  if ((from_bitField2_ & 0x100) != 0) { result.cV8_ = this.cV8_; to_bitField2_ |= 0x100; }  if ((from_bitField2_ & 0x200) != 0) { result.cV9_ = this.cV9_; to_bitField2_ |= 0x200; }  if ((from_bitField2_ & 0x400) != 0) { result.cV10_ = this.cV10_; to_bitField2_ |= 0x400; }  if ((from_bitField2_ & 0x800) != 0) { result.cV11_ = this.cV11_; to_bitField2_ |= 0x800; }  if ((from_bitField2_ & 0x1000) != 0) { result.cV12_ = this.cV12_; to_bitField2_ |= 0x1000; }  if ((from_bitField2_ & 0x2000) != 0) { result.iARM_ = this.iARM_; to_bitField2_ |= 0x2000; }  if ((from_bitField2_ & 0x4000) != 0) to_bitField2_ |= 0x4000;  result.dID_ = this.dID_; if ((from_bitField2_ & 0x8000) != 0) to_bitField2_ |= 0x8000;  result.dAL_ = this.dAL_; if ((from_bitField2_ & 0x10000) != 0) { result.dEST_ = this.dEST_; to_bitField2_ |= 0x10000; }  if ((from_bitField2_ & 0x20000) != 0) { result.oVM_ = this.oVM_; to_bitField2_ |= 0x20000; }  if ((from_bitField2_ & 0x40000) != 0) { result.cFL_ = this.cFL_; to_bitField2_ |= 0x40000; }  if ((from_bitField2_ & 0x80000) != 0) { result.cFL2_ = this.cFL2_; to_bitField2_ |= 0x80000; }  if ((from_bitField2_ & 0x100000) != 0) { result.rPM_ = this.rPM_; to_bitField2_ |= 0x100000; }  if ((from_bitField2_ & 0x200000) != 0) { result.dUR_ = this.dUR_; to_bitField2_ |= 0x200000; }  if ((from_bitField2_ & 0x400000) != 0) { result.tDUR_ = this.tDUR_; to_bitField2_ |= 0x400000; }  if ((from_bitField2_ & 0x800000) != 0) { result.iDL_ = this.iDL_; to_bitField2_ |= 0x800000; }  if ((from_bitField2_ & 0x1000000) != 0) { result.sTP_ = this.sTP_; to_bitField2_ |= 0x1000000; }  if (this.tDxBuilder_ == null) { if ((this.bitField2_ & 0x2000000) != 0) { this.tDx_ = Collections.unmodifiableList(this.tDx_); this.bitField2_ &= 0xFDFFFFFF; }  result.tDx_ = this.tDx_; } else { result.tDx_ = this.tDxBuilder_.build(); }  result.bitField0_ = to_bitField0_; result.bitField1_ = to_bitField1_; result.bitField2_ = to_bitField2_; onBuilt(); return result; } public Builder clone() { return (Builder)super.clone(); } public Builder setField(Descriptors.FieldDescriptor field, Object value) { return (Builder)super.setField(field, value); } public Builder clearField(Descriptors.FieldDescriptor field) { return (Builder)super.clearField(field); } public Builder clearOneof(Descriptors.OneofDescriptor oneof) { return (Builder)super.clearOneof(oneof); } public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) { return (Builder)super.setRepeatedField(field, index, value); } public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) { return (Builder)super.addRepeatedField(field, value); } public Builder mergeFrom(Message other) { if (other instanceof StarLinkMessage.mEventReport) return mergeFrom((StarLinkMessage.mEventReport)other);  super.mergeFrom(other); return this; } public Builder mergeFrom(StarLinkMessage.mEventReport other) { if (other == StarLinkMessage.mEventReport.getDefaultInstance()) return this;  if (other.hasEID()) setEID(other.getEID());  if (other.hasEDESC()) { this.bitField0_ |= 0x2; this.eDESC_ = other.eDESC_; onChanged(); }  if (other.hasEDT()) setEDT(other.getEDT());  if (other.hasEDTDiff()) setEDTDiff(other.getEDTDiff());  if (other.hasNXT()) setNXT(other.getNXT());  if (other.hasNXTS()) setNXTS(other.getNXTS());  if (other.hasExtraData()) { this.bitField0_ |= 0x40; this.extraData_ = other.extraData_; onChanged(); }  if (other.hasPDT()) setPDT(other.getPDT());  if (other.hasPDTDiff()) setPDTDiff(other.getPDTDiff());  if (other.hasLAT()) setLAT(other.getLAT());  if (other.hasLATDiff()) setLATDiff(other.getLATDiff());  if (other.hasLONG()) setLONG(other.getLONG());  if (other.hasLONGDiff()) setLONGDiff(other.getLONGDiff());  if (other.hasALT()) setALT(other.getALT());  if (other.hasALTDiff()) setALTDiff(other.getALTDiff());  if (other.hasSPD()) setSPD(other.getSPD());  if (other.hasSPDK()) setSPDK(other.getSPDK());  if (other.hasHEAD()) setHEAD(other.getHEAD());  if (other.hasHDOP()) setHDOP(other.getHDOP());  if (other.hasVDOP()) setVDOP(other.getVDOP());  if (other.hasPDOP()) setPDOP(other.getPDOP());  if (other.hasSAT()) setSAT(other.getSAT());  if (other.hasSATN()) setSATN(other.getSATN());  if (other.hasSATU()) setSATU(other.getSATU());  if (other.hasGSS()) setGSS(other.getGSS());  if (other.hasGSSN()) setGSSN(other.getGSSN());  if (other.hasFIX()) setFIX(other.getFIX());  if (other.hasLOCA()) setLOCA(other.getLOCA());  if (other.hasLOCS()) setLOCS(other.getLOCS());  if (other.hasODO()) setODO(other.getODO());  if (other.hasODODiff()) setODODiff(other.getODODiff());  if (other.hasODOD()) setODOD(other.getODOD());  if (other.hasODODDiff()) setODODDiff(other.getODODDiff());  if (other.hasCID()) setCID(other.getCID());  if (other.hasLAC()) setLAC(other.getLAC());  if (other.hasCSS()) setCSS(other.getCSS());  if (other.hasCSSDiff()) setCSSDiff(other.getCSSDiff());  if (other.hasCTA()) setCTA(other.getCTA());  if (other.hasCCN()) setCCN(other.getCCN());  if (other.hasJAM()) setJAM(other.getJAM());  if (other.hasNC()) setNC(other.getNC());  if (other.hasNM()) setNM(other.getNM());  if (other.hasNT()) setNT(other.getNT());  if (other.hasCU()) setCU(other.getCU());  if (other.hasVIN()) setVIN(other.getVIN());  if (other.hasVINDiff()) setVINDiff(other.getVINDiff());  if (other.hasVBAT()) setVBAT(other.getVBAT());  if (other.hasVBATDiff()) setVBATDiff(other.getVBATDiff());  if (other.hasV3()) setV3(other.getV3());  if (other.hasV3Diff()) setV3Diff(other.getV3Diff());  if (other.hasV4()) setV4(other.getV4());  if (other.hasV4Diff()) setV4Diff(other.getV4Diff());  if (other.hasBATH()) setBATH(other.getBATH());  if (other.hasBATC()) setBATC(other.getBATC());  if (other.hasSTRT()) setSTRT(other.getSTRT());  if (other.hasTVI()) setTVI(other.getTVI());  if (other.hasInputs()) setInputs(other.getInputs());  if (other.hasDInputs()) setDInputs(other.getDInputs());  if (other.hasIgnitionEngine()) setIgnitionEngine(other.getIgnitionEngine());  if (other.hasOutputs()) setOutputs(other.getOutputs());  if (other.hasUSER()) { this.bitField1_ |= 0x10000000; this.uSER_ = other.uSER_; onChanged(); }  if (other.hasEDV1()) { this.bitField1_ |= 0x20000000; this.eDV1_ = other.eDV1_; onChanged(); }  if (other.hasEDV2()) { this.bitField1_ |= 0x40000000; this.eDV2_ = other.eDV2_; onChanged(); }  if (other.hasEDV3()) { this.bitField1_ |= Integer.MIN_VALUE; this.eDV3_ = other.eDV3_; onChanged(); }  if (other.hasEDV4()) { this.bitField2_ |= 0x1; this.eDV4_ = other.eDV4_; onChanged(); }  if (other.hasCV1()) setCV1(other.getCV1());  if (other.hasCV2()) setCV2(other.getCV2());  if (other.hasCV3()) setCV3(other.getCV3());  if (other.hasCV4()) setCV4(other.getCV4());  if (other.hasCV5()) setCV5(other.getCV5());  if (other.hasCV6()) setCV6(other.getCV6());  if (other.hasCV7()) setCV7(other.getCV7());  if (other.hasCV8()) setCV8(other.getCV8());  if (other.hasCV9()) setCV9(other.getCV9());  if (other.hasCV10()) setCV10(other.getCV10());  if (other.hasCV11()) setCV11(other.getCV11());  if (other.hasCV12()) setCV12(other.getCV12());  if (other.hasIARM()) setIARM(other.getIARM());  if (other.hasDID()) { this.bitField2_ |= 0x4000; this.dID_ = other.dID_; onChanged(); }  if (other.hasDAL()) { this.bitField2_ |= 0x8000; this.dAL_ = other.dAL_; onChanged(); }  if (other.hasDEST()) setDEST(other.getDEST());  if (other.hasOVM()) setOVM(other.getOVM());  if (other.hasCFL()) setCFL(other.getCFL());  if (other.hasCFL2()) setCFL2(other.getCFL2());  if (other.hasRPM()) setRPM(other.getRPM());  if (other.hasDUR()) setDUR(other.getDUR());  if (other.hasTDUR()) setTDUR(other.getTDUR());  if (other.hasIDL()) setIDL(other.getIDL());  if (other.hasSTP()) setSTP(other.getSTP());  if (this.tDxBuilder_ == null) { if (!other.tDx_.isEmpty()) { if (this.tDx_.isEmpty()) { this.tDx_ = other.tDx_; this.bitField2_ &= 0xFDFFFFFF; } else { ensureTDxIsMutable(); this.tDx_.addAll(other.tDx_); }  onChanged(); }  } else if (!other.tDx_.isEmpty()) { if (this.tDxBuilder_.isEmpty()) { this.tDxBuilder_.dispose(); this.tDxBuilder_ = null; this.tDx_ = other.tDx_; this.bitField2_ &= 0xFDFFFFFF; this.tDxBuilder_ = StarLinkMessage.mEventReport.alwaysUseFieldBuilders ? getTDxFieldBuilder() : null; } else { this.tDxBuilder_.addAllMessages(other.tDx_); }  }  mergeUnknownFields(other.unknownFields); onChanged(); return this; } public final boolean isInitialized() { for (int i = 0; i < getTDxCount(); i++) { if (!getTDx(i).isInitialized()) return false;  }  return true; } public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { StarLinkMessage.mEventReport parsedMessage = null; try { parsedMessage = (StarLinkMessage.mEventReport)StarLinkMessage.mEventReport.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (StarLinkMessage.mEventReport)e.getUnfinishedMessage(); throw e.unwrapIOException(); } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; } public boolean hasEID() { return ((this.bitField0_ & 0x1) != 0); } public int getEID() { return this.eID_; } public Builder setEID(int value) { this.bitField0_ |= 0x1; this.eID_ = value; onChanged(); return this; } public Builder clearEID() { this.bitField0_ &= 0xFFFFFFFE; this.eID_ = 0; onChanged(); return this; } public boolean hasEDESC() { return ((this.bitField0_ & 0x2) != 0); } public String getEDESC() { Object ref = this.eDESC_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.eDESC_ = s;  return s; }  return (String)ref; } public ByteString getEDESCBytes() { Object ref = this.eDESC_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.eDESC_ = b; return b; }  return (ByteString)ref; } public Builder setEDESC(String value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x2; this.eDESC_ = value; onChanged(); return this; } public Builder clearEDESC() { this.bitField0_ &= 0xFFFFFFFD; this.eDESC_ = StarLinkMessage.mEventReport.getDefaultInstance().getEDESC(); onChanged(); return this; } public Builder setEDESCBytes(ByteString value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x2; this.eDESC_ = value; onChanged(); return this; } public boolean hasEDT() { return ((this.bitField0_ & 0x4) != 0); } public int getEDT() { return this.eDT_; } public Builder setEDT(int value) { this.bitField0_ |= 0x4; this.eDT_ = value; onChanged(); return this; } public Builder clearEDT() { this.bitField0_ &= 0xFFFFFFFB; this.eDT_ = 0; onChanged(); return this; } public boolean hasEDTDiff() { return ((this.bitField0_ & 0x8) != 0); } public int getEDTDiff() { return this.eDTDiff_; } public Builder setEDTDiff(int value) { this.bitField0_ |= 0x8; this.eDTDiff_ = value; onChanged(); return this; } public Builder clearEDTDiff() { this.bitField0_ &= 0xFFFFFFF7; this.eDTDiff_ = 0; onChanged(); return this; } public boolean hasNXT() { return ((this.bitField0_ & 0x10) != 0); } public int getNXT() { return this.nXT_; } public Builder setNXT(int value) { this.bitField0_ |= 0x10; this.nXT_ = value; onChanged(); return this; } public Builder clearNXT() { this.bitField0_ &= 0xFFFFFFEF; this.nXT_ = 0; onChanged(); return this; } public boolean hasNXTS() { return ((this.bitField0_ & 0x20) != 0); } public int getNXTS() { return this.nXTS_; } public Builder setNXTS(int value) { this.bitField0_ |= 0x20; this.nXTS_ = value; onChanged(); return this; } public Builder clearNXTS() { this.bitField0_ &= 0xFFFFFFDF; this.nXTS_ = 0; onChanged(); return this; } public boolean hasExtraData() { return ((this.bitField0_ & 0x40) != 0); } public String getExtraData() { Object ref = this.extraData_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.extraData_ = s;  return s; }  return (String)ref; } public ByteString getExtraDataBytes() { Object ref = this.extraData_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.extraData_ = b; return b; }  return (ByteString)ref; } public Builder setExtraData(String value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x40; this.extraData_ = value; onChanged(); return this; } public Builder clearExtraData() { this.bitField0_ &= 0xFFFFFFBF; this.extraData_ = StarLinkMessage.mEventReport.getDefaultInstance().getExtraData(); onChanged(); return this; } public Builder setExtraDataBytes(ByteString value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x40; this.extraData_ = value; onChanged(); return this; } public boolean hasPDT() { return ((this.bitField0_ & 0x80) != 0); } public int getPDT() { return this.pDT_; } public Builder setPDT(int value) { this.bitField0_ |= 0x80; this.pDT_ = value; onChanged(); return this; } public Builder clearPDT() { this.bitField0_ &= 0xFFFFFF7F; this.pDT_ = 0; onChanged(); return this; } public boolean hasPDTDiff() { return ((this.bitField0_ & 0x100) != 0); } public int getPDTDiff() { return this.pDTDiff_; } public Builder setPDTDiff(int value) { this.bitField0_ |= 0x100; this.pDTDiff_ = value; onChanged(); return this; } public Builder clearPDTDiff() { this.bitField0_ &= 0xFFFFFEFF; this.pDTDiff_ = 0; onChanged(); return this; } public boolean hasLAT() { return ((this.bitField0_ & 0x200) != 0); } public int getLAT() { return this.lAT_; } public Builder setLAT(int value) { this.bitField0_ |= 0x200; this.lAT_ = value; onChanged(); return this; } public Builder clearLAT() { this.bitField0_ &= 0xFFFFFDFF; this.lAT_ = 0; onChanged(); return this; } public boolean hasLATDiff() { return ((this.bitField0_ & 0x400) != 0); } public int getLATDiff() { return this.lATDiff_; } public Builder setLATDiff(int value) { this.bitField0_ |= 0x400; this.lATDiff_ = value; onChanged(); return this; } public Builder clearLATDiff() { this.bitField0_ &= 0xFFFFFBFF; this.lATDiff_ = 0; onChanged(); return this; } public boolean hasLONG() { return ((this.bitField0_ & 0x800) != 0); } public int getLONG() { return this.lONG_; } public Builder setLONG(int value) { this.bitField0_ |= 0x800; this.lONG_ = value; onChanged(); return this; } public Builder clearLONG() { this.bitField0_ &= 0xFFFFF7FF; this.lONG_ = 0; onChanged(); return this; } public boolean hasLONGDiff() { return ((this.bitField0_ & 0x1000) != 0); } public int getLONGDiff() { return this.lONGDiff_; } public Builder setLONGDiff(int value) { this.bitField0_ |= 0x1000; this.lONGDiff_ = value; onChanged(); return this; } public Builder clearLONGDiff() { this.bitField0_ &= 0xFFFFEFFF; this.lONGDiff_ = 0; onChanged(); return this; } public boolean hasALT() { return ((this.bitField0_ & 0x2000) != 0); } public int getALT() { return this.aLT_; } public Builder setALT(int value) { this.bitField0_ |= 0x2000; this.aLT_ = value; onChanged(); return this; } public Builder clearALT() { this.bitField0_ &= 0xFFFFDFFF; this.aLT_ = 0; onChanged(); return this; } public boolean hasALTDiff() { return ((this.bitField0_ & 0x4000) != 0); } public int getALTDiff() { return this.aLTDiff_; } public Builder setALTDiff(int value) { this.bitField0_ |= 0x4000; this.aLTDiff_ = value; onChanged(); return this; } public Builder clearALTDiff() { this.bitField0_ &= 0xFFFFBFFF; this.aLTDiff_ = 0; onChanged(); return this; } public boolean hasSPD() { return ((this.bitField0_ & 0x8000) != 0); } public int getSPD() { return this.sPD_; } public Builder setSPD(int value) { this.bitField0_ |= 0x8000; this.sPD_ = value; onChanged(); return this; } public Builder clearSPD() { this.bitField0_ &= 0xFFFF7FFF; this.sPD_ = 0; onChanged(); return this; } public boolean hasSPDK() { return ((this.bitField0_ & 0x10000) != 0); } public int getSPDK() { return this.sPDK_; } public Builder setSPDK(int value) { this.bitField0_ |= 0x10000; this.sPDK_ = value; onChanged(); return this; } public Builder clearSPDK() { this.bitField0_ &= 0xFFFEFFFF; this.sPDK_ = 0; onChanged(); return this; } public boolean hasHEAD() { return ((this.bitField0_ & 0x20000) != 0); } public int getHEAD() { return this.hEAD_; } public Builder setHEAD(int value) { this.bitField0_ |= 0x20000; this.hEAD_ = value; onChanged(); return this; } public Builder clearHEAD() { this.bitField0_ &= 0xFFFDFFFF; this.hEAD_ = 0; onChanged(); return this; } public boolean hasHDOP() { return ((this.bitField0_ & 0x40000) != 0); } public int getHDOP() { return this.hDOP_; } public Builder setHDOP(int value) { this.bitField0_ |= 0x40000; this.hDOP_ = value; onChanged(); return this; } public Builder clearHDOP() { this.bitField0_ &= 0xFFFBFFFF; this.hDOP_ = 0; onChanged(); return this; } public boolean hasVDOP() { return ((this.bitField0_ & 0x80000) != 0); } public int getVDOP() { return this.vDOP_; } private Builder(GeneratedMessageV3.BuilderParent parent) { super(parent); this.eDESC_ = ""; this.extraData_ = ""; this.uSER_ = ""; this.eDV1_ = ""; this.eDV2_ = ""; this.eDV3_ = ""; this.eDV4_ = ""; this.dID_ = ""; this.dAL_ = ""; this.tDx_ = Collections.emptyList(); maybeForceBuilderInitialization(); }
/*       */       public Builder setVDOP(int value) { this.bitField0_ |= 0x80000; this.vDOP_ = value; onChanged(); return this; }
/* 23132 */       public Builder clearVDOP() { this.bitField0_ &= 0xFFF7FFFF; this.vDOP_ = 0; onChanged(); return this; } public boolean hasPDOP() { return ((this.bitField0_ & 0x100000) != 0); } public int getPDOP() { return this.pDOP_; } public Builder setPDOP(int value) { this.bitField0_ |= 0x100000; this.pDOP_ = value; onChanged(); return this; } public Builder clearPDOP() { this.bitField0_ &= 0xFFEFFFFF; this.pDOP_ = 0; onChanged(); return this; } public boolean hasSAT() { return ((this.bitField0_ & 0x200000) != 0); } public int getSAT() { return this.sAT_; } public Builder setSAT(int value) { this.bitField0_ |= 0x200000; this.sAT_ = value; onChanged(); return this; } public Builder clearSAT() { this.bitField0_ &= 0xFFDFFFFF; this.sAT_ = 0; onChanged(); return this; } public boolean hasSATN() { return ((this.bitField0_ & 0x400000) != 0); } public int getSATN() { return this.sATN_; } public Builder setSATN(int value) { this.bitField0_ |= 0x400000; this.sATN_ = value; onChanged(); return this; } public Builder clearSATN() { this.bitField0_ &= 0xFFBFFFFF; this.sATN_ = 0; onChanged(); return this; } public boolean hasSATU() { return ((this.bitField0_ & 0x800000) != 0); } public int getSATU() { return this.sATU_; } public Builder setSATU(int value) { this.bitField0_ |= 0x800000; this.sATU_ = value; onChanged(); return this; } public Builder clearSATU() { this.bitField0_ &= 0xFF7FFFFF; this.sATU_ = 0; onChanged(); return this; } public boolean hasGSS() { return ((this.bitField0_ & 0x1000000) != 0); } public int getGSS() { return this.gSS_; } public Builder setGSS(int value) { this.bitField0_ |= 0x1000000; this.gSS_ = value; onChanged(); return this; } public Builder clearGSS() { this.bitField0_ &= 0xFEFFFFFF; this.gSS_ = 0; onChanged(); return this; } public boolean hasGSSN() { return ((this.bitField0_ & 0x2000000) != 0); } public int getGSSN() { return this.gSSN_; } public Builder setGSSN(int value) { this.bitField0_ |= 0x2000000; this.gSSN_ = value; onChanged(); return this; } public Builder clearGSSN() { this.bitField0_ &= 0xFDFFFFFF; this.gSSN_ = 0; onChanged(); return this; } public boolean hasFIX() { return ((this.bitField0_ & 0x4000000) != 0); } public int getFIX() { return this.fIX_; } public Builder setFIX(int value) { this.bitField0_ |= 0x4000000; this.fIX_ = value; onChanged(); return this; } public Builder clearFIX() { this.bitField0_ &= 0xFBFFFFFF; this.fIX_ = 0; onChanged(); return this; } public boolean hasLOCA() { return ((this.bitField0_ & 0x8000000) != 0); } public int getLOCA() { return this.lOCA_; } public Builder setLOCA(int value) { this.bitField0_ |= 0x8000000; this.lOCA_ = value; onChanged(); return this; } public Builder clearLOCA() { this.bitField0_ &= 0xF7FFFFFF; this.lOCA_ = 0; onChanged(); return this; } public boolean hasLOCS() { return ((this.bitField0_ & 0x10000000) != 0); } public int getLOCS() { return this.lOCS_; } public Builder setLOCS(int value) { this.bitField0_ |= 0x10000000; this.lOCS_ = value; onChanged(); return this; } public Builder clearLOCS() { this.bitField0_ &= 0xEFFFFFFF; this.lOCS_ = 0; onChanged(); return this; } public boolean hasODO() { return ((this.bitField0_ & 0x20000000) != 0); } public int getODO() { return this.oDO_; } public Builder setODO(int value) { this.bitField0_ |= 0x20000000; this.oDO_ = value; onChanged(); return this; } public Builder clearODO() { this.bitField0_ &= 0xDFFFFFFF; this.oDO_ = 0; onChanged(); return this; } public boolean hasODODiff() { return ((this.bitField0_ & 0x40000000) != 0); } public int getODODiff() { return this.oDODiff_; } public Builder setODODiff(int value) { this.bitField0_ |= 0x40000000; this.oDODiff_ = value; onChanged(); return this; } public Builder clearODODiff() { this.bitField0_ &= 0xBFFFFFFF; this.oDODiff_ = 0; onChanged(); return this; } public boolean hasODOD() { return ((this.bitField0_ & Integer.MIN_VALUE) != 0); } public int getODOD() { return this.oDOD_; } public Builder setODOD(int value) { this.bitField0_ |= Integer.MIN_VALUE; this.oDOD_ = value; onChanged(); return this; } public Builder clearODOD() { this.bitField0_ &= Integer.MAX_VALUE; this.oDOD_ = 0; onChanged(); return this; } public boolean hasODODDiff() { return ((this.bitField1_ & 0x1) != 0); } public int getODODDiff() { return this.oDODDiff_; } public Builder setODODDiff(int value) { this.bitField1_ |= 0x1; this.oDODDiff_ = value; onChanged(); return this; } public Builder clearODODDiff() { this.bitField1_ &= 0xFFFFFFFE; this.oDODDiff_ = 0; onChanged(); return this; } public boolean hasCID() { return ((this.bitField1_ & 0x2) != 0); } public int getCID() { return this.cID_; } public Builder setCID(int value) { this.bitField1_ |= 0x2; this.cID_ = value; onChanged(); return this; } public Builder clearCID() { this.bitField1_ &= 0xFFFFFFFD; this.cID_ = 0; onChanged(); return this; } public boolean hasLAC() { return ((this.bitField1_ & 0x4) != 0); } public int getLAC() { return this.lAC_; } public Builder setLAC(int value) { this.bitField1_ |= 0x4; this.lAC_ = value; onChanged(); return this; } public Builder clearLAC() { this.bitField1_ &= 0xFFFFFFFB; this.lAC_ = 0; onChanged(); return this; } public boolean hasCSS() { return ((this.bitField1_ & 0x8) != 0); } public int getCSS() { return this.cSS_; } public Builder setCSS(int value) { this.bitField1_ |= 0x8; this.cSS_ = value; onChanged(); return this; } public Builder clearCSS() { this.bitField1_ &= 0xFFFFFFF7; this.cSS_ = 0; onChanged(); return this; } public boolean hasCSSDiff() { return ((this.bitField1_ & 0x10) != 0); } public int getCSSDiff() { return this.cSSDiff_; } public Builder setCSSDiff(int value) { this.bitField1_ |= 0x10; this.cSSDiff_ = value; onChanged(); return this; } public Builder clearCSSDiff() { this.bitField1_ &= 0xFFFFFFEF; this.cSSDiff_ = 0; onChanged(); return this; } public boolean hasCTA() { return ((this.bitField1_ & 0x20) != 0); } public int getCTA() { return this.cTA_; } public Builder setCTA(int value) { this.bitField1_ |= 0x20; this.cTA_ = value; onChanged(); return this; } public Builder clearCTA() { this.bitField1_ &= 0xFFFFFFDF; this.cTA_ = 0; onChanged(); return this; } public boolean hasCCN() { return ((this.bitField1_ & 0x40) != 0); } public int getCCN() { return this.cCN_; } public Builder setCCN(int value) { this.bitField1_ |= 0x40; this.cCN_ = value; onChanged(); return this; } public Builder clearCCN() { this.bitField1_ &= 0xFFFFFFBF; this.cCN_ = 0; onChanged(); return this; } public boolean hasJAM() { return ((this.bitField1_ & 0x80) != 0); } public boolean getJAM() { return this.jAM_; } public Builder setJAM(boolean value) { this.bitField1_ |= 0x80; this.jAM_ = value; onChanged(); return this; } public Builder clearJAM() { this.bitField1_ &= 0xFFFFFF7F; this.jAM_ = false; onChanged(); return this; } public boolean hasNC() { return ((this.bitField1_ & 0x100) != 0); } public int getNC() { return this.nC_; } public Builder setNC(int value) { this.bitField1_ |= 0x100; this.nC_ = value; onChanged(); return this; } public Builder clearNC() { this.bitField1_ &= 0xFFFFFEFF; this.nC_ = 0; onChanged(); return this; } public boolean hasNM() { return ((this.bitField1_ & 0x200) != 0); } public int getNM() { return this.nM_; } public Builder setNM(int value) { this.bitField1_ |= 0x200; this.nM_ = value; onChanged(); return this; } public Builder clearNM() { this.bitField1_ &= 0xFFFFFDFF; this.nM_ = 0; onChanged(); return this; } public boolean hasNT() { return ((this.bitField1_ & 0x400) != 0); } public int getNT() { return this.nT_; } public Builder setNT(int value) { this.bitField1_ |= 0x400; this.nT_ = value; onChanged(); return this; } public Builder clearNT() { this.bitField1_ &= 0xFFFFFBFF; this.nT_ = 0; onChanged(); return this; } public boolean hasCU() { return ((this.bitField1_ & 0x800) != 0); } public int getCU() { return this.cU_; } public Builder setCU(int value) { this.bitField1_ |= 0x800; this.cU_ = value; onChanged(); return this; } private void ensureTDxIsMutable() { if ((this.bitField2_ & 0x2000000) == 0)
/* 23133 */         { this.tDx_ = new ArrayList<>(this.tDx_);
/* 23134 */           this.bitField2_ |= 0x2000000; }  } public Builder clearCU() { this.bitField1_ &= 0xFFFFF7FF; this.cU_ = 0; onChanged(); return this; } public boolean hasVIN() { return ((this.bitField1_ & 0x1000) != 0); } public int getVIN() { return this.vIN_; } public Builder setVIN(int value) { this.bitField1_ |= 0x1000; this.vIN_ = value; onChanged(); return this; } public Builder clearVIN() { this.bitField1_ &= 0xFFFFEFFF; this.vIN_ = 0; onChanged(); return this; } public boolean hasVINDiff() { return ((this.bitField1_ & 0x2000) != 0); } public int getVINDiff() { return this.vINDiff_; } public Builder setVINDiff(int value) { this.bitField1_ |= 0x2000; this.vINDiff_ = value; onChanged(); return this; } public Builder clearVINDiff() { this.bitField1_ &= 0xFFFFDFFF; this.vINDiff_ = 0; onChanged(); return this; } public boolean hasVBAT() { return ((this.bitField1_ & 0x4000) != 0); } public int getVBAT() { return this.vBAT_; } public Builder setVBAT(int value) { this.bitField1_ |= 0x4000; this.vBAT_ = value; onChanged(); return this; } public Builder clearVBAT() { this.bitField1_ &= 0xFFFFBFFF; this.vBAT_ = 0; onChanged(); return this; } public boolean hasVBATDiff() { return ((this.bitField1_ & 0x8000) != 0); } public int getVBATDiff() { return this.vBATDiff_; } public Builder setVBATDiff(int value) { this.bitField1_ |= 0x8000; this.vBATDiff_ = value; onChanged(); return this; } public Builder clearVBATDiff() { this.bitField1_ &= 0xFFFF7FFF; this.vBATDiff_ = 0; onChanged(); return this; } public boolean hasV3() { return ((this.bitField1_ & 0x10000) != 0); } public int getV3() { return this.v3_; } public Builder setV3(int value) { this.bitField1_ |= 0x10000; this.v3_ = value; onChanged(); return this; } public Builder clearV3() { this.bitField1_ &= 0xFFFEFFFF; this.v3_ = 0; onChanged(); return this; } public boolean hasV3Diff() { return ((this.bitField1_ & 0x20000) != 0); } public int getV3Diff() { return this.v3Diff_; } public Builder setV3Diff(int value) { this.bitField1_ |= 0x20000; this.v3Diff_ = value; onChanged(); return this; } public Builder clearV3Diff() { this.bitField1_ &= 0xFFFDFFFF; this.v3Diff_ = 0; onChanged(); return this; } public boolean hasV4() { return ((this.bitField1_ & 0x40000) != 0); } public int getV4() { return this.v4_; } public Builder setV4(int value) { this.bitField1_ |= 0x40000; this.v4_ = value; onChanged(); return this; } public Builder clearV4() { this.bitField1_ &= 0xFFFBFFFF; this.v4_ = 0; onChanged(); return this; } public boolean hasV4Diff() { return ((this.bitField1_ & 0x80000) != 0); } public int getV4Diff() { return this.v4Diff_; } public Builder setV4Diff(int value) { this.bitField1_ |= 0x80000; this.v4Diff_ = value; onChanged(); return this; } public Builder clearV4Diff() { this.bitField1_ &= 0xFFF7FFFF; this.v4Diff_ = 0; onChanged(); return this; } public boolean hasBATH() { return ((this.bitField1_ & 0x100000) != 0); } public int getBATH() { return this.bATH_; } public Builder setBATH(int value) { this.bitField1_ |= 0x100000; this.bATH_ = value; onChanged(); return this; } public Builder clearBATH() { this.bitField1_ &= 0xFFEFFFFF; this.bATH_ = 0; onChanged(); return this; } public boolean hasBATC() { return ((this.bitField1_ & 0x200000) != 0); } public int getBATC() { return this.bATC_; } public Builder setBATC(int value) { this.bitField1_ |= 0x200000; this.bATC_ = value; onChanged(); return this; } public Builder clearBATC() { this.bitField1_ &= 0xFFDFFFFF; this.bATC_ = 0; onChanged(); return this; } public boolean hasSTRT() { return ((this.bitField1_ & 0x400000) != 0); } public int getSTRT() { return this.sTRT_; } public Builder setSTRT(int value) { this.bitField1_ |= 0x400000; this.sTRT_ = value; onChanged(); return this; } public Builder clearSTRT() { this.bitField1_ &= 0xFFBFFFFF; this.sTRT_ = 0; onChanged(); return this; } public boolean hasTVI() { return ((this.bitField1_ & 0x800000) != 0); } public int getTVI() { return this.tVI_; } public Builder setTVI(int value) { this.bitField1_ |= 0x800000; this.tVI_ = value; onChanged(); return this; } public Builder clearTVI() { this.bitField1_ &= 0xFF7FFFFF; this.tVI_ = 0; onChanged(); return this; } public boolean hasInputs() { return ((this.bitField1_ & 0x1000000) != 0); } public int getInputs() { return this.inputs_; } public Builder setInputs(int value) { this.bitField1_ |= 0x1000000; this.inputs_ = value; onChanged(); return this; } public Builder clearInputs() { this.bitField1_ &= 0xFEFFFFFF; this.inputs_ = 0; onChanged(); return this; } public boolean hasDInputs() { return ((this.bitField1_ & 0x2000000) != 0); } public int getDInputs() { return this.dInputs_; } public Builder setDInputs(int value) { this.bitField1_ |= 0x2000000; this.dInputs_ = value; onChanged(); return this; } public Builder clearDInputs() { this.bitField1_ &= 0xFDFFFFFF; this.dInputs_ = 0; onChanged(); return this; } public boolean hasIgnitionEngine() { return ((this.bitField1_ & 0x4000000) != 0); } public int getIgnitionEngine() { return this.ignitionEngine_; } public Builder setIgnitionEngine(int value) { this.bitField1_ |= 0x4000000; this.ignitionEngine_ = value; onChanged(); return this; } public Builder clearIgnitionEngine() { this.bitField1_ &= 0xFBFFFFFF; this.ignitionEngine_ = 0; onChanged(); return this; } public boolean hasOutputs() { return ((this.bitField1_ & 0x8000000) != 0); } public int getOutputs() { return this.outputs_; } public Builder setOutputs(int value) { this.bitField1_ |= 0x8000000; this.outputs_ = value; onChanged(); return this; } public Builder clearOutputs() { this.bitField1_ &= 0xF7FFFFFF; this.outputs_ = 0; onChanged(); return this; } public boolean hasUSER() { return ((this.bitField1_ & 0x10000000) != 0); } public String getUSER() { Object ref = this.uSER_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.uSER_ = s;  return s; }  return (String)ref; } public ByteString getUSERBytes() { Object ref = this.uSER_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.uSER_ = b; return b; }  return (ByteString)ref; } public Builder setUSER(String value) { if (value == null) throw new NullPointerException();  this.bitField1_ |= 0x10000000; this.uSER_ = value; onChanged(); return this; } public Builder clearUSER() { this.bitField1_ &= 0xEFFFFFFF; this.uSER_ = StarLinkMessage.mEventReport.getDefaultInstance().getUSER(); onChanged(); return this; } public Builder setUSERBytes(ByteString value) { if (value == null) throw new NullPointerException();  this.bitField1_ |= 0x10000000; this.uSER_ = value; onChanged(); return this; } public boolean hasEDV1() { return ((this.bitField1_ & 0x20000000) != 0); } public String getEDV1() { Object ref = this.eDV1_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.eDV1_ = s;  return s; }  return (String)ref; } public ByteString getEDV1Bytes() { Object ref = this.eDV1_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.eDV1_ = b; return b; }  return (ByteString)ref; } public Builder setEDV1(String value) { if (value == null) throw new NullPointerException();  this.bitField1_ |= 0x20000000; this.eDV1_ = value; onChanged(); return this; } public Builder clearEDV1() { this.bitField1_ &= 0xDFFFFFFF; this.eDV1_ = StarLinkMessage.mEventReport.getDefaultInstance().getEDV1(); onChanged(); return this; } public Builder setEDV1Bytes(ByteString value) { if (value == null) throw new NullPointerException();  this.bitField1_ |= 0x20000000; this.eDV1_ = value; onChanged(); return this; } public boolean hasEDV2() { return ((this.bitField1_ & 0x40000000) != 0); } public String getEDV2() { Object ref = this.eDV2_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.eDV2_ = s;  return s; }  return (String)ref; } public ByteString getEDV2Bytes() { Object ref = this.eDV2_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.eDV2_ = b; return b; }  return (ByteString)ref; } public Builder setEDV2(String value) { if (value == null) throw new NullPointerException();  this.bitField1_ |= 0x40000000; this.eDV2_ = value; onChanged(); return this; } public Builder clearEDV2() { this.bitField1_ &= 0xBFFFFFFF; this.eDV2_ = StarLinkMessage.mEventReport.getDefaultInstance().getEDV2(); onChanged(); return this; } public Builder setEDV2Bytes(ByteString value) { if (value == null) throw new NullPointerException();  this.bitField1_ |= 0x40000000; this.eDV2_ = value; onChanged(); return this; } public boolean hasEDV3() { return ((this.bitField1_ & Integer.MIN_VALUE) != 0); } public String getEDV3() { Object ref = this.eDV3_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.eDV3_ = s;  return s; }  return (String)ref; } public ByteString getEDV3Bytes() { Object ref = this.eDV3_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.eDV3_ = b; return b; }  return (ByteString)ref; } public Builder setEDV3(String value) { if (value == null) throw new NullPointerException();  this.bitField1_ |= Integer.MIN_VALUE; this.eDV3_ = value; onChanged(); return this; } public Builder clearEDV3() { this.bitField1_ &= Integer.MAX_VALUE; this.eDV3_ = StarLinkMessage.mEventReport.getDefaultInstance().getEDV3(); onChanged(); return this; } public Builder setEDV3Bytes(ByteString value) { if (value == null) throw new NullPointerException();  this.bitField1_ |= Integer.MIN_VALUE; this.eDV3_ = value; onChanged(); return this; } public boolean hasEDV4() { return ((this.bitField2_ & 0x1) != 0); } public String getEDV4() { Object ref = this.eDV4_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.eDV4_ = s;  return s; }  return (String)ref; } public ByteString getEDV4Bytes() { Object ref = this.eDV4_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.eDV4_ = b; return b; }  return (ByteString)ref; } public Builder setEDV4(String value) { if (value == null) throw new NullPointerException();  this.bitField2_ |= 0x1; this.eDV4_ = value; onChanged(); return this; } public Builder clearEDV4() { this.bitField2_ &= 0xFFFFFFFE; this.eDV4_ = StarLinkMessage.mEventReport.getDefaultInstance().getEDV4(); onChanged(); return this; } public Builder setEDV4Bytes(ByteString value) { if (value == null) throw new NullPointerException();  this.bitField2_ |= 0x1; this.eDV4_ = value; onChanged(); return this; } public boolean hasCV1() { return ((this.bitField2_ & 0x2) != 0); } public int getCV1() { return this.cV1_; } public Builder setCV1(int value) { this.bitField2_ |= 0x2; this.cV1_ = value; onChanged(); return this; } public Builder clearCV1() { this.bitField2_ &= 0xFFFFFFFD; this.cV1_ = 0; onChanged(); return this; } public boolean hasCV2() { return ((this.bitField2_ & 0x4) != 0); } public int getCV2() { return this.cV2_; } public Builder setCV2(int value) { this.bitField2_ |= 0x4; this.cV2_ = value; onChanged(); return this; } public Builder clearCV2() { this.bitField2_ &= 0xFFFFFFFB; this.cV2_ = 0; onChanged(); return this; } public boolean hasCV3() { return ((this.bitField2_ & 0x8) != 0); } public int getCV3() { return this.cV3_; } public Builder setCV3(int value) { this.bitField2_ |= 0x8; this.cV3_ = value; onChanged(); return this; } public Builder clearCV3() { this.bitField2_ &= 0xFFFFFFF7; this.cV3_ = 0; onChanged(); return this; } public boolean hasCV4() { return ((this.bitField2_ & 0x10) != 0); } public int getCV4() { return this.cV4_; } public Builder setCV4(int value) { this.bitField2_ |= 0x10; this.cV4_ = value; onChanged(); return this; } public Builder clearCV4() { this.bitField2_ &= 0xFFFFFFEF; this.cV4_ = 0; onChanged(); return this; } public boolean hasCV5() { return ((this.bitField2_ & 0x20) != 0); } public int getCV5() { return this.cV5_; } public Builder setCV5(int value) { this.bitField2_ |= 0x20; this.cV5_ = value; onChanged(); return this; } public Builder clearCV5() { this.bitField2_ &= 0xFFFFFFDF; this.cV5_ = 0; onChanged(); return this; } public boolean hasCV6() { return ((this.bitField2_ & 0x40) != 0); } public int getCV6() { return this.cV6_; } public Builder setCV6(int value) { this.bitField2_ |= 0x40; this.cV6_ = value; onChanged(); return this; } public Builder clearCV6() { this.bitField2_ &= 0xFFFFFFBF; this.cV6_ = 0; onChanged(); return this; } public boolean hasCV7() { return ((this.bitField2_ & 0x80) != 0); } public int getCV7() { return this.cV7_; } public Builder setCV7(int value) { this.bitField2_ |= 0x80; this.cV7_ = value; onChanged(); return this; } public Builder clearCV7() { this.bitField2_ &= 0xFFFFFF7F; this.cV7_ = 0; onChanged(); return this; } public boolean hasCV8() { return ((this.bitField2_ & 0x100) != 0); } public int getCV8() { return this.cV8_; } public Builder setCV8(int value) { this.bitField2_ |= 0x100; this.cV8_ = value; onChanged(); return this; } public Builder clearCV8() { this.bitField2_ &= 0xFFFFFEFF; this.cV8_ = 0; onChanged(); return this; } public boolean hasCV9() { return ((this.bitField2_ & 0x200) != 0); } public int getCV9() { return this.cV9_; } public Builder setCV9(int value) { this.bitField2_ |= 0x200; this.cV9_ = value; onChanged(); return this; } public Builder clearCV9() { this.bitField2_ &= 0xFFFFFDFF; this.cV9_ = 0; onChanged(); return this; } public boolean hasCV10() { return ((this.bitField2_ & 0x400) != 0); } public int getCV10() { return this.cV10_; } public Builder setCV10(int value) { this.bitField2_ |= 0x400; this.cV10_ = value; onChanged(); return this; } public Builder clearCV10() { this.bitField2_ &= 0xFFFFFBFF; this.cV10_ = 0; onChanged(); return this; } public boolean hasCV11() { return ((this.bitField2_ & 0x800) != 0); } public int getCV11() { return this.cV11_; } public Builder setCV11(int value) { this.bitField2_ |= 0x800; this.cV11_ = value; onChanged(); return this; } public Builder clearCV11() { this.bitField2_ &= 0xFFFFF7FF; this.cV11_ = 0; onChanged(); return this; } public boolean hasCV12() { return ((this.bitField2_ & 0x1000) != 0); } public int getCV12() { return this.cV12_; } public Builder setCV12(int value) { this.bitField2_ |= 0x1000; this.cV12_ = value; onChanged(); return this; } public Builder clearCV12() { this.bitField2_ &= 0xFFFFEFFF; this.cV12_ = 0; onChanged(); return this; } public boolean hasIARM() { return ((this.bitField2_ & 0x2000) != 0); } public boolean getIARM() { return this.iARM_; } public Builder setIARM(boolean value) { this.bitField2_ |= 0x2000; this.iARM_ = value; onChanged(); return this; } public Builder clearIARM() { this.bitField2_ &= 0xFFFFDFFF; this.iARM_ = false; onChanged(); return this; } public boolean hasDID() { return ((this.bitField2_ & 0x4000) != 0); } public String getDID() { Object ref = this.dID_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.dID_ = s;  return s; }  return (String)ref; } public ByteString getDIDBytes() { Object ref = this.dID_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.dID_ = b; return b; }  return (ByteString)ref; } public Builder setDID(String value) { if (value == null) throw new NullPointerException();  this.bitField2_ |= 0x4000; this.dID_ = value; onChanged(); return this; } public Builder clearDID() { this.bitField2_ &= 0xFFFFBFFF; this.dID_ = StarLinkMessage.mEventReport.getDefaultInstance().getDID(); onChanged(); return this; } public Builder setDIDBytes(ByteString value) { if (value == null) throw new NullPointerException();  this.bitField2_ |= 0x4000; this.dID_ = value; onChanged(); return this; } public boolean hasDAL() { return ((this.bitField2_ & 0x8000) != 0); } public String getDAL() { Object ref = this.dAL_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.dAL_ = s;  return s; }  return (String)ref; } public ByteString getDALBytes() { Object ref = this.dAL_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.dAL_ = b; return b; }  return (ByteString)ref; } public Builder setDAL(String value) { if (value == null) throw new NullPointerException();  this.bitField2_ |= 0x8000; this.dAL_ = value; onChanged(); return this; } public Builder clearDAL() { this.bitField2_ &= 0xFFFF7FFF; this.dAL_ = StarLinkMessage.mEventReport.getDefaultInstance().getDAL(); onChanged(); return this; } public Builder setDALBytes(ByteString value) { if (value == null) throw new NullPointerException();  this.bitField2_ |= 0x8000; this.dAL_ = value; onChanged(); return this; } public boolean hasDEST() { return ((this.bitField2_ & 0x10000) != 0); } public int getDEST() { return this.dEST_; } public Builder setDEST(int value) { this.bitField2_ |= 0x10000; this.dEST_ = value; onChanged(); return this; } public Builder clearDEST() { this.bitField2_ &= 0xFFFEFFFF; this.dEST_ = 0; onChanged(); return this; } public boolean hasOVM() { return ((this.bitField2_ & 0x20000) != 0); } public boolean getOVM() { return this.oVM_; } public Builder setOVM(boolean value) { this.bitField2_ |= 0x20000; this.oVM_ = value; onChanged(); return this; } public Builder clearOVM() { this.bitField2_ &= 0xFFFDFFFF; this.oVM_ = false; onChanged(); return this; } public boolean hasCFL() { return ((this.bitField2_ & 0x40000) != 0); } public int getCFL() { return this.cFL_; } public Builder setCFL(int value) { this.bitField2_ |= 0x40000; this.cFL_ = value; onChanged(); return this; } public Builder clearCFL() { this.bitField2_ &= 0xFFFBFFFF; this.cFL_ = 0; onChanged(); return this; } public boolean hasCFL2() { return ((this.bitField2_ & 0x80000) != 0); } public int getCFL2() { return this.cFL2_; } public Builder setCFL2(int value) { this.bitField2_ |= 0x80000; this.cFL2_ = value; onChanged(); return this; } public Builder clearCFL2() { this.bitField2_ &= 0xFFF7FFFF; this.cFL2_ = 0; onChanged(); return this; } public boolean hasRPM() { return ((this.bitField2_ & 0x100000) != 0); } public int getRPM() { return this.rPM_; } public Builder setRPM(int value) { this.bitField2_ |= 0x100000; this.rPM_ = value; onChanged(); return this; } public Builder clearRPM() { this.bitField2_ &= 0xFFEFFFFF; this.rPM_ = 0; onChanged(); return this; } public boolean hasDUR() { return ((this.bitField2_ & 0x200000) != 0); } public int getDUR() { return this.dUR_; }
/*       */       public Builder setDUR(int value) { this.bitField2_ |= 0x200000; this.dUR_ = value; onChanged(); return this; }
/*       */       public Builder clearDUR() { this.bitField2_ &= 0xFFDFFFFF; this.dUR_ = 0; onChanged(); return this; }
/*       */       public boolean hasTDUR() { return ((this.bitField2_ & 0x400000) != 0); }
/*       */       public int getTDUR() { return this.tDUR_; }
/*       */       public Builder setTDUR(int value) { this.bitField2_ |= 0x400000; this.tDUR_ = value; onChanged(); return this; }
/*       */       public Builder clearTDUR() { this.bitField2_ &= 0xFFBFFFFF; this.tDUR_ = 0; onChanged(); return this; }
/*       */       public boolean hasIDL() { return ((this.bitField2_ & 0x800000) != 0); }
/*       */       public int getIDL() { return this.iDL_; }
/*       */       public Builder setIDL(int value) { this.bitField2_ |= 0x800000; this.iDL_ = value; onChanged(); return this; }
/*       */       public Builder clearIDL() { this.bitField2_ &= 0xFF7FFFFF; this.iDL_ = 0; onChanged(); return this; }
/*       */       public boolean hasSTP() { return ((this.bitField2_ & 0x1000000) != 0); }
/*       */       public int getSTP() { return this.sTP_; }
/*       */       public Builder setSTP(int value) { this.bitField2_ |= 0x1000000; this.sTP_ = value; onChanged(); return this; }
/*       */       public Builder clearSTP() { this.bitField2_ &= 0xFEFFFFFF; this.sTP_ = 0; onChanged(); return this; }
/* 23149 */       public List<StarLinkMessage.mEventReport_TDx> getTDxList() { if (this.tDxBuilder_ == null) {
/* 23150 */           return Collections.unmodifiableList(this.tDx_);
/*       */         }
/* 23152 */         return this.tDxBuilder_.getMessageList(); }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getTDxCount() {
/* 23163 */         if (this.tDxBuilder_ == null) {
/* 23164 */           return this.tDx_.size();
/*       */         }
/* 23166 */         return this.tDxBuilder_.getCount();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public StarLinkMessage.mEventReport_TDx getTDx(int index) {
/* 23177 */         if (this.tDxBuilder_ == null) {
/* 23178 */           return this.tDx_.get(index);
/*       */         }
/* 23180 */         return (StarLinkMessage.mEventReport_TDx)this.tDxBuilder_.getMessage(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setTDx(int index, StarLinkMessage.mEventReport_TDx value) {
/* 23192 */         if (this.tDxBuilder_ == null) {
/* 23193 */           if (value == null) {
/* 23194 */             throw new NullPointerException();
/*       */           }
/* 23196 */           ensureTDxIsMutable();
/* 23197 */           this.tDx_.set(index, value);
/* 23198 */           onChanged();
/*       */         } else {
/* 23200 */           this.tDxBuilder_.setMessage(index, (AbstractMessage)value);
/*       */         } 
/* 23202 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setTDx(int index, StarLinkMessage.mEventReport_TDx.Builder builderForValue) {
/* 23213 */         if (this.tDxBuilder_ == null) {
/* 23214 */           ensureTDxIsMutable();
/* 23215 */           this.tDx_.set(index, builderForValue.build());
/* 23216 */           onChanged();
/*       */         } else {
/* 23218 */           this.tDxBuilder_.setMessage(index, (AbstractMessage)builderForValue.build());
/*       */         } 
/* 23220 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addTDx(StarLinkMessage.mEventReport_TDx value) {
/* 23230 */         if (this.tDxBuilder_ == null) {
/* 23231 */           if (value == null) {
/* 23232 */             throw new NullPointerException();
/*       */           }
/* 23234 */           ensureTDxIsMutable();
/* 23235 */           this.tDx_.add(value);
/* 23236 */           onChanged();
/*       */         } else {
/* 23238 */           this.tDxBuilder_.addMessage((AbstractMessage)value);
/*       */         } 
/* 23240 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addTDx(int index, StarLinkMessage.mEventReport_TDx value) {
/* 23251 */         if (this.tDxBuilder_ == null) {
/* 23252 */           if (value == null) {
/* 23253 */             throw new NullPointerException();
/*       */           }
/* 23255 */           ensureTDxIsMutable();
/* 23256 */           this.tDx_.add(index, value);
/* 23257 */           onChanged();
/*       */         } else {
/* 23259 */           this.tDxBuilder_.addMessage(index, (AbstractMessage)value);
/*       */         } 
/* 23261 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addTDx(StarLinkMessage.mEventReport_TDx.Builder builderForValue) {
/* 23272 */         if (this.tDxBuilder_ == null) {
/* 23273 */           ensureTDxIsMutable();
/* 23274 */           this.tDx_.add(builderForValue.build());
/* 23275 */           onChanged();
/*       */         } else {
/* 23277 */           this.tDxBuilder_.addMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/* 23279 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addTDx(int index, StarLinkMessage.mEventReport_TDx.Builder builderForValue) {
/* 23290 */         if (this.tDxBuilder_ == null) {
/* 23291 */           ensureTDxIsMutable();
/* 23292 */           this.tDx_.add(index, builderForValue.build());
/* 23293 */           onChanged();
/*       */         } else {
/* 23295 */           this.tDxBuilder_.addMessage(index, (AbstractMessage)builderForValue.build());
/*       */         } 
/* 23297 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addAllTDx(Iterable<? extends StarLinkMessage.mEventReport_TDx> values) {
/* 23308 */         if (this.tDxBuilder_ == null) {
/* 23309 */           ensureTDxIsMutable();
/* 23310 */           AbstractMessageLite.Builder.addAll(values, this.tDx_);
/*       */           
/* 23312 */           onChanged();
/*       */         } else {
/* 23314 */           this.tDxBuilder_.addAllMessages(values);
/*       */         } 
/* 23316 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearTDx() {
/* 23326 */         if (this.tDxBuilder_ == null) {
/* 23327 */           this.tDx_ = Collections.emptyList();
/* 23328 */           this.bitField2_ &= 0xFDFFFFFF;
/* 23329 */           onChanged();
/*       */         } else {
/* 23331 */           this.tDxBuilder_.clear();
/*       */         } 
/* 23333 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder removeTDx(int index) {
/* 23343 */         if (this.tDxBuilder_ == null) {
/* 23344 */           ensureTDxIsMutable();
/* 23345 */           this.tDx_.remove(index);
/* 23346 */           onChanged();
/*       */         } else {
/* 23348 */           this.tDxBuilder_.remove(index);
/*       */         } 
/* 23350 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public StarLinkMessage.mEventReport_TDx.Builder getTDxBuilder(int index) {
/* 23361 */         return (StarLinkMessage.mEventReport_TDx.Builder)getTDxFieldBuilder().getBuilder(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public StarLinkMessage.mEventReport_TDxOrBuilder getTDxOrBuilder(int index) {
/* 23372 */         if (this.tDxBuilder_ == null)
/* 23373 */           return this.tDx_.get(index); 
/* 23374 */         return (StarLinkMessage.mEventReport_TDxOrBuilder)this.tDxBuilder_.getMessageOrBuilder(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public List<? extends StarLinkMessage.mEventReport_TDxOrBuilder> getTDxOrBuilderList() {
/* 23386 */         if (this.tDxBuilder_ != null) {
/* 23387 */           return this.tDxBuilder_.getMessageOrBuilderList();
/*       */         }
/* 23389 */         return Collections.unmodifiableList((List)this.tDx_);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public StarLinkMessage.mEventReport_TDx.Builder addTDxBuilder() {
/* 23400 */         return (StarLinkMessage.mEventReport_TDx.Builder)getTDxFieldBuilder().addBuilder(
/* 23401 */             (AbstractMessage)StarLinkMessage.mEventReport_TDx.getDefaultInstance());
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public StarLinkMessage.mEventReport_TDx.Builder addTDxBuilder(int index) {
/* 23412 */         return (StarLinkMessage.mEventReport_TDx.Builder)getTDxFieldBuilder().addBuilder(index, 
/* 23413 */             (AbstractMessage)StarLinkMessage.mEventReport_TDx.getDefaultInstance());
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public List<StarLinkMessage.mEventReport_TDx.Builder> getTDxBuilderList() {
/* 23424 */         return getTDxFieldBuilder().getBuilderList();
/*       */       }
/*       */ 
/*       */       
/*       */       private RepeatedFieldBuilderV3<StarLinkMessage.mEventReport_TDx, StarLinkMessage.mEventReport_TDx.Builder, StarLinkMessage.mEventReport_TDxOrBuilder> getTDxFieldBuilder() {
/* 23429 */         if (this.tDxBuilder_ == null) {
/* 23430 */           this
/*       */ 
/*       */ 
/*       */ 
/*       */             
/* 23435 */             .tDxBuilder_ = new RepeatedFieldBuilderV3(this.tDx_, ((this.bitField2_ & 0x2000000) != 0), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/* 23436 */           this.tDx_ = null;
/*       */         } 
/* 23438 */         return this.tDxBuilder_;
/*       */       }
/*       */ 
/*       */       
/*       */       public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
/* 23443 */         return (Builder)super.setUnknownFields(unknownFields);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
/* 23449 */         return (Builder)super.mergeUnknownFields(unknownFields);
/*       */       } }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 23459 */     private static final mEventReport DEFAULT_INSTANCE = new mEventReport();
/*       */ 
/*       */     
/*       */     public static mEventReport getDefaultInstance() {
/* 23463 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */     
/*       */     @Deprecated
/* 23467 */     public static final Parser<mEventReport> PARSER = (Parser<mEventReport>)new AbstractParser<mEventReport>()
/*       */       {
/*       */ 
/*       */         
/*       */         public StarLinkMessage.mEventReport parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException
/*       */         {
/* 23473 */           return new StarLinkMessage.mEventReport(input, extensionRegistry);
/*       */         }
/*       */       };
/*       */     
/*       */     public static Parser<mEventReport> parser() {
/* 23478 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public Parser<mEventReport> getParserForType() {
/* 23483 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public mEventReport getDefaultInstanceForType() {
/* 23488 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public static interface mEventReport_TDxOrBuilder
/*       */     extends MessageOrBuilder
/*       */   {
/*       */     boolean hasSensorNumber();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getSensorNumber();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasSensorID();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     String getSensorID();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getSensorIDBytes();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasTemperature();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getTemperature();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasTemperatureState();
/*       */ 
/*       */ 
/*       */     
/*       */     int getTemperatureState();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasHumidity();
/*       */ 
/*       */ 
/*       */     
/*       */     int getHumidity();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasHumidityState();
/*       */ 
/*       */ 
/*       */     
/*       */     int getHumidityState();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasRSSI();
/*       */ 
/*       */ 
/*       */     
/*       */     int getRSSI();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasRSSIState();
/*       */ 
/*       */ 
/*       */     
/*       */     int getRSSIState();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasVoltage();
/*       */ 
/*       */ 
/*       */     
/*       */     int getVoltage();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasVoltageState();
/*       */ 
/*       */ 
/*       */     
/*       */     int getVoltageState();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasLight();
/*       */ 
/*       */ 
/*       */     
/*       */     int getLight();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasLightState();
/*       */ 
/*       */ 
/*       */     
/*       */     int getLightState();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasMagnetSwitch();
/*       */ 
/*       */ 
/*       */     
/*       */     int getMagnetSwitch();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasMagnetSwitchState();
/*       */ 
/*       */ 
/*       */     
/*       */     int getMagnetSwitchState();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasAccident();
/*       */ 
/*       */ 
/*       */     
/*       */     int getAccident();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasButton();
/*       */ 
/*       */ 
/*       */     
/*       */     int getButton();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasMovement();
/*       */ 
/*       */ 
/*       */     
/*       */     int getMovement();
/*       */   }
/*       */ 
/*       */ 
/*       */   
/*       */   public static final class mEventReport_TDx
/*       */     extends GeneratedMessageV3
/*       */     implements mEventReport_TDxOrBuilder
/*       */   {
/*       */     private static final long serialVersionUID = 0L;
/*       */ 
/*       */     
/*       */     private int bitField0_;
/*       */ 
/*       */     
/*       */     public static final int SENSORNUMBER_FIELD_NUMBER = 1;
/*       */ 
/*       */     
/*       */     private int sensorNumber_;
/*       */ 
/*       */     
/*       */     public static final int SENSORID_FIELD_NUMBER = 3;
/*       */ 
/*       */     
/*       */     private volatile Object sensorID_;
/*       */ 
/*       */     
/*       */     public static final int TEMPERATURE_FIELD_NUMBER = 4;
/*       */ 
/*       */     
/*       */     private int temperature_;
/*       */ 
/*       */     
/*       */     public static final int TEMPERATURE_STATE_FIELD_NUMBER = 2;
/*       */ 
/*       */     
/*       */     private int temperatureState_;
/*       */ 
/*       */     
/*       */     public static final int HUMIDITY_FIELD_NUMBER = 5;
/*       */ 
/*       */     
/*       */     private int humidity_;
/*       */ 
/*       */     
/*       */     public static final int HUMIDITY_STATE_FIELD_NUMBER = 6;
/*       */ 
/*       */     
/*       */     private int humidityState_;
/*       */ 
/*       */     
/*       */     public static final int RSSI_FIELD_NUMBER = 7;
/*       */ 
/*       */     
/*       */     private int rSSI_;
/*       */ 
/*       */     
/*       */     public static final int RSSI_STATE_FIELD_NUMBER = 8;
/*       */ 
/*       */     
/*       */     private int rSSIState_;
/*       */ 
/*       */     
/*       */     public static final int VOLTAGE_FIELD_NUMBER = 9;
/*       */ 
/*       */     
/*       */     private int voltage_;
/*       */ 
/*       */     
/*       */     public static final int VOLTAGE_STATE_FIELD_NUMBER = 10;
/*       */ 
/*       */     
/*       */     private int voltageState_;
/*       */ 
/*       */     
/*       */     public static final int LIGHT_FIELD_NUMBER = 11;
/*       */ 
/*       */     
/*       */     private int light_;
/*       */ 
/*       */     
/*       */     public static final int LIGHT_STATE_FIELD_NUMBER = 12;
/*       */ 
/*       */     
/*       */     private int lightState_;
/*       */ 
/*       */     
/*       */     public static final int MAGNETSWITCH_FIELD_NUMBER = 13;
/*       */ 
/*       */     
/*       */     private int magnetSwitch_;
/*       */ 
/*       */     
/*       */     public static final int MAGNETSWITCH_STATE_FIELD_NUMBER = 14;
/*       */ 
/*       */     
/*       */     private int magnetSwitchState_;
/*       */ 
/*       */     
/*       */     public static final int ACCIDENT_FIELD_NUMBER = 15;
/*       */ 
/*       */     
/*       */     private int accident_;
/*       */ 
/*       */     
/*       */     public static final int BUTTON_FIELD_NUMBER = 16;
/*       */ 
/*       */     
/*       */     private int button_;
/*       */ 
/*       */     
/*       */     public static final int MOVEMENT_FIELD_NUMBER = 17;
/*       */ 
/*       */     
/*       */     private int movement_;
/*       */ 
/*       */     
/*       */     private byte memoizedIsInitialized;
/*       */ 
/*       */ 
/*       */     
/*       */     private mEventReport_TDx(GeneratedMessageV3.Builder<?> builder)
/*       */     {
/* 23764 */       super(builder);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/* 24332 */       this.memoizedIsInitialized = -1; } private mEventReport_TDx() { this.memoizedIsInitialized = -1; this.sensorID_ = ""; } protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) { return new mEventReport_TDx(); } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private mEventReport_TDx(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this(); if (extensionRegistry == null) throw new NullPointerException();  int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { ByteString bs; int tag = input.readTag(); switch (tag) { case 0: done = true; continue;case 8: this.bitField0_ |= 0x1; this.sensorNumber_ = input.readUInt32(); continue;case 16: this.bitField0_ |= 0x8; this.temperatureState_ = input.readUInt32(); continue;case 26: bs = input.readBytes(); this.bitField0_ |= 0x2; this.sensorID_ = bs; continue;case 32: this.bitField0_ |= 0x4; this.temperature_ = input.readSInt32(); continue;case 40: this.bitField0_ |= 0x10; this.humidity_ = input.readUInt32(); continue;case 48: this.bitField0_ |= 0x20; this.humidityState_ = input.readUInt32(); continue;case 56: this.bitField0_ |= 0x40; this.rSSI_ = input.readUInt32(); continue;case 64: this.bitField0_ |= 0x80; this.rSSIState_ = input.readUInt32(); continue;case 72: this.bitField0_ |= 0x100; this.voltage_ = input.readUInt32(); continue;case 80: this.bitField0_ |= 0x200; this.voltageState_ = input.readUInt32(); continue;case 88: this.bitField0_ |= 0x400; this.light_ = input.readUInt32(); continue;case 96: this.bitField0_ |= 0x800; this.lightState_ = input.readUInt32(); continue;case 104: this.bitField0_ |= 0x1000; this.magnetSwitch_ = input.readUInt32(); continue;case 112: this.bitField0_ |= 0x2000; this.magnetSwitchState_ = input.readUInt32(); continue;case 120: this.bitField0_ |= 0x4000; this.accident_ = input.readUInt32(); continue;case 128: this.bitField0_ |= 0x8000; this.button_ = input.readUInt32(); continue;case 136: this.bitField0_ |= 0x10000; this.movement_ = input.readUInt32(); continue; }  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this); } finally { this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_mEventReport_TDx_descriptor; } protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() { return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_mEventReport_TDx_fieldAccessorTable.ensureFieldAccessorsInitialized(mEventReport_TDx.class, Builder.class); } public boolean hasSensorNumber() { return ((this.bitField0_ & 0x1) != 0); } public int getSensorNumber() { return this.sensorNumber_; } public boolean hasSensorID() { return ((this.bitField0_ & 0x2) != 0); } public String getSensorID() { Object ref = this.sensorID_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.sensorID_ = s;  return s; } public ByteString getSensorIDBytes() { Object ref = this.sensorID_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.sensorID_ = b; return b; }  return (ByteString)ref; } public boolean hasTemperature() { return ((this.bitField0_ & 0x4) != 0); } public int getTemperature() { return this.temperature_; } public boolean hasTemperatureState() { return ((this.bitField0_ & 0x8) != 0); } public int getTemperatureState() { return this.temperatureState_; } public boolean hasHumidity() { return ((this.bitField0_ & 0x10) != 0); } public int getHumidity() { return this.humidity_; } public boolean hasHumidityState() { return ((this.bitField0_ & 0x20) != 0); } public int getHumidityState() { return this.humidityState_; } public boolean hasRSSI() { return ((this.bitField0_ & 0x40) != 0); } public int getRSSI() { return this.rSSI_; } public boolean hasRSSIState() { return ((this.bitField0_ & 0x80) != 0); } public int getRSSIState() { return this.rSSIState_; } public boolean hasVoltage() { return ((this.bitField0_ & 0x100) != 0); } public int getVoltage() { return this.voltage_; } public boolean hasVoltageState() { return ((this.bitField0_ & 0x200) != 0); } public int getVoltageState() { return this.voltageState_; } public boolean hasLight() { return ((this.bitField0_ & 0x400) != 0); } public int getLight() { return this.light_; } public boolean hasLightState() { return ((this.bitField0_ & 0x800) != 0); } public int getLightState() { return this.lightState_; } public boolean hasMagnetSwitch() { return ((this.bitField0_ & 0x1000) != 0); } public int getMagnetSwitch() { return this.magnetSwitch_; } public boolean hasMagnetSwitchState() { return ((this.bitField0_ & 0x2000) != 0); } public int getMagnetSwitchState() { return this.magnetSwitchState_; } public boolean hasAccident() { return ((this.bitField0_ & 0x4000) != 0); } public int getAccident() { return this.accident_; } public boolean hasButton() { return ((this.bitField0_ & 0x8000) != 0); } public int getButton() { return this.button_; }
/*       */     public boolean hasMovement() { return ((this.bitField0_ & 0x10000) != 0); }
/*       */     public int getMovement() { return this.movement_; }
/* 24335 */     public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized;
/* 24336 */       if (isInitialized == 1) return true; 
/* 24337 */       if (isInitialized == 0) return false;
/*       */       
/* 24339 */       if (!hasSensorNumber()) {
/* 24340 */         this.memoizedIsInitialized = 0;
/* 24341 */         return false;
/*       */       } 
/* 24343 */       this.memoizedIsInitialized = 1;
/* 24344 */       return true; }
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/* 24350 */       if ((this.bitField0_ & 0x1) != 0) {
/* 24351 */         output.writeUInt32(1, this.sensorNumber_);
/*       */       }
/* 24353 */       if ((this.bitField0_ & 0x8) != 0) {
/* 24354 */         output.writeUInt32(2, this.temperatureState_);
/*       */       }
/* 24356 */       if ((this.bitField0_ & 0x2) != 0) {
/* 24357 */         GeneratedMessageV3.writeString(output, 3, this.sensorID_);
/*       */       }
/* 24359 */       if ((this.bitField0_ & 0x4) != 0) {
/* 24360 */         output.writeSInt32(4, this.temperature_);
/*       */       }
/* 24362 */       if ((this.bitField0_ & 0x10) != 0) {
/* 24363 */         output.writeUInt32(5, this.humidity_);
/*       */       }
/* 24365 */       if ((this.bitField0_ & 0x20) != 0) {
/* 24366 */         output.writeUInt32(6, this.humidityState_);
/*       */       }
/* 24368 */       if ((this.bitField0_ & 0x40) != 0) {
/* 24369 */         output.writeUInt32(7, this.rSSI_);
/*       */       }
/* 24371 */       if ((this.bitField0_ & 0x80) != 0) {
/* 24372 */         output.writeUInt32(8, this.rSSIState_);
/*       */       }
/* 24374 */       if ((this.bitField0_ & 0x100) != 0) {
/* 24375 */         output.writeUInt32(9, this.voltage_);
/*       */       }
/* 24377 */       if ((this.bitField0_ & 0x200) != 0) {
/* 24378 */         output.writeUInt32(10, this.voltageState_);
/*       */       }
/* 24380 */       if ((this.bitField0_ & 0x400) != 0) {
/* 24381 */         output.writeUInt32(11, this.light_);
/*       */       }
/* 24383 */       if ((this.bitField0_ & 0x800) != 0) {
/* 24384 */         output.writeUInt32(12, this.lightState_);
/*       */       }
/* 24386 */       if ((this.bitField0_ & 0x1000) != 0) {
/* 24387 */         output.writeUInt32(13, this.magnetSwitch_);
/*       */       }
/* 24389 */       if ((this.bitField0_ & 0x2000) != 0) {
/* 24390 */         output.writeUInt32(14, this.magnetSwitchState_);
/*       */       }
/* 24392 */       if ((this.bitField0_ & 0x4000) != 0) {
/* 24393 */         output.writeUInt32(15, this.accident_);
/*       */       }
/* 24395 */       if ((this.bitField0_ & 0x8000) != 0) {
/* 24396 */         output.writeUInt32(16, this.button_);
/*       */       }
/* 24398 */       if ((this.bitField0_ & 0x10000) != 0) {
/* 24399 */         output.writeUInt32(17, this.movement_);
/*       */       }
/* 24401 */       this.unknownFields.writeTo(output);
/*       */     }
/*       */ 
/*       */     
/*       */     public int getSerializedSize() {
/* 24406 */       int size = this.memoizedSize;
/* 24407 */       if (size != -1) return size;
/*       */       
/* 24409 */       size = 0;
/* 24410 */       if ((this.bitField0_ & 0x1) != 0) {
/* 24411 */         size += 
/* 24412 */           CodedOutputStream.computeUInt32Size(1, this.sensorNumber_);
/*       */       }
/* 24414 */       if ((this.bitField0_ & 0x8) != 0) {
/* 24415 */         size += 
/* 24416 */           CodedOutputStream.computeUInt32Size(2, this.temperatureState_);
/*       */       }
/* 24418 */       if ((this.bitField0_ & 0x2) != 0) {
/* 24419 */         size += GeneratedMessageV3.computeStringSize(3, this.sensorID_);
/*       */       }
/* 24421 */       if ((this.bitField0_ & 0x4) != 0) {
/* 24422 */         size += 
/* 24423 */           CodedOutputStream.computeSInt32Size(4, this.temperature_);
/*       */       }
/* 24425 */       if ((this.bitField0_ & 0x10) != 0) {
/* 24426 */         size += 
/* 24427 */           CodedOutputStream.computeUInt32Size(5, this.humidity_);
/*       */       }
/* 24429 */       if ((this.bitField0_ & 0x20) != 0) {
/* 24430 */         size += 
/* 24431 */           CodedOutputStream.computeUInt32Size(6, this.humidityState_);
/*       */       }
/* 24433 */       if ((this.bitField0_ & 0x40) != 0) {
/* 24434 */         size += 
/* 24435 */           CodedOutputStream.computeUInt32Size(7, this.rSSI_);
/*       */       }
/* 24437 */       if ((this.bitField0_ & 0x80) != 0) {
/* 24438 */         size += 
/* 24439 */           CodedOutputStream.computeUInt32Size(8, this.rSSIState_);
/*       */       }
/* 24441 */       if ((this.bitField0_ & 0x100) != 0) {
/* 24442 */         size += 
/* 24443 */           CodedOutputStream.computeUInt32Size(9, this.voltage_);
/*       */       }
/* 24445 */       if ((this.bitField0_ & 0x200) != 0) {
/* 24446 */         size += 
/* 24447 */           CodedOutputStream.computeUInt32Size(10, this.voltageState_);
/*       */       }
/* 24449 */       if ((this.bitField0_ & 0x400) != 0) {
/* 24450 */         size += 
/* 24451 */           CodedOutputStream.computeUInt32Size(11, this.light_);
/*       */       }
/* 24453 */       if ((this.bitField0_ & 0x800) != 0) {
/* 24454 */         size += 
/* 24455 */           CodedOutputStream.computeUInt32Size(12, this.lightState_);
/*       */       }
/* 24457 */       if ((this.bitField0_ & 0x1000) != 0) {
/* 24458 */         size += 
/* 24459 */           CodedOutputStream.computeUInt32Size(13, this.magnetSwitch_);
/*       */       }
/* 24461 */       if ((this.bitField0_ & 0x2000) != 0) {
/* 24462 */         size += 
/* 24463 */           CodedOutputStream.computeUInt32Size(14, this.magnetSwitchState_);
/*       */       }
/* 24465 */       if ((this.bitField0_ & 0x4000) != 0) {
/* 24466 */         size += 
/* 24467 */           CodedOutputStream.computeUInt32Size(15, this.accident_);
/*       */       }
/* 24469 */       if ((this.bitField0_ & 0x8000) != 0) {
/* 24470 */         size += 
/* 24471 */           CodedOutputStream.computeUInt32Size(16, this.button_);
/*       */       }
/* 24473 */       if ((this.bitField0_ & 0x10000) != 0) {
/* 24474 */         size += 
/* 24475 */           CodedOutputStream.computeUInt32Size(17, this.movement_);
/*       */       }
/* 24477 */       size += this.unknownFields.getSerializedSize();
/* 24478 */       this.memoizedSize = size;
/* 24479 */       return size;
/*       */     }
/*       */ 
/*       */     
/*       */     public boolean equals(Object obj) {
/* 24484 */       if (obj == this) {
/* 24485 */         return true;
/*       */       }
/* 24487 */       if (!(obj instanceof mEventReport_TDx)) {
/* 24488 */         return super.equals(obj);
/*       */       }
/* 24490 */       mEventReport_TDx other = (mEventReport_TDx)obj;
/*       */       
/* 24492 */       if (hasSensorNumber() != other.hasSensorNumber()) return false; 
/* 24493 */       if (hasSensorNumber() && 
/* 24494 */         getSensorNumber() != other
/* 24495 */         .getSensorNumber()) return false;
/*       */       
/* 24497 */       if (hasSensorID() != other.hasSensorID()) return false; 
/* 24498 */       if (hasSensorID() && 
/*       */         
/* 24500 */         !getSensorID().equals(other.getSensorID())) return false;
/*       */       
/* 24502 */       if (hasTemperature() != other.hasTemperature()) return false; 
/* 24503 */       if (hasTemperature() && 
/* 24504 */         getTemperature() != other
/* 24505 */         .getTemperature()) return false;
/*       */       
/* 24507 */       if (hasTemperatureState() != other.hasTemperatureState()) return false; 
/* 24508 */       if (hasTemperatureState() && 
/* 24509 */         getTemperatureState() != other
/* 24510 */         .getTemperatureState()) return false;
/*       */       
/* 24512 */       if (hasHumidity() != other.hasHumidity()) return false; 
/* 24513 */       if (hasHumidity() && 
/* 24514 */         getHumidity() != other
/* 24515 */         .getHumidity()) return false;
/*       */       
/* 24517 */       if (hasHumidityState() != other.hasHumidityState()) return false; 
/* 24518 */       if (hasHumidityState() && 
/* 24519 */         getHumidityState() != other
/* 24520 */         .getHumidityState()) return false;
/*       */       
/* 24522 */       if (hasRSSI() != other.hasRSSI()) return false; 
/* 24523 */       if (hasRSSI() && 
/* 24524 */         getRSSI() != other
/* 24525 */         .getRSSI()) return false;
/*       */       
/* 24527 */       if (hasRSSIState() != other.hasRSSIState()) return false; 
/* 24528 */       if (hasRSSIState() && 
/* 24529 */         getRSSIState() != other
/* 24530 */         .getRSSIState()) return false;
/*       */       
/* 24532 */       if (hasVoltage() != other.hasVoltage()) return false; 
/* 24533 */       if (hasVoltage() && 
/* 24534 */         getVoltage() != other
/* 24535 */         .getVoltage()) return false;
/*       */       
/* 24537 */       if (hasVoltageState() != other.hasVoltageState()) return false; 
/* 24538 */       if (hasVoltageState() && 
/* 24539 */         getVoltageState() != other
/* 24540 */         .getVoltageState()) return false;
/*       */       
/* 24542 */       if (hasLight() != other.hasLight()) return false; 
/* 24543 */       if (hasLight() && 
/* 24544 */         getLight() != other
/* 24545 */         .getLight()) return false;
/*       */       
/* 24547 */       if (hasLightState() != other.hasLightState()) return false; 
/* 24548 */       if (hasLightState() && 
/* 24549 */         getLightState() != other
/* 24550 */         .getLightState()) return false;
/*       */       
/* 24552 */       if (hasMagnetSwitch() != other.hasMagnetSwitch()) return false; 
/* 24553 */       if (hasMagnetSwitch() && 
/* 24554 */         getMagnetSwitch() != other
/* 24555 */         .getMagnetSwitch()) return false;
/*       */       
/* 24557 */       if (hasMagnetSwitchState() != other.hasMagnetSwitchState()) return false; 
/* 24558 */       if (hasMagnetSwitchState() && 
/* 24559 */         getMagnetSwitchState() != other
/* 24560 */         .getMagnetSwitchState()) return false;
/*       */       
/* 24562 */       if (hasAccident() != other.hasAccident()) return false; 
/* 24563 */       if (hasAccident() && 
/* 24564 */         getAccident() != other
/* 24565 */         .getAccident()) return false;
/*       */       
/* 24567 */       if (hasButton() != other.hasButton()) return false; 
/* 24568 */       if (hasButton() && 
/* 24569 */         getButton() != other
/* 24570 */         .getButton()) return false;
/*       */       
/* 24572 */       if (hasMovement() != other.hasMovement()) return false; 
/* 24573 */       if (hasMovement() && 
/* 24574 */         getMovement() != other
/* 24575 */         .getMovement()) return false;
/*       */       
/* 24577 */       if (!this.unknownFields.equals(other.unknownFields)) return false; 
/* 24578 */       return true;
/*       */     }
/*       */ 
/*       */     
/*       */     public int hashCode() {
/* 24583 */       if (this.memoizedHashCode != 0) {
/* 24584 */         return this.memoizedHashCode;
/*       */       }
/* 24586 */       int hash = 41;
/* 24587 */       hash = 19 * hash + getDescriptor().hashCode();
/* 24588 */       if (hasSensorNumber()) {
/* 24589 */         hash = 37 * hash + 1;
/* 24590 */         hash = 53 * hash + getSensorNumber();
/*       */       } 
/* 24592 */       if (hasSensorID()) {
/* 24593 */         hash = 37 * hash + 3;
/* 24594 */         hash = 53 * hash + getSensorID().hashCode();
/*       */       } 
/* 24596 */       if (hasTemperature()) {
/* 24597 */         hash = 37 * hash + 4;
/* 24598 */         hash = 53 * hash + getTemperature();
/*       */       } 
/* 24600 */       if (hasTemperatureState()) {
/* 24601 */         hash = 37 * hash + 2;
/* 24602 */         hash = 53 * hash + getTemperatureState();
/*       */       } 
/* 24604 */       if (hasHumidity()) {
/* 24605 */         hash = 37 * hash + 5;
/* 24606 */         hash = 53 * hash + getHumidity();
/*       */       } 
/* 24608 */       if (hasHumidityState()) {
/* 24609 */         hash = 37 * hash + 6;
/* 24610 */         hash = 53 * hash + getHumidityState();
/*       */       } 
/* 24612 */       if (hasRSSI()) {
/* 24613 */         hash = 37 * hash + 7;
/* 24614 */         hash = 53 * hash + getRSSI();
/*       */       } 
/* 24616 */       if (hasRSSIState()) {
/* 24617 */         hash = 37 * hash + 8;
/* 24618 */         hash = 53 * hash + getRSSIState();
/*       */       } 
/* 24620 */       if (hasVoltage()) {
/* 24621 */         hash = 37 * hash + 9;
/* 24622 */         hash = 53 * hash + getVoltage();
/*       */       } 
/* 24624 */       if (hasVoltageState()) {
/* 24625 */         hash = 37 * hash + 10;
/* 24626 */         hash = 53 * hash + getVoltageState();
/*       */       } 
/* 24628 */       if (hasLight()) {
/* 24629 */         hash = 37 * hash + 11;
/* 24630 */         hash = 53 * hash + getLight();
/*       */       } 
/* 24632 */       if (hasLightState()) {
/* 24633 */         hash = 37 * hash + 12;
/* 24634 */         hash = 53 * hash + getLightState();
/*       */       } 
/* 24636 */       if (hasMagnetSwitch()) {
/* 24637 */         hash = 37 * hash + 13;
/* 24638 */         hash = 53 * hash + getMagnetSwitch();
/*       */       } 
/* 24640 */       if (hasMagnetSwitchState()) {
/* 24641 */         hash = 37 * hash + 14;
/* 24642 */         hash = 53 * hash + getMagnetSwitchState();
/*       */       } 
/* 24644 */       if (hasAccident()) {
/* 24645 */         hash = 37 * hash + 15;
/* 24646 */         hash = 53 * hash + getAccident();
/*       */       } 
/* 24648 */       if (hasButton()) {
/* 24649 */         hash = 37 * hash + 16;
/* 24650 */         hash = 53 * hash + getButton();
/*       */       } 
/* 24652 */       if (hasMovement()) {
/* 24653 */         hash = 37 * hash + 17;
/* 24654 */         hash = 53 * hash + getMovement();
/*       */       } 
/* 24656 */       hash = 29 * hash + this.unknownFields.hashCode();
/* 24657 */       this.memoizedHashCode = hash;
/* 24658 */       return hash;
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mEventReport_TDx parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
/* 24664 */       return (mEventReport_TDx)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mEventReport_TDx parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 24670 */       return (mEventReport_TDx)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static mEventReport_TDx parseFrom(ByteString data) throws InvalidProtocolBufferException {
/* 24675 */       return (mEventReport_TDx)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mEventReport_TDx parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 24681 */       return (mEventReport_TDx)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static mEventReport_TDx parseFrom(byte[] data) throws InvalidProtocolBufferException {
/* 24685 */       return (mEventReport_TDx)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mEventReport_TDx parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 24691 */       return (mEventReport_TDx)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static mEventReport_TDx parseFrom(InputStream input) throws IOException {
/* 24695 */       return 
/* 24696 */         (mEventReport_TDx)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mEventReport_TDx parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 24702 */       return 
/* 24703 */         (mEventReport_TDx)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static mEventReport_TDx parseDelimitedFrom(InputStream input) throws IOException {
/* 24707 */       return 
/* 24708 */         (mEventReport_TDx)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mEventReport_TDx parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 24714 */       return 
/* 24715 */         (mEventReport_TDx)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static mEventReport_TDx parseFrom(CodedInputStream input) throws IOException {
/* 24720 */       return 
/* 24721 */         (mEventReport_TDx)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mEventReport_TDx parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 24727 */       return 
/* 24728 */         (mEventReport_TDx)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public Builder newBuilderForType() {
/* 24732 */       return newBuilder();
/*       */     } public static Builder newBuilder() {
/* 24734 */       return DEFAULT_INSTANCE.toBuilder();
/*       */     }
/*       */     public static Builder newBuilder(mEventReport_TDx prototype) {
/* 24737 */       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
/*       */     }
/*       */     
/*       */     public Builder toBuilder() {
/* 24741 */       return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder())
/* 24742 */         .mergeFrom(this);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
/* 24748 */       Builder builder = new Builder(parent);
/* 24749 */       return builder;
/*       */     }
/*       */     public static final class Builder extends GeneratedMessageV3.Builder<Builder> implements StarLinkMessage.mEventReport_TDxOrBuilder { private int bitField0_; private int sensorNumber_; private Object sensorID_; private int temperature_; private int temperatureState_; private int humidity_; private int humidityState_; private int rSSI_;
/*       */       private int rSSIState_;
/*       */       private int voltage_;
/*       */       private int voltageState_;
/*       */       private int light_;
/*       */       private int lightState_;
/*       */       private int magnetSwitch_;
/*       */       private int magnetSwitchState_;
/*       */       private int accident_;
/*       */       private int button_;
/*       */       private int movement_;
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/* 24764 */         return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_mEventReport_TDx_descriptor;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
/* 24770 */         return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_mEventReport_TDx_fieldAccessorTable
/* 24771 */           .ensureFieldAccessorsInitialized(StarLinkMessage.mEventReport_TDx.class, Builder.class);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private Builder()
/*       */       {
/* 25113 */         this.sensorID_ = ""; maybeForceBuilderInitialization(); } private Builder(GeneratedMessageV3.BuilderParent parent) { super(parent); this.sensorID_ = ""; maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (StarLinkMessage.mEventReport_TDx.alwaysUseFieldBuilders); } public Builder clear() { super.clear(); this.sensorNumber_ = 0; this.bitField0_ &= 0xFFFFFFFE; this.sensorID_ = ""; this.bitField0_ &= 0xFFFFFFFD; this.temperature_ = 0; this.bitField0_ &= 0xFFFFFFFB; this.temperatureState_ = 0; this.bitField0_ &= 0xFFFFFFF7; this.humidity_ = 0; this.bitField0_ &= 0xFFFFFFEF; this.humidityState_ = 0; this.bitField0_ &= 0xFFFFFFDF; this.rSSI_ = 0; this.bitField0_ &= 0xFFFFFFBF; this.rSSIState_ = 0; this.bitField0_ &= 0xFFFFFF7F; this.voltage_ = 0; this.bitField0_ &= 0xFFFFFEFF; this.voltageState_ = 0; this.bitField0_ &= 0xFFFFFDFF; this.light_ = 0; this.bitField0_ &= 0xFFFFFBFF; this.lightState_ = 0; this.bitField0_ &= 0xFFFFF7FF; this.magnetSwitch_ = 0; this.bitField0_ &= 0xFFFFEFFF; this.magnetSwitchState_ = 0; this.bitField0_ &= 0xFFFFDFFF; this.accident_ = 0; this.bitField0_ &= 0xFFFFBFFF; this.button_ = 0; this.bitField0_ &= 0xFFFF7FFF; this.movement_ = 0; this.bitField0_ &= 0xFFFEFFFF; return this; } public Descriptors.Descriptor getDescriptorForType() { return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_mEventReport_TDx_descriptor; } public StarLinkMessage.mEventReport_TDx getDefaultInstanceForType() { return StarLinkMessage.mEventReport_TDx.getDefaultInstance(); } public StarLinkMessage.mEventReport_TDx build() { StarLinkMessage.mEventReport_TDx result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public StarLinkMessage.mEventReport_TDx buildPartial() { StarLinkMessage.mEventReport_TDx result = new StarLinkMessage.mEventReport_TDx(this); int from_bitField0_ = this.bitField0_; int to_bitField0_ = 0; if ((from_bitField0_ & 0x1) != 0) { result.sensorNumber_ = this.sensorNumber_; to_bitField0_ |= 0x1; }  if ((from_bitField0_ & 0x2) != 0) to_bitField0_ |= 0x2;  result.sensorID_ = this.sensorID_; if ((from_bitField0_ & 0x4) != 0) { result.temperature_ = this.temperature_; to_bitField0_ |= 0x4; }  if ((from_bitField0_ & 0x8) != 0) { result.temperatureState_ = this.temperatureState_; to_bitField0_ |= 0x8; }  if ((from_bitField0_ & 0x10) != 0) { result.humidity_ = this.humidity_; to_bitField0_ |= 0x10; }  if ((from_bitField0_ & 0x20) != 0) { result.humidityState_ = this.humidityState_; to_bitField0_ |= 0x20; }  if ((from_bitField0_ & 0x40) != 0) { result.rSSI_ = this.rSSI_; to_bitField0_ |= 0x40; }  if ((from_bitField0_ & 0x80) != 0) { result.rSSIState_ = this.rSSIState_; to_bitField0_ |= 0x80; }  if ((from_bitField0_ & 0x100) != 0) { result.voltage_ = this.voltage_; to_bitField0_ |= 0x100; }  if ((from_bitField0_ & 0x200) != 0) { result.voltageState_ = this.voltageState_; to_bitField0_ |= 0x200; }  if ((from_bitField0_ & 0x400) != 0) { result.light_ = this.light_; to_bitField0_ |= 0x400; }  if ((from_bitField0_ & 0x800) != 0) { result.lightState_ = this.lightState_; to_bitField0_ |= 0x800; }  if ((from_bitField0_ & 0x1000) != 0) { result.magnetSwitch_ = this.magnetSwitch_; to_bitField0_ |= 0x1000; }  if ((from_bitField0_ & 0x2000) != 0) { result.magnetSwitchState_ = this.magnetSwitchState_; to_bitField0_ |= 0x2000; }  if ((from_bitField0_ & 0x4000) != 0) { result.accident_ = this.accident_; to_bitField0_ |= 0x4000; }  if ((from_bitField0_ & 0x8000) != 0) { result.button_ = this.button_; to_bitField0_ |= 0x8000; }  if ((from_bitField0_ & 0x10000) != 0) { result.movement_ = this.movement_; to_bitField0_ |= 0x10000; }  result.bitField0_ = to_bitField0_; onBuilt(); return result; } public Builder clone() { return (Builder)super.clone(); } public Builder setField(Descriptors.FieldDescriptor field, Object value) { return (Builder)super.setField(field, value); } public Builder clearField(Descriptors.FieldDescriptor field) { return (Builder)super.clearField(field); } public Builder clearOneof(Descriptors.OneofDescriptor oneof) { return (Builder)super.clearOneof(oneof); } public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) { return (Builder)super.setRepeatedField(field, index, value); }
/*       */       public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) { return (Builder)super.addRepeatedField(field, value); }
/*       */       public Builder mergeFrom(Message other) { if (other instanceof StarLinkMessage.mEventReport_TDx) return mergeFrom((StarLinkMessage.mEventReport_TDx)other);  super.mergeFrom(other); return this; }
/*       */       public Builder mergeFrom(StarLinkMessage.mEventReport_TDx other) { if (other == StarLinkMessage.mEventReport_TDx.getDefaultInstance()) return this;  if (other.hasSensorNumber()) setSensorNumber(other.getSensorNumber());  if (other.hasSensorID()) { this.bitField0_ |= 0x2; this.sensorID_ = other.sensorID_; onChanged(); }  if (other.hasTemperature()) setTemperature(other.getTemperature());  if (other.hasTemperatureState()) setTemperatureState(other.getTemperatureState());  if (other.hasHumidity()) setHumidity(other.getHumidity());  if (other.hasHumidityState()) setHumidityState(other.getHumidityState());  if (other.hasRSSI()) setRSSI(other.getRSSI());  if (other.hasRSSIState()) setRSSIState(other.getRSSIState());  if (other.hasVoltage()) setVoltage(other.getVoltage());  if (other.hasVoltageState()) setVoltageState(other.getVoltageState());  if (other.hasLight()) setLight(other.getLight());  if (other.hasLightState()) setLightState(other.getLightState());  if (other.hasMagnetSwitch()) setMagnetSwitch(other.getMagnetSwitch());  if (other.hasMagnetSwitchState()) setMagnetSwitchState(other.getMagnetSwitchState());  if (other.hasAccident()) setAccident(other.getAccident());  if (other.hasButton()) setButton(other.getButton());  if (other.hasMovement()) setMovement(other.getMovement());  mergeUnknownFields(other.unknownFields); onChanged(); return this; }
/*       */       public final boolean isInitialized() { if (!hasSensorNumber()) return false;  return true; }
/*       */       public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { StarLinkMessage.mEventReport_TDx parsedMessage = null; try { parsedMessage = (StarLinkMessage.mEventReport_TDx)StarLinkMessage.mEventReport_TDx.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (StarLinkMessage.mEventReport_TDx)e.getUnfinishedMessage(); throw e.unwrapIOException(); } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; }
/*       */       public boolean hasSensorNumber() { return ((this.bitField0_ & 0x1) != 0); }
/*       */       public int getSensorNumber() { return this.sensorNumber_; }
/*       */       public Builder setSensorNumber(int value) { this.bitField0_ |= 0x1; this.sensorNumber_ = value; onChanged(); return this; }
/*       */       public Builder clearSensorNumber() { this.bitField0_ &= 0xFFFFFFFE; this.sensorNumber_ = 0; onChanged(); return this; }
/* 25123 */       public boolean hasSensorID() { return ((this.bitField0_ & 0x2) != 0); }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public String getSensorID() {
/* 25134 */         Object ref = this.sensorID_;
/* 25135 */         if (!(ref instanceof String)) {
/* 25136 */           ByteString bs = (ByteString)ref;
/*       */           
/* 25138 */           String s = bs.toStringUtf8();
/* 25139 */           if (bs.isValidUtf8()) {
/* 25140 */             this.sensorID_ = s;
/*       */           }
/* 25142 */           return s;
/*       */         } 
/* 25144 */         return (String)ref;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public ByteString getSensorIDBytes() {
/* 25157 */         Object ref = this.sensorID_;
/* 25158 */         if (ref instanceof String) {
/*       */           
/* 25160 */           ByteString b = ByteString.copyFromUtf8((String)ref);
/*       */           
/* 25162 */           this.sensorID_ = b;
/* 25163 */           return b;
/*       */         } 
/* 25165 */         return (ByteString)ref;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setSensorID(String value) {
/* 25179 */         if (value == null) {
/* 25180 */           throw new NullPointerException();
/*       */         }
/* 25182 */         this.bitField0_ |= 0x2;
/* 25183 */         this.sensorID_ = value;
/* 25184 */         onChanged();
/* 25185 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearSensorID() {
/* 25196 */         this.bitField0_ &= 0xFFFFFFFD;
/* 25197 */         this.sensorID_ = StarLinkMessage.mEventReport_TDx.getDefaultInstance().getSensorID();
/* 25198 */         onChanged();
/* 25199 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setSensorIDBytes(ByteString value) {
/* 25212 */         if (value == null) {
/* 25213 */           throw new NullPointerException();
/*       */         }
/* 25215 */         this.bitField0_ |= 0x2;
/* 25216 */         this.sensorID_ = value;
/* 25217 */         onChanged();
/* 25218 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasTemperature() {
/* 25232 */         return ((this.bitField0_ & 0x4) != 0);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getTemperature() {
/* 25244 */         return this.temperature_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setTemperature(int value) {
/* 25256 */         this.bitField0_ |= 0x4;
/* 25257 */         this.temperature_ = value;
/* 25258 */         onChanged();
/* 25259 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearTemperature() {
/* 25270 */         this.bitField0_ &= 0xFFFFFFFB;
/* 25271 */         this.temperature_ = 0;
/* 25272 */         onChanged();
/* 25273 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasTemperatureState() {
/* 25287 */         return ((this.bitField0_ & 0x8) != 0);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getTemperatureState() {
/* 25299 */         return this.temperatureState_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setTemperatureState(int value) {
/* 25311 */         this.bitField0_ |= 0x8;
/* 25312 */         this.temperatureState_ = value;
/* 25313 */         onChanged();
/* 25314 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearTemperatureState() {
/* 25325 */         this.bitField0_ &= 0xFFFFFFF7;
/* 25326 */         this.temperatureState_ = 0;
/* 25327 */         onChanged();
/* 25328 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasHumidity() {
/* 25342 */         return ((this.bitField0_ & 0x10) != 0);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getHumidity() {
/* 25354 */         return this.humidity_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setHumidity(int value) {
/* 25366 */         this.bitField0_ |= 0x10;
/* 25367 */         this.humidity_ = value;
/* 25368 */         onChanged();
/* 25369 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearHumidity() {
/* 25380 */         this.bitField0_ &= 0xFFFFFFEF;
/* 25381 */         this.humidity_ = 0;
/* 25382 */         onChanged();
/* 25383 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasHumidityState() {
/* 25393 */         return ((this.bitField0_ & 0x20) != 0);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getHumidityState() {
/* 25401 */         return this.humidityState_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setHumidityState(int value) {
/* 25409 */         this.bitField0_ |= 0x20;
/* 25410 */         this.humidityState_ = value;
/* 25411 */         onChanged();
/* 25412 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearHumidityState() {
/* 25419 */         this.bitField0_ &= 0xFFFFFFDF;
/* 25420 */         this.humidityState_ = 0;
/* 25421 */         onChanged();
/* 25422 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasRSSI() {
/* 25432 */         return ((this.bitField0_ & 0x40) != 0);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getRSSI() {
/* 25440 */         return this.rSSI_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setRSSI(int value) {
/* 25448 */         this.bitField0_ |= 0x40;
/* 25449 */         this.rSSI_ = value;
/* 25450 */         onChanged();
/* 25451 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearRSSI() {
/* 25458 */         this.bitField0_ &= 0xFFFFFFBF;
/* 25459 */         this.rSSI_ = 0;
/* 25460 */         onChanged();
/* 25461 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasRSSIState() {
/* 25471 */         return ((this.bitField0_ & 0x80) != 0);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getRSSIState() {
/* 25479 */         return this.rSSIState_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setRSSIState(int value) {
/* 25487 */         this.bitField0_ |= 0x80;
/* 25488 */         this.rSSIState_ = value;
/* 25489 */         onChanged();
/* 25490 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearRSSIState() {
/* 25497 */         this.bitField0_ &= 0xFFFFFF7F;
/* 25498 */         this.rSSIState_ = 0;
/* 25499 */         onChanged();
/* 25500 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasVoltage() {
/* 25514 */         return ((this.bitField0_ & 0x100) != 0);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getVoltage() {
/* 25526 */         return this.voltage_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setVoltage(int value) {
/* 25538 */         this.bitField0_ |= 0x100;
/* 25539 */         this.voltage_ = value;
/* 25540 */         onChanged();
/* 25541 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearVoltage() {
/* 25552 */         this.bitField0_ &= 0xFFFFFEFF;
/* 25553 */         this.voltage_ = 0;
/* 25554 */         onChanged();
/* 25555 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasVoltageState() {
/* 25565 */         return ((this.bitField0_ & 0x200) != 0);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getVoltageState() {
/* 25573 */         return this.voltageState_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setVoltageState(int value) {
/* 25581 */         this.bitField0_ |= 0x200;
/* 25582 */         this.voltageState_ = value;
/* 25583 */         onChanged();
/* 25584 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearVoltageState() {
/* 25591 */         this.bitField0_ &= 0xFFFFFDFF;
/* 25592 */         this.voltageState_ = 0;
/* 25593 */         onChanged();
/* 25594 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasLight() {
/* 25608 */         return ((this.bitField0_ & 0x400) != 0);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getLight() {
/* 25620 */         return this.light_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setLight(int value) {
/* 25632 */         this.bitField0_ |= 0x400;
/* 25633 */         this.light_ = value;
/* 25634 */         onChanged();
/* 25635 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearLight() {
/* 25646 */         this.bitField0_ &= 0xFFFFFBFF;
/* 25647 */         this.light_ = 0;
/* 25648 */         onChanged();
/* 25649 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasLightState() {
/* 25659 */         return ((this.bitField0_ & 0x800) != 0);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getLightState() {
/* 25667 */         return this.lightState_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setLightState(int value) {
/* 25675 */         this.bitField0_ |= 0x800;
/* 25676 */         this.lightState_ = value;
/* 25677 */         onChanged();
/* 25678 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearLightState() {
/* 25685 */         this.bitField0_ &= 0xFFFFF7FF;
/* 25686 */         this.lightState_ = 0;
/* 25687 */         onChanged();
/* 25688 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasMagnetSwitch() {
/* 25698 */         return ((this.bitField0_ & 0x1000) != 0);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getMagnetSwitch() {
/* 25706 */         return this.magnetSwitch_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setMagnetSwitch(int value) {
/* 25714 */         this.bitField0_ |= 0x1000;
/* 25715 */         this.magnetSwitch_ = value;
/* 25716 */         onChanged();
/* 25717 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearMagnetSwitch() {
/* 25724 */         this.bitField0_ &= 0xFFFFEFFF;
/* 25725 */         this.magnetSwitch_ = 0;
/* 25726 */         onChanged();
/* 25727 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasMagnetSwitchState() {
/* 25737 */         return ((this.bitField0_ & 0x2000) != 0);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getMagnetSwitchState() {
/* 25745 */         return this.magnetSwitchState_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setMagnetSwitchState(int value) {
/* 25753 */         this.bitField0_ |= 0x2000;
/* 25754 */         this.magnetSwitchState_ = value;
/* 25755 */         onChanged();
/* 25756 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearMagnetSwitchState() {
/* 25763 */         this.bitField0_ &= 0xFFFFDFFF;
/* 25764 */         this.magnetSwitchState_ = 0;
/* 25765 */         onChanged();
/* 25766 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasAccident() {
/* 25776 */         return ((this.bitField0_ & 0x4000) != 0);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getAccident() {
/* 25784 */         return this.accident_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setAccident(int value) {
/* 25792 */         this.bitField0_ |= 0x4000;
/* 25793 */         this.accident_ = value;
/* 25794 */         onChanged();
/* 25795 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearAccident() {
/* 25802 */         this.bitField0_ &= 0xFFFFBFFF;
/* 25803 */         this.accident_ = 0;
/* 25804 */         onChanged();
/* 25805 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasButton() {
/* 25815 */         return ((this.bitField0_ & 0x8000) != 0);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getButton() {
/* 25823 */         return this.button_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setButton(int value) {
/* 25831 */         this.bitField0_ |= 0x8000;
/* 25832 */         this.button_ = value;
/* 25833 */         onChanged();
/* 25834 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearButton() {
/* 25841 */         this.bitField0_ &= 0xFFFF7FFF;
/* 25842 */         this.button_ = 0;
/* 25843 */         onChanged();
/* 25844 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasMovement() {
/* 25854 */         return ((this.bitField0_ & 0x10000) != 0);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getMovement() {
/* 25862 */         return this.movement_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setMovement(int value) {
/* 25870 */         this.bitField0_ |= 0x10000;
/* 25871 */         this.movement_ = value;
/* 25872 */         onChanged();
/* 25873 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearMovement() {
/* 25880 */         this.bitField0_ &= 0xFFFEFFFF;
/* 25881 */         this.movement_ = 0;
/* 25882 */         onChanged();
/* 25883 */         return this;
/*       */       }
/*       */ 
/*       */       
/*       */       public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
/* 25888 */         return (Builder)super.setUnknownFields(unknownFields);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
/* 25894 */         return (Builder)super.mergeUnknownFields(unknownFields);
/*       */       } }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 25904 */     private static final mEventReport_TDx DEFAULT_INSTANCE = new mEventReport_TDx();
/*       */ 
/*       */     
/*       */     public static mEventReport_TDx getDefaultInstance() {
/* 25908 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */     
/*       */     @Deprecated
/* 25912 */     public static final Parser<mEventReport_TDx> PARSER = (Parser<mEventReport_TDx>)new AbstractParser<mEventReport_TDx>()
/*       */       {
/*       */ 
/*       */         
/*       */         public StarLinkMessage.mEventReport_TDx parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException
/*       */         {
/* 25918 */           return new StarLinkMessage.mEventReport_TDx(input, extensionRegistry);
/*       */         }
/*       */       };
/*       */     
/*       */     public static Parser<mEventReport_TDx> parser() {
/* 25923 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public Parser<mEventReport_TDx> getParserForType() {
/* 25928 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public mEventReport_TDx getDefaultInstanceForType() {
/* 25933 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public static interface mGeoZoneOrBuilder
/*       */     extends MessageOrBuilder
/*       */   {
/*       */     boolean hasZoneNumber();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getZoneNumber();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     List<StarLinkMessage.mLatLong> getPointList();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     StarLinkMessage.mLatLong getPoint(int param1Int);
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getPointCount();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     List<? extends StarLinkMessage.mLatLongOrBuilder> getPointOrBuilderList();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     StarLinkMessage.mLatLongOrBuilder getPointOrBuilder(int param1Int);
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasRadius();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getRadius();
/*       */   }
/*       */ 
/*       */ 
/*       */   
/*       */   public static final class mGeoZone
/*       */     extends GeneratedMessageV3
/*       */     implements mGeoZoneOrBuilder
/*       */   {
/*       */     private static final long serialVersionUID = 0L;
/*       */ 
/*       */     
/*       */     private int bitField0_;
/*       */ 
/*       */     
/*       */     public static final int ZONENUMBER_FIELD_NUMBER = 1;
/*       */ 
/*       */     
/*       */     private int zoneNumber_;
/*       */ 
/*       */     
/*       */     public static final int POINT_FIELD_NUMBER = 2;
/*       */ 
/*       */     
/*       */     private List<StarLinkMessage.mLatLong> point_;
/*       */ 
/*       */     
/*       */     public static final int RADIUS_FIELD_NUMBER = 3;
/*       */ 
/*       */     
/*       */     private int radius_;
/*       */ 
/*       */     
/*       */     private byte memoizedIsInitialized;
/*       */ 
/*       */ 
/*       */     
/*       */     private mGeoZone(GeneratedMessageV3.Builder<?> builder)
/*       */     {
/* 26022 */       super(builder);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/* 26212 */       this.memoizedIsInitialized = -1; } private mGeoZone() { this.memoizedIsInitialized = -1; this.point_ = Collections.emptyList(); } protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) { return new mGeoZone(); } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private mGeoZone(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this(); if (extensionRegistry == null) throw new NullPointerException();  int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { int tag = input.readTag(); switch (tag) { case 0: done = true; continue;case 8: this.bitField0_ |= 0x1; this.zoneNumber_ = input.readUInt32(); continue;case 18: if ((mutable_bitField0_ & 0x2) == 0) { this.point_ = new ArrayList<>(); mutable_bitField0_ |= 0x2; }  this.point_.add(input.readMessage(StarLinkMessage.mLatLong.PARSER, extensionRegistry)); continue;case 24: this.bitField0_ |= 0x2; this.radius_ = input.readUInt32(); continue; }  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this); } finally { if ((mutable_bitField0_ & 0x2) != 0) this.point_ = Collections.unmodifiableList(this.point_);  this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_mGeoZone_descriptor; } protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() { return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_mGeoZone_fieldAccessorTable.ensureFieldAccessorsInitialized(mGeoZone.class, Builder.class); } public boolean hasZoneNumber() { return ((this.bitField0_ & 0x1) != 0); } public int getZoneNumber() { return this.zoneNumber_; } public List<StarLinkMessage.mLatLong> getPointList() { return this.point_; } public List<? extends StarLinkMessage.mLatLongOrBuilder> getPointOrBuilderList() { return (List)this.point_; } public int getPointCount() { return this.point_.size(); } public StarLinkMessage.mLatLong getPoint(int index) { return this.point_.get(index); } public StarLinkMessage.mLatLongOrBuilder getPointOrBuilder(int index) { return this.point_.get(index); }
/*       */     public boolean hasRadius() { return ((this.bitField0_ & 0x2) != 0); }
/*       */     public int getRadius() { return this.radius_; }
/* 26215 */     public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized;
/* 26216 */       if (isInitialized == 1) return true; 
/* 26217 */       if (isInitialized == 0) return false;
/*       */       
/* 26219 */       if (!hasZoneNumber()) {
/* 26220 */         this.memoizedIsInitialized = 0;
/* 26221 */         return false;
/*       */       } 
/* 26223 */       for (int i = 0; i < getPointCount(); i++) {
/* 26224 */         if (!getPoint(i).isInitialized()) {
/* 26225 */           this.memoizedIsInitialized = 0;
/* 26226 */           return false;
/*       */         } 
/*       */       } 
/* 26229 */       this.memoizedIsInitialized = 1;
/* 26230 */       return true; }
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/* 26236 */       if ((this.bitField0_ & 0x1) != 0) {
/* 26237 */         output.writeUInt32(1, this.zoneNumber_);
/*       */       }
/* 26239 */       for (int i = 0; i < this.point_.size(); i++) {
/* 26240 */         output.writeMessage(2, (MessageLite)this.point_.get(i));
/*       */       }
/* 26242 */       if ((this.bitField0_ & 0x2) != 0) {
/* 26243 */         output.writeUInt32(3, this.radius_);
/*       */       }
/* 26245 */       this.unknownFields.writeTo(output);
/*       */     }
/*       */ 
/*       */     
/*       */     public int getSerializedSize() {
/* 26250 */       int size = this.memoizedSize;
/* 26251 */       if (size != -1) return size;
/*       */       
/* 26253 */       size = 0;
/* 26254 */       if ((this.bitField0_ & 0x1) != 0) {
/* 26255 */         size += 
/* 26256 */           CodedOutputStream.computeUInt32Size(1, this.zoneNumber_);
/*       */       }
/* 26258 */       for (int i = 0; i < this.point_.size(); i++) {
/* 26259 */         size += 
/* 26260 */           CodedOutputStream.computeMessageSize(2, (MessageLite)this.point_.get(i));
/*       */       }
/* 26262 */       if ((this.bitField0_ & 0x2) != 0) {
/* 26263 */         size += 
/* 26264 */           CodedOutputStream.computeUInt32Size(3, this.radius_);
/*       */       }
/* 26266 */       size += this.unknownFields.getSerializedSize();
/* 26267 */       this.memoizedSize = size;
/* 26268 */       return size;
/*       */     }
/*       */ 
/*       */     
/*       */     public boolean equals(Object obj) {
/* 26273 */       if (obj == this) {
/* 26274 */         return true;
/*       */       }
/* 26276 */       if (!(obj instanceof mGeoZone)) {
/* 26277 */         return super.equals(obj);
/*       */       }
/* 26279 */       mGeoZone other = (mGeoZone)obj;
/*       */       
/* 26281 */       if (hasZoneNumber() != other.hasZoneNumber()) return false; 
/* 26282 */       if (hasZoneNumber() && 
/* 26283 */         getZoneNumber() != other
/* 26284 */         .getZoneNumber()) return false;
/*       */ 
/*       */       
/* 26287 */       if (!getPointList().equals(other.getPointList())) return false; 
/* 26288 */       if (hasRadius() != other.hasRadius()) return false; 
/* 26289 */       if (hasRadius() && 
/* 26290 */         getRadius() != other
/* 26291 */         .getRadius()) return false;
/*       */       
/* 26293 */       if (!this.unknownFields.equals(other.unknownFields)) return false; 
/* 26294 */       return true;
/*       */     }
/*       */ 
/*       */     
/*       */     public int hashCode() {
/* 26299 */       if (this.memoizedHashCode != 0) {
/* 26300 */         return this.memoizedHashCode;
/*       */       }
/* 26302 */       int hash = 41;
/* 26303 */       hash = 19 * hash + getDescriptor().hashCode();
/* 26304 */       if (hasZoneNumber()) {
/* 26305 */         hash = 37 * hash + 1;
/* 26306 */         hash = 53 * hash + getZoneNumber();
/*       */       } 
/* 26308 */       if (getPointCount() > 0) {
/* 26309 */         hash = 37 * hash + 2;
/* 26310 */         hash = 53 * hash + getPointList().hashCode();
/*       */       } 
/* 26312 */       if (hasRadius()) {
/* 26313 */         hash = 37 * hash + 3;
/* 26314 */         hash = 53 * hash + getRadius();
/*       */       } 
/* 26316 */       hash = 29 * hash + this.unknownFields.hashCode();
/* 26317 */       this.memoizedHashCode = hash;
/* 26318 */       return hash;
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mGeoZone parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
/* 26324 */       return (mGeoZone)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mGeoZone parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 26330 */       return (mGeoZone)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static mGeoZone parseFrom(ByteString data) throws InvalidProtocolBufferException {
/* 26335 */       return (mGeoZone)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mGeoZone parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 26341 */       return (mGeoZone)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static mGeoZone parseFrom(byte[] data) throws InvalidProtocolBufferException {
/* 26345 */       return (mGeoZone)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mGeoZone parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 26351 */       return (mGeoZone)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static mGeoZone parseFrom(InputStream input) throws IOException {
/* 26355 */       return 
/* 26356 */         (mGeoZone)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mGeoZone parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 26362 */       return 
/* 26363 */         (mGeoZone)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static mGeoZone parseDelimitedFrom(InputStream input) throws IOException {
/* 26367 */       return 
/* 26368 */         (mGeoZone)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mGeoZone parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 26374 */       return 
/* 26375 */         (mGeoZone)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static mGeoZone parseFrom(CodedInputStream input) throws IOException {
/* 26380 */       return 
/* 26381 */         (mGeoZone)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mGeoZone parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 26387 */       return 
/* 26388 */         (mGeoZone)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public Builder newBuilderForType() {
/* 26392 */       return newBuilder();
/*       */     } public static Builder newBuilder() {
/* 26394 */       return DEFAULT_INSTANCE.toBuilder();
/*       */     }
/*       */     public static Builder newBuilder(mGeoZone prototype) {
/* 26397 */       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
/*       */     }
/*       */     
/*       */     public Builder toBuilder() {
/* 26401 */       return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder())
/* 26402 */         .mergeFrom(this);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
/* 26408 */       Builder builder = new Builder(parent);
/* 26409 */       return builder;
/*       */     }
/*       */ 
/*       */     
/*       */     public static final class Builder
/*       */       extends GeneratedMessageV3.Builder<Builder>
/*       */       implements StarLinkMessage.mGeoZoneOrBuilder
/*       */     {
/*       */       private int bitField0_;
/*       */       private int zoneNumber_;
/*       */       private List<StarLinkMessage.mLatLong> point_;
/*       */       private RepeatedFieldBuilderV3<StarLinkMessage.mLatLong, StarLinkMessage.mLatLong.Builder, StarLinkMessage.mLatLongOrBuilder> pointBuilder_;
/*       */       private int radius_;
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/* 26424 */         return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_mGeoZone_descriptor;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
/* 26430 */         return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_mGeoZone_fieldAccessorTable
/* 26431 */           .ensureFieldAccessorsInitialized(StarLinkMessage.mGeoZone.class, Builder.class);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private Builder()
/*       */       {
/* 26667 */         this
/* 26668 */           .point_ = Collections.emptyList(); maybeForceBuilderInitialization(); } private Builder(GeneratedMessageV3.BuilderParent parent) { super(parent); this.point_ = Collections.emptyList(); maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (StarLinkMessage.mGeoZone.alwaysUseFieldBuilders) getPointFieldBuilder();  } public Builder clear() { super.clear(); this.zoneNumber_ = 0; this.bitField0_ &= 0xFFFFFFFE; if (this.pointBuilder_ == null) { this.point_ = Collections.emptyList(); this.bitField0_ &= 0xFFFFFFFD; } else { this.pointBuilder_.clear(); }  this.radius_ = 0; this.bitField0_ &= 0xFFFFFFFB; return this; } public Descriptors.Descriptor getDescriptorForType() { return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_mGeoZone_descriptor; } public StarLinkMessage.mGeoZone getDefaultInstanceForType() { return StarLinkMessage.mGeoZone.getDefaultInstance(); } public StarLinkMessage.mGeoZone build() { StarLinkMessage.mGeoZone result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public StarLinkMessage.mGeoZone buildPartial() { StarLinkMessage.mGeoZone result = new StarLinkMessage.mGeoZone(this); int from_bitField0_ = this.bitField0_; int to_bitField0_ = 0; if ((from_bitField0_ & 0x1) != 0) { result.zoneNumber_ = this.zoneNumber_; to_bitField0_ |= 0x1; }  if (this.pointBuilder_ == null) { if ((this.bitField0_ & 0x2) != 0) { this.point_ = Collections.unmodifiableList(this.point_); this.bitField0_ &= 0xFFFFFFFD; }  result.point_ = this.point_; } else { result.point_ = this.pointBuilder_.build(); }  if ((from_bitField0_ & 0x4) != 0) { result.radius_ = this.radius_; to_bitField0_ |= 0x2; }  result.bitField0_ = to_bitField0_; onBuilt(); return result; } public Builder clone() { return (Builder)super.clone(); } public Builder setField(Descriptors.FieldDescriptor field, Object value) { return (Builder)super.setField(field, value); } public Builder clearField(Descriptors.FieldDescriptor field) { return (Builder)super.clearField(field); } public Builder clearOneof(Descriptors.OneofDescriptor oneof) { return (Builder)super.clearOneof(oneof); } public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) { return (Builder)super.setRepeatedField(field, index, value); } public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) { return (Builder)super.addRepeatedField(field, value); } public Builder mergeFrom(Message other) { if (other instanceof StarLinkMessage.mGeoZone) return mergeFrom((StarLinkMessage.mGeoZone)other);  super.mergeFrom(other); return this; } public Builder mergeFrom(StarLinkMessage.mGeoZone other) { if (other == StarLinkMessage.mGeoZone.getDefaultInstance()) return this;  if (other.hasZoneNumber()) setZoneNumber(other.getZoneNumber());  if (this.pointBuilder_ == null) { if (!other.point_.isEmpty()) { if (this.point_.isEmpty()) { this.point_ = other.point_; this.bitField0_ &= 0xFFFFFFFD; } else { ensurePointIsMutable(); this.point_.addAll(other.point_); }  onChanged(); }  } else if (!other.point_.isEmpty()) { if (this.pointBuilder_.isEmpty()) { this.pointBuilder_.dispose(); this.pointBuilder_ = null; this.point_ = other.point_; this.bitField0_ &= 0xFFFFFFFD; this.pointBuilder_ = StarLinkMessage.mGeoZone.alwaysUseFieldBuilders ? getPointFieldBuilder() : null; } else { this.pointBuilder_.addAllMessages(other.point_); }  }  if (other.hasRadius()) setRadius(other.getRadius());  mergeUnknownFields(other.unknownFields); onChanged(); return this; } public final boolean isInitialized() { if (!hasZoneNumber()) return false;  for (int i = 0; i < getPointCount(); i++) { if (!getPoint(i).isInitialized()) return false;  }  return true; } public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { StarLinkMessage.mGeoZone parsedMessage = null; try { parsedMessage = (StarLinkMessage.mGeoZone)StarLinkMessage.mGeoZone.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (StarLinkMessage.mGeoZone)e.getUnfinishedMessage(); throw e.unwrapIOException(); } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; } public boolean hasZoneNumber() { return ((this.bitField0_ & 0x1) != 0); } public int getZoneNumber() { return this.zoneNumber_; } public Builder setZoneNumber(int value) { this.bitField0_ |= 0x1; this.zoneNumber_ = value; onChanged(); return this; }
/*       */       public Builder clearZoneNumber() { this.bitField0_ &= 0xFFFFFFFE; this.zoneNumber_ = 0; onChanged(); return this; }
/* 26670 */       private void ensurePointIsMutable() { if ((this.bitField0_ & 0x2) == 0) {
/* 26671 */           this.point_ = new ArrayList<>(this.point_);
/* 26672 */           this.bitField0_ |= 0x2;
/*       */         }  }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public List<StarLinkMessage.mLatLong> getPointList() {
/* 26687 */         if (this.pointBuilder_ == null) {
/* 26688 */           return Collections.unmodifiableList(this.point_);
/*       */         }
/* 26690 */         return this.pointBuilder_.getMessageList();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getPointCount() {
/* 26701 */         if (this.pointBuilder_ == null) {
/* 26702 */           return this.point_.size();
/*       */         }
/* 26704 */         return this.pointBuilder_.getCount();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public StarLinkMessage.mLatLong getPoint(int index) {
/* 26715 */         if (this.pointBuilder_ == null) {
/* 26716 */           return this.point_.get(index);
/*       */         }
/* 26718 */         return (StarLinkMessage.mLatLong)this.pointBuilder_.getMessage(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setPoint(int index, StarLinkMessage.mLatLong value) {
/* 26730 */         if (this.pointBuilder_ == null) {
/* 26731 */           if (value == null) {
/* 26732 */             throw new NullPointerException();
/*       */           }
/* 26734 */           ensurePointIsMutable();
/* 26735 */           this.point_.set(index, value);
/* 26736 */           onChanged();
/*       */         } else {
/* 26738 */           this.pointBuilder_.setMessage(index, (AbstractMessage)value);
/*       */         } 
/* 26740 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setPoint(int index, StarLinkMessage.mLatLong.Builder builderForValue) {
/* 26751 */         if (this.pointBuilder_ == null) {
/* 26752 */           ensurePointIsMutable();
/* 26753 */           this.point_.set(index, builderForValue.build());
/* 26754 */           onChanged();
/*       */         } else {
/* 26756 */           this.pointBuilder_.setMessage(index, (AbstractMessage)builderForValue.build());
/*       */         } 
/* 26758 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addPoint(StarLinkMessage.mLatLong value) {
/* 26768 */         if (this.pointBuilder_ == null) {
/* 26769 */           if (value == null) {
/* 26770 */             throw new NullPointerException();
/*       */           }
/* 26772 */           ensurePointIsMutable();
/* 26773 */           this.point_.add(value);
/* 26774 */           onChanged();
/*       */         } else {
/* 26776 */           this.pointBuilder_.addMessage((AbstractMessage)value);
/*       */         } 
/* 26778 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addPoint(int index, StarLinkMessage.mLatLong value) {
/* 26789 */         if (this.pointBuilder_ == null) {
/* 26790 */           if (value == null) {
/* 26791 */             throw new NullPointerException();
/*       */           }
/* 26793 */           ensurePointIsMutable();
/* 26794 */           this.point_.add(index, value);
/* 26795 */           onChanged();
/*       */         } else {
/* 26797 */           this.pointBuilder_.addMessage(index, (AbstractMessage)value);
/*       */         } 
/* 26799 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addPoint(StarLinkMessage.mLatLong.Builder builderForValue) {
/* 26810 */         if (this.pointBuilder_ == null) {
/* 26811 */           ensurePointIsMutable();
/* 26812 */           this.point_.add(builderForValue.build());
/* 26813 */           onChanged();
/*       */         } else {
/* 26815 */           this.pointBuilder_.addMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/* 26817 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addPoint(int index, StarLinkMessage.mLatLong.Builder builderForValue) {
/* 26828 */         if (this.pointBuilder_ == null) {
/* 26829 */           ensurePointIsMutable();
/* 26830 */           this.point_.add(index, builderForValue.build());
/* 26831 */           onChanged();
/*       */         } else {
/* 26833 */           this.pointBuilder_.addMessage(index, (AbstractMessage)builderForValue.build());
/*       */         } 
/* 26835 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addAllPoint(Iterable<? extends StarLinkMessage.mLatLong> values) {
/* 26846 */         if (this.pointBuilder_ == null) {
/* 26847 */           ensurePointIsMutable();
/* 26848 */           AbstractMessageLite.Builder.addAll(values, this.point_);
/*       */           
/* 26850 */           onChanged();
/*       */         } else {
/* 26852 */           this.pointBuilder_.addAllMessages(values);
/*       */         } 
/* 26854 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearPoint() {
/* 26864 */         if (this.pointBuilder_ == null) {
/* 26865 */           this.point_ = Collections.emptyList();
/* 26866 */           this.bitField0_ &= 0xFFFFFFFD;
/* 26867 */           onChanged();
/*       */         } else {
/* 26869 */           this.pointBuilder_.clear();
/*       */         } 
/* 26871 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder removePoint(int index) {
/* 26881 */         if (this.pointBuilder_ == null) {
/* 26882 */           ensurePointIsMutable();
/* 26883 */           this.point_.remove(index);
/* 26884 */           onChanged();
/*       */         } else {
/* 26886 */           this.pointBuilder_.remove(index);
/*       */         } 
/* 26888 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public StarLinkMessage.mLatLong.Builder getPointBuilder(int index) {
/* 26899 */         return (StarLinkMessage.mLatLong.Builder)getPointFieldBuilder().getBuilder(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public StarLinkMessage.mLatLongOrBuilder getPointOrBuilder(int index) {
/* 26910 */         if (this.pointBuilder_ == null)
/* 26911 */           return this.point_.get(index); 
/* 26912 */         return (StarLinkMessage.mLatLongOrBuilder)this.pointBuilder_.getMessageOrBuilder(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public List<? extends StarLinkMessage.mLatLongOrBuilder> getPointOrBuilderList() {
/* 26924 */         if (this.pointBuilder_ != null) {
/* 26925 */           return this.pointBuilder_.getMessageOrBuilderList();
/*       */         }
/* 26927 */         return Collections.unmodifiableList((List)this.point_);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public StarLinkMessage.mLatLong.Builder addPointBuilder() {
/* 26938 */         return (StarLinkMessage.mLatLong.Builder)getPointFieldBuilder().addBuilder(
/* 26939 */             (AbstractMessage)StarLinkMessage.mLatLong.getDefaultInstance());
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public StarLinkMessage.mLatLong.Builder addPointBuilder(int index) {
/* 26950 */         return (StarLinkMessage.mLatLong.Builder)getPointFieldBuilder().addBuilder(index, 
/* 26951 */             (AbstractMessage)StarLinkMessage.mLatLong.getDefaultInstance());
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public List<StarLinkMessage.mLatLong.Builder> getPointBuilderList() {
/* 26962 */         return getPointFieldBuilder().getBuilderList();
/*       */       }
/*       */ 
/*       */       
/*       */       private RepeatedFieldBuilderV3<StarLinkMessage.mLatLong, StarLinkMessage.mLatLong.Builder, StarLinkMessage.mLatLongOrBuilder> getPointFieldBuilder() {
/* 26967 */         if (this.pointBuilder_ == null) {
/* 26968 */           this
/*       */ 
/*       */ 
/*       */ 
/*       */             
/* 26973 */             .pointBuilder_ = new RepeatedFieldBuilderV3(this.point_, ((this.bitField0_ & 0x2) != 0), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/* 26974 */           this.point_ = null;
/*       */         } 
/* 26976 */         return this.pointBuilder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasRadius() {
/* 26986 */         return ((this.bitField0_ & 0x4) != 0);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getRadius() {
/* 26994 */         return this.radius_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setRadius(int value) {
/* 27002 */         this.bitField0_ |= 0x4;
/* 27003 */         this.radius_ = value;
/* 27004 */         onChanged();
/* 27005 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearRadius() {
/* 27012 */         this.bitField0_ &= 0xFFFFFFFB;
/* 27013 */         this.radius_ = 0;
/* 27014 */         onChanged();
/* 27015 */         return this;
/*       */       }
/*       */ 
/*       */       
/*       */       public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
/* 27020 */         return (Builder)super.setUnknownFields(unknownFields);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
/* 27026 */         return (Builder)super.mergeUnknownFields(unknownFields);
/*       */       }
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 27036 */     private static final mGeoZone DEFAULT_INSTANCE = new mGeoZone();
/*       */ 
/*       */     
/*       */     public static mGeoZone getDefaultInstance() {
/* 27040 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */     
/*       */     @Deprecated
/* 27044 */     public static final Parser<mGeoZone> PARSER = (Parser<mGeoZone>)new AbstractParser<mGeoZone>()
/*       */       {
/*       */ 
/*       */         
/*       */         public StarLinkMessage.mGeoZone parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException
/*       */         {
/* 27050 */           return new StarLinkMessage.mGeoZone(input, extensionRegistry);
/*       */         }
/*       */       };
/*       */     
/*       */     public static Parser<mGeoZone> parser() {
/* 27055 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public Parser<mGeoZone> getParserForType() {
/* 27060 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public mGeoZone getDefaultInstanceForType() {
/* 27065 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */   }
/*       */ 
/*       */ 
/*       */   
/*       */   public static interface mOutputsOrBuilder
/*       */     extends MessageOrBuilder
/*       */   {
/*       */     boolean hasOutputBitmask();
/*       */ 
/*       */ 
/*       */     
/*       */     int getOutputBitmask();
/*       */   }
/*       */ 
/*       */   
/*       */   public static final class mOutputs
/*       */     extends GeneratedMessageV3
/*       */     implements mOutputsOrBuilder
/*       */   {
/*       */     private static final long serialVersionUID = 0L;
/*       */     
/*       */     private int bitField0_;
/*       */     
/*       */     public static final int OUTPUTBITMASK_FIELD_NUMBER = 1;
/*       */     
/*       */     private int outputBitmask_;
/*       */     
/*       */     private byte memoizedIsInitialized;
/*       */ 
/*       */     
/*       */     private mOutputs(GeneratedMessageV3.Builder<?> builder)
/*       */     {
/* 27099 */       super(builder);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/* 27192 */       this.memoizedIsInitialized = -1; } private mOutputs() { this.memoizedIsInitialized = -1; } protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) { return new mOutputs(); } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private mOutputs(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this(); if (extensionRegistry == null) throw new NullPointerException();  int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { int tag = input.readTag(); switch (tag) { case 0: done = true; continue;case 8: this.bitField0_ |= 0x1; this.outputBitmask_ = input.readUInt32(); continue; }  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this); } finally { this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_mOutputs_descriptor; } protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() { return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_mOutputs_fieldAccessorTable.ensureFieldAccessorsInitialized(mOutputs.class, Builder.class); }
/*       */     public boolean hasOutputBitmask() { return ((this.bitField0_ & 0x1) != 0); }
/*       */     public int getOutputBitmask() { return this.outputBitmask_; }
/* 27195 */     public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized;
/* 27196 */       if (isInitialized == 1) return true; 
/* 27197 */       if (isInitialized == 0) return false;
/*       */       
/* 27199 */       if (!hasOutputBitmask()) {
/* 27200 */         this.memoizedIsInitialized = 0;
/* 27201 */         return false;
/*       */       } 
/* 27203 */       this.memoizedIsInitialized = 1;
/* 27204 */       return true; }
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/* 27210 */       if ((this.bitField0_ & 0x1) != 0) {
/* 27211 */         output.writeUInt32(1, this.outputBitmask_);
/*       */       }
/* 27213 */       this.unknownFields.writeTo(output);
/*       */     }
/*       */ 
/*       */     
/*       */     public int getSerializedSize() {
/* 27218 */       int size = this.memoizedSize;
/* 27219 */       if (size != -1) return size;
/*       */       
/* 27221 */       size = 0;
/* 27222 */       if ((this.bitField0_ & 0x1) != 0) {
/* 27223 */         size += 
/* 27224 */           CodedOutputStream.computeUInt32Size(1, this.outputBitmask_);
/*       */       }
/* 27226 */       size += this.unknownFields.getSerializedSize();
/* 27227 */       this.memoizedSize = size;
/* 27228 */       return size;
/*       */     }
/*       */ 
/*       */     
/*       */     public boolean equals(Object obj) {
/* 27233 */       if (obj == this) {
/* 27234 */         return true;
/*       */       }
/* 27236 */       if (!(obj instanceof mOutputs)) {
/* 27237 */         return super.equals(obj);
/*       */       }
/* 27239 */       mOutputs other = (mOutputs)obj;
/*       */       
/* 27241 */       if (hasOutputBitmask() != other.hasOutputBitmask()) return false; 
/* 27242 */       if (hasOutputBitmask() && 
/* 27243 */         getOutputBitmask() != other
/* 27244 */         .getOutputBitmask()) return false;
/*       */       
/* 27246 */       if (!this.unknownFields.equals(other.unknownFields)) return false; 
/* 27247 */       return true;
/*       */     }
/*       */ 
/*       */     
/*       */     public int hashCode() {
/* 27252 */       if (this.memoizedHashCode != 0) {
/* 27253 */         return this.memoizedHashCode;
/*       */       }
/* 27255 */       int hash = 41;
/* 27256 */       hash = 19 * hash + getDescriptor().hashCode();
/* 27257 */       if (hasOutputBitmask()) {
/* 27258 */         hash = 37 * hash + 1;
/* 27259 */         hash = 53 * hash + getOutputBitmask();
/*       */       } 
/* 27261 */       hash = 29 * hash + this.unknownFields.hashCode();
/* 27262 */       this.memoizedHashCode = hash;
/* 27263 */       return hash;
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mOutputs parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
/* 27269 */       return (mOutputs)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mOutputs parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 27275 */       return (mOutputs)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static mOutputs parseFrom(ByteString data) throws InvalidProtocolBufferException {
/* 27280 */       return (mOutputs)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mOutputs parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 27286 */       return (mOutputs)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static mOutputs parseFrom(byte[] data) throws InvalidProtocolBufferException {
/* 27290 */       return (mOutputs)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mOutputs parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 27296 */       return (mOutputs)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static mOutputs parseFrom(InputStream input) throws IOException {
/* 27300 */       return 
/* 27301 */         (mOutputs)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mOutputs parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 27307 */       return 
/* 27308 */         (mOutputs)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static mOutputs parseDelimitedFrom(InputStream input) throws IOException {
/* 27312 */       return 
/* 27313 */         (mOutputs)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mOutputs parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 27319 */       return 
/* 27320 */         (mOutputs)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static mOutputs parseFrom(CodedInputStream input) throws IOException {
/* 27325 */       return 
/* 27326 */         (mOutputs)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mOutputs parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 27332 */       return 
/* 27333 */         (mOutputs)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public Builder newBuilderForType() {
/* 27337 */       return newBuilder();
/*       */     } public static Builder newBuilder() {
/* 27339 */       return DEFAULT_INSTANCE.toBuilder();
/*       */     }
/*       */     public static Builder newBuilder(mOutputs prototype) {
/* 27342 */       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
/*       */     }
/*       */     
/*       */     public Builder toBuilder() {
/* 27346 */       return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder())
/* 27347 */         .mergeFrom(this);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
/* 27353 */       Builder builder = new Builder(parent);
/* 27354 */       return builder;
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static final class Builder
/*       */       extends GeneratedMessageV3.Builder<Builder>
/*       */       implements StarLinkMessage.mOutputsOrBuilder
/*       */     {
/*       */       private int bitField0_;
/*       */       
/*       */       private int outputBitmask_;
/*       */ 
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/* 27369 */         return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_mOutputs_descriptor;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
/* 27375 */         return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_mOutputs_fieldAccessorTable
/* 27376 */           .ensureFieldAccessorsInitialized(StarLinkMessage.mOutputs.class, Builder.class);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       private Builder() {
/* 27382 */         maybeForceBuilderInitialization();
/*       */       }
/*       */ 
/*       */       
/*       */       private Builder(GeneratedMessageV3.BuilderParent parent) {
/* 27387 */         super(parent);
/* 27388 */         maybeForceBuilderInitialization();
/*       */       }
/*       */       
/*       */       private void maybeForceBuilderInitialization() {
/* 27392 */         if (StarLinkMessage.mOutputs.alwaysUseFieldBuilders);
/*       */       }
/*       */ 
/*       */       
/*       */       public Builder clear() {
/* 27397 */         super.clear();
/* 27398 */         this.outputBitmask_ = 0;
/* 27399 */         this.bitField0_ &= 0xFFFFFFFE;
/* 27400 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Descriptors.Descriptor getDescriptorForType() {
/* 27406 */         return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_mOutputs_descriptor;
/*       */       }
/*       */ 
/*       */       
/*       */       public StarLinkMessage.mOutputs getDefaultInstanceForType() {
/* 27411 */         return StarLinkMessage.mOutputs.getDefaultInstance();
/*       */       }
/*       */ 
/*       */       
/*       */       public StarLinkMessage.mOutputs build() {
/* 27416 */         StarLinkMessage.mOutputs result = buildPartial();
/* 27417 */         if (!result.isInitialized()) {
/* 27418 */           throw newUninitializedMessageException(result);
/*       */         }
/* 27420 */         return result;
/*       */       }
/*       */ 
/*       */       
/*       */       public StarLinkMessage.mOutputs buildPartial() {
/* 27425 */         StarLinkMessage.mOutputs result = new StarLinkMessage.mOutputs(this);
/* 27426 */         int from_bitField0_ = this.bitField0_;
/* 27427 */         int to_bitField0_ = 0;
/* 27428 */         if ((from_bitField0_ & 0x1) != 0) {
/* 27429 */           result.outputBitmask_ = this.outputBitmask_;
/* 27430 */           to_bitField0_ |= 0x1;
/*       */         } 
/* 27432 */         result.bitField0_ = to_bitField0_;
/* 27433 */         onBuilt();
/* 27434 */         return result;
/*       */       }
/*       */ 
/*       */       
/*       */       public Builder clone() {
/* 27439 */         return (Builder)super.clone();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setField(Descriptors.FieldDescriptor field, Object value) {
/* 27445 */         return (Builder)super.setField(field, value);
/*       */       }
/*       */ 
/*       */       
/*       */       public Builder clearField(Descriptors.FieldDescriptor field) {
/* 27450 */         return (Builder)super.clearField(field);
/*       */       }
/*       */ 
/*       */       
/*       */       public Builder clearOneof(Descriptors.OneofDescriptor oneof) {
/* 27455 */         return (Builder)super.clearOneof(oneof);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
/* 27461 */         return (Builder)super.setRepeatedField(field, index, value);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
/* 27467 */         return (Builder)super.addRepeatedField(field, value);
/*       */       }
/*       */       
/*       */       public Builder mergeFrom(Message other) {
/* 27471 */         if (other instanceof StarLinkMessage.mOutputs) {
/* 27472 */           return mergeFrom((StarLinkMessage.mOutputs)other);
/*       */         }
/* 27474 */         super.mergeFrom(other);
/* 27475 */         return this;
/*       */       }
/*       */ 
/*       */       
/*       */       public Builder mergeFrom(StarLinkMessage.mOutputs other) {
/* 27480 */         if (other == StarLinkMessage.mOutputs.getDefaultInstance()) return this; 
/* 27481 */         if (other.hasOutputBitmask()) {
/* 27482 */           setOutputBitmask(other.getOutputBitmask());
/*       */         }
/* 27484 */         mergeUnknownFields(other.unknownFields);
/* 27485 */         onChanged();
/* 27486 */         return this;
/*       */       }
/*       */ 
/*       */       
/*       */       public final boolean isInitialized() {
/* 27491 */         if (!hasOutputBitmask()) {
/* 27492 */           return false;
/*       */         }
/* 27494 */         return true;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 27502 */         StarLinkMessage.mOutputs parsedMessage = null;
/*       */         try {
/* 27504 */           parsedMessage = (StarLinkMessage.mOutputs)StarLinkMessage.mOutputs.PARSER.parsePartialFrom(input, extensionRegistry);
/* 27505 */         } catch (InvalidProtocolBufferException e) {
/* 27506 */           parsedMessage = (StarLinkMessage.mOutputs)e.getUnfinishedMessage();
/* 27507 */           throw e.unwrapIOException();
/*       */         } finally {
/* 27509 */           if (parsedMessage != null) {
/* 27510 */             mergeFrom(parsedMessage);
/*       */           }
/*       */         } 
/* 27513 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasOutputBitmask() {
/* 27524 */         return ((this.bitField0_ & 0x1) != 0);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getOutputBitmask() {
/* 27532 */         return this.outputBitmask_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setOutputBitmask(int value) {
/* 27540 */         this.bitField0_ |= 0x1;
/* 27541 */         this.outputBitmask_ = value;
/* 27542 */         onChanged();
/* 27543 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearOutputBitmask() {
/* 27550 */         this.bitField0_ &= 0xFFFFFFFE;
/* 27551 */         this.outputBitmask_ = 0;
/* 27552 */         onChanged();
/* 27553 */         return this;
/*       */       }
/*       */ 
/*       */       
/*       */       public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
/* 27558 */         return (Builder)super.setUnknownFields(unknownFields);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
/* 27564 */         return (Builder)super.mergeUnknownFields(unknownFields);
/*       */       }
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 27574 */     private static final mOutputs DEFAULT_INSTANCE = new mOutputs();
/*       */ 
/*       */     
/*       */     public static mOutputs getDefaultInstance() {
/* 27578 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */     
/*       */     @Deprecated
/* 27582 */     public static final Parser<mOutputs> PARSER = (Parser<mOutputs>)new AbstractParser<mOutputs>()
/*       */       {
/*       */ 
/*       */         
/*       */         public StarLinkMessage.mOutputs parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException
/*       */         {
/* 27588 */           return new StarLinkMessage.mOutputs(input, extensionRegistry);
/*       */         }
/*       */       };
/*       */     
/*       */     public static Parser<mOutputs> parser() {
/* 27593 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public Parser<mOutputs> getParserForType() {
/* 27598 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public mOutputs getDefaultInstanceForType() {
/* 27603 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */   }
/*       */ 
/*       */ 
/*       */   
/*       */   public static interface mEventConfigOrBuilder
/*       */     extends MessageOrBuilder
/*       */   {
/*       */     boolean hasEventID();
/*       */ 
/*       */ 
/*       */     
/*       */     int getEventID();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasConfiguration();
/*       */ 
/*       */ 
/*       */     
/*       */     int getConfiguration();
/*       */   }
/*       */ 
/*       */ 
/*       */   
/*       */   public static final class mEventConfig
/*       */     extends GeneratedMessageV3
/*       */     implements mEventConfigOrBuilder
/*       */   {
/*       */     private static final long serialVersionUID = 0L;
/*       */ 
/*       */     
/*       */     private int bitField0_;
/*       */ 
/*       */     
/*       */     public static final int EVENTID_FIELD_NUMBER = 1;
/*       */ 
/*       */     
/*       */     private int eventID_;
/*       */ 
/*       */     
/*       */     public static final int CONFIGURATION_FIELD_NUMBER = 2;
/*       */ 
/*       */     
/*       */     private int configuration_;
/*       */ 
/*       */     
/*       */     private byte memoizedIsInitialized;
/*       */ 
/*       */     
/*       */     private mEventConfig(GeneratedMessageV3.Builder<?> builder)
/*       */     {
/* 27656 */       super(builder);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/* 27781 */       this.memoizedIsInitialized = -1; } private mEventConfig() { this.memoizedIsInitialized = -1; } protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) { return new mEventConfig(); } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private mEventConfig(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this(); if (extensionRegistry == null) throw new NullPointerException();  int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { int tag = input.readTag(); switch (tag) { case 0: done = true; continue;case 8: this.bitField0_ |= 0x1; this.eventID_ = input.readUInt32(); continue;case 16: this.bitField0_ |= 0x2; this.configuration_ = input.readUInt32(); continue; }  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this); } finally { this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_mEventConfig_descriptor; } protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() { return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_mEventConfig_fieldAccessorTable.ensureFieldAccessorsInitialized(mEventConfig.class, Builder.class); } public boolean hasEventID() { return ((this.bitField0_ & 0x1) != 0); } public int getEventID() { return this.eventID_; }
/*       */     public boolean hasConfiguration() { return ((this.bitField0_ & 0x2) != 0); }
/*       */     public int getConfiguration() { return this.configuration_; }
/* 27784 */     public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized;
/* 27785 */       if (isInitialized == 1) return true; 
/* 27786 */       if (isInitialized == 0) return false;
/*       */       
/* 27788 */       if (!hasEventID()) {
/* 27789 */         this.memoizedIsInitialized = 0;
/* 27790 */         return false;
/*       */       } 
/* 27792 */       if (!hasConfiguration()) {
/* 27793 */         this.memoizedIsInitialized = 0;
/* 27794 */         return false;
/*       */       } 
/* 27796 */       this.memoizedIsInitialized = 1;
/* 27797 */       return true; }
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/* 27803 */       if ((this.bitField0_ & 0x1) != 0) {
/* 27804 */         output.writeUInt32(1, this.eventID_);
/*       */       }
/* 27806 */       if ((this.bitField0_ & 0x2) != 0) {
/* 27807 */         output.writeUInt32(2, this.configuration_);
/*       */       }
/* 27809 */       this.unknownFields.writeTo(output);
/*       */     }
/*       */ 
/*       */     
/*       */     public int getSerializedSize() {
/* 27814 */       int size = this.memoizedSize;
/* 27815 */       if (size != -1) return size;
/*       */       
/* 27817 */       size = 0;
/* 27818 */       if ((this.bitField0_ & 0x1) != 0) {
/* 27819 */         size += 
/* 27820 */           CodedOutputStream.computeUInt32Size(1, this.eventID_);
/*       */       }
/* 27822 */       if ((this.bitField0_ & 0x2) != 0) {
/* 27823 */         size += 
/* 27824 */           CodedOutputStream.computeUInt32Size(2, this.configuration_);
/*       */       }
/* 27826 */       size += this.unknownFields.getSerializedSize();
/* 27827 */       this.memoizedSize = size;
/* 27828 */       return size;
/*       */     }
/*       */ 
/*       */     
/*       */     public boolean equals(Object obj) {
/* 27833 */       if (obj == this) {
/* 27834 */         return true;
/*       */       }
/* 27836 */       if (!(obj instanceof mEventConfig)) {
/* 27837 */         return super.equals(obj);
/*       */       }
/* 27839 */       mEventConfig other = (mEventConfig)obj;
/*       */       
/* 27841 */       if (hasEventID() != other.hasEventID()) return false; 
/* 27842 */       if (hasEventID() && 
/* 27843 */         getEventID() != other
/* 27844 */         .getEventID()) return false;
/*       */       
/* 27846 */       if (hasConfiguration() != other.hasConfiguration()) return false; 
/* 27847 */       if (hasConfiguration() && 
/* 27848 */         getConfiguration() != other
/* 27849 */         .getConfiguration()) return false;
/*       */       
/* 27851 */       if (!this.unknownFields.equals(other.unknownFields)) return false; 
/* 27852 */       return true;
/*       */     }
/*       */ 
/*       */     
/*       */     public int hashCode() {
/* 27857 */       if (this.memoizedHashCode != 0) {
/* 27858 */         return this.memoizedHashCode;
/*       */       }
/* 27860 */       int hash = 41;
/* 27861 */       hash = 19 * hash + getDescriptor().hashCode();
/* 27862 */       if (hasEventID()) {
/* 27863 */         hash = 37 * hash + 1;
/* 27864 */         hash = 53 * hash + getEventID();
/*       */       } 
/* 27866 */       if (hasConfiguration()) {
/* 27867 */         hash = 37 * hash + 2;
/* 27868 */         hash = 53 * hash + getConfiguration();
/*       */       } 
/* 27870 */       hash = 29 * hash + this.unknownFields.hashCode();
/* 27871 */       this.memoizedHashCode = hash;
/* 27872 */       return hash;
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mEventConfig parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
/* 27878 */       return (mEventConfig)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mEventConfig parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 27884 */       return (mEventConfig)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static mEventConfig parseFrom(ByteString data) throws InvalidProtocolBufferException {
/* 27889 */       return (mEventConfig)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mEventConfig parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 27895 */       return (mEventConfig)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static mEventConfig parseFrom(byte[] data) throws InvalidProtocolBufferException {
/* 27899 */       return (mEventConfig)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mEventConfig parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 27905 */       return (mEventConfig)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static mEventConfig parseFrom(InputStream input) throws IOException {
/* 27909 */       return 
/* 27910 */         (mEventConfig)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mEventConfig parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 27916 */       return 
/* 27917 */         (mEventConfig)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static mEventConfig parseDelimitedFrom(InputStream input) throws IOException {
/* 27921 */       return 
/* 27922 */         (mEventConfig)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mEventConfig parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 27928 */       return 
/* 27929 */         (mEventConfig)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static mEventConfig parseFrom(CodedInputStream input) throws IOException {
/* 27934 */       return 
/* 27935 */         (mEventConfig)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mEventConfig parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 27941 */       return 
/* 27942 */         (mEventConfig)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public Builder newBuilderForType() {
/* 27946 */       return newBuilder();
/*       */     } public static Builder newBuilder() {
/* 27948 */       return DEFAULT_INSTANCE.toBuilder();
/*       */     }
/*       */     public static Builder newBuilder(mEventConfig prototype) {
/* 27951 */       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
/*       */     }
/*       */     
/*       */     public Builder toBuilder() {
/* 27955 */       return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder())
/* 27956 */         .mergeFrom(this);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
/* 27962 */       Builder builder = new Builder(parent);
/* 27963 */       return builder;
/*       */     }
/*       */ 
/*       */     
/*       */     public static final class Builder
/*       */       extends GeneratedMessageV3.Builder<Builder>
/*       */       implements StarLinkMessage.mEventConfigOrBuilder
/*       */     {
/*       */       private int bitField0_;
/*       */       
/*       */       private int eventID_;
/*       */       
/*       */       private int configuration_;
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/* 27978 */         return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_mEventConfig_descriptor;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
/* 27984 */         return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_mEventConfig_fieldAccessorTable
/* 27985 */           .ensureFieldAccessorsInitialized(StarLinkMessage.mEventConfig.class, Builder.class);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       private Builder() {
/* 27991 */         maybeForceBuilderInitialization();
/*       */       }
/*       */ 
/*       */       
/*       */       private Builder(GeneratedMessageV3.BuilderParent parent) {
/* 27996 */         super(parent);
/* 27997 */         maybeForceBuilderInitialization();
/*       */       }
/*       */       
/*       */       private void maybeForceBuilderInitialization() {
/* 28001 */         if (StarLinkMessage.mEventConfig.alwaysUseFieldBuilders);
/*       */       }
/*       */ 
/*       */       
/*       */       public Builder clear() {
/* 28006 */         super.clear();
/* 28007 */         this.eventID_ = 0;
/* 28008 */         this.bitField0_ &= 0xFFFFFFFE;
/* 28009 */         this.configuration_ = 0;
/* 28010 */         this.bitField0_ &= 0xFFFFFFFD;
/* 28011 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Descriptors.Descriptor getDescriptorForType() {
/* 28017 */         return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_mEventConfig_descriptor;
/*       */       }
/*       */ 
/*       */       
/*       */       public StarLinkMessage.mEventConfig getDefaultInstanceForType() {
/* 28022 */         return StarLinkMessage.mEventConfig.getDefaultInstance();
/*       */       }
/*       */ 
/*       */       
/*       */       public StarLinkMessage.mEventConfig build() {
/* 28027 */         StarLinkMessage.mEventConfig result = buildPartial();
/* 28028 */         if (!result.isInitialized()) {
/* 28029 */           throw newUninitializedMessageException(result);
/*       */         }
/* 28031 */         return result;
/*       */       }
/*       */ 
/*       */       
/*       */       public StarLinkMessage.mEventConfig buildPartial() {
/* 28036 */         StarLinkMessage.mEventConfig result = new StarLinkMessage.mEventConfig(this);
/* 28037 */         int from_bitField0_ = this.bitField0_;
/* 28038 */         int to_bitField0_ = 0;
/* 28039 */         if ((from_bitField0_ & 0x1) != 0) {
/* 28040 */           result.eventID_ = this.eventID_;
/* 28041 */           to_bitField0_ |= 0x1;
/*       */         } 
/* 28043 */         if ((from_bitField0_ & 0x2) != 0) {
/* 28044 */           result.configuration_ = this.configuration_;
/* 28045 */           to_bitField0_ |= 0x2;
/*       */         } 
/* 28047 */         result.bitField0_ = to_bitField0_;
/* 28048 */         onBuilt();
/* 28049 */         return result;
/*       */       }
/*       */ 
/*       */       
/*       */       public Builder clone() {
/* 28054 */         return (Builder)super.clone();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setField(Descriptors.FieldDescriptor field, Object value) {
/* 28060 */         return (Builder)super.setField(field, value);
/*       */       }
/*       */ 
/*       */       
/*       */       public Builder clearField(Descriptors.FieldDescriptor field) {
/* 28065 */         return (Builder)super.clearField(field);
/*       */       }
/*       */ 
/*       */       
/*       */       public Builder clearOneof(Descriptors.OneofDescriptor oneof) {
/* 28070 */         return (Builder)super.clearOneof(oneof);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
/* 28076 */         return (Builder)super.setRepeatedField(field, index, value);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
/* 28082 */         return (Builder)super.addRepeatedField(field, value);
/*       */       }
/*       */       
/*       */       public Builder mergeFrom(Message other) {
/* 28086 */         if (other instanceof StarLinkMessage.mEventConfig) {
/* 28087 */           return mergeFrom((StarLinkMessage.mEventConfig)other);
/*       */         }
/* 28089 */         super.mergeFrom(other);
/* 28090 */         return this;
/*       */       }
/*       */ 
/*       */       
/*       */       public Builder mergeFrom(StarLinkMessage.mEventConfig other) {
/* 28095 */         if (other == StarLinkMessage.mEventConfig.getDefaultInstance()) return this; 
/* 28096 */         if (other.hasEventID()) {
/* 28097 */           setEventID(other.getEventID());
/*       */         }
/* 28099 */         if (other.hasConfiguration()) {
/* 28100 */           setConfiguration(other.getConfiguration());
/*       */         }
/* 28102 */         mergeUnknownFields(other.unknownFields);
/* 28103 */         onChanged();
/* 28104 */         return this;
/*       */       }
/*       */ 
/*       */       
/*       */       public final boolean isInitialized() {
/* 28109 */         if (!hasEventID()) {
/* 28110 */           return false;
/*       */         }
/* 28112 */         if (!hasConfiguration()) {
/* 28113 */           return false;
/*       */         }
/* 28115 */         return true;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 28123 */         StarLinkMessage.mEventConfig parsedMessage = null;
/*       */         try {
/* 28125 */           parsedMessage = (StarLinkMessage.mEventConfig)StarLinkMessage.mEventConfig.PARSER.parsePartialFrom(input, extensionRegistry);
/* 28126 */         } catch (InvalidProtocolBufferException e) {
/* 28127 */           parsedMessage = (StarLinkMessage.mEventConfig)e.getUnfinishedMessage();
/* 28128 */           throw e.unwrapIOException();
/*       */         } finally {
/* 28130 */           if (parsedMessage != null) {
/* 28131 */             mergeFrom(parsedMessage);
/*       */           }
/*       */         } 
/* 28134 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasEventID() {
/* 28145 */         return ((this.bitField0_ & 0x1) != 0);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getEventID() {
/* 28153 */         return this.eventID_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setEventID(int value) {
/* 28161 */         this.bitField0_ |= 0x1;
/* 28162 */         this.eventID_ = value;
/* 28163 */         onChanged();
/* 28164 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearEventID() {
/* 28171 */         this.bitField0_ &= 0xFFFFFFFE;
/* 28172 */         this.eventID_ = 0;
/* 28173 */         onChanged();
/* 28174 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasConfiguration() {
/* 28188 */         return ((this.bitField0_ & 0x2) != 0);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getConfiguration() {
/* 28200 */         return this.configuration_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setConfiguration(int value) {
/* 28212 */         this.bitField0_ |= 0x2;
/* 28213 */         this.configuration_ = value;
/* 28214 */         onChanged();
/* 28215 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearConfiguration() {
/* 28226 */         this.bitField0_ &= 0xFFFFFFFD;
/* 28227 */         this.configuration_ = 0;
/* 28228 */         onChanged();
/* 28229 */         return this;
/*       */       }
/*       */ 
/*       */       
/*       */       public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
/* 28234 */         return (Builder)super.setUnknownFields(unknownFields);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
/* 28240 */         return (Builder)super.mergeUnknownFields(unknownFields);
/*       */       }
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 28250 */     private static final mEventConfig DEFAULT_INSTANCE = new mEventConfig();
/*       */ 
/*       */     
/*       */     public static mEventConfig getDefaultInstance() {
/* 28254 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */     
/*       */     @Deprecated
/* 28258 */     public static final Parser<mEventConfig> PARSER = (Parser<mEventConfig>)new AbstractParser<mEventConfig>()
/*       */       {
/*       */ 
/*       */         
/*       */         public StarLinkMessage.mEventConfig parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException
/*       */         {
/* 28264 */           return new StarLinkMessage.mEventConfig(input, extensionRegistry);
/*       */         }
/*       */       };
/*       */     
/*       */     public static Parser<mEventConfig> parser() {
/* 28269 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public Parser<mEventConfig> getParserForType() {
/* 28274 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public mEventConfig getDefaultInstanceForType() {
/* 28279 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */   }
/*       */ 
/*       */ 
/*       */   
/*       */   public static interface mInputsOrBuilder
/*       */     extends MessageOrBuilder
/*       */   {
/*       */     boolean hasInputBitmask();
/*       */ 
/*       */ 
/*       */     
/*       */     int getInputBitmask();
/*       */   }
/*       */ 
/*       */   
/*       */   public static final class mInputs
/*       */     extends GeneratedMessageV3
/*       */     implements mInputsOrBuilder
/*       */   {
/*       */     private static final long serialVersionUID = 0L;
/*       */     
/*       */     private int bitField0_;
/*       */     
/*       */     public static final int INPUTBITMASK_FIELD_NUMBER = 1;
/*       */     
/*       */     private int inputBitmask_;
/*       */     
/*       */     private byte memoizedIsInitialized;
/*       */ 
/*       */     
/*       */     private mInputs(GeneratedMessageV3.Builder<?> builder)
/*       */     {
/* 28313 */       super(builder);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/* 28406 */       this.memoizedIsInitialized = -1; } private mInputs() { this.memoizedIsInitialized = -1; } protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) { return new mInputs(); } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private mInputs(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this(); if (extensionRegistry == null) throw new NullPointerException();  int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { int tag = input.readTag(); switch (tag) { case 0: done = true; continue;case 8: this.bitField0_ |= 0x1; this.inputBitmask_ = input.readUInt32(); continue; }  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this); } finally { this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_mInputs_descriptor; } protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() { return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_mInputs_fieldAccessorTable.ensureFieldAccessorsInitialized(mInputs.class, Builder.class); }
/*       */     public boolean hasInputBitmask() { return ((this.bitField0_ & 0x1) != 0); }
/*       */     public int getInputBitmask() { return this.inputBitmask_; }
/* 28409 */     public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized;
/* 28410 */       if (isInitialized == 1) return true; 
/* 28411 */       if (isInitialized == 0) return false;
/*       */       
/* 28413 */       if (!hasInputBitmask()) {
/* 28414 */         this.memoizedIsInitialized = 0;
/* 28415 */         return false;
/*       */       } 
/* 28417 */       this.memoizedIsInitialized = 1;
/* 28418 */       return true; }
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/* 28424 */       if ((this.bitField0_ & 0x1) != 0) {
/* 28425 */         output.writeUInt32(1, this.inputBitmask_);
/*       */       }
/* 28427 */       this.unknownFields.writeTo(output);
/*       */     }
/*       */ 
/*       */     
/*       */     public int getSerializedSize() {
/* 28432 */       int size = this.memoizedSize;
/* 28433 */       if (size != -1) return size;
/*       */       
/* 28435 */       size = 0;
/* 28436 */       if ((this.bitField0_ & 0x1) != 0) {
/* 28437 */         size += 
/* 28438 */           CodedOutputStream.computeUInt32Size(1, this.inputBitmask_);
/*       */       }
/* 28440 */       size += this.unknownFields.getSerializedSize();
/* 28441 */       this.memoizedSize = size;
/* 28442 */       return size;
/*       */     }
/*       */ 
/*       */     
/*       */     public boolean equals(Object obj) {
/* 28447 */       if (obj == this) {
/* 28448 */         return true;
/*       */       }
/* 28450 */       if (!(obj instanceof mInputs)) {
/* 28451 */         return super.equals(obj);
/*       */       }
/* 28453 */       mInputs other = (mInputs)obj;
/*       */       
/* 28455 */       if (hasInputBitmask() != other.hasInputBitmask()) return false; 
/* 28456 */       if (hasInputBitmask() && 
/* 28457 */         getInputBitmask() != other
/* 28458 */         .getInputBitmask()) return false;
/*       */       
/* 28460 */       if (!this.unknownFields.equals(other.unknownFields)) return false; 
/* 28461 */       return true;
/*       */     }
/*       */ 
/*       */     
/*       */     public int hashCode() {
/* 28466 */       if (this.memoizedHashCode != 0) {
/* 28467 */         return this.memoizedHashCode;
/*       */       }
/* 28469 */       int hash = 41;
/* 28470 */       hash = 19 * hash + getDescriptor().hashCode();
/* 28471 */       if (hasInputBitmask()) {
/* 28472 */         hash = 37 * hash + 1;
/* 28473 */         hash = 53 * hash + getInputBitmask();
/*       */       } 
/* 28475 */       hash = 29 * hash + this.unknownFields.hashCode();
/* 28476 */       this.memoizedHashCode = hash;
/* 28477 */       return hash;
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mInputs parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
/* 28483 */       return (mInputs)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mInputs parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 28489 */       return (mInputs)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static mInputs parseFrom(ByteString data) throws InvalidProtocolBufferException {
/* 28494 */       return (mInputs)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mInputs parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 28500 */       return (mInputs)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static mInputs parseFrom(byte[] data) throws InvalidProtocolBufferException {
/* 28504 */       return (mInputs)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mInputs parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 28510 */       return (mInputs)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static mInputs parseFrom(InputStream input) throws IOException {
/* 28514 */       return 
/* 28515 */         (mInputs)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mInputs parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 28521 */       return 
/* 28522 */         (mInputs)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static mInputs parseDelimitedFrom(InputStream input) throws IOException {
/* 28526 */       return 
/* 28527 */         (mInputs)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mInputs parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 28533 */       return 
/* 28534 */         (mInputs)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static mInputs parseFrom(CodedInputStream input) throws IOException {
/* 28539 */       return 
/* 28540 */         (mInputs)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mInputs parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 28546 */       return 
/* 28547 */         (mInputs)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public Builder newBuilderForType() {
/* 28551 */       return newBuilder();
/*       */     } public static Builder newBuilder() {
/* 28553 */       return DEFAULT_INSTANCE.toBuilder();
/*       */     }
/*       */     public static Builder newBuilder(mInputs prototype) {
/* 28556 */       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
/*       */     }
/*       */     
/*       */     public Builder toBuilder() {
/* 28560 */       return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder())
/* 28561 */         .mergeFrom(this);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
/* 28567 */       Builder builder = new Builder(parent);
/* 28568 */       return builder;
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static final class Builder
/*       */       extends GeneratedMessageV3.Builder<Builder>
/*       */       implements StarLinkMessage.mInputsOrBuilder
/*       */     {
/*       */       private int bitField0_;
/*       */       
/*       */       private int inputBitmask_;
/*       */ 
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/* 28583 */         return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_mInputs_descriptor;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
/* 28589 */         return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_mInputs_fieldAccessorTable
/* 28590 */           .ensureFieldAccessorsInitialized(StarLinkMessage.mInputs.class, Builder.class);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       private Builder() {
/* 28596 */         maybeForceBuilderInitialization();
/*       */       }
/*       */ 
/*       */       
/*       */       private Builder(GeneratedMessageV3.BuilderParent parent) {
/* 28601 */         super(parent);
/* 28602 */         maybeForceBuilderInitialization();
/*       */       }
/*       */       
/*       */       private void maybeForceBuilderInitialization() {
/* 28606 */         if (StarLinkMessage.mInputs.alwaysUseFieldBuilders);
/*       */       }
/*       */ 
/*       */       
/*       */       public Builder clear() {
/* 28611 */         super.clear();
/* 28612 */         this.inputBitmask_ = 0;
/* 28613 */         this.bitField0_ &= 0xFFFFFFFE;
/* 28614 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Descriptors.Descriptor getDescriptorForType() {
/* 28620 */         return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_mInputs_descriptor;
/*       */       }
/*       */ 
/*       */       
/*       */       public StarLinkMessage.mInputs getDefaultInstanceForType() {
/* 28625 */         return StarLinkMessage.mInputs.getDefaultInstance();
/*       */       }
/*       */ 
/*       */       
/*       */       public StarLinkMessage.mInputs build() {
/* 28630 */         StarLinkMessage.mInputs result = buildPartial();
/* 28631 */         if (!result.isInitialized()) {
/* 28632 */           throw newUninitializedMessageException(result);
/*       */         }
/* 28634 */         return result;
/*       */       }
/*       */ 
/*       */       
/*       */       public StarLinkMessage.mInputs buildPartial() {
/* 28639 */         StarLinkMessage.mInputs result = new StarLinkMessage.mInputs(this);
/* 28640 */         int from_bitField0_ = this.bitField0_;
/* 28641 */         int to_bitField0_ = 0;
/* 28642 */         if ((from_bitField0_ & 0x1) != 0) {
/* 28643 */           result.inputBitmask_ = this.inputBitmask_;
/* 28644 */           to_bitField0_ |= 0x1;
/*       */         } 
/* 28646 */         result.bitField0_ = to_bitField0_;
/* 28647 */         onBuilt();
/* 28648 */         return result;
/*       */       }
/*       */ 
/*       */       
/*       */       public Builder clone() {
/* 28653 */         return (Builder)super.clone();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setField(Descriptors.FieldDescriptor field, Object value) {
/* 28659 */         return (Builder)super.setField(field, value);
/*       */       }
/*       */ 
/*       */       
/*       */       public Builder clearField(Descriptors.FieldDescriptor field) {
/* 28664 */         return (Builder)super.clearField(field);
/*       */       }
/*       */ 
/*       */       
/*       */       public Builder clearOneof(Descriptors.OneofDescriptor oneof) {
/* 28669 */         return (Builder)super.clearOneof(oneof);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
/* 28675 */         return (Builder)super.setRepeatedField(field, index, value);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
/* 28681 */         return (Builder)super.addRepeatedField(field, value);
/*       */       }
/*       */       
/*       */       public Builder mergeFrom(Message other) {
/* 28685 */         if (other instanceof StarLinkMessage.mInputs) {
/* 28686 */           return mergeFrom((StarLinkMessage.mInputs)other);
/*       */         }
/* 28688 */         super.mergeFrom(other);
/* 28689 */         return this;
/*       */       }
/*       */ 
/*       */       
/*       */       public Builder mergeFrom(StarLinkMessage.mInputs other) {
/* 28694 */         if (other == StarLinkMessage.mInputs.getDefaultInstance()) return this; 
/* 28695 */         if (other.hasInputBitmask()) {
/* 28696 */           setInputBitmask(other.getInputBitmask());
/*       */         }
/* 28698 */         mergeUnknownFields(other.unknownFields);
/* 28699 */         onChanged();
/* 28700 */         return this;
/*       */       }
/*       */ 
/*       */       
/*       */       public final boolean isInitialized() {
/* 28705 */         if (!hasInputBitmask()) {
/* 28706 */           return false;
/*       */         }
/* 28708 */         return true;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 28716 */         StarLinkMessage.mInputs parsedMessage = null;
/*       */         try {
/* 28718 */           parsedMessage = (StarLinkMessage.mInputs)StarLinkMessage.mInputs.PARSER.parsePartialFrom(input, extensionRegistry);
/* 28719 */         } catch (InvalidProtocolBufferException e) {
/* 28720 */           parsedMessage = (StarLinkMessage.mInputs)e.getUnfinishedMessage();
/* 28721 */           throw e.unwrapIOException();
/*       */         } finally {
/* 28723 */           if (parsedMessage != null) {
/* 28724 */             mergeFrom(parsedMessage);
/*       */           }
/*       */         } 
/* 28727 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasInputBitmask() {
/* 28738 */         return ((this.bitField0_ & 0x1) != 0);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getInputBitmask() {
/* 28746 */         return this.inputBitmask_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setInputBitmask(int value) {
/* 28754 */         this.bitField0_ |= 0x1;
/* 28755 */         this.inputBitmask_ = value;
/* 28756 */         onChanged();
/* 28757 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearInputBitmask() {
/* 28764 */         this.bitField0_ &= 0xFFFFFFFE;
/* 28765 */         this.inputBitmask_ = 0;
/* 28766 */         onChanged();
/* 28767 */         return this;
/*       */       }
/*       */ 
/*       */       
/*       */       public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
/* 28772 */         return (Builder)super.setUnknownFields(unknownFields);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
/* 28778 */         return (Builder)super.mergeUnknownFields(unknownFields);
/*       */       }
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 28788 */     private static final mInputs DEFAULT_INSTANCE = new mInputs();
/*       */ 
/*       */     
/*       */     public static mInputs getDefaultInstance() {
/* 28792 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */     
/*       */     @Deprecated
/* 28796 */     public static final Parser<mInputs> PARSER = (Parser<mInputs>)new AbstractParser<mInputs>()
/*       */       {
/*       */ 
/*       */         
/*       */         public StarLinkMessage.mInputs parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException
/*       */         {
/* 28802 */           return new StarLinkMessage.mInputs(input, extensionRegistry);
/*       */         }
/*       */       };
/*       */     
/*       */     public static Parser<mInputs> parser() {
/* 28807 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public Parser<mInputs> getParserForType() {
/* 28812 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public mInputs getDefaultInstanceForType() {
/* 28817 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */   }
/*       */ 
/*       */ 
/*       */   
/*       */   public static interface mInputConfigOrBuilder
/*       */     extends MessageOrBuilder
/*       */   {
/*       */     boolean hasInputID();
/*       */ 
/*       */ 
/*       */     
/*       */     int getInputID();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasDebounceLow();
/*       */ 
/*       */ 
/*       */     
/*       */     int getDebounceLow();
/*       */ 
/*       */     
/*       */     boolean hasDebounceHigh();
/*       */ 
/*       */     
/*       */     int getDebounceHigh();
/*       */   }
/*       */ 
/*       */   
/*       */   public static final class mInputConfig
/*       */     extends GeneratedMessageV3
/*       */     implements mInputConfigOrBuilder
/*       */   {
/*       */     private static final long serialVersionUID = 0L;
/*       */     
/*       */     private int bitField0_;
/*       */     
/*       */     public static final int INPUTID_FIELD_NUMBER = 1;
/*       */     
/*       */     private int inputID_;
/*       */     
/*       */     public static final int DEBOUNCELOW_FIELD_NUMBER = 2;
/*       */     
/*       */     private int debounceLow_;
/*       */     
/*       */     public static final int DEBOUNCEHIGH_FIELD_NUMBER = 3;
/*       */     
/*       */     private int debounceHigh_;
/*       */     
/*       */     private byte memoizedIsInitialized;
/*       */ 
/*       */     
/*       */     private mInputConfig(GeneratedMessageV3.Builder<?> builder)
/*       */     {
/* 28873 */       super(builder);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/* 29014 */       this.memoizedIsInitialized = -1; } private mInputConfig() { this.memoizedIsInitialized = -1; } protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) { return new mInputConfig(); } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private mInputConfig(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this(); if (extensionRegistry == null) throw new NullPointerException();  int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { int tag = input.readTag(); switch (tag) { case 0: done = true; continue;case 8: this.bitField0_ |= 0x1; this.inputID_ = input.readUInt32(); continue;case 16: this.bitField0_ |= 0x2; this.debounceLow_ = input.readUInt32(); continue;case 24: this.bitField0_ |= 0x4; this.debounceHigh_ = input.readUInt32(); continue; }  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this); } finally { this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_mInputConfig_descriptor; } protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() { return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_mInputConfig_fieldAccessorTable.ensureFieldAccessorsInitialized(mInputConfig.class, Builder.class); } public boolean hasInputID() { return ((this.bitField0_ & 0x1) != 0); } public int getInputID() { return this.inputID_; } public boolean hasDebounceLow() { return ((this.bitField0_ & 0x2) != 0); } public int getDebounceLow() { return this.debounceLow_; }
/*       */     public boolean hasDebounceHigh() { return ((this.bitField0_ & 0x4) != 0); }
/*       */     public int getDebounceHigh() { return this.debounceHigh_; }
/* 29017 */     public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized;
/* 29018 */       if (isInitialized == 1) return true; 
/* 29019 */       if (isInitialized == 0) return false;
/*       */       
/* 29021 */       if (!hasInputID()) {
/* 29022 */         this.memoizedIsInitialized = 0;
/* 29023 */         return false;
/*       */       } 
/* 29025 */       if (!hasDebounceLow()) {
/* 29026 */         this.memoizedIsInitialized = 0;
/* 29027 */         return false;
/*       */       } 
/* 29029 */       if (!hasDebounceHigh()) {
/* 29030 */         this.memoizedIsInitialized = 0;
/* 29031 */         return false;
/*       */       } 
/* 29033 */       this.memoizedIsInitialized = 1;
/* 29034 */       return true; }
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/* 29040 */       if ((this.bitField0_ & 0x1) != 0) {
/* 29041 */         output.writeUInt32(1, this.inputID_);
/*       */       }
/* 29043 */       if ((this.bitField0_ & 0x2) != 0) {
/* 29044 */         output.writeUInt32(2, this.debounceLow_);
/*       */       }
/* 29046 */       if ((this.bitField0_ & 0x4) != 0) {
/* 29047 */         output.writeUInt32(3, this.debounceHigh_);
/*       */       }
/* 29049 */       this.unknownFields.writeTo(output);
/*       */     }
/*       */ 
/*       */     
/*       */     public int getSerializedSize() {
/* 29054 */       int size = this.memoizedSize;
/* 29055 */       if (size != -1) return size;
/*       */       
/* 29057 */       size = 0;
/* 29058 */       if ((this.bitField0_ & 0x1) != 0) {
/* 29059 */         size += 
/* 29060 */           CodedOutputStream.computeUInt32Size(1, this.inputID_);
/*       */       }
/* 29062 */       if ((this.bitField0_ & 0x2) != 0) {
/* 29063 */         size += 
/* 29064 */           CodedOutputStream.computeUInt32Size(2, this.debounceLow_);
/*       */       }
/* 29066 */       if ((this.bitField0_ & 0x4) != 0) {
/* 29067 */         size += 
/* 29068 */           CodedOutputStream.computeUInt32Size(3, this.debounceHigh_);
/*       */       }
/* 29070 */       size += this.unknownFields.getSerializedSize();
/* 29071 */       this.memoizedSize = size;
/* 29072 */       return size;
/*       */     }
/*       */ 
/*       */     
/*       */     public boolean equals(Object obj) {
/* 29077 */       if (obj == this) {
/* 29078 */         return true;
/*       */       }
/* 29080 */       if (!(obj instanceof mInputConfig)) {
/* 29081 */         return super.equals(obj);
/*       */       }
/* 29083 */       mInputConfig other = (mInputConfig)obj;
/*       */       
/* 29085 */       if (hasInputID() != other.hasInputID()) return false; 
/* 29086 */       if (hasInputID() && 
/* 29087 */         getInputID() != other
/* 29088 */         .getInputID()) return false;
/*       */       
/* 29090 */       if (hasDebounceLow() != other.hasDebounceLow()) return false; 
/* 29091 */       if (hasDebounceLow() && 
/* 29092 */         getDebounceLow() != other
/* 29093 */         .getDebounceLow()) return false;
/*       */       
/* 29095 */       if (hasDebounceHigh() != other.hasDebounceHigh()) return false; 
/* 29096 */       if (hasDebounceHigh() && 
/* 29097 */         getDebounceHigh() != other
/* 29098 */         .getDebounceHigh()) return false;
/*       */       
/* 29100 */       if (!this.unknownFields.equals(other.unknownFields)) return false; 
/* 29101 */       return true;
/*       */     }
/*       */ 
/*       */     
/*       */     public int hashCode() {
/* 29106 */       if (this.memoizedHashCode != 0) {
/* 29107 */         return this.memoizedHashCode;
/*       */       }
/* 29109 */       int hash = 41;
/* 29110 */       hash = 19 * hash + getDescriptor().hashCode();
/* 29111 */       if (hasInputID()) {
/* 29112 */         hash = 37 * hash + 1;
/* 29113 */         hash = 53 * hash + getInputID();
/*       */       } 
/* 29115 */       if (hasDebounceLow()) {
/* 29116 */         hash = 37 * hash + 2;
/* 29117 */         hash = 53 * hash + getDebounceLow();
/*       */       } 
/* 29119 */       if (hasDebounceHigh()) {
/* 29120 */         hash = 37 * hash + 3;
/* 29121 */         hash = 53 * hash + getDebounceHigh();
/*       */       } 
/* 29123 */       hash = 29 * hash + this.unknownFields.hashCode();
/* 29124 */       this.memoizedHashCode = hash;
/* 29125 */       return hash;
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mInputConfig parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
/* 29131 */       return (mInputConfig)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mInputConfig parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 29137 */       return (mInputConfig)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static mInputConfig parseFrom(ByteString data) throws InvalidProtocolBufferException {
/* 29142 */       return (mInputConfig)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mInputConfig parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 29148 */       return (mInputConfig)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static mInputConfig parseFrom(byte[] data) throws InvalidProtocolBufferException {
/* 29152 */       return (mInputConfig)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mInputConfig parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 29158 */       return (mInputConfig)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static mInputConfig parseFrom(InputStream input) throws IOException {
/* 29162 */       return 
/* 29163 */         (mInputConfig)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mInputConfig parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 29169 */       return 
/* 29170 */         (mInputConfig)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static mInputConfig parseDelimitedFrom(InputStream input) throws IOException {
/* 29174 */       return 
/* 29175 */         (mInputConfig)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mInputConfig parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 29181 */       return 
/* 29182 */         (mInputConfig)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static mInputConfig parseFrom(CodedInputStream input) throws IOException {
/* 29187 */       return 
/* 29188 */         (mInputConfig)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mInputConfig parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 29194 */       return 
/* 29195 */         (mInputConfig)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public Builder newBuilderForType() {
/* 29199 */       return newBuilder();
/*       */     } public static Builder newBuilder() {
/* 29201 */       return DEFAULT_INSTANCE.toBuilder();
/*       */     }
/*       */     public static Builder newBuilder(mInputConfig prototype) {
/* 29204 */       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
/*       */     }
/*       */     
/*       */     public Builder toBuilder() {
/* 29208 */       return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder())
/* 29209 */         .mergeFrom(this);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
/* 29215 */       Builder builder = new Builder(parent);
/* 29216 */       return builder;
/*       */     }
/*       */ 
/*       */     
/*       */     public static final class Builder
/*       */       extends GeneratedMessageV3.Builder<Builder>
/*       */       implements StarLinkMessage.mInputConfigOrBuilder
/*       */     {
/*       */       private int bitField0_;
/*       */       
/*       */       private int inputID_;
/*       */       private int debounceLow_;
/*       */       private int debounceHigh_;
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/* 29231 */         return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_mInputConfig_descriptor;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
/* 29237 */         return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_mInputConfig_fieldAccessorTable
/* 29238 */           .ensureFieldAccessorsInitialized(StarLinkMessage.mInputConfig.class, Builder.class);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       private Builder() {
/* 29244 */         maybeForceBuilderInitialization();
/*       */       }
/*       */ 
/*       */       
/*       */       private Builder(GeneratedMessageV3.BuilderParent parent) {
/* 29249 */         super(parent);
/* 29250 */         maybeForceBuilderInitialization();
/*       */       }
/*       */       
/*       */       private void maybeForceBuilderInitialization() {
/* 29254 */         if (StarLinkMessage.mInputConfig.alwaysUseFieldBuilders);
/*       */       }
/*       */ 
/*       */       
/*       */       public Builder clear() {
/* 29259 */         super.clear();
/* 29260 */         this.inputID_ = 0;
/* 29261 */         this.bitField0_ &= 0xFFFFFFFE;
/* 29262 */         this.debounceLow_ = 0;
/* 29263 */         this.bitField0_ &= 0xFFFFFFFD;
/* 29264 */         this.debounceHigh_ = 0;
/* 29265 */         this.bitField0_ &= 0xFFFFFFFB;
/* 29266 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Descriptors.Descriptor getDescriptorForType() {
/* 29272 */         return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_mInputConfig_descriptor;
/*       */       }
/*       */ 
/*       */       
/*       */       public StarLinkMessage.mInputConfig getDefaultInstanceForType() {
/* 29277 */         return StarLinkMessage.mInputConfig.getDefaultInstance();
/*       */       }
/*       */ 
/*       */       
/*       */       public StarLinkMessage.mInputConfig build() {
/* 29282 */         StarLinkMessage.mInputConfig result = buildPartial();
/* 29283 */         if (!result.isInitialized()) {
/* 29284 */           throw newUninitializedMessageException(result);
/*       */         }
/* 29286 */         return result;
/*       */       }
/*       */ 
/*       */       
/*       */       public StarLinkMessage.mInputConfig buildPartial() {
/* 29291 */         StarLinkMessage.mInputConfig result = new StarLinkMessage.mInputConfig(this);
/* 29292 */         int from_bitField0_ = this.bitField0_;
/* 29293 */         int to_bitField0_ = 0;
/* 29294 */         if ((from_bitField0_ & 0x1) != 0) {
/* 29295 */           result.inputID_ = this.inputID_;
/* 29296 */           to_bitField0_ |= 0x1;
/*       */         } 
/* 29298 */         if ((from_bitField0_ & 0x2) != 0) {
/* 29299 */           result.debounceLow_ = this.debounceLow_;
/* 29300 */           to_bitField0_ |= 0x2;
/*       */         } 
/* 29302 */         if ((from_bitField0_ & 0x4) != 0) {
/* 29303 */           result.debounceHigh_ = this.debounceHigh_;
/* 29304 */           to_bitField0_ |= 0x4;
/*       */         } 
/* 29306 */         result.bitField0_ = to_bitField0_;
/* 29307 */         onBuilt();
/* 29308 */         return result;
/*       */       }
/*       */ 
/*       */       
/*       */       public Builder clone() {
/* 29313 */         return (Builder)super.clone();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setField(Descriptors.FieldDescriptor field, Object value) {
/* 29319 */         return (Builder)super.setField(field, value);
/*       */       }
/*       */ 
/*       */       
/*       */       public Builder clearField(Descriptors.FieldDescriptor field) {
/* 29324 */         return (Builder)super.clearField(field);
/*       */       }
/*       */ 
/*       */       
/*       */       public Builder clearOneof(Descriptors.OneofDescriptor oneof) {
/* 29329 */         return (Builder)super.clearOneof(oneof);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
/* 29335 */         return (Builder)super.setRepeatedField(field, index, value);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
/* 29341 */         return (Builder)super.addRepeatedField(field, value);
/*       */       }
/*       */       
/*       */       public Builder mergeFrom(Message other) {
/* 29345 */         if (other instanceof StarLinkMessage.mInputConfig) {
/* 29346 */           return mergeFrom((StarLinkMessage.mInputConfig)other);
/*       */         }
/* 29348 */         super.mergeFrom(other);
/* 29349 */         return this;
/*       */       }
/*       */ 
/*       */       
/*       */       public Builder mergeFrom(StarLinkMessage.mInputConfig other) {
/* 29354 */         if (other == StarLinkMessage.mInputConfig.getDefaultInstance()) return this; 
/* 29355 */         if (other.hasInputID()) {
/* 29356 */           setInputID(other.getInputID());
/*       */         }
/* 29358 */         if (other.hasDebounceLow()) {
/* 29359 */           setDebounceLow(other.getDebounceLow());
/*       */         }
/* 29361 */         if (other.hasDebounceHigh()) {
/* 29362 */           setDebounceHigh(other.getDebounceHigh());
/*       */         }
/* 29364 */         mergeUnknownFields(other.unknownFields);
/* 29365 */         onChanged();
/* 29366 */         return this;
/*       */       }
/*       */ 
/*       */       
/*       */       public final boolean isInitialized() {
/* 29371 */         if (!hasInputID()) {
/* 29372 */           return false;
/*       */         }
/* 29374 */         if (!hasDebounceLow()) {
/* 29375 */           return false;
/*       */         }
/* 29377 */         if (!hasDebounceHigh()) {
/* 29378 */           return false;
/*       */         }
/* 29380 */         return true;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 29388 */         StarLinkMessage.mInputConfig parsedMessage = null;
/*       */         try {
/* 29390 */           parsedMessage = (StarLinkMessage.mInputConfig)StarLinkMessage.mInputConfig.PARSER.parsePartialFrom(input, extensionRegistry);
/* 29391 */         } catch (InvalidProtocolBufferException e) {
/* 29392 */           parsedMessage = (StarLinkMessage.mInputConfig)e.getUnfinishedMessage();
/* 29393 */           throw e.unwrapIOException();
/*       */         } finally {
/* 29395 */           if (parsedMessage != null) {
/* 29396 */             mergeFrom(parsedMessage);
/*       */           }
/*       */         } 
/* 29399 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasInputID() {
/* 29410 */         return ((this.bitField0_ & 0x1) != 0);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getInputID() {
/* 29418 */         return this.inputID_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setInputID(int value) {
/* 29426 */         this.bitField0_ |= 0x1;
/* 29427 */         this.inputID_ = value;
/* 29428 */         onChanged();
/* 29429 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearInputID() {
/* 29436 */         this.bitField0_ &= 0xFFFFFFFE;
/* 29437 */         this.inputID_ = 0;
/* 29438 */         onChanged();
/* 29439 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasDebounceLow() {
/* 29449 */         return ((this.bitField0_ & 0x2) != 0);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getDebounceLow() {
/* 29457 */         return this.debounceLow_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setDebounceLow(int value) {
/* 29465 */         this.bitField0_ |= 0x2;
/* 29466 */         this.debounceLow_ = value;
/* 29467 */         onChanged();
/* 29468 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearDebounceLow() {
/* 29475 */         this.bitField0_ &= 0xFFFFFFFD;
/* 29476 */         this.debounceLow_ = 0;
/* 29477 */         onChanged();
/* 29478 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasDebounceHigh() {
/* 29488 */         return ((this.bitField0_ & 0x4) != 0);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getDebounceHigh() {
/* 29496 */         return this.debounceHigh_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setDebounceHigh(int value) {
/* 29504 */         this.bitField0_ |= 0x4;
/* 29505 */         this.debounceHigh_ = value;
/* 29506 */         onChanged();
/* 29507 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearDebounceHigh() {
/* 29514 */         this.bitField0_ &= 0xFFFFFFFB;
/* 29515 */         this.debounceHigh_ = 0;
/* 29516 */         onChanged();
/* 29517 */         return this;
/*       */       }
/*       */ 
/*       */       
/*       */       public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
/* 29522 */         return (Builder)super.setUnknownFields(unknownFields);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
/* 29528 */         return (Builder)super.mergeUnknownFields(unknownFields);
/*       */       }
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 29538 */     private static final mInputConfig DEFAULT_INSTANCE = new mInputConfig();
/*       */ 
/*       */     
/*       */     public static mInputConfig getDefaultInstance() {
/* 29542 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */     
/*       */     @Deprecated
/* 29546 */     public static final Parser<mInputConfig> PARSER = (Parser<mInputConfig>)new AbstractParser<mInputConfig>()
/*       */       {
/*       */ 
/*       */         
/*       */         public StarLinkMessage.mInputConfig parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException
/*       */         {
/* 29552 */           return new StarLinkMessage.mInputConfig(input, extensionRegistry);
/*       */         }
/*       */       };
/*       */     
/*       */     public static Parser<mInputConfig> parser() {
/* 29557 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public Parser<mInputConfig> getParserForType() {
/* 29562 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public mInputConfig getDefaultInstanceForType() {
/* 29567 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */   }
/*       */ 
/*       */ 
/*       */   
/*       */   public static interface mSpeedLimitOrBuilder
/*       */     extends MessageOrBuilder
/*       */   {
/*       */     boolean hasNumber();
/*       */ 
/*       */ 
/*       */     
/*       */     int getNumber();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasActive();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean getActive();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasMinSpeed();
/*       */ 
/*       */ 
/*       */     
/*       */     int getMinSpeed();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasMaxSpeed();
/*       */ 
/*       */ 
/*       */     
/*       */     int getMaxSpeed();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasDuration();
/*       */ 
/*       */ 
/*       */     
/*       */     int getDuration();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasReportDuration();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean getReportDuration();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasStartAndEnd();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean getStartAndEnd();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasAutoTrack();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean getAutoTrack();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasOutputPattern();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean getOutputPattern();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasStep();
/*       */ 
/*       */ 
/*       */     
/*       */     int getStep();
/*       */   }
/*       */ 
/*       */ 
/*       */   
/*       */   public static final class mSpeedLimit
/*       */     extends GeneratedMessageV3
/*       */     implements mSpeedLimitOrBuilder
/*       */   {
/*       */     private static final long serialVersionUID = 0L;
/*       */ 
/*       */     
/*       */     private int bitField0_;
/*       */ 
/*       */     
/*       */     public static final int NUMBER_FIELD_NUMBER = 1;
/*       */ 
/*       */     
/*       */     private int number_;
/*       */ 
/*       */     
/*       */     public static final int ACTIVE_FIELD_NUMBER = 2;
/*       */ 
/*       */     
/*       */     private boolean active_;
/*       */ 
/*       */     
/*       */     public static final int MINSPEED_FIELD_NUMBER = 3;
/*       */     
/*       */     private int minSpeed_;
/*       */     
/*       */     public static final int MAXSPEED_FIELD_NUMBER = 4;
/*       */     
/*       */     private int maxSpeed_;
/*       */     
/*       */     public static final int DURATION_FIELD_NUMBER = 5;
/*       */     
/*       */     private int duration_;
/*       */     
/*       */     public static final int REPORTDURATION_FIELD_NUMBER = 6;
/*       */     
/*       */     private boolean reportDuration_;
/*       */     
/*       */     public static final int STARTANDEND_FIELD_NUMBER = 7;
/*       */     
/*       */     private boolean startAndEnd_;
/*       */     
/*       */     public static final int AUTOTRACK_FIELD_NUMBER = 8;
/*       */     
/*       */     private boolean autoTrack_;
/*       */     
/*       */     public static final int OUTPUTPATTERN_FIELD_NUMBER = 9;
/*       */     
/*       */     private boolean outputPattern_;
/*       */     
/*       */     public static final int STEP_FIELD_NUMBER = 10;
/*       */     
/*       */     private int step_;
/*       */     
/*       */     private byte memoizedIsInitialized;
/*       */ 
/*       */     
/*       */     private mSpeedLimit(GeneratedMessageV3.Builder<?> builder)
/*       */     {
/* 29716 */       super(builder);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/* 30041 */       this.memoizedIsInitialized = -1; } private mSpeedLimit() { this.memoizedIsInitialized = -1; } protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) { return new mSpeedLimit(); } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private mSpeedLimit(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this(); if (extensionRegistry == null) throw new NullPointerException();  int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { int tag = input.readTag(); switch (tag) { case 0: done = true; continue;case 8: this.bitField0_ |= 0x1; this.number_ = input.readUInt32(); continue;case 16: this.bitField0_ |= 0x2; this.active_ = input.readBool(); continue;case 24: this.bitField0_ |= 0x4; this.minSpeed_ = input.readUInt32(); continue;case 32: this.bitField0_ |= 0x8; this.maxSpeed_ = input.readUInt32(); continue;case 40: this.bitField0_ |= 0x10; this.duration_ = input.readUInt32(); continue;case 48: this.bitField0_ |= 0x20; this.reportDuration_ = input.readBool(); continue;case 56: this.bitField0_ |= 0x40; this.startAndEnd_ = input.readBool(); continue;case 64: this.bitField0_ |= 0x80; this.autoTrack_ = input.readBool(); continue;case 72: this.bitField0_ |= 0x100; this.outputPattern_ = input.readBool(); continue;case 80: this.bitField0_ |= 0x200; this.step_ = input.readUInt32(); continue; }  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this); } finally { this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_mSpeedLimit_descriptor; } protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() { return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_mSpeedLimit_fieldAccessorTable.ensureFieldAccessorsInitialized(mSpeedLimit.class, Builder.class); } public boolean hasNumber() { return ((this.bitField0_ & 0x1) != 0); } public int getNumber() { return this.number_; } public boolean hasActive() { return ((this.bitField0_ & 0x2) != 0); } public boolean getActive() { return this.active_; } public boolean hasMinSpeed() { return ((this.bitField0_ & 0x4) != 0); } public int getMinSpeed() { return this.minSpeed_; } public boolean hasMaxSpeed() { return ((this.bitField0_ & 0x8) != 0); } public int getMaxSpeed() { return this.maxSpeed_; } public boolean hasDuration() { return ((this.bitField0_ & 0x10) != 0); } public int getDuration() { return this.duration_; } public boolean hasReportDuration() { return ((this.bitField0_ & 0x20) != 0); } public boolean getReportDuration() { return this.reportDuration_; } public boolean hasStartAndEnd() { return ((this.bitField0_ & 0x40) != 0); } public boolean getStartAndEnd() { return this.startAndEnd_; } public boolean hasAutoTrack() { return ((this.bitField0_ & 0x80) != 0); } public boolean getAutoTrack() { return this.autoTrack_; } public boolean hasOutputPattern() { return ((this.bitField0_ & 0x100) != 0); } public boolean getOutputPattern() { return this.outputPattern_; }
/*       */     public boolean hasStep() { return ((this.bitField0_ & 0x200) != 0); }
/*       */     public int getStep() { return this.step_; }
/* 30044 */     public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized;
/* 30045 */       if (isInitialized == 1) return true; 
/* 30046 */       if (isInitialized == 0) return false;
/*       */       
/* 30048 */       if (!hasNumber()) {
/* 30049 */         this.memoizedIsInitialized = 0;
/* 30050 */         return false;
/*       */       } 
/* 30052 */       if (!hasActive()) {
/* 30053 */         this.memoizedIsInitialized = 0;
/* 30054 */         return false;
/*       */       } 
/* 30056 */       if (!hasDuration()) {
/* 30057 */         this.memoizedIsInitialized = 0;
/* 30058 */         return false;
/*       */       } 
/* 30060 */       if (!hasReportDuration()) {
/* 30061 */         this.memoizedIsInitialized = 0;
/* 30062 */         return false;
/*       */       } 
/* 30064 */       this.memoizedIsInitialized = 1;
/* 30065 */       return true; }
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/* 30071 */       if ((this.bitField0_ & 0x1) != 0) {
/* 30072 */         output.writeUInt32(1, this.number_);
/*       */       }
/* 30074 */       if ((this.bitField0_ & 0x2) != 0) {
/* 30075 */         output.writeBool(2, this.active_);
/*       */       }
/* 30077 */       if ((this.bitField0_ & 0x4) != 0) {
/* 30078 */         output.writeUInt32(3, this.minSpeed_);
/*       */       }
/* 30080 */       if ((this.bitField0_ & 0x8) != 0) {
/* 30081 */         output.writeUInt32(4, this.maxSpeed_);
/*       */       }
/* 30083 */       if ((this.bitField0_ & 0x10) != 0) {
/* 30084 */         output.writeUInt32(5, this.duration_);
/*       */       }
/* 30086 */       if ((this.bitField0_ & 0x20) != 0) {
/* 30087 */         output.writeBool(6, this.reportDuration_);
/*       */       }
/* 30089 */       if ((this.bitField0_ & 0x40) != 0) {
/* 30090 */         output.writeBool(7, this.startAndEnd_);
/*       */       }
/* 30092 */       if ((this.bitField0_ & 0x80) != 0) {
/* 30093 */         output.writeBool(8, this.autoTrack_);
/*       */       }
/* 30095 */       if ((this.bitField0_ & 0x100) != 0) {
/* 30096 */         output.writeBool(9, this.outputPattern_);
/*       */       }
/* 30098 */       if ((this.bitField0_ & 0x200) != 0) {
/* 30099 */         output.writeUInt32(10, this.step_);
/*       */       }
/* 30101 */       this.unknownFields.writeTo(output);
/*       */     }
/*       */ 
/*       */     
/*       */     public int getSerializedSize() {
/* 30106 */       int size = this.memoizedSize;
/* 30107 */       if (size != -1) return size;
/*       */       
/* 30109 */       size = 0;
/* 30110 */       if ((this.bitField0_ & 0x1) != 0) {
/* 30111 */         size += 
/* 30112 */           CodedOutputStream.computeUInt32Size(1, this.number_);
/*       */       }
/* 30114 */       if ((this.bitField0_ & 0x2) != 0) {
/* 30115 */         size += 
/* 30116 */           CodedOutputStream.computeBoolSize(2, this.active_);
/*       */       }
/* 30118 */       if ((this.bitField0_ & 0x4) != 0) {
/* 30119 */         size += 
/* 30120 */           CodedOutputStream.computeUInt32Size(3, this.minSpeed_);
/*       */       }
/* 30122 */       if ((this.bitField0_ & 0x8) != 0) {
/* 30123 */         size += 
/* 30124 */           CodedOutputStream.computeUInt32Size(4, this.maxSpeed_);
/*       */       }
/* 30126 */       if ((this.bitField0_ & 0x10) != 0) {
/* 30127 */         size += 
/* 30128 */           CodedOutputStream.computeUInt32Size(5, this.duration_);
/*       */       }
/* 30130 */       if ((this.bitField0_ & 0x20) != 0) {
/* 30131 */         size += 
/* 30132 */           CodedOutputStream.computeBoolSize(6, this.reportDuration_);
/*       */       }
/* 30134 */       if ((this.bitField0_ & 0x40) != 0) {
/* 30135 */         size += 
/* 30136 */           CodedOutputStream.computeBoolSize(7, this.startAndEnd_);
/*       */       }
/* 30138 */       if ((this.bitField0_ & 0x80) != 0) {
/* 30139 */         size += 
/* 30140 */           CodedOutputStream.computeBoolSize(8, this.autoTrack_);
/*       */       }
/* 30142 */       if ((this.bitField0_ & 0x100) != 0) {
/* 30143 */         size += 
/* 30144 */           CodedOutputStream.computeBoolSize(9, this.outputPattern_);
/*       */       }
/* 30146 */       if ((this.bitField0_ & 0x200) != 0) {
/* 30147 */         size += 
/* 30148 */           CodedOutputStream.computeUInt32Size(10, this.step_);
/*       */       }
/* 30150 */       size += this.unknownFields.getSerializedSize();
/* 30151 */       this.memoizedSize = size;
/* 30152 */       return size;
/*       */     }
/*       */ 
/*       */     
/*       */     public boolean equals(Object obj) {
/* 30157 */       if (obj == this) {
/* 30158 */         return true;
/*       */       }
/* 30160 */       if (!(obj instanceof mSpeedLimit)) {
/* 30161 */         return super.equals(obj);
/*       */       }
/* 30163 */       mSpeedLimit other = (mSpeedLimit)obj;
/*       */       
/* 30165 */       if (hasNumber() != other.hasNumber()) return false; 
/* 30166 */       if (hasNumber() && 
/* 30167 */         getNumber() != other
/* 30168 */         .getNumber()) return false;
/*       */       
/* 30170 */       if (hasActive() != other.hasActive()) return false; 
/* 30171 */       if (hasActive() && 
/* 30172 */         getActive() != other
/* 30173 */         .getActive()) return false;
/*       */       
/* 30175 */       if (hasMinSpeed() != other.hasMinSpeed()) return false; 
/* 30176 */       if (hasMinSpeed() && 
/* 30177 */         getMinSpeed() != other
/* 30178 */         .getMinSpeed()) return false;
/*       */       
/* 30180 */       if (hasMaxSpeed() != other.hasMaxSpeed()) return false; 
/* 30181 */       if (hasMaxSpeed() && 
/* 30182 */         getMaxSpeed() != other
/* 30183 */         .getMaxSpeed()) return false;
/*       */       
/* 30185 */       if (hasDuration() != other.hasDuration()) return false; 
/* 30186 */       if (hasDuration() && 
/* 30187 */         getDuration() != other
/* 30188 */         .getDuration()) return false;
/*       */       
/* 30190 */       if (hasReportDuration() != other.hasReportDuration()) return false; 
/* 30191 */       if (hasReportDuration() && 
/* 30192 */         getReportDuration() != other
/* 30193 */         .getReportDuration()) return false;
/*       */       
/* 30195 */       if (hasStartAndEnd() != other.hasStartAndEnd()) return false; 
/* 30196 */       if (hasStartAndEnd() && 
/* 30197 */         getStartAndEnd() != other
/* 30198 */         .getStartAndEnd()) return false;
/*       */       
/* 30200 */       if (hasAutoTrack() != other.hasAutoTrack()) return false; 
/* 30201 */       if (hasAutoTrack() && 
/* 30202 */         getAutoTrack() != other
/* 30203 */         .getAutoTrack()) return false;
/*       */       
/* 30205 */       if (hasOutputPattern() != other.hasOutputPattern()) return false; 
/* 30206 */       if (hasOutputPattern() && 
/* 30207 */         getOutputPattern() != other
/* 30208 */         .getOutputPattern()) return false;
/*       */       
/* 30210 */       if (hasStep() != other.hasStep()) return false; 
/* 30211 */       if (hasStep() && 
/* 30212 */         getStep() != other
/* 30213 */         .getStep()) return false;
/*       */       
/* 30215 */       if (!this.unknownFields.equals(other.unknownFields)) return false; 
/* 30216 */       return true;
/*       */     }
/*       */ 
/*       */     
/*       */     public int hashCode() {
/* 30221 */       if (this.memoizedHashCode != 0) {
/* 30222 */         return this.memoizedHashCode;
/*       */       }
/* 30224 */       int hash = 41;
/* 30225 */       hash = 19 * hash + getDescriptor().hashCode();
/* 30226 */       if (hasNumber()) {
/* 30227 */         hash = 37 * hash + 1;
/* 30228 */         hash = 53 * hash + getNumber();
/*       */       } 
/* 30230 */       if (hasActive()) {
/* 30231 */         hash = 37 * hash + 2;
/* 30232 */         hash = 53 * hash + Internal.hashBoolean(
/* 30233 */             getActive());
/*       */       } 
/* 30235 */       if (hasMinSpeed()) {
/* 30236 */         hash = 37 * hash + 3;
/* 30237 */         hash = 53 * hash + getMinSpeed();
/*       */       } 
/* 30239 */       if (hasMaxSpeed()) {
/* 30240 */         hash = 37 * hash + 4;
/* 30241 */         hash = 53 * hash + getMaxSpeed();
/*       */       } 
/* 30243 */       if (hasDuration()) {
/* 30244 */         hash = 37 * hash + 5;
/* 30245 */         hash = 53 * hash + getDuration();
/*       */       } 
/* 30247 */       if (hasReportDuration()) {
/* 30248 */         hash = 37 * hash + 6;
/* 30249 */         hash = 53 * hash + Internal.hashBoolean(
/* 30250 */             getReportDuration());
/*       */       } 
/* 30252 */       if (hasStartAndEnd()) {
/* 30253 */         hash = 37 * hash + 7;
/* 30254 */         hash = 53 * hash + Internal.hashBoolean(
/* 30255 */             getStartAndEnd());
/*       */       } 
/* 30257 */       if (hasAutoTrack()) {
/* 30258 */         hash = 37 * hash + 8;
/* 30259 */         hash = 53 * hash + Internal.hashBoolean(
/* 30260 */             getAutoTrack());
/*       */       } 
/* 30262 */       if (hasOutputPattern()) {
/* 30263 */         hash = 37 * hash + 9;
/* 30264 */         hash = 53 * hash + Internal.hashBoolean(
/* 30265 */             getOutputPattern());
/*       */       } 
/* 30267 */       if (hasStep()) {
/* 30268 */         hash = 37 * hash + 10;
/* 30269 */         hash = 53 * hash + getStep();
/*       */       } 
/* 30271 */       hash = 29 * hash + this.unknownFields.hashCode();
/* 30272 */       this.memoizedHashCode = hash;
/* 30273 */       return hash;
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mSpeedLimit parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
/* 30279 */       return (mSpeedLimit)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mSpeedLimit parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 30285 */       return (mSpeedLimit)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static mSpeedLimit parseFrom(ByteString data) throws InvalidProtocolBufferException {
/* 30290 */       return (mSpeedLimit)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mSpeedLimit parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 30296 */       return (mSpeedLimit)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static mSpeedLimit parseFrom(byte[] data) throws InvalidProtocolBufferException {
/* 30300 */       return (mSpeedLimit)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mSpeedLimit parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 30306 */       return (mSpeedLimit)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static mSpeedLimit parseFrom(InputStream input) throws IOException {
/* 30310 */       return 
/* 30311 */         (mSpeedLimit)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mSpeedLimit parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 30317 */       return 
/* 30318 */         (mSpeedLimit)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static mSpeedLimit parseDelimitedFrom(InputStream input) throws IOException {
/* 30322 */       return 
/* 30323 */         (mSpeedLimit)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mSpeedLimit parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 30329 */       return 
/* 30330 */         (mSpeedLimit)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static mSpeedLimit parseFrom(CodedInputStream input) throws IOException {
/* 30335 */       return 
/* 30336 */         (mSpeedLimit)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mSpeedLimit parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 30342 */       return 
/* 30343 */         (mSpeedLimit)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public Builder newBuilderForType() {
/* 30347 */       return newBuilder();
/*       */     } public static Builder newBuilder() {
/* 30349 */       return DEFAULT_INSTANCE.toBuilder();
/*       */     }
/*       */     public static Builder newBuilder(mSpeedLimit prototype) {
/* 30352 */       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
/*       */     }
/*       */     
/*       */     public Builder toBuilder() {
/* 30356 */       return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder())
/* 30357 */         .mergeFrom(this);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
/* 30363 */       Builder builder = new Builder(parent);
/* 30364 */       return builder;
/*       */     }
/*       */     public static final class Builder extends GeneratedMessageV3.Builder<Builder> implements StarLinkMessage.mSpeedLimitOrBuilder { private int bitField0_;
/*       */       private int number_;
/*       */       private boolean active_;
/*       */       private int minSpeed_;
/*       */       private int maxSpeed_;
/*       */       private int duration_;
/*       */       private boolean reportDuration_;
/*       */       private boolean startAndEnd_;
/*       */       private boolean autoTrack_;
/*       */       private boolean outputPattern_;
/*       */       private int step_;
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/* 30379 */         return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_mSpeedLimit_descriptor;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
/* 30385 */         return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_mSpeedLimit_fieldAccessorTable
/* 30386 */           .ensureFieldAccessorsInitialized(StarLinkMessage.mSpeedLimit.class, Builder.class);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       private Builder() {
/* 30392 */         maybeForceBuilderInitialization();
/*       */       }
/*       */ 
/*       */       
/*       */       private Builder(GeneratedMessageV3.BuilderParent parent) {
/* 30397 */         super(parent);
/* 30398 */         maybeForceBuilderInitialization();
/*       */       }
/*       */       
/*       */       private void maybeForceBuilderInitialization() {
/* 30402 */         if (StarLinkMessage.mSpeedLimit.alwaysUseFieldBuilders);
/*       */       }
/*       */ 
/*       */       
/*       */       public Builder clear() {
/* 30407 */         super.clear();
/* 30408 */         this.number_ = 0;
/* 30409 */         this.bitField0_ &= 0xFFFFFFFE;
/* 30410 */         this.active_ = false;
/* 30411 */         this.bitField0_ &= 0xFFFFFFFD;
/* 30412 */         this.minSpeed_ = 0;
/* 30413 */         this.bitField0_ &= 0xFFFFFFFB;
/* 30414 */         this.maxSpeed_ = 0;
/* 30415 */         this.bitField0_ &= 0xFFFFFFF7;
/* 30416 */         this.duration_ = 0;
/* 30417 */         this.bitField0_ &= 0xFFFFFFEF;
/* 30418 */         this.reportDuration_ = false;
/* 30419 */         this.bitField0_ &= 0xFFFFFFDF;
/* 30420 */         this.startAndEnd_ = false;
/* 30421 */         this.bitField0_ &= 0xFFFFFFBF;
/* 30422 */         this.autoTrack_ = false;
/* 30423 */         this.bitField0_ &= 0xFFFFFF7F;
/* 30424 */         this.outputPattern_ = false;
/* 30425 */         this.bitField0_ &= 0xFFFFFEFF;
/* 30426 */         this.step_ = 0;
/* 30427 */         this.bitField0_ &= 0xFFFFFDFF;
/* 30428 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Descriptors.Descriptor getDescriptorForType() {
/* 30434 */         return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_mSpeedLimit_descriptor;
/*       */       }
/*       */ 
/*       */       
/*       */       public StarLinkMessage.mSpeedLimit getDefaultInstanceForType() {
/* 30439 */         return StarLinkMessage.mSpeedLimit.getDefaultInstance();
/*       */       }
/*       */ 
/*       */       
/*       */       public StarLinkMessage.mSpeedLimit build() {
/* 30444 */         StarLinkMessage.mSpeedLimit result = buildPartial();
/* 30445 */         if (!result.isInitialized()) {
/* 30446 */           throw newUninitializedMessageException(result);
/*       */         }
/* 30448 */         return result;
/*       */       }
/*       */ 
/*       */       
/*       */       public StarLinkMessage.mSpeedLimit buildPartial() {
/* 30453 */         StarLinkMessage.mSpeedLimit result = new StarLinkMessage.mSpeedLimit(this);
/* 30454 */         int from_bitField0_ = this.bitField0_;
/* 30455 */         int to_bitField0_ = 0;
/* 30456 */         if ((from_bitField0_ & 0x1) != 0) {
/* 30457 */           result.number_ = this.number_;
/* 30458 */           to_bitField0_ |= 0x1;
/*       */         } 
/* 30460 */         if ((from_bitField0_ & 0x2) != 0) {
/* 30461 */           result.active_ = this.active_;
/* 30462 */           to_bitField0_ |= 0x2;
/*       */         } 
/* 30464 */         if ((from_bitField0_ & 0x4) != 0) {
/* 30465 */           result.minSpeed_ = this.minSpeed_;
/* 30466 */           to_bitField0_ |= 0x4;
/*       */         } 
/* 30468 */         if ((from_bitField0_ & 0x8) != 0) {
/* 30469 */           result.maxSpeed_ = this.maxSpeed_;
/* 30470 */           to_bitField0_ |= 0x8;
/*       */         } 
/* 30472 */         if ((from_bitField0_ & 0x10) != 0) {
/* 30473 */           result.duration_ = this.duration_;
/* 30474 */           to_bitField0_ |= 0x10;
/*       */         } 
/* 30476 */         if ((from_bitField0_ & 0x20) != 0) {
/* 30477 */           result.reportDuration_ = this.reportDuration_;
/* 30478 */           to_bitField0_ |= 0x20;
/*       */         } 
/* 30480 */         if ((from_bitField0_ & 0x40) != 0) {
/* 30481 */           result.startAndEnd_ = this.startAndEnd_;
/* 30482 */           to_bitField0_ |= 0x40;
/*       */         } 
/* 30484 */         if ((from_bitField0_ & 0x80) != 0) {
/* 30485 */           result.autoTrack_ = this.autoTrack_;
/* 30486 */           to_bitField0_ |= 0x80;
/*       */         } 
/* 30488 */         if ((from_bitField0_ & 0x100) != 0) {
/* 30489 */           result.outputPattern_ = this.outputPattern_;
/* 30490 */           to_bitField0_ |= 0x100;
/*       */         } 
/* 30492 */         if ((from_bitField0_ & 0x200) != 0) {
/* 30493 */           result.step_ = this.step_;
/* 30494 */           to_bitField0_ |= 0x200;
/*       */         } 
/* 30496 */         result.bitField0_ = to_bitField0_;
/* 30497 */         onBuilt();
/* 30498 */         return result;
/*       */       }
/*       */ 
/*       */       
/*       */       public Builder clone() {
/* 30503 */         return (Builder)super.clone();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setField(Descriptors.FieldDescriptor field, Object value) {
/* 30509 */         return (Builder)super.setField(field, value);
/*       */       }
/*       */ 
/*       */       
/*       */       public Builder clearField(Descriptors.FieldDescriptor field) {
/* 30514 */         return (Builder)super.clearField(field);
/*       */       }
/*       */ 
/*       */       
/*       */       public Builder clearOneof(Descriptors.OneofDescriptor oneof) {
/* 30519 */         return (Builder)super.clearOneof(oneof);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
/* 30525 */         return (Builder)super.setRepeatedField(field, index, value);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
/* 30531 */         return (Builder)super.addRepeatedField(field, value);
/*       */       }
/*       */       
/*       */       public Builder mergeFrom(Message other) {
/* 30535 */         if (other instanceof StarLinkMessage.mSpeedLimit) {
/* 30536 */           return mergeFrom((StarLinkMessage.mSpeedLimit)other);
/*       */         }
/* 30538 */         super.mergeFrom(other);
/* 30539 */         return this;
/*       */       }
/*       */ 
/*       */       
/*       */       public Builder mergeFrom(StarLinkMessage.mSpeedLimit other) {
/* 30544 */         if (other == StarLinkMessage.mSpeedLimit.getDefaultInstance()) return this; 
/* 30545 */         if (other.hasNumber()) {
/* 30546 */           setNumber(other.getNumber());
/*       */         }
/* 30548 */         if (other.hasActive()) {
/* 30549 */           setActive(other.getActive());
/*       */         }
/* 30551 */         if (other.hasMinSpeed()) {
/* 30552 */           setMinSpeed(other.getMinSpeed());
/*       */         }
/* 30554 */         if (other.hasMaxSpeed()) {
/* 30555 */           setMaxSpeed(other.getMaxSpeed());
/*       */         }
/* 30557 */         if (other.hasDuration()) {
/* 30558 */           setDuration(other.getDuration());
/*       */         }
/* 30560 */         if (other.hasReportDuration()) {
/* 30561 */           setReportDuration(other.getReportDuration());
/*       */         }
/* 30563 */         if (other.hasStartAndEnd()) {
/* 30564 */           setStartAndEnd(other.getStartAndEnd());
/*       */         }
/* 30566 */         if (other.hasAutoTrack()) {
/* 30567 */           setAutoTrack(other.getAutoTrack());
/*       */         }
/* 30569 */         if (other.hasOutputPattern()) {
/* 30570 */           setOutputPattern(other.getOutputPattern());
/*       */         }
/* 30572 */         if (other.hasStep()) {
/* 30573 */           setStep(other.getStep());
/*       */         }
/* 30575 */         mergeUnknownFields(other.unknownFields);
/* 30576 */         onChanged();
/* 30577 */         return this;
/*       */       }
/*       */ 
/*       */       
/*       */       public final boolean isInitialized() {
/* 30582 */         if (!hasNumber()) {
/* 30583 */           return false;
/*       */         }
/* 30585 */         if (!hasActive()) {
/* 30586 */           return false;
/*       */         }
/* 30588 */         if (!hasDuration()) {
/* 30589 */           return false;
/*       */         }
/* 30591 */         if (!hasReportDuration()) {
/* 30592 */           return false;
/*       */         }
/* 30594 */         return true;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 30602 */         StarLinkMessage.mSpeedLimit parsedMessage = null;
/*       */         try {
/* 30604 */           parsedMessage = (StarLinkMessage.mSpeedLimit)StarLinkMessage.mSpeedLimit.PARSER.parsePartialFrom(input, extensionRegistry);
/* 30605 */         } catch (InvalidProtocolBufferException e) {
/* 30606 */           parsedMessage = (StarLinkMessage.mSpeedLimit)e.getUnfinishedMessage();
/* 30607 */           throw e.unwrapIOException();
/*       */         } finally {
/* 30609 */           if (parsedMessage != null) {
/* 30610 */             mergeFrom(parsedMessage);
/*       */           }
/*       */         } 
/* 30613 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasNumber() {
/* 30624 */         return ((this.bitField0_ & 0x1) != 0);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getNumber() {
/* 30632 */         return this.number_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setNumber(int value) {
/* 30640 */         this.bitField0_ |= 0x1;
/* 30641 */         this.number_ = value;
/* 30642 */         onChanged();
/* 30643 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearNumber() {
/* 30650 */         this.bitField0_ &= 0xFFFFFFFE;
/* 30651 */         this.number_ = 0;
/* 30652 */         onChanged();
/* 30653 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasActive() {
/* 30663 */         return ((this.bitField0_ & 0x2) != 0);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean getActive() {
/* 30671 */         return this.active_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setActive(boolean value) {
/* 30679 */         this.bitField0_ |= 0x2;
/* 30680 */         this.active_ = value;
/* 30681 */         onChanged();
/* 30682 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearActive() {
/* 30689 */         this.bitField0_ &= 0xFFFFFFFD;
/* 30690 */         this.active_ = false;
/* 30691 */         onChanged();
/* 30692 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasMinSpeed() {
/* 30706 */         return ((this.bitField0_ & 0x4) != 0);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getMinSpeed() {
/* 30718 */         return this.minSpeed_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setMinSpeed(int value) {
/* 30730 */         this.bitField0_ |= 0x4;
/* 30731 */         this.minSpeed_ = value;
/* 30732 */         onChanged();
/* 30733 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearMinSpeed() {
/* 30744 */         this.bitField0_ &= 0xFFFFFFFB;
/* 30745 */         this.minSpeed_ = 0;
/* 30746 */         onChanged();
/* 30747 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasMaxSpeed() {
/* 30761 */         return ((this.bitField0_ & 0x8) != 0);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getMaxSpeed() {
/* 30773 */         return this.maxSpeed_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setMaxSpeed(int value) {
/* 30785 */         this.bitField0_ |= 0x8;
/* 30786 */         this.maxSpeed_ = value;
/* 30787 */         onChanged();
/* 30788 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearMaxSpeed() {
/* 30799 */         this.bitField0_ &= 0xFFFFFFF7;
/* 30800 */         this.maxSpeed_ = 0;
/* 30801 */         onChanged();
/* 30802 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasDuration() {
/* 30812 */         return ((this.bitField0_ & 0x10) != 0);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getDuration() {
/* 30820 */         return this.duration_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setDuration(int value) {
/* 30828 */         this.bitField0_ |= 0x10;
/* 30829 */         this.duration_ = value;
/* 30830 */         onChanged();
/* 30831 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearDuration() {
/* 30838 */         this.bitField0_ &= 0xFFFFFFEF;
/* 30839 */         this.duration_ = 0;
/* 30840 */         onChanged();
/* 30841 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasReportDuration() {
/* 30851 */         return ((this.bitField0_ & 0x20) != 0);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean getReportDuration() {
/* 30859 */         return this.reportDuration_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setReportDuration(boolean value) {
/* 30867 */         this.bitField0_ |= 0x20;
/* 30868 */         this.reportDuration_ = value;
/* 30869 */         onChanged();
/* 30870 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearReportDuration() {
/* 30877 */         this.bitField0_ &= 0xFFFFFFDF;
/* 30878 */         this.reportDuration_ = false;
/* 30879 */         onChanged();
/* 30880 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasStartAndEnd() {
/* 30890 */         return ((this.bitField0_ & 0x40) != 0);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean getStartAndEnd() {
/* 30898 */         return this.startAndEnd_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setStartAndEnd(boolean value) {
/* 30906 */         this.bitField0_ |= 0x40;
/* 30907 */         this.startAndEnd_ = value;
/* 30908 */         onChanged();
/* 30909 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearStartAndEnd() {
/* 30916 */         this.bitField0_ &= 0xFFFFFFBF;
/* 30917 */         this.startAndEnd_ = false;
/* 30918 */         onChanged();
/* 30919 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasAutoTrack() {
/* 30929 */         return ((this.bitField0_ & 0x80) != 0);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean getAutoTrack() {
/* 30937 */         return this.autoTrack_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setAutoTrack(boolean value) {
/* 30945 */         this.bitField0_ |= 0x80;
/* 30946 */         this.autoTrack_ = value;
/* 30947 */         onChanged();
/* 30948 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearAutoTrack() {
/* 30955 */         this.bitField0_ &= 0xFFFFFF7F;
/* 30956 */         this.autoTrack_ = false;
/* 30957 */         onChanged();
/* 30958 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasOutputPattern() {
/* 30968 */         return ((this.bitField0_ & 0x100) != 0);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean getOutputPattern() {
/* 30976 */         return this.outputPattern_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setOutputPattern(boolean value) {
/* 30984 */         this.bitField0_ |= 0x100;
/* 30985 */         this.outputPattern_ = value;
/* 30986 */         onChanged();
/* 30987 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearOutputPattern() {
/* 30994 */         this.bitField0_ &= 0xFFFFFEFF;
/* 30995 */         this.outputPattern_ = false;
/* 30996 */         onChanged();
/* 30997 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasStep() {
/* 31007 */         return ((this.bitField0_ & 0x200) != 0);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getStep() {
/* 31015 */         return this.step_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setStep(int value) {
/* 31023 */         this.bitField0_ |= 0x200;
/* 31024 */         this.step_ = value;
/* 31025 */         onChanged();
/* 31026 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearStep() {
/* 31033 */         this.bitField0_ &= 0xFFFFFDFF;
/* 31034 */         this.step_ = 0;
/* 31035 */         onChanged();
/* 31036 */         return this;
/*       */       }
/*       */ 
/*       */       
/*       */       public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
/* 31041 */         return (Builder)super.setUnknownFields(unknownFields);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
/* 31047 */         return (Builder)super.mergeUnknownFields(unknownFields);
/*       */       } }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 31057 */     private static final mSpeedLimit DEFAULT_INSTANCE = new mSpeedLimit();
/*       */ 
/*       */     
/*       */     public static mSpeedLimit getDefaultInstance() {
/* 31061 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */     
/*       */     @Deprecated
/* 31065 */     public static final Parser<mSpeedLimit> PARSER = (Parser<mSpeedLimit>)new AbstractParser<mSpeedLimit>()
/*       */       {
/*       */ 
/*       */         
/*       */         public StarLinkMessage.mSpeedLimit parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException
/*       */         {
/* 31071 */           return new StarLinkMessage.mSpeedLimit(input, extensionRegistry);
/*       */         }
/*       */       };
/*       */     
/*       */     public static Parser<mSpeedLimit> parser() {
/* 31076 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public Parser<mSpeedLimit> getParserForType() {
/* 31081 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public mSpeedLimit getDefaultInstanceForType() {
/* 31086 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */   }
/*       */ 
/*       */ 
/*       */   
/*       */   public static interface mUnitIDChangedOrBuilder
/*       */     extends MessageOrBuilder
/*       */   {
/*       */     boolean hasFID();
/*       */ 
/*       */ 
/*       */     
/*       */     int getFID();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIMEI();
/*       */ 
/*       */ 
/*       */     
/*       */     String getIMEI();
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getIMEIBytes();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasPreviousSetting();
/*       */ 
/*       */ 
/*       */     
/*       */     int getPreviousSetting();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasNewSetting();
/*       */ 
/*       */     
/*       */     int getNewSetting();
/*       */   }
/*       */ 
/*       */   
/*       */   public static final class mUnitIDChanged
/*       */     extends GeneratedMessageV3
/*       */     implements mUnitIDChangedOrBuilder
/*       */   {
/*       */     private static final long serialVersionUID = 0L;
/*       */     
/*       */     private int bitField0_;
/*       */     
/*       */     public static final int FID_FIELD_NUMBER = 1;
/*       */     
/*       */     private int fID_;
/*       */     
/*       */     public static final int IMEI_FIELD_NUMBER = 2;
/*       */     
/*       */     private volatile Object iMEI_;
/*       */     
/*       */     public static final int PREVIOUSSETTING_FIELD_NUMBER = 3;
/*       */     
/*       */     private int previousSetting_;
/*       */     
/*       */     public static final int NEWSETTING_FIELD_NUMBER = 4;
/*       */     
/*       */     private int newSetting_;
/*       */     
/*       */     private byte memoizedIsInitialized;
/*       */ 
/*       */     
/*       */     private mUnitIDChanged(GeneratedMessageV3.Builder<?> builder)
/*       */     {
/* 31159 */       super(builder);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/* 31355 */       this.memoizedIsInitialized = -1; } private mUnitIDChanged() { this.memoizedIsInitialized = -1; this.iMEI_ = ""; } protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) { return new mUnitIDChanged(); } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private mUnitIDChanged(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this(); if (extensionRegistry == null) throw new NullPointerException();  int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { ByteString bs; int tag = input.readTag(); switch (tag) { case 0: done = true; continue;case 8: this.bitField0_ |= 0x1; this.fID_ = input.readUInt32(); continue;case 18: bs = input.readBytes(); this.bitField0_ |= 0x2; this.iMEI_ = bs; continue;case 24: this.bitField0_ |= 0x4; this.previousSetting_ = input.readSInt32(); continue;case 32: this.bitField0_ |= 0x8; this.newSetting_ = input.readSInt32(); continue; }  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this); } finally { this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_mUnitIDChanged_descriptor; } protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() { return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_mUnitIDChanged_fieldAccessorTable.ensureFieldAccessorsInitialized(mUnitIDChanged.class, Builder.class); } public boolean hasFID() { return ((this.bitField0_ & 0x1) != 0); } public int getFID() { return this.fID_; } public boolean hasIMEI() { return ((this.bitField0_ & 0x2) != 0); } public String getIMEI() { Object ref = this.iMEI_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.iMEI_ = s;  return s; } public ByteString getIMEIBytes() { Object ref = this.iMEI_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.iMEI_ = b; return b; }  return (ByteString)ref; } public boolean hasPreviousSetting() { return ((this.bitField0_ & 0x4) != 0); } public int getPreviousSetting() { return this.previousSetting_; }
/*       */     public boolean hasNewSetting() { return ((this.bitField0_ & 0x8) != 0); }
/*       */     public int getNewSetting() { return this.newSetting_; }
/* 31358 */     public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized;
/* 31359 */       if (isInitialized == 1) return true; 
/* 31360 */       if (isInitialized == 0) return false;
/*       */       
/* 31362 */       if (!hasFID()) {
/* 31363 */         this.memoizedIsInitialized = 0;
/* 31364 */         return false;
/*       */       } 
/* 31366 */       if (!hasIMEI()) {
/* 31367 */         this.memoizedIsInitialized = 0;
/* 31368 */         return false;
/*       */       } 
/* 31370 */       if (!hasPreviousSetting()) {
/* 31371 */         this.memoizedIsInitialized = 0;
/* 31372 */         return false;
/*       */       } 
/* 31374 */       if (!hasNewSetting()) {
/* 31375 */         this.memoizedIsInitialized = 0;
/* 31376 */         return false;
/*       */       } 
/* 31378 */       this.memoizedIsInitialized = 1;
/* 31379 */       return true; }
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/* 31385 */       if ((this.bitField0_ & 0x1) != 0) {
/* 31386 */         output.writeUInt32(1, this.fID_);
/*       */       }
/* 31388 */       if ((this.bitField0_ & 0x2) != 0) {
/* 31389 */         GeneratedMessageV3.writeString(output, 2, this.iMEI_);
/*       */       }
/* 31391 */       if ((this.bitField0_ & 0x4) != 0) {
/* 31392 */         output.writeSInt32(3, this.previousSetting_);
/*       */       }
/* 31394 */       if ((this.bitField0_ & 0x8) != 0) {
/* 31395 */         output.writeSInt32(4, this.newSetting_);
/*       */       }
/* 31397 */       this.unknownFields.writeTo(output);
/*       */     }
/*       */ 
/*       */     
/*       */     public int getSerializedSize() {
/* 31402 */       int size = this.memoizedSize;
/* 31403 */       if (size != -1) return size;
/*       */       
/* 31405 */       size = 0;
/* 31406 */       if ((this.bitField0_ & 0x1) != 0) {
/* 31407 */         size += 
/* 31408 */           CodedOutputStream.computeUInt32Size(1, this.fID_);
/*       */       }
/* 31410 */       if ((this.bitField0_ & 0x2) != 0) {
/* 31411 */         size += GeneratedMessageV3.computeStringSize(2, this.iMEI_);
/*       */       }
/* 31413 */       if ((this.bitField0_ & 0x4) != 0) {
/* 31414 */         size += 
/* 31415 */           CodedOutputStream.computeSInt32Size(3, this.previousSetting_);
/*       */       }
/* 31417 */       if ((this.bitField0_ & 0x8) != 0) {
/* 31418 */         size += 
/* 31419 */           CodedOutputStream.computeSInt32Size(4, this.newSetting_);
/*       */       }
/* 31421 */       size += this.unknownFields.getSerializedSize();
/* 31422 */       this.memoizedSize = size;
/* 31423 */       return size;
/*       */     }
/*       */ 
/*       */     
/*       */     public boolean equals(Object obj) {
/* 31428 */       if (obj == this) {
/* 31429 */         return true;
/*       */       }
/* 31431 */       if (!(obj instanceof mUnitIDChanged)) {
/* 31432 */         return super.equals(obj);
/*       */       }
/* 31434 */       mUnitIDChanged other = (mUnitIDChanged)obj;
/*       */       
/* 31436 */       if (hasFID() != other.hasFID()) return false; 
/* 31437 */       if (hasFID() && 
/* 31438 */         getFID() != other
/* 31439 */         .getFID()) return false;
/*       */       
/* 31441 */       if (hasIMEI() != other.hasIMEI()) return false; 
/* 31442 */       if (hasIMEI() && 
/*       */         
/* 31444 */         !getIMEI().equals(other.getIMEI())) return false;
/*       */       
/* 31446 */       if (hasPreviousSetting() != other.hasPreviousSetting()) return false; 
/* 31447 */       if (hasPreviousSetting() && 
/* 31448 */         getPreviousSetting() != other
/* 31449 */         .getPreviousSetting()) return false;
/*       */       
/* 31451 */       if (hasNewSetting() != other.hasNewSetting()) return false; 
/* 31452 */       if (hasNewSetting() && 
/* 31453 */         getNewSetting() != other
/* 31454 */         .getNewSetting()) return false;
/*       */       
/* 31456 */       if (!this.unknownFields.equals(other.unknownFields)) return false; 
/* 31457 */       return true;
/*       */     }
/*       */ 
/*       */     
/*       */     public int hashCode() {
/* 31462 */       if (this.memoizedHashCode != 0) {
/* 31463 */         return this.memoizedHashCode;
/*       */       }
/* 31465 */       int hash = 41;
/* 31466 */       hash = 19 * hash + getDescriptor().hashCode();
/* 31467 */       if (hasFID()) {
/* 31468 */         hash = 37 * hash + 1;
/* 31469 */         hash = 53 * hash + getFID();
/*       */       } 
/* 31471 */       if (hasIMEI()) {
/* 31472 */         hash = 37 * hash + 2;
/* 31473 */         hash = 53 * hash + getIMEI().hashCode();
/*       */       } 
/* 31475 */       if (hasPreviousSetting()) {
/* 31476 */         hash = 37 * hash + 3;
/* 31477 */         hash = 53 * hash + getPreviousSetting();
/*       */       } 
/* 31479 */       if (hasNewSetting()) {
/* 31480 */         hash = 37 * hash + 4;
/* 31481 */         hash = 53 * hash + getNewSetting();
/*       */       } 
/* 31483 */       hash = 29 * hash + this.unknownFields.hashCode();
/* 31484 */       this.memoizedHashCode = hash;
/* 31485 */       return hash;
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mUnitIDChanged parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
/* 31491 */       return (mUnitIDChanged)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mUnitIDChanged parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 31497 */       return (mUnitIDChanged)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static mUnitIDChanged parseFrom(ByteString data) throws InvalidProtocolBufferException {
/* 31502 */       return (mUnitIDChanged)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mUnitIDChanged parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 31508 */       return (mUnitIDChanged)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static mUnitIDChanged parseFrom(byte[] data) throws InvalidProtocolBufferException {
/* 31512 */       return (mUnitIDChanged)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mUnitIDChanged parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 31518 */       return (mUnitIDChanged)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static mUnitIDChanged parseFrom(InputStream input) throws IOException {
/* 31522 */       return 
/* 31523 */         (mUnitIDChanged)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mUnitIDChanged parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 31529 */       return 
/* 31530 */         (mUnitIDChanged)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static mUnitIDChanged parseDelimitedFrom(InputStream input) throws IOException {
/* 31534 */       return 
/* 31535 */         (mUnitIDChanged)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mUnitIDChanged parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 31541 */       return 
/* 31542 */         (mUnitIDChanged)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static mUnitIDChanged parseFrom(CodedInputStream input) throws IOException {
/* 31547 */       return 
/* 31548 */         (mUnitIDChanged)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mUnitIDChanged parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 31554 */       return 
/* 31555 */         (mUnitIDChanged)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public Builder newBuilderForType() {
/* 31559 */       return newBuilder();
/*       */     } public static Builder newBuilder() {
/* 31561 */       return DEFAULT_INSTANCE.toBuilder();
/*       */     }
/*       */     public static Builder newBuilder(mUnitIDChanged prototype) {
/* 31564 */       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
/*       */     }
/*       */     
/*       */     public Builder toBuilder() {
/* 31568 */       return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder())
/* 31569 */         .mergeFrom(this);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
/* 31575 */       Builder builder = new Builder(parent);
/* 31576 */       return builder;
/*       */     }
/*       */ 
/*       */     
/*       */     public static final class Builder
/*       */       extends GeneratedMessageV3.Builder<Builder>
/*       */       implements StarLinkMessage.mUnitIDChangedOrBuilder
/*       */     {
/*       */       private int bitField0_;
/*       */       private int fID_;
/*       */       private Object iMEI_;
/*       */       private int previousSetting_;
/*       */       private int newSetting_;
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/* 31591 */         return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_mUnitIDChanged_descriptor;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
/* 31597 */         return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_mUnitIDChanged_fieldAccessorTable
/* 31598 */           .ensureFieldAccessorsInitialized(StarLinkMessage.mUnitIDChanged.class, Builder.class);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private Builder()
/*       */       {
/* 31816 */         this.iMEI_ = ""; maybeForceBuilderInitialization(); } private Builder(GeneratedMessageV3.BuilderParent parent) { super(parent); this.iMEI_ = ""; maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (StarLinkMessage.mUnitIDChanged.alwaysUseFieldBuilders); } public Builder clear() { super.clear(); this.fID_ = 0; this.bitField0_ &= 0xFFFFFFFE; this.iMEI_ = ""; this.bitField0_ &= 0xFFFFFFFD; this.previousSetting_ = 0; this.bitField0_ &= 0xFFFFFFFB; this.newSetting_ = 0; this.bitField0_ &= 0xFFFFFFF7; return this; } public Descriptors.Descriptor getDescriptorForType() { return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_mUnitIDChanged_descriptor; } public StarLinkMessage.mUnitIDChanged getDefaultInstanceForType() { return StarLinkMessage.mUnitIDChanged.getDefaultInstance(); } public StarLinkMessage.mUnitIDChanged build() { StarLinkMessage.mUnitIDChanged result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public StarLinkMessage.mUnitIDChanged buildPartial() { StarLinkMessage.mUnitIDChanged result = new StarLinkMessage.mUnitIDChanged(this); int from_bitField0_ = this.bitField0_; int to_bitField0_ = 0; if ((from_bitField0_ & 0x1) != 0) { result.fID_ = this.fID_; to_bitField0_ |= 0x1; }  if ((from_bitField0_ & 0x2) != 0) to_bitField0_ |= 0x2;  result.iMEI_ = this.iMEI_; if ((from_bitField0_ & 0x4) != 0) { result.previousSetting_ = this.previousSetting_; to_bitField0_ |= 0x4; }  if ((from_bitField0_ & 0x8) != 0) { result.newSetting_ = this.newSetting_; to_bitField0_ |= 0x8; }  result.bitField0_ = to_bitField0_; onBuilt(); return result; } public Builder clone() { return (Builder)super.clone(); } public Builder setField(Descriptors.FieldDescriptor field, Object value) { return (Builder)super.setField(field, value); } public Builder clearField(Descriptors.FieldDescriptor field) { return (Builder)super.clearField(field); } public Builder clearOneof(Descriptors.OneofDescriptor oneof) { return (Builder)super.clearOneof(oneof); } public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) { return (Builder)super.setRepeatedField(field, index, value); } public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) { return (Builder)super.addRepeatedField(field, value); } public Builder mergeFrom(Message other) { if (other instanceof StarLinkMessage.mUnitIDChanged) return mergeFrom((StarLinkMessage.mUnitIDChanged)other);  super.mergeFrom(other); return this; } public Builder mergeFrom(StarLinkMessage.mUnitIDChanged other) { if (other == StarLinkMessage.mUnitIDChanged.getDefaultInstance()) return this;  if (other.hasFID()) setFID(other.getFID());  if (other.hasIMEI()) { this.bitField0_ |= 0x2; this.iMEI_ = other.iMEI_; onChanged(); }  if (other.hasPreviousSetting()) setPreviousSetting(other.getPreviousSetting());  if (other.hasNewSetting()) setNewSetting(other.getNewSetting());  mergeUnknownFields(other.unknownFields); onChanged(); return this; } public final boolean isInitialized() { if (!hasFID()) return false;  if (!hasIMEI()) return false;  if (!hasPreviousSetting()) return false;  if (!hasNewSetting()) return false;  return true; }
/*       */       public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { StarLinkMessage.mUnitIDChanged parsedMessage = null; try { parsedMessage = (StarLinkMessage.mUnitIDChanged)StarLinkMessage.mUnitIDChanged.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (StarLinkMessage.mUnitIDChanged)e.getUnfinishedMessage(); throw e.unwrapIOException(); } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; }
/*       */       public boolean hasFID() { return ((this.bitField0_ & 0x1) != 0); }
/*       */       public int getFID() { return this.fID_; }
/*       */       public Builder setFID(int value) { this.bitField0_ |= 0x1; this.fID_ = value; onChanged(); return this; }
/*       */       public Builder clearFID() { this.bitField0_ &= 0xFFFFFFFE; this.fID_ = 0; onChanged(); return this; }
/* 31822 */       public boolean hasIMEI() { return ((this.bitField0_ & 0x2) != 0); }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public String getIMEI() {
/* 31829 */         Object ref = this.iMEI_;
/* 31830 */         if (!(ref instanceof String)) {
/* 31831 */           ByteString bs = (ByteString)ref;
/*       */           
/* 31833 */           String s = bs.toStringUtf8();
/* 31834 */           if (bs.isValidUtf8()) {
/* 31835 */             this.iMEI_ = s;
/*       */           }
/* 31837 */           return s;
/*       */         } 
/* 31839 */         return (String)ref;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public ByteString getIMEIBytes() {
/* 31848 */         Object ref = this.iMEI_;
/* 31849 */         if (ref instanceof String) {
/*       */           
/* 31851 */           ByteString b = ByteString.copyFromUtf8((String)ref);
/*       */           
/* 31853 */           this.iMEI_ = b;
/* 31854 */           return b;
/*       */         } 
/* 31856 */         return (ByteString)ref;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIMEI(String value) {
/* 31866 */         if (value == null) {
/* 31867 */           throw new NullPointerException();
/*       */         }
/* 31869 */         this.bitField0_ |= 0x2;
/* 31870 */         this.iMEI_ = value;
/* 31871 */         onChanged();
/* 31872 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearIMEI() {
/* 31879 */         this.bitField0_ &= 0xFFFFFFFD;
/* 31880 */         this.iMEI_ = StarLinkMessage.mUnitIDChanged.getDefaultInstance().getIMEI();
/* 31881 */         onChanged();
/* 31882 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIMEIBytes(ByteString value) {
/* 31891 */         if (value == null) {
/* 31892 */           throw new NullPointerException();
/*       */         }
/* 31894 */         this.bitField0_ |= 0x2;
/* 31895 */         this.iMEI_ = value;
/* 31896 */         onChanged();
/* 31897 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasPreviousSetting() {
/* 31907 */         return ((this.bitField0_ & 0x4) != 0);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getPreviousSetting() {
/* 31915 */         return this.previousSetting_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setPreviousSetting(int value) {
/* 31923 */         this.bitField0_ |= 0x4;
/* 31924 */         this.previousSetting_ = value;
/* 31925 */         onChanged();
/* 31926 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearPreviousSetting() {
/* 31933 */         this.bitField0_ &= 0xFFFFFFFB;
/* 31934 */         this.previousSetting_ = 0;
/* 31935 */         onChanged();
/* 31936 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasNewSetting() {
/* 31946 */         return ((this.bitField0_ & 0x8) != 0);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getNewSetting() {
/* 31954 */         return this.newSetting_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setNewSetting(int value) {
/* 31962 */         this.bitField0_ |= 0x8;
/* 31963 */         this.newSetting_ = value;
/* 31964 */         onChanged();
/* 31965 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearNewSetting() {
/* 31972 */         this.bitField0_ &= 0xFFFFFFF7;
/* 31973 */         this.newSetting_ = 0;
/* 31974 */         onChanged();
/* 31975 */         return this;
/*       */       }
/*       */ 
/*       */       
/*       */       public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
/* 31980 */         return (Builder)super.setUnknownFields(unknownFields);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
/* 31986 */         return (Builder)super.mergeUnknownFields(unknownFields);
/*       */       }
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 31996 */     private static final mUnitIDChanged DEFAULT_INSTANCE = new mUnitIDChanged();
/*       */ 
/*       */     
/*       */     public static mUnitIDChanged getDefaultInstance() {
/* 32000 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */     
/*       */     @Deprecated
/* 32004 */     public static final Parser<mUnitIDChanged> PARSER = (Parser<mUnitIDChanged>)new AbstractParser<mUnitIDChanged>()
/*       */       {
/*       */ 
/*       */         
/*       */         public StarLinkMessage.mUnitIDChanged parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException
/*       */         {
/* 32010 */           return new StarLinkMessage.mUnitIDChanged(input, extensionRegistry);
/*       */         }
/*       */       };
/*       */     
/*       */     public static Parser<mUnitIDChanged> parser() {
/* 32015 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public Parser<mUnitIDChanged> getParserForType() {
/* 32020 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public mUnitIDChanged getDefaultInstanceForType() {
/* 32025 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */   }
/*       */ 
/*       */ 
/*       */   
/*       */   public static interface mGenDeviceMsgOrBuilder
/*       */     extends MessageOrBuilder
/*       */   {
/*       */     boolean hasDeviceID();
/*       */ 
/*       */ 
/*       */     
/*       */     int getDeviceID();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasDataType();
/*       */ 
/*       */ 
/*       */     
/*       */     int getDataType();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasData();
/*       */ 
/*       */ 
/*       */     
/*       */     String getData();
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getDataBytes();
/*       */   }
/*       */ 
/*       */   
/*       */   public static final class mGenDeviceMsg
/*       */     extends GeneratedMessageV3
/*       */     implements mGenDeviceMsgOrBuilder
/*       */   {
/*       */     private static final long serialVersionUID = 0L;
/*       */     
/*       */     private int bitField0_;
/*       */     
/*       */     public static final int DEVICEID_FIELD_NUMBER = 1;
/*       */     
/*       */     private int deviceID_;
/*       */     
/*       */     public static final int DATATYPE_FIELD_NUMBER = 2;
/*       */     
/*       */     private int dataType_;
/*       */     
/*       */     public static final int DATA_FIELD_NUMBER = 3;
/*       */     
/*       */     private volatile Object data_;
/*       */     
/*       */     private byte memoizedIsInitialized;
/*       */ 
/*       */     
/*       */     private mGenDeviceMsg(GeneratedMessageV3.Builder<?> builder)
/*       */     {
/* 32087 */       super(builder);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/* 32259 */       this.memoizedIsInitialized = -1; } private mGenDeviceMsg() { this.memoizedIsInitialized = -1; this.data_ = ""; } protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) { return new mGenDeviceMsg(); } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private mGenDeviceMsg(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this(); if (extensionRegistry == null) throw new NullPointerException();  int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { ByteString bs; int tag = input.readTag(); switch (tag) { case 0: done = true; continue;case 8: this.bitField0_ |= 0x1; this.deviceID_ = input.readUInt32(); continue;case 16: this.bitField0_ |= 0x2; this.dataType_ = input.readUInt32(); continue;case 26: bs = input.readBytes(); this.bitField0_ |= 0x4; this.data_ = bs; continue; }  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this); } finally { this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_mGenDeviceMsg_descriptor; } protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() { return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_mGenDeviceMsg_fieldAccessorTable.ensureFieldAccessorsInitialized(mGenDeviceMsg.class, Builder.class); } public boolean hasDeviceID() { return ((this.bitField0_ & 0x1) != 0); } public int getDeviceID() { return this.deviceID_; } public boolean hasDataType() { return ((this.bitField0_ & 0x2) != 0); } public int getDataType() { return this.dataType_; } public boolean hasData() { return ((this.bitField0_ & 0x4) != 0); }
/*       */     public String getData() { Object ref = this.data_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.data_ = s;  return s; }
/*       */     public ByteString getDataBytes() { Object ref = this.data_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.data_ = b; return b; }  return (ByteString)ref; }
/* 32262 */     public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized;
/* 32263 */       if (isInitialized == 1) return true; 
/* 32264 */       if (isInitialized == 0) return false;
/*       */       
/* 32266 */       if (!hasDeviceID()) {
/* 32267 */         this.memoizedIsInitialized = 0;
/* 32268 */         return false;
/*       */       } 
/* 32270 */       if (!hasDataType()) {
/* 32271 */         this.memoizedIsInitialized = 0;
/* 32272 */         return false;
/*       */       } 
/* 32274 */       this.memoizedIsInitialized = 1;
/* 32275 */       return true; }
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/* 32281 */       if ((this.bitField0_ & 0x1) != 0) {
/* 32282 */         output.writeUInt32(1, this.deviceID_);
/*       */       }
/* 32284 */       if ((this.bitField0_ & 0x2) != 0) {
/* 32285 */         output.writeUInt32(2, this.dataType_);
/*       */       }
/* 32287 */       if ((this.bitField0_ & 0x4) != 0) {
/* 32288 */         GeneratedMessageV3.writeString(output, 3, this.data_);
/*       */       }
/* 32290 */       this.unknownFields.writeTo(output);
/*       */     }
/*       */ 
/*       */     
/*       */     public int getSerializedSize() {
/* 32295 */       int size = this.memoizedSize;
/* 32296 */       if (size != -1) return size;
/*       */       
/* 32298 */       size = 0;
/* 32299 */       if ((this.bitField0_ & 0x1) != 0) {
/* 32300 */         size += 
/* 32301 */           CodedOutputStream.computeUInt32Size(1, this.deviceID_);
/*       */       }
/* 32303 */       if ((this.bitField0_ & 0x2) != 0) {
/* 32304 */         size += 
/* 32305 */           CodedOutputStream.computeUInt32Size(2, this.dataType_);
/*       */       }
/* 32307 */       if ((this.bitField0_ & 0x4) != 0) {
/* 32308 */         size += GeneratedMessageV3.computeStringSize(3, this.data_);
/*       */       }
/* 32310 */       size += this.unknownFields.getSerializedSize();
/* 32311 */       this.memoizedSize = size;
/* 32312 */       return size;
/*       */     }
/*       */ 
/*       */     
/*       */     public boolean equals(Object obj) {
/* 32317 */       if (obj == this) {
/* 32318 */         return true;
/*       */       }
/* 32320 */       if (!(obj instanceof mGenDeviceMsg)) {
/* 32321 */         return super.equals(obj);
/*       */       }
/* 32323 */       mGenDeviceMsg other = (mGenDeviceMsg)obj;
/*       */       
/* 32325 */       if (hasDeviceID() != other.hasDeviceID()) return false; 
/* 32326 */       if (hasDeviceID() && 
/* 32327 */         getDeviceID() != other
/* 32328 */         .getDeviceID()) return false;
/*       */       
/* 32330 */       if (hasDataType() != other.hasDataType()) return false; 
/* 32331 */       if (hasDataType() && 
/* 32332 */         getDataType() != other
/* 32333 */         .getDataType()) return false;
/*       */       
/* 32335 */       if (hasData() != other.hasData()) return false; 
/* 32336 */       if (hasData() && 
/*       */         
/* 32338 */         !getData().equals(other.getData())) return false;
/*       */       
/* 32340 */       if (!this.unknownFields.equals(other.unknownFields)) return false; 
/* 32341 */       return true;
/*       */     }
/*       */ 
/*       */     
/*       */     public int hashCode() {
/* 32346 */       if (this.memoizedHashCode != 0) {
/* 32347 */         return this.memoizedHashCode;
/*       */       }
/* 32349 */       int hash = 41;
/* 32350 */       hash = 19 * hash + getDescriptor().hashCode();
/* 32351 */       if (hasDeviceID()) {
/* 32352 */         hash = 37 * hash + 1;
/* 32353 */         hash = 53 * hash + getDeviceID();
/*       */       } 
/* 32355 */       if (hasDataType()) {
/* 32356 */         hash = 37 * hash + 2;
/* 32357 */         hash = 53 * hash + getDataType();
/*       */       } 
/* 32359 */       if (hasData()) {
/* 32360 */         hash = 37 * hash + 3;
/* 32361 */         hash = 53 * hash + getData().hashCode();
/*       */       } 
/* 32363 */       hash = 29 * hash + this.unknownFields.hashCode();
/* 32364 */       this.memoizedHashCode = hash;
/* 32365 */       return hash;
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mGenDeviceMsg parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
/* 32371 */       return (mGenDeviceMsg)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mGenDeviceMsg parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 32377 */       return (mGenDeviceMsg)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static mGenDeviceMsg parseFrom(ByteString data) throws InvalidProtocolBufferException {
/* 32382 */       return (mGenDeviceMsg)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mGenDeviceMsg parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 32388 */       return (mGenDeviceMsg)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static mGenDeviceMsg parseFrom(byte[] data) throws InvalidProtocolBufferException {
/* 32392 */       return (mGenDeviceMsg)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mGenDeviceMsg parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 32398 */       return (mGenDeviceMsg)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static mGenDeviceMsg parseFrom(InputStream input) throws IOException {
/* 32402 */       return 
/* 32403 */         (mGenDeviceMsg)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mGenDeviceMsg parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 32409 */       return 
/* 32410 */         (mGenDeviceMsg)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static mGenDeviceMsg parseDelimitedFrom(InputStream input) throws IOException {
/* 32414 */       return 
/* 32415 */         (mGenDeviceMsg)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mGenDeviceMsg parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 32421 */       return 
/* 32422 */         (mGenDeviceMsg)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static mGenDeviceMsg parseFrom(CodedInputStream input) throws IOException {
/* 32427 */       return 
/* 32428 */         (mGenDeviceMsg)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mGenDeviceMsg parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 32434 */       return 
/* 32435 */         (mGenDeviceMsg)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public Builder newBuilderForType() {
/* 32439 */       return newBuilder();
/*       */     } public static Builder newBuilder() {
/* 32441 */       return DEFAULT_INSTANCE.toBuilder();
/*       */     }
/*       */     public static Builder newBuilder(mGenDeviceMsg prototype) {
/* 32444 */       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
/*       */     }
/*       */     
/*       */     public Builder toBuilder() {
/* 32448 */       return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder())
/* 32449 */         .mergeFrom(this);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
/* 32455 */       Builder builder = new Builder(parent);
/* 32456 */       return builder;
/*       */     }
/*       */ 
/*       */     
/*       */     public static final class Builder
/*       */       extends GeneratedMessageV3.Builder<Builder>
/*       */       implements StarLinkMessage.mGenDeviceMsgOrBuilder
/*       */     {
/*       */       private int bitField0_;
/*       */       
/*       */       private int deviceID_;
/*       */       private int dataType_;
/*       */       private Object data_;
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/* 32471 */         return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_mGenDeviceMsg_descriptor;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
/* 32477 */         return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_mGenDeviceMsg_fieldAccessorTable
/* 32478 */           .ensureFieldAccessorsInitialized(StarLinkMessage.mGenDeviceMsg.class, Builder.class);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private Builder()
/*       */       {
/* 32720 */         this.data_ = ""; maybeForceBuilderInitialization(); } private Builder(GeneratedMessageV3.BuilderParent parent) { super(parent); this.data_ = ""; maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (StarLinkMessage.mGenDeviceMsg.alwaysUseFieldBuilders); } public Builder clear() { super.clear(); this.deviceID_ = 0; this.bitField0_ &= 0xFFFFFFFE; this.dataType_ = 0; this.bitField0_ &= 0xFFFFFFFD; this.data_ = ""; this.bitField0_ &= 0xFFFFFFFB; return this; } public Descriptors.Descriptor getDescriptorForType() { return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_mGenDeviceMsg_descriptor; } public StarLinkMessage.mGenDeviceMsg getDefaultInstanceForType() { return StarLinkMessage.mGenDeviceMsg.getDefaultInstance(); } public StarLinkMessage.mGenDeviceMsg build() { StarLinkMessage.mGenDeviceMsg result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public StarLinkMessage.mGenDeviceMsg buildPartial() { StarLinkMessage.mGenDeviceMsg result = new StarLinkMessage.mGenDeviceMsg(this); int from_bitField0_ = this.bitField0_; int to_bitField0_ = 0; if ((from_bitField0_ & 0x1) != 0) { result.deviceID_ = this.deviceID_; to_bitField0_ |= 0x1; }  if ((from_bitField0_ & 0x2) != 0) { result.dataType_ = this.dataType_; to_bitField0_ |= 0x2; }  if ((from_bitField0_ & 0x4) != 0) to_bitField0_ |= 0x4;  result.data_ = this.data_; result.bitField0_ = to_bitField0_; onBuilt(); return result; } public Builder clone() { return (Builder)super.clone(); } public Builder setField(Descriptors.FieldDescriptor field, Object value) { return (Builder)super.setField(field, value); } public Builder clearField(Descriptors.FieldDescriptor field) { return (Builder)super.clearField(field); } public Builder clearOneof(Descriptors.OneofDescriptor oneof) { return (Builder)super.clearOneof(oneof); } public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) { return (Builder)super.setRepeatedField(field, index, value); } public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) { return (Builder)super.addRepeatedField(field, value); } public Builder mergeFrom(Message other) { if (other instanceof StarLinkMessage.mGenDeviceMsg) return mergeFrom((StarLinkMessage.mGenDeviceMsg)other);  super.mergeFrom(other); return this; } public Builder mergeFrom(StarLinkMessage.mGenDeviceMsg other) { if (other == StarLinkMessage.mGenDeviceMsg.getDefaultInstance()) return this;  if (other.hasDeviceID()) setDeviceID(other.getDeviceID());  if (other.hasDataType()) setDataType(other.getDataType());  if (other.hasData()) { this.bitField0_ |= 0x4; this.data_ = other.data_; onChanged(); }  mergeUnknownFields(other.unknownFields); onChanged(); return this; } public final boolean isInitialized() { if (!hasDeviceID()) return false;  if (!hasDataType()) return false;  return true; } public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { StarLinkMessage.mGenDeviceMsg parsedMessage = null; try { parsedMessage = (StarLinkMessage.mGenDeviceMsg)StarLinkMessage.mGenDeviceMsg.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (StarLinkMessage.mGenDeviceMsg)e.getUnfinishedMessage(); throw e.unwrapIOException(); } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; } public boolean hasDeviceID() { return ((this.bitField0_ & 0x1) != 0); } public int getDeviceID() { return this.deviceID_; } public Builder setDeviceID(int value) { this.bitField0_ |= 0x1; this.deviceID_ = value; onChanged(); return this; }
/*       */       public Builder clearDeviceID() { this.bitField0_ &= 0xFFFFFFFE; this.deviceID_ = 0; onChanged(); return this; }
/*       */       public boolean hasDataType() { return ((this.bitField0_ & 0x2) != 0); }
/*       */       public int getDataType() { return this.dataType_; }
/*       */       public Builder setDataType(int value) { this.bitField0_ |= 0x2; this.dataType_ = value; onChanged(); return this; }
/*       */       public Builder clearDataType() { this.bitField0_ &= 0xFFFFFFFD; this.dataType_ = 0; onChanged(); return this; }
/* 32726 */       public boolean hasData() { return ((this.bitField0_ & 0x4) != 0); }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public String getData() {
/* 32733 */         Object ref = this.data_;
/* 32734 */         if (!(ref instanceof String)) {
/* 32735 */           ByteString bs = (ByteString)ref;
/*       */           
/* 32737 */           String s = bs.toStringUtf8();
/* 32738 */           if (bs.isValidUtf8()) {
/* 32739 */             this.data_ = s;
/*       */           }
/* 32741 */           return s;
/*       */         } 
/* 32743 */         return (String)ref;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public ByteString getDataBytes() {
/* 32752 */         Object ref = this.data_;
/* 32753 */         if (ref instanceof String) {
/*       */           
/* 32755 */           ByteString b = ByteString.copyFromUtf8((String)ref);
/*       */           
/* 32757 */           this.data_ = b;
/* 32758 */           return b;
/*       */         } 
/* 32760 */         return (ByteString)ref;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setData(String value) {
/* 32770 */         if (value == null) {
/* 32771 */           throw new NullPointerException();
/*       */         }
/* 32773 */         this.bitField0_ |= 0x4;
/* 32774 */         this.data_ = value;
/* 32775 */         onChanged();
/* 32776 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearData() {
/* 32783 */         this.bitField0_ &= 0xFFFFFFFB;
/* 32784 */         this.data_ = StarLinkMessage.mGenDeviceMsg.getDefaultInstance().getData();
/* 32785 */         onChanged();
/* 32786 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setDataBytes(ByteString value) {
/* 32795 */         if (value == null) {
/* 32796 */           throw new NullPointerException();
/*       */         }
/* 32798 */         this.bitField0_ |= 0x4;
/* 32799 */         this.data_ = value;
/* 32800 */         onChanged();
/* 32801 */         return this;
/*       */       }
/*       */ 
/*       */       
/*       */       public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
/* 32806 */         return (Builder)super.setUnknownFields(unknownFields);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
/* 32812 */         return (Builder)super.mergeUnknownFields(unknownFields);
/*       */       }
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 32822 */     private static final mGenDeviceMsg DEFAULT_INSTANCE = new mGenDeviceMsg();
/*       */ 
/*       */     
/*       */     public static mGenDeviceMsg getDefaultInstance() {
/* 32826 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */     
/*       */     @Deprecated
/* 32830 */     public static final Parser<mGenDeviceMsg> PARSER = (Parser<mGenDeviceMsg>)new AbstractParser<mGenDeviceMsg>()
/*       */       {
/*       */ 
/*       */         
/*       */         public StarLinkMessage.mGenDeviceMsg parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException
/*       */         {
/* 32836 */           return new StarLinkMessage.mGenDeviceMsg(input, extensionRegistry);
/*       */         }
/*       */       };
/*       */     
/*       */     public static Parser<mGenDeviceMsg> parser() {
/* 32841 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public Parser<mGenDeviceMsg> getParserForType() {
/* 32846 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public mGenDeviceMsg getDefaultInstanceForType() {
/* 32851 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */   }
/*       */ 
/*       */ 
/*       */   
/*       */   public static interface mGenDeviceFWOrBuilder
/*       */     extends MessageOrBuilder
/*       */   {
/*       */     boolean hasBlockRequest();
/*       */ 
/*       */ 
/*       */     
/*       */     int getBlockRequest();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasStatus();
/*       */ 
/*       */ 
/*       */     
/*       */     int getStatus();
/*       */ 
/*       */     
/*       */     boolean hasMaxBlocks();
/*       */ 
/*       */     
/*       */     int getMaxBlocks();
/*       */   }
/*       */ 
/*       */   
/*       */   public static final class mGenDeviceFW
/*       */     extends GeneratedMessageV3
/*       */     implements mGenDeviceFWOrBuilder
/*       */   {
/*       */     private static final long serialVersionUID = 0L;
/*       */     
/*       */     private int bitField0_;
/*       */     
/*       */     public static final int BLOCKREQUEST_FIELD_NUMBER = 1;
/*       */     
/*       */     private int blockRequest_;
/*       */     
/*       */     public static final int STATUS_FIELD_NUMBER = 2;
/*       */     
/*       */     private int status_;
/*       */     
/*       */     public static final int MAXBLOCKS_FIELD_NUMBER = 3;
/*       */     
/*       */     private int maxBlocks_;
/*       */     
/*       */     private byte memoizedIsInitialized;
/*       */ 
/*       */     
/*       */     private mGenDeviceFW(GeneratedMessageV3.Builder<?> builder)
/*       */     {
/* 32907 */       super(builder);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/* 33048 */       this.memoizedIsInitialized = -1; } private mGenDeviceFW() { this.memoizedIsInitialized = -1; } protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) { return new mGenDeviceFW(); } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private mGenDeviceFW(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this(); if (extensionRegistry == null) throw new NullPointerException();  int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { int tag = input.readTag(); switch (tag) { case 0: done = true; continue;case 8: this.bitField0_ |= 0x1; this.blockRequest_ = input.readUInt32(); continue;case 16: this.bitField0_ |= 0x2; this.status_ = input.readUInt32(); continue;case 24: this.bitField0_ |= 0x4; this.maxBlocks_ = input.readUInt32(); continue; }  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this); } finally { this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_mGenDeviceFW_descriptor; } protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() { return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_mGenDeviceFW_fieldAccessorTable.ensureFieldAccessorsInitialized(mGenDeviceFW.class, Builder.class); } public boolean hasBlockRequest() { return ((this.bitField0_ & 0x1) != 0); } public int getBlockRequest() { return this.blockRequest_; } public boolean hasStatus() { return ((this.bitField0_ & 0x2) != 0); } public int getStatus() { return this.status_; }
/*       */     public boolean hasMaxBlocks() { return ((this.bitField0_ & 0x4) != 0); }
/*       */     public int getMaxBlocks() { return this.maxBlocks_; }
/* 33051 */     public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized;
/* 33052 */       if (isInitialized == 1) return true; 
/* 33053 */       if (isInitialized == 0) return false;
/*       */       
/* 33055 */       this.memoizedIsInitialized = 1;
/* 33056 */       return true; }
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/* 33062 */       if ((this.bitField0_ & 0x1) != 0) {
/* 33063 */         output.writeUInt32(1, this.blockRequest_);
/*       */       }
/* 33065 */       if ((this.bitField0_ & 0x2) != 0) {
/* 33066 */         output.writeUInt32(2, this.status_);
/*       */       }
/* 33068 */       if ((this.bitField0_ & 0x4) != 0) {
/* 33069 */         output.writeUInt32(3, this.maxBlocks_);
/*       */       }
/* 33071 */       this.unknownFields.writeTo(output);
/*       */     }
/*       */ 
/*       */     
/*       */     public int getSerializedSize() {
/* 33076 */       int size = this.memoizedSize;
/* 33077 */       if (size != -1) return size;
/*       */       
/* 33079 */       size = 0;
/* 33080 */       if ((this.bitField0_ & 0x1) != 0) {
/* 33081 */         size += 
/* 33082 */           CodedOutputStream.computeUInt32Size(1, this.blockRequest_);
/*       */       }
/* 33084 */       if ((this.bitField0_ & 0x2) != 0) {
/* 33085 */         size += 
/* 33086 */           CodedOutputStream.computeUInt32Size(2, this.status_);
/*       */       }
/* 33088 */       if ((this.bitField0_ & 0x4) != 0) {
/* 33089 */         size += 
/* 33090 */           CodedOutputStream.computeUInt32Size(3, this.maxBlocks_);
/*       */       }
/* 33092 */       size += this.unknownFields.getSerializedSize();
/* 33093 */       this.memoizedSize = size;
/* 33094 */       return size;
/*       */     }
/*       */ 
/*       */     
/*       */     public boolean equals(Object obj) {
/* 33099 */       if (obj == this) {
/* 33100 */         return true;
/*       */       }
/* 33102 */       if (!(obj instanceof mGenDeviceFW)) {
/* 33103 */         return super.equals(obj);
/*       */       }
/* 33105 */       mGenDeviceFW other = (mGenDeviceFW)obj;
/*       */       
/* 33107 */       if (hasBlockRequest() != other.hasBlockRequest()) return false; 
/* 33108 */       if (hasBlockRequest() && 
/* 33109 */         getBlockRequest() != other
/* 33110 */         .getBlockRequest()) return false;
/*       */       
/* 33112 */       if (hasStatus() != other.hasStatus()) return false; 
/* 33113 */       if (hasStatus() && 
/* 33114 */         getStatus() != other
/* 33115 */         .getStatus()) return false;
/*       */       
/* 33117 */       if (hasMaxBlocks() != other.hasMaxBlocks()) return false; 
/* 33118 */       if (hasMaxBlocks() && 
/* 33119 */         getMaxBlocks() != other
/* 33120 */         .getMaxBlocks()) return false;
/*       */       
/* 33122 */       if (!this.unknownFields.equals(other.unknownFields)) return false; 
/* 33123 */       return true;
/*       */     }
/*       */ 
/*       */     
/*       */     public int hashCode() {
/* 33128 */       if (this.memoizedHashCode != 0) {
/* 33129 */         return this.memoizedHashCode;
/*       */       }
/* 33131 */       int hash = 41;
/* 33132 */       hash = 19 * hash + getDescriptor().hashCode();
/* 33133 */       if (hasBlockRequest()) {
/* 33134 */         hash = 37 * hash + 1;
/* 33135 */         hash = 53 * hash + getBlockRequest();
/*       */       } 
/* 33137 */       if (hasStatus()) {
/* 33138 */         hash = 37 * hash + 2;
/* 33139 */         hash = 53 * hash + getStatus();
/*       */       } 
/* 33141 */       if (hasMaxBlocks()) {
/* 33142 */         hash = 37 * hash + 3;
/* 33143 */         hash = 53 * hash + getMaxBlocks();
/*       */       } 
/* 33145 */       hash = 29 * hash + this.unknownFields.hashCode();
/* 33146 */       this.memoizedHashCode = hash;
/* 33147 */       return hash;
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mGenDeviceFW parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
/* 33153 */       return (mGenDeviceFW)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mGenDeviceFW parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 33159 */       return (mGenDeviceFW)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static mGenDeviceFW parseFrom(ByteString data) throws InvalidProtocolBufferException {
/* 33164 */       return (mGenDeviceFW)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mGenDeviceFW parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 33170 */       return (mGenDeviceFW)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static mGenDeviceFW parseFrom(byte[] data) throws InvalidProtocolBufferException {
/* 33174 */       return (mGenDeviceFW)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mGenDeviceFW parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 33180 */       return (mGenDeviceFW)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static mGenDeviceFW parseFrom(InputStream input) throws IOException {
/* 33184 */       return 
/* 33185 */         (mGenDeviceFW)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mGenDeviceFW parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 33191 */       return 
/* 33192 */         (mGenDeviceFW)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static mGenDeviceFW parseDelimitedFrom(InputStream input) throws IOException {
/* 33196 */       return 
/* 33197 */         (mGenDeviceFW)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mGenDeviceFW parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 33203 */       return 
/* 33204 */         (mGenDeviceFW)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static mGenDeviceFW parseFrom(CodedInputStream input) throws IOException {
/* 33209 */       return 
/* 33210 */         (mGenDeviceFW)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mGenDeviceFW parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 33216 */       return 
/* 33217 */         (mGenDeviceFW)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public Builder newBuilderForType() {
/* 33221 */       return newBuilder();
/*       */     } public static Builder newBuilder() {
/* 33223 */       return DEFAULT_INSTANCE.toBuilder();
/*       */     }
/*       */     public static Builder newBuilder(mGenDeviceFW prototype) {
/* 33226 */       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
/*       */     }
/*       */     
/*       */     public Builder toBuilder() {
/* 33230 */       return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder())
/* 33231 */         .mergeFrom(this);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
/* 33237 */       Builder builder = new Builder(parent);
/* 33238 */       return builder;
/*       */     }
/*       */ 
/*       */     
/*       */     public static final class Builder
/*       */       extends GeneratedMessageV3.Builder<Builder>
/*       */       implements StarLinkMessage.mGenDeviceFWOrBuilder
/*       */     {
/*       */       private int bitField0_;
/*       */       
/*       */       private int blockRequest_;
/*       */       private int status_;
/*       */       private int maxBlocks_;
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/* 33253 */         return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_mGenDeviceFW_descriptor;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
/* 33259 */         return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_mGenDeviceFW_fieldAccessorTable
/* 33260 */           .ensureFieldAccessorsInitialized(StarLinkMessage.mGenDeviceFW.class, Builder.class);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       private Builder() {
/* 33266 */         maybeForceBuilderInitialization();
/*       */       }
/*       */ 
/*       */       
/*       */       private Builder(GeneratedMessageV3.BuilderParent parent) {
/* 33271 */         super(parent);
/* 33272 */         maybeForceBuilderInitialization();
/*       */       }
/*       */       
/*       */       private void maybeForceBuilderInitialization() {
/* 33276 */         if (StarLinkMessage.mGenDeviceFW.alwaysUseFieldBuilders);
/*       */       }
/*       */ 
/*       */       
/*       */       public Builder clear() {
/* 33281 */         super.clear();
/* 33282 */         this.blockRequest_ = 0;
/* 33283 */         this.bitField0_ &= 0xFFFFFFFE;
/* 33284 */         this.status_ = 0;
/* 33285 */         this.bitField0_ &= 0xFFFFFFFD;
/* 33286 */         this.maxBlocks_ = 0;
/* 33287 */         this.bitField0_ &= 0xFFFFFFFB;
/* 33288 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Descriptors.Descriptor getDescriptorForType() {
/* 33294 */         return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_mGenDeviceFW_descriptor;
/*       */       }
/*       */ 
/*       */       
/*       */       public StarLinkMessage.mGenDeviceFW getDefaultInstanceForType() {
/* 33299 */         return StarLinkMessage.mGenDeviceFW.getDefaultInstance();
/*       */       }
/*       */ 
/*       */       
/*       */       public StarLinkMessage.mGenDeviceFW build() {
/* 33304 */         StarLinkMessage.mGenDeviceFW result = buildPartial();
/* 33305 */         if (!result.isInitialized()) {
/* 33306 */           throw newUninitializedMessageException(result);
/*       */         }
/* 33308 */         return result;
/*       */       }
/*       */ 
/*       */       
/*       */       public StarLinkMessage.mGenDeviceFW buildPartial() {
/* 33313 */         StarLinkMessage.mGenDeviceFW result = new StarLinkMessage.mGenDeviceFW(this);
/* 33314 */         int from_bitField0_ = this.bitField0_;
/* 33315 */         int to_bitField0_ = 0;
/* 33316 */         if ((from_bitField0_ & 0x1) != 0) {
/* 33317 */           result.blockRequest_ = this.blockRequest_;
/* 33318 */           to_bitField0_ |= 0x1;
/*       */         } 
/* 33320 */         if ((from_bitField0_ & 0x2) != 0) {
/* 33321 */           result.status_ = this.status_;
/* 33322 */           to_bitField0_ |= 0x2;
/*       */         } 
/* 33324 */         if ((from_bitField0_ & 0x4) != 0) {
/* 33325 */           result.maxBlocks_ = this.maxBlocks_;
/* 33326 */           to_bitField0_ |= 0x4;
/*       */         } 
/* 33328 */         result.bitField0_ = to_bitField0_;
/* 33329 */         onBuilt();
/* 33330 */         return result;
/*       */       }
/*       */ 
/*       */       
/*       */       public Builder clone() {
/* 33335 */         return (Builder)super.clone();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setField(Descriptors.FieldDescriptor field, Object value) {
/* 33341 */         return (Builder)super.setField(field, value);
/*       */       }
/*       */ 
/*       */       
/*       */       public Builder clearField(Descriptors.FieldDescriptor field) {
/* 33346 */         return (Builder)super.clearField(field);
/*       */       }
/*       */ 
/*       */       
/*       */       public Builder clearOneof(Descriptors.OneofDescriptor oneof) {
/* 33351 */         return (Builder)super.clearOneof(oneof);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
/* 33357 */         return (Builder)super.setRepeatedField(field, index, value);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
/* 33363 */         return (Builder)super.addRepeatedField(field, value);
/*       */       }
/*       */       
/*       */       public Builder mergeFrom(Message other) {
/* 33367 */         if (other instanceof StarLinkMessage.mGenDeviceFW) {
/* 33368 */           return mergeFrom((StarLinkMessage.mGenDeviceFW)other);
/*       */         }
/* 33370 */         super.mergeFrom(other);
/* 33371 */         return this;
/*       */       }
/*       */ 
/*       */       
/*       */       public Builder mergeFrom(StarLinkMessage.mGenDeviceFW other) {
/* 33376 */         if (other == StarLinkMessage.mGenDeviceFW.getDefaultInstance()) return this; 
/* 33377 */         if (other.hasBlockRequest()) {
/* 33378 */           setBlockRequest(other.getBlockRequest());
/*       */         }
/* 33380 */         if (other.hasStatus()) {
/* 33381 */           setStatus(other.getStatus());
/*       */         }
/* 33383 */         if (other.hasMaxBlocks()) {
/* 33384 */           setMaxBlocks(other.getMaxBlocks());
/*       */         }
/* 33386 */         mergeUnknownFields(other.unknownFields);
/* 33387 */         onChanged();
/* 33388 */         return this;
/*       */       }
/*       */ 
/*       */       
/*       */       public final boolean isInitialized() {
/* 33393 */         return true;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 33401 */         StarLinkMessage.mGenDeviceFW parsedMessage = null;
/*       */         try {
/* 33403 */           parsedMessage = (StarLinkMessage.mGenDeviceFW)StarLinkMessage.mGenDeviceFW.PARSER.parsePartialFrom(input, extensionRegistry);
/* 33404 */         } catch (InvalidProtocolBufferException e) {
/* 33405 */           parsedMessage = (StarLinkMessage.mGenDeviceFW)e.getUnfinishedMessage();
/* 33406 */           throw e.unwrapIOException();
/*       */         } finally {
/* 33408 */           if (parsedMessage != null) {
/* 33409 */             mergeFrom(parsedMessage);
/*       */           }
/*       */         } 
/* 33412 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasBlockRequest() {
/* 33423 */         return ((this.bitField0_ & 0x1) != 0);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getBlockRequest() {
/* 33431 */         return this.blockRequest_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setBlockRequest(int value) {
/* 33439 */         this.bitField0_ |= 0x1;
/* 33440 */         this.blockRequest_ = value;
/* 33441 */         onChanged();
/* 33442 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearBlockRequest() {
/* 33449 */         this.bitField0_ &= 0xFFFFFFFE;
/* 33450 */         this.blockRequest_ = 0;
/* 33451 */         onChanged();
/* 33452 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasStatus() {
/* 33462 */         return ((this.bitField0_ & 0x2) != 0);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getStatus() {
/* 33470 */         return this.status_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setStatus(int value) {
/* 33478 */         this.bitField0_ |= 0x2;
/* 33479 */         this.status_ = value;
/* 33480 */         onChanged();
/* 33481 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearStatus() {
/* 33488 */         this.bitField0_ &= 0xFFFFFFFD;
/* 33489 */         this.status_ = 0;
/* 33490 */         onChanged();
/* 33491 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasMaxBlocks() {
/* 33501 */         return ((this.bitField0_ & 0x4) != 0);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getMaxBlocks() {
/* 33509 */         return this.maxBlocks_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setMaxBlocks(int value) {
/* 33517 */         this.bitField0_ |= 0x4;
/* 33518 */         this.maxBlocks_ = value;
/* 33519 */         onChanged();
/* 33520 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearMaxBlocks() {
/* 33527 */         this.bitField0_ &= 0xFFFFFFFB;
/* 33528 */         this.maxBlocks_ = 0;
/* 33529 */         onChanged();
/* 33530 */         return this;
/*       */       }
/*       */ 
/*       */       
/*       */       public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
/* 33535 */         return (Builder)super.setUnknownFields(unknownFields);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
/* 33541 */         return (Builder)super.mergeUnknownFields(unknownFields);
/*       */       }
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 33551 */     private static final mGenDeviceFW DEFAULT_INSTANCE = new mGenDeviceFW();
/*       */ 
/*       */     
/*       */     public static mGenDeviceFW getDefaultInstance() {
/* 33555 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */     
/*       */     @Deprecated
/* 33559 */     public static final Parser<mGenDeviceFW> PARSER = (Parser<mGenDeviceFW>)new AbstractParser<mGenDeviceFW>()
/*       */       {
/*       */ 
/*       */         
/*       */         public StarLinkMessage.mGenDeviceFW parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException
/*       */         {
/* 33565 */           return new StarLinkMessage.mGenDeviceFW(input, extensionRegistry);
/*       */         }
/*       */       };
/*       */     
/*       */     public static Parser<mGenDeviceFW> parser() {
/* 33570 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public Parser<mGenDeviceFW> getParserForType() {
/* 33575 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public mGenDeviceFW getDefaultInstanceForType() {
/* 33580 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */   }
/*       */ 
/*       */ 
/*       */   
/*       */   public static interface mConfigServerOrBuilder
/*       */     extends MessageOrBuilder
/*       */   {
/*       */     boolean hasSuccess();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean getSuccess();
/*       */   }
/*       */ 
/*       */   
/*       */   public static final class mConfigServer
/*       */     extends GeneratedMessageV3
/*       */     implements mConfigServerOrBuilder
/*       */   {
/*       */     private static final long serialVersionUID = 0L;
/*       */     
/*       */     private int bitField0_;
/*       */     
/*       */     public static final int SUCCESS_FIELD_NUMBER = 1;
/*       */     
/*       */     private boolean success_;
/*       */     
/*       */     private byte memoizedIsInitialized;
/*       */ 
/*       */     
/*       */     private mConfigServer(GeneratedMessageV3.Builder<?> builder)
/*       */     {
/* 33614 */       super(builder);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/* 33707 */       this.memoizedIsInitialized = -1; } private mConfigServer() { this.memoizedIsInitialized = -1; } protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) { return new mConfigServer(); } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private mConfigServer(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this(); if (extensionRegistry == null) throw new NullPointerException();  int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { int tag = input.readTag(); switch (tag) { case 0: done = true; continue;case 8: this.bitField0_ |= 0x1; this.success_ = input.readBool(); continue; }  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this); } finally { this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_mConfigServer_descriptor; } protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() { return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_mConfigServer_fieldAccessorTable.ensureFieldAccessorsInitialized(mConfigServer.class, Builder.class); }
/*       */     public boolean hasSuccess() { return ((this.bitField0_ & 0x1) != 0); }
/*       */     public boolean getSuccess() { return this.success_; }
/* 33710 */     public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized;
/* 33711 */       if (isInitialized == 1) return true; 
/* 33712 */       if (isInitialized == 0) return false;
/*       */       
/* 33714 */       if (!hasSuccess()) {
/* 33715 */         this.memoizedIsInitialized = 0;
/* 33716 */         return false;
/*       */       } 
/* 33718 */       this.memoizedIsInitialized = 1;
/* 33719 */       return true; }
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/* 33725 */       if ((this.bitField0_ & 0x1) != 0) {
/* 33726 */         output.writeBool(1, this.success_);
/*       */       }
/* 33728 */       this.unknownFields.writeTo(output);
/*       */     }
/*       */ 
/*       */     
/*       */     public int getSerializedSize() {
/* 33733 */       int size = this.memoizedSize;
/* 33734 */       if (size != -1) return size;
/*       */       
/* 33736 */       size = 0;
/* 33737 */       if ((this.bitField0_ & 0x1) != 0) {
/* 33738 */         size += 
/* 33739 */           CodedOutputStream.computeBoolSize(1, this.success_);
/*       */       }
/* 33741 */       size += this.unknownFields.getSerializedSize();
/* 33742 */       this.memoizedSize = size;
/* 33743 */       return size;
/*       */     }
/*       */ 
/*       */     
/*       */     public boolean equals(Object obj) {
/* 33748 */       if (obj == this) {
/* 33749 */         return true;
/*       */       }
/* 33751 */       if (!(obj instanceof mConfigServer)) {
/* 33752 */         return super.equals(obj);
/*       */       }
/* 33754 */       mConfigServer other = (mConfigServer)obj;
/*       */       
/* 33756 */       if (hasSuccess() != other.hasSuccess()) return false; 
/* 33757 */       if (hasSuccess() && 
/* 33758 */         getSuccess() != other
/* 33759 */         .getSuccess()) return false;
/*       */       
/* 33761 */       if (!this.unknownFields.equals(other.unknownFields)) return false; 
/* 33762 */       return true;
/*       */     }
/*       */ 
/*       */     
/*       */     public int hashCode() {
/* 33767 */       if (this.memoizedHashCode != 0) {
/* 33768 */         return this.memoizedHashCode;
/*       */       }
/* 33770 */       int hash = 41;
/* 33771 */       hash = 19 * hash + getDescriptor().hashCode();
/* 33772 */       if (hasSuccess()) {
/* 33773 */         hash = 37 * hash + 1;
/* 33774 */         hash = 53 * hash + Internal.hashBoolean(
/* 33775 */             getSuccess());
/*       */       } 
/* 33777 */       hash = 29 * hash + this.unknownFields.hashCode();
/* 33778 */       this.memoizedHashCode = hash;
/* 33779 */       return hash;
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mConfigServer parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
/* 33785 */       return (mConfigServer)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mConfigServer parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 33791 */       return (mConfigServer)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static mConfigServer parseFrom(ByteString data) throws InvalidProtocolBufferException {
/* 33796 */       return (mConfigServer)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mConfigServer parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 33802 */       return (mConfigServer)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static mConfigServer parseFrom(byte[] data) throws InvalidProtocolBufferException {
/* 33806 */       return (mConfigServer)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mConfigServer parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 33812 */       return (mConfigServer)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static mConfigServer parseFrom(InputStream input) throws IOException {
/* 33816 */       return 
/* 33817 */         (mConfigServer)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mConfigServer parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 33823 */       return 
/* 33824 */         (mConfigServer)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static mConfigServer parseDelimitedFrom(InputStream input) throws IOException {
/* 33828 */       return 
/* 33829 */         (mConfigServer)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mConfigServer parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 33835 */       return 
/* 33836 */         (mConfigServer)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static mConfigServer parseFrom(CodedInputStream input) throws IOException {
/* 33841 */       return 
/* 33842 */         (mConfigServer)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mConfigServer parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 33848 */       return 
/* 33849 */         (mConfigServer)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public Builder newBuilderForType() {
/* 33853 */       return newBuilder();
/*       */     } public static Builder newBuilder() {
/* 33855 */       return DEFAULT_INSTANCE.toBuilder();
/*       */     }
/*       */     public static Builder newBuilder(mConfigServer prototype) {
/* 33858 */       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
/*       */     }
/*       */     
/*       */     public Builder toBuilder() {
/* 33862 */       return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder())
/* 33863 */         .mergeFrom(this);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
/* 33869 */       Builder builder = new Builder(parent);
/* 33870 */       return builder;
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static final class Builder
/*       */       extends GeneratedMessageV3.Builder<Builder>
/*       */       implements StarLinkMessage.mConfigServerOrBuilder
/*       */     {
/*       */       private int bitField0_;
/*       */       
/*       */       private boolean success_;
/*       */ 
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/* 33885 */         return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_mConfigServer_descriptor;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
/* 33891 */         return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_mConfigServer_fieldAccessorTable
/* 33892 */           .ensureFieldAccessorsInitialized(StarLinkMessage.mConfigServer.class, Builder.class);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       private Builder() {
/* 33898 */         maybeForceBuilderInitialization();
/*       */       }
/*       */ 
/*       */       
/*       */       private Builder(GeneratedMessageV3.BuilderParent parent) {
/* 33903 */         super(parent);
/* 33904 */         maybeForceBuilderInitialization();
/*       */       }
/*       */       
/*       */       private void maybeForceBuilderInitialization() {
/* 33908 */         if (StarLinkMessage.mConfigServer.alwaysUseFieldBuilders);
/*       */       }
/*       */ 
/*       */       
/*       */       public Builder clear() {
/* 33913 */         super.clear();
/* 33914 */         this.success_ = false;
/* 33915 */         this.bitField0_ &= 0xFFFFFFFE;
/* 33916 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Descriptors.Descriptor getDescriptorForType() {
/* 33922 */         return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_mConfigServer_descriptor;
/*       */       }
/*       */ 
/*       */       
/*       */       public StarLinkMessage.mConfigServer getDefaultInstanceForType() {
/* 33927 */         return StarLinkMessage.mConfigServer.getDefaultInstance();
/*       */       }
/*       */ 
/*       */       
/*       */       public StarLinkMessage.mConfigServer build() {
/* 33932 */         StarLinkMessage.mConfigServer result = buildPartial();
/* 33933 */         if (!result.isInitialized()) {
/* 33934 */           throw newUninitializedMessageException(result);
/*       */         }
/* 33936 */         return result;
/*       */       }
/*       */ 
/*       */       
/*       */       public StarLinkMessage.mConfigServer buildPartial() {
/* 33941 */         StarLinkMessage.mConfigServer result = new StarLinkMessage.mConfigServer(this);
/* 33942 */         int from_bitField0_ = this.bitField0_;
/* 33943 */         int to_bitField0_ = 0;
/* 33944 */         if ((from_bitField0_ & 0x1) != 0) {
/* 33945 */           result.success_ = this.success_;
/* 33946 */           to_bitField0_ |= 0x1;
/*       */         } 
/* 33948 */         result.bitField0_ = to_bitField0_;
/* 33949 */         onBuilt();
/* 33950 */         return result;
/*       */       }
/*       */ 
/*       */       
/*       */       public Builder clone() {
/* 33955 */         return (Builder)super.clone();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setField(Descriptors.FieldDescriptor field, Object value) {
/* 33961 */         return (Builder)super.setField(field, value);
/*       */       }
/*       */ 
/*       */       
/*       */       public Builder clearField(Descriptors.FieldDescriptor field) {
/* 33966 */         return (Builder)super.clearField(field);
/*       */       }
/*       */ 
/*       */       
/*       */       public Builder clearOneof(Descriptors.OneofDescriptor oneof) {
/* 33971 */         return (Builder)super.clearOneof(oneof);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
/* 33977 */         return (Builder)super.setRepeatedField(field, index, value);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
/* 33983 */         return (Builder)super.addRepeatedField(field, value);
/*       */       }
/*       */       
/*       */       public Builder mergeFrom(Message other) {
/* 33987 */         if (other instanceof StarLinkMessage.mConfigServer) {
/* 33988 */           return mergeFrom((StarLinkMessage.mConfigServer)other);
/*       */         }
/* 33990 */         super.mergeFrom(other);
/* 33991 */         return this;
/*       */       }
/*       */ 
/*       */       
/*       */       public Builder mergeFrom(StarLinkMessage.mConfigServer other) {
/* 33996 */         if (other == StarLinkMessage.mConfigServer.getDefaultInstance()) return this; 
/* 33997 */         if (other.hasSuccess()) {
/* 33998 */           setSuccess(other.getSuccess());
/*       */         }
/* 34000 */         mergeUnknownFields(other.unknownFields);
/* 34001 */         onChanged();
/* 34002 */         return this;
/*       */       }
/*       */ 
/*       */       
/*       */       public final boolean isInitialized() {
/* 34007 */         if (!hasSuccess()) {
/* 34008 */           return false;
/*       */         }
/* 34010 */         return true;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 34018 */         StarLinkMessage.mConfigServer parsedMessage = null;
/*       */         try {
/* 34020 */           parsedMessage = (StarLinkMessage.mConfigServer)StarLinkMessage.mConfigServer.PARSER.parsePartialFrom(input, extensionRegistry);
/* 34021 */         } catch (InvalidProtocolBufferException e) {
/* 34022 */           parsedMessage = (StarLinkMessage.mConfigServer)e.getUnfinishedMessage();
/* 34023 */           throw e.unwrapIOException();
/*       */         } finally {
/* 34025 */           if (parsedMessage != null) {
/* 34026 */             mergeFrom(parsedMessage);
/*       */           }
/*       */         } 
/* 34029 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasSuccess() {
/* 34040 */         return ((this.bitField0_ & 0x1) != 0);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean getSuccess() {
/* 34048 */         return this.success_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setSuccess(boolean value) {
/* 34056 */         this.bitField0_ |= 0x1;
/* 34057 */         this.success_ = value;
/* 34058 */         onChanged();
/* 34059 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearSuccess() {
/* 34066 */         this.bitField0_ &= 0xFFFFFFFE;
/* 34067 */         this.success_ = false;
/* 34068 */         onChanged();
/* 34069 */         return this;
/*       */       }
/*       */ 
/*       */       
/*       */       public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
/* 34074 */         return (Builder)super.setUnknownFields(unknownFields);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
/* 34080 */         return (Builder)super.mergeUnknownFields(unknownFields);
/*       */       }
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 34090 */     private static final mConfigServer DEFAULT_INSTANCE = new mConfigServer();
/*       */ 
/*       */     
/*       */     public static mConfigServer getDefaultInstance() {
/* 34094 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */     
/*       */     @Deprecated
/* 34098 */     public static final Parser<mConfigServer> PARSER = (Parser<mConfigServer>)new AbstractParser<mConfigServer>()
/*       */       {
/*       */ 
/*       */         
/*       */         public StarLinkMessage.mConfigServer parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException
/*       */         {
/* 34104 */           return new StarLinkMessage.mConfigServer(input, extensionRegistry);
/*       */         }
/*       */       };
/*       */     
/*       */     public static Parser<mConfigServer> parser() {
/* 34109 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public Parser<mConfigServer> getParserForType() {
/* 34114 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public mConfigServer getDefaultInstanceForType() {
/* 34119 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */   }
/*       */ 
/*       */ 
/*       */   
/*       */   public static interface mReadIButtonOrBuilder
/*       */     extends MessageOrBuilder
/*       */   {
/*       */     boolean hasIButtonID();
/*       */ 
/*       */ 
/*       */     
/*       */     String getIButtonID();
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getIButtonIDBytes();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasData();
/*       */ 
/*       */ 
/*       */     
/*       */     String getData();
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getDataBytes();
/*       */   }
/*       */ 
/*       */ 
/*       */   
/*       */   public static final class mReadIButton
/*       */     extends GeneratedMessageV3
/*       */     implements mReadIButtonOrBuilder
/*       */   {
/*       */     private static final long serialVersionUID = 0L;
/*       */ 
/*       */     
/*       */     private int bitField0_;
/*       */ 
/*       */     
/*       */     public static final int IBUTTONID_FIELD_NUMBER = 1;
/*       */     
/*       */     private volatile Object iButtonID_;
/*       */     
/*       */     public static final int DATA_FIELD_NUMBER = 2;
/*       */     
/*       */     private volatile Object data_;
/*       */     
/*       */     private byte memoizedIsInitialized;
/*       */ 
/*       */     
/*       */     private mReadIButton(GeneratedMessageV3.Builder<?> builder)
/*       */     {
/* 34176 */       super(builder);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/* 34355 */       this.memoizedIsInitialized = -1; } private mReadIButton() { this.memoizedIsInitialized = -1; this.iButtonID_ = ""; this.data_ = ""; } protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) { return new mReadIButton(); } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private mReadIButton(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this(); if (extensionRegistry == null) throw new NullPointerException();  int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { ByteString bs; int tag = input.readTag(); switch (tag) { case 0: done = true; continue;case 10: bs = input.readBytes(); this.bitField0_ |= 0x1; this.iButtonID_ = bs; continue;case 18: bs = input.readBytes(); this.bitField0_ |= 0x2; this.data_ = bs; continue; }  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this); } finally { this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_mReadIButton_descriptor; } protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() { return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_mReadIButton_fieldAccessorTable.ensureFieldAccessorsInitialized(mReadIButton.class, Builder.class); } public boolean hasIButtonID() { return ((this.bitField0_ & 0x1) != 0); } public String getIButtonID() { Object ref = this.iButtonID_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.iButtonID_ = s;  return s; } public ByteString getIButtonIDBytes() { Object ref = this.iButtonID_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.iButtonID_ = b; return b; }  return (ByteString)ref; } public boolean hasData() { return ((this.bitField0_ & 0x2) != 0); }
/*       */     public String getData() { Object ref = this.data_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.data_ = s;  return s; }
/*       */     public ByteString getDataBytes() { Object ref = this.data_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.data_ = b; return b; }  return (ByteString)ref; }
/* 34358 */     public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized;
/* 34359 */       if (isInitialized == 1) return true; 
/* 34360 */       if (isInitialized == 0) return false;
/*       */       
/* 34362 */       if (!hasIButtonID()) {
/* 34363 */         this.memoizedIsInitialized = 0;
/* 34364 */         return false;
/*       */       } 
/* 34366 */       this.memoizedIsInitialized = 1;
/* 34367 */       return true; }
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/* 34373 */       if ((this.bitField0_ & 0x1) != 0) {
/* 34374 */         GeneratedMessageV3.writeString(output, 1, this.iButtonID_);
/*       */       }
/* 34376 */       if ((this.bitField0_ & 0x2) != 0) {
/* 34377 */         GeneratedMessageV3.writeString(output, 2, this.data_);
/*       */       }
/* 34379 */       this.unknownFields.writeTo(output);
/*       */     }
/*       */ 
/*       */     
/*       */     public int getSerializedSize() {
/* 34384 */       int size = this.memoizedSize;
/* 34385 */       if (size != -1) return size;
/*       */       
/* 34387 */       size = 0;
/* 34388 */       if ((this.bitField0_ & 0x1) != 0) {
/* 34389 */         size += GeneratedMessageV3.computeStringSize(1, this.iButtonID_);
/*       */       }
/* 34391 */       if ((this.bitField0_ & 0x2) != 0) {
/* 34392 */         size += GeneratedMessageV3.computeStringSize(2, this.data_);
/*       */       }
/* 34394 */       size += this.unknownFields.getSerializedSize();
/* 34395 */       this.memoizedSize = size;
/* 34396 */       return size;
/*       */     }
/*       */ 
/*       */     
/*       */     public boolean equals(Object obj) {
/* 34401 */       if (obj == this) {
/* 34402 */         return true;
/*       */       }
/* 34404 */       if (!(obj instanceof mReadIButton)) {
/* 34405 */         return super.equals(obj);
/*       */       }
/* 34407 */       mReadIButton other = (mReadIButton)obj;
/*       */       
/* 34409 */       if (hasIButtonID() != other.hasIButtonID()) return false; 
/* 34410 */       if (hasIButtonID() && 
/*       */         
/* 34412 */         !getIButtonID().equals(other.getIButtonID())) return false;
/*       */       
/* 34414 */       if (hasData() != other.hasData()) return false; 
/* 34415 */       if (hasData() && 
/*       */         
/* 34417 */         !getData().equals(other.getData())) return false;
/*       */       
/* 34419 */       if (!this.unknownFields.equals(other.unknownFields)) return false; 
/* 34420 */       return true;
/*       */     }
/*       */ 
/*       */     
/*       */     public int hashCode() {
/* 34425 */       if (this.memoizedHashCode != 0) {
/* 34426 */         return this.memoizedHashCode;
/*       */       }
/* 34428 */       int hash = 41;
/* 34429 */       hash = 19 * hash + getDescriptor().hashCode();
/* 34430 */       if (hasIButtonID()) {
/* 34431 */         hash = 37 * hash + 1;
/* 34432 */         hash = 53 * hash + getIButtonID().hashCode();
/*       */       } 
/* 34434 */       if (hasData()) {
/* 34435 */         hash = 37 * hash + 2;
/* 34436 */         hash = 53 * hash + getData().hashCode();
/*       */       } 
/* 34438 */       hash = 29 * hash + this.unknownFields.hashCode();
/* 34439 */       this.memoizedHashCode = hash;
/* 34440 */       return hash;
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mReadIButton parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
/* 34446 */       return (mReadIButton)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mReadIButton parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 34452 */       return (mReadIButton)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static mReadIButton parseFrom(ByteString data) throws InvalidProtocolBufferException {
/* 34457 */       return (mReadIButton)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mReadIButton parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 34463 */       return (mReadIButton)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static mReadIButton parseFrom(byte[] data) throws InvalidProtocolBufferException {
/* 34467 */       return (mReadIButton)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mReadIButton parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 34473 */       return (mReadIButton)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static mReadIButton parseFrom(InputStream input) throws IOException {
/* 34477 */       return 
/* 34478 */         (mReadIButton)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mReadIButton parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 34484 */       return 
/* 34485 */         (mReadIButton)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static mReadIButton parseDelimitedFrom(InputStream input) throws IOException {
/* 34489 */       return 
/* 34490 */         (mReadIButton)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mReadIButton parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 34496 */       return 
/* 34497 */         (mReadIButton)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static mReadIButton parseFrom(CodedInputStream input) throws IOException {
/* 34502 */       return 
/* 34503 */         (mReadIButton)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mReadIButton parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 34509 */       return 
/* 34510 */         (mReadIButton)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public Builder newBuilderForType() {
/* 34514 */       return newBuilder();
/*       */     } public static Builder newBuilder() {
/* 34516 */       return DEFAULT_INSTANCE.toBuilder();
/*       */     }
/*       */     public static Builder newBuilder(mReadIButton prototype) {
/* 34519 */       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
/*       */     }
/*       */     
/*       */     public Builder toBuilder() {
/* 34523 */       return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder())
/* 34524 */         .mergeFrom(this);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
/* 34530 */       Builder builder = new Builder(parent);
/* 34531 */       return builder;
/*       */     }
/*       */ 
/*       */     
/*       */     public static final class Builder
/*       */       extends GeneratedMessageV3.Builder<Builder>
/*       */       implements StarLinkMessage.mReadIButtonOrBuilder
/*       */     {
/*       */       private int bitField0_;
/*       */       
/*       */       private Object iButtonID_;
/*       */       
/*       */       private Object data_;
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/* 34546 */         return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_mReadIButton_descriptor;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
/* 34552 */         return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_mReadIButton_fieldAccessorTable
/* 34553 */           .ensureFieldAccessorsInitialized(StarLinkMessage.mReadIButton.class, Builder.class);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private Builder()
/*       */       {
/* 34707 */         this.iButtonID_ = "";
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 34791 */         this.data_ = ""; maybeForceBuilderInitialization(); } private Builder(GeneratedMessageV3.BuilderParent parent) { super(parent); this.iButtonID_ = ""; this.data_ = ""; maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (StarLinkMessage.mReadIButton.alwaysUseFieldBuilders); } public Builder clear() { super.clear(); this.iButtonID_ = ""; this.bitField0_ &= 0xFFFFFFFE; this.data_ = ""; this.bitField0_ &= 0xFFFFFFFD; return this; } public Descriptors.Descriptor getDescriptorForType() { return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_mReadIButton_descriptor; } public StarLinkMessage.mReadIButton getDefaultInstanceForType() { return StarLinkMessage.mReadIButton.getDefaultInstance(); } public StarLinkMessage.mReadIButton build() { StarLinkMessage.mReadIButton result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public StarLinkMessage.mReadIButton buildPartial() { StarLinkMessage.mReadIButton result = new StarLinkMessage.mReadIButton(this); int from_bitField0_ = this.bitField0_; int to_bitField0_ = 0; if ((from_bitField0_ & 0x1) != 0) to_bitField0_ |= 0x1;  result.iButtonID_ = this.iButtonID_; if ((from_bitField0_ & 0x2) != 0) to_bitField0_ |= 0x2;  result.data_ = this.data_; result.bitField0_ = to_bitField0_; onBuilt(); return result; } public Builder clone() { return (Builder)super.clone(); } public Builder setField(Descriptors.FieldDescriptor field, Object value) { return (Builder)super.setField(field, value); } public Builder clearField(Descriptors.FieldDescriptor field) { return (Builder)super.clearField(field); } public Builder clearOneof(Descriptors.OneofDescriptor oneof) { return (Builder)super.clearOneof(oneof); } public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) { return (Builder)super.setRepeatedField(field, index, value); } public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) { return (Builder)super.addRepeatedField(field, value); } public Builder mergeFrom(Message other) { if (other instanceof StarLinkMessage.mReadIButton) return mergeFrom((StarLinkMessage.mReadIButton)other);  super.mergeFrom(other); return this; } public Builder mergeFrom(StarLinkMessage.mReadIButton other) { if (other == StarLinkMessage.mReadIButton.getDefaultInstance()) return this;  if (other.hasIButtonID()) { this.bitField0_ |= 0x1; this.iButtonID_ = other.iButtonID_; onChanged(); }  if (other.hasData()) { this.bitField0_ |= 0x2; this.data_ = other.data_; onChanged(); }  mergeUnknownFields(other.unknownFields); onChanged(); return this; } public final boolean isInitialized() { if (!hasIButtonID()) return false;  return true; } public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { StarLinkMessage.mReadIButton parsedMessage = null; try { parsedMessage = (StarLinkMessage.mReadIButton)StarLinkMessage.mReadIButton.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (StarLinkMessage.mReadIButton)e.getUnfinishedMessage(); throw e.unwrapIOException(); } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; } public boolean hasIButtonID() { return ((this.bitField0_ & 0x1) != 0); }
/*       */       public String getIButtonID() { Object ref = this.iButtonID_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.iButtonID_ = s;  return s; }  return (String)ref; }
/*       */       public ByteString getIButtonIDBytes() { Object ref = this.iButtonID_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.iButtonID_ = b; return b; }  return (ByteString)ref; }
/*       */       public Builder setIButtonID(String value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x1; this.iButtonID_ = value; onChanged(); return this; }
/*       */       public Builder clearIButtonID() { this.bitField0_ &= 0xFFFFFFFE; this.iButtonID_ = StarLinkMessage.mReadIButton.getDefaultInstance().getIButtonID(); onChanged(); return this; }
/*       */       public Builder setIButtonIDBytes(ByteString value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x1; this.iButtonID_ = value; onChanged(); return this; }
/* 34797 */       public boolean hasData() { return ((this.bitField0_ & 0x2) != 0); }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public String getData() {
/* 34804 */         Object ref = this.data_;
/* 34805 */         if (!(ref instanceof String)) {
/* 34806 */           ByteString bs = (ByteString)ref;
/*       */           
/* 34808 */           String s = bs.toStringUtf8();
/* 34809 */           if (bs.isValidUtf8()) {
/* 34810 */             this.data_ = s;
/*       */           }
/* 34812 */           return s;
/*       */         } 
/* 34814 */         return (String)ref;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public ByteString getDataBytes() {
/* 34823 */         Object ref = this.data_;
/* 34824 */         if (ref instanceof String) {
/*       */           
/* 34826 */           ByteString b = ByteString.copyFromUtf8((String)ref);
/*       */           
/* 34828 */           this.data_ = b;
/* 34829 */           return b;
/*       */         } 
/* 34831 */         return (ByteString)ref;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setData(String value) {
/* 34841 */         if (value == null) {
/* 34842 */           throw new NullPointerException();
/*       */         }
/* 34844 */         this.bitField0_ |= 0x2;
/* 34845 */         this.data_ = value;
/* 34846 */         onChanged();
/* 34847 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearData() {
/* 34854 */         this.bitField0_ &= 0xFFFFFFFD;
/* 34855 */         this.data_ = StarLinkMessage.mReadIButton.getDefaultInstance().getData();
/* 34856 */         onChanged();
/* 34857 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setDataBytes(ByteString value) {
/* 34866 */         if (value == null) {
/* 34867 */           throw new NullPointerException();
/*       */         }
/* 34869 */         this.bitField0_ |= 0x2;
/* 34870 */         this.data_ = value;
/* 34871 */         onChanged();
/* 34872 */         return this;
/*       */       }
/*       */ 
/*       */       
/*       */       public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
/* 34877 */         return (Builder)super.setUnknownFields(unknownFields);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
/* 34883 */         return (Builder)super.mergeUnknownFields(unknownFields);
/*       */       }
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 34893 */     private static final mReadIButton DEFAULT_INSTANCE = new mReadIButton();
/*       */ 
/*       */     
/*       */     public static mReadIButton getDefaultInstance() {
/* 34897 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */     
/*       */     @Deprecated
/* 34901 */     public static final Parser<mReadIButton> PARSER = (Parser<mReadIButton>)new AbstractParser<mReadIButton>()
/*       */       {
/*       */ 
/*       */         
/*       */         public StarLinkMessage.mReadIButton parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException
/*       */         {
/* 34907 */           return new StarLinkMessage.mReadIButton(input, extensionRegistry);
/*       */         }
/*       */       };
/*       */     
/*       */     public static Parser<mReadIButton> parser() {
/* 34912 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public Parser<mReadIButton> getParserForType() {
/* 34917 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public mReadIButton getDefaultInstanceForType() {
/* 34922 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */   }
/*       */ 
/*       */ 
/*       */   
/*       */   public static interface mGetPatternOrBuilder
/*       */     extends MessageOrBuilder
/*       */   {
/*       */     boolean hasPatternID();
/*       */ 
/*       */ 
/*       */     
/*       */     int getPatternID();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasPattern();
/*       */ 
/*       */ 
/*       */     
/*       */     String getPattern();
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getPatternBytes();
/*       */   }
/*       */ 
/*       */ 
/*       */   
/*       */   public static final class mGetPattern
/*       */     extends GeneratedMessageV3
/*       */     implements mGetPatternOrBuilder
/*       */   {
/*       */     private static final long serialVersionUID = 0L;
/*       */     
/*       */     private int bitField0_;
/*       */     
/*       */     public static final int PATTERNID_FIELD_NUMBER = 1;
/*       */     
/*       */     private int patternID_;
/*       */     
/*       */     public static final int PATTERN_FIELD_NUMBER = 2;
/*       */     
/*       */     private volatile Object pattern_;
/*       */     
/*       */     private byte memoizedIsInitialized;
/*       */ 
/*       */     
/*       */     private mGetPattern(GeneratedMessageV3.Builder<?> builder)
/*       */     {
/* 34973 */       super(builder);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/* 35121 */       this.memoizedIsInitialized = -1; } private mGetPattern() { this.memoizedIsInitialized = -1; this.pattern_ = ""; } protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) { return new mGetPattern(); } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private mGetPattern(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this(); if (extensionRegistry == null) throw new NullPointerException();  int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { ByteString bs; int tag = input.readTag(); switch (tag) { case 0: done = true; continue;case 8: this.bitField0_ |= 0x1; this.patternID_ = input.readUInt32(); continue;case 18: bs = input.readBytes(); this.bitField0_ |= 0x2; this.pattern_ = bs; continue; }  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this); } finally { this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_mGetPattern_descriptor; } protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() { return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_mGetPattern_fieldAccessorTable.ensureFieldAccessorsInitialized(mGetPattern.class, Builder.class); } public boolean hasPatternID() { return ((this.bitField0_ & 0x1) != 0); } public int getPatternID() { return this.patternID_; } public boolean hasPattern() { return ((this.bitField0_ & 0x2) != 0); }
/*       */     public String getPattern() { Object ref = this.pattern_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.pattern_ = s;  return s; }
/*       */     public ByteString getPatternBytes() { Object ref = this.pattern_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.pattern_ = b; return b; }  return (ByteString)ref; }
/* 35124 */     public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized;
/* 35125 */       if (isInitialized == 1) return true; 
/* 35126 */       if (isInitialized == 0) return false;
/*       */       
/* 35128 */       if (!hasPatternID()) {
/* 35129 */         this.memoizedIsInitialized = 0;
/* 35130 */         return false;
/*       */       } 
/* 35132 */       if (!hasPattern()) {
/* 35133 */         this.memoizedIsInitialized = 0;
/* 35134 */         return false;
/*       */       } 
/* 35136 */       this.memoizedIsInitialized = 1;
/* 35137 */       return true; }
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/* 35143 */       if ((this.bitField0_ & 0x1) != 0) {
/* 35144 */         output.writeUInt32(1, this.patternID_);
/*       */       }
/* 35146 */       if ((this.bitField0_ & 0x2) != 0) {
/* 35147 */         GeneratedMessageV3.writeString(output, 2, this.pattern_);
/*       */       }
/* 35149 */       this.unknownFields.writeTo(output);
/*       */     }
/*       */ 
/*       */     
/*       */     public int getSerializedSize() {
/* 35154 */       int size = this.memoizedSize;
/* 35155 */       if (size != -1) return size;
/*       */       
/* 35157 */       size = 0;
/* 35158 */       if ((this.bitField0_ & 0x1) != 0) {
/* 35159 */         size += 
/* 35160 */           CodedOutputStream.computeUInt32Size(1, this.patternID_);
/*       */       }
/* 35162 */       if ((this.bitField0_ & 0x2) != 0) {
/* 35163 */         size += GeneratedMessageV3.computeStringSize(2, this.pattern_);
/*       */       }
/* 35165 */       size += this.unknownFields.getSerializedSize();
/* 35166 */       this.memoizedSize = size;
/* 35167 */       return size;
/*       */     }
/*       */ 
/*       */     
/*       */     public boolean equals(Object obj) {
/* 35172 */       if (obj == this) {
/* 35173 */         return true;
/*       */       }
/* 35175 */       if (!(obj instanceof mGetPattern)) {
/* 35176 */         return super.equals(obj);
/*       */       }
/* 35178 */       mGetPattern other = (mGetPattern)obj;
/*       */       
/* 35180 */       if (hasPatternID() != other.hasPatternID()) return false; 
/* 35181 */       if (hasPatternID() && 
/* 35182 */         getPatternID() != other
/* 35183 */         .getPatternID()) return false;
/*       */       
/* 35185 */       if (hasPattern() != other.hasPattern()) return false; 
/* 35186 */       if (hasPattern() && 
/*       */         
/* 35188 */         !getPattern().equals(other.getPattern())) return false;
/*       */       
/* 35190 */       if (!this.unknownFields.equals(other.unknownFields)) return false; 
/* 35191 */       return true;
/*       */     }
/*       */ 
/*       */     
/*       */     public int hashCode() {
/* 35196 */       if (this.memoizedHashCode != 0) {
/* 35197 */         return this.memoizedHashCode;
/*       */       }
/* 35199 */       int hash = 41;
/* 35200 */       hash = 19 * hash + getDescriptor().hashCode();
/* 35201 */       if (hasPatternID()) {
/* 35202 */         hash = 37 * hash + 1;
/* 35203 */         hash = 53 * hash + getPatternID();
/*       */       } 
/* 35205 */       if (hasPattern()) {
/* 35206 */         hash = 37 * hash + 2;
/* 35207 */         hash = 53 * hash + getPattern().hashCode();
/*       */       } 
/* 35209 */       hash = 29 * hash + this.unknownFields.hashCode();
/* 35210 */       this.memoizedHashCode = hash;
/* 35211 */       return hash;
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mGetPattern parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
/* 35217 */       return (mGetPattern)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mGetPattern parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 35223 */       return (mGetPattern)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static mGetPattern parseFrom(ByteString data) throws InvalidProtocolBufferException {
/* 35228 */       return (mGetPattern)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mGetPattern parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 35234 */       return (mGetPattern)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static mGetPattern parseFrom(byte[] data) throws InvalidProtocolBufferException {
/* 35238 */       return (mGetPattern)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mGetPattern parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 35244 */       return (mGetPattern)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static mGetPattern parseFrom(InputStream input) throws IOException {
/* 35248 */       return 
/* 35249 */         (mGetPattern)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mGetPattern parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 35255 */       return 
/* 35256 */         (mGetPattern)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static mGetPattern parseDelimitedFrom(InputStream input) throws IOException {
/* 35260 */       return 
/* 35261 */         (mGetPattern)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mGetPattern parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 35267 */       return 
/* 35268 */         (mGetPattern)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static mGetPattern parseFrom(CodedInputStream input) throws IOException {
/* 35273 */       return 
/* 35274 */         (mGetPattern)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mGetPattern parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 35280 */       return 
/* 35281 */         (mGetPattern)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public Builder newBuilderForType() {
/* 35285 */       return newBuilder();
/*       */     } public static Builder newBuilder() {
/* 35287 */       return DEFAULT_INSTANCE.toBuilder();
/*       */     }
/*       */     public static Builder newBuilder(mGetPattern prototype) {
/* 35290 */       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
/*       */     }
/*       */     
/*       */     public Builder toBuilder() {
/* 35294 */       return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder())
/* 35295 */         .mergeFrom(this);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
/* 35301 */       Builder builder = new Builder(parent);
/* 35302 */       return builder;
/*       */     }
/*       */ 
/*       */     
/*       */     public static final class Builder
/*       */       extends GeneratedMessageV3.Builder<Builder>
/*       */       implements StarLinkMessage.mGetPatternOrBuilder
/*       */     {
/*       */       private int bitField0_;
/*       */       
/*       */       private int patternID_;
/*       */       
/*       */       private Object pattern_;
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/* 35317 */         return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_mGetPattern_descriptor;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
/* 35323 */         return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_mGetPattern_fieldAccessorTable
/* 35324 */           .ensureFieldAccessorsInitialized(StarLinkMessage.mGetPattern.class, Builder.class);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private Builder()
/*       */       {
/* 35518 */         this.pattern_ = ""; maybeForceBuilderInitialization(); } private Builder(GeneratedMessageV3.BuilderParent parent) { super(parent); this.pattern_ = ""; maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (StarLinkMessage.mGetPattern.alwaysUseFieldBuilders); } public Builder clear() { super.clear(); this.patternID_ = 0; this.bitField0_ &= 0xFFFFFFFE; this.pattern_ = ""; this.bitField0_ &= 0xFFFFFFFD; return this; } public Descriptors.Descriptor getDescriptorForType() { return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_mGetPattern_descriptor; } public StarLinkMessage.mGetPattern getDefaultInstanceForType() { return StarLinkMessage.mGetPattern.getDefaultInstance(); } public StarLinkMessage.mGetPattern build() { StarLinkMessage.mGetPattern result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public StarLinkMessage.mGetPattern buildPartial() { StarLinkMessage.mGetPattern result = new StarLinkMessage.mGetPattern(this); int from_bitField0_ = this.bitField0_; int to_bitField0_ = 0; if ((from_bitField0_ & 0x1) != 0) { result.patternID_ = this.patternID_; to_bitField0_ |= 0x1; }  if ((from_bitField0_ & 0x2) != 0) to_bitField0_ |= 0x2;  result.pattern_ = this.pattern_; result.bitField0_ = to_bitField0_; onBuilt(); return result; } public Builder clone() { return (Builder)super.clone(); } public Builder setField(Descriptors.FieldDescriptor field, Object value) { return (Builder)super.setField(field, value); } public Builder clearField(Descriptors.FieldDescriptor field) { return (Builder)super.clearField(field); } public Builder clearOneof(Descriptors.OneofDescriptor oneof) { return (Builder)super.clearOneof(oneof); } public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) { return (Builder)super.setRepeatedField(field, index, value); } public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) { return (Builder)super.addRepeatedField(field, value); } public Builder mergeFrom(Message other) { if (other instanceof StarLinkMessage.mGetPattern) return mergeFrom((StarLinkMessage.mGetPattern)other);  super.mergeFrom(other); return this; } public Builder mergeFrom(StarLinkMessage.mGetPattern other) { if (other == StarLinkMessage.mGetPattern.getDefaultInstance()) return this;  if (other.hasPatternID()) setPatternID(other.getPatternID());  if (other.hasPattern()) { this.bitField0_ |= 0x2; this.pattern_ = other.pattern_; onChanged(); }  mergeUnknownFields(other.unknownFields); onChanged(); return this; } public final boolean isInitialized() { if (!hasPatternID()) return false;  if (!hasPattern()) return false;  return true; }
/*       */       public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { StarLinkMessage.mGetPattern parsedMessage = null; try { parsedMessage = (StarLinkMessage.mGetPattern)StarLinkMessage.mGetPattern.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (StarLinkMessage.mGetPattern)e.getUnfinishedMessage(); throw e.unwrapIOException(); } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; }
/*       */       public boolean hasPatternID() { return ((this.bitField0_ & 0x1) != 0); }
/*       */       public int getPatternID() { return this.patternID_; }
/*       */       public Builder setPatternID(int value) { this.bitField0_ |= 0x1; this.patternID_ = value; onChanged(); return this; }
/*       */       public Builder clearPatternID() { this.bitField0_ &= 0xFFFFFFFE; this.patternID_ = 0; onChanged(); return this; }
/* 35524 */       public boolean hasPattern() { return ((this.bitField0_ & 0x2) != 0); }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public String getPattern() {
/* 35531 */         Object ref = this.pattern_;
/* 35532 */         if (!(ref instanceof String)) {
/* 35533 */           ByteString bs = (ByteString)ref;
/*       */           
/* 35535 */           String s = bs.toStringUtf8();
/* 35536 */           if (bs.isValidUtf8()) {
/* 35537 */             this.pattern_ = s;
/*       */           }
/* 35539 */           return s;
/*       */         } 
/* 35541 */         return (String)ref;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public ByteString getPatternBytes() {
/* 35550 */         Object ref = this.pattern_;
/* 35551 */         if (ref instanceof String) {
/*       */           
/* 35553 */           ByteString b = ByteString.copyFromUtf8((String)ref);
/*       */           
/* 35555 */           this.pattern_ = b;
/* 35556 */           return b;
/*       */         } 
/* 35558 */         return (ByteString)ref;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setPattern(String value) {
/* 35568 */         if (value == null) {
/* 35569 */           throw new NullPointerException();
/*       */         }
/* 35571 */         this.bitField0_ |= 0x2;
/* 35572 */         this.pattern_ = value;
/* 35573 */         onChanged();
/* 35574 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearPattern() {
/* 35581 */         this.bitField0_ &= 0xFFFFFFFD;
/* 35582 */         this.pattern_ = StarLinkMessage.mGetPattern.getDefaultInstance().getPattern();
/* 35583 */         onChanged();
/* 35584 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setPatternBytes(ByteString value) {
/* 35593 */         if (value == null) {
/* 35594 */           throw new NullPointerException();
/*       */         }
/* 35596 */         this.bitField0_ |= 0x2;
/* 35597 */         this.pattern_ = value;
/* 35598 */         onChanged();
/* 35599 */         return this;
/*       */       }
/*       */ 
/*       */       
/*       */       public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
/* 35604 */         return (Builder)super.setUnknownFields(unknownFields);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
/* 35610 */         return (Builder)super.mergeUnknownFields(unknownFields);
/*       */       }
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 35620 */     private static final mGetPattern DEFAULT_INSTANCE = new mGetPattern();
/*       */ 
/*       */     
/*       */     public static mGetPattern getDefaultInstance() {
/* 35624 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */     
/*       */     @Deprecated
/* 35628 */     public static final Parser<mGetPattern> PARSER = (Parser<mGetPattern>)new AbstractParser<mGetPattern>()
/*       */       {
/*       */ 
/*       */         
/*       */         public StarLinkMessage.mGetPattern parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException
/*       */         {
/* 35634 */           return new StarLinkMessage.mGetPattern(input, extensionRegistry);
/*       */         }
/*       */       };
/*       */     
/*       */     public static Parser<mGetPattern> parser() {
/* 35639 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public Parser<mGetPattern> getParserForType() {
/* 35644 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public mGetPattern getDefaultInstanceForType() {
/* 35649 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public static interface mMultiParamOrBuilder
/*       */     extends MessageOrBuilder
/*       */   {
/*       */     List<Integer> getParameterNumbersList();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getParameterNumbersCount();
/*       */ 
/*       */ 
/*       */     
/*       */     int getParameterNumbers(int param1Int);
/*       */ 
/*       */ 
/*       */     
/*       */     List<String> getValuesList();
/*       */ 
/*       */ 
/*       */     
/*       */     int getValuesCount();
/*       */ 
/*       */ 
/*       */     
/*       */     String getValues(int param1Int);
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getValuesBytes(int param1Int);
/*       */   }
/*       */ 
/*       */ 
/*       */   
/*       */   public static final class mMultiParam
/*       */     extends GeneratedMessageV3
/*       */     implements mMultiParamOrBuilder
/*       */   {
/*       */     private static final long serialVersionUID = 0L;
/*       */ 
/*       */     
/*       */     public static final int PARAMETERNUMBERS_FIELD_NUMBER = 1;
/*       */ 
/*       */     
/*       */     private Internal.IntList parameterNumbers_;
/*       */ 
/*       */     
/*       */     public static final int VALUES_FIELD_NUMBER = 2;
/*       */ 
/*       */     
/*       */     private LazyStringList values_;
/*       */ 
/*       */     
/*       */     private byte memoizedIsInitialized;
/*       */ 
/*       */ 
/*       */     
/*       */     private mMultiParam(GeneratedMessageV3.Builder<?> builder)
/*       */     {
/* 35714 */       super(builder);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/* 35882 */       this.memoizedIsInitialized = -1; } private mMultiParam() { this.memoizedIsInitialized = -1; this.parameterNumbers_ = emptyIntList(); this.values_ = LazyStringArrayList.EMPTY; } protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) { return new mMultiParam(); } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private mMultiParam(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this(); if (extensionRegistry == null) throw new NullPointerException();  int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { int length; ByteString bs; int limit, tag = input.readTag(); switch (tag) { case 0: done = true; continue;case 8: if ((mutable_bitField0_ & 0x1) == 0) { this.parameterNumbers_ = newIntList(); mutable_bitField0_ |= 0x1; }  this.parameterNumbers_.addInt(input.readUInt32()); continue;case 10: length = input.readRawVarint32(); limit = input.pushLimit(length); if ((mutable_bitField0_ & 0x1) == 0 && input.getBytesUntilLimit() > 0) { this.parameterNumbers_ = newIntList(); mutable_bitField0_ |= 0x1; }  while (input.getBytesUntilLimit() > 0) this.parameterNumbers_.addInt(input.readUInt32());  input.popLimit(limit); continue;case 18: bs = input.readBytes(); if ((mutable_bitField0_ & 0x2) == 0) { this.values_ = (LazyStringList)new LazyStringArrayList(); mutable_bitField0_ |= 0x2; }  this.values_.add(bs); continue; }  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this); } finally { if ((mutable_bitField0_ & 0x1) != 0) this.parameterNumbers_.makeImmutable();  if ((mutable_bitField0_ & 0x2) != 0) this.values_ = this.values_.getUnmodifiableView();  this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_mMultiParam_descriptor; } protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() { return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_mMultiParam_fieldAccessorTable.ensureFieldAccessorsInitialized(mMultiParam.class, Builder.class); } public List<Integer> getParameterNumbersList() { return (List<Integer>)this.parameterNumbers_; } public int getParameterNumbersCount() { return this.parameterNumbers_.size(); } public int getParameterNumbers(int index) { return this.parameterNumbers_.getInt(index); } public ProtocolStringList getValuesList() { return (ProtocolStringList)this.values_; } public int getValuesCount() { return this.values_.size(); }
/*       */     public String getValues(int index) { return (String)this.values_.get(index); }
/*       */     public ByteString getValuesBytes(int index) { return this.values_.getByteString(index); }
/* 35885 */     public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized;
/* 35886 */       if (isInitialized == 1) return true; 
/* 35887 */       if (isInitialized == 0) return false;
/*       */       
/* 35889 */       this.memoizedIsInitialized = 1;
/* 35890 */       return true; }
/*       */ 
/*       */ 
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/*       */       int i;
/* 35896 */       for (i = 0; i < this.parameterNumbers_.size(); i++) {
/* 35897 */         output.writeUInt32(1, this.parameterNumbers_.getInt(i));
/*       */       }
/* 35899 */       for (i = 0; i < this.values_.size(); i++) {
/* 35900 */         GeneratedMessageV3.writeString(output, 2, this.values_.getRaw(i));
/*       */       }
/* 35902 */       this.unknownFields.writeTo(output);
/*       */     }
/*       */ 
/*       */     
/*       */     public int getSerializedSize() {
/* 35907 */       int size = this.memoizedSize;
/* 35908 */       if (size != -1) return size;
/*       */       
/* 35910 */       size = 0;
/*       */       
/* 35912 */       int dataSize = 0; int i;
/* 35913 */       for (i = 0; i < this.parameterNumbers_.size(); i++) {
/* 35914 */         dataSize += 
/* 35915 */           CodedOutputStream.computeUInt32SizeNoTag(this.parameterNumbers_.getInt(i));
/*       */       }
/* 35917 */       size += dataSize;
/* 35918 */       size += 1 * getParameterNumbersList().size();
/*       */ 
/*       */       
/* 35921 */       dataSize = 0;
/* 35922 */       for (i = 0; i < this.values_.size(); i++) {
/* 35923 */         dataSize += computeStringSizeNoTag(this.values_.getRaw(i));
/*       */       }
/* 35925 */       size += dataSize;
/* 35926 */       size += 1 * getValuesList().size();
/*       */       
/* 35928 */       size += this.unknownFields.getSerializedSize();
/* 35929 */       this.memoizedSize = size;
/* 35930 */       return size;
/*       */     }
/*       */ 
/*       */     
/*       */     public boolean equals(Object obj) {
/* 35935 */       if (obj == this) {
/* 35936 */         return true;
/*       */       }
/* 35938 */       if (!(obj instanceof mMultiParam)) {
/* 35939 */         return super.equals(obj);
/*       */       }
/* 35941 */       mMultiParam other = (mMultiParam)obj;
/*       */ 
/*       */       
/* 35944 */       if (!getParameterNumbersList().equals(other.getParameterNumbersList())) return false;
/*       */       
/* 35946 */       if (!getValuesList().equals(other.getValuesList())) return false; 
/* 35947 */       if (!this.unknownFields.equals(other.unknownFields)) return false; 
/* 35948 */       return true;
/*       */     }
/*       */ 
/*       */     
/*       */     public int hashCode() {
/* 35953 */       if (this.memoizedHashCode != 0) {
/* 35954 */         return this.memoizedHashCode;
/*       */       }
/* 35956 */       int hash = 41;
/* 35957 */       hash = 19 * hash + getDescriptor().hashCode();
/* 35958 */       if (getParameterNumbersCount() > 0) {
/* 35959 */         hash = 37 * hash + 1;
/* 35960 */         hash = 53 * hash + getParameterNumbersList().hashCode();
/*       */       } 
/* 35962 */       if (getValuesCount() > 0) {
/* 35963 */         hash = 37 * hash + 2;
/* 35964 */         hash = 53 * hash + getValuesList().hashCode();
/*       */       } 
/* 35966 */       hash = 29 * hash + this.unknownFields.hashCode();
/* 35967 */       this.memoizedHashCode = hash;
/* 35968 */       return hash;
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mMultiParam parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
/* 35974 */       return (mMultiParam)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mMultiParam parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 35980 */       return (mMultiParam)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static mMultiParam parseFrom(ByteString data) throws InvalidProtocolBufferException {
/* 35985 */       return (mMultiParam)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mMultiParam parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 35991 */       return (mMultiParam)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static mMultiParam parseFrom(byte[] data) throws InvalidProtocolBufferException {
/* 35995 */       return (mMultiParam)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mMultiParam parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 36001 */       return (mMultiParam)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static mMultiParam parseFrom(InputStream input) throws IOException {
/* 36005 */       return 
/* 36006 */         (mMultiParam)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mMultiParam parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 36012 */       return 
/* 36013 */         (mMultiParam)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static mMultiParam parseDelimitedFrom(InputStream input) throws IOException {
/* 36017 */       return 
/* 36018 */         (mMultiParam)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mMultiParam parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 36024 */       return 
/* 36025 */         (mMultiParam)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static mMultiParam parseFrom(CodedInputStream input) throws IOException {
/* 36030 */       return 
/* 36031 */         (mMultiParam)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mMultiParam parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 36037 */       return 
/* 36038 */         (mMultiParam)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public Builder newBuilderForType() {
/* 36042 */       return newBuilder();
/*       */     } public static Builder newBuilder() {
/* 36044 */       return DEFAULT_INSTANCE.toBuilder();
/*       */     }
/*       */     public static Builder newBuilder(mMultiParam prototype) {
/* 36047 */       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
/*       */     }
/*       */     
/*       */     public Builder toBuilder() {
/* 36051 */       return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder())
/* 36052 */         .mergeFrom(this);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
/* 36058 */       Builder builder = new Builder(parent);
/* 36059 */       return builder;
/*       */     }
/*       */ 
/*       */     
/*       */     public static final class Builder
/*       */       extends GeneratedMessageV3.Builder<Builder>
/*       */       implements StarLinkMessage.mMultiParamOrBuilder
/*       */     {
/*       */       private int bitField0_;
/*       */       
/*       */       private Internal.IntList parameterNumbers_;
/*       */       
/*       */       private LazyStringList values_;
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/* 36074 */         return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_mMultiParam_descriptor;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
/* 36080 */         return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_mMultiParam_fieldAccessorTable
/* 36081 */           .ensureFieldAccessorsInitialized(StarLinkMessage.mMultiParam.class, Builder.class);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private Builder()
/*       */       {
/* 36242 */         this.parameterNumbers_ = StarLinkMessage.mMultiParam.emptyIntList();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 36321 */         this.values_ = LazyStringArrayList.EMPTY; maybeForceBuilderInitialization(); } private Builder(GeneratedMessageV3.BuilderParent parent) { super(parent); this.parameterNumbers_ = StarLinkMessage.mMultiParam.emptyIntList(); this.values_ = LazyStringArrayList.EMPTY; maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (StarLinkMessage.mMultiParam.alwaysUseFieldBuilders); } public Builder clear() { super.clear(); this.parameterNumbers_ = StarLinkMessage.mMultiParam.emptyIntList(); this.bitField0_ &= 0xFFFFFFFE; this.values_ = LazyStringArrayList.EMPTY; this.bitField0_ &= 0xFFFFFFFD; return this; } public Descriptors.Descriptor getDescriptorForType() { return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_mMultiParam_descriptor; } public StarLinkMessage.mMultiParam getDefaultInstanceForType() { return StarLinkMessage.mMultiParam.getDefaultInstance(); } public StarLinkMessage.mMultiParam build() { StarLinkMessage.mMultiParam result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public StarLinkMessage.mMultiParam buildPartial() { StarLinkMessage.mMultiParam result = new StarLinkMessage.mMultiParam(this); int from_bitField0_ = this.bitField0_; if ((this.bitField0_ & 0x1) != 0) { this.parameterNumbers_.makeImmutable(); this.bitField0_ &= 0xFFFFFFFE; }  result.parameterNumbers_ = this.parameterNumbers_; if ((this.bitField0_ & 0x2) != 0) { this.values_ = this.values_.getUnmodifiableView(); this.bitField0_ &= 0xFFFFFFFD; }  result.values_ = this.values_; onBuilt(); return result; } public Builder clone() { return (Builder)super.clone(); } public Builder setField(Descriptors.FieldDescriptor field, Object value) { return (Builder)super.setField(field, value); } public Builder clearField(Descriptors.FieldDescriptor field) { return (Builder)super.clearField(field); } public Builder clearOneof(Descriptors.OneofDescriptor oneof) { return (Builder)super.clearOneof(oneof); } public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) { return (Builder)super.setRepeatedField(field, index, value); } public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) { return (Builder)super.addRepeatedField(field, value); } public Builder mergeFrom(Message other) { if (other instanceof StarLinkMessage.mMultiParam) return mergeFrom((StarLinkMessage.mMultiParam)other);  super.mergeFrom(other); return this; } public Builder mergeFrom(StarLinkMessage.mMultiParam other) { if (other == StarLinkMessage.mMultiParam.getDefaultInstance()) return this;  if (!other.parameterNumbers_.isEmpty()) { if (this.parameterNumbers_.isEmpty()) { this.parameterNumbers_ = other.parameterNumbers_; this.bitField0_ &= 0xFFFFFFFE; } else { ensureParameterNumbersIsMutable(); this.parameterNumbers_.addAll((Collection)other.parameterNumbers_); }  onChanged(); }  if (!other.values_.isEmpty()) { if (this.values_.isEmpty()) { this.values_ = other.values_; this.bitField0_ &= 0xFFFFFFFD; } else { ensureValuesIsMutable(); this.values_.addAll((Collection)other.values_); }  onChanged(); }  mergeUnknownFields(other.unknownFields); onChanged(); return this; } public final boolean isInitialized() { return true; } public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { StarLinkMessage.mMultiParam parsedMessage = null; try { parsedMessage = (StarLinkMessage.mMultiParam)StarLinkMessage.mMultiParam.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (StarLinkMessage.mMultiParam)e.getUnfinishedMessage(); throw e.unwrapIOException(); } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; } private void ensureParameterNumbersIsMutable() { if ((this.bitField0_ & 0x1) == 0) { this.parameterNumbers_ = StarLinkMessage.mMultiParam.mutableCopy(this.parameterNumbers_); this.bitField0_ |= 0x1; }  } public List<Integer> getParameterNumbersList() { return ((this.bitField0_ & 0x1) != 0) ? Collections.<Integer>unmodifiableList((List<? extends Integer>)this.parameterNumbers_) : (List<Integer>)this.parameterNumbers_; } public int getParameterNumbersCount() { return this.parameterNumbers_.size(); } public int getParameterNumbers(int index) { return this.parameterNumbers_.getInt(index); } public Builder setParameterNumbers(int index, int value) { ensureParameterNumbersIsMutable(); this.parameterNumbers_.setInt(index, value); onChanged(); return this; } public Builder addParameterNumbers(int value) { ensureParameterNumbersIsMutable(); this.parameterNumbers_.addInt(value); onChanged(); return this; } public Builder addAllParameterNumbers(Iterable<? extends Integer> values) { ensureParameterNumbersIsMutable(); AbstractMessageLite.Builder.addAll(values, (List)this.parameterNumbers_); onChanged(); return this; }
/*       */       public Builder clearParameterNumbers() { this.parameterNumbers_ = StarLinkMessage.mMultiParam.emptyIntList(); this.bitField0_ &= 0xFFFFFFFE; onChanged(); return this; }
/* 36323 */       private void ensureValuesIsMutable() { if ((this.bitField0_ & 0x2) == 0) {
/* 36324 */           this.values_ = (LazyStringList)new LazyStringArrayList(this.values_);
/* 36325 */           this.bitField0_ |= 0x2;
/*       */         }  }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public ProtocolStringList getValuesList() {
/* 36334 */         return (ProtocolStringList)this.values_.getUnmodifiableView();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getValuesCount() {
/* 36341 */         return this.values_.size();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public String getValues(int index) {
/* 36349 */         return (String)this.values_.get(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public ByteString getValuesBytes(int index) {
/* 36358 */         return this.values_.getByteString(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setValues(int index, String value) {
/* 36368 */         if (value == null) {
/* 36369 */           throw new NullPointerException();
/*       */         }
/* 36371 */         ensureValuesIsMutable();
/* 36372 */         this.values_.set(index, value);
/* 36373 */         onChanged();
/* 36374 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addValues(String value) {
/* 36383 */         if (value == null) {
/* 36384 */           throw new NullPointerException();
/*       */         }
/* 36386 */         ensureValuesIsMutable();
/* 36387 */         this.values_.add(value);
/* 36388 */         onChanged();
/* 36389 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addAllValues(Iterable<String> values) {
/* 36398 */         ensureValuesIsMutable();
/* 36399 */         AbstractMessageLite.Builder.addAll(values, (List)this.values_);
/*       */         
/* 36401 */         onChanged();
/* 36402 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearValues() {
/* 36409 */         this.values_ = LazyStringArrayList.EMPTY;
/* 36410 */         this.bitField0_ &= 0xFFFFFFFD;
/* 36411 */         onChanged();
/* 36412 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addValuesBytes(ByteString value) {
/* 36421 */         if (value == null) {
/* 36422 */           throw new NullPointerException();
/*       */         }
/* 36424 */         ensureValuesIsMutable();
/* 36425 */         this.values_.add(value);
/* 36426 */         onChanged();
/* 36427 */         return this;
/*       */       }
/*       */ 
/*       */       
/*       */       public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
/* 36432 */         return (Builder)super.setUnknownFields(unknownFields);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
/* 36438 */         return (Builder)super.mergeUnknownFields(unknownFields);
/*       */       }
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 36448 */     private static final mMultiParam DEFAULT_INSTANCE = new mMultiParam();
/*       */ 
/*       */     
/*       */     public static mMultiParam getDefaultInstance() {
/* 36452 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */     
/*       */     @Deprecated
/* 36456 */     public static final Parser<mMultiParam> PARSER = (Parser<mMultiParam>)new AbstractParser<mMultiParam>()
/*       */       {
/*       */ 
/*       */         
/*       */         public StarLinkMessage.mMultiParam parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException
/*       */         {
/* 36462 */           return new StarLinkMessage.mMultiParam(input, extensionRegistry);
/*       */         }
/*       */       };
/*       */     
/*       */     public static Parser<mMultiParam> parser() {
/* 36467 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public Parser<mMultiParam> getParserForType() {
/* 36472 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public mMultiParam getDefaultInstanceForType() {
/* 36477 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */   }
/*       */ 
/*       */ 
/*       */   
/*       */   public static interface mTempConfigOrBuilder
/*       */     extends MessageOrBuilder
/*       */   {
/*       */     boolean hasSensorCount();
/*       */ 
/*       */ 
/*       */     
/*       */     int getSensorCount();
/*       */ 
/*       */ 
/*       */     
/*       */     List<String> getSensorIDList();
/*       */ 
/*       */ 
/*       */     
/*       */     int getSensorIDCount();
/*       */ 
/*       */ 
/*       */     
/*       */     String getSensorID(int param1Int);
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getSensorIDBytes(int param1Int);
/*       */   }
/*       */ 
/*       */ 
/*       */   
/*       */   public static final class mTempConfig
/*       */     extends GeneratedMessageV3
/*       */     implements mTempConfigOrBuilder
/*       */   {
/*       */     private static final long serialVersionUID = 0L;
/*       */ 
/*       */     
/*       */     private int bitField0_;
/*       */ 
/*       */     
/*       */     public static final int SENSORCOUNT_FIELD_NUMBER = 1;
/*       */ 
/*       */     
/*       */     private int sensorCount_;
/*       */ 
/*       */     
/*       */     public static final int SENSORID_FIELD_NUMBER = 2;
/*       */     
/*       */     private LazyStringList sensorID_;
/*       */     
/*       */     private byte memoizedIsInitialized;
/*       */ 
/*       */     
/*       */     private mTempConfig(GeneratedMessageV3.Builder<?> builder)
/*       */     {
/* 36536 */       super(builder);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/* 36677 */       this.memoizedIsInitialized = -1; } private mTempConfig() { this.memoizedIsInitialized = -1; this.sensorID_ = LazyStringArrayList.EMPTY; } protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) { return new mTempConfig(); } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private mTempConfig(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this(); if (extensionRegistry == null) throw new NullPointerException();  int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { ByteString bs; int tag = input.readTag(); switch (tag) { case 0: done = true; continue;case 8: this.bitField0_ |= 0x1; this.sensorCount_ = input.readUInt32(); continue;case 18: bs = input.readBytes(); if ((mutable_bitField0_ & 0x2) == 0) { this.sensorID_ = (LazyStringList)new LazyStringArrayList(); mutable_bitField0_ |= 0x2; }  this.sensorID_.add(bs); continue; }  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this); } finally { if ((mutable_bitField0_ & 0x2) != 0) this.sensorID_ = this.sensorID_.getUnmodifiableView();  this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_mTempConfig_descriptor; } protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() { return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_mTempConfig_fieldAccessorTable.ensureFieldAccessorsInitialized(mTempConfig.class, Builder.class); } public boolean hasSensorCount() { return ((this.bitField0_ & 0x1) != 0); } public int getSensorCount() { return this.sensorCount_; } public ProtocolStringList getSensorIDList() { return (ProtocolStringList)this.sensorID_; } public int getSensorIDCount() { return this.sensorID_.size(); }
/*       */     public String getSensorID(int index) { return (String)this.sensorID_.get(index); }
/*       */     public ByteString getSensorIDBytes(int index) { return this.sensorID_.getByteString(index); }
/* 36680 */     public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized;
/* 36681 */       if (isInitialized == 1) return true; 
/* 36682 */       if (isInitialized == 0) return false;
/*       */       
/* 36684 */       if (!hasSensorCount()) {
/* 36685 */         this.memoizedIsInitialized = 0;
/* 36686 */         return false;
/*       */       } 
/* 36688 */       this.memoizedIsInitialized = 1;
/* 36689 */       return true; }
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/* 36695 */       if ((this.bitField0_ & 0x1) != 0) {
/* 36696 */         output.writeUInt32(1, this.sensorCount_);
/*       */       }
/* 36698 */       for (int i = 0; i < this.sensorID_.size(); i++) {
/* 36699 */         GeneratedMessageV3.writeString(output, 2, this.sensorID_.getRaw(i));
/*       */       }
/* 36701 */       this.unknownFields.writeTo(output);
/*       */     }
/*       */ 
/*       */     
/*       */     public int getSerializedSize() {
/* 36706 */       int size = this.memoizedSize;
/* 36707 */       if (size != -1) return size;
/*       */       
/* 36709 */       size = 0;
/* 36710 */       if ((this.bitField0_ & 0x1) != 0) {
/* 36711 */         size += 
/* 36712 */           CodedOutputStream.computeUInt32Size(1, this.sensorCount_);
/*       */       }
/*       */       
/* 36715 */       int dataSize = 0;
/* 36716 */       for (int i = 0; i < this.sensorID_.size(); i++) {
/* 36717 */         dataSize += computeStringSizeNoTag(this.sensorID_.getRaw(i));
/*       */       }
/* 36719 */       size += dataSize;
/* 36720 */       size += 1 * getSensorIDList().size();
/*       */       
/* 36722 */       size += this.unknownFields.getSerializedSize();
/* 36723 */       this.memoizedSize = size;
/* 36724 */       return size;
/*       */     }
/*       */ 
/*       */     
/*       */     public boolean equals(Object obj) {
/* 36729 */       if (obj == this) {
/* 36730 */         return true;
/*       */       }
/* 36732 */       if (!(obj instanceof mTempConfig)) {
/* 36733 */         return super.equals(obj);
/*       */       }
/* 36735 */       mTempConfig other = (mTempConfig)obj;
/*       */       
/* 36737 */       if (hasSensorCount() != other.hasSensorCount()) return false; 
/* 36738 */       if (hasSensorCount() && 
/* 36739 */         getSensorCount() != other
/* 36740 */         .getSensorCount()) return false;
/*       */ 
/*       */       
/* 36743 */       if (!getSensorIDList().equals(other.getSensorIDList())) return false; 
/* 36744 */       if (!this.unknownFields.equals(other.unknownFields)) return false; 
/* 36745 */       return true;
/*       */     }
/*       */ 
/*       */     
/*       */     public int hashCode() {
/* 36750 */       if (this.memoizedHashCode != 0) {
/* 36751 */         return this.memoizedHashCode;
/*       */       }
/* 36753 */       int hash = 41;
/* 36754 */       hash = 19 * hash + getDescriptor().hashCode();
/* 36755 */       if (hasSensorCount()) {
/* 36756 */         hash = 37 * hash + 1;
/* 36757 */         hash = 53 * hash + getSensorCount();
/*       */       } 
/* 36759 */       if (getSensorIDCount() > 0) {
/* 36760 */         hash = 37 * hash + 2;
/* 36761 */         hash = 53 * hash + getSensorIDList().hashCode();
/*       */       } 
/* 36763 */       hash = 29 * hash + this.unknownFields.hashCode();
/* 36764 */       this.memoizedHashCode = hash;
/* 36765 */       return hash;
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mTempConfig parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
/* 36771 */       return (mTempConfig)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mTempConfig parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 36777 */       return (mTempConfig)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static mTempConfig parseFrom(ByteString data) throws InvalidProtocolBufferException {
/* 36782 */       return (mTempConfig)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mTempConfig parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 36788 */       return (mTempConfig)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static mTempConfig parseFrom(byte[] data) throws InvalidProtocolBufferException {
/* 36792 */       return (mTempConfig)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mTempConfig parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 36798 */       return (mTempConfig)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static mTempConfig parseFrom(InputStream input) throws IOException {
/* 36802 */       return 
/* 36803 */         (mTempConfig)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mTempConfig parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 36809 */       return 
/* 36810 */         (mTempConfig)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static mTempConfig parseDelimitedFrom(InputStream input) throws IOException {
/* 36814 */       return 
/* 36815 */         (mTempConfig)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mTempConfig parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 36821 */       return 
/* 36822 */         (mTempConfig)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static mTempConfig parseFrom(CodedInputStream input) throws IOException {
/* 36827 */       return 
/* 36828 */         (mTempConfig)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mTempConfig parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 36834 */       return 
/* 36835 */         (mTempConfig)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public Builder newBuilderForType() {
/* 36839 */       return newBuilder();
/*       */     } public static Builder newBuilder() {
/* 36841 */       return DEFAULT_INSTANCE.toBuilder();
/*       */     }
/*       */     public static Builder newBuilder(mTempConfig prototype) {
/* 36844 */       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
/*       */     }
/*       */     
/*       */     public Builder toBuilder() {
/* 36848 */       return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder())
/* 36849 */         .mergeFrom(this);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
/* 36855 */       Builder builder = new Builder(parent);
/* 36856 */       return builder;
/*       */     }
/*       */ 
/*       */     
/*       */     public static final class Builder
/*       */       extends GeneratedMessageV3.Builder<Builder>
/*       */       implements StarLinkMessage.mTempConfigOrBuilder
/*       */     {
/*       */       private int bitField0_;
/*       */       
/*       */       private int sensorCount_;
/*       */       
/*       */       private LazyStringList sensorID_;
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/* 36871 */         return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_mTempConfig_descriptor;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
/* 36877 */         return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_mTempConfig_fieldAccessorTable
/* 36878 */           .ensureFieldAccessorsInitialized(StarLinkMessage.mTempConfig.class, Builder.class);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private Builder()
/*       */       {
/* 37075 */         this.sensorID_ = LazyStringArrayList.EMPTY; maybeForceBuilderInitialization(); } private Builder(GeneratedMessageV3.BuilderParent parent) { super(parent); this.sensorID_ = LazyStringArrayList.EMPTY; maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (StarLinkMessage.mTempConfig.alwaysUseFieldBuilders); } public Builder clear() { super.clear(); this.sensorCount_ = 0; this.bitField0_ &= 0xFFFFFFFE; this.sensorID_ = LazyStringArrayList.EMPTY; this.bitField0_ &= 0xFFFFFFFD; return this; } public Descriptors.Descriptor getDescriptorForType() { return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_mTempConfig_descriptor; } public StarLinkMessage.mTempConfig getDefaultInstanceForType() { return StarLinkMessage.mTempConfig.getDefaultInstance(); } public StarLinkMessage.mTempConfig build() { StarLinkMessage.mTempConfig result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public StarLinkMessage.mTempConfig buildPartial() { StarLinkMessage.mTempConfig result = new StarLinkMessage.mTempConfig(this); int from_bitField0_ = this.bitField0_; int to_bitField0_ = 0; if ((from_bitField0_ & 0x1) != 0) { result.sensorCount_ = this.sensorCount_; to_bitField0_ |= 0x1; }  if ((this.bitField0_ & 0x2) != 0) { this.sensorID_ = this.sensorID_.getUnmodifiableView(); this.bitField0_ &= 0xFFFFFFFD; }  result.sensorID_ = this.sensorID_; result.bitField0_ = to_bitField0_; onBuilt(); return result; } public Builder clone() { return (Builder)super.clone(); } public Builder setField(Descriptors.FieldDescriptor field, Object value) { return (Builder)super.setField(field, value); } public Builder clearField(Descriptors.FieldDescriptor field) { return (Builder)super.clearField(field); } public Builder clearOneof(Descriptors.OneofDescriptor oneof) { return (Builder)super.clearOneof(oneof); } public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) { return (Builder)super.setRepeatedField(field, index, value); } public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) { return (Builder)super.addRepeatedField(field, value); } public Builder mergeFrom(Message other) { if (other instanceof StarLinkMessage.mTempConfig) return mergeFrom((StarLinkMessage.mTempConfig)other);  super.mergeFrom(other); return this; } public Builder mergeFrom(StarLinkMessage.mTempConfig other) { if (other == StarLinkMessage.mTempConfig.getDefaultInstance()) return this;  if (other.hasSensorCount()) setSensorCount(other.getSensorCount());  if (!other.sensorID_.isEmpty()) { if (this.sensorID_.isEmpty()) { this.sensorID_ = other.sensorID_; this.bitField0_ &= 0xFFFFFFFD; } else { ensureSensorIDIsMutable(); this.sensorID_.addAll((Collection)other.sensorID_); }  onChanged(); }  mergeUnknownFields(other.unknownFields); onChanged(); return this; } public final boolean isInitialized() { if (!hasSensorCount()) return false;  return true; } public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { StarLinkMessage.mTempConfig parsedMessage = null; try { parsedMessage = (StarLinkMessage.mTempConfig)StarLinkMessage.mTempConfig.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (StarLinkMessage.mTempConfig)e.getUnfinishedMessage(); throw e.unwrapIOException(); } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; } public boolean hasSensorCount() { return ((this.bitField0_ & 0x1) != 0); } public int getSensorCount() { return this.sensorCount_; } public Builder setSensorCount(int value) { this.bitField0_ |= 0x1; this.sensorCount_ = value; onChanged(); return this; }
/*       */       public Builder clearSensorCount() { this.bitField0_ &= 0xFFFFFFFE; this.sensorCount_ = 0; onChanged(); return this; }
/* 37077 */       private void ensureSensorIDIsMutable() { if ((this.bitField0_ & 0x2) == 0) {
/* 37078 */           this.sensorID_ = (LazyStringList)new LazyStringArrayList(this.sensorID_);
/* 37079 */           this.bitField0_ |= 0x2;
/*       */         }  }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public ProtocolStringList getSensorIDList() {
/* 37088 */         return (ProtocolStringList)this.sensorID_.getUnmodifiableView();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getSensorIDCount() {
/* 37095 */         return this.sensorID_.size();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public String getSensorID(int index) {
/* 37103 */         return (String)this.sensorID_.get(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public ByteString getSensorIDBytes(int index) {
/* 37112 */         return this.sensorID_.getByteString(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setSensorID(int index, String value) {
/* 37122 */         if (value == null) {
/* 37123 */           throw new NullPointerException();
/*       */         }
/* 37125 */         ensureSensorIDIsMutable();
/* 37126 */         this.sensorID_.set(index, value);
/* 37127 */         onChanged();
/* 37128 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addSensorID(String value) {
/* 37137 */         if (value == null) {
/* 37138 */           throw new NullPointerException();
/*       */         }
/* 37140 */         ensureSensorIDIsMutable();
/* 37141 */         this.sensorID_.add(value);
/* 37142 */         onChanged();
/* 37143 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addAllSensorID(Iterable<String> values) {
/* 37152 */         ensureSensorIDIsMutable();
/* 37153 */         AbstractMessageLite.Builder.addAll(values, (List)this.sensorID_);
/*       */         
/* 37155 */         onChanged();
/* 37156 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearSensorID() {
/* 37163 */         this.sensorID_ = LazyStringArrayList.EMPTY;
/* 37164 */         this.bitField0_ &= 0xFFFFFFFD;
/* 37165 */         onChanged();
/* 37166 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addSensorIDBytes(ByteString value) {
/* 37175 */         if (value == null) {
/* 37176 */           throw new NullPointerException();
/*       */         }
/* 37178 */         ensureSensorIDIsMutable();
/* 37179 */         this.sensorID_.add(value);
/* 37180 */         onChanged();
/* 37181 */         return this;
/*       */       }
/*       */ 
/*       */       
/*       */       public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
/* 37186 */         return (Builder)super.setUnknownFields(unknownFields);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
/* 37192 */         return (Builder)super.mergeUnknownFields(unknownFields);
/*       */       }
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 37202 */     private static final mTempConfig DEFAULT_INSTANCE = new mTempConfig();
/*       */ 
/*       */     
/*       */     public static mTempConfig getDefaultInstance() {
/* 37206 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */     
/*       */     @Deprecated
/* 37210 */     public static final Parser<mTempConfig> PARSER = (Parser<mTempConfig>)new AbstractParser<mTempConfig>()
/*       */       {
/*       */ 
/*       */         
/*       */         public StarLinkMessage.mTempConfig parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException
/*       */         {
/* 37216 */           return new StarLinkMessage.mTempConfig(input, extensionRegistry);
/*       */         }
/*       */       };
/*       */     
/*       */     public static Parser<mTempConfig> parser() {
/* 37221 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public Parser<mTempConfig> getParserForType() {
/* 37226 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public mTempConfig getDefaultInstanceForType() {
/* 37231 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */   }
/*       */ 
/*       */ 
/*       */   
/*       */   public static interface mDeviceListOrBuilder
/*       */     extends MessageOrBuilder
/*       */   {
/*       */     List<Integer> getDeviceIDList();
/*       */ 
/*       */ 
/*       */     
/*       */     int getDeviceIDCount();
/*       */ 
/*       */ 
/*       */     
/*       */     int getDeviceID(int param1Int);
/*       */ 
/*       */ 
/*       */     
/*       */     List<Integer> getVersionList();
/*       */ 
/*       */ 
/*       */     
/*       */     int getVersionCount();
/*       */ 
/*       */ 
/*       */     
/*       */     int getVersion(int param1Int);
/*       */   }
/*       */ 
/*       */ 
/*       */   
/*       */   public static final class mDeviceList
/*       */     extends GeneratedMessageV3
/*       */     implements mDeviceListOrBuilder
/*       */   {
/*       */     private static final long serialVersionUID = 0L;
/*       */ 
/*       */     
/*       */     public static final int DEVICEID_FIELD_NUMBER = 1;
/*       */ 
/*       */     
/*       */     private Internal.IntList deviceID_;
/*       */ 
/*       */     
/*       */     public static final int VERSION_FIELD_NUMBER = 2;
/*       */ 
/*       */     
/*       */     private Internal.IntList version_;
/*       */     
/*       */     private byte memoizedIsInitialized;
/*       */ 
/*       */     
/*       */     private mDeviceList(GeneratedMessageV3.Builder<?> builder)
/*       */     {
/* 37288 */       super(builder);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/* 37460 */       this.memoizedIsInitialized = -1; } private mDeviceList() { this.memoizedIsInitialized = -1; this.deviceID_ = emptyIntList(); this.version_ = emptyIntList(); } protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) { return new mDeviceList(); } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private mDeviceList(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this(); if (extensionRegistry == null) throw new NullPointerException();  int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { int length, limit, tag = input.readTag(); switch (tag) { case 0: done = true; continue;case 8: if ((mutable_bitField0_ & 0x1) == 0) { this.deviceID_ = newIntList(); mutable_bitField0_ |= 0x1; }  this.deviceID_.addInt(input.readUInt32()); continue;case 10: length = input.readRawVarint32(); limit = input.pushLimit(length); if ((mutable_bitField0_ & 0x1) == 0 && input.getBytesUntilLimit() > 0) { this.deviceID_ = newIntList(); mutable_bitField0_ |= 0x1; }  while (input.getBytesUntilLimit() > 0) this.deviceID_.addInt(input.readUInt32());  input.popLimit(limit); continue;case 16: if ((mutable_bitField0_ & 0x2) == 0) { this.version_ = newIntList(); mutable_bitField0_ |= 0x2; }  this.version_.addInt(input.readUInt32()); continue;case 18: length = input.readRawVarint32(); limit = input.pushLimit(length); if ((mutable_bitField0_ & 0x2) == 0 && input.getBytesUntilLimit() > 0) { this.version_ = newIntList(); mutable_bitField0_ |= 0x2; }  while (input.getBytesUntilLimit() > 0) this.version_.addInt(input.readUInt32());  input.popLimit(limit); continue; }  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this); } finally { if ((mutable_bitField0_ & 0x1) != 0) this.deviceID_.makeImmutable();  if ((mutable_bitField0_ & 0x2) != 0) this.version_.makeImmutable();  this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_mDeviceList_descriptor; } protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() { return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_mDeviceList_fieldAccessorTable.ensureFieldAccessorsInitialized(mDeviceList.class, Builder.class); } public List<Integer> getDeviceIDList() { return (List<Integer>)this.deviceID_; } public int getDeviceIDCount() { return this.deviceID_.size(); } public int getDeviceID(int index) { return this.deviceID_.getInt(index); } public List<Integer> getVersionList() { return (List<Integer>)this.version_; }
/*       */     public int getVersionCount() { return this.version_.size(); }
/*       */     public int getVersion(int index) { return this.version_.getInt(index); }
/* 37463 */     public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized;
/* 37464 */       if (isInitialized == 1) return true; 
/* 37465 */       if (isInitialized == 0) return false;
/*       */       
/* 37467 */       this.memoizedIsInitialized = 1;
/* 37468 */       return true; }
/*       */ 
/*       */ 
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/*       */       int i;
/* 37474 */       for (i = 0; i < this.deviceID_.size(); i++) {
/* 37475 */         output.writeUInt32(1, this.deviceID_.getInt(i));
/*       */       }
/* 37477 */       for (i = 0; i < this.version_.size(); i++) {
/* 37478 */         output.writeUInt32(2, this.version_.getInt(i));
/*       */       }
/* 37480 */       this.unknownFields.writeTo(output);
/*       */     }
/*       */ 
/*       */     
/*       */     public int getSerializedSize() {
/* 37485 */       int size = this.memoizedSize;
/* 37486 */       if (size != -1) return size;
/*       */       
/* 37488 */       size = 0;
/*       */       
/* 37490 */       int dataSize = 0; int i;
/* 37491 */       for (i = 0; i < this.deviceID_.size(); i++) {
/* 37492 */         dataSize += 
/* 37493 */           CodedOutputStream.computeUInt32SizeNoTag(this.deviceID_.getInt(i));
/*       */       }
/* 37495 */       size += dataSize;
/* 37496 */       size += 1 * getDeviceIDList().size();
/*       */ 
/*       */       
/* 37499 */       dataSize = 0;
/* 37500 */       for (i = 0; i < this.version_.size(); i++) {
/* 37501 */         dataSize += 
/* 37502 */           CodedOutputStream.computeUInt32SizeNoTag(this.version_.getInt(i));
/*       */       }
/* 37504 */       size += dataSize;
/* 37505 */       size += 1 * getVersionList().size();
/*       */       
/* 37507 */       size += this.unknownFields.getSerializedSize();
/* 37508 */       this.memoizedSize = size;
/* 37509 */       return size;
/*       */     }
/*       */ 
/*       */     
/*       */     public boolean equals(Object obj) {
/* 37514 */       if (obj == this) {
/* 37515 */         return true;
/*       */       }
/* 37517 */       if (!(obj instanceof mDeviceList)) {
/* 37518 */         return super.equals(obj);
/*       */       }
/* 37520 */       mDeviceList other = (mDeviceList)obj;
/*       */ 
/*       */       
/* 37523 */       if (!getDeviceIDList().equals(other.getDeviceIDList())) return false;
/*       */       
/* 37525 */       if (!getVersionList().equals(other.getVersionList())) return false; 
/* 37526 */       if (!this.unknownFields.equals(other.unknownFields)) return false; 
/* 37527 */       return true;
/*       */     }
/*       */ 
/*       */     
/*       */     public int hashCode() {
/* 37532 */       if (this.memoizedHashCode != 0) {
/* 37533 */         return this.memoizedHashCode;
/*       */       }
/* 37535 */       int hash = 41;
/* 37536 */       hash = 19 * hash + getDescriptor().hashCode();
/* 37537 */       if (getDeviceIDCount() > 0) {
/* 37538 */         hash = 37 * hash + 1;
/* 37539 */         hash = 53 * hash + getDeviceIDList().hashCode();
/*       */       } 
/* 37541 */       if (getVersionCount() > 0) {
/* 37542 */         hash = 37 * hash + 2;
/* 37543 */         hash = 53 * hash + getVersionList().hashCode();
/*       */       } 
/* 37545 */       hash = 29 * hash + this.unknownFields.hashCode();
/* 37546 */       this.memoizedHashCode = hash;
/* 37547 */       return hash;
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mDeviceList parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
/* 37553 */       return (mDeviceList)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mDeviceList parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 37559 */       return (mDeviceList)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static mDeviceList parseFrom(ByteString data) throws InvalidProtocolBufferException {
/* 37564 */       return (mDeviceList)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mDeviceList parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 37570 */       return (mDeviceList)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static mDeviceList parseFrom(byte[] data) throws InvalidProtocolBufferException {
/* 37574 */       return (mDeviceList)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mDeviceList parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 37580 */       return (mDeviceList)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static mDeviceList parseFrom(InputStream input) throws IOException {
/* 37584 */       return 
/* 37585 */         (mDeviceList)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mDeviceList parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 37591 */       return 
/* 37592 */         (mDeviceList)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static mDeviceList parseDelimitedFrom(InputStream input) throws IOException {
/* 37596 */       return 
/* 37597 */         (mDeviceList)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mDeviceList parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 37603 */       return 
/* 37604 */         (mDeviceList)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static mDeviceList parseFrom(CodedInputStream input) throws IOException {
/* 37609 */       return 
/* 37610 */         (mDeviceList)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mDeviceList parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 37616 */       return 
/* 37617 */         (mDeviceList)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public Builder newBuilderForType() {
/* 37621 */       return newBuilder();
/*       */     } public static Builder newBuilder() {
/* 37623 */       return DEFAULT_INSTANCE.toBuilder();
/*       */     }
/*       */     public static Builder newBuilder(mDeviceList prototype) {
/* 37626 */       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
/*       */     }
/*       */     
/*       */     public Builder toBuilder() {
/* 37630 */       return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder())
/* 37631 */         .mergeFrom(this);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
/* 37637 */       Builder builder = new Builder(parent);
/* 37638 */       return builder;
/*       */     }
/*       */ 
/*       */     
/*       */     public static final class Builder
/*       */       extends GeneratedMessageV3.Builder<Builder>
/*       */       implements StarLinkMessage.mDeviceListOrBuilder
/*       */     {
/*       */       private int bitField0_;
/*       */       
/*       */       private Internal.IntList deviceID_;
/*       */       
/*       */       private Internal.IntList version_;
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/* 37653 */         return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_mDeviceList_descriptor;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
/* 37659 */         return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_mDeviceList_fieldAccessorTable
/* 37660 */           .ensureFieldAccessorsInitialized(StarLinkMessage.mDeviceList.class, Builder.class);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private Builder()
/*       */       {
/* 37821 */         this.deviceID_ = StarLinkMessage.mDeviceList.emptyIntList();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 37900 */         this.version_ = StarLinkMessage.mDeviceList.emptyIntList(); maybeForceBuilderInitialization(); } private Builder(GeneratedMessageV3.BuilderParent parent) { super(parent); this.deviceID_ = StarLinkMessage.mDeviceList.emptyIntList(); this.version_ = StarLinkMessage.mDeviceList.emptyIntList(); maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (StarLinkMessage.mDeviceList.alwaysUseFieldBuilders); } public Builder clear() { super.clear(); this.deviceID_ = StarLinkMessage.mDeviceList.emptyIntList(); this.bitField0_ &= 0xFFFFFFFE; this.version_ = StarLinkMessage.mDeviceList.emptyIntList(); this.bitField0_ &= 0xFFFFFFFD; return this; } public Descriptors.Descriptor getDescriptorForType() { return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_mDeviceList_descriptor; } public StarLinkMessage.mDeviceList getDefaultInstanceForType() { return StarLinkMessage.mDeviceList.getDefaultInstance(); } public StarLinkMessage.mDeviceList build() { StarLinkMessage.mDeviceList result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public StarLinkMessage.mDeviceList buildPartial() { StarLinkMessage.mDeviceList result = new StarLinkMessage.mDeviceList(this); int from_bitField0_ = this.bitField0_; if ((this.bitField0_ & 0x1) != 0) { this.deviceID_.makeImmutable(); this.bitField0_ &= 0xFFFFFFFE; }  result.deviceID_ = this.deviceID_; if ((this.bitField0_ & 0x2) != 0) { this.version_.makeImmutable(); this.bitField0_ &= 0xFFFFFFFD; }  result.version_ = this.version_; onBuilt(); return result; } public Builder clone() { return (Builder)super.clone(); } public Builder setField(Descriptors.FieldDescriptor field, Object value) { return (Builder)super.setField(field, value); } public Builder clearField(Descriptors.FieldDescriptor field) { return (Builder)super.clearField(field); } public Builder clearOneof(Descriptors.OneofDescriptor oneof) { return (Builder)super.clearOneof(oneof); } public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) { return (Builder)super.setRepeatedField(field, index, value); } public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) { return (Builder)super.addRepeatedField(field, value); } public Builder mergeFrom(Message other) { if (other instanceof StarLinkMessage.mDeviceList) return mergeFrom((StarLinkMessage.mDeviceList)other);  super.mergeFrom(other); return this; } public Builder mergeFrom(StarLinkMessage.mDeviceList other) { if (other == StarLinkMessage.mDeviceList.getDefaultInstance()) return this;  if (!other.deviceID_.isEmpty()) { if (this.deviceID_.isEmpty()) { this.deviceID_ = other.deviceID_; this.bitField0_ &= 0xFFFFFFFE; } else { ensureDeviceIDIsMutable(); this.deviceID_.addAll((Collection)other.deviceID_); }  onChanged(); }  if (!other.version_.isEmpty()) { if (this.version_.isEmpty()) { this.version_ = other.version_; this.bitField0_ &= 0xFFFFFFFD; } else { ensureVersionIsMutable(); this.version_.addAll((Collection)other.version_); }  onChanged(); }  mergeUnknownFields(other.unknownFields); onChanged(); return this; } public final boolean isInitialized() { return true; } public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { StarLinkMessage.mDeviceList parsedMessage = null; try { parsedMessage = (StarLinkMessage.mDeviceList)StarLinkMessage.mDeviceList.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (StarLinkMessage.mDeviceList)e.getUnfinishedMessage(); throw e.unwrapIOException(); } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; } private void ensureDeviceIDIsMutable() { if ((this.bitField0_ & 0x1) == 0) { this.deviceID_ = StarLinkMessage.mDeviceList.mutableCopy(this.deviceID_); this.bitField0_ |= 0x1; }  } public List<Integer> getDeviceIDList() { return ((this.bitField0_ & 0x1) != 0) ? Collections.<Integer>unmodifiableList((List<? extends Integer>)this.deviceID_) : (List<Integer>)this.deviceID_; } public int getDeviceIDCount() { return this.deviceID_.size(); } public int getDeviceID(int index) { return this.deviceID_.getInt(index); } public Builder setDeviceID(int index, int value) { ensureDeviceIDIsMutable(); this.deviceID_.setInt(index, value); onChanged(); return this; } public Builder addDeviceID(int value) { ensureDeviceIDIsMutable(); this.deviceID_.addInt(value); onChanged(); return this; } public Builder addAllDeviceID(Iterable<? extends Integer> values) { ensureDeviceIDIsMutable(); AbstractMessageLite.Builder.addAll(values, (List)this.deviceID_); onChanged(); return this; }
/*       */       public Builder clearDeviceID() { this.deviceID_ = StarLinkMessage.mDeviceList.emptyIntList(); this.bitField0_ &= 0xFFFFFFFE; onChanged(); return this; }
/* 37902 */       private void ensureVersionIsMutable() { if ((this.bitField0_ & 0x2) == 0) {
/* 37903 */           this.version_ = StarLinkMessage.mDeviceList.mutableCopy(this.version_);
/* 37904 */           this.bitField0_ |= 0x2;
/*       */         }  }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public List<Integer> getVersionList() {
/* 37913 */         return ((this.bitField0_ & 0x2) != 0) ? 
/* 37914 */           Collections.<Integer>unmodifiableList((List<? extends Integer>)this.version_) : (List<Integer>)this.version_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getVersionCount() {
/* 37921 */         return this.version_.size();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getVersion(int index) {
/* 37929 */         return this.version_.getInt(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setVersion(int index, int value) {
/* 37939 */         ensureVersionIsMutable();
/* 37940 */         this.version_.setInt(index, value);
/* 37941 */         onChanged();
/* 37942 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addVersion(int value) {
/* 37950 */         ensureVersionIsMutable();
/* 37951 */         this.version_.addInt(value);
/* 37952 */         onChanged();
/* 37953 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addAllVersion(Iterable<? extends Integer> values) {
/* 37962 */         ensureVersionIsMutable();
/* 37963 */         AbstractMessageLite.Builder.addAll(values, (List)this.version_);
/*       */         
/* 37965 */         onChanged();
/* 37966 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearVersion() {
/* 37973 */         this.version_ = StarLinkMessage.mDeviceList.emptyIntList();
/* 37974 */         this.bitField0_ &= 0xFFFFFFFD;
/* 37975 */         onChanged();
/* 37976 */         return this;
/*       */       }
/*       */ 
/*       */       
/*       */       public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
/* 37981 */         return (Builder)super.setUnknownFields(unknownFields);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
/* 37987 */         return (Builder)super.mergeUnknownFields(unknownFields);
/*       */       }
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 37997 */     private static final mDeviceList DEFAULT_INSTANCE = new mDeviceList();
/*       */ 
/*       */     
/*       */     public static mDeviceList getDefaultInstance() {
/* 38001 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */     
/*       */     @Deprecated
/* 38005 */     public static final Parser<mDeviceList> PARSER = (Parser<mDeviceList>)new AbstractParser<mDeviceList>()
/*       */       {
/*       */ 
/*       */         
/*       */         public StarLinkMessage.mDeviceList parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException
/*       */         {
/* 38011 */           return new StarLinkMessage.mDeviceList(input, extensionRegistry);
/*       */         }
/*       */       };
/*       */     
/*       */     public static Parser<mDeviceList> parser() {
/* 38016 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public Parser<mDeviceList> getParserForType() {
/* 38021 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public mDeviceList getDefaultInstanceForType() {
/* 38026 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */   }
/*       */ 
/*       */ 
/*       */   
/*       */   public static interface mTeachRemoteOrBuilder
/*       */     extends MessageOrBuilder
/*       */   {
/*       */     boolean hasRuleID();
/*       */ 
/*       */ 
/*       */     
/*       */     int getRuleID();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasRemoteID();
/*       */ 
/*       */     
/*       */     int getRemoteID();
/*       */   }
/*       */ 
/*       */   
/*       */   public static final class mTeachRemote
/*       */     extends GeneratedMessageV3
/*       */     implements mTeachRemoteOrBuilder
/*       */   {
/*       */     private static final long serialVersionUID = 0L;
/*       */     
/*       */     private int bitField0_;
/*       */     
/*       */     public static final int RULEID_FIELD_NUMBER = 1;
/*       */     
/*       */     private int ruleID_;
/*       */     
/*       */     public static final int REMOTEID_FIELD_NUMBER = 2;
/*       */     
/*       */     private int remoteID_;
/*       */     
/*       */     private byte memoizedIsInitialized;
/*       */ 
/*       */     
/*       */     private mTeachRemote(GeneratedMessageV3.Builder<?> builder)
/*       */     {
/* 38071 */       super(builder);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/* 38188 */       this.memoizedIsInitialized = -1; } private mTeachRemote() { this.memoizedIsInitialized = -1; } protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) { return new mTeachRemote(); } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private mTeachRemote(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this(); if (extensionRegistry == null) throw new NullPointerException();  int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { int tag = input.readTag(); switch (tag) { case 0: done = true; continue;case 8: this.bitField0_ |= 0x1; this.ruleID_ = input.readUInt32(); continue;case 16: this.bitField0_ |= 0x2; this.remoteID_ = input.readUInt32(); continue; }  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this); } finally { this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_mTeachRemote_descriptor; } protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() { return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_mTeachRemote_fieldAccessorTable.ensureFieldAccessorsInitialized(mTeachRemote.class, Builder.class); } public boolean hasRuleID() { return ((this.bitField0_ & 0x1) != 0); } public int getRuleID() { return this.ruleID_; }
/*       */     public boolean hasRemoteID() { return ((this.bitField0_ & 0x2) != 0); }
/*       */     public int getRemoteID() { return this.remoteID_; }
/* 38191 */     public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized;
/* 38192 */       if (isInitialized == 1) return true; 
/* 38193 */       if (isInitialized == 0) return false;
/*       */       
/* 38195 */       if (!hasRuleID()) {
/* 38196 */         this.memoizedIsInitialized = 0;
/* 38197 */         return false;
/*       */       } 
/* 38199 */       this.memoizedIsInitialized = 1;
/* 38200 */       return true; }
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/* 38206 */       if ((this.bitField0_ & 0x1) != 0) {
/* 38207 */         output.writeUInt32(1, this.ruleID_);
/*       */       }
/* 38209 */       if ((this.bitField0_ & 0x2) != 0) {
/* 38210 */         output.writeUInt32(2, this.remoteID_);
/*       */       }
/* 38212 */       this.unknownFields.writeTo(output);
/*       */     }
/*       */ 
/*       */     
/*       */     public int getSerializedSize() {
/* 38217 */       int size = this.memoizedSize;
/* 38218 */       if (size != -1) return size;
/*       */       
/* 38220 */       size = 0;
/* 38221 */       if ((this.bitField0_ & 0x1) != 0) {
/* 38222 */         size += 
/* 38223 */           CodedOutputStream.computeUInt32Size(1, this.ruleID_);
/*       */       }
/* 38225 */       if ((this.bitField0_ & 0x2) != 0) {
/* 38226 */         size += 
/* 38227 */           CodedOutputStream.computeUInt32Size(2, this.remoteID_);
/*       */       }
/* 38229 */       size += this.unknownFields.getSerializedSize();
/* 38230 */       this.memoizedSize = size;
/* 38231 */       return size;
/*       */     }
/*       */ 
/*       */     
/*       */     public boolean equals(Object obj) {
/* 38236 */       if (obj == this) {
/* 38237 */         return true;
/*       */       }
/* 38239 */       if (!(obj instanceof mTeachRemote)) {
/* 38240 */         return super.equals(obj);
/*       */       }
/* 38242 */       mTeachRemote other = (mTeachRemote)obj;
/*       */       
/* 38244 */       if (hasRuleID() != other.hasRuleID()) return false; 
/* 38245 */       if (hasRuleID() && 
/* 38246 */         getRuleID() != other
/* 38247 */         .getRuleID()) return false;
/*       */       
/* 38249 */       if (hasRemoteID() != other.hasRemoteID()) return false; 
/* 38250 */       if (hasRemoteID() && 
/* 38251 */         getRemoteID() != other
/* 38252 */         .getRemoteID()) return false;
/*       */       
/* 38254 */       if (!this.unknownFields.equals(other.unknownFields)) return false; 
/* 38255 */       return true;
/*       */     }
/*       */ 
/*       */     
/*       */     public int hashCode() {
/* 38260 */       if (this.memoizedHashCode != 0) {
/* 38261 */         return this.memoizedHashCode;
/*       */       }
/* 38263 */       int hash = 41;
/* 38264 */       hash = 19 * hash + getDescriptor().hashCode();
/* 38265 */       if (hasRuleID()) {
/* 38266 */         hash = 37 * hash + 1;
/* 38267 */         hash = 53 * hash + getRuleID();
/*       */       } 
/* 38269 */       if (hasRemoteID()) {
/* 38270 */         hash = 37 * hash + 2;
/* 38271 */         hash = 53 * hash + getRemoteID();
/*       */       } 
/* 38273 */       hash = 29 * hash + this.unknownFields.hashCode();
/* 38274 */       this.memoizedHashCode = hash;
/* 38275 */       return hash;
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mTeachRemote parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
/* 38281 */       return (mTeachRemote)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mTeachRemote parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 38287 */       return (mTeachRemote)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static mTeachRemote parseFrom(ByteString data) throws InvalidProtocolBufferException {
/* 38292 */       return (mTeachRemote)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mTeachRemote parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 38298 */       return (mTeachRemote)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static mTeachRemote parseFrom(byte[] data) throws InvalidProtocolBufferException {
/* 38302 */       return (mTeachRemote)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mTeachRemote parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 38308 */       return (mTeachRemote)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static mTeachRemote parseFrom(InputStream input) throws IOException {
/* 38312 */       return 
/* 38313 */         (mTeachRemote)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mTeachRemote parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 38319 */       return 
/* 38320 */         (mTeachRemote)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static mTeachRemote parseDelimitedFrom(InputStream input) throws IOException {
/* 38324 */       return 
/* 38325 */         (mTeachRemote)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mTeachRemote parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 38331 */       return 
/* 38332 */         (mTeachRemote)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static mTeachRemote parseFrom(CodedInputStream input) throws IOException {
/* 38337 */       return 
/* 38338 */         (mTeachRemote)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mTeachRemote parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 38344 */       return 
/* 38345 */         (mTeachRemote)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public Builder newBuilderForType() {
/* 38349 */       return newBuilder();
/*       */     } public static Builder newBuilder() {
/* 38351 */       return DEFAULT_INSTANCE.toBuilder();
/*       */     }
/*       */     public static Builder newBuilder(mTeachRemote prototype) {
/* 38354 */       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
/*       */     }
/*       */     
/*       */     public Builder toBuilder() {
/* 38358 */       return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder())
/* 38359 */         .mergeFrom(this);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
/* 38365 */       Builder builder = new Builder(parent);
/* 38366 */       return builder;
/*       */     }
/*       */ 
/*       */     
/*       */     public static final class Builder
/*       */       extends GeneratedMessageV3.Builder<Builder>
/*       */       implements StarLinkMessage.mTeachRemoteOrBuilder
/*       */     {
/*       */       private int bitField0_;
/*       */       
/*       */       private int ruleID_;
/*       */       
/*       */       private int remoteID_;
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/* 38381 */         return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_mTeachRemote_descriptor;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
/* 38387 */         return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_mTeachRemote_fieldAccessorTable
/* 38388 */           .ensureFieldAccessorsInitialized(StarLinkMessage.mTeachRemote.class, Builder.class);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       private Builder() {
/* 38394 */         maybeForceBuilderInitialization();
/*       */       }
/*       */ 
/*       */       
/*       */       private Builder(GeneratedMessageV3.BuilderParent parent) {
/* 38399 */         super(parent);
/* 38400 */         maybeForceBuilderInitialization();
/*       */       }
/*       */       
/*       */       private void maybeForceBuilderInitialization() {
/* 38404 */         if (StarLinkMessage.mTeachRemote.alwaysUseFieldBuilders);
/*       */       }
/*       */ 
/*       */       
/*       */       public Builder clear() {
/* 38409 */         super.clear();
/* 38410 */         this.ruleID_ = 0;
/* 38411 */         this.bitField0_ &= 0xFFFFFFFE;
/* 38412 */         this.remoteID_ = 0;
/* 38413 */         this.bitField0_ &= 0xFFFFFFFD;
/* 38414 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Descriptors.Descriptor getDescriptorForType() {
/* 38420 */         return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_mTeachRemote_descriptor;
/*       */       }
/*       */ 
/*       */       
/*       */       public StarLinkMessage.mTeachRemote getDefaultInstanceForType() {
/* 38425 */         return StarLinkMessage.mTeachRemote.getDefaultInstance();
/*       */       }
/*       */ 
/*       */       
/*       */       public StarLinkMessage.mTeachRemote build() {
/* 38430 */         StarLinkMessage.mTeachRemote result = buildPartial();
/* 38431 */         if (!result.isInitialized()) {
/* 38432 */           throw newUninitializedMessageException(result);
/*       */         }
/* 38434 */         return result;
/*       */       }
/*       */ 
/*       */       
/*       */       public StarLinkMessage.mTeachRemote buildPartial() {
/* 38439 */         StarLinkMessage.mTeachRemote result = new StarLinkMessage.mTeachRemote(this);
/* 38440 */         int from_bitField0_ = this.bitField0_;
/* 38441 */         int to_bitField0_ = 0;
/* 38442 */         if ((from_bitField0_ & 0x1) != 0) {
/* 38443 */           result.ruleID_ = this.ruleID_;
/* 38444 */           to_bitField0_ |= 0x1;
/*       */         } 
/* 38446 */         if ((from_bitField0_ & 0x2) != 0) {
/* 38447 */           result.remoteID_ = this.remoteID_;
/* 38448 */           to_bitField0_ |= 0x2;
/*       */         } 
/* 38450 */         result.bitField0_ = to_bitField0_;
/* 38451 */         onBuilt();
/* 38452 */         return result;
/*       */       }
/*       */ 
/*       */       
/*       */       public Builder clone() {
/* 38457 */         return (Builder)super.clone();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setField(Descriptors.FieldDescriptor field, Object value) {
/* 38463 */         return (Builder)super.setField(field, value);
/*       */       }
/*       */ 
/*       */       
/*       */       public Builder clearField(Descriptors.FieldDescriptor field) {
/* 38468 */         return (Builder)super.clearField(field);
/*       */       }
/*       */ 
/*       */       
/*       */       public Builder clearOneof(Descriptors.OneofDescriptor oneof) {
/* 38473 */         return (Builder)super.clearOneof(oneof);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
/* 38479 */         return (Builder)super.setRepeatedField(field, index, value);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
/* 38485 */         return (Builder)super.addRepeatedField(field, value);
/*       */       }
/*       */       
/*       */       public Builder mergeFrom(Message other) {
/* 38489 */         if (other instanceof StarLinkMessage.mTeachRemote) {
/* 38490 */           return mergeFrom((StarLinkMessage.mTeachRemote)other);
/*       */         }
/* 38492 */         super.mergeFrom(other);
/* 38493 */         return this;
/*       */       }
/*       */ 
/*       */       
/*       */       public Builder mergeFrom(StarLinkMessage.mTeachRemote other) {
/* 38498 */         if (other == StarLinkMessage.mTeachRemote.getDefaultInstance()) return this; 
/* 38499 */         if (other.hasRuleID()) {
/* 38500 */           setRuleID(other.getRuleID());
/*       */         }
/* 38502 */         if (other.hasRemoteID()) {
/* 38503 */           setRemoteID(other.getRemoteID());
/*       */         }
/* 38505 */         mergeUnknownFields(other.unknownFields);
/* 38506 */         onChanged();
/* 38507 */         return this;
/*       */       }
/*       */ 
/*       */       
/*       */       public final boolean isInitialized() {
/* 38512 */         if (!hasRuleID()) {
/* 38513 */           return false;
/*       */         }
/* 38515 */         return true;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 38523 */         StarLinkMessage.mTeachRemote parsedMessage = null;
/*       */         try {
/* 38525 */           parsedMessage = (StarLinkMessage.mTeachRemote)StarLinkMessage.mTeachRemote.PARSER.parsePartialFrom(input, extensionRegistry);
/* 38526 */         } catch (InvalidProtocolBufferException e) {
/* 38527 */           parsedMessage = (StarLinkMessage.mTeachRemote)e.getUnfinishedMessage();
/* 38528 */           throw e.unwrapIOException();
/*       */         } finally {
/* 38530 */           if (parsedMessage != null) {
/* 38531 */             mergeFrom(parsedMessage);
/*       */           }
/*       */         } 
/* 38534 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasRuleID() {
/* 38545 */         return ((this.bitField0_ & 0x1) != 0);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getRuleID() {
/* 38553 */         return this.ruleID_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setRuleID(int value) {
/* 38561 */         this.bitField0_ |= 0x1;
/* 38562 */         this.ruleID_ = value;
/* 38563 */         onChanged();
/* 38564 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearRuleID() {
/* 38571 */         this.bitField0_ &= 0xFFFFFFFE;
/* 38572 */         this.ruleID_ = 0;
/* 38573 */         onChanged();
/* 38574 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasRemoteID() {
/* 38584 */         return ((this.bitField0_ & 0x2) != 0);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getRemoteID() {
/* 38592 */         return this.remoteID_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setRemoteID(int value) {
/* 38600 */         this.bitField0_ |= 0x2;
/* 38601 */         this.remoteID_ = value;
/* 38602 */         onChanged();
/* 38603 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearRemoteID() {
/* 38610 */         this.bitField0_ &= 0xFFFFFFFD;
/* 38611 */         this.remoteID_ = 0;
/* 38612 */         onChanged();
/* 38613 */         return this;
/*       */       }
/*       */ 
/*       */       
/*       */       public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
/* 38618 */         return (Builder)super.setUnknownFields(unknownFields);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
/* 38624 */         return (Builder)super.mergeUnknownFields(unknownFields);
/*       */       }
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 38634 */     private static final mTeachRemote DEFAULT_INSTANCE = new mTeachRemote();
/*       */ 
/*       */     
/*       */     public static mTeachRemote getDefaultInstance() {
/* 38638 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */     
/*       */     @Deprecated
/* 38642 */     public static final Parser<mTeachRemote> PARSER = (Parser<mTeachRemote>)new AbstractParser<mTeachRemote>()
/*       */       {
/*       */ 
/*       */         
/*       */         public StarLinkMessage.mTeachRemote parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException
/*       */         {
/* 38648 */           return new StarLinkMessage.mTeachRemote(input, extensionRegistry);
/*       */         }
/*       */       };
/*       */     
/*       */     public static Parser<mTeachRemote> parser() {
/* 38653 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public Parser<mTeachRemote> getParserForType() {
/* 38658 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public mTeachRemote getDefaultInstanceForType() {
/* 38663 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */   }
/*       */ 
/*       */ 
/*       */   
/*       */   public static interface mAuthenticateOrBuilder
/*       */     extends MessageOrBuilder
/*       */   {
/*       */     boolean hasVersion();
/*       */ 
/*       */ 
/*       */     
/*       */     int getVersion();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasToken();
/*       */ 
/*       */ 
/*       */     
/*       */     String getToken();
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getTokenBytes();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasKey();
/*       */ 
/*       */ 
/*       */     
/*       */     int getKey();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasStep();
/*       */ 
/*       */ 
/*       */     
/*       */     int getStep();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasDigest();
/*       */ 
/*       */ 
/*       */     
/*       */     String getDigest();
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getDigestBytes();
/*       */   }
/*       */ 
/*       */   
/*       */   public static final class mAuthenticate
/*       */     extends GeneratedMessageV3
/*       */     implements mAuthenticateOrBuilder
/*       */   {
/*       */     private static final long serialVersionUID = 0L;
/*       */     
/*       */     private int bitField0_;
/*       */     
/*       */     public static final int VERSION_FIELD_NUMBER = 1;
/*       */     
/*       */     private int version_;
/*       */     
/*       */     public static final int TOKEN_FIELD_NUMBER = 2;
/*       */     
/*       */     private volatile Object token_;
/*       */     
/*       */     public static final int KEY_FIELD_NUMBER = 3;
/*       */     
/*       */     private int key_;
/*       */     
/*       */     public static final int STEP_FIELD_NUMBER = 4;
/*       */     
/*       */     private int step_;
/*       */     
/*       */     public static final int DIGEST_FIELD_NUMBER = 5;
/*       */     
/*       */     private volatile Object digest_;
/*       */     
/*       */     private byte memoizedIsInitialized;
/*       */ 
/*       */     
/*       */     private mAuthenticate(GeneratedMessageV3.Builder<?> builder)
/*       */     {
/* 38753 */       super(builder);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/* 39004 */       this.memoizedIsInitialized = -1; } private mAuthenticate() { this.memoizedIsInitialized = -1; this.token_ = ""; this.digest_ = ""; } protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) { return new mAuthenticate(); } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private mAuthenticate(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this(); if (extensionRegistry == null) throw new NullPointerException();  int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { ByteString bs; int tag = input.readTag(); switch (tag) { case 0: done = true; continue;case 8: this.bitField0_ |= 0x1; this.version_ = input.readUInt32(); continue;case 18: bs = input.readBytes(); this.bitField0_ |= 0x2; this.token_ = bs; continue;case 24: this.bitField0_ |= 0x4; this.key_ = input.readUInt32(); continue;case 32: this.bitField0_ |= 0x8; this.step_ = input.readUInt32(); continue;case 42: bs = input.readBytes(); this.bitField0_ |= 0x10; this.digest_ = bs; continue; }  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this); } finally { this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_mAuthenticate_descriptor; } protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() { return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_mAuthenticate_fieldAccessorTable.ensureFieldAccessorsInitialized(mAuthenticate.class, Builder.class); } public boolean hasVersion() { return ((this.bitField0_ & 0x1) != 0); } public int getVersion() { return this.version_; } public boolean hasToken() { return ((this.bitField0_ & 0x2) != 0); } public String getToken() { Object ref = this.token_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.token_ = s;  return s; } public ByteString getTokenBytes() { Object ref = this.token_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.token_ = b; return b; }  return (ByteString)ref; } public boolean hasKey() { return ((this.bitField0_ & 0x4) != 0); } public int getKey() { return this.key_; } public boolean hasStep() { return ((this.bitField0_ & 0x8) != 0); } public int getStep() { return this.step_; } public boolean hasDigest() { return ((this.bitField0_ & 0x10) != 0); }
/*       */     public String getDigest() { Object ref = this.digest_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.digest_ = s;  return s; }
/*       */     public ByteString getDigestBytes() { Object ref = this.digest_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.digest_ = b; return b; }  return (ByteString)ref; }
/* 39007 */     public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized;
/* 39008 */       if (isInitialized == 1) return true; 
/* 39009 */       if (isInitialized == 0) return false;
/*       */       
/* 39011 */       if (!hasVersion()) {
/* 39012 */         this.memoizedIsInitialized = 0;
/* 39013 */         return false;
/*       */       } 
/* 39015 */       this.memoizedIsInitialized = 1;
/* 39016 */       return true; }
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/* 39022 */       if ((this.bitField0_ & 0x1) != 0) {
/* 39023 */         output.writeUInt32(1, this.version_);
/*       */       }
/* 39025 */       if ((this.bitField0_ & 0x2) != 0) {
/* 39026 */         GeneratedMessageV3.writeString(output, 2, this.token_);
/*       */       }
/* 39028 */       if ((this.bitField0_ & 0x4) != 0) {
/* 39029 */         output.writeUInt32(3, this.key_);
/*       */       }
/* 39031 */       if ((this.bitField0_ & 0x8) != 0) {
/* 39032 */         output.writeUInt32(4, this.step_);
/*       */       }
/* 39034 */       if ((this.bitField0_ & 0x10) != 0) {
/* 39035 */         GeneratedMessageV3.writeString(output, 5, this.digest_);
/*       */       }
/* 39037 */       this.unknownFields.writeTo(output);
/*       */     }
/*       */ 
/*       */     
/*       */     public int getSerializedSize() {
/* 39042 */       int size = this.memoizedSize;
/* 39043 */       if (size != -1) return size;
/*       */       
/* 39045 */       size = 0;
/* 39046 */       if ((this.bitField0_ & 0x1) != 0) {
/* 39047 */         size += 
/* 39048 */           CodedOutputStream.computeUInt32Size(1, this.version_);
/*       */       }
/* 39050 */       if ((this.bitField0_ & 0x2) != 0) {
/* 39051 */         size += GeneratedMessageV3.computeStringSize(2, this.token_);
/*       */       }
/* 39053 */       if ((this.bitField0_ & 0x4) != 0) {
/* 39054 */         size += 
/* 39055 */           CodedOutputStream.computeUInt32Size(3, this.key_);
/*       */       }
/* 39057 */       if ((this.bitField0_ & 0x8) != 0) {
/* 39058 */         size += 
/* 39059 */           CodedOutputStream.computeUInt32Size(4, this.step_);
/*       */       }
/* 39061 */       if ((this.bitField0_ & 0x10) != 0) {
/* 39062 */         size += GeneratedMessageV3.computeStringSize(5, this.digest_);
/*       */       }
/* 39064 */       size += this.unknownFields.getSerializedSize();
/* 39065 */       this.memoizedSize = size;
/* 39066 */       return size;
/*       */     }
/*       */ 
/*       */     
/*       */     public boolean equals(Object obj) {
/* 39071 */       if (obj == this) {
/* 39072 */         return true;
/*       */       }
/* 39074 */       if (!(obj instanceof mAuthenticate)) {
/* 39075 */         return super.equals(obj);
/*       */       }
/* 39077 */       mAuthenticate other = (mAuthenticate)obj;
/*       */       
/* 39079 */       if (hasVersion() != other.hasVersion()) return false; 
/* 39080 */       if (hasVersion() && 
/* 39081 */         getVersion() != other
/* 39082 */         .getVersion()) return false;
/*       */       
/* 39084 */       if (hasToken() != other.hasToken()) return false; 
/* 39085 */       if (hasToken() && 
/*       */         
/* 39087 */         !getToken().equals(other.getToken())) return false;
/*       */       
/* 39089 */       if (hasKey() != other.hasKey()) return false; 
/* 39090 */       if (hasKey() && 
/* 39091 */         getKey() != other
/* 39092 */         .getKey()) return false;
/*       */       
/* 39094 */       if (hasStep() != other.hasStep()) return false; 
/* 39095 */       if (hasStep() && 
/* 39096 */         getStep() != other
/* 39097 */         .getStep()) return false;
/*       */       
/* 39099 */       if (hasDigest() != other.hasDigest()) return false; 
/* 39100 */       if (hasDigest() && 
/*       */         
/* 39102 */         !getDigest().equals(other.getDigest())) return false;
/*       */       
/* 39104 */       if (!this.unknownFields.equals(other.unknownFields)) return false; 
/* 39105 */       return true;
/*       */     }
/*       */ 
/*       */     
/*       */     public int hashCode() {
/* 39110 */       if (this.memoizedHashCode != 0) {
/* 39111 */         return this.memoizedHashCode;
/*       */       }
/* 39113 */       int hash = 41;
/* 39114 */       hash = 19 * hash + getDescriptor().hashCode();
/* 39115 */       if (hasVersion()) {
/* 39116 */         hash = 37 * hash + 1;
/* 39117 */         hash = 53 * hash + getVersion();
/*       */       } 
/* 39119 */       if (hasToken()) {
/* 39120 */         hash = 37 * hash + 2;
/* 39121 */         hash = 53 * hash + getToken().hashCode();
/*       */       } 
/* 39123 */       if (hasKey()) {
/* 39124 */         hash = 37 * hash + 3;
/* 39125 */         hash = 53 * hash + getKey();
/*       */       } 
/* 39127 */       if (hasStep()) {
/* 39128 */         hash = 37 * hash + 4;
/* 39129 */         hash = 53 * hash + getStep();
/*       */       } 
/* 39131 */       if (hasDigest()) {
/* 39132 */         hash = 37 * hash + 5;
/* 39133 */         hash = 53 * hash + getDigest().hashCode();
/*       */       } 
/* 39135 */       hash = 29 * hash + this.unknownFields.hashCode();
/* 39136 */       this.memoizedHashCode = hash;
/* 39137 */       return hash;
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mAuthenticate parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
/* 39143 */       return (mAuthenticate)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mAuthenticate parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 39149 */       return (mAuthenticate)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static mAuthenticate parseFrom(ByteString data) throws InvalidProtocolBufferException {
/* 39154 */       return (mAuthenticate)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mAuthenticate parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 39160 */       return (mAuthenticate)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static mAuthenticate parseFrom(byte[] data) throws InvalidProtocolBufferException {
/* 39164 */       return (mAuthenticate)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mAuthenticate parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 39170 */       return (mAuthenticate)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static mAuthenticate parseFrom(InputStream input) throws IOException {
/* 39174 */       return 
/* 39175 */         (mAuthenticate)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mAuthenticate parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 39181 */       return 
/* 39182 */         (mAuthenticate)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static mAuthenticate parseDelimitedFrom(InputStream input) throws IOException {
/* 39186 */       return 
/* 39187 */         (mAuthenticate)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mAuthenticate parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 39193 */       return 
/* 39194 */         (mAuthenticate)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static mAuthenticate parseFrom(CodedInputStream input) throws IOException {
/* 39199 */       return 
/* 39200 */         (mAuthenticate)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mAuthenticate parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 39206 */       return 
/* 39207 */         (mAuthenticate)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public Builder newBuilderForType() {
/* 39211 */       return newBuilder();
/*       */     } public static Builder newBuilder() {
/* 39213 */       return DEFAULT_INSTANCE.toBuilder();
/*       */     }
/*       */     public static Builder newBuilder(mAuthenticate prototype) {
/* 39216 */       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
/*       */     }
/*       */     
/*       */     public Builder toBuilder() {
/* 39220 */       return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder())
/* 39221 */         .mergeFrom(this);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
/* 39227 */       Builder builder = new Builder(parent);
/* 39228 */       return builder;
/*       */     }
/*       */     
/*       */     public static final class Builder
/*       */       extends GeneratedMessageV3.Builder<Builder>
/*       */       implements StarLinkMessage.mAuthenticateOrBuilder
/*       */     {
/*       */       private int bitField0_;
/*       */       private int version_;
/*       */       private Object token_;
/*       */       private int key_;
/*       */       private int step_;
/*       */       private Object digest_;
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/* 39243 */         return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_mAuthenticate_descriptor;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
/* 39249 */         return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_mAuthenticate_fieldAccessorTable
/* 39250 */           .ensureFieldAccessorsInitialized(StarLinkMessage.mAuthenticate.class, Builder.class);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private Builder()
/*       */       {
/* 39470 */         this.token_ = "";
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 39632 */         this.digest_ = ""; maybeForceBuilderInitialization(); } private Builder(GeneratedMessageV3.BuilderParent parent) { super(parent); this.token_ = ""; this.digest_ = ""; maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (StarLinkMessage.mAuthenticate.alwaysUseFieldBuilders); } public Builder clear() { super.clear(); this.version_ = 0; this.bitField0_ &= 0xFFFFFFFE; this.token_ = ""; this.bitField0_ &= 0xFFFFFFFD; this.key_ = 0; this.bitField0_ &= 0xFFFFFFFB; this.step_ = 0; this.bitField0_ &= 0xFFFFFFF7; this.digest_ = ""; this.bitField0_ &= 0xFFFFFFEF; return this; } public Descriptors.Descriptor getDescriptorForType() { return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_mAuthenticate_descriptor; } public StarLinkMessage.mAuthenticate getDefaultInstanceForType() { return StarLinkMessage.mAuthenticate.getDefaultInstance(); } public StarLinkMessage.mAuthenticate build() { StarLinkMessage.mAuthenticate result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public StarLinkMessage.mAuthenticate buildPartial() { StarLinkMessage.mAuthenticate result = new StarLinkMessage.mAuthenticate(this); int from_bitField0_ = this.bitField0_; int to_bitField0_ = 0; if ((from_bitField0_ & 0x1) != 0) { result.version_ = this.version_; to_bitField0_ |= 0x1; }  if ((from_bitField0_ & 0x2) != 0) to_bitField0_ |= 0x2;  result.token_ = this.token_; if ((from_bitField0_ & 0x4) != 0) { result.key_ = this.key_; to_bitField0_ |= 0x4; }  if ((from_bitField0_ & 0x8) != 0) { result.step_ = this.step_; to_bitField0_ |= 0x8; }  if ((from_bitField0_ & 0x10) != 0) to_bitField0_ |= 0x10;  result.digest_ = this.digest_; result.bitField0_ = to_bitField0_; onBuilt(); return result; } public Builder clone() { return (Builder)super.clone(); } public Builder setField(Descriptors.FieldDescriptor field, Object value) { return (Builder)super.setField(field, value); } public Builder clearField(Descriptors.FieldDescriptor field) { return (Builder)super.clearField(field); } public Builder clearOneof(Descriptors.OneofDescriptor oneof) { return (Builder)super.clearOneof(oneof); } public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) { return (Builder)super.setRepeatedField(field, index, value); } public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) { return (Builder)super.addRepeatedField(field, value); } public Builder mergeFrom(Message other) { if (other instanceof StarLinkMessage.mAuthenticate) return mergeFrom((StarLinkMessage.mAuthenticate)other);  super.mergeFrom(other); return this; } public Builder mergeFrom(StarLinkMessage.mAuthenticate other) { if (other == StarLinkMessage.mAuthenticate.getDefaultInstance()) return this;  if (other.hasVersion()) setVersion(other.getVersion());  if (other.hasToken()) { this.bitField0_ |= 0x2; this.token_ = other.token_; onChanged(); }  if (other.hasKey()) setKey(other.getKey());  if (other.hasStep()) setStep(other.getStep());  if (other.hasDigest()) { this.bitField0_ |= 0x10; this.digest_ = other.digest_; onChanged(); }  mergeUnknownFields(other.unknownFields); onChanged(); return this; } public final boolean isInitialized() { if (!hasVersion()) return false;  return true; } public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { StarLinkMessage.mAuthenticate parsedMessage = null; try { parsedMessage = (StarLinkMessage.mAuthenticate)StarLinkMessage.mAuthenticate.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (StarLinkMessage.mAuthenticate)e.getUnfinishedMessage(); throw e.unwrapIOException(); } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; } public boolean hasVersion() { return ((this.bitField0_ & 0x1) != 0); } public int getVersion() { return this.version_; } public Builder setVersion(int value) { this.bitField0_ |= 0x1; this.version_ = value; onChanged(); return this; } public Builder clearVersion() { this.bitField0_ &= 0xFFFFFFFE; this.version_ = 0; onChanged(); return this; } public boolean hasToken() { return ((this.bitField0_ & 0x2) != 0); } public String getToken() { Object ref = this.token_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.token_ = s;  return s; }  return (String)ref; } public ByteString getTokenBytes() { Object ref = this.token_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.token_ = b; return b; }  return (ByteString)ref; } public Builder setToken(String value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x2; this.token_ = value; onChanged(); return this; } public Builder clearToken() { this.bitField0_ &= 0xFFFFFFFD; this.token_ = StarLinkMessage.mAuthenticate.getDefaultInstance().getToken(); onChanged(); return this; } public Builder setTokenBytes(ByteString value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x2; this.token_ = value; onChanged(); return this; } public boolean hasKey() { return ((this.bitField0_ & 0x4) != 0); } public int getKey() { return this.key_; } public Builder setKey(int value) { this.bitField0_ |= 0x4; this.key_ = value; onChanged(); return this; }
/*       */       public Builder clearKey() { this.bitField0_ &= 0xFFFFFFFB; this.key_ = 0; onChanged(); return this; }
/*       */       public boolean hasStep() { return ((this.bitField0_ & 0x8) != 0); }
/*       */       public int getStep() { return this.step_; }
/*       */       public Builder setStep(int value) { this.bitField0_ |= 0x8; this.step_ = value; onChanged(); return this; }
/*       */       public Builder clearStep() { this.bitField0_ &= 0xFFFFFFF7; this.step_ = 0; onChanged(); return this; }
/* 39638 */       public boolean hasDigest() { return ((this.bitField0_ & 0x10) != 0); }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public String getDigest() {
/* 39645 */         Object ref = this.digest_;
/* 39646 */         if (!(ref instanceof String)) {
/* 39647 */           ByteString bs = (ByteString)ref;
/*       */           
/* 39649 */           String s = bs.toStringUtf8();
/* 39650 */           if (bs.isValidUtf8()) {
/* 39651 */             this.digest_ = s;
/*       */           }
/* 39653 */           return s;
/*       */         } 
/* 39655 */         return (String)ref;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public ByteString getDigestBytes() {
/* 39664 */         Object ref = this.digest_;
/* 39665 */         if (ref instanceof String) {
/*       */           
/* 39667 */           ByteString b = ByteString.copyFromUtf8((String)ref);
/*       */           
/* 39669 */           this.digest_ = b;
/* 39670 */           return b;
/*       */         } 
/* 39672 */         return (ByteString)ref;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setDigest(String value) {
/* 39682 */         if (value == null) {
/* 39683 */           throw new NullPointerException();
/*       */         }
/* 39685 */         this.bitField0_ |= 0x10;
/* 39686 */         this.digest_ = value;
/* 39687 */         onChanged();
/* 39688 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearDigest() {
/* 39695 */         this.bitField0_ &= 0xFFFFFFEF;
/* 39696 */         this.digest_ = StarLinkMessage.mAuthenticate.getDefaultInstance().getDigest();
/* 39697 */         onChanged();
/* 39698 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setDigestBytes(ByteString value) {
/* 39707 */         if (value == null) {
/* 39708 */           throw new NullPointerException();
/*       */         }
/* 39710 */         this.bitField0_ |= 0x10;
/* 39711 */         this.digest_ = value;
/* 39712 */         onChanged();
/* 39713 */         return this;
/*       */       }
/*       */ 
/*       */       
/*       */       public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
/* 39718 */         return (Builder)super.setUnknownFields(unknownFields);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
/* 39724 */         return (Builder)super.mergeUnknownFields(unknownFields);
/*       */       }
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 39734 */     private static final mAuthenticate DEFAULT_INSTANCE = new mAuthenticate();
/*       */ 
/*       */     
/*       */     public static mAuthenticate getDefaultInstance() {
/* 39738 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */     
/*       */     @Deprecated
/* 39742 */     public static final Parser<mAuthenticate> PARSER = (Parser<mAuthenticate>)new AbstractParser<mAuthenticate>()
/*       */       {
/*       */ 
/*       */         
/*       */         public StarLinkMessage.mAuthenticate parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException
/*       */         {
/* 39748 */           return new StarLinkMessage.mAuthenticate(input, extensionRegistry);
/*       */         }
/*       */       };
/*       */     
/*       */     public static Parser<mAuthenticate> parser() {
/* 39753 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public Parser<mAuthenticate> getParserForType() {
/* 39758 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public mAuthenticate getDefaultInstanceForType() {
/* 39763 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */   }
/*       */ 
/*       */ 
/*       */   
/*       */   public static interface mLatLongOrBuilder
/*       */     extends MessageOrBuilder
/*       */   {
/*       */     boolean hasLatitude();
/*       */ 
/*       */ 
/*       */     
/*       */     int getLatitude();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasLongitude();
/*       */ 
/*       */     
/*       */     int getLongitude();
/*       */   }
/*       */ 
/*       */   
/*       */   public static final class mLatLong
/*       */     extends GeneratedMessageV3
/*       */     implements mLatLongOrBuilder
/*       */   {
/*       */     private static final long serialVersionUID = 0L;
/*       */     
/*       */     private int bitField0_;
/*       */     
/*       */     public static final int LATITUDE_FIELD_NUMBER = 1;
/*       */     
/*       */     private int latitude_;
/*       */     
/*       */     public static final int LONGITUDE_FIELD_NUMBER = 2;
/*       */     
/*       */     private int longitude_;
/*       */     
/*       */     private byte memoizedIsInitialized;
/*       */ 
/*       */     
/*       */     private mLatLong(GeneratedMessageV3.Builder<?> builder)
/*       */     {
/* 39808 */       super(builder);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/* 39925 */       this.memoizedIsInitialized = -1; } private mLatLong() { this.memoizedIsInitialized = -1; } protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) { return new mLatLong(); } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private mLatLong(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this(); if (extensionRegistry == null) throw new NullPointerException();  int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { int tag = input.readTag(); switch (tag) { case 0: done = true; continue;case 8: this.bitField0_ |= 0x1; this.latitude_ = input.readSInt32(); continue;case 16: this.bitField0_ |= 0x2; this.longitude_ = input.readSInt32(); continue; }  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this); } finally { this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_mLatLong_descriptor; } protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() { return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_mLatLong_fieldAccessorTable.ensureFieldAccessorsInitialized(mLatLong.class, Builder.class); } public boolean hasLatitude() { return ((this.bitField0_ & 0x1) != 0); } public int getLatitude() { return this.latitude_; }
/*       */     public boolean hasLongitude() { return ((this.bitField0_ & 0x2) != 0); }
/*       */     public int getLongitude() { return this.longitude_; }
/* 39928 */     public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized;
/* 39929 */       if (isInitialized == 1) return true; 
/* 39930 */       if (isInitialized == 0) return false;
/*       */       
/* 39932 */       if (!hasLatitude()) {
/* 39933 */         this.memoizedIsInitialized = 0;
/* 39934 */         return false;
/*       */       } 
/* 39936 */       if (!hasLongitude()) {
/* 39937 */         this.memoizedIsInitialized = 0;
/* 39938 */         return false;
/*       */       } 
/* 39940 */       this.memoizedIsInitialized = 1;
/* 39941 */       return true; }
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/* 39947 */       if ((this.bitField0_ & 0x1) != 0) {
/* 39948 */         output.writeSInt32(1, this.latitude_);
/*       */       }
/* 39950 */       if ((this.bitField0_ & 0x2) != 0) {
/* 39951 */         output.writeSInt32(2, this.longitude_);
/*       */       }
/* 39953 */       this.unknownFields.writeTo(output);
/*       */     }
/*       */ 
/*       */     
/*       */     public int getSerializedSize() {
/* 39958 */       int size = this.memoizedSize;
/* 39959 */       if (size != -1) return size;
/*       */       
/* 39961 */       size = 0;
/* 39962 */       if ((this.bitField0_ & 0x1) != 0) {
/* 39963 */         size += 
/* 39964 */           CodedOutputStream.computeSInt32Size(1, this.latitude_);
/*       */       }
/* 39966 */       if ((this.bitField0_ & 0x2) != 0) {
/* 39967 */         size += 
/* 39968 */           CodedOutputStream.computeSInt32Size(2, this.longitude_);
/*       */       }
/* 39970 */       size += this.unknownFields.getSerializedSize();
/* 39971 */       this.memoizedSize = size;
/* 39972 */       return size;
/*       */     }
/*       */ 
/*       */     
/*       */     public boolean equals(Object obj) {
/* 39977 */       if (obj == this) {
/* 39978 */         return true;
/*       */       }
/* 39980 */       if (!(obj instanceof mLatLong)) {
/* 39981 */         return super.equals(obj);
/*       */       }
/* 39983 */       mLatLong other = (mLatLong)obj;
/*       */       
/* 39985 */       if (hasLatitude() != other.hasLatitude()) return false; 
/* 39986 */       if (hasLatitude() && 
/* 39987 */         getLatitude() != other
/* 39988 */         .getLatitude()) return false;
/*       */       
/* 39990 */       if (hasLongitude() != other.hasLongitude()) return false; 
/* 39991 */       if (hasLongitude() && 
/* 39992 */         getLongitude() != other
/* 39993 */         .getLongitude()) return false;
/*       */       
/* 39995 */       if (!this.unknownFields.equals(other.unknownFields)) return false; 
/* 39996 */       return true;
/*       */     }
/*       */ 
/*       */     
/*       */     public int hashCode() {
/* 40001 */       if (this.memoizedHashCode != 0) {
/* 40002 */         return this.memoizedHashCode;
/*       */       }
/* 40004 */       int hash = 41;
/* 40005 */       hash = 19 * hash + getDescriptor().hashCode();
/* 40006 */       if (hasLatitude()) {
/* 40007 */         hash = 37 * hash + 1;
/* 40008 */         hash = 53 * hash + getLatitude();
/*       */       } 
/* 40010 */       if (hasLongitude()) {
/* 40011 */         hash = 37 * hash + 2;
/* 40012 */         hash = 53 * hash + getLongitude();
/*       */       } 
/* 40014 */       hash = 29 * hash + this.unknownFields.hashCode();
/* 40015 */       this.memoizedHashCode = hash;
/* 40016 */       return hash;
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mLatLong parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
/* 40022 */       return (mLatLong)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mLatLong parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 40028 */       return (mLatLong)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static mLatLong parseFrom(ByteString data) throws InvalidProtocolBufferException {
/* 40033 */       return (mLatLong)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mLatLong parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 40039 */       return (mLatLong)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static mLatLong parseFrom(byte[] data) throws InvalidProtocolBufferException {
/* 40043 */       return (mLatLong)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mLatLong parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 40049 */       return (mLatLong)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static mLatLong parseFrom(InputStream input) throws IOException {
/* 40053 */       return 
/* 40054 */         (mLatLong)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mLatLong parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 40060 */       return 
/* 40061 */         (mLatLong)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static mLatLong parseDelimitedFrom(InputStream input) throws IOException {
/* 40065 */       return 
/* 40066 */         (mLatLong)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mLatLong parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 40072 */       return 
/* 40073 */         (mLatLong)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static mLatLong parseFrom(CodedInputStream input) throws IOException {
/* 40078 */       return 
/* 40079 */         (mLatLong)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static mLatLong parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 40085 */       return 
/* 40086 */         (mLatLong)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public Builder newBuilderForType() {
/* 40090 */       return newBuilder();
/*       */     } public static Builder newBuilder() {
/* 40092 */       return DEFAULT_INSTANCE.toBuilder();
/*       */     }
/*       */     public static Builder newBuilder(mLatLong prototype) {
/* 40095 */       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
/*       */     }
/*       */     
/*       */     public Builder toBuilder() {
/* 40099 */       return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder())
/* 40100 */         .mergeFrom(this);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
/* 40106 */       Builder builder = new Builder(parent);
/* 40107 */       return builder;
/*       */     }
/*       */ 
/*       */     
/*       */     public static final class Builder
/*       */       extends GeneratedMessageV3.Builder<Builder>
/*       */       implements StarLinkMessage.mLatLongOrBuilder
/*       */     {
/*       */       private int bitField0_;
/*       */       
/*       */       private int latitude_;
/*       */       
/*       */       private int longitude_;
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/* 40122 */         return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_mLatLong_descriptor;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
/* 40128 */         return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_mLatLong_fieldAccessorTable
/* 40129 */           .ensureFieldAccessorsInitialized(StarLinkMessage.mLatLong.class, Builder.class);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       private Builder() {
/* 40135 */         maybeForceBuilderInitialization();
/*       */       }
/*       */ 
/*       */       
/*       */       private Builder(GeneratedMessageV3.BuilderParent parent) {
/* 40140 */         super(parent);
/* 40141 */         maybeForceBuilderInitialization();
/*       */       }
/*       */       
/*       */       private void maybeForceBuilderInitialization() {
/* 40145 */         if (StarLinkMessage.mLatLong.alwaysUseFieldBuilders);
/*       */       }
/*       */ 
/*       */       
/*       */       public Builder clear() {
/* 40150 */         super.clear();
/* 40151 */         this.latitude_ = 0;
/* 40152 */         this.bitField0_ &= 0xFFFFFFFE;
/* 40153 */         this.longitude_ = 0;
/* 40154 */         this.bitField0_ &= 0xFFFFFFFD;
/* 40155 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Descriptors.Descriptor getDescriptorForType() {
/* 40161 */         return StarLinkMessage.internal_static_org_traccar_protobuf_starlink_mLatLong_descriptor;
/*       */       }
/*       */ 
/*       */       
/*       */       public StarLinkMessage.mLatLong getDefaultInstanceForType() {
/* 40166 */         return StarLinkMessage.mLatLong.getDefaultInstance();
/*       */       }
/*       */ 
/*       */       
/*       */       public StarLinkMessage.mLatLong build() {
/* 40171 */         StarLinkMessage.mLatLong result = buildPartial();
/* 40172 */         if (!result.isInitialized()) {
/* 40173 */           throw newUninitializedMessageException(result);
/*       */         }
/* 40175 */         return result;
/*       */       }
/*       */ 
/*       */       
/*       */       public StarLinkMessage.mLatLong buildPartial() {
/* 40180 */         StarLinkMessage.mLatLong result = new StarLinkMessage.mLatLong(this);
/* 40181 */         int from_bitField0_ = this.bitField0_;
/* 40182 */         int to_bitField0_ = 0;
/* 40183 */         if ((from_bitField0_ & 0x1) != 0) {
/* 40184 */           result.latitude_ = this.latitude_;
/* 40185 */           to_bitField0_ |= 0x1;
/*       */         } 
/* 40187 */         if ((from_bitField0_ & 0x2) != 0) {
/* 40188 */           result.longitude_ = this.longitude_;
/* 40189 */           to_bitField0_ |= 0x2;
/*       */         } 
/* 40191 */         result.bitField0_ = to_bitField0_;
/* 40192 */         onBuilt();
/* 40193 */         return result;
/*       */       }
/*       */ 
/*       */       
/*       */       public Builder clone() {
/* 40198 */         return (Builder)super.clone();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setField(Descriptors.FieldDescriptor field, Object value) {
/* 40204 */         return (Builder)super.setField(field, value);
/*       */       }
/*       */ 
/*       */       
/*       */       public Builder clearField(Descriptors.FieldDescriptor field) {
/* 40209 */         return (Builder)super.clearField(field);
/*       */       }
/*       */ 
/*       */       
/*       */       public Builder clearOneof(Descriptors.OneofDescriptor oneof) {
/* 40214 */         return (Builder)super.clearOneof(oneof);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
/* 40220 */         return (Builder)super.setRepeatedField(field, index, value);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
/* 40226 */         return (Builder)super.addRepeatedField(field, value);
/*       */       }
/*       */       
/*       */       public Builder mergeFrom(Message other) {
/* 40230 */         if (other instanceof StarLinkMessage.mLatLong) {
/* 40231 */           return mergeFrom((StarLinkMessage.mLatLong)other);
/*       */         }
/* 40233 */         super.mergeFrom(other);
/* 40234 */         return this;
/*       */       }
/*       */ 
/*       */       
/*       */       public Builder mergeFrom(StarLinkMessage.mLatLong other) {
/* 40239 */         if (other == StarLinkMessage.mLatLong.getDefaultInstance()) return this; 
/* 40240 */         if (other.hasLatitude()) {
/* 40241 */           setLatitude(other.getLatitude());
/*       */         }
/* 40243 */         if (other.hasLongitude()) {
/* 40244 */           setLongitude(other.getLongitude());
/*       */         }
/* 40246 */         mergeUnknownFields(other.unknownFields);
/* 40247 */         onChanged();
/* 40248 */         return this;
/*       */       }
/*       */ 
/*       */       
/*       */       public final boolean isInitialized() {
/* 40253 */         if (!hasLatitude()) {
/* 40254 */           return false;
/*       */         }
/* 40256 */         if (!hasLongitude()) {
/* 40257 */           return false;
/*       */         }
/* 40259 */         return true;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 40267 */         StarLinkMessage.mLatLong parsedMessage = null;
/*       */         try {
/* 40269 */           parsedMessage = (StarLinkMessage.mLatLong)StarLinkMessage.mLatLong.PARSER.parsePartialFrom(input, extensionRegistry);
/* 40270 */         } catch (InvalidProtocolBufferException e) {
/* 40271 */           parsedMessage = (StarLinkMessage.mLatLong)e.getUnfinishedMessage();
/* 40272 */           throw e.unwrapIOException();
/*       */         } finally {
/* 40274 */           if (parsedMessage != null) {
/* 40275 */             mergeFrom(parsedMessage);
/*       */           }
/*       */         } 
/* 40278 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasLatitude() {
/* 40289 */         return ((this.bitField0_ & 0x1) != 0);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getLatitude() {
/* 40297 */         return this.latitude_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setLatitude(int value) {
/* 40305 */         this.bitField0_ |= 0x1;
/* 40306 */         this.latitude_ = value;
/* 40307 */         onChanged();
/* 40308 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearLatitude() {
/* 40315 */         this.bitField0_ &= 0xFFFFFFFE;
/* 40316 */         this.latitude_ = 0;
/* 40317 */         onChanged();
/* 40318 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasLongitude() {
/* 40328 */         return ((this.bitField0_ & 0x2) != 0);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getLongitude() {
/* 40336 */         return this.longitude_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setLongitude(int value) {
/* 40344 */         this.bitField0_ |= 0x2;
/* 40345 */         this.longitude_ = value;
/* 40346 */         onChanged();
/* 40347 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearLongitude() {
/* 40354 */         this.bitField0_ &= 0xFFFFFFFD;
/* 40355 */         this.longitude_ = 0;
/* 40356 */         onChanged();
/* 40357 */         return this;
/*       */       }
/*       */ 
/*       */       
/*       */       public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
/* 40362 */         return (Builder)super.setUnknownFields(unknownFields);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
/* 40368 */         return (Builder)super.mergeUnknownFields(unknownFields);
/*       */       }
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 40378 */     private static final mLatLong DEFAULT_INSTANCE = new mLatLong();
/*       */ 
/*       */     
/*       */     public static mLatLong getDefaultInstance() {
/* 40382 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */     
/*       */     @Deprecated
/* 40386 */     public static final Parser<mLatLong> PARSER = (Parser<mLatLong>)new AbstractParser<mLatLong>()
/*       */       {
/*       */ 
/*       */         
/*       */         public StarLinkMessage.mLatLong parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException
/*       */         {
/* 40392 */           return new StarLinkMessage.mLatLong(input, extensionRegistry);
/*       */         }
/*       */       };
/*       */     
/*       */     public static Parser<mLatLong> parser() {
/* 40397 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public Parser<mLatLong> getParserForType() {
/* 40402 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public mLatLong getDefaultInstanceForType() {
/* 40407 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public static Descriptors.FileDescriptor getDescriptor() {
/* 40540 */     return descriptor;
/*       */   }
/*       */ 
/*       */   
/*       */   static {
/* 40545 */     String[] descriptorData = { "\n\025StarLinkMessage.proto\022\035org.traccar.protobuf.starlink\"\001\n\020StarLink_Message\022\013\n\003FID\030\001 \001(\r\022\f\n\004IMEI\030\002 \001(\t\022\013\n\003UID\030\003 \001(\r\022\016\n\006AckRef\030\004 \001(\r\0228\n\007Message\030\005 \003(\0132'.org.traccar.protobuf.starlink.mMessage\"ó\013\n\bmMessage\022\027\n\017ReferenceNumber\030d \001(\004\022\033\n\023ReferenceNumberDiff\030e \001(\r\022\023\n\013MessageType\030f \001(\r\0226\n\006WakeUp\030\001 \001(\0132&.org.traccar.protobuf.starlink.mWakeUp\022B\n\fConfirmation\030\002 \001(\0132,.org.traccar.protobuf.starlink.mConfirmation\022D\n\rParamResponse\030\003 \001(\0132-.org.traccar.protobuf.starlink.mParamResponse\022@\n\013EventReport\030\006 \001(\0132+.org.traccar.protobuf.starlink.mEventReport\0228\n\007GeoZone\030\n \001(\0132'.org.traccar.protobuf.starlink.mGeoZone\0228\n\007Outputs\030\f \001(\0132'.org.traccar.protobuf.starlink.mOutputs\022@\n\013EventConfig\030\016 \001(\0132+.org.traccar.protobuf.starlink.mEventConfig\0226\n\006Inputs\030\020 \001(\0132&.org.traccar.protobuf.starlink.mInputs\022@\n\013InputConfig\030\021 \001(\0132+.org.traccar.protobuf.starlink.mInputConfig\022>\n\nSpeedLimit\030\033 \001(\0132*.org.traccar.protobuf.starlink.mSpeedLimit\022D\n\rUnitIDChanged\030\035 \001(\0132-.org.traccar.protobuf.starlink.mUnitIDChanged\022F\n\020GenericDeviceMsg\030\036 \001(\0132,.org.traccar.protobuf.starlink.mGenDeviceMsg\022D\n\017GenericDeviceFW\030# \001(\0132+.org.traccar.protobuf.starlink.mGenDeviceFW\022@\n\013ReadIButton\030* \001(\0132+.org.traccar.protobuf.starlink.mReadIButton\022>\n\nGetPattern\030+ \001(\0132*.org.traccar.protobuf.starlink.mGetPattern\022B\n\016MultiParameter\030- \001(\0132*.org.traccar.protobuf.starlink.mMultiParam\022>\n\nTempConfig\0304 \001(\0132*.org.traccar.protobuf.starlink.mTempConfig\022>\n\nDeviceList\0308 \001(\0132*.org.traccar.protobuf.starlink.mDeviceList\022@\n\013TeachRemote\030: \001(\0132+.org.traccar.protobuf.starlink.mTeachRemote\022B\n\fAuthenticate\030_ \001(\0132,.org.traccar.protobuf.starlink.mAuthenticate\022D\n\017CurrentLocation\030` \001(\0132+.org.traccar.protobuf.starlink.mEventReport\022B\n\fConfigServer\030b \001(\0132,.org.traccar.protobuf.starlink.mConfigServer\"7\n\007mWakeUp\022\023\n\013UnitVersion\030\001 \002(\t\022\027\n\017ProtocolVersion\030\002 \002(\t\"â\001\n\rmConfirmation\022\022\n\nResultCode\030\001 \002(\r\022\027\n\017ReferenceNumber\030\002 \001(\r\022\023\n\013MessageType\030\003 \001(\r\022\024\n\fParameterAck\030\004 \001(\r\022\031\n\021ParametersChanged\030\005 \001(\r\022\030\n\020ParametersFailed\030\006 \001(\r\022\033\n\023ParameterFailedList\030\t \003(\r\022\023\n\013CodesInList\030\007 \001(\r\022\022\n\nEmptySlots\030\b \001(\r\"8\n\016mParamResponse\022\027\n\017ParameterNumber\030\001 \002(\r\022\r\n\005Value\030\002 \002(\t\"Ä\n\n\fmEventReport\022\013\n\003EID\030\001 \001(\r\022\r\n\005EDESC\030\002 \001(\t\022\013\n\003EDT\030\003 \001(\r\022\020\n\bEDT_Diff\030\004 \001(\021\022\013\n\003NXT\030\005 \001(\r\022\f\n\004NXTS\030Q \001(\r\022\022\n\tExtraData\030þ\001 \001(\t\022\013\n\003PDT\030\006 \001(\r\022\020\n\bPDT_Diff\030\007 \001(\021\022\013\n\003LAT\030\b \001(\021\022\020\n\bLAT_Diff\030\t \001(\021\022\f\n\004LONG\030\n \001(\021\022\021\n\tLONG_Diff\030\013 \001(\021\022\013\n\003ALT\030\f \001(\021\022\020\n\bALT_Diff\030\r \001(\021\022\013\n\003SPD\030\016 \001(\r\022\f\n\004SPDK\030\017 \001(\r\022\f\n\004HEAD\030\020 \001(\r\022\f\n\004HDOP\030\021 \001(\r\022\f\n\004VDOP\030\022 \001(\r\022\f\n\004PDOP\030\023 \001(\r\022\013\n\003SAT\030\024 \001(\r\022\f\n\004SATN\030\025 \001(\r\022\f\n\004SATU\030\026 \001(\r\022\013\n\003GSS\030\027 \001(\r\022\f\n\004GSSN\030\030 \001(\r\022\013\n\003FIX\030\031 \001(\r\022\f\n\004LOCA\030\032 \001(\r\022\f\n\004LOCS\030O \001(\r\022\013\n\003ODO\030\033 \001(\r\022\020\n\bODO_Diff\030\034 \001(\021\022\f\n\004ODOD\030\035 \001(\r\022\021\n\tODOD_Diff\030\036 \001(\021\022\013\n\003CID\030\037 \001(\r\022\013\n\003LAC\030  \001(\r\022\013\n\003CSS\030! \001(\r\022\020\n\bCSS_Diff\030\" \001(\021\022\013\n\003CTA\030# \001(\r\022\013\n\003CCN\030$ \001(\r\022\013\n\003JAM\030% \001(\b\022\n\n\002NC\030& \001(\r\022\n\n\002NM\030' \001(\r\022\n\n\002NT\030L \001(\r\022\n\n\002CU\030M \001(\r\022\013\n\003VIN\030( \001(\r\022\020\n\bVIN_Diff\030) \001(\021\022\f\n\004VBAT\030* \001(\r\022\021\n\tVBAT_Diff\030+ \001(\021\022\n\n\002V3\030, \001(\r\022\017\n\007V3_Diff\030- \001(\021\022\n\n\002V4\030. \001(\r\022\017\n\007V4_Diff\030/ \001(\021\022\f\n\004BATH\0300 \001(\r\022\f\n\004BATC\0301 \001(\r\022\f\n\004STRT\0302 \001(\r\022\013\n\003TVI\0303 \001(\021\022\016\n\006Inputs\0304 \001(\r\022\017\n\007DInputs\0305 \001(\r\022\026\n\016IgnitionEngine\0306 \001(\r\022\017\n\007Outputs\0307 \001(\r\022\f\n\004USER\0308 \001(\t\022\f\n\004EDV1\0309 \001(\t\022\f\n\004EDV2\030: \001(\t\022\f\n\004EDV3\030; \001(\t\022\f\n\004EDV4\030< \001(\t\022\013\n\003CV1\030= \001(\021\022\013\n\003CV2\030> \001(\021\022\013\n\003CV3\030? \001(\021\022\013\n\003CV4\030@ \001(\021\022\013\n\003CV5\030R \001(\021\022\013\n\003CV6\030S \001(\021\022\013\n\003CV7\030T \001(\021\022\013\n\003CV8\030U \001(\021\022\013\n\003CV9\030V \001(\021\022\f\n\004CV10\030W \001(\021\022\f\n\004CV11\030X \001(\021\022\f\n\004CV12\030Y \001(\021\022\f\n\004IARM\030A \001(\b\022\013\n\003DID\030B \001(\t\022\013\n\003DAL\030C \001(\t\022\f\n\004DEST\030D \001(\r\022\013\n\003OVM\030I \001(\b\022\013\n\003CFL\030E \001(\r\022\f\n\004CFL2\030P \001(\r\022\013\n\003RPM\030F \001(\r\022\013\n\003DUR\030G \001(\r\022\f\n\004TDUR\030H \001(\r\022\013\n\003IDL\030J \001(\r\022\013\n\003STP\030K \001(\r\022<\n\003TDx\030N \003(\0132/.org.traccar.protobuf.starlink.mEventReport_TDx\"è\002\n\020mEventReport_TDx\022\024\n\fSensorNumber\030\001 \002(\r\022\020\n\bSensorID\030\003 \001(\t\022\023\n\013Temperature\030\004 \001(\021\022\031\n\021Temperature_State\030\002 \001(\r\022\020\n\bHumidity\030\005 \001(\r\022\026\n\016Humidity_State\030\006 \001(\r\022\f\n\004RSSI\030\007 \001(\r\022\022\n\nRSSI_State\030\b \001(\r\022\017\n\007Voltage\030\t \001(\r\022\025\n\rVoltage_State\030\n \001(\r\022\r\n\005Light\030\013 \001(\r\022\023\n\013Light_State\030\f \001(\r\022\024\n\fMagnetSwitch\030\r \001(\r\022\032\n\022MagnetSwitch_State\030\016 \001(\r\022\020\n\bAccident\030\017 \001(\r\022\016\n\006Button\030\020 \001(\r\022\020\n\bMovement\030\021 \001(\r\"f\n\bmGeoZone\022\022\n\nZoneNumber\030\001 \002(\r\0226\n\005Point\030\002 \003(\0132'.org.traccar.protobuf.starlink.mLatLong\022\016\n\006Radius\030\003 \001(\r\"!\n\bmOutputs\022\025\n\rOutputBitmask\030\001 \002(\r\"6\n\fmEventConfig\022\017\n\007EventID\030\001 \002(\r\022\025\n\rConfiguration\030\002 \002(\r\"\037\n\007mInputs\022\024\n\fInputBitmask\030\001 \002(\r\"J\n\fmInputConfig\022\017\n\007InputID\030\001 \002(\r\022\023\n\013DebounceLow\030\002 \002(\r\022\024\n\fDebounceHigh\030\003 \002(\r\"È\001\n\013mSpeedLimit\022\016\n\006Number\030\001 \002(\r\022\016\n\006Active\030\002 \002(\b\022\020\n\bMinSpeed\030\003 \001(\r\022\020\n\bMaxSpeed\030\004 \001(\r\022\020\n\bDuration\030\005 \002(\r\022\026\n\016ReportDuration\030\006 \002(\b\022\023\n\013StartAndEnd\030\007 \001(\b\022\021\n\tAutoTrack\030\b \001(\b\022\025\n\rOutputPattern\030\t \001(\b\022\f\n\004Step\030\n \001(\r\"X\n\016mUnitIDChanged\022\013\n\003FID\030\001 \002(\r\022\f\n\004IMEI\030\002 \002(\t\022\027\n\017PreviousSetting\030\003 \002(\021\022\022\n\nNewSetting\030\004 \002(\021\"A\n\rmGenDeviceMsg\022\020\n\bDeviceID\030\001 \002(\r\022\020\n\bDataType\030\002 \002(\r\022\f\n\004Data\030\003 \001(\t\"G\n\fmGenDeviceFW\022\024\n\fBlockRequest\030\001 \001(\r\022\016\n\006Status\030\002 \001(\r\022\021\n\tMaxBlocks\030\003 \001(\r\" \n\rmConfigServer\022\017\n\007Success\030\001 \002(\b\"/\n\fmReadIButton\022\021\n\tiButtonID\030\001 \002(\t\022\f\n\004Data\030\002 \001(\t\"1\n\013mGetPattern\022\021\n\tPatternID\030\001 \002(\r\022\017\n\007Pattern\030\002 \002(\t\"7\n\013mMultiParam\022\030\n\020ParameterNumbers\030\001 \003(\r\022\016\n\006Values\030\002 \003(\t\"4\n\013mTempConfig\022\023\n\013SensorCount\030\001 \002(\r\022\020\n\bSensorID\030\002 \003(\t\"0\n\013mDeviceList\022\020\n\bDeviceID\030\001 \003(\r\022\017\n\007Version\030\002 \003(\r\"0\n\fmTeachRemote\022\016\n\006RuleID\030\001 \002(\r\022\020\n\bRemoteID\030\002 \001(\r\"Z\n\rmAuthenticate\022\017\n\007Version\030\001 \002(\r\022\r\n\005Token\030\002 \001(\t\022\013\n\003Key\030\003 \001(\r\022\f\n\004Step\030\004 \001(\r\022\016\n\006Digest\030\005 \001(\t\"/\n\bmLatLong\022\020\n\bLatitude\030\001 \002(\021\022\021\n\tLongitude\030\002 \002(\021" };
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 40673 */     descriptor = Descriptors.FileDescriptor.internalBuildGeneratedFileFrom(descriptorData, new Descriptors.FileDescriptor[0]);
/*       */ 
/*       */ 
/*       */     
/* 40677 */     internal_static_org_traccar_protobuf_starlink_StarLink_Message_descriptor = getDescriptor().getMessageTypes().get(0);
/* 40678 */     internal_static_org_traccar_protobuf_starlink_StarLink_Message_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_org_traccar_protobuf_starlink_StarLink_Message_descriptor, new String[] { "FID", "IMEI", "UID", "AckRef", "Message" });
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 40683 */     internal_static_org_traccar_protobuf_starlink_mMessage_descriptor = getDescriptor().getMessageTypes().get(1);
/* 40684 */     internal_static_org_traccar_protobuf_starlink_mMessage_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_org_traccar_protobuf_starlink_mMessage_descriptor, new String[] { "ReferenceNumber", "ReferenceNumberDiff", "MessageType", "WakeUp", "Confirmation", "ParamResponse", "EventReport", "GeoZone", "Outputs", "EventConfig", "Inputs", "InputConfig", "SpeedLimit", "UnitIDChanged", "GenericDeviceMsg", "GenericDeviceFW", "ReadIButton", "GetPattern", "MultiParameter", "TempConfig", "DeviceList", "TeachRemote", "Authenticate", "CurrentLocation", "ConfigServer" });
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 40689 */     internal_static_org_traccar_protobuf_starlink_mWakeUp_descriptor = getDescriptor().getMessageTypes().get(2);
/* 40690 */     internal_static_org_traccar_protobuf_starlink_mWakeUp_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_org_traccar_protobuf_starlink_mWakeUp_descriptor, new String[] { "UnitVersion", "ProtocolVersion" });
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 40695 */     internal_static_org_traccar_protobuf_starlink_mConfirmation_descriptor = getDescriptor().getMessageTypes().get(3);
/* 40696 */     internal_static_org_traccar_protobuf_starlink_mConfirmation_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_org_traccar_protobuf_starlink_mConfirmation_descriptor, new String[] { "ResultCode", "ReferenceNumber", "MessageType", "ParameterAck", "ParametersChanged", "ParametersFailed", "ParameterFailedList", "CodesInList", "EmptySlots" });
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 40701 */     internal_static_org_traccar_protobuf_starlink_mParamResponse_descriptor = getDescriptor().getMessageTypes().get(4);
/* 40702 */     internal_static_org_traccar_protobuf_starlink_mParamResponse_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_org_traccar_protobuf_starlink_mParamResponse_descriptor, new String[] { "ParameterNumber", "Value" });
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 40707 */     internal_static_org_traccar_protobuf_starlink_mEventReport_descriptor = getDescriptor().getMessageTypes().get(5);
/* 40708 */     internal_static_org_traccar_protobuf_starlink_mEventReport_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_org_traccar_protobuf_starlink_mEventReport_descriptor, new String[] { "EID", "EDESC", "EDT", "EDTDiff", "NXT", "NXTS", "ExtraData", "PDT", "PDTDiff", "LAT", "LATDiff", "LONG", "LONGDiff", "ALT", "ALTDiff", "SPD", "SPDK", "HEAD", "HDOP", "VDOP", "PDOP", "SAT", "SATN", "SATU", "GSS", "GSSN", "FIX", "LOCA", "LOCS", "ODO", "ODODiff", "ODOD", "ODODDiff", "CID", "LAC", "CSS", "CSSDiff", "CTA", "CCN", "JAM", "NC", "NM", "NT", "CU", "VIN", "VINDiff", "VBAT", "VBATDiff", "V3", "V3Diff", "V4", "V4Diff", "BATH", "BATC", "STRT", "TVI", "Inputs", "DInputs", "IgnitionEngine", "Outputs", "USER", "EDV1", "EDV2", "EDV3", "EDV4", "CV1", "CV2", "CV3", "CV4", "CV5", "CV6", "CV7", "CV8", "CV9", "CV10", "CV11", "CV12", "IARM", "DID", "DAL", "DEST", "OVM", "CFL", "CFL2", "RPM", "DUR", "TDUR", "IDL", "STP", "TDx" });
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 40713 */     internal_static_org_traccar_protobuf_starlink_mEventReport_TDx_descriptor = getDescriptor().getMessageTypes().get(6);
/* 40714 */     internal_static_org_traccar_protobuf_starlink_mEventReport_TDx_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_org_traccar_protobuf_starlink_mEventReport_TDx_descriptor, new String[] { "SensorNumber", "SensorID", "Temperature", "TemperatureState", "Humidity", "HumidityState", "RSSI", "RSSIState", "Voltage", "VoltageState", "Light", "LightState", "MagnetSwitch", "MagnetSwitchState", "Accident", "Button", "Movement" });
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 40719 */     internal_static_org_traccar_protobuf_starlink_mGeoZone_descriptor = getDescriptor().getMessageTypes().get(7);
/* 40720 */     internal_static_org_traccar_protobuf_starlink_mGeoZone_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_org_traccar_protobuf_starlink_mGeoZone_descriptor, new String[] { "ZoneNumber", "Point", "Radius" });
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 40725 */     internal_static_org_traccar_protobuf_starlink_mOutputs_descriptor = getDescriptor().getMessageTypes().get(8);
/* 40726 */     internal_static_org_traccar_protobuf_starlink_mOutputs_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_org_traccar_protobuf_starlink_mOutputs_descriptor, new String[] { "OutputBitmask" });
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 40731 */     internal_static_org_traccar_protobuf_starlink_mEventConfig_descriptor = getDescriptor().getMessageTypes().get(9);
/* 40732 */     internal_static_org_traccar_protobuf_starlink_mEventConfig_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_org_traccar_protobuf_starlink_mEventConfig_descriptor, new String[] { "EventID", "Configuration" });
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 40737 */     internal_static_org_traccar_protobuf_starlink_mInputs_descriptor = getDescriptor().getMessageTypes().get(10);
/* 40738 */     internal_static_org_traccar_protobuf_starlink_mInputs_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_org_traccar_protobuf_starlink_mInputs_descriptor, new String[] { "InputBitmask" });
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 40743 */     internal_static_org_traccar_protobuf_starlink_mInputConfig_descriptor = getDescriptor().getMessageTypes().get(11);
/* 40744 */     internal_static_org_traccar_protobuf_starlink_mInputConfig_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_org_traccar_protobuf_starlink_mInputConfig_descriptor, new String[] { "InputID", "DebounceLow", "DebounceHigh" });
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 40749 */     internal_static_org_traccar_protobuf_starlink_mSpeedLimit_descriptor = getDescriptor().getMessageTypes().get(12);
/* 40750 */     internal_static_org_traccar_protobuf_starlink_mSpeedLimit_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_org_traccar_protobuf_starlink_mSpeedLimit_descriptor, new String[] { "Number", "Active", "MinSpeed", "MaxSpeed", "Duration", "ReportDuration", "StartAndEnd", "AutoTrack", "OutputPattern", "Step" });
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 40755 */     internal_static_org_traccar_protobuf_starlink_mUnitIDChanged_descriptor = getDescriptor().getMessageTypes().get(13);
/* 40756 */     internal_static_org_traccar_protobuf_starlink_mUnitIDChanged_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_org_traccar_protobuf_starlink_mUnitIDChanged_descriptor, new String[] { "FID", "IMEI", "PreviousSetting", "NewSetting" });
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 40761 */     internal_static_org_traccar_protobuf_starlink_mGenDeviceMsg_descriptor = getDescriptor().getMessageTypes().get(14);
/* 40762 */     internal_static_org_traccar_protobuf_starlink_mGenDeviceMsg_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_org_traccar_protobuf_starlink_mGenDeviceMsg_descriptor, new String[] { "DeviceID", "DataType", "Data" });
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 40767 */     internal_static_org_traccar_protobuf_starlink_mGenDeviceFW_descriptor = getDescriptor().getMessageTypes().get(15);
/* 40768 */     internal_static_org_traccar_protobuf_starlink_mGenDeviceFW_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_org_traccar_protobuf_starlink_mGenDeviceFW_descriptor, new String[] { "BlockRequest", "Status", "MaxBlocks" });
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 40773 */     internal_static_org_traccar_protobuf_starlink_mConfigServer_descriptor = getDescriptor().getMessageTypes().get(16);
/* 40774 */     internal_static_org_traccar_protobuf_starlink_mConfigServer_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_org_traccar_protobuf_starlink_mConfigServer_descriptor, new String[] { "Success" });
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 40779 */     internal_static_org_traccar_protobuf_starlink_mReadIButton_descriptor = getDescriptor().getMessageTypes().get(17);
/* 40780 */     internal_static_org_traccar_protobuf_starlink_mReadIButton_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_org_traccar_protobuf_starlink_mReadIButton_descriptor, new String[] { "IButtonID", "Data" });
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 40785 */     internal_static_org_traccar_protobuf_starlink_mGetPattern_descriptor = getDescriptor().getMessageTypes().get(18);
/* 40786 */     internal_static_org_traccar_protobuf_starlink_mGetPattern_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_org_traccar_protobuf_starlink_mGetPattern_descriptor, new String[] { "PatternID", "Pattern" });
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 40791 */     internal_static_org_traccar_protobuf_starlink_mMultiParam_descriptor = getDescriptor().getMessageTypes().get(19);
/* 40792 */     internal_static_org_traccar_protobuf_starlink_mMultiParam_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_org_traccar_protobuf_starlink_mMultiParam_descriptor, new String[] { "ParameterNumbers", "Values" });
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 40797 */     internal_static_org_traccar_protobuf_starlink_mTempConfig_descriptor = getDescriptor().getMessageTypes().get(20);
/* 40798 */     internal_static_org_traccar_protobuf_starlink_mTempConfig_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_org_traccar_protobuf_starlink_mTempConfig_descriptor, new String[] { "SensorCount", "SensorID" });
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 40803 */     internal_static_org_traccar_protobuf_starlink_mDeviceList_descriptor = getDescriptor().getMessageTypes().get(21);
/* 40804 */     internal_static_org_traccar_protobuf_starlink_mDeviceList_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_org_traccar_protobuf_starlink_mDeviceList_descriptor, new String[] { "DeviceID", "Version" });
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 40809 */     internal_static_org_traccar_protobuf_starlink_mTeachRemote_descriptor = getDescriptor().getMessageTypes().get(22);
/* 40810 */     internal_static_org_traccar_protobuf_starlink_mTeachRemote_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_org_traccar_protobuf_starlink_mTeachRemote_descriptor, new String[] { "RuleID", "RemoteID" });
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 40815 */     internal_static_org_traccar_protobuf_starlink_mAuthenticate_descriptor = getDescriptor().getMessageTypes().get(23);
/* 40816 */     internal_static_org_traccar_protobuf_starlink_mAuthenticate_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_org_traccar_protobuf_starlink_mAuthenticate_descriptor, new String[] { "Version", "Token", "Key", "Step", "Digest" });
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 40821 */     internal_static_org_traccar_protobuf_starlink_mLatLong_descriptor = getDescriptor().getMessageTypes().get(24);
/* 40822 */     internal_static_org_traccar_protobuf_starlink_mLatLong_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_org_traccar_protobuf_starlink_mLatLong_descriptor, new String[] { "Latitude", "Longitude" });
/*       */   } }


/* Location:              C:\User\\user\Documents\Ensurity Mobile [Client]\Latest App\traccar\tracker-server.jar!\org\traccar\protobuf\starlink\StarLinkMessage.class
 * Java compiler version: 8 (52.0)
 * JD-Core Version:       1.1.3
 */