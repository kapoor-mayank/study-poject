/*       */ package org.traccar.protobuf.dolphin.Messages;public final class DolphinMessages { private static final Descriptors.Descriptor internal_static_org_traccar_protobuf_dolphin_Messages_IOData_descriptor; private static final GeneratedMessageV3.FieldAccessorTable internal_static_org_traccar_protobuf_dolphin_Messages_IOData_fieldAccessorTable; private static final Descriptors.Descriptor internal_static_org_traccar_protobuf_dolphin_Messages_DataPoint_descriptor; private static final GeneratedMessageV3.FieldAccessorTable internal_static_org_traccar_protobuf_dolphin_Messages_DataPoint_fieldAccessorTable; private static final Descriptors.Descriptor internal_static_org_traccar_protobuf_dolphin_Messages_DataPackRequest_descriptor; private static final GeneratedMessageV3.FieldAccessorTable internal_static_org_traccar_protobuf_dolphin_Messages_DataPackRequest_fieldAccessorTable; private static final Descriptors.Descriptor internal_static_org_traccar_protobuf_dolphin_Messages_DataPackResponse_descriptor; private static final GeneratedMessageV3.FieldAccessorTable internal_static_org_traccar_protobuf_dolphin_Messages_DataPackResponse_fieldAccessorTable; private static final Descriptors.Descriptor internal_static_org_traccar_protobuf_dolphin_Messages_DeviceInfo_descriptor; private static final GeneratedMessageV3.FieldAccessorTable internal_static_org_traccar_protobuf_dolphin_Messages_DeviceInfo_fieldAccessorTable; private static final Descriptors.Descriptor internal_static_org_traccar_protobuf_dolphin_Messages_ConfigSetRequest_descriptor; private static final GeneratedMessageV3.FieldAccessorTable internal_static_org_traccar_protobuf_dolphin_Messages_ConfigSetRequest_fieldAccessorTable; private static final Descriptors.Descriptor internal_static_org_traccar_protobuf_dolphin_Messages_ConfigSetResponse_descriptor; private static final GeneratedMessageV3.FieldAccessorTable internal_static_org_traccar_protobuf_dolphin_Messages_ConfigSetResponse_fieldAccessorTable; private static final Descriptors.Descriptor internal_static_org_traccar_protobuf_dolphin_Messages_ConfigGetRequest_descriptor; private static final GeneratedMessageV3.FieldAccessorTable internal_static_org_traccar_protobuf_dolphin_Messages_ConfigGetRequest_fieldAccessorTable; private static final Descriptors.Descriptor internal_static_org_traccar_protobuf_dolphin_Messages_ConfigGetResponse_descriptor; private static final GeneratedMessageV3.FieldAccessorTable internal_static_org_traccar_protobuf_dolphin_Messages_ConfigGetResponse_fieldAccessorTable; private static final Descriptors.Descriptor internal_static_org_traccar_protobuf_dolphin_Messages_ConfigDiffRequest_descriptor; private static final GeneratedMessageV3.FieldAccessorTable internal_static_org_traccar_protobuf_dolphin_Messages_ConfigDiffRequest_fieldAccessorTable; private static final Descriptors.Descriptor internal_static_org_traccar_protobuf_dolphin_Messages_FirmwareUpdateInfo_Request_descriptor; private static final GeneratedMessageV3.FieldAccessorTable internal_static_org_traccar_protobuf_dolphin_Messages_FirmwareUpdateInfo_Request_fieldAccessorTable; private static final Descriptors.Descriptor internal_static_org_traccar_protobuf_dolphin_Messages_FirmwareUpdateInfo_Response_descriptor; private static final GeneratedMessageV3.FieldAccessorTable internal_static_org_traccar_protobuf_dolphin_Messages_FirmwareUpdateInfo_Response_fieldAccessorTable; private static final Descriptors.Descriptor internal_static_org_traccar_protobuf_dolphin_Messages_FirmwareUpdateResp_descriptor; private static final GeneratedMessageV3.FieldAccessorTable internal_static_org_traccar_protobuf_dolphin_Messages_FirmwareUpdateResp_fieldAccessorTable; private static final Descriptors.Descriptor internal_static_org_traccar_protobuf_dolphin_Messages_FUStartData_descriptor; private static final GeneratedMessageV3.FieldAccessorTable internal_static_org_traccar_protobuf_dolphin_Messages_FUStartData_fieldAccessorTable; private static final Descriptors.Descriptor internal_static_org_traccar_protobuf_dolphin_Messages_FUPackRequest_descriptor; private static final GeneratedMessageV3.FieldAccessorTable internal_static_org_traccar_protobuf_dolphin_Messages_FUPackRequest_fieldAccessorTable; private static final Descriptors.Descriptor internal_static_org_traccar_protobuf_dolphin_Messages_FUPacket_descriptor; private static final GeneratedMessageV3.FieldAccessorTable internal_static_org_traccar_protobuf_dolphin_Messages_FUPacket_fieldAccessorTable; private static final Descriptors.Descriptor internal_static_org_traccar_protobuf_dolphin_Messages_LogMessage_descriptor; private static final GeneratedMessageV3.FieldAccessorTable internal_static_org_traccar_protobuf_dolphin_Messages_LogMessage_fieldAccessorTable; private static final Descriptors.Descriptor internal_static_org_traccar_protobuf_dolphin_Messages_LogPack_descriptor; private static final GeneratedMessageV3.FieldAccessorTable internal_static_org_traccar_protobuf_dolphin_Messages_LogPack_fieldAccessorTable; private static final Descriptors.Descriptor internal_static_org_traccar_protobuf_dolphin_Messages_LogStart_descriptor; private static final GeneratedMessageV3.FieldAccessorTable internal_static_org_traccar_protobuf_dolphin_Messages_LogStart_fieldAccessorTable; private static final Descriptors.Descriptor internal_static_org_traccar_protobuf_dolphin_Messages_FMSData_descriptor; private static final GeneratedMessageV3.FieldAccessorTable internal_static_org_traccar_protobuf_dolphin_Messages_FMSData_fieldAccessorTable; private static final Descriptors.Descriptor internal_static_org_traccar_protobuf_dolphin_Messages_AuthenticateRequest_descriptor; private static final GeneratedMessageV3.FieldAccessorTable internal_static_org_traccar_protobuf_dolphin_Messages_AuthenticateRequest_fieldAccessorTable; private static final Descriptors.Descriptor internal_static_org_traccar_protobuf_dolphin_Messages_AuthenticateResponse_descriptor; private static final GeneratedMessageV3.FieldAccessorTable internal_static_org_traccar_protobuf_dolphin_Messages_AuthenticateResponse_fieldAccessorTable; private static final Descriptors.Descriptor internal_static_org_traccar_protobuf_dolphin_Messages_CommandRequest_descriptor; private static final GeneratedMessageV3.FieldAccessorTable internal_static_org_traccar_protobuf_dolphin_Messages_CommandRequest_fieldAccessorTable; private static final Descriptors.Descriptor internal_static_org_traccar_protobuf_dolphin_Messages_CommandResponse_descriptor; private static final GeneratedMessageV3.FieldAccessorTable internal_static_org_traccar_protobuf_dolphin_Messages_CommandResponse_fieldAccessorTable; private static final Descriptors.Descriptor internal_static_org_traccar_protobuf_dolphin_Messages_USSDData_descriptor; private static final GeneratedMessageV3.FieldAccessorTable internal_static_org_traccar_protobuf_dolphin_Messages_USSDData_fieldAccessorTable; private static final Descriptors.Descriptor internal_static_org_traccar_protobuf_dolphin_Messages_CrashAccelData_descriptor; private static final GeneratedMessageV3.FieldAccessorTable internal_static_org_traccar_protobuf_dolphin_Messages_CrashAccelData_fieldAccessorTable; private static final Descriptors.Descriptor internal_static_org_traccar_protobuf_dolphin_Messages_CrashData_descriptor; private static final GeneratedMessageV3.FieldAccessorTable internal_static_org_traccar_protobuf_dolphin_Messages_CrashData_fieldAccessorTable; private static final Descriptors.Descriptor internal_static_org_traccar_protobuf_dolphin_Messages_CrashDataResponse_descriptor; private static final GeneratedMessageV3.FieldAccessorTable internal_static_org_traccar_protobuf_dolphin_Messages_CrashDataResponse_fieldAccessorTable; private static final Descriptors.Descriptor internal_static_org_traccar_protobuf_dolphin_Messages_DTCResposne_descriptor;
/*       */   private static final GeneratedMessageV3.FieldAccessorTable internal_static_org_traccar_protobuf_dolphin_Messages_DTCResposne_fieldAccessorTable;
/*       */   private static final Descriptors.Descriptor internal_static_org_traccar_protobuf_dolphin_Messages_DTCRequest_descriptor;
/*       */   private static final GeneratedMessageV3.FieldAccessorTable internal_static_org_traccar_protobuf_dolphin_Messages_DTCRequest_fieldAccessorTable;
/*       */   private static final Descriptors.Descriptor internal_static_org_traccar_protobuf_dolphin_Messages_DTCRecord_descriptor;
/*       */   private static final GeneratedMessageV3.FieldAccessorTable internal_static_org_traccar_protobuf_dolphin_Messages_DTCRecord_fieldAccessorTable;
/*       */   private static final Descriptors.Descriptor internal_static_org_traccar_protobuf_dolphin_Messages_DTCCode_descriptor;
/*       */   private static final GeneratedMessageV3.FieldAccessorTable internal_static_org_traccar_protobuf_dolphin_Messages_DTCCode_fieldAccessorTable;
/*       */   private static Descriptors.FileDescriptor descriptor;
/*       */   
/*       */   public static void registerAllExtensions(ExtensionRegistryLite registry) {}
/*       */   
/*       */   public static void registerAllExtensions(ExtensionRegistry registry) {
/*    14 */     registerAllExtensions((ExtensionRegistryLite)registry);
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public enum MessageType
/*       */     implements ProtocolMessageEnum
/*       */   {
/*    33 */     Timeout(0),
/*       */ 
/*       */ 
/*       */     
/*    37 */     DataPack_Request(1),
/*       */ 
/*       */ 
/*       */     
/*    41 */     DataPack_Response(2),
/*       */ 
/*       */ 
/*       */     
/*    45 */     Authentication_Request(7),
/*       */ 
/*       */ 
/*       */     
/*    49 */     Authentication_Response(8),
/*       */ 
/*       */ 
/*       */     
/*    53 */     OnlinePosition_Request(9),
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*    61 */     Config_Set_Request(10),
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*    69 */     Config_Set_Response(11),
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*    77 */     Config_Get_Request(12),
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*    85 */     Config_Get_Response(13),
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*    93 */     Config_Diff_Request(14),
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*   101 */     Config_Diff_Response(15),
/*       */ 
/*       */ 
/*       */     
/*   105 */     Config_SSLSetCertificate_Request(16),
/*       */ 
/*       */ 
/*       */     
/*   109 */     Config_SSLSetCertificate_Response(17),
/*       */ 
/*       */ 
/*       */     
/*   113 */     Config_SSLGetStatus_Request(18),
/*       */ 
/*       */ 
/*       */     
/*   117 */     Config_SSLGetStatus_Response(19),
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*   125 */     Firmware_Info_Request(20),
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*   133 */     Firmware_Info_Response(21),
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*   141 */     Firmware_Update_Start_Request(22),
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*   149 */     Firmware_Update_Start_Response(23),
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*   157 */     Firmware_GetPack_Request(24),
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*   165 */     Firmware_GetPack_Response(25),
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*   173 */     Firmware_Update_State(26),
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*   181 */     Ping(30),
/*       */ 
/*       */ 
/*       */     
/*   185 */     Pong(31),
/*       */ 
/*       */ 
/*       */     
/*   189 */     Log_Start(32),
/*       */ 
/*       */ 
/*       */     
/*   193 */     Log_End(33),
/*       */ 
/*       */ 
/*       */     
/*   197 */     Log_Pack(34),
/*       */ 
/*       */ 
/*       */     
/*   201 */     DeviceInfo_Request(35),
/*       */ 
/*       */ 
/*       */     
/*   205 */     DeviceInfo_Response(36),
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*   213 */     Temperature_Request(40),
/*       */ 
/*       */ 
/*       */     
/*   217 */     Temperature_Response(41),
/*       */ 
/*       */ 
/*       */     
/*   221 */     TiltStatus_Request(42),
/*       */ 
/*       */ 
/*       */     
/*   225 */     TiltStatus_Data(43),
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*   233 */     Command_Request(60),
/*       */ 
/*       */ 
/*       */     
/*   237 */     Command_Response(61),
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*   245 */     USSDData_Request(68),
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*   253 */     ExpBoard_Data_Request(70),
/*       */ 
/*       */ 
/*       */     
/*   257 */     ExpBoard_Data_Response(71),
/*       */ 
/*       */ 
/*       */     
/*   261 */     ExpBoard_SetDigital_Request(72),
/*       */ 
/*       */ 
/*       */     
/*   265 */     ExpBoard_SetDigital_Response(73),
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*   273 */     FMS_DataLog_Start(80),
/*       */ 
/*       */ 
/*       */     
/*   277 */     FMS_DataLog_End(81),
/*       */ 
/*       */ 
/*       */     
/*   281 */     FMS_DataLog_Data(82),
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*   289 */     Crash_Data_Request(90),
/*       */ 
/*       */ 
/*       */     
/*   293 */     Crash_Data_Response(91),
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*   301 */     SIPAAD_SSL_GetStatus_Request(100),
/*       */ 
/*       */ 
/*       */     
/*   305 */     SIPAAD_SSL_GetStatus_Response(101),
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*   313 */     DiagnosticsTroubleCodes_SaveCodes_Request(110),
/*       */ 
/*       */ 
/*       */     
/*   317 */     DiagnosticsTroubleCodes_SaveCodes_Response(111),
/*   318 */     UNRECOGNIZED(-1);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Timeout_VALUE = 0;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int DataPack_Request_VALUE = 1;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int DataPack_Response_VALUE = 2;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Authentication_Request_VALUE = 7;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Authentication_Response_VALUE = 8;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int OnlinePosition_Request_VALUE = 9;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Config_Set_Request_VALUE = 10;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Config_Set_Response_VALUE = 11;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Config_Get_Request_VALUE = 12;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Config_Get_Response_VALUE = 13;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Config_Diff_Request_VALUE = 14;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Config_Diff_Response_VALUE = 15;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Config_SSLSetCertificate_Request_VALUE = 16;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Config_SSLSetCertificate_Response_VALUE = 17;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Config_SSLGetStatus_Request_VALUE = 18;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Config_SSLGetStatus_Response_VALUE = 19;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Firmware_Info_Request_VALUE = 20;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Firmware_Info_Response_VALUE = 21;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Firmware_Update_Start_Request_VALUE = 22;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Firmware_Update_Start_Response_VALUE = 23;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Firmware_GetPack_Request_VALUE = 24;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Firmware_GetPack_Response_VALUE = 25;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Firmware_Update_State_VALUE = 26;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Ping_VALUE = 30;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Pong_VALUE = 31;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Log_Start_VALUE = 32;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Log_End_VALUE = 33;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Log_Pack_VALUE = 34;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int DeviceInfo_Request_VALUE = 35;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int DeviceInfo_Response_VALUE = 36;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Temperature_Request_VALUE = 40;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Temperature_Response_VALUE = 41;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int TiltStatus_Request_VALUE = 42;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int TiltStatus_Data_VALUE = 43;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Command_Request_VALUE = 60;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Command_Response_VALUE = 61;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int USSDData_Request_VALUE = 68;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int ExpBoard_Data_Request_VALUE = 70;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int ExpBoard_Data_Response_VALUE = 71;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int ExpBoard_SetDigital_Request_VALUE = 72;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int ExpBoard_SetDigital_Response_VALUE = 73;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int FMS_DataLog_Start_VALUE = 80;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int FMS_DataLog_End_VALUE = 81;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int FMS_DataLog_Data_VALUE = 82;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Crash_Data_Request_VALUE = 90;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Crash_Data_Response_VALUE = 91;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int SIPAAD_SSL_GetStatus_Request_VALUE = 100;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int SIPAAD_SSL_GetStatus_Response_VALUE = 101;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int DiagnosticsTroubleCodes_SaveCodes_Request_VALUE = 110;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int DiagnosticsTroubleCodes_SaveCodes_Response_VALUE = 111;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*   698 */     private static final Internal.EnumLiteMap<MessageType> internalValueMap = new Internal.EnumLiteMap<MessageType>()
/*       */       {
/*       */         public DolphinMessages.MessageType findValueByNumber(int number) {
/*   701 */           return DolphinMessages.MessageType.forNumber(number);
/*       */         }
/*       */       };
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*   722 */     private static final MessageType[] VALUES = values(); private final int value; public final int getNumber() { if (this == UNRECOGNIZED)
/*       */         throw new IllegalArgumentException("Can't get the number of an unknown enum value.");  return this.value; }
/*       */     public static MessageType forNumber(int value) { switch (value) { case 0: return Timeout;case 1: return DataPack_Request;case 2: return DataPack_Response;case 7: return Authentication_Request;case 8: return Authentication_Response;case 9: return OnlinePosition_Request;case 10: return Config_Set_Request;case 11: return Config_Set_Response;case 12: return Config_Get_Request;case 13: return Config_Get_Response;case 14: return Config_Diff_Request;case 15: return Config_Diff_Response;case 16: return Config_SSLSetCertificate_Request;case 17: return Config_SSLSetCertificate_Response;case 18: return Config_SSLGetStatus_Request;case 19: return Config_SSLGetStatus_Response;case 20: return Firmware_Info_Request;case 21: return Firmware_Info_Response;case 22: return Firmware_Update_Start_Request;case 23: return Firmware_Update_Start_Response;case 24: return Firmware_GetPack_Request;case 25: return Firmware_GetPack_Response;case 26: return Firmware_Update_State;case 30: return Ping;case 31: return Pong;case 32: return Log_Start;case 33: return Log_End;case 34: return Log_Pack;case 35: return DeviceInfo_Request;case 36: return DeviceInfo_Response;case 40: return Temperature_Request;case 41: return Temperature_Response;case 42: return TiltStatus_Request;case 43: return TiltStatus_Data;case 60: return Command_Request;case 61: return Command_Response;case 68: return USSDData_Request;case 70: return ExpBoard_Data_Request;case 71: return ExpBoard_Data_Response;case 72: return ExpBoard_SetDigital_Request;case 73: return ExpBoard_SetDigital_Response;case 80: return FMS_DataLog_Start;
/*       */         case 81: return FMS_DataLog_End;
/*       */         case 82: return FMS_DataLog_Data;
/*       */         case 90: return Crash_Data_Request;
/*       */         case 91: return Crash_Data_Response;
/*       */         case 100: return SIPAAD_SSL_GetStatus_Request;
/*       */         case 101: return SIPAAD_SSL_GetStatus_Response;
/*       */         case 110: return DiagnosticsTroubleCodes_SaveCodes_Request;
/*       */         case 111: return DiagnosticsTroubleCodes_SaveCodes_Response; }  return null; }
/*       */     public static Internal.EnumLiteMap<MessageType> internalGetValueMap() { return internalValueMap; }
/*       */     static {  }
/*       */     public final Descriptors.EnumValueDescriptor getValueDescriptor() { if (this == UNRECOGNIZED)
/*       */         throw new IllegalStateException("Can't get the descriptor of an unrecognized enum value.");  return getDescriptor().getValues().get(ordinal()); }
/*       */     public final Descriptors.EnumDescriptor getDescriptorForType() { return getDescriptor(); }
/*       */     public static final Descriptors.EnumDescriptor getDescriptor() { return DolphinMessages.getDescriptor().getEnumTypes().get(0); }
/*   739 */     MessageType(int value) { this.value = value; }
/*       */   
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public enum MessageFlags
/*       */     implements ProtocolMessageEnum
/*       */   {
/*   753 */     Flag_None(0),
/*       */ 
/*       */ 
/*       */     
/*   757 */     Flag_Compressed(1),
/*   758 */     UNRECOGNIZED(-1);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Flag_None_VALUE = 0;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Flag_Compressed_VALUE = 1;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*   806 */     private static final Internal.EnumLiteMap<MessageFlags> internalValueMap = new Internal.EnumLiteMap<MessageFlags>()
/*       */       {
/*       */         public DolphinMessages.MessageFlags findValueByNumber(int number) {
/*   809 */           return DolphinMessages.MessageFlags.forNumber(number);
/*       */         }
/*       */       };
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*   830 */     private static final MessageFlags[] VALUES = values(); private final int value; public final int getNumber() { if (this == UNRECOGNIZED)
/*       */         throw new IllegalArgumentException("Can't get the number of an unknown enum value."); 
/*       */       return this.value; }
/*       */     public static MessageFlags forNumber(int value) { switch (value) {
/*       */         case 0:
/*       */           return Flag_None;
/*       */         case 1:
/*       */           return Flag_Compressed;
/*       */       } 
/*       */       return null; }
/*       */     public static Internal.EnumLiteMap<MessageFlags> internalGetValueMap() { return internalValueMap; }
/*       */     static {  }
/*       */     public final Descriptors.EnumValueDescriptor getValueDescriptor() { if (this == UNRECOGNIZED)
/*       */         throw new IllegalStateException("Can't get the descriptor of an unrecognized enum value."); 
/*       */       return getDescriptor().getValues().get(ordinal()); }
/*       */     public final Descriptors.EnumDescriptor getDescriptorForType() { return getDescriptor(); }
/*       */     public static final Descriptors.EnumDescriptor getDescriptor() { return DolphinMessages.getDescriptor().getEnumTypes().get(1); }
/*   847 */     MessageFlags(int value) { this.value = value; }
/*       */   
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public enum DataPackResponseCode
/*       */     implements ProtocolMessageEnum
/*       */   {
/*   861 */     DataPack_Timeout(0),
/*       */ 
/*       */ 
/*       */     
/*   865 */     DataPack_OK(1),
/*       */ 
/*       */ 
/*       */     
/*   869 */     DataPack_UnknownError(2),
/*       */ 
/*       */ 
/*       */     
/*   873 */     DataPack_Decode_Error(3),
/*   874 */     UNRECOGNIZED(-1);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int DataPack_Timeout_VALUE = 0;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int DataPack_OK_VALUE = 1;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int DataPack_UnknownError_VALUE = 2;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int DataPack_Decode_Error_VALUE = 3;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*   932 */     private static final Internal.EnumLiteMap<DataPackResponseCode> internalValueMap = new Internal.EnumLiteMap<DataPackResponseCode>()
/*       */       {
/*       */         public DolphinMessages.DataPackResponseCode findValueByNumber(int number) {
/*   935 */           return DolphinMessages.DataPackResponseCode.forNumber(number);
/*       */         }
/*       */       };
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*   956 */     private static final DataPackResponseCode[] VALUES = values(); private final int value; public final int getNumber() { if (this == UNRECOGNIZED)
/*       */         throw new IllegalArgumentException("Can't get the number of an unknown enum value.");  return this.value; }
/*       */     public static DataPackResponseCode forNumber(int value) { switch (value) { case 0:
/*       */           return DataPack_Timeout;
/*       */         case 1:
/*       */           return DataPack_OK;
/*       */         case 2:
/*       */           return DataPack_UnknownError;
/*       */         case 3:
/*       */           return DataPack_Decode_Error; }
/*       */        return null; }
/*       */     public static Internal.EnumLiteMap<DataPackResponseCode> internalGetValueMap() { return internalValueMap; }
/*       */     static {  }
/*       */     public final Descriptors.EnumValueDescriptor getValueDescriptor() { if (this == UNRECOGNIZED)
/*       */         throw new IllegalStateException("Can't get the descriptor of an unrecognized enum value.");  return getDescriptor().getValues().get(ordinal()); }
/*       */     public final Descriptors.EnumDescriptor getDescriptorForType() { return getDescriptor(); }
/*       */     public static final Descriptors.EnumDescriptor getDescriptor() { return DolphinMessages.getDescriptor().getEnumTypes().get(2); }
/*   973 */     DataPackResponseCode(int value) { this.value = value; }
/*       */   
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public enum GNSSStatus
/*       */     implements ProtocolMessageEnum
/*       */   {
/*   987 */     GNSS_Off(0),
/*       */ 
/*       */ 
/*       */     
/*   991 */     GNSS_NotFixed(1),
/*       */ 
/*       */ 
/*       */     
/*   995 */     GNSS_Fixed(2),
/*       */ 
/*       */ 
/*       */     
/*   999 */     GNSS_Sleep(3),
/*  1000 */     UNRECOGNIZED(-1);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int GNSS_Off_VALUE = 0;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int GNSS_NotFixed_VALUE = 1;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int GNSS_Fixed_VALUE = 2;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int GNSS_Sleep_VALUE = 3;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*  1058 */     private static final Internal.EnumLiteMap<GNSSStatus> internalValueMap = new Internal.EnumLiteMap<GNSSStatus>()
/*       */       {
/*       */         public DolphinMessages.GNSSStatus findValueByNumber(int number) {
/*  1061 */           return DolphinMessages.GNSSStatus.forNumber(number);
/*       */         }
/*       */       };
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*  1082 */     private static final GNSSStatus[] VALUES = values(); private final int value; public final int getNumber() { if (this == UNRECOGNIZED)
/*       */         throw new IllegalArgumentException("Can't get the number of an unknown enum value.");  return this.value; }
/*       */     public static GNSSStatus forNumber(int value) { switch (value) { case 0:
/*       */           return GNSS_Off;
/*       */         case 1:
/*       */           return GNSS_NotFixed;
/*       */         case 2:
/*       */           return GNSS_Fixed;
/*       */         case 3:
/*       */           return GNSS_Sleep; }
/*       */        return null; }
/*       */     public static Internal.EnumLiteMap<GNSSStatus> internalGetValueMap() { return internalValueMap; }
/*       */     static {  }
/*       */     public final Descriptors.EnumValueDescriptor getValueDescriptor() { if (this == UNRECOGNIZED)
/*       */         throw new IllegalStateException("Can't get the descriptor of an unrecognized enum value.");  return getDescriptor().getValues().get(ordinal()); }
/*       */     public final Descriptors.EnumDescriptor getDescriptorForType() { return getDescriptor(); }
/*       */     public static final Descriptors.EnumDescriptor getDescriptor() { return DolphinMessages.getDescriptor().getEnumTypes().get(3); }
/*  1099 */     GNSSStatus(int value) { this.value = value; }
/*       */   
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public enum GNSS_JammingStatus
/*       */     implements ProtocolMessageEnum
/*       */   {
/*  1113 */     GNSS_UnknownJammingStatus(0),
/*       */ 
/*       */ 
/*       */     
/*  1117 */     GNSS_NoJamming(1),
/*       */ 
/*       */ 
/*       */     
/*  1121 */     GNSS_JammingWarning(2),
/*       */ 
/*       */ 
/*       */     
/*  1125 */     GNSS_JammingCritical(3),
/*  1126 */     UNRECOGNIZED(-1);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int GNSS_UnknownJammingStatus_VALUE = 0;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int GNSS_NoJamming_VALUE = 1;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int GNSS_JammingWarning_VALUE = 2;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int GNSS_JammingCritical_VALUE = 3;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*  1184 */     private static final Internal.EnumLiteMap<GNSS_JammingStatus> internalValueMap = new Internal.EnumLiteMap<GNSS_JammingStatus>()
/*       */       {
/*       */         public DolphinMessages.GNSS_JammingStatus findValueByNumber(int number) {
/*  1187 */           return DolphinMessages.GNSS_JammingStatus.forNumber(number);
/*       */         }
/*       */       };
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*  1208 */     private static final GNSS_JammingStatus[] VALUES = values(); private final int value; public final int getNumber() { if (this == UNRECOGNIZED)
/*       */         throw new IllegalArgumentException("Can't get the number of an unknown enum value.");  return this.value; }
/*       */     public static GNSS_JammingStatus forNumber(int value) { switch (value) { case 0:
/*       */           return GNSS_UnknownJammingStatus;
/*       */         case 1:
/*       */           return GNSS_NoJamming;
/*       */         case 2:
/*       */           return GNSS_JammingWarning;
/*       */         case 3:
/*       */           return GNSS_JammingCritical; }
/*       */        return null; }
/*       */     public static Internal.EnumLiteMap<GNSS_JammingStatus> internalGetValueMap() { return internalValueMap; }
/*       */     static {  }
/*       */     public final Descriptors.EnumValueDescriptor getValueDescriptor() { if (this == UNRECOGNIZED)
/*       */         throw new IllegalStateException("Can't get the descriptor of an unrecognized enum value.");  return getDescriptor().getValues().get(ordinal()); }
/*       */     public final Descriptors.EnumDescriptor getDescriptorForType() { return getDescriptor(); }
/*       */     public static final Descriptors.EnumDescriptor getDescriptor() { return DolphinMessages.getDescriptor().getEnumTypes().get(4); }
/*  1225 */     GNSS_JammingStatus(int value) { this.value = value; }
/*       */   
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public enum ModemStatus
/*       */     implements ProtocolMessageEnum
/*       */   {
/*  1239 */     ModemStatus_Off(0),
/*       */ 
/*       */ 
/*       */     
/*  1243 */     ModemStatus_NotRegistered(1),
/*       */ 
/*       */ 
/*       */     
/*  1247 */     ModemStatus_Searching(2),
/*       */ 
/*       */ 
/*       */     
/*  1251 */     ModemStatus_Registered(3),
/*       */ 
/*       */ 
/*       */     
/*  1255 */     ModemStatus_Roaming(4),
/*  1256 */     UNRECOGNIZED(-1);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int ModemStatus_Off_VALUE = 0;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int ModemStatus_NotRegistered_VALUE = 1;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int ModemStatus_Searching_VALUE = 2;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int ModemStatus_Registered_VALUE = 3;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int ModemStatus_Roaming_VALUE = 4;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*  1319 */     private static final Internal.EnumLiteMap<ModemStatus> internalValueMap = new Internal.EnumLiteMap<ModemStatus>()
/*       */       {
/*       */         public DolphinMessages.ModemStatus findValueByNumber(int number) {
/*  1322 */           return DolphinMessages.ModemStatus.forNumber(number);
/*       */         }
/*       */       };
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*  1343 */     private static final ModemStatus[] VALUES = values(); private final int value; public final int getNumber() { if (this == UNRECOGNIZED)
/*       */         throw new IllegalArgumentException("Can't get the number of an unknown enum value.");  return this.value; }
/*       */     public static ModemStatus forNumber(int value) { switch (value) { case 0: return ModemStatus_Off;
/*       */         case 1:
/*       */           return ModemStatus_NotRegistered;
/*       */         case 2:
/*       */           return ModemStatus_Searching;
/*       */         case 3:
/*       */           return ModemStatus_Registered;
/*       */         case 4:
/*       */           return ModemStatus_Roaming; }  return null; }
/*       */     public static Internal.EnumLiteMap<ModemStatus> internalGetValueMap() { return internalValueMap; }
/*       */     static {  }
/*       */     public final Descriptors.EnumValueDescriptor getValueDescriptor() { if (this == UNRECOGNIZED)
/*       */         throw new IllegalStateException("Can't get the descriptor of an unrecognized enum value.");  return getDescriptor().getValues().get(ordinal()); }
/*       */     public final Descriptors.EnumDescriptor getDescriptorForType() { return getDescriptor(); }
/*       */     public static final Descriptors.EnumDescriptor getDescriptor() { return DolphinMessages.getDescriptor().getEnumTypes().get(5); }
/*  1360 */     ModemStatus(int value) { this.value = value; }
/*       */   
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public enum SIMStatus
/*       */     implements ProtocolMessageEnum
/*       */   {
/*  1374 */     SIM_NotInserted(0),
/*       */ 
/*       */ 
/*       */     
/*  1378 */     SIM_Ready(1),
/*       */ 
/*       */ 
/*       */     
/*  1382 */     SIM_PIN_REQ(2),
/*       */ 
/*       */ 
/*       */     
/*  1386 */     SIM_PUK_REQ(3),
/*       */ 
/*       */ 
/*       */     
/*  1390 */     SIM_PH_PIN_REQ(4),
/*       */ 
/*       */ 
/*       */     
/*  1394 */     SIM_PH_PUK_REQ(5),
/*       */ 
/*       */ 
/*       */     
/*  1398 */     SIM_PIN2_REQ(6),
/*       */ 
/*       */ 
/*       */     
/*  1402 */     SIM_PUK2_REQ(7),
/*       */ 
/*       */ 
/*       */     
/*  1406 */     SIM_Busy(8),
/*       */ 
/*       */ 
/*       */     
/*  1410 */     SIM_NotReady(9),
/*       */ 
/*       */ 
/*       */     
/*  1414 */     SIM_Unspecified(10),
/*  1415 */     UNRECOGNIZED(-1);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int SIM_NotInserted_VALUE = 0;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int SIM_Ready_VALUE = 1;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int SIM_PIN_REQ_VALUE = 2;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int SIM_PUK_REQ_VALUE = 3;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int SIM_PH_PIN_REQ_VALUE = 4;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int SIM_PH_PUK_REQ_VALUE = 5;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int SIM_PIN2_REQ_VALUE = 6;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int SIM_PUK2_REQ_VALUE = 7;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int SIM_Busy_VALUE = 8;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int SIM_NotReady_VALUE = 9;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int SIM_Unspecified_VALUE = 10;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*  1508 */     private static final Internal.EnumLiteMap<SIMStatus> internalValueMap = new Internal.EnumLiteMap<SIMStatus>()
/*       */       {
/*       */         public DolphinMessages.SIMStatus findValueByNumber(int number) {
/*  1511 */           return DolphinMessages.SIMStatus.forNumber(number);
/*       */         }
/*       */       };
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*  1532 */     private static final SIMStatus[] VALUES = values(); private final int value; public final int getNumber() { if (this == UNRECOGNIZED)
/*       */         throw new IllegalArgumentException("Can't get the number of an unknown enum value.");  return this.value; }
/*       */     public static SIMStatus forNumber(int value) { switch (value) { case 0: return SIM_NotInserted;case 1: return SIM_Ready;case 2: return SIM_PIN_REQ;
/*       */         case 3: return SIM_PUK_REQ;
/*       */         case 4: return SIM_PH_PIN_REQ;
/*       */         case 5: return SIM_PH_PUK_REQ;
/*       */         case 6: return SIM_PIN2_REQ;
/*       */         case 7: return SIM_PUK2_REQ;
/*       */         case 8: return SIM_Busy;
/*       */         case 9: return SIM_NotReady;
/*       */         case 10: return SIM_Unspecified; }  return null; }
/*       */     public static Internal.EnumLiteMap<SIMStatus> internalGetValueMap() { return internalValueMap; }
/*       */     static {  }
/*       */     public final Descriptors.EnumValueDescriptor getValueDescriptor() { if (this == UNRECOGNIZED)
/*       */         throw new IllegalStateException("Can't get the descriptor of an unrecognized enum value.");  return getDescriptor().getValues().get(ordinal()); }
/*       */     public final Descriptors.EnumDescriptor getDescriptorForType() { return getDescriptor(); }
/*       */     public static final Descriptors.EnumDescriptor getDescriptor() { return DolphinMessages.getDescriptor().getEnumTypes().get(6); }
/*  1549 */     SIMStatus(int value) { this.value = value; }
/*       */   
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public enum BluetoothStatus
/*       */     implements ProtocolMessageEnum
/*       */   {
/*  1563 */     BL_Off(0),
/*       */ 
/*       */ 
/*       */     
/*  1567 */     BL_OnHidden(1),
/*       */ 
/*       */ 
/*       */     
/*  1571 */     BL_OnVisible(2),
/*  1572 */     UNRECOGNIZED(-1);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int BL_Off_VALUE = 0;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int BL_OnHidden_VALUE = 1;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int BL_OnVisible_VALUE = 2;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*  1625 */     private static final Internal.EnumLiteMap<BluetoothStatus> internalValueMap = new Internal.EnumLiteMap<BluetoothStatus>()
/*       */       {
/*       */         public DolphinMessages.BluetoothStatus findValueByNumber(int number) {
/*  1628 */           return DolphinMessages.BluetoothStatus.forNumber(number);
/*       */         }
/*       */       };
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*  1649 */     private static final BluetoothStatus[] VALUES = values(); private final int value; public final int getNumber() { if (this == UNRECOGNIZED)
/*       */         throw new IllegalArgumentException("Can't get the number of an unknown enum value.");  return this.value; }
/*       */     public static BluetoothStatus forNumber(int value) { switch (value) {
/*       */         case 0:
/*       */           return BL_Off;
/*       */         case 1:
/*       */           return BL_OnHidden;
/*       */         case 2:
/*       */           return BL_OnVisible;
/*       */       }  return null; }
/*       */     public static Internal.EnumLiteMap<BluetoothStatus> internalGetValueMap() { return internalValueMap; }
/*       */     static {  }
/*       */     public final Descriptors.EnumValueDescriptor getValueDescriptor() { if (this == UNRECOGNIZED)
/*       */         throw new IllegalStateException("Can't get the descriptor of an unrecognized enum value."); 
/*       */       return getDescriptor().getValues().get(ordinal()); }
/*       */     public final Descriptors.EnumDescriptor getDescriptorForType() { return getDescriptor(); }
/*       */     public static final Descriptors.EnumDescriptor getDescriptor() { return DolphinMessages.getDescriptor().getEnumTypes().get(7); }
/*  1666 */     BluetoothStatus(int value) { this.value = value; }
/*       */   
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public enum BluetoothExtDeviceStatus
/*       */     implements ProtocolMessageEnum
/*       */   {
/*  1680 */     BLExt_None(0),
/*       */ 
/*       */ 
/*       */     
/*  1684 */     BLExt_Scanning(1),
/*       */ 
/*       */ 
/*       */     
/*  1688 */     BLExt_Pairing(2),
/*       */ 
/*       */ 
/*       */     
/*  1692 */     BLExt_WaitForPair(3),
/*       */ 
/*       */ 
/*       */     
/*  1696 */     BLExt_Connecting(4),
/*       */ 
/*       */ 
/*       */     
/*  1700 */     BLExt_Connected(5),
/*  1701 */     UNRECOGNIZED(-1);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int BLExt_None_VALUE = 0;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int BLExt_Scanning_VALUE = 1;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int BLExt_Pairing_VALUE = 2;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int BLExt_WaitForPair_VALUE = 3;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int BLExt_Connecting_VALUE = 4;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int BLExt_Connected_VALUE = 5;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*  1769 */     private static final Internal.EnumLiteMap<BluetoothExtDeviceStatus> internalValueMap = new Internal.EnumLiteMap<BluetoothExtDeviceStatus>()
/*       */       {
/*       */         public DolphinMessages.BluetoothExtDeviceStatus findValueByNumber(int number) {
/*  1772 */           return DolphinMessages.BluetoothExtDeviceStatus.forNumber(number);
/*       */         }
/*       */       };
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*  1793 */     private static final BluetoothExtDeviceStatus[] VALUES = values(); private final int value; public final int getNumber() { if (this == UNRECOGNIZED)
/*       */         throw new IllegalArgumentException("Can't get the number of an unknown enum value.");  return this.value; }
/*       */     public static BluetoothExtDeviceStatus forNumber(int value) { switch (value) { case 0: return BLExt_None;
/*       */         case 1: return BLExt_Scanning;
/*       */         case 2: return BLExt_Pairing;
/*       */         case 3:
/*       */           return BLExt_WaitForPair;
/*       */         case 4:
/*       */           return BLExt_Connecting;
/*       */         case 5:
/*       */           return BLExt_Connected; }  return null; }
/*       */     public static Internal.EnumLiteMap<BluetoothExtDeviceStatus> internalGetValueMap() { return internalValueMap; }
/*       */     static {  }
/*       */     public final Descriptors.EnumValueDescriptor getValueDescriptor() { if (this == UNRECOGNIZED)
/*       */         throw new IllegalStateException("Can't get the descriptor of an unrecognized enum value.");  return getDescriptor().getValues().get(ordinal()); }
/*       */     public final Descriptors.EnumDescriptor getDescriptorForType() { return getDescriptor(); }
/*       */     public static final Descriptors.EnumDescriptor getDescriptor() { return DolphinMessages.getDescriptor().getEnumTypes().get(8); }
/*  1810 */     BluetoothExtDeviceStatus(int value) { this.value = value; }
/*       */   
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public enum ConfigResponseCode
/*       */     implements ProtocolMessageEnum
/*       */   {
/*  1828 */     OK(0),
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*  1836 */     Unknown_Error(1),
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*  1844 */     Protocol_Error(2),
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*  1852 */     Store_Error(3),
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*  1860 */     Wrong_Password(4),
/*  1861 */     UNRECOGNIZED(-1);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int OK_VALUE = 0;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Unknown_Error_VALUE = 1;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Protocol_Error_VALUE = 2;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Store_Error_VALUE = 3;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Wrong_Password_VALUE = 4;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*  1940 */     private static final Internal.EnumLiteMap<ConfigResponseCode> internalValueMap = new Internal.EnumLiteMap<ConfigResponseCode>()
/*       */       {
/*       */         public DolphinMessages.ConfigResponseCode findValueByNumber(int number) {
/*  1943 */           return DolphinMessages.ConfigResponseCode.forNumber(number);
/*       */         }
/*       */       };
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*  1964 */     private static final ConfigResponseCode[] VALUES = values(); private final int value; public final int getNumber() { if (this == UNRECOGNIZED)
/*       */         throw new IllegalArgumentException("Can't get the number of an unknown enum value.");  return this.value; }
/*       */     public static ConfigResponseCode forNumber(int value) { switch (value) { case 0: return OK;
/*       */         case 1:
/*       */           return Unknown_Error;
/*       */         case 2:
/*       */           return Protocol_Error;
/*       */         case 3:
/*       */           return Store_Error;
/*       */         case 4:
/*       */           return Wrong_Password; }  return null; }
/*       */     public static Internal.EnumLiteMap<ConfigResponseCode> internalGetValueMap() { return internalValueMap; }
/*       */     static {  }
/*       */     public final Descriptors.EnumValueDescriptor getValueDescriptor() { if (this == UNRECOGNIZED)
/*       */         throw new IllegalStateException("Can't get the descriptor of an unrecognized enum value.");  return getDescriptor().getValues().get(ordinal()); }
/*       */     public final Descriptors.EnumDescriptor getDescriptorForType() { return getDescriptor(); }
/*       */     public static final Descriptors.EnumDescriptor getDescriptor() { return DolphinMessages.getDescriptor().getEnumTypes().get(9); }
/*  1981 */     ConfigResponseCode(int value) { this.value = value; }
/*       */   
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public enum FURespCode
/*       */     implements ProtocolMessageEnum
/*       */   {
/*  1999 */     FU_NONE(0),
/*       */ 
/*       */ 
/*       */     
/*  2003 */     FU_UPDATE_START_OK(1),
/*       */ 
/*       */ 
/*       */     
/*  2007 */     FU_UPDATE_START_ERROR(2),
/*       */ 
/*       */ 
/*       */     
/*  2011 */     FU_UPDATE_START_ERROR_SIZE(3),
/*       */ 
/*       */ 
/*       */     
/*  2015 */     FU_GETPACK_OK(4),
/*       */ 
/*       */ 
/*       */     
/*  2019 */     FU_GETPACK_ERROR(5),
/*       */ 
/*       */ 
/*       */     
/*  2023 */     FU_UPDATE_STATE_INSTALLING(6),
/*       */ 
/*       */ 
/*       */     
/*  2027 */     FU_UPDATE_STATE_FINISHED(7),
/*       */ 
/*       */ 
/*       */     
/*  2031 */     FU_UPDATE_STATE_ERROR(8),
/*       */ 
/*       */ 
/*       */     
/*  2035 */     FU_UPDATE_STATE_ERROR_INVALID(9),
/*       */ 
/*       */ 
/*       */     
/*  2039 */     FU_UPDATE_STATE_ERROR_CRC(10),
/*  2040 */     UNRECOGNIZED(-1);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int FU_NONE_VALUE = 0;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int FU_UPDATE_START_OK_VALUE = 1;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int FU_UPDATE_START_ERROR_VALUE = 2;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int FU_UPDATE_START_ERROR_SIZE_VALUE = 3;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int FU_GETPACK_OK_VALUE = 4;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int FU_GETPACK_ERROR_VALUE = 5;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int FU_UPDATE_STATE_INSTALLING_VALUE = 6;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int FU_UPDATE_STATE_FINISHED_VALUE = 7;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int FU_UPDATE_STATE_ERROR_VALUE = 8;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int FU_UPDATE_STATE_ERROR_INVALID_VALUE = 9;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int FU_UPDATE_STATE_ERROR_CRC_VALUE = 10;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*  2137 */     private static final Internal.EnumLiteMap<FURespCode> internalValueMap = new Internal.EnumLiteMap<FURespCode>()
/*       */       {
/*       */         public DolphinMessages.FURespCode findValueByNumber(int number) {
/*  2140 */           return DolphinMessages.FURespCode.forNumber(number);
/*       */         }
/*       */       };
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*  2161 */     private static final FURespCode[] VALUES = values(); private final int value; public final int getNumber() { if (this == UNRECOGNIZED)
/*       */         throw new IllegalArgumentException("Can't get the number of an unknown enum value.");  return this.value; }
/*       */     public static FURespCode forNumber(int value) { switch (value) { case 0: return FU_NONE;case 1: return FU_UPDATE_START_OK;case 2: return FU_UPDATE_START_ERROR;
/*       */         case 3: return FU_UPDATE_START_ERROR_SIZE;
/*       */         case 4: return FU_GETPACK_OK;
/*       */         case 5: return FU_GETPACK_ERROR;
/*       */         case 6: return FU_UPDATE_STATE_INSTALLING;
/*       */         case 7: return FU_UPDATE_STATE_FINISHED;
/*       */         case 8: return FU_UPDATE_STATE_ERROR;
/*       */         case 9: return FU_UPDATE_STATE_ERROR_INVALID;
/*       */         case 10: return FU_UPDATE_STATE_ERROR_CRC; }  return null; }
/*       */     public static Internal.EnumLiteMap<FURespCode> internalGetValueMap() { return internalValueMap; }
/*       */     static {  }
/*       */     public final Descriptors.EnumValueDescriptor getValueDescriptor() { if (this == UNRECOGNIZED)
/*       */         throw new IllegalStateException("Can't get the descriptor of an unrecognized enum value.");  return getDescriptor().getValues().get(ordinal()); }
/*       */     public final Descriptors.EnumDescriptor getDescriptorForType() { return getDescriptor(); }
/*       */     public static final Descriptors.EnumDescriptor getDescriptor() { return DolphinMessages.getDescriptor().getEnumTypes().get(10); }
/*  2178 */     FURespCode(int value) { this.value = value; }
/*       */   
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public enum LogLevel
/*       */     implements ProtocolMessageEnum
/*       */   {
/*  2196 */     LOG_LEVEL_NONE(0),
/*       */ 
/*       */ 
/*       */     
/*  2200 */     LOG_LEVEL_FATAL(1),
/*       */ 
/*       */ 
/*       */     
/*  2204 */     LOG_LEVEL_ERROR(2),
/*       */ 
/*       */ 
/*       */     
/*  2208 */     LOG_LEVEL_WARN(4),
/*       */ 
/*       */ 
/*       */     
/*  2212 */     LOG_LEVEL_INFO(8),
/*       */ 
/*       */ 
/*       */     
/*  2216 */     LOG_LEVEL_DEBUG(16),
/*  2217 */     UNRECOGNIZED(-1);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int LOG_LEVEL_NONE_VALUE = 0;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int LOG_LEVEL_FATAL_VALUE = 1;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int LOG_LEVEL_ERROR_VALUE = 2;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int LOG_LEVEL_WARN_VALUE = 4;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int LOG_LEVEL_INFO_VALUE = 8;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int LOG_LEVEL_DEBUG_VALUE = 16;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*  2285 */     private static final Internal.EnumLiteMap<LogLevel> internalValueMap = new Internal.EnumLiteMap<LogLevel>()
/*       */       {
/*       */         public DolphinMessages.LogLevel findValueByNumber(int number) {
/*  2288 */           return DolphinMessages.LogLevel.forNumber(number);
/*       */         }
/*       */       };
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*  2309 */     private static final LogLevel[] VALUES = values(); private final int value; public final int getNumber() { if (this == UNRECOGNIZED)
/*       */         throw new IllegalArgumentException("Can't get the number of an unknown enum value.");  return this.value; }
/*       */     public static LogLevel forNumber(int value) { switch (value) { case 0: return LOG_LEVEL_NONE;
/*       */         case 1: return LOG_LEVEL_FATAL;
/*       */         case 2: return LOG_LEVEL_ERROR;
/*       */         case 4:
/*       */           return LOG_LEVEL_WARN;
/*       */         case 8:
/*       */           return LOG_LEVEL_INFO;
/*       */         case 16:
/*       */           return LOG_LEVEL_DEBUG; }  return null; }
/*       */     public static Internal.EnumLiteMap<LogLevel> internalGetValueMap() { return internalValueMap; }
/*       */     static {  }
/*       */     public final Descriptors.EnumValueDescriptor getValueDescriptor() { if (this == UNRECOGNIZED)
/*       */         throw new IllegalStateException("Can't get the descriptor of an unrecognized enum value.");  return getDescriptor().getValues().get(ordinal()); }
/*       */     public final Descriptors.EnumDescriptor getDescriptorForType() { return getDescriptor(); }
/*       */     public static final Descriptors.EnumDescriptor getDescriptor() { return DolphinMessages.getDescriptor().getEnumTypes().get(11); }
/*  2326 */     LogLevel(int value) { this.value = value; }
/*       */   
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public enum SystemResetType
/*       */     implements ProtocolMessageEnum
/*       */   {
/*  2344 */     SystemReset_PowerOn(0),
/*       */ 
/*       */ 
/*       */     
/*  2348 */     SystemReset_Sleep(1),
/*       */ 
/*       */ 
/*       */     
/*  2352 */     SystemReset_HardFault(2),
/*       */ 
/*       */ 
/*       */     
/*  2356 */     SystemReset_WatchDog(3),
/*       */ 
/*       */ 
/*       */     
/*  2360 */     SystemReset_FirmwareUpdate(4),
/*       */ 
/*       */ 
/*       */     
/*  2364 */     SystemReset_User(5),
/*  2365 */     UNRECOGNIZED(-1);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int SystemReset_PowerOn_VALUE = 0;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int SystemReset_Sleep_VALUE = 1;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int SystemReset_HardFault_VALUE = 2;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int SystemReset_WatchDog_VALUE = 3;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int SystemReset_FirmwareUpdate_VALUE = 4;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int SystemReset_User_VALUE = 5;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*  2433 */     private static final Internal.EnumLiteMap<SystemResetType> internalValueMap = new Internal.EnumLiteMap<SystemResetType>()
/*       */       {
/*       */         public DolphinMessages.SystemResetType findValueByNumber(int number) {
/*  2436 */           return DolphinMessages.SystemResetType.forNumber(number);
/*       */         }
/*       */       };
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*  2457 */     private static final SystemResetType[] VALUES = values(); private final int value; public final int getNumber() { if (this == UNRECOGNIZED)
/*       */         throw new IllegalArgumentException("Can't get the number of an unknown enum value.");  return this.value; }
/*       */     public static SystemResetType forNumber(int value) { switch (value) { case 0: return SystemReset_PowerOn;
/*       */         case 1: return SystemReset_Sleep;
/*       */         case 2: return SystemReset_HardFault;
/*       */         case 3:
/*       */           return SystemReset_WatchDog;
/*       */         case 4:
/*       */           return SystemReset_FirmwareUpdate;
/*       */         case 5:
/*       */           return SystemReset_User; }  return null; }
/*       */     public static Internal.EnumLiteMap<SystemResetType> internalGetValueMap() { return internalValueMap; }
/*       */     static {  }
/*       */     public final Descriptors.EnumValueDescriptor getValueDescriptor() { if (this == UNRECOGNIZED)
/*       */         throw new IllegalStateException("Can't get the descriptor of an unrecognized enum value.");  return getDescriptor().getValues().get(ordinal()); }
/*       */     public final Descriptors.EnumDescriptor getDescriptorForType() { return getDescriptor(); }
/*       */     public static final Descriptors.EnumDescriptor getDescriptor() { return DolphinMessages.getDescriptor().getEnumTypes().get(12); }
/*  2474 */     SystemResetType(int value) { this.value = value; }
/*       */   
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public enum AuthenticateResponseCode
/*       */     implements ProtocolMessageEnum
/*       */   {
/*  2488 */     Authenticate_Invalid(0),
/*       */ 
/*       */ 
/*       */     
/*  2492 */     Authenticate_Valid(1),
/*  2493 */     UNRECOGNIZED(-1);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Authenticate_Invalid_VALUE = 0;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Authenticate_Valid_VALUE = 1;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*  2541 */     private static final Internal.EnumLiteMap<AuthenticateResponseCode> internalValueMap = new Internal.EnumLiteMap<AuthenticateResponseCode>()
/*       */       {
/*       */         public DolphinMessages.AuthenticateResponseCode findValueByNumber(int number) {
/*  2544 */           return DolphinMessages.AuthenticateResponseCode.forNumber(number);
/*       */         }
/*       */       };
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*  2565 */     private static final AuthenticateResponseCode[] VALUES = values(); private final int value; public final int getNumber() { if (this == UNRECOGNIZED)
/*       */         throw new IllegalArgumentException("Can't get the number of an unknown enum value."); 
/*       */       return this.value; }
/*       */     public static AuthenticateResponseCode forNumber(int value) { switch (value) {
/*       */         case 0:
/*       */           return Authenticate_Invalid;
/*       */         case 1:
/*       */           return Authenticate_Valid;
/*       */       } 
/*       */       return null; }
/*       */     public static Internal.EnumLiteMap<AuthenticateResponseCode> internalGetValueMap() { return internalValueMap; }
/*       */     static {  }
/*       */     public final Descriptors.EnumValueDescriptor getValueDescriptor() { if (this == UNRECOGNIZED)
/*       */         throw new IllegalStateException("Can't get the descriptor of an unrecognized enum value."); 
/*       */       return getDescriptor().getValues().get(ordinal()); }
/*       */     public final Descriptors.EnumDescriptor getDescriptorForType() { return getDescriptor(); }
/*       */     public static final Descriptors.EnumDescriptor getDescriptor() { return DolphinMessages.getDescriptor().getEnumTypes().get(13); }
/*  2582 */     AuthenticateResponseCode(int value) { this.value = value; }
/*       */   
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public enum CrashDataResponseCode
/*       */     implements ProtocolMessageEnum
/*       */   {
/*  2596 */     CrashData_Error(0),
/*       */ 
/*       */ 
/*       */     
/*  2600 */     CrashData_OK(1),
/*  2601 */     UNRECOGNIZED(-1);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int CrashData_Error_VALUE = 0;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int CrashData_OK_VALUE = 1;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*  2649 */     private static final Internal.EnumLiteMap<CrashDataResponseCode> internalValueMap = new Internal.EnumLiteMap<CrashDataResponseCode>()
/*       */       {
/*       */         public DolphinMessages.CrashDataResponseCode findValueByNumber(int number) {
/*  2652 */           return DolphinMessages.CrashDataResponseCode.forNumber(number);
/*       */         }
/*       */       };
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*  2673 */     private static final CrashDataResponseCode[] VALUES = values(); private final int value; public final int getNumber() { if (this == UNRECOGNIZED)
/*       */         throw new IllegalArgumentException("Can't get the number of an unknown enum value."); 
/*       */       return this.value; }
/*       */     public static CrashDataResponseCode forNumber(int value) { switch (value) {
/*       */         case 0:
/*       */           return CrashData_Error;
/*       */         case 1:
/*       */           return CrashData_OK;
/*       */       } 
/*       */       return null; }
/*       */     public static Internal.EnumLiteMap<CrashDataResponseCode> internalGetValueMap() { return internalValueMap; }
/*       */     static {  }
/*       */     public final Descriptors.EnumValueDescriptor getValueDescriptor() { if (this == UNRECOGNIZED)
/*       */         throw new IllegalStateException("Can't get the descriptor of an unrecognized enum value."); 
/*       */       return getDescriptor().getValues().get(ordinal()); }
/*       */     public final Descriptors.EnumDescriptor getDescriptorForType() { return getDescriptor(); }
/*       */     public static final Descriptors.EnumDescriptor getDescriptor() { return DolphinMessages.getDescriptor().getEnumTypes().get(14); }
/*  2690 */     CrashDataResponseCode(int value) { this.value = value; }
/*       */   
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public enum DTCResposneCode
/*       */     implements ProtocolMessageEnum
/*       */   {
/*  2708 */     DTC_RESPOSNE_NONE(0),
/*       */ 
/*       */ 
/*       */     
/*  2712 */     DTC_RESPOSNE_ERROR(1),
/*       */ 
/*       */ 
/*       */     
/*  2716 */     DTC_RESPOSNE_OK(2),
/*  2717 */     UNRECOGNIZED(-1);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int DTC_RESPOSNE_NONE_VALUE = 0;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int DTC_RESPOSNE_ERROR_VALUE = 1;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int DTC_RESPOSNE_OK_VALUE = 2;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*  2770 */     private static final Internal.EnumLiteMap<DTCResposneCode> internalValueMap = new Internal.EnumLiteMap<DTCResposneCode>()
/*       */       {
/*       */         public DolphinMessages.DTCResposneCode findValueByNumber(int number) {
/*  2773 */           return DolphinMessages.DTCResposneCode.forNumber(number);
/*       */         }
/*       */       };
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*  2794 */     private static final DTCResposneCode[] VALUES = values(); private final int value; public final int getNumber() { if (this == UNRECOGNIZED)
/*       */         throw new IllegalArgumentException("Can't get the number of an unknown enum value.");  return this.value; }
/*       */     public static DTCResposneCode forNumber(int value) { switch (value) {
/*       */         case 0:
/*       */           return DTC_RESPOSNE_NONE;
/*       */         case 1:
/*       */           return DTC_RESPOSNE_ERROR;
/*       */         case 2:
/*       */           return DTC_RESPOSNE_OK;
/*       */       }  return null; }
/*       */     public static Internal.EnumLiteMap<DTCResposneCode> internalGetValueMap() { return internalValueMap; }
/*       */     static {  }
/*       */     public final Descriptors.EnumValueDescriptor getValueDescriptor() { if (this == UNRECOGNIZED)
/*       */         throw new IllegalStateException("Can't get the descriptor of an unrecognized enum value."); 
/*       */       return getDescriptor().getValues().get(ordinal()); }
/*       */     public final Descriptors.EnumDescriptor getDescriptorForType() { return getDescriptor(); }
/*       */     public static final Descriptors.EnumDescriptor getDescriptor() { return DolphinMessages.getDescriptor().getEnumTypes().get(15); }
/*  2811 */     DTCResposneCode(int value) { this.value = value; }
/*       */   
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public enum DTCType
/*       */     implements ProtocolMessageEnum
/*       */   {
/*  2825 */     OBD_STORED_DTC(0),
/*       */ 
/*       */ 
/*       */     
/*  2829 */     OBD_PENDING_DTC(1),
/*       */ 
/*       */ 
/*       */     
/*  2833 */     OBD_PERMANENT_DTC(2),
/*       */ 
/*       */ 
/*       */     
/*  2837 */     FMS_DTC(3),
/*       */ 
/*       */ 
/*       */     
/*  2841 */     SCANIA_DTC(4),
/*  2842 */     UNRECOGNIZED(-1);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int OBD_STORED_DTC_VALUE = 0;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int OBD_PENDING_DTC_VALUE = 1;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int OBD_PERMANENT_DTC_VALUE = 2;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int FMS_DTC_VALUE = 3;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int SCANIA_DTC_VALUE = 4;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*  2905 */     private static final Internal.EnumLiteMap<DTCType> internalValueMap = new Internal.EnumLiteMap<DTCType>()
/*       */       {
/*       */         public DolphinMessages.DTCType findValueByNumber(int number) {
/*  2908 */           return DolphinMessages.DTCType.forNumber(number);
/*       */         }
/*       */       };
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*  2929 */     private static final DTCType[] VALUES = values(); private final int value; public final int getNumber() { if (this == UNRECOGNIZED)
/*       */         throw new IllegalArgumentException("Can't get the number of an unknown enum value.");  return this.value; }
/*       */     public static DTCType forNumber(int value) { switch (value) { case 0: return OBD_STORED_DTC;
/*       */         case 1:
/*       */           return OBD_PENDING_DTC;
/*       */         case 2:
/*       */           return OBD_PERMANENT_DTC;
/*       */         case 3:
/*       */           return FMS_DTC;
/*       */         case 4:
/*       */           return SCANIA_DTC; }  return null; }
/*       */     public static Internal.EnumLiteMap<DTCType> internalGetValueMap() { return internalValueMap; }
/*       */     static {  }
/*       */     public final Descriptors.EnumValueDescriptor getValueDescriptor() { if (this == UNRECOGNIZED)
/*       */         throw new IllegalStateException("Can't get the descriptor of an unrecognized enum value.");  return getDescriptor().getValues().get(ordinal()); }
/*       */     public final Descriptors.EnumDescriptor getDescriptorForType() { return getDescriptor(); }
/*       */     public static final Descriptors.EnumDescriptor getDescriptor() { return DolphinMessages.getDescriptor().getEnumTypes().get(16); }
/*  2946 */     DTCType(int value) { this.value = value; }
/*       */   
/*       */   }
/*       */ 
/*       */ 
/*       */   
/*       */   public static interface IODataOrBuilder
/*       */     extends MessageOrBuilder
/*       */   {
/*       */     int getIDValue();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.AlarmType getID();
/*       */ 
/*       */ 
/*       */     
/*       */     long getValue();
/*       */   }
/*       */ 
/*       */ 
/*       */   
/*       */   public static final class IOData
/*       */     extends GeneratedMessageV3
/*       */     implements IODataOrBuilder
/*       */   {
/*       */     private static final long serialVersionUID = 0L;
/*       */     
/*       */     public static final int ID_FIELD_NUMBER = 1;
/*       */     
/*       */     private int iD_;
/*       */     
/*       */     public static final int VALUE_FIELD_NUMBER = 2;
/*       */     
/*       */     private long value_;
/*       */     
/*       */     private byte memoizedIsInitialized;
/*       */ 
/*       */     
/*       */     private IOData(GeneratedMessageV3.Builder<?> builder)
/*       */     {
/*  2987 */       super(builder);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*  3096 */       this.memoizedIsInitialized = -1; } private IOData() { this.memoizedIsInitialized = -1; this.iD_ = 0; } protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) { return new IOData(); } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private IOData(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this(); if (extensionRegistry == null) throw new NullPointerException();  UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { int rawValue, tag = input.readTag(); switch (tag) { case 0: done = true; continue;case 8: rawValue = input.readEnum(); this.iD_ = rawValue; continue;case 16: this.value_ = input.readUInt64(); continue; }  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this); } finally { this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_IOData_descriptor; } protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() { return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_IOData_fieldAccessorTable.ensureFieldAccessorsInitialized(IOData.class, Builder.class); } public int getIDValue() { return this.iD_; }
/*       */     public DolphinConfig.AlarmType getID() { DolphinConfig.AlarmType result = DolphinConfig.AlarmType.valueOf(this.iD_); return (result == null) ? DolphinConfig.AlarmType.UNRECOGNIZED : result; }
/*       */     public long getValue() { return this.value_; }
/*  3099 */     public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized;
/*  3100 */       if (isInitialized == 1) return true; 
/*  3101 */       if (isInitialized == 0) return false;
/*       */       
/*  3103 */       this.memoizedIsInitialized = 1;
/*  3104 */       return true; }
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/*  3110 */       if (this.iD_ != DolphinConfig.AlarmType.Alarm_None.getNumber()) {
/*  3111 */         output.writeEnum(1, this.iD_);
/*       */       }
/*  3113 */       if (this.value_ != 0L) {
/*  3114 */         output.writeUInt64(2, this.value_);
/*       */       }
/*  3116 */       this.unknownFields.writeTo(output);
/*       */     }
/*       */ 
/*       */     
/*       */     public int getSerializedSize() {
/*  3121 */       int size = this.memoizedSize;
/*  3122 */       if (size != -1) return size;
/*       */       
/*  3124 */       size = 0;
/*  3125 */       if (this.iD_ != DolphinConfig.AlarmType.Alarm_None.getNumber()) {
/*  3126 */         size += 
/*  3127 */           CodedOutputStream.computeEnumSize(1, this.iD_);
/*       */       }
/*  3129 */       if (this.value_ != 0L) {
/*  3130 */         size += 
/*  3131 */           CodedOutputStream.computeUInt64Size(2, this.value_);
/*       */       }
/*  3133 */       size += this.unknownFields.getSerializedSize();
/*  3134 */       this.memoizedSize = size;
/*  3135 */       return size;
/*       */     }
/*       */ 
/*       */     
/*       */     public boolean equals(Object obj) {
/*  3140 */       if (obj == this) {
/*  3141 */         return true;
/*       */       }
/*  3143 */       if (!(obj instanceof IOData)) {
/*  3144 */         return super.equals(obj);
/*       */       }
/*  3146 */       IOData other = (IOData)obj;
/*       */       
/*  3148 */       if (this.iD_ != other.iD_) return false; 
/*  3149 */       if (getValue() != other
/*  3150 */         .getValue()) return false; 
/*  3151 */       if (!this.unknownFields.equals(other.unknownFields)) return false; 
/*  3152 */       return true;
/*       */     }
/*       */ 
/*       */     
/*       */     public int hashCode() {
/*  3157 */       if (this.memoizedHashCode != 0) {
/*  3158 */         return this.memoizedHashCode;
/*       */       }
/*  3160 */       int hash = 41;
/*  3161 */       hash = 19 * hash + getDescriptor().hashCode();
/*  3162 */       hash = 37 * hash + 1;
/*  3163 */       hash = 53 * hash + this.iD_;
/*  3164 */       hash = 37 * hash + 2;
/*  3165 */       hash = 53 * hash + Internal.hashLong(
/*  3166 */           getValue());
/*  3167 */       hash = 29 * hash + this.unknownFields.hashCode();
/*  3168 */       this.memoizedHashCode = hash;
/*  3169 */       return hash;
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static IOData parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
/*  3175 */       return (IOData)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static IOData parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*  3181 */       return (IOData)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static IOData parseFrom(ByteString data) throws InvalidProtocolBufferException {
/*  3186 */       return (IOData)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static IOData parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*  3192 */       return (IOData)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static IOData parseFrom(byte[] data) throws InvalidProtocolBufferException {
/*  3196 */       return (IOData)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static IOData parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*  3202 */       return (IOData)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static IOData parseFrom(InputStream input) throws IOException {
/*  3206 */       return 
/*  3207 */         (IOData)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static IOData parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*  3213 */       return 
/*  3214 */         (IOData)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static IOData parseDelimitedFrom(InputStream input) throws IOException {
/*  3218 */       return 
/*  3219 */         (IOData)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static IOData parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*  3225 */       return 
/*  3226 */         (IOData)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static IOData parseFrom(CodedInputStream input) throws IOException {
/*  3231 */       return 
/*  3232 */         (IOData)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static IOData parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*  3238 */       return 
/*  3239 */         (IOData)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public Builder newBuilderForType() {
/*  3243 */       return newBuilder();
/*       */     } public static Builder newBuilder() {
/*  3245 */       return DEFAULT_INSTANCE.toBuilder();
/*       */     }
/*       */     public static Builder newBuilder(IOData prototype) {
/*  3248 */       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
/*       */     }
/*       */     
/*       */     public Builder toBuilder() {
/*  3252 */       return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder())
/*  3253 */         .mergeFrom(this);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
/*  3259 */       Builder builder = new Builder(parent);
/*  3260 */       return builder;
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static final class Builder
/*       */       extends GeneratedMessageV3.Builder<Builder>
/*       */       implements DolphinMessages.IODataOrBuilder
/*       */     {
/*       */       private int iD_;
/*       */       
/*       */       private long value_;
/*       */ 
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/*  3275 */         return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_IOData_descriptor;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
/*  3281 */         return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_IOData_fieldAccessorTable
/*  3282 */           .ensureFieldAccessorsInitialized(DolphinMessages.IOData.class, Builder.class);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private Builder()
/*       */       {
/*  3419 */         this.iD_ = 0; maybeForceBuilderInitialization(); } private Builder(GeneratedMessageV3.BuilderParent parent) { super(parent); this.iD_ = 0; maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (DolphinMessages.IOData.alwaysUseFieldBuilders); } public Builder clear() { super.clear(); this.iD_ = 0; this.value_ = 0L; return this; } public Descriptors.Descriptor getDescriptorForType() { return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_IOData_descriptor; } public DolphinMessages.IOData getDefaultInstanceForType() { return DolphinMessages.IOData.getDefaultInstance(); } public DolphinMessages.IOData build() { DolphinMessages.IOData result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public DolphinMessages.IOData buildPartial() { DolphinMessages.IOData result = new DolphinMessages.IOData(this); result.iD_ = this.iD_; result.value_ = this.value_; onBuilt(); return result; } public Builder clone() { return (Builder)super.clone(); } public Builder setField(Descriptors.FieldDescriptor field, Object value) { return (Builder)super.setField(field, value); } public Builder clearField(Descriptors.FieldDescriptor field) { return (Builder)super.clearField(field); } public Builder clearOneof(Descriptors.OneofDescriptor oneof) { return (Builder)super.clearOneof(oneof); } public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) { return (Builder)super.setRepeatedField(field, index, value); }
/*       */       public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) { return (Builder)super.addRepeatedField(field, value); }
/*       */       public Builder mergeFrom(Message other) { if (other instanceof DolphinMessages.IOData) return mergeFrom((DolphinMessages.IOData)other);  super.mergeFrom(other); return this; }
/*       */       public Builder mergeFrom(DolphinMessages.IOData other) { if (other == DolphinMessages.IOData.getDefaultInstance()) return this;  if (other.iD_ != 0) setIDValue(other.getIDValue());  if (other.getValue() != 0L) setValue(other.getValue());  mergeUnknownFields(other.unknownFields); onChanged(); return this; }
/*       */       public final boolean isInitialized() { return true; }
/*       */       public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { DolphinMessages.IOData parsedMessage = null; try { parsedMessage = (DolphinMessages.IOData)DolphinMessages.IOData.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (DolphinMessages.IOData)e.getUnfinishedMessage(); throw e.unwrapIOException(); } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; }
/*  3425 */       public int getIDValue() { return this.iD_; }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIDValue(int value) {
/*  3434 */         this.iD_ = value;
/*  3435 */         onChanged();
/*  3436 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.AlarmType getID() {
/*  3445 */         DolphinConfig.AlarmType result = DolphinConfig.AlarmType.valueOf(this.iD_);
/*  3446 */         return (result == null) ? DolphinConfig.AlarmType.UNRECOGNIZED : result;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setID(DolphinConfig.AlarmType value) {
/*  3454 */         if (value == null) {
/*  3455 */           throw new NullPointerException();
/*       */         }
/*       */         
/*  3458 */         this.iD_ = value.getNumber();
/*  3459 */         onChanged();
/*  3460 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearID() {
/*  3468 */         this.iD_ = 0;
/*  3469 */         onChanged();
/*  3470 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public long getValue() {
/*  3480 */         return this.value_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setValue(long value) {
/*  3489 */         this.value_ = value;
/*  3490 */         onChanged();
/*  3491 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearValue() {
/*  3499 */         this.value_ = 0L;
/*  3500 */         onChanged();
/*  3501 */         return this;
/*       */       }
/*       */ 
/*       */       
/*       */       public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
/*  3506 */         return (Builder)super.setUnknownFields(unknownFields);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
/*  3512 */         return (Builder)super.mergeUnknownFields(unknownFields);
/*       */       }
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*  3522 */     private static final IOData DEFAULT_INSTANCE = new IOData();
/*       */ 
/*       */     
/*       */     public static IOData getDefaultInstance() {
/*  3526 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */ 
/*       */     
/*  3530 */     private static final Parser<IOData> PARSER = (Parser<IOData>)new AbstractParser<IOData>()
/*       */       {
/*       */ 
/*       */         
/*       */         public DolphinMessages.IOData parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException
/*       */         {
/*  3536 */           return new DolphinMessages.IOData(input, extensionRegistry);
/*       */         }
/*       */       };
/*       */     
/*       */     public static Parser<IOData> parser() {
/*  3541 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public Parser<IOData> getParserForType() {
/*  3546 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public IOData getDefaultInstanceForType() {
/*  3551 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */   }
/*       */ 
/*       */ 
/*       */   
/*       */   public static interface DataPointOrBuilder
/*       */     extends MessageOrBuilder
/*       */   {
/*       */     float getLatitude();
/*       */ 
/*       */ 
/*       */     
/*       */     float getLongitude();
/*       */ 
/*       */ 
/*       */     
/*       */     float getAltitude();
/*       */ 
/*       */ 
/*       */     
/*       */     int getSatellites();
/*       */ 
/*       */ 
/*       */     
/*       */     float getSpeed();
/*       */ 
/*       */ 
/*       */     
/*       */     float getBearing();
/*       */ 
/*       */ 
/*       */     
/*       */     int getHDOP();
/*       */ 
/*       */ 
/*       */     
/*       */     int getTimestamp();
/*       */ 
/*       */ 
/*       */     
/*       */     int getAlarmValue();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.AlarmType getAlarm();
/*       */ 
/*       */ 
/*       */     
/*       */     List<DolphinConfig.AlarmType> getIOListIDList();
/*       */ 
/*       */ 
/*       */     
/*       */     int getIOListIDCount();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.AlarmType getIOListID(int param1Int);
/*       */ 
/*       */ 
/*       */     
/*       */     List<Integer> getIOListIDValueList();
/*       */ 
/*       */ 
/*       */     
/*       */     int getIOListIDValue(int param1Int);
/*       */ 
/*       */ 
/*       */     
/*       */     List<Long> getIOListValueList();
/*       */ 
/*       */ 
/*       */     
/*       */     int getIOListValueCount();
/*       */ 
/*       */ 
/*       */     
/*       */     long getIOListValue(int param1Int);
/*       */   }
/*       */ 
/*       */ 
/*       */   
/*       */   public static final class DataPoint
/*       */     extends GeneratedMessageV3
/*       */     implements DataPointOrBuilder
/*       */   {
/*       */     private static final long serialVersionUID = 0L;
/*       */ 
/*       */     
/*       */     public static final int LATITUDE_FIELD_NUMBER = 1;
/*       */ 
/*       */     
/*       */     private float latitude_;
/*       */ 
/*       */     
/*       */     public static final int LONGITUDE_FIELD_NUMBER = 2;
/*       */ 
/*       */     
/*       */     private float longitude_;
/*       */ 
/*       */     
/*       */     public static final int ALTITUDE_FIELD_NUMBER = 3;
/*       */ 
/*       */     
/*       */     private float altitude_;
/*       */ 
/*       */     
/*       */     public static final int SATELLITES_FIELD_NUMBER = 4;
/*       */ 
/*       */     
/*       */     private int satellites_;
/*       */ 
/*       */     
/*       */     public static final int SPEED_FIELD_NUMBER = 5;
/*       */ 
/*       */     
/*       */     private float speed_;
/*       */ 
/*       */     
/*       */     public static final int BEARING_FIELD_NUMBER = 6;
/*       */ 
/*       */     
/*       */     private float bearing_;
/*       */ 
/*       */     
/*       */     public static final int HDOP_FIELD_NUMBER = 7;
/*       */     
/*       */     private int hDOP_;
/*       */     
/*       */     public static final int TIMESTAMP_FIELD_NUMBER = 8;
/*       */     
/*       */     private int timestamp_;
/*       */     
/*       */     public static final int ALARM_FIELD_NUMBER = 9;
/*       */     
/*       */     private int alarm_;
/*       */     
/*       */     public static final int IOLIST_ID_FIELD_NUMBER = 11;
/*       */     
/*       */     private List<Integer> iOListID_;
/*       */ 
/*       */     
/*       */     private DataPoint(GeneratedMessageV3.Builder<?> builder)
/*       */     {
/*  3695 */       super(builder);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*  4073 */       this.iOListValueMemoizedSerializedSize = -1;
/*       */       
/*  4075 */       this.memoizedIsInitialized = -1; } private DataPoint() { this.iOListValueMemoizedSerializedSize = -1; this.memoizedIsInitialized = -1; this.alarm_ = 0; this.iOListID_ = Collections.emptyList(); this.iOListValue_ = emptyLongList(); } protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) { return new DataPoint(); } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private DataPoint(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this(); if (extensionRegistry == null) throw new NullPointerException();  int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { int rawValue, length, oldLimit, limit, tag = input.readTag(); switch (tag) { case 0: done = true; continue;case 13: this.latitude_ = input.readFloat(); continue;case 21: this.longitude_ = input.readFloat(); continue;case 29: this.altitude_ = input.readFloat(); continue;case 32: this.satellites_ = input.readUInt32(); continue;case 45: this.speed_ = input.readFloat(); continue;case 53: this.bearing_ = input.readFloat(); continue;case 56: this.hDOP_ = input.readUInt32(); continue;case 69: this.timestamp_ = input.readFixed32(); continue;case 72: rawValue = input.readEnum(); this.alarm_ = rawValue; continue;case 88: rawValue = input.readEnum(); if ((mutable_bitField0_ & 0x1) == 0) { this.iOListID_ = new ArrayList<>(); mutable_bitField0_ |= 0x1; }  this.iOListID_.add(Integer.valueOf(rawValue)); continue;case 90: length = input.readRawVarint32(); oldLimit = input.pushLimit(length); while (input.getBytesUntilLimit() > 0) { int i = input.readEnum(); if ((mutable_bitField0_ & 0x1) == 0) { this.iOListID_ = new ArrayList<>(); mutable_bitField0_ |= 0x1; }  this.iOListID_.add(Integer.valueOf(i)); }  input.popLimit(oldLimit); continue;case 96: if ((mutable_bitField0_ & 0x2) == 0) { this.iOListValue_ = newLongList(); mutable_bitField0_ |= 0x2; }  this.iOListValue_.addLong(input.readUInt64()); continue;case 98: length = input.readRawVarint32(); limit = input.pushLimit(length); if ((mutable_bitField0_ & 0x2) == 0 && input.getBytesUntilLimit() > 0) { this.iOListValue_ = newLongList(); mutable_bitField0_ |= 0x2; }  while (input.getBytesUntilLimit() > 0) this.iOListValue_.addLong(input.readUInt64());  input.popLimit(limit); continue; }  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this); } finally { if ((mutable_bitField0_ & 0x1) != 0) this.iOListID_ = Collections.unmodifiableList(this.iOListID_);  if ((mutable_bitField0_ & 0x2) != 0) this.iOListValue_.makeImmutable();  this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_DataPoint_descriptor; } protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() { return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_DataPoint_fieldAccessorTable.ensureFieldAccessorsInitialized(DataPoint.class, Builder.class); } public float getLatitude() { return this.latitude_; } public float getLongitude() { return this.longitude_; } public float getAltitude() { return this.altitude_; } public int getSatellites() { return this.satellites_; } public float getSpeed() { return this.speed_; } public float getBearing() { return this.bearing_; } public int getHDOP() { return this.hDOP_; } public int getTimestamp() { return this.timestamp_; } public int getAlarmValue() { return this.alarm_; } public DolphinConfig.AlarmType getAlarm() { DolphinConfig.AlarmType result = DolphinConfig.AlarmType.valueOf(this.alarm_); return (result == null) ? DolphinConfig.AlarmType.UNRECOGNIZED : result; } private static final Internal.ListAdapter.Converter<Integer, DolphinConfig.AlarmType> iOListID_converter_ = new Internal.ListAdapter.Converter<Integer, DolphinConfig.AlarmType>() { public DolphinConfig.AlarmType convert(Integer from) { DolphinConfig.AlarmType result = DolphinConfig.AlarmType.valueOf(from.intValue()); return (result == null) ? DolphinConfig.AlarmType.UNRECOGNIZED : result; } }
/*       */     ; private int iOListIDMemoizedSerializedSize; public static final int IOLIST_VALUE_FIELD_NUMBER = 12; private Internal.LongList iOListValue_; private int iOListValueMemoizedSerializedSize; private byte memoizedIsInitialized; public List<DolphinConfig.AlarmType> getIOListIDList() { return (List<DolphinConfig.AlarmType>)new Internal.ListAdapter(this.iOListID_, iOListID_converter_); } public int getIOListIDCount() { return this.iOListID_.size(); } public DolphinConfig.AlarmType getIOListID(int index) { return (DolphinConfig.AlarmType)iOListID_converter_.convert(this.iOListID_.get(index)); } public List<Integer> getIOListIDValueList() { return this.iOListID_; } public int getIOListIDValue(int index) { return ((Integer)this.iOListID_.get(index)).intValue(); } public List<Long> getIOListValueList() { return (List<Long>)this.iOListValue_; } public int getIOListValueCount() { return this.iOListValue_.size(); }
/*       */     public long getIOListValue(int index) { return this.iOListValue_.getLong(index); }
/*  4078 */     public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized;
/*  4079 */       if (isInitialized == 1) return true; 
/*  4080 */       if (isInitialized == 0) return false;
/*       */       
/*  4082 */       this.memoizedIsInitialized = 1;
/*  4083 */       return true; }
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/*  4089 */       getSerializedSize();
/*  4090 */       if (this.latitude_ != 0.0F) {
/*  4091 */         output.writeFloat(1, this.latitude_);
/*       */       }
/*  4093 */       if (this.longitude_ != 0.0F) {
/*  4094 */         output.writeFloat(2, this.longitude_);
/*       */       }
/*  4096 */       if (this.altitude_ != 0.0F) {
/*  4097 */         output.writeFloat(3, this.altitude_);
/*       */       }
/*  4099 */       if (this.satellites_ != 0) {
/*  4100 */         output.writeUInt32(4, this.satellites_);
/*       */       }
/*  4102 */       if (this.speed_ != 0.0F) {
/*  4103 */         output.writeFloat(5, this.speed_);
/*       */       }
/*  4105 */       if (this.bearing_ != 0.0F) {
/*  4106 */         output.writeFloat(6, this.bearing_);
/*       */       }
/*  4108 */       if (this.hDOP_ != 0) {
/*  4109 */         output.writeUInt32(7, this.hDOP_);
/*       */       }
/*  4111 */       if (this.timestamp_ != 0) {
/*  4112 */         output.writeFixed32(8, this.timestamp_);
/*       */       }
/*  4114 */       if (this.alarm_ != DolphinConfig.AlarmType.Alarm_None.getNumber()) {
/*  4115 */         output.writeEnum(9, this.alarm_);
/*       */       }
/*  4117 */       if (getIOListIDList().size() > 0) {
/*  4118 */         output.writeUInt32NoTag(90);
/*  4119 */         output.writeUInt32NoTag(this.iOListIDMemoizedSerializedSize);
/*       */       }  int i;
/*  4121 */       for (i = 0; i < this.iOListID_.size(); i++) {
/*  4122 */         output.writeEnumNoTag(((Integer)this.iOListID_.get(i)).intValue());
/*       */       }
/*  4124 */       if (getIOListValueList().size() > 0) {
/*  4125 */         output.writeUInt32NoTag(98);
/*  4126 */         output.writeUInt32NoTag(this.iOListValueMemoizedSerializedSize);
/*       */       } 
/*  4128 */       for (i = 0; i < this.iOListValue_.size(); i++) {
/*  4129 */         output.writeUInt64NoTag(this.iOListValue_.getLong(i));
/*       */       }
/*  4131 */       this.unknownFields.writeTo(output);
/*       */     }
/*       */ 
/*       */     
/*       */     public int getSerializedSize() {
/*  4136 */       int size = this.memoizedSize;
/*  4137 */       if (size != -1) return size;
/*       */       
/*  4139 */       size = 0;
/*  4140 */       if (this.latitude_ != 0.0F) {
/*  4141 */         size += 
/*  4142 */           CodedOutputStream.computeFloatSize(1, this.latitude_);
/*       */       }
/*  4144 */       if (this.longitude_ != 0.0F) {
/*  4145 */         size += 
/*  4146 */           CodedOutputStream.computeFloatSize(2, this.longitude_);
/*       */       }
/*  4148 */       if (this.altitude_ != 0.0F) {
/*  4149 */         size += 
/*  4150 */           CodedOutputStream.computeFloatSize(3, this.altitude_);
/*       */       }
/*  4152 */       if (this.satellites_ != 0) {
/*  4153 */         size += 
/*  4154 */           CodedOutputStream.computeUInt32Size(4, this.satellites_);
/*       */       }
/*  4156 */       if (this.speed_ != 0.0F) {
/*  4157 */         size += 
/*  4158 */           CodedOutputStream.computeFloatSize(5, this.speed_);
/*       */       }
/*  4160 */       if (this.bearing_ != 0.0F) {
/*  4161 */         size += 
/*  4162 */           CodedOutputStream.computeFloatSize(6, this.bearing_);
/*       */       }
/*  4164 */       if (this.hDOP_ != 0) {
/*  4165 */         size += 
/*  4166 */           CodedOutputStream.computeUInt32Size(7, this.hDOP_);
/*       */       }
/*  4168 */       if (this.timestamp_ != 0) {
/*  4169 */         size += 
/*  4170 */           CodedOutputStream.computeFixed32Size(8, this.timestamp_);
/*       */       }
/*  4172 */       if (this.alarm_ != DolphinConfig.AlarmType.Alarm_None.getNumber()) {
/*  4173 */         size += 
/*  4174 */           CodedOutputStream.computeEnumSize(9, this.alarm_);
/*       */       }
/*       */       
/*  4177 */       int dataSize = 0; int i;
/*  4178 */       for (i = 0; i < this.iOListID_.size(); i++) {
/*  4179 */         dataSize += 
/*  4180 */           CodedOutputStream.computeEnumSizeNoTag(((Integer)this.iOListID_.get(i)).intValue());
/*       */       }
/*  4182 */       size += dataSize;
/*  4183 */       if (!getIOListIDList().isEmpty()) { size++;
/*  4184 */         size += 
/*  4185 */           CodedOutputStream.computeUInt32SizeNoTag(dataSize); }
/*  4186 */        this.iOListIDMemoizedSerializedSize = dataSize;
/*       */ 
/*       */       
/*  4189 */       dataSize = 0;
/*  4190 */       for (i = 0; i < this.iOListValue_.size(); i++) {
/*  4191 */         dataSize += 
/*  4192 */           CodedOutputStream.computeUInt64SizeNoTag(this.iOListValue_.getLong(i));
/*       */       }
/*  4194 */       size += dataSize;
/*  4195 */       if (!getIOListValueList().isEmpty()) {
/*  4196 */         size++;
/*  4197 */         size += 
/*  4198 */           CodedOutputStream.computeInt32SizeNoTag(dataSize);
/*       */       } 
/*  4200 */       this.iOListValueMemoizedSerializedSize = dataSize;
/*       */       
/*  4202 */       size += this.unknownFields.getSerializedSize();
/*  4203 */       this.memoizedSize = size;
/*  4204 */       return size;
/*       */     }
/*       */ 
/*       */     
/*       */     public boolean equals(Object obj) {
/*  4209 */       if (obj == this) {
/*  4210 */         return true;
/*       */       }
/*  4212 */       if (!(obj instanceof DataPoint)) {
/*  4213 */         return super.equals(obj);
/*       */       }
/*  4215 */       DataPoint other = (DataPoint)obj;
/*       */       
/*  4217 */       if (Float.floatToIntBits(getLatitude()) != 
/*  4218 */         Float.floatToIntBits(other
/*  4219 */           .getLatitude())) return false; 
/*  4220 */       if (Float.floatToIntBits(getLongitude()) != 
/*  4221 */         Float.floatToIntBits(other
/*  4222 */           .getLongitude())) return false; 
/*  4223 */       if (Float.floatToIntBits(getAltitude()) != 
/*  4224 */         Float.floatToIntBits(other
/*  4225 */           .getAltitude())) return false; 
/*  4226 */       if (getSatellites() != other
/*  4227 */         .getSatellites()) return false; 
/*  4228 */       if (Float.floatToIntBits(getSpeed()) != 
/*  4229 */         Float.floatToIntBits(other
/*  4230 */           .getSpeed())) return false; 
/*  4231 */       if (Float.floatToIntBits(getBearing()) != 
/*  4232 */         Float.floatToIntBits(other
/*  4233 */           .getBearing())) return false; 
/*  4234 */       if (getHDOP() != other
/*  4235 */         .getHDOP()) return false; 
/*  4236 */       if (getTimestamp() != other
/*  4237 */         .getTimestamp()) return false; 
/*  4238 */       if (this.alarm_ != other.alarm_) return false; 
/*  4239 */       if (!this.iOListID_.equals(other.iOListID_)) return false;
/*       */       
/*  4241 */       if (!getIOListValueList().equals(other.getIOListValueList())) return false; 
/*  4242 */       if (!this.unknownFields.equals(other.unknownFields)) return false; 
/*  4243 */       return true;
/*       */     }
/*       */ 
/*       */     
/*       */     public int hashCode() {
/*  4248 */       if (this.memoizedHashCode != 0) {
/*  4249 */         return this.memoizedHashCode;
/*       */       }
/*  4251 */       int hash = 41;
/*  4252 */       hash = 19 * hash + getDescriptor().hashCode();
/*  4253 */       hash = 37 * hash + 1;
/*  4254 */       hash = 53 * hash + Float.floatToIntBits(
/*  4255 */           getLatitude());
/*  4256 */       hash = 37 * hash + 2;
/*  4257 */       hash = 53 * hash + Float.floatToIntBits(
/*  4258 */           getLongitude());
/*  4259 */       hash = 37 * hash + 3;
/*  4260 */       hash = 53 * hash + Float.floatToIntBits(
/*  4261 */           getAltitude());
/*  4262 */       hash = 37 * hash + 4;
/*  4263 */       hash = 53 * hash + getSatellites();
/*  4264 */       hash = 37 * hash + 5;
/*  4265 */       hash = 53 * hash + Float.floatToIntBits(
/*  4266 */           getSpeed());
/*  4267 */       hash = 37 * hash + 6;
/*  4268 */       hash = 53 * hash + Float.floatToIntBits(
/*  4269 */           getBearing());
/*  4270 */       hash = 37 * hash + 7;
/*  4271 */       hash = 53 * hash + getHDOP();
/*  4272 */       hash = 37 * hash + 8;
/*  4273 */       hash = 53 * hash + getTimestamp();
/*  4274 */       hash = 37 * hash + 9;
/*  4275 */       hash = 53 * hash + this.alarm_;
/*  4276 */       if (getIOListIDCount() > 0) {
/*  4277 */         hash = 37 * hash + 11;
/*  4278 */         hash = 53 * hash + this.iOListID_.hashCode();
/*       */       } 
/*  4280 */       if (getIOListValueCount() > 0) {
/*  4281 */         hash = 37 * hash + 12;
/*  4282 */         hash = 53 * hash + getIOListValueList().hashCode();
/*       */       } 
/*  4284 */       hash = 29 * hash + this.unknownFields.hashCode();
/*  4285 */       this.memoizedHashCode = hash;
/*  4286 */       return hash;
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static DataPoint parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
/*  4292 */       return (DataPoint)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static DataPoint parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*  4298 */       return (DataPoint)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static DataPoint parseFrom(ByteString data) throws InvalidProtocolBufferException {
/*  4303 */       return (DataPoint)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static DataPoint parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*  4309 */       return (DataPoint)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static DataPoint parseFrom(byte[] data) throws InvalidProtocolBufferException {
/*  4313 */       return (DataPoint)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static DataPoint parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*  4319 */       return (DataPoint)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static DataPoint parseFrom(InputStream input) throws IOException {
/*  4323 */       return 
/*  4324 */         (DataPoint)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static DataPoint parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*  4330 */       return 
/*  4331 */         (DataPoint)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static DataPoint parseDelimitedFrom(InputStream input) throws IOException {
/*  4335 */       return 
/*  4336 */         (DataPoint)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static DataPoint parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*  4342 */       return 
/*  4343 */         (DataPoint)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static DataPoint parseFrom(CodedInputStream input) throws IOException {
/*  4348 */       return 
/*  4349 */         (DataPoint)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static DataPoint parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*  4355 */       return 
/*  4356 */         (DataPoint)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public Builder newBuilderForType() {
/*  4360 */       return newBuilder();
/*       */     } public static Builder newBuilder() {
/*  4362 */       return DEFAULT_INSTANCE.toBuilder();
/*       */     }
/*       */     public static Builder newBuilder(DataPoint prototype) {
/*  4365 */       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
/*       */     }
/*       */     
/*       */     public Builder toBuilder() {
/*  4369 */       return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder())
/*  4370 */         .mergeFrom(this);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
/*  4376 */       Builder builder = new Builder(parent);
/*  4377 */       return builder;
/*       */     }
/*       */     public static final class Builder extends GeneratedMessageV3.Builder<Builder> implements DolphinMessages.DataPointOrBuilder { private int bitField0_; private float latitude_; private float longitude_; private float altitude_; private int satellites_; private float speed_;
/*       */       private float bearing_;
/*       */       private int hDOP_;
/*       */       private int timestamp_;
/*       */       private int alarm_;
/*       */       private List<Integer> iOListID_;
/*       */       private Internal.LongList iOListValue_;
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/*  4388 */         return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_DataPoint_descriptor;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
/*  4394 */         return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_DataPoint_fieldAccessorTable
/*  4395 */           .ensureFieldAccessorsInitialized(DolphinMessages.DataPoint.class, Builder.class);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private Builder()
/*       */       {
/*  4858 */         this.alarm_ = 0;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/*  4912 */         this
/*  4913 */           .iOListID_ = Collections.emptyList();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/*  5100 */         this.iOListValue_ = DolphinMessages.DataPoint.emptyLongList(); maybeForceBuilderInitialization(); } private Builder(GeneratedMessageV3.BuilderParent parent) { super(parent); this.alarm_ = 0; this.iOListID_ = Collections.emptyList(); this.iOListValue_ = DolphinMessages.DataPoint.emptyLongList(); maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (DolphinMessages.DataPoint.alwaysUseFieldBuilders); } public Builder clear() { super.clear(); this.latitude_ = 0.0F; this.longitude_ = 0.0F; this.altitude_ = 0.0F; this.satellites_ = 0; this.speed_ = 0.0F; this.bearing_ = 0.0F; this.hDOP_ = 0; this.timestamp_ = 0; this.alarm_ = 0; this.iOListID_ = Collections.emptyList(); this.bitField0_ &= 0xFFFFFFFE; this.iOListValue_ = DolphinMessages.DataPoint.emptyLongList(); this.bitField0_ &= 0xFFFFFFFD; return this; } public Descriptors.Descriptor getDescriptorForType() { return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_DataPoint_descriptor; } public DolphinMessages.DataPoint getDefaultInstanceForType() { return DolphinMessages.DataPoint.getDefaultInstance(); } public DolphinMessages.DataPoint build() { DolphinMessages.DataPoint result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public DolphinMessages.DataPoint buildPartial() { DolphinMessages.DataPoint result = new DolphinMessages.DataPoint(this); int from_bitField0_ = this.bitField0_; result.latitude_ = this.latitude_; result.longitude_ = this.longitude_; result.altitude_ = this.altitude_; result.satellites_ = this.satellites_; result.speed_ = this.speed_; result.bearing_ = this.bearing_; result.hDOP_ = this.hDOP_; result.timestamp_ = this.timestamp_; result.alarm_ = this.alarm_; if ((this.bitField0_ & 0x1) != 0) { this.iOListID_ = Collections.unmodifiableList(this.iOListID_); this.bitField0_ &= 0xFFFFFFFE; }  result.iOListID_ = this.iOListID_; if ((this.bitField0_ & 0x2) != 0) { this.iOListValue_.makeImmutable(); this.bitField0_ &= 0xFFFFFFFD; }  result.iOListValue_ = this.iOListValue_; onBuilt(); return result; } public Builder clone() { return (Builder)super.clone(); } public Builder setField(Descriptors.FieldDescriptor field, Object value) { return (Builder)super.setField(field, value); } public Builder clearField(Descriptors.FieldDescriptor field) { return (Builder)super.clearField(field); } public Builder clearOneof(Descriptors.OneofDescriptor oneof) { return (Builder)super.clearOneof(oneof); } public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) { return (Builder)super.setRepeatedField(field, index, value); } public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) { return (Builder)super.addRepeatedField(field, value); } public Builder mergeFrom(Message other) { if (other instanceof DolphinMessages.DataPoint) return mergeFrom((DolphinMessages.DataPoint)other);  super.mergeFrom(other); return this; } public Builder mergeFrom(DolphinMessages.DataPoint other) { if (other == DolphinMessages.DataPoint.getDefaultInstance()) return this;  if (other.getLatitude() != 0.0F) setLatitude(other.getLatitude());  if (other.getLongitude() != 0.0F) setLongitude(other.getLongitude());  if (other.getAltitude() != 0.0F) setAltitude(other.getAltitude());  if (other.getSatellites() != 0) setSatellites(other.getSatellites());  if (other.getSpeed() != 0.0F) setSpeed(other.getSpeed());  if (other.getBearing() != 0.0F) setBearing(other.getBearing());  if (other.getHDOP() != 0) setHDOP(other.getHDOP());  if (other.getTimestamp() != 0) setTimestamp(other.getTimestamp());  if (other.alarm_ != 0) setAlarmValue(other.getAlarmValue());  if (!other.iOListID_.isEmpty()) { if (this.iOListID_.isEmpty()) { this.iOListID_ = other.iOListID_; this.bitField0_ &= 0xFFFFFFFE; } else { ensureIOListIDIsMutable(); this.iOListID_.addAll(other.iOListID_); }  onChanged(); }  if (!other.iOListValue_.isEmpty()) { if (this.iOListValue_.isEmpty()) { this.iOListValue_ = other.iOListValue_; this.bitField0_ &= 0xFFFFFFFD; } else { ensureIOListValueIsMutable(); this.iOListValue_.addAll((Collection)other.iOListValue_); }  onChanged(); }  mergeUnknownFields(other.unknownFields); onChanged(); return this; } public final boolean isInitialized() { return true; } public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { DolphinMessages.DataPoint parsedMessage = null; try { parsedMessage = (DolphinMessages.DataPoint)DolphinMessages.DataPoint.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (DolphinMessages.DataPoint)e.getUnfinishedMessage(); throw e.unwrapIOException(); } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; } public float getLatitude() { return this.latitude_; } public Builder setLatitude(float value) { this.latitude_ = value; onChanged(); return this; } public Builder clearLatitude() { this.latitude_ = 0.0F; onChanged(); return this; } public float getLongitude() { return this.longitude_; } public Builder setLongitude(float value) { this.longitude_ = value; onChanged(); return this; } public Builder clearLongitude() { this.longitude_ = 0.0F; onChanged(); return this; } public float getAltitude() { return this.altitude_; } public Builder setAltitude(float value) { this.altitude_ = value; onChanged(); return this; } public Builder clearAltitude() { this.altitude_ = 0.0F; onChanged(); return this; } public int getSatellites() { return this.satellites_; } public Builder setSatellites(int value) { this.satellites_ = value; onChanged(); return this; } public Builder clearSatellites() { this.satellites_ = 0; onChanged(); return this; } public float getSpeed() { return this.speed_; } public Builder setSpeed(float value) { this.speed_ = value; onChanged(); return this; } public Builder clearSpeed() { this.speed_ = 0.0F; onChanged(); return this; } public float getBearing() { return this.bearing_; } public Builder setBearing(float value) { this.bearing_ = value; onChanged(); return this; } public Builder clearBearing() { this.bearing_ = 0.0F; onChanged(); return this; } public int getHDOP() { return this.hDOP_; } public Builder setHDOP(int value) { this.hDOP_ = value; onChanged(); return this; } public Builder clearHDOP() { this.hDOP_ = 0; onChanged(); return this; } public int getTimestamp() { return this.timestamp_; } public Builder setTimestamp(int value) { this.timestamp_ = value; onChanged(); return this; } public Builder clearTimestamp() { this.timestamp_ = 0; onChanged(); return this; } public int getAlarmValue() { return this.alarm_; } public Builder setAlarmValue(int value) { this.alarm_ = value; onChanged(); return this; } public DolphinConfig.AlarmType getAlarm() { DolphinConfig.AlarmType result = DolphinConfig.AlarmType.valueOf(this.alarm_); return (result == null) ? DolphinConfig.AlarmType.UNRECOGNIZED : result; } public Builder setAlarm(DolphinConfig.AlarmType value) { if (value == null) throw new NullPointerException();  this.alarm_ = value.getNumber(); onChanged(); return this; } public Builder clearAlarm() { this.alarm_ = 0; onChanged(); return this; } private void ensureIOListIDIsMutable() { if ((this.bitField0_ & 0x1) == 0) { this.iOListID_ = new ArrayList<>(this.iOListID_); this.bitField0_ |= 0x1; }  } public List<DolphinConfig.AlarmType> getIOListIDList() { return (List<DolphinConfig.AlarmType>)new Internal.ListAdapter(this.iOListID_, DolphinMessages.DataPoint.iOListID_converter_); } public int getIOListIDCount() { return this.iOListID_.size(); } public DolphinConfig.AlarmType getIOListID(int index) { return (DolphinConfig.AlarmType)DolphinMessages.DataPoint.iOListID_converter_.convert(this.iOListID_.get(index)); } public Builder setIOListID(int index, DolphinConfig.AlarmType value) { if (value == null) throw new NullPointerException();  ensureIOListIDIsMutable(); this.iOListID_.set(index, Integer.valueOf(value.getNumber())); onChanged(); return this; } public Builder addIOListID(DolphinConfig.AlarmType value) { if (value == null) throw new NullPointerException();  ensureIOListIDIsMutable(); this.iOListID_.add(Integer.valueOf(value.getNumber())); onChanged(); return this; } public Builder addAllIOListID(Iterable<? extends DolphinConfig.AlarmType> values) { ensureIOListIDIsMutable(); for (DolphinConfig.AlarmType value : values) this.iOListID_.add(Integer.valueOf(value.getNumber()));  onChanged(); return this; } public Builder clearIOListID() { this.iOListID_ = Collections.emptyList(); this.bitField0_ &= 0xFFFFFFFE; onChanged(); return this; } public List<Integer> getIOListIDValueList() { return Collections.unmodifiableList(this.iOListID_); } public int getIOListIDValue(int index) { return ((Integer)this.iOListID_.get(index)).intValue(); } public Builder setIOListIDValue(int index, int value) { ensureIOListIDIsMutable(); this.iOListID_.set(index, Integer.valueOf(value)); onChanged(); return this; } public Builder addIOListIDValue(int value) { ensureIOListIDIsMutable(); this.iOListID_.add(Integer.valueOf(value)); onChanged(); return this; }
/*       */       public Builder addAllIOListIDValue(Iterable<Integer> values) { ensureIOListIDIsMutable(); for (Iterator<Integer> iterator = values.iterator(); iterator.hasNext(); ) { int value = ((Integer)iterator.next()).intValue(); this.iOListID_.add(Integer.valueOf(value)); }  onChanged(); return this; }
/*  5102 */       private void ensureIOListValueIsMutable() { if ((this.bitField0_ & 0x2) == 0) {
/*  5103 */           this.iOListValue_ = DolphinMessages.DataPoint.mutableCopy(this.iOListValue_);
/*  5104 */           this.bitField0_ |= 0x2;
/*       */         }  }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public List<Long> getIOListValueList() {
/*  5113 */         return ((this.bitField0_ & 0x2) != 0) ? 
/*  5114 */           Collections.<Long>unmodifiableList((List<? extends Long>)this.iOListValue_) : (List<Long>)this.iOListValue_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getIOListValueCount() {
/*  5121 */         return this.iOListValue_.size();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public long getIOListValue(int index) {
/*  5129 */         return this.iOListValue_.getLong(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOListValue(int index, long value) {
/*  5139 */         ensureIOListValueIsMutable();
/*  5140 */         this.iOListValue_.setLong(index, value);
/*  5141 */         onChanged();
/*  5142 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addIOListValue(long value) {
/*  5150 */         ensureIOListValueIsMutable();
/*  5151 */         this.iOListValue_.addLong(value);
/*  5152 */         onChanged();
/*  5153 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addAllIOListValue(Iterable<? extends Long> values) {
/*  5162 */         ensureIOListValueIsMutable();
/*  5163 */         AbstractMessageLite.Builder.addAll(values, (List)this.iOListValue_);
/*       */         
/*  5165 */         onChanged();
/*  5166 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearIOListValue() {
/*  5173 */         this.iOListValue_ = DolphinMessages.DataPoint.emptyLongList();
/*  5174 */         this.bitField0_ &= 0xFFFFFFFD;
/*  5175 */         onChanged();
/*  5176 */         return this;
/*       */       }
/*       */ 
/*       */       
/*       */       public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
/*  5181 */         return (Builder)super.setUnknownFields(unknownFields);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
/*  5187 */         return (Builder)super.mergeUnknownFields(unknownFields);
/*       */       } }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*  5197 */     private static final DataPoint DEFAULT_INSTANCE = new DataPoint();
/*       */ 
/*       */     
/*       */     public static DataPoint getDefaultInstance() {
/*  5201 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */ 
/*       */     
/*  5205 */     private static final Parser<DataPoint> PARSER = (Parser<DataPoint>)new AbstractParser<DataPoint>()
/*       */       {
/*       */ 
/*       */         
/*       */         public DolphinMessages.DataPoint parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException
/*       */         {
/*  5211 */           return new DolphinMessages.DataPoint(input, extensionRegistry);
/*       */         }
/*       */       };
/*       */     
/*       */     public static Parser<DataPoint> parser() {
/*  5216 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public Parser<DataPoint> getParserForType() {
/*  5221 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public DataPoint getDefaultInstanceForType() {
/*  5226 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */   }
/*       */ 
/*       */ 
/*       */   
/*       */   public static interface DataPackRequestOrBuilder
/*       */     extends MessageOrBuilder
/*       */   {
/*       */     List<DolphinMessages.DataPoint> getPointsList();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinMessages.DataPoint getPoints(int param1Int);
/*       */ 
/*       */ 
/*       */     
/*       */     int getPointsCount();
/*       */ 
/*       */ 
/*       */     
/*       */     List<? extends DolphinMessages.DataPointOrBuilder> getPointsOrBuilderList();
/*       */ 
/*       */     
/*       */     DolphinMessages.DataPointOrBuilder getPointsOrBuilder(int param1Int);
/*       */   }
/*       */ 
/*       */   
/*       */   public static final class DataPackRequest
/*       */     extends GeneratedMessageV3
/*       */     implements DataPackRequestOrBuilder
/*       */   {
/*       */     private static final long serialVersionUID = 0L;
/*       */     
/*       */     public static final int POINTS_FIELD_NUMBER = 1;
/*       */     
/*       */     private List<DolphinMessages.DataPoint> points_;
/*       */     
/*       */     private byte memoizedIsInitialized;
/*       */ 
/*       */     
/*       */     private DataPackRequest(GeneratedMessageV3.Builder<?> builder)
/*       */     {
/*  5269 */       super(builder);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*  5390 */       this.memoizedIsInitialized = -1; } private DataPackRequest() { this.memoizedIsInitialized = -1; this.points_ = Collections.emptyList(); } protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) { return new DataPackRequest(); } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private DataPackRequest(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this(); if (extensionRegistry == null) throw new NullPointerException();  int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { int tag = input.readTag(); switch (tag) { case 0: done = true; continue;case 10: if ((mutable_bitField0_ & 0x1) == 0) { this.points_ = new ArrayList<>(); mutable_bitField0_ |= 0x1; }  this.points_.add(input.readMessage(DolphinMessages.DataPoint.parser(), extensionRegistry)); continue; }  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this); } finally { if ((mutable_bitField0_ & 0x1) != 0) this.points_ = Collections.unmodifiableList(this.points_);  this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_DataPackRequest_descriptor; } protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() { return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_DataPackRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(DataPackRequest.class, Builder.class); } public List<DolphinMessages.DataPoint> getPointsList() { return this.points_; } public List<? extends DolphinMessages.DataPointOrBuilder> getPointsOrBuilderList() { return (List)this.points_; } public int getPointsCount() { return this.points_.size(); }
/*       */     public DolphinMessages.DataPoint getPoints(int index) { return this.points_.get(index); }
/*       */     public DolphinMessages.DataPointOrBuilder getPointsOrBuilder(int index) { return this.points_.get(index); }
/*  5393 */     public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized;
/*  5394 */       if (isInitialized == 1) return true; 
/*  5395 */       if (isInitialized == 0) return false;
/*       */       
/*  5397 */       this.memoizedIsInitialized = 1;
/*  5398 */       return true; }
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/*  5404 */       for (int i = 0; i < this.points_.size(); i++) {
/*  5405 */         output.writeMessage(1, (MessageLite)this.points_.get(i));
/*       */       }
/*  5407 */       this.unknownFields.writeTo(output);
/*       */     }
/*       */ 
/*       */     
/*       */     public int getSerializedSize() {
/*  5412 */       int size = this.memoizedSize;
/*  5413 */       if (size != -1) return size;
/*       */       
/*  5415 */       size = 0;
/*  5416 */       for (int i = 0; i < this.points_.size(); i++) {
/*  5417 */         size += 
/*  5418 */           CodedOutputStream.computeMessageSize(1, (MessageLite)this.points_.get(i));
/*       */       }
/*  5420 */       size += this.unknownFields.getSerializedSize();
/*  5421 */       this.memoizedSize = size;
/*  5422 */       return size;
/*       */     }
/*       */ 
/*       */     
/*       */     public boolean equals(Object obj) {
/*  5427 */       if (obj == this) {
/*  5428 */         return true;
/*       */       }
/*  5430 */       if (!(obj instanceof DataPackRequest)) {
/*  5431 */         return super.equals(obj);
/*       */       }
/*  5433 */       DataPackRequest other = (DataPackRequest)obj;
/*       */ 
/*       */       
/*  5436 */       if (!getPointsList().equals(other.getPointsList())) return false; 
/*  5437 */       if (!this.unknownFields.equals(other.unknownFields)) return false; 
/*  5438 */       return true;
/*       */     }
/*       */ 
/*       */     
/*       */     public int hashCode() {
/*  5443 */       if (this.memoizedHashCode != 0) {
/*  5444 */         return this.memoizedHashCode;
/*       */       }
/*  5446 */       int hash = 41;
/*  5447 */       hash = 19 * hash + getDescriptor().hashCode();
/*  5448 */       if (getPointsCount() > 0) {
/*  5449 */         hash = 37 * hash + 1;
/*  5450 */         hash = 53 * hash + getPointsList().hashCode();
/*       */       } 
/*  5452 */       hash = 29 * hash + this.unknownFields.hashCode();
/*  5453 */       this.memoizedHashCode = hash;
/*  5454 */       return hash;
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static DataPackRequest parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
/*  5460 */       return (DataPackRequest)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static DataPackRequest parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*  5466 */       return (DataPackRequest)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static DataPackRequest parseFrom(ByteString data) throws InvalidProtocolBufferException {
/*  5471 */       return (DataPackRequest)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static DataPackRequest parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*  5477 */       return (DataPackRequest)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static DataPackRequest parseFrom(byte[] data) throws InvalidProtocolBufferException {
/*  5481 */       return (DataPackRequest)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static DataPackRequest parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*  5487 */       return (DataPackRequest)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static DataPackRequest parseFrom(InputStream input) throws IOException {
/*  5491 */       return 
/*  5492 */         (DataPackRequest)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static DataPackRequest parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*  5498 */       return 
/*  5499 */         (DataPackRequest)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static DataPackRequest parseDelimitedFrom(InputStream input) throws IOException {
/*  5503 */       return 
/*  5504 */         (DataPackRequest)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static DataPackRequest parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*  5510 */       return 
/*  5511 */         (DataPackRequest)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static DataPackRequest parseFrom(CodedInputStream input) throws IOException {
/*  5516 */       return 
/*  5517 */         (DataPackRequest)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static DataPackRequest parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*  5523 */       return 
/*  5524 */         (DataPackRequest)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public Builder newBuilderForType() {
/*  5528 */       return newBuilder();
/*       */     } public static Builder newBuilder() {
/*  5530 */       return DEFAULT_INSTANCE.toBuilder();
/*       */     }
/*       */     public static Builder newBuilder(DataPackRequest prototype) {
/*  5533 */       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
/*       */     }
/*       */     
/*       */     public Builder toBuilder() {
/*  5537 */       return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder())
/*  5538 */         .mergeFrom(this);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
/*  5544 */       Builder builder = new Builder(parent);
/*  5545 */       return builder;
/*       */     }
/*       */     
/*       */     public static final class Builder
/*       */       extends GeneratedMessageV3.Builder<Builder>
/*       */       implements DolphinMessages.DataPackRequestOrBuilder {
/*       */       private int bitField0_;
/*       */       private List<DolphinMessages.DataPoint> points_;
/*       */       private RepeatedFieldBuilderV3<DolphinMessages.DataPoint, DolphinMessages.DataPoint.Builder, DolphinMessages.DataPointOrBuilder> pointsBuilder_;
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/*  5556 */         return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_DataPackRequest_descriptor;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
/*  5562 */         return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_DataPackRequest_fieldAccessorTable
/*  5563 */           .ensureFieldAccessorsInitialized(DolphinMessages.DataPackRequest.class, Builder.class);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private Builder()
/*       */       {
/*  5732 */         this
/*  5733 */           .points_ = Collections.emptyList(); maybeForceBuilderInitialization(); } private Builder(GeneratedMessageV3.BuilderParent parent) { super(parent); this.points_ = Collections.emptyList(); maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (DolphinMessages.DataPackRequest.alwaysUseFieldBuilders) getPointsFieldBuilder();  } public Builder clear() { super.clear(); if (this.pointsBuilder_ == null) { this.points_ = Collections.emptyList(); this.bitField0_ &= 0xFFFFFFFE; } else { this.pointsBuilder_.clear(); }  return this; } public Descriptors.Descriptor getDescriptorForType() { return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_DataPackRequest_descriptor; } public DolphinMessages.DataPackRequest getDefaultInstanceForType() { return DolphinMessages.DataPackRequest.getDefaultInstance(); } public DolphinMessages.DataPackRequest build() { DolphinMessages.DataPackRequest result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public DolphinMessages.DataPackRequest buildPartial() { DolphinMessages.DataPackRequest result = new DolphinMessages.DataPackRequest(this); int from_bitField0_ = this.bitField0_; if (this.pointsBuilder_ == null) { if ((this.bitField0_ & 0x1) != 0) { this.points_ = Collections.unmodifiableList(this.points_); this.bitField0_ &= 0xFFFFFFFE; }  result.points_ = this.points_; } else { result.points_ = this.pointsBuilder_.build(); }  onBuilt(); return result; } public Builder clone() { return (Builder)super.clone(); } public Builder setField(Descriptors.FieldDescriptor field, Object value) { return (Builder)super.setField(field, value); } public Builder clearField(Descriptors.FieldDescriptor field) { return (Builder)super.clearField(field); } public Builder clearOneof(Descriptors.OneofDescriptor oneof) { return (Builder)super.clearOneof(oneof); } public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) { return (Builder)super.setRepeatedField(field, index, value); } public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) { return (Builder)super.addRepeatedField(field, value); } public Builder mergeFrom(Message other) { if (other instanceof DolphinMessages.DataPackRequest) return mergeFrom((DolphinMessages.DataPackRequest)other);  super.mergeFrom(other); return this; } public Builder mergeFrom(DolphinMessages.DataPackRequest other) { if (other == DolphinMessages.DataPackRequest.getDefaultInstance()) return this;  if (this.pointsBuilder_ == null) { if (!other.points_.isEmpty()) { if (this.points_.isEmpty()) { this.points_ = other.points_; this.bitField0_ &= 0xFFFFFFFE; } else { ensurePointsIsMutable(); this.points_.addAll(other.points_); }  onChanged(); }  } else if (!other.points_.isEmpty()) { if (this.pointsBuilder_.isEmpty()) { this.pointsBuilder_.dispose(); this.pointsBuilder_ = null; this.points_ = other.points_; this.bitField0_ &= 0xFFFFFFFE; this.pointsBuilder_ = DolphinMessages.DataPackRequest.alwaysUseFieldBuilders ? getPointsFieldBuilder() : null; } else { this.pointsBuilder_.addAllMessages(other.points_); }  }  mergeUnknownFields(other.unknownFields); onChanged(); return this; } public final boolean isInitialized() { return true; }
/*       */       public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { DolphinMessages.DataPackRequest parsedMessage = null; try { parsedMessage = (DolphinMessages.DataPackRequest)DolphinMessages.DataPackRequest.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (DolphinMessages.DataPackRequest)e.getUnfinishedMessage(); throw e.unwrapIOException(); } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; }
/*  5735 */       private void ensurePointsIsMutable() { if ((this.bitField0_ & 0x1) == 0) {
/*  5736 */           this.points_ = new ArrayList<>(this.points_);
/*  5737 */           this.bitField0_ |= 0x1;
/*       */         }  }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public List<DolphinMessages.DataPoint> getPointsList() {
/*  5748 */         if (this.pointsBuilder_ == null) {
/*  5749 */           return Collections.unmodifiableList(this.points_);
/*       */         }
/*  5751 */         return this.pointsBuilder_.getMessageList();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getPointsCount() {
/*  5758 */         if (this.pointsBuilder_ == null) {
/*  5759 */           return this.points_.size();
/*       */         }
/*  5761 */         return this.pointsBuilder_.getCount();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinMessages.DataPoint getPoints(int index) {
/*  5768 */         if (this.pointsBuilder_ == null) {
/*  5769 */           return this.points_.get(index);
/*       */         }
/*  5771 */         return (DolphinMessages.DataPoint)this.pointsBuilder_.getMessage(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setPoints(int index, DolphinMessages.DataPoint value) {
/*  5779 */         if (this.pointsBuilder_ == null) {
/*  5780 */           if (value == null) {
/*  5781 */             throw new NullPointerException();
/*       */           }
/*  5783 */           ensurePointsIsMutable();
/*  5784 */           this.points_.set(index, value);
/*  5785 */           onChanged();
/*       */         } else {
/*  5787 */           this.pointsBuilder_.setMessage(index, (AbstractMessage)value);
/*       */         } 
/*  5789 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setPoints(int index, DolphinMessages.DataPoint.Builder builderForValue) {
/*  5796 */         if (this.pointsBuilder_ == null) {
/*  5797 */           ensurePointsIsMutable();
/*  5798 */           this.points_.set(index, builderForValue.build());
/*  5799 */           onChanged();
/*       */         } else {
/*  5801 */           this.pointsBuilder_.setMessage(index, (AbstractMessage)builderForValue.build());
/*       */         } 
/*  5803 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addPoints(DolphinMessages.DataPoint value) {
/*  5809 */         if (this.pointsBuilder_ == null) {
/*  5810 */           if (value == null) {
/*  5811 */             throw new NullPointerException();
/*       */           }
/*  5813 */           ensurePointsIsMutable();
/*  5814 */           this.points_.add(value);
/*  5815 */           onChanged();
/*       */         } else {
/*  5817 */           this.pointsBuilder_.addMessage((AbstractMessage)value);
/*       */         } 
/*  5819 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addPoints(int index, DolphinMessages.DataPoint value) {
/*  5826 */         if (this.pointsBuilder_ == null) {
/*  5827 */           if (value == null) {
/*  5828 */             throw new NullPointerException();
/*       */           }
/*  5830 */           ensurePointsIsMutable();
/*  5831 */           this.points_.add(index, value);
/*  5832 */           onChanged();
/*       */         } else {
/*  5834 */           this.pointsBuilder_.addMessage(index, (AbstractMessage)value);
/*       */         } 
/*  5836 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addPoints(DolphinMessages.DataPoint.Builder builderForValue) {
/*  5843 */         if (this.pointsBuilder_ == null) {
/*  5844 */           ensurePointsIsMutable();
/*  5845 */           this.points_.add(builderForValue.build());
/*  5846 */           onChanged();
/*       */         } else {
/*  5848 */           this.pointsBuilder_.addMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*  5850 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addPoints(int index, DolphinMessages.DataPoint.Builder builderForValue) {
/*  5857 */         if (this.pointsBuilder_ == null) {
/*  5858 */           ensurePointsIsMutable();
/*  5859 */           this.points_.add(index, builderForValue.build());
/*  5860 */           onChanged();
/*       */         } else {
/*  5862 */           this.pointsBuilder_.addMessage(index, (AbstractMessage)builderForValue.build());
/*       */         } 
/*  5864 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addAllPoints(Iterable<? extends DolphinMessages.DataPoint> values) {
/*  5871 */         if (this.pointsBuilder_ == null) {
/*  5872 */           ensurePointsIsMutable();
/*  5873 */           AbstractMessageLite.Builder.addAll(values, this.points_);
/*       */           
/*  5875 */           onChanged();
/*       */         } else {
/*  5877 */           this.pointsBuilder_.addAllMessages(values);
/*       */         } 
/*  5879 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearPoints() {
/*  5885 */         if (this.pointsBuilder_ == null) {
/*  5886 */           this.points_ = Collections.emptyList();
/*  5887 */           this.bitField0_ &= 0xFFFFFFFE;
/*  5888 */           onChanged();
/*       */         } else {
/*  5890 */           this.pointsBuilder_.clear();
/*       */         } 
/*  5892 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder removePoints(int index) {
/*  5898 */         if (this.pointsBuilder_ == null) {
/*  5899 */           ensurePointsIsMutable();
/*  5900 */           this.points_.remove(index);
/*  5901 */           onChanged();
/*       */         } else {
/*  5903 */           this.pointsBuilder_.remove(index);
/*       */         } 
/*  5905 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinMessages.DataPoint.Builder getPointsBuilder(int index) {
/*  5912 */         return (DolphinMessages.DataPoint.Builder)getPointsFieldBuilder().getBuilder(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinMessages.DataPointOrBuilder getPointsOrBuilder(int index) {
/*  5919 */         if (this.pointsBuilder_ == null)
/*  5920 */           return this.points_.get(index); 
/*  5921 */         return (DolphinMessages.DataPointOrBuilder)this.pointsBuilder_.getMessageOrBuilder(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public List<? extends DolphinMessages.DataPointOrBuilder> getPointsOrBuilderList() {
/*  5929 */         if (this.pointsBuilder_ != null) {
/*  5930 */           return this.pointsBuilder_.getMessageOrBuilderList();
/*       */         }
/*  5932 */         return Collections.unmodifiableList((List)this.points_);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinMessages.DataPoint.Builder addPointsBuilder() {
/*  5939 */         return (DolphinMessages.DataPoint.Builder)getPointsFieldBuilder().addBuilder(
/*  5940 */             (AbstractMessage)DolphinMessages.DataPoint.getDefaultInstance());
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinMessages.DataPoint.Builder addPointsBuilder(int index) {
/*  5947 */         return (DolphinMessages.DataPoint.Builder)getPointsFieldBuilder().addBuilder(index, 
/*  5948 */             (AbstractMessage)DolphinMessages.DataPoint.getDefaultInstance());
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public List<DolphinMessages.DataPoint.Builder> getPointsBuilderList() {
/*  5955 */         return getPointsFieldBuilder().getBuilderList();
/*       */       }
/*       */ 
/*       */       
/*       */       private RepeatedFieldBuilderV3<DolphinMessages.DataPoint, DolphinMessages.DataPoint.Builder, DolphinMessages.DataPointOrBuilder> getPointsFieldBuilder() {
/*  5960 */         if (this.pointsBuilder_ == null) {
/*  5961 */           this
/*       */ 
/*       */ 
/*       */ 
/*       */             
/*  5966 */             .pointsBuilder_ = new RepeatedFieldBuilderV3(this.points_, ((this.bitField0_ & 0x1) != 0), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*  5967 */           this.points_ = null;
/*       */         } 
/*  5969 */         return this.pointsBuilder_;
/*       */       }
/*       */ 
/*       */       
/*       */       public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
/*  5974 */         return (Builder)super.setUnknownFields(unknownFields);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
/*  5980 */         return (Builder)super.mergeUnknownFields(unknownFields);
/*       */       }
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*  5990 */     private static final DataPackRequest DEFAULT_INSTANCE = new DataPackRequest();
/*       */ 
/*       */     
/*       */     public static DataPackRequest getDefaultInstance() {
/*  5994 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */ 
/*       */     
/*  5998 */     private static final Parser<DataPackRequest> PARSER = (Parser<DataPackRequest>)new AbstractParser<DataPackRequest>()
/*       */       {
/*       */ 
/*       */         
/*       */         public DolphinMessages.DataPackRequest parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException
/*       */         {
/*  6004 */           return new DolphinMessages.DataPackRequest(input, extensionRegistry);
/*       */         }
/*       */       };
/*       */     
/*       */     public static Parser<DataPackRequest> parser() {
/*  6009 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public Parser<DataPackRequest> getParserForType() {
/*  6014 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public DataPackRequest getDefaultInstanceForType() {
/*  6019 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */   }
/*       */ 
/*       */   
/*       */   public static interface DataPackResponseOrBuilder
/*       */     extends MessageOrBuilder
/*       */   {
/*       */     int getResponseValue();
/*       */ 
/*       */     
/*       */     DolphinMessages.DataPackResponseCode getResponse();
/*       */   }
/*       */ 
/*       */   
/*       */   public static final class DataPackResponse
/*       */     extends GeneratedMessageV3
/*       */     implements DataPackResponseOrBuilder
/*       */   {
/*       */     private static final long serialVersionUID = 0L;
/*       */     
/*       */     public static final int RESPONSE_FIELD_NUMBER = 1;
/*       */     
/*       */     private int response_;
/*       */     
/*       */     private byte memoizedIsInitialized;
/*       */ 
/*       */     
/*       */     private DataPackResponse(GeneratedMessageV3.Builder<?> builder)
/*       */     {
/*  6049 */       super(builder);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*  6142 */       this.memoizedIsInitialized = -1; } private DataPackResponse() { this.memoizedIsInitialized = -1; this.response_ = 0; } protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) { return new DataPackResponse(); } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private DataPackResponse(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this(); if (extensionRegistry == null) throw new NullPointerException();  UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { int rawValue, tag = input.readTag(); switch (tag) { case 0: done = true; continue;case 8: rawValue = input.readEnum(); this.response_ = rawValue; continue; }  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this); } finally { this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_DataPackResponse_descriptor; } protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() { return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_DataPackResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(DataPackResponse.class, Builder.class); }
/*       */     public int getResponseValue() { return this.response_; }
/*       */     public DolphinMessages.DataPackResponseCode getResponse() { DolphinMessages.DataPackResponseCode result = DolphinMessages.DataPackResponseCode.valueOf(this.response_); return (result == null) ? DolphinMessages.DataPackResponseCode.UNRECOGNIZED : result; }
/*  6145 */     public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized;
/*  6146 */       if (isInitialized == 1) return true; 
/*  6147 */       if (isInitialized == 0) return false;
/*       */       
/*  6149 */       this.memoizedIsInitialized = 1;
/*  6150 */       return true; }
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/*  6156 */       if (this.response_ != DolphinMessages.DataPackResponseCode.DataPack_Timeout.getNumber()) {
/*  6157 */         output.writeEnum(1, this.response_);
/*       */       }
/*  6159 */       this.unknownFields.writeTo(output);
/*       */     }
/*       */ 
/*       */     
/*       */     public int getSerializedSize() {
/*  6164 */       int size = this.memoizedSize;
/*  6165 */       if (size != -1) return size;
/*       */       
/*  6167 */       size = 0;
/*  6168 */       if (this.response_ != DolphinMessages.DataPackResponseCode.DataPack_Timeout.getNumber()) {
/*  6169 */         size += 
/*  6170 */           CodedOutputStream.computeEnumSize(1, this.response_);
/*       */       }
/*  6172 */       size += this.unknownFields.getSerializedSize();
/*  6173 */       this.memoizedSize = size;
/*  6174 */       return size;
/*       */     }
/*       */ 
/*       */     
/*       */     public boolean equals(Object obj) {
/*  6179 */       if (obj == this) {
/*  6180 */         return true;
/*       */       }
/*  6182 */       if (!(obj instanceof DataPackResponse)) {
/*  6183 */         return super.equals(obj);
/*       */       }
/*  6185 */       DataPackResponse other = (DataPackResponse)obj;
/*       */       
/*  6187 */       if (this.response_ != other.response_) return false; 
/*  6188 */       if (!this.unknownFields.equals(other.unknownFields)) return false; 
/*  6189 */       return true;
/*       */     }
/*       */ 
/*       */     
/*       */     public int hashCode() {
/*  6194 */       if (this.memoizedHashCode != 0) {
/*  6195 */         return this.memoizedHashCode;
/*       */       }
/*  6197 */       int hash = 41;
/*  6198 */       hash = 19 * hash + getDescriptor().hashCode();
/*  6199 */       hash = 37 * hash + 1;
/*  6200 */       hash = 53 * hash + this.response_;
/*  6201 */       hash = 29 * hash + this.unknownFields.hashCode();
/*  6202 */       this.memoizedHashCode = hash;
/*  6203 */       return hash;
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static DataPackResponse parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
/*  6209 */       return (DataPackResponse)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static DataPackResponse parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*  6215 */       return (DataPackResponse)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static DataPackResponse parseFrom(ByteString data) throws InvalidProtocolBufferException {
/*  6220 */       return (DataPackResponse)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static DataPackResponse parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*  6226 */       return (DataPackResponse)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static DataPackResponse parseFrom(byte[] data) throws InvalidProtocolBufferException {
/*  6230 */       return (DataPackResponse)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static DataPackResponse parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*  6236 */       return (DataPackResponse)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static DataPackResponse parseFrom(InputStream input) throws IOException {
/*  6240 */       return 
/*  6241 */         (DataPackResponse)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static DataPackResponse parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*  6247 */       return 
/*  6248 */         (DataPackResponse)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static DataPackResponse parseDelimitedFrom(InputStream input) throws IOException {
/*  6252 */       return 
/*  6253 */         (DataPackResponse)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static DataPackResponse parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*  6259 */       return 
/*  6260 */         (DataPackResponse)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static DataPackResponse parseFrom(CodedInputStream input) throws IOException {
/*  6265 */       return 
/*  6266 */         (DataPackResponse)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static DataPackResponse parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*  6272 */       return 
/*  6273 */         (DataPackResponse)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public Builder newBuilderForType() {
/*  6277 */       return newBuilder();
/*       */     } public static Builder newBuilder() {
/*  6279 */       return DEFAULT_INSTANCE.toBuilder();
/*       */     }
/*       */     public static Builder newBuilder(DataPackResponse prototype) {
/*  6282 */       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
/*       */     }
/*       */     
/*       */     public Builder toBuilder() {
/*  6286 */       return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder())
/*  6287 */         .mergeFrom(this);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
/*  6293 */       Builder builder = new Builder(parent);
/*  6294 */       return builder;
/*       */     }
/*       */ 
/*       */     
/*       */     public static final class Builder
/*       */       extends GeneratedMessageV3.Builder<Builder>
/*       */       implements DolphinMessages.DataPackResponseOrBuilder
/*       */     {
/*       */       private int response_;
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/*  6305 */         return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_DataPackResponse_descriptor;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
/*  6311 */         return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_DataPackResponse_fieldAccessorTable
/*  6312 */           .ensureFieldAccessorsInitialized(DolphinMessages.DataPackResponse.class, Builder.class);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private Builder()
/*       */       {
/*  6443 */         this.response_ = 0; maybeForceBuilderInitialization(); } private Builder(GeneratedMessageV3.BuilderParent parent) { super(parent); this.response_ = 0; maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (DolphinMessages.DataPackResponse.alwaysUseFieldBuilders); } public Builder clear() { super.clear(); this.response_ = 0; return this; } public Descriptors.Descriptor getDescriptorForType() { return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_DataPackResponse_descriptor; } public DolphinMessages.DataPackResponse getDefaultInstanceForType() { return DolphinMessages.DataPackResponse.getDefaultInstance(); } public DolphinMessages.DataPackResponse build() { DolphinMessages.DataPackResponse result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public DolphinMessages.DataPackResponse buildPartial() { DolphinMessages.DataPackResponse result = new DolphinMessages.DataPackResponse(this); result.response_ = this.response_; onBuilt(); return result; } public Builder clone() { return (Builder)super.clone(); } public Builder setField(Descriptors.FieldDescriptor field, Object value) { return (Builder)super.setField(field, value); } public Builder clearField(Descriptors.FieldDescriptor field) { return (Builder)super.clearField(field); } public Builder clearOneof(Descriptors.OneofDescriptor oneof) { return (Builder)super.clearOneof(oneof); } public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) { return (Builder)super.setRepeatedField(field, index, value); }
/*       */       public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) { return (Builder)super.addRepeatedField(field, value); }
/*       */       public Builder mergeFrom(Message other) { if (other instanceof DolphinMessages.DataPackResponse) return mergeFrom((DolphinMessages.DataPackResponse)other);  super.mergeFrom(other); return this; }
/*       */       public Builder mergeFrom(DolphinMessages.DataPackResponse other) { if (other == DolphinMessages.DataPackResponse.getDefaultInstance()) return this;  if (other.response_ != 0) setResponseValue(other.getResponseValue());  mergeUnknownFields(other.unknownFields); onChanged(); return this; }
/*       */       public final boolean isInitialized() { return true; }
/*       */       public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { DolphinMessages.DataPackResponse parsedMessage = null; try { parsedMessage = (DolphinMessages.DataPackResponse)DolphinMessages.DataPackResponse.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (DolphinMessages.DataPackResponse)e.getUnfinishedMessage(); throw e.unwrapIOException(); } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; }
/*  6449 */       public int getResponseValue() { return this.response_; }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setResponseValue(int value) {
/*  6458 */         this.response_ = value;
/*  6459 */         onChanged();
/*  6460 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinMessages.DataPackResponseCode getResponse() {
/*  6469 */         DolphinMessages.DataPackResponseCode result = DolphinMessages.DataPackResponseCode.valueOf(this.response_);
/*  6470 */         return (result == null) ? DolphinMessages.DataPackResponseCode.UNRECOGNIZED : result;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setResponse(DolphinMessages.DataPackResponseCode value) {
/*  6478 */         if (value == null) {
/*  6479 */           throw new NullPointerException();
/*       */         }
/*       */         
/*  6482 */         this.response_ = value.getNumber();
/*  6483 */         onChanged();
/*  6484 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearResponse() {
/*  6492 */         this.response_ = 0;
/*  6493 */         onChanged();
/*  6494 */         return this;
/*       */       }
/*       */ 
/*       */       
/*       */       public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
/*  6499 */         return (Builder)super.setUnknownFields(unknownFields);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
/*  6505 */         return (Builder)super.mergeUnknownFields(unknownFields);
/*       */       }
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*  6515 */     private static final DataPackResponse DEFAULT_INSTANCE = new DataPackResponse();
/*       */ 
/*       */     
/*       */     public static DataPackResponse getDefaultInstance() {
/*  6519 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */ 
/*       */     
/*  6523 */     private static final Parser<DataPackResponse> PARSER = (Parser<DataPackResponse>)new AbstractParser<DataPackResponse>()
/*       */       {
/*       */ 
/*       */         
/*       */         public DolphinMessages.DataPackResponse parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException
/*       */         {
/*  6529 */           return new DolphinMessages.DataPackResponse(input, extensionRegistry);
/*       */         }
/*       */       };
/*       */     
/*       */     public static Parser<DataPackResponse> parser() {
/*  6534 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public Parser<DataPackResponse> getParserForType() {
/*  6539 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public DataPackResponse getDefaultInstanceForType() {
/*  6544 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */   }
/*       */ 
/*       */ 
/*       */   
/*       */   public static interface DeviceInfoOrBuilder
/*       */     extends MessageOrBuilder
/*       */   {
/*       */     String getName();
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getNameBytes();
/*       */ 
/*       */ 
/*       */     
/*       */     long getIMEI();
/*       */ 
/*       */ 
/*       */     
/*       */     String getFirmwareVersion();
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getFirmwareVersionBytes();
/*       */ 
/*       */ 
/*       */     
/*       */     int getRTCTimestamp();
/*       */ 
/*       */ 
/*       */     
/*       */     int getLastStartTimestamp();
/*       */ 
/*       */ 
/*       */     
/*       */     int getUpTime();
/*       */ 
/*       */ 
/*       */     
/*       */     int getTotalUpTime();
/*       */ 
/*       */ 
/*       */     
/*       */     int getGNSSStatusValue();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinMessages.GNSSStatus getGNSSStatus();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean getGNSSFix();
/*       */ 
/*       */ 
/*       */     
/*       */     int getGNSSTimeToFirstFix();
/*       */ 
/*       */ 
/*       */     
/*       */     int getGNSSTimeToLastFix();
/*       */ 
/*       */ 
/*       */     
/*       */     int getGNSSPackets();
/*       */ 
/*       */ 
/*       */     
/*       */     float getGNSSLatitude();
/*       */ 
/*       */ 
/*       */     
/*       */     float getGNSSLongitude();
/*       */ 
/*       */ 
/*       */     
/*       */     int getGNSSAltitude();
/*       */ 
/*       */ 
/*       */     
/*       */     int getGNSSSpeed();
/*       */ 
/*       */ 
/*       */     
/*       */     int getGNSSBearing();
/*       */ 
/*       */ 
/*       */     
/*       */     int getGNSSHDOP();
/*       */ 
/*       */ 
/*       */     
/*       */     int getGNSSPDOP();
/*       */ 
/*       */ 
/*       */     
/*       */     int getGNSSSatsInUse();
/*       */ 
/*       */ 
/*       */     
/*       */     int getGNSSGPSSats();
/*       */ 
/*       */ 
/*       */     
/*       */     int getGNSSGLONASSSats();
/*       */ 
/*       */ 
/*       */     
/*       */     int getGNSSGalileoSats();
/*       */ 
/*       */ 
/*       */     
/*       */     int getGNSSBeidouSats();
/*       */ 
/*       */ 
/*       */     
/*       */     int getGNSSJammingStatusValue();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinMessages.GNSS_JammingStatus getGNSSJammingStatus();
/*       */ 
/*       */ 
/*       */     
/*       */     int getGSMModemStatusValue();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinMessages.ModemStatus getGSMModemStatus();
/*       */ 
/*       */ 
/*       */     
/*       */     int getGSMSIMStatusValue();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinMessages.SIMStatus getGSMSIMStatus();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean getGSMGPRSStatus();
/*       */ 
/*       */ 
/*       */     
/*       */     String getGSMOperatorName();
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getGSMOperatorNameBytes();
/*       */ 
/*       */ 
/*       */     
/*       */     int getGSMOperatorCode();
/*       */ 
/*       */ 
/*       */     
/*       */     int getGSMLocationAreaCode();
/*       */ 
/*       */ 
/*       */     
/*       */     int getGSMCellID();
/*       */ 
/*       */ 
/*       */     
/*       */     int getGSMSignalStrength();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean getGSMJamming();
/*       */ 
/*       */ 
/*       */     
/*       */     int getGSMRecordsSentCount();
/*       */ 
/*       */ 
/*       */     
/*       */     int getGSMRecordsLastSentTime();
/*       */ 
/*       */ 
/*       */     
/*       */     int getGSMRecordsLastServerResponseTime();
/*       */ 
/*       */ 
/*       */     
/*       */     int getGSMRecordsCount();
/*       */ 
/*       */ 
/*       */     
/*       */     int getGSMGPRSSentData();
/*       */ 
/*       */ 
/*       */     
/*       */     int getGSMGPRSReceivedData();
/*       */ 
/*       */ 
/*       */     
/*       */     int getGSMSMSSent();
/*       */ 
/*       */ 
/*       */     
/*       */     int getGSMSMSReceived();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean getGSMSocketState();
/*       */ 
/*       */ 
/*       */     
/*       */     int getBluetoothStatusValue();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinMessages.BluetoothStatus getBluetoothStatus();
/*       */ 
/*       */ 
/*       */     
/*       */     String getBluetoothName();
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getBluetoothNameBytes();
/*       */ 
/*       */ 
/*       */     
/*       */     String getBluetoothMAC();
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getBluetoothMACBytes();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean getBluetoothDataLinkConnectStatus();
/*       */ 
/*       */ 
/*       */     
/*       */     String getBluetoothDataLinkName();
/*       */ 
/*       */     
/*       */     ByteString getBluetoothDataLinkNameBytes();
/*       */ 
/*       */     
/*       */     String getBluetoothDataLinkMAC();
/*       */ 
/*       */     
/*       */     ByteString getBluetoothDataLinkMACBytes();
/*       */ 
/*       */     
/*       */     int getBluetoothExtDeviceStatusValue();
/*       */ 
/*       */     
/*       */     DolphinMessages.BluetoothExtDeviceStatus getBluetoothExtDeviceStatus();
/*       */ 
/*       */     
/*       */     String getBluetoothExtDeviceName();
/*       */ 
/*       */     
/*       */     ByteString getBluetoothExtDeviceNameBytes();
/*       */ 
/*       */     
/*       */     String getBluetoothExtDeviceMAC();
/*       */ 
/*       */     
/*       */     ByteString getBluetoothExtDeviceMACBytes();
/*       */ 
/*       */     
/*       */     List<DolphinConfig.AlarmType> getIOListIDList();
/*       */ 
/*       */     
/*       */     int getIOListIDCount();
/*       */ 
/*       */     
/*       */     DolphinConfig.AlarmType getIOListID(int param1Int);
/*       */ 
/*       */     
/*       */     List<Integer> getIOListIDValueList();
/*       */ 
/*       */     
/*       */     int getIOListIDValue(int param1Int);
/*       */ 
/*       */     
/*       */     List<Long> getIOListValueList();
/*       */ 
/*       */     
/*       */     int getIOListValueCount();
/*       */ 
/*       */     
/*       */     long getIOListValue(int param1Int);
/*       */   }
/*       */ 
/*       */   
/*       */   public static final class DeviceInfo
/*       */     extends GeneratedMessageV3
/*       */     implements DeviceInfoOrBuilder
/*       */   {
/*       */     private static final long serialVersionUID = 0L;
/*       */     
/*       */     public static final int NAME_FIELD_NUMBER = 1;
/*       */     
/*       */     private volatile Object name_;
/*       */     
/*       */     public static final int IMEI_FIELD_NUMBER = 2;
/*       */     
/*       */     private long iMEI_;
/*       */     
/*       */     public static final int FIRMWAREVERSION_FIELD_NUMBER = 3;
/*       */     
/*       */     private volatile Object firmwareVersion_;
/*       */     
/*       */     public static final int RTCTIMESTAMP_FIELD_NUMBER = 10;
/*       */     
/*       */     private int rTCTimestamp_;
/*       */     
/*       */     public static final int LASTSTARTTIMESTAMP_FIELD_NUMBER = 11;
/*       */     
/*       */     private int lastStartTimestamp_;
/*       */     
/*       */     public static final int UPTIME_FIELD_NUMBER = 12;
/*       */     
/*       */     private int upTime_;
/*       */     
/*       */     public static final int TOTALUPTIME_FIELD_NUMBER = 13;
/*       */     
/*       */     private int totalUpTime_;
/*       */     
/*       */     public static final int GNSS_STATUS_FIELD_NUMBER = 20;
/*       */     
/*       */     private int gNSSStatus_;
/*       */     
/*       */     public static final int GNSS_FIX_FIELD_NUMBER = 21;
/*       */     
/*       */     private boolean gNSSFix_;
/*       */     
/*       */     public static final int GNSS_TIMETOFIRSTFIX_FIELD_NUMBER = 22;
/*       */     
/*       */     private int gNSSTimeToFirstFix_;
/*       */     
/*       */     public static final int GNSS_TIMETOLASTFIX_FIELD_NUMBER = 23;
/*       */     
/*       */     private int gNSSTimeToLastFix_;
/*       */     
/*       */     public static final int GNSS_PACKETS_FIELD_NUMBER = 25;
/*       */     
/*       */     private int gNSSPackets_;
/*       */     
/*       */     public static final int GNSS_LATITUDE_FIELD_NUMBER = 26;
/*       */     
/*       */     private float gNSSLatitude_;
/*       */     
/*       */     public static final int GNSS_LONGITUDE_FIELD_NUMBER = 27;
/*       */     
/*       */     private float gNSSLongitude_;
/*       */     
/*       */     public static final int GNSS_ALTITUDE_FIELD_NUMBER = 28;
/*       */     
/*       */     private int gNSSAltitude_;
/*       */     
/*       */     public static final int GNSS_SPEED_FIELD_NUMBER = 29;
/*       */     
/*       */     private int gNSSSpeed_;
/*       */     
/*       */     public static final int GNSS_BEARING_FIELD_NUMBER = 30;
/*       */     
/*       */     private int gNSSBearing_;
/*       */     
/*       */     public static final int GNSS_HDOP_FIELD_NUMBER = 31;
/*       */     
/*       */     private int gNSSHDOP_;
/*       */     
/*       */     public static final int GNSS_PDOP_FIELD_NUMBER = 32;
/*       */     
/*       */     private int gNSSPDOP_;
/*       */     
/*       */     public static final int GNSS_SATSINUSE_FIELD_NUMBER = 33;
/*       */     
/*       */     private int gNSSSatsInUse_;
/*       */     
/*       */     public static final int GNSS_GPSSATS_FIELD_NUMBER = 34;
/*       */     
/*       */     private int gNSSGPSSats_;
/*       */     
/*       */     public static final int GNSS_GLONASSSATS_FIELD_NUMBER = 35;
/*       */     
/*       */     private int gNSSGLONASSSats_;
/*       */     
/*       */     public static final int GNSS_GALILEOSATS_FIELD_NUMBER = 36;
/*       */     
/*       */     private int gNSSGalileoSats_;
/*       */     
/*       */     public static final int GNSS_BEIDOUSATS_FIELD_NUMBER = 37;
/*       */     
/*       */     private int gNSSBeidouSats_;
/*       */     
/*       */     public static final int GNSS_JAMMINGSTATUS_FIELD_NUMBER = 38;
/*       */     
/*       */     private int gNSSJammingStatus_;
/*       */     
/*       */     public static final int GSM_MODEMSTATUS_FIELD_NUMBER = 50;
/*       */     
/*       */     private int gSMModemStatus_;
/*       */     
/*       */     public static final int GSM_SIMSTATUS_FIELD_NUMBER = 52;
/*       */     
/*       */     private int gSMSIMStatus_;
/*       */     
/*       */     public static final int GSM_GPRSSTATUS_FIELD_NUMBER = 53;
/*       */     
/*       */     private boolean gSMGPRSStatus_;
/*       */     
/*       */     public static final int GSM_OPERATORNAME_FIELD_NUMBER = 54;
/*       */     
/*       */     private volatile Object gSMOperatorName_;
/*       */     
/*       */     public static final int GSM_OPERATORCODE_FIELD_NUMBER = 55;
/*       */     
/*       */     private int gSMOperatorCode_;
/*       */     
/*       */     public static final int GSM_LOCATIONAREACODE_FIELD_NUMBER = 56;
/*       */     
/*       */     private int gSMLocationAreaCode_;
/*       */     
/*       */     public static final int GSM_CELLID_FIELD_NUMBER = 57;
/*       */     
/*       */     private int gSMCellID_;
/*       */     
/*       */     public static final int GSM_SIGNALSTRENGTH_FIELD_NUMBER = 58;
/*       */     
/*       */     private int gSMSignalStrength_;
/*       */     
/*       */     public static final int GSM_JAMMING_FIELD_NUMBER = 59;
/*       */     
/*       */     private boolean gSMJamming_;
/*       */     
/*       */     public static final int GSM_RECORDS_SENTCOUNT_FIELD_NUMBER = 60;
/*       */     
/*       */     private int gSMRecordsSentCount_;
/*       */     
/*       */     public static final int GSM_RECORDS_LASTSENTTIME_FIELD_NUMBER = 61;
/*       */     
/*       */     private int gSMRecordsLastSentTime_;
/*       */     
/*       */     public static final int GSM_RECORDS_LASTSERVERRESPONSETIME_FIELD_NUMBER = 62;
/*       */     
/*       */     private int gSMRecordsLastServerResponseTime_;
/*       */     
/*       */     public static final int GSM_RECORDS_COUNT_FIELD_NUMBER = 63;
/*       */     
/*       */     private int gSMRecordsCount_;
/*       */     
/*       */     public static final int GSM_GPRS_SENTDATA_FIELD_NUMBER = 65;
/*       */     
/*       */     private int gSMGPRSSentData_;
/*       */     
/*       */     public static final int GSM_GPRS_RECEIVEDDATA_FIELD_NUMBER = 66;
/*       */     
/*       */     private int gSMGPRSReceivedData_;
/*       */     
/*       */     public static final int GSM_SMS_SENT_FIELD_NUMBER = 69;
/*       */     
/*       */     private int gSMSMSSent_;
/*       */     
/*       */     public static final int GSM_SMS_RECEIVED_FIELD_NUMBER = 70;
/*       */     
/*       */     private int gSMSMSReceived_;
/*       */     
/*       */     public static final int GSM_SOCKET_STATE_FIELD_NUMBER = 75;
/*       */     
/*       */     private boolean gSMSocketState_;
/*       */     
/*       */     public static final int BLUETOOTH_STATUS_FIELD_NUMBER = 80;
/*       */     
/*       */     private int bluetoothStatus_;
/*       */     
/*       */     public static final int BLUETOOTH_NAME_FIELD_NUMBER = 81;
/*       */     
/*       */     private volatile Object bluetoothName_;
/*       */     
/*       */     public static final int BLUETOOTH_MAC_FIELD_NUMBER = 82;
/*       */     
/*       */     private volatile Object bluetoothMAC_;
/*       */     
/*       */     public static final int BLUETOOTH_DATALINK_CONNECTSTATUS_FIELD_NUMBER = 83;
/*       */     
/*       */     private boolean bluetoothDataLinkConnectStatus_;
/*       */     
/*       */     public static final int BLUETOOTH_DATALINK_NAME_FIELD_NUMBER = 84;
/*       */     
/*       */     private volatile Object bluetoothDataLinkName_;
/*       */     
/*       */     public static final int BLUETOOTH_DATALINK_MAC_FIELD_NUMBER = 85;
/*       */     
/*       */     private volatile Object bluetoothDataLinkMAC_;
/*       */     
/*       */     public static final int BLUETOOTH_EXTDEVICE_STATUS_FIELD_NUMBER = 86;
/*       */     
/*       */     private int bluetoothExtDeviceStatus_;
/*       */     
/*       */     public static final int BLUETOOTH_EXTDEVICE_NAME_FIELD_NUMBER = 87;
/*       */     
/*       */     private volatile Object bluetoothExtDeviceName_;
/*       */     
/*       */     public static final int BLUETOOTH_EXTDEVICE_MAC_FIELD_NUMBER = 88;
/*       */     
/*       */     private volatile Object bluetoothExtDeviceMAC_;
/*       */     
/*       */     public static final int IOLIST_ID_FIELD_NUMBER = 100;
/*       */     
/*       */     private List<Integer> iOListID_;
/*       */ 
/*       */     
/*       */     private DeviceInfo(GeneratedMessageV3.Builder<?> builder)
/*       */     {
/*  7057 */       super(builder);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*  8462 */       this.iOListValueMemoizedSerializedSize = -1;
/*       */       
/*  8464 */       this.memoizedIsInitialized = -1; } private DeviceInfo() { this.iOListValueMemoizedSerializedSize = -1; this.memoizedIsInitialized = -1; this.name_ = ""; this.firmwareVersion_ = ""; this.gNSSStatus_ = 0; this.gNSSJammingStatus_ = 0; this.gSMModemStatus_ = 0; this.gSMSIMStatus_ = 0; this.gSMOperatorName_ = ""; this.bluetoothStatus_ = 0; this.bluetoothName_ = ""; this.bluetoothMAC_ = ""; this.bluetoothDataLinkName_ = ""; this.bluetoothDataLinkMAC_ = ""; this.bluetoothExtDeviceStatus_ = 0; this.bluetoothExtDeviceName_ = ""; this.bluetoothExtDeviceMAC_ = ""; this.iOListID_ = Collections.emptyList(); this.iOListValue_ = emptyLongList(); } protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) { return new DeviceInfo(); } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private DeviceInfo(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this(); if (extensionRegistry == null) throw new NullPointerException();  int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { String str3; int k; String str2; int j; String str1; int i; String s; int rawValue, length, oldLimit, limit, tag = input.readTag(); switch (tag) { case 0: done = true; continue;case 10: str3 = input.readStringRequireUtf8(); this.name_ = str3; continue;case 17: this.iMEI_ = input.readFixed64(); continue;case 26: str3 = input.readStringRequireUtf8(); this.firmwareVersion_ = str3; continue;case 85: this.rTCTimestamp_ = input.readFixed32(); continue;case 93: this.lastStartTimestamp_ = input.readFixed32(); continue;case 96: this.upTime_ = input.readUInt32(); continue;case 104: this.totalUpTime_ = input.readUInt32(); continue;case 160: k = input.readEnum(); this.gNSSStatus_ = k; continue;case 168: this.gNSSFix_ = input.readBool(); continue;case 176: this.gNSSTimeToFirstFix_ = input.readUInt32(); continue;case 184: this.gNSSTimeToLastFix_ = input.readUInt32(); continue;case 200: this.gNSSPackets_ = input.readUInt32(); continue;case 213: this.gNSSLatitude_ = input.readFloat(); continue;case 221: this.gNSSLongitude_ = input.readFloat(); continue;case 224: this.gNSSAltitude_ = input.readUInt32(); continue;case 232: this.gNSSSpeed_ = input.readUInt32(); continue;case 240: this.gNSSBearing_ = input.readUInt32(); continue;case 248: this.gNSSHDOP_ = input.readUInt32(); continue;case 256: this.gNSSPDOP_ = input.readUInt32(); continue;case 264: this.gNSSSatsInUse_ = input.readUInt32(); continue;case 272: this.gNSSGPSSats_ = input.readUInt32(); continue;case 280: this.gNSSGLONASSSats_ = input.readUInt32(); continue;case 288: this.gNSSGalileoSats_ = input.readUInt32(); continue;case 296: this.gNSSBeidouSats_ = input.readUInt32(); continue;case 304: k = input.readEnum(); this.gNSSJammingStatus_ = k; continue;case 400: k = input.readEnum(); this.gSMModemStatus_ = k; continue;case 416: k = input.readEnum(); this.gSMSIMStatus_ = k; continue;case 424: this.gSMGPRSStatus_ = input.readBool(); continue;case 434: str2 = input.readStringRequireUtf8(); this.gSMOperatorName_ = str2; continue;case 440: this.gSMOperatorCode_ = input.readUInt32(); continue;case 448: this.gSMLocationAreaCode_ = input.readUInt32(); continue;case 456: this.gSMCellID_ = input.readUInt32(); continue;case 464: this.gSMSignalStrength_ = input.readUInt32(); continue;case 472: this.gSMJamming_ = input.readBool(); continue;case 480: this.gSMRecordsSentCount_ = input.readUInt32(); continue;case 488: this.gSMRecordsLastSentTime_ = input.readUInt32(); continue;case 496: this.gSMRecordsLastServerResponseTime_ = input.readUInt32(); continue;case 504: this.gSMRecordsCount_ = input.readUInt32(); continue;case 520: this.gSMGPRSSentData_ = input.readUInt32(); continue;case 528: this.gSMGPRSReceivedData_ = input.readUInt32(); continue;case 552: this.gSMSMSSent_ = input.readUInt32(); continue;case 560: this.gSMSMSReceived_ = input.readUInt32(); continue;case 600: this.gSMSocketState_ = input.readBool(); continue;case 640: j = input.readEnum(); this.bluetoothStatus_ = j; continue;case 650: str1 = input.readStringRequireUtf8(); this.bluetoothName_ = str1; continue;case 658: str1 = input.readStringRequireUtf8(); this.bluetoothMAC_ = str1; continue;case 664: this.bluetoothDataLinkConnectStatus_ = input.readBool(); continue;case 674: str1 = input.readStringRequireUtf8(); this.bluetoothDataLinkName_ = str1; continue;case 682: str1 = input.readStringRequireUtf8(); this.bluetoothDataLinkMAC_ = str1; continue;case 688: i = input.readEnum(); this.bluetoothExtDeviceStatus_ = i; continue;case 698: s = input.readStringRequireUtf8(); this.bluetoothExtDeviceName_ = s; continue;case 706: s = input.readStringRequireUtf8(); this.bluetoothExtDeviceMAC_ = s; continue;case 800: rawValue = input.readEnum(); if ((mutable_bitField0_ & 0x1) == 0) { this.iOListID_ = new ArrayList<>(); mutable_bitField0_ |= 0x1; }  this.iOListID_.add(Integer.valueOf(rawValue)); continue;case 802: length = input.readRawVarint32(); oldLimit = input.pushLimit(length); while (input.getBytesUntilLimit() > 0) { int m = input.readEnum(); if ((mutable_bitField0_ & 0x1) == 0) { this.iOListID_ = new ArrayList<>(); mutable_bitField0_ |= 0x1; }  this.iOListID_.add(Integer.valueOf(m)); }  input.popLimit(oldLimit); continue;case 808: if ((mutable_bitField0_ & 0x2) == 0) { this.iOListValue_ = newLongList(); mutable_bitField0_ |= 0x2; }  this.iOListValue_.addLong(input.readUInt64()); continue;case 810: length = input.readRawVarint32(); limit = input.pushLimit(length); if ((mutable_bitField0_ & 0x2) == 0 && input.getBytesUntilLimit() > 0) { this.iOListValue_ = newLongList(); mutable_bitField0_ |= 0x2; }  while (input.getBytesUntilLimit() > 0) this.iOListValue_.addLong(input.readUInt64());  input.popLimit(limit); continue; }  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this); } finally { if ((mutable_bitField0_ & 0x1) != 0) this.iOListID_ = Collections.unmodifiableList(this.iOListID_);  if ((mutable_bitField0_ & 0x2) != 0) this.iOListValue_.makeImmutable();  this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_DeviceInfo_descriptor; } protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() { return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_DeviceInfo_fieldAccessorTable.ensureFieldAccessorsInitialized(DeviceInfo.class, Builder.class); } public String getName() { Object ref = this.name_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.name_ = s; return s; } public ByteString getNameBytes() { Object ref = this.name_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.name_ = b; return b; }  return (ByteString)ref; } public long getIMEI() { return this.iMEI_; } public String getFirmwareVersion() { Object ref = this.firmwareVersion_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.firmwareVersion_ = s; return s; } public ByteString getFirmwareVersionBytes() { Object ref = this.firmwareVersion_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.firmwareVersion_ = b; return b; }  return (ByteString)ref; } public int getRTCTimestamp() { return this.rTCTimestamp_; } public int getLastStartTimestamp() { return this.lastStartTimestamp_; } public int getUpTime() { return this.upTime_; } public int getTotalUpTime() { return this.totalUpTime_; } public int getGNSSStatusValue() { return this.gNSSStatus_; } public DolphinMessages.GNSSStatus getGNSSStatus() { DolphinMessages.GNSSStatus result = DolphinMessages.GNSSStatus.valueOf(this.gNSSStatus_); return (result == null) ? DolphinMessages.GNSSStatus.UNRECOGNIZED : result; } public boolean getGNSSFix() { return this.gNSSFix_; } public int getGNSSTimeToFirstFix() { return this.gNSSTimeToFirstFix_; } public int getGNSSTimeToLastFix() { return this.gNSSTimeToLastFix_; } public int getGNSSPackets() { return this.gNSSPackets_; } public float getGNSSLatitude() { return this.gNSSLatitude_; } public float getGNSSLongitude() { return this.gNSSLongitude_; } public int getGNSSAltitude() { return this.gNSSAltitude_; } public int getGNSSSpeed() { return this.gNSSSpeed_; } public int getGNSSBearing() { return this.gNSSBearing_; } public int getGNSSHDOP() { return this.gNSSHDOP_; } public int getGNSSPDOP() { return this.gNSSPDOP_; } public int getGNSSSatsInUse() { return this.gNSSSatsInUse_; } public int getGNSSGPSSats() { return this.gNSSGPSSats_; } public int getGNSSGLONASSSats() { return this.gNSSGLONASSSats_; } public int getGNSSGalileoSats() { return this.gNSSGalileoSats_; } public int getGNSSBeidouSats() { return this.gNSSBeidouSats_; } public int getGNSSJammingStatusValue() { return this.gNSSJammingStatus_; } public DolphinMessages.GNSS_JammingStatus getGNSSJammingStatus() { DolphinMessages.GNSS_JammingStatus result = DolphinMessages.GNSS_JammingStatus.valueOf(this.gNSSJammingStatus_); return (result == null) ? DolphinMessages.GNSS_JammingStatus.UNRECOGNIZED : result; } public int getGSMModemStatusValue() { return this.gSMModemStatus_; } public DolphinMessages.ModemStatus getGSMModemStatus() { DolphinMessages.ModemStatus result = DolphinMessages.ModemStatus.valueOf(this.gSMModemStatus_); return (result == null) ? DolphinMessages.ModemStatus.UNRECOGNIZED : result; } public int getGSMSIMStatusValue() { return this.gSMSIMStatus_; } public DolphinMessages.SIMStatus getGSMSIMStatus() { DolphinMessages.SIMStatus result = DolphinMessages.SIMStatus.valueOf(this.gSMSIMStatus_); return (result == null) ? DolphinMessages.SIMStatus.UNRECOGNIZED : result; } public boolean getGSMGPRSStatus() { return this.gSMGPRSStatus_; } public String getGSMOperatorName() { Object ref = this.gSMOperatorName_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.gSMOperatorName_ = s; return s; } public ByteString getGSMOperatorNameBytes() { Object ref = this.gSMOperatorName_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.gSMOperatorName_ = b; return b; }  return (ByteString)ref; } public int getGSMOperatorCode() { return this.gSMOperatorCode_; } public int getGSMLocationAreaCode() { return this.gSMLocationAreaCode_; } public int getGSMCellID() { return this.gSMCellID_; } public int getGSMSignalStrength() { return this.gSMSignalStrength_; } public boolean getGSMJamming() { return this.gSMJamming_; } public int getGSMRecordsSentCount() { return this.gSMRecordsSentCount_; } public int getGSMRecordsLastSentTime() { return this.gSMRecordsLastSentTime_; } public int getGSMRecordsLastServerResponseTime() { return this.gSMRecordsLastServerResponseTime_; } public int getGSMRecordsCount() { return this.gSMRecordsCount_; } public int getGSMGPRSSentData() { return this.gSMGPRSSentData_; } public int getGSMGPRSReceivedData() { return this.gSMGPRSReceivedData_; } public int getGSMSMSSent() { return this.gSMSMSSent_; } public int getGSMSMSReceived() { return this.gSMSMSReceived_; } public boolean getGSMSocketState() { return this.gSMSocketState_; } public int getBluetoothStatusValue() { return this.bluetoothStatus_; } public DolphinMessages.BluetoothStatus getBluetoothStatus() { DolphinMessages.BluetoothStatus result = DolphinMessages.BluetoothStatus.valueOf(this.bluetoothStatus_); return (result == null) ? DolphinMessages.BluetoothStatus.UNRECOGNIZED : result; } public String getBluetoothName() { Object ref = this.bluetoothName_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.bluetoothName_ = s; return s; } public ByteString getBluetoothNameBytes() { Object ref = this.bluetoothName_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.bluetoothName_ = b; return b; }  return (ByteString)ref; } public String getBluetoothMAC() { Object ref = this.bluetoothMAC_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.bluetoothMAC_ = s; return s; } public ByteString getBluetoothMACBytes() { Object ref = this.bluetoothMAC_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.bluetoothMAC_ = b; return b; }  return (ByteString)ref; } public boolean getBluetoothDataLinkConnectStatus() { return this.bluetoothDataLinkConnectStatus_; } public String getBluetoothDataLinkName() { Object ref = this.bluetoothDataLinkName_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.bluetoothDataLinkName_ = s; return s; } public ByteString getBluetoothDataLinkNameBytes() { Object ref = this.bluetoothDataLinkName_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.bluetoothDataLinkName_ = b; return b; }  return (ByteString)ref; } public String getBluetoothDataLinkMAC() { Object ref = this.bluetoothDataLinkMAC_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.bluetoothDataLinkMAC_ = s; return s; } public ByteString getBluetoothDataLinkMACBytes() { Object ref = this.bluetoothDataLinkMAC_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.bluetoothDataLinkMAC_ = b; return b; }  return (ByteString)ref; } public int getBluetoothExtDeviceStatusValue() { return this.bluetoothExtDeviceStatus_; } public DolphinMessages.BluetoothExtDeviceStatus getBluetoothExtDeviceStatus() { DolphinMessages.BluetoothExtDeviceStatus result = DolphinMessages.BluetoothExtDeviceStatus.valueOf(this.bluetoothExtDeviceStatus_); return (result == null) ? DolphinMessages.BluetoothExtDeviceStatus.UNRECOGNIZED : result; } public String getBluetoothExtDeviceName() { Object ref = this.bluetoothExtDeviceName_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.bluetoothExtDeviceName_ = s; return s; } public ByteString getBluetoothExtDeviceNameBytes() { Object ref = this.bluetoothExtDeviceName_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.bluetoothExtDeviceName_ = b; return b; }  return (ByteString)ref; } public String getBluetoothExtDeviceMAC() { Object ref = this.bluetoothExtDeviceMAC_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.bluetoothExtDeviceMAC_ = s; return s; } public ByteString getBluetoothExtDeviceMACBytes() { Object ref = this.bluetoothExtDeviceMAC_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.bluetoothExtDeviceMAC_ = b; return b; }  return (ByteString)ref; } private static final Internal.ListAdapter.Converter<Integer, DolphinConfig.AlarmType> iOListID_converter_ = new Internal.ListAdapter.Converter<Integer, DolphinConfig.AlarmType>() { public DolphinConfig.AlarmType convert(Integer from) { DolphinConfig.AlarmType result = DolphinConfig.AlarmType.valueOf(from.intValue()); return (result == null) ? DolphinConfig.AlarmType.UNRECOGNIZED : result; } }
/*       */     ; private int iOListIDMemoizedSerializedSize; public static final int IOLIST_VALUE_FIELD_NUMBER = 101; private Internal.LongList iOListValue_; private int iOListValueMemoizedSerializedSize; private byte memoizedIsInitialized; public List<DolphinConfig.AlarmType> getIOListIDList() { return (List<DolphinConfig.AlarmType>)new Internal.ListAdapter(this.iOListID_, iOListID_converter_); } public int getIOListIDCount() { return this.iOListID_.size(); } public DolphinConfig.AlarmType getIOListID(int index) { return (DolphinConfig.AlarmType)iOListID_converter_.convert(this.iOListID_.get(index)); } public List<Integer> getIOListIDValueList() { return this.iOListID_; } public int getIOListIDValue(int index) { return ((Integer)this.iOListID_.get(index)).intValue(); } public List<Long> getIOListValueList() { return (List<Long>)this.iOListValue_; } public int getIOListValueCount() { return this.iOListValue_.size(); }
/*       */     public long getIOListValue(int index) { return this.iOListValue_.getLong(index); }
/*  8467 */     public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized;
/*  8468 */       if (isInitialized == 1) return true; 
/*  8469 */       if (isInitialized == 0) return false;
/*       */       
/*  8471 */       this.memoizedIsInitialized = 1;
/*  8472 */       return true; }
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/*  8478 */       getSerializedSize();
/*  8479 */       if (!getNameBytes().isEmpty()) {
/*  8480 */         GeneratedMessageV3.writeString(output, 1, this.name_);
/*       */       }
/*  8482 */       if (this.iMEI_ != 0L) {
/*  8483 */         output.writeFixed64(2, this.iMEI_);
/*       */       }
/*  8485 */       if (!getFirmwareVersionBytes().isEmpty()) {
/*  8486 */         GeneratedMessageV3.writeString(output, 3, this.firmwareVersion_);
/*       */       }
/*  8488 */       if (this.rTCTimestamp_ != 0) {
/*  8489 */         output.writeFixed32(10, this.rTCTimestamp_);
/*       */       }
/*  8491 */       if (this.lastStartTimestamp_ != 0) {
/*  8492 */         output.writeFixed32(11, this.lastStartTimestamp_);
/*       */       }
/*  8494 */       if (this.upTime_ != 0) {
/*  8495 */         output.writeUInt32(12, this.upTime_);
/*       */       }
/*  8497 */       if (this.totalUpTime_ != 0) {
/*  8498 */         output.writeUInt32(13, this.totalUpTime_);
/*       */       }
/*  8500 */       if (this.gNSSStatus_ != DolphinMessages.GNSSStatus.GNSS_Off.getNumber()) {
/*  8501 */         output.writeEnum(20, this.gNSSStatus_);
/*       */       }
/*  8503 */       if (this.gNSSFix_) {
/*  8504 */         output.writeBool(21, this.gNSSFix_);
/*       */       }
/*  8506 */       if (this.gNSSTimeToFirstFix_ != 0) {
/*  8507 */         output.writeUInt32(22, this.gNSSTimeToFirstFix_);
/*       */       }
/*  8509 */       if (this.gNSSTimeToLastFix_ != 0) {
/*  8510 */         output.writeUInt32(23, this.gNSSTimeToLastFix_);
/*       */       }
/*  8512 */       if (this.gNSSPackets_ != 0) {
/*  8513 */         output.writeUInt32(25, this.gNSSPackets_);
/*       */       }
/*  8515 */       if (this.gNSSLatitude_ != 0.0F) {
/*  8516 */         output.writeFloat(26, this.gNSSLatitude_);
/*       */       }
/*  8518 */       if (this.gNSSLongitude_ != 0.0F) {
/*  8519 */         output.writeFloat(27, this.gNSSLongitude_);
/*       */       }
/*  8521 */       if (this.gNSSAltitude_ != 0) {
/*  8522 */         output.writeUInt32(28, this.gNSSAltitude_);
/*       */       }
/*  8524 */       if (this.gNSSSpeed_ != 0) {
/*  8525 */         output.writeUInt32(29, this.gNSSSpeed_);
/*       */       }
/*  8527 */       if (this.gNSSBearing_ != 0) {
/*  8528 */         output.writeUInt32(30, this.gNSSBearing_);
/*       */       }
/*  8530 */       if (this.gNSSHDOP_ != 0) {
/*  8531 */         output.writeUInt32(31, this.gNSSHDOP_);
/*       */       }
/*  8533 */       if (this.gNSSPDOP_ != 0) {
/*  8534 */         output.writeUInt32(32, this.gNSSPDOP_);
/*       */       }
/*  8536 */       if (this.gNSSSatsInUse_ != 0) {
/*  8537 */         output.writeUInt32(33, this.gNSSSatsInUse_);
/*       */       }
/*  8539 */       if (this.gNSSGPSSats_ != 0) {
/*  8540 */         output.writeUInt32(34, this.gNSSGPSSats_);
/*       */       }
/*  8542 */       if (this.gNSSGLONASSSats_ != 0) {
/*  8543 */         output.writeUInt32(35, this.gNSSGLONASSSats_);
/*       */       }
/*  8545 */       if (this.gNSSGalileoSats_ != 0) {
/*  8546 */         output.writeUInt32(36, this.gNSSGalileoSats_);
/*       */       }
/*  8548 */       if (this.gNSSBeidouSats_ != 0) {
/*  8549 */         output.writeUInt32(37, this.gNSSBeidouSats_);
/*       */       }
/*  8551 */       if (this.gNSSJammingStatus_ != DolphinMessages.GNSS_JammingStatus.GNSS_UnknownJammingStatus.getNumber()) {
/*  8552 */         output.writeEnum(38, this.gNSSJammingStatus_);
/*       */       }
/*  8554 */       if (this.gSMModemStatus_ != DolphinMessages.ModemStatus.ModemStatus_Off.getNumber()) {
/*  8555 */         output.writeEnum(50, this.gSMModemStatus_);
/*       */       }
/*  8557 */       if (this.gSMSIMStatus_ != DolphinMessages.SIMStatus.SIM_NotInserted.getNumber()) {
/*  8558 */         output.writeEnum(52, this.gSMSIMStatus_);
/*       */       }
/*  8560 */       if (this.gSMGPRSStatus_) {
/*  8561 */         output.writeBool(53, this.gSMGPRSStatus_);
/*       */       }
/*  8563 */       if (!getGSMOperatorNameBytes().isEmpty()) {
/*  8564 */         GeneratedMessageV3.writeString(output, 54, this.gSMOperatorName_);
/*       */       }
/*  8566 */       if (this.gSMOperatorCode_ != 0) {
/*  8567 */         output.writeUInt32(55, this.gSMOperatorCode_);
/*       */       }
/*  8569 */       if (this.gSMLocationAreaCode_ != 0) {
/*  8570 */         output.writeUInt32(56, this.gSMLocationAreaCode_);
/*       */       }
/*  8572 */       if (this.gSMCellID_ != 0) {
/*  8573 */         output.writeUInt32(57, this.gSMCellID_);
/*       */       }
/*  8575 */       if (this.gSMSignalStrength_ != 0) {
/*  8576 */         output.writeUInt32(58, this.gSMSignalStrength_);
/*       */       }
/*  8578 */       if (this.gSMJamming_) {
/*  8579 */         output.writeBool(59, this.gSMJamming_);
/*       */       }
/*  8581 */       if (this.gSMRecordsSentCount_ != 0) {
/*  8582 */         output.writeUInt32(60, this.gSMRecordsSentCount_);
/*       */       }
/*  8584 */       if (this.gSMRecordsLastSentTime_ != 0) {
/*  8585 */         output.writeUInt32(61, this.gSMRecordsLastSentTime_);
/*       */       }
/*  8587 */       if (this.gSMRecordsLastServerResponseTime_ != 0) {
/*  8588 */         output.writeUInt32(62, this.gSMRecordsLastServerResponseTime_);
/*       */       }
/*  8590 */       if (this.gSMRecordsCount_ != 0) {
/*  8591 */         output.writeUInt32(63, this.gSMRecordsCount_);
/*       */       }
/*  8593 */       if (this.gSMGPRSSentData_ != 0) {
/*  8594 */         output.writeUInt32(65, this.gSMGPRSSentData_);
/*       */       }
/*  8596 */       if (this.gSMGPRSReceivedData_ != 0) {
/*  8597 */         output.writeUInt32(66, this.gSMGPRSReceivedData_);
/*       */       }
/*  8599 */       if (this.gSMSMSSent_ != 0) {
/*  8600 */         output.writeUInt32(69, this.gSMSMSSent_);
/*       */       }
/*  8602 */       if (this.gSMSMSReceived_ != 0) {
/*  8603 */         output.writeUInt32(70, this.gSMSMSReceived_);
/*       */       }
/*  8605 */       if (this.gSMSocketState_) {
/*  8606 */         output.writeBool(75, this.gSMSocketState_);
/*       */       }
/*  8608 */       if (this.bluetoothStatus_ != DolphinMessages.BluetoothStatus.BL_Off.getNumber()) {
/*  8609 */         output.writeEnum(80, this.bluetoothStatus_);
/*       */       }
/*  8611 */       if (!getBluetoothNameBytes().isEmpty()) {
/*  8612 */         GeneratedMessageV3.writeString(output, 81, this.bluetoothName_);
/*       */       }
/*  8614 */       if (!getBluetoothMACBytes().isEmpty()) {
/*  8615 */         GeneratedMessageV3.writeString(output, 82, this.bluetoothMAC_);
/*       */       }
/*  8617 */       if (this.bluetoothDataLinkConnectStatus_) {
/*  8618 */         output.writeBool(83, this.bluetoothDataLinkConnectStatus_);
/*       */       }
/*  8620 */       if (!getBluetoothDataLinkNameBytes().isEmpty()) {
/*  8621 */         GeneratedMessageV3.writeString(output, 84, this.bluetoothDataLinkName_);
/*       */       }
/*  8623 */       if (!getBluetoothDataLinkMACBytes().isEmpty()) {
/*  8624 */         GeneratedMessageV3.writeString(output, 85, this.bluetoothDataLinkMAC_);
/*       */       }
/*  8626 */       if (this.bluetoothExtDeviceStatus_ != DolphinMessages.BluetoothExtDeviceStatus.BLExt_None.getNumber()) {
/*  8627 */         output.writeEnum(86, this.bluetoothExtDeviceStatus_);
/*       */       }
/*  8629 */       if (!getBluetoothExtDeviceNameBytes().isEmpty()) {
/*  8630 */         GeneratedMessageV3.writeString(output, 87, this.bluetoothExtDeviceName_);
/*       */       }
/*  8632 */       if (!getBluetoothExtDeviceMACBytes().isEmpty()) {
/*  8633 */         GeneratedMessageV3.writeString(output, 88, this.bluetoothExtDeviceMAC_);
/*       */       }
/*  8635 */       if (getIOListIDList().size() > 0) {
/*  8636 */         output.writeUInt32NoTag(802);
/*  8637 */         output.writeUInt32NoTag(this.iOListIDMemoizedSerializedSize);
/*       */       }  int i;
/*  8639 */       for (i = 0; i < this.iOListID_.size(); i++) {
/*  8640 */         output.writeEnumNoTag(((Integer)this.iOListID_.get(i)).intValue());
/*       */       }
/*  8642 */       if (getIOListValueList().size() > 0) {
/*  8643 */         output.writeUInt32NoTag(810);
/*  8644 */         output.writeUInt32NoTag(this.iOListValueMemoizedSerializedSize);
/*       */       } 
/*  8646 */       for (i = 0; i < this.iOListValue_.size(); i++) {
/*  8647 */         output.writeUInt64NoTag(this.iOListValue_.getLong(i));
/*       */       }
/*  8649 */       this.unknownFields.writeTo(output);
/*       */     }
/*       */ 
/*       */     
/*       */     public int getSerializedSize() {
/*  8654 */       int size = this.memoizedSize;
/*  8655 */       if (size != -1) return size;
/*       */       
/*  8657 */       size = 0;
/*  8658 */       if (!getNameBytes().isEmpty()) {
/*  8659 */         size += GeneratedMessageV3.computeStringSize(1, this.name_);
/*       */       }
/*  8661 */       if (this.iMEI_ != 0L) {
/*  8662 */         size += 
/*  8663 */           CodedOutputStream.computeFixed64Size(2, this.iMEI_);
/*       */       }
/*  8665 */       if (!getFirmwareVersionBytes().isEmpty()) {
/*  8666 */         size += GeneratedMessageV3.computeStringSize(3, this.firmwareVersion_);
/*       */       }
/*  8668 */       if (this.rTCTimestamp_ != 0) {
/*  8669 */         size += 
/*  8670 */           CodedOutputStream.computeFixed32Size(10, this.rTCTimestamp_);
/*       */       }
/*  8672 */       if (this.lastStartTimestamp_ != 0) {
/*  8673 */         size += 
/*  8674 */           CodedOutputStream.computeFixed32Size(11, this.lastStartTimestamp_);
/*       */       }
/*  8676 */       if (this.upTime_ != 0) {
/*  8677 */         size += 
/*  8678 */           CodedOutputStream.computeUInt32Size(12, this.upTime_);
/*       */       }
/*  8680 */       if (this.totalUpTime_ != 0) {
/*  8681 */         size += 
/*  8682 */           CodedOutputStream.computeUInt32Size(13, this.totalUpTime_);
/*       */       }
/*  8684 */       if (this.gNSSStatus_ != DolphinMessages.GNSSStatus.GNSS_Off.getNumber()) {
/*  8685 */         size += 
/*  8686 */           CodedOutputStream.computeEnumSize(20, this.gNSSStatus_);
/*       */       }
/*  8688 */       if (this.gNSSFix_) {
/*  8689 */         size += 
/*  8690 */           CodedOutputStream.computeBoolSize(21, this.gNSSFix_);
/*       */       }
/*  8692 */       if (this.gNSSTimeToFirstFix_ != 0) {
/*  8693 */         size += 
/*  8694 */           CodedOutputStream.computeUInt32Size(22, this.gNSSTimeToFirstFix_);
/*       */       }
/*  8696 */       if (this.gNSSTimeToLastFix_ != 0) {
/*  8697 */         size += 
/*  8698 */           CodedOutputStream.computeUInt32Size(23, this.gNSSTimeToLastFix_);
/*       */       }
/*  8700 */       if (this.gNSSPackets_ != 0) {
/*  8701 */         size += 
/*  8702 */           CodedOutputStream.computeUInt32Size(25, this.gNSSPackets_);
/*       */       }
/*  8704 */       if (this.gNSSLatitude_ != 0.0F) {
/*  8705 */         size += 
/*  8706 */           CodedOutputStream.computeFloatSize(26, this.gNSSLatitude_);
/*       */       }
/*  8708 */       if (this.gNSSLongitude_ != 0.0F) {
/*  8709 */         size += 
/*  8710 */           CodedOutputStream.computeFloatSize(27, this.gNSSLongitude_);
/*       */       }
/*  8712 */       if (this.gNSSAltitude_ != 0) {
/*  8713 */         size += 
/*  8714 */           CodedOutputStream.computeUInt32Size(28, this.gNSSAltitude_);
/*       */       }
/*  8716 */       if (this.gNSSSpeed_ != 0) {
/*  8717 */         size += 
/*  8718 */           CodedOutputStream.computeUInt32Size(29, this.gNSSSpeed_);
/*       */       }
/*  8720 */       if (this.gNSSBearing_ != 0) {
/*  8721 */         size += 
/*  8722 */           CodedOutputStream.computeUInt32Size(30, this.gNSSBearing_);
/*       */       }
/*  8724 */       if (this.gNSSHDOP_ != 0) {
/*  8725 */         size += 
/*  8726 */           CodedOutputStream.computeUInt32Size(31, this.gNSSHDOP_);
/*       */       }
/*  8728 */       if (this.gNSSPDOP_ != 0) {
/*  8729 */         size += 
/*  8730 */           CodedOutputStream.computeUInt32Size(32, this.gNSSPDOP_);
/*       */       }
/*  8732 */       if (this.gNSSSatsInUse_ != 0) {
/*  8733 */         size += 
/*  8734 */           CodedOutputStream.computeUInt32Size(33, this.gNSSSatsInUse_);
/*       */       }
/*  8736 */       if (this.gNSSGPSSats_ != 0) {
/*  8737 */         size += 
/*  8738 */           CodedOutputStream.computeUInt32Size(34, this.gNSSGPSSats_);
/*       */       }
/*  8740 */       if (this.gNSSGLONASSSats_ != 0) {
/*  8741 */         size += 
/*  8742 */           CodedOutputStream.computeUInt32Size(35, this.gNSSGLONASSSats_);
/*       */       }
/*  8744 */       if (this.gNSSGalileoSats_ != 0) {
/*  8745 */         size += 
/*  8746 */           CodedOutputStream.computeUInt32Size(36, this.gNSSGalileoSats_);
/*       */       }
/*  8748 */       if (this.gNSSBeidouSats_ != 0) {
/*  8749 */         size += 
/*  8750 */           CodedOutputStream.computeUInt32Size(37, this.gNSSBeidouSats_);
/*       */       }
/*  8752 */       if (this.gNSSJammingStatus_ != DolphinMessages.GNSS_JammingStatus.GNSS_UnknownJammingStatus.getNumber()) {
/*  8753 */         size += 
/*  8754 */           CodedOutputStream.computeEnumSize(38, this.gNSSJammingStatus_);
/*       */       }
/*  8756 */       if (this.gSMModemStatus_ != DolphinMessages.ModemStatus.ModemStatus_Off.getNumber()) {
/*  8757 */         size += 
/*  8758 */           CodedOutputStream.computeEnumSize(50, this.gSMModemStatus_);
/*       */       }
/*  8760 */       if (this.gSMSIMStatus_ != DolphinMessages.SIMStatus.SIM_NotInserted.getNumber()) {
/*  8761 */         size += 
/*  8762 */           CodedOutputStream.computeEnumSize(52, this.gSMSIMStatus_);
/*       */       }
/*  8764 */       if (this.gSMGPRSStatus_) {
/*  8765 */         size += 
/*  8766 */           CodedOutputStream.computeBoolSize(53, this.gSMGPRSStatus_);
/*       */       }
/*  8768 */       if (!getGSMOperatorNameBytes().isEmpty()) {
/*  8769 */         size += GeneratedMessageV3.computeStringSize(54, this.gSMOperatorName_);
/*       */       }
/*  8771 */       if (this.gSMOperatorCode_ != 0) {
/*  8772 */         size += 
/*  8773 */           CodedOutputStream.computeUInt32Size(55, this.gSMOperatorCode_);
/*       */       }
/*  8775 */       if (this.gSMLocationAreaCode_ != 0) {
/*  8776 */         size += 
/*  8777 */           CodedOutputStream.computeUInt32Size(56, this.gSMLocationAreaCode_);
/*       */       }
/*  8779 */       if (this.gSMCellID_ != 0) {
/*  8780 */         size += 
/*  8781 */           CodedOutputStream.computeUInt32Size(57, this.gSMCellID_);
/*       */       }
/*  8783 */       if (this.gSMSignalStrength_ != 0) {
/*  8784 */         size += 
/*  8785 */           CodedOutputStream.computeUInt32Size(58, this.gSMSignalStrength_);
/*       */       }
/*  8787 */       if (this.gSMJamming_) {
/*  8788 */         size += 
/*  8789 */           CodedOutputStream.computeBoolSize(59, this.gSMJamming_);
/*       */       }
/*  8791 */       if (this.gSMRecordsSentCount_ != 0) {
/*  8792 */         size += 
/*  8793 */           CodedOutputStream.computeUInt32Size(60, this.gSMRecordsSentCount_);
/*       */       }
/*  8795 */       if (this.gSMRecordsLastSentTime_ != 0) {
/*  8796 */         size += 
/*  8797 */           CodedOutputStream.computeUInt32Size(61, this.gSMRecordsLastSentTime_);
/*       */       }
/*  8799 */       if (this.gSMRecordsLastServerResponseTime_ != 0) {
/*  8800 */         size += 
/*  8801 */           CodedOutputStream.computeUInt32Size(62, this.gSMRecordsLastServerResponseTime_);
/*       */       }
/*  8803 */       if (this.gSMRecordsCount_ != 0) {
/*  8804 */         size += 
/*  8805 */           CodedOutputStream.computeUInt32Size(63, this.gSMRecordsCount_);
/*       */       }
/*  8807 */       if (this.gSMGPRSSentData_ != 0) {
/*  8808 */         size += 
/*  8809 */           CodedOutputStream.computeUInt32Size(65, this.gSMGPRSSentData_);
/*       */       }
/*  8811 */       if (this.gSMGPRSReceivedData_ != 0) {
/*  8812 */         size += 
/*  8813 */           CodedOutputStream.computeUInt32Size(66, this.gSMGPRSReceivedData_);
/*       */       }
/*  8815 */       if (this.gSMSMSSent_ != 0) {
/*  8816 */         size += 
/*  8817 */           CodedOutputStream.computeUInt32Size(69, this.gSMSMSSent_);
/*       */       }
/*  8819 */       if (this.gSMSMSReceived_ != 0) {
/*  8820 */         size += 
/*  8821 */           CodedOutputStream.computeUInt32Size(70, this.gSMSMSReceived_);
/*       */       }
/*  8823 */       if (this.gSMSocketState_) {
/*  8824 */         size += 
/*  8825 */           CodedOutputStream.computeBoolSize(75, this.gSMSocketState_);
/*       */       }
/*  8827 */       if (this.bluetoothStatus_ != DolphinMessages.BluetoothStatus.BL_Off.getNumber()) {
/*  8828 */         size += 
/*  8829 */           CodedOutputStream.computeEnumSize(80, this.bluetoothStatus_);
/*       */       }
/*  8831 */       if (!getBluetoothNameBytes().isEmpty()) {
/*  8832 */         size += GeneratedMessageV3.computeStringSize(81, this.bluetoothName_);
/*       */       }
/*  8834 */       if (!getBluetoothMACBytes().isEmpty()) {
/*  8835 */         size += GeneratedMessageV3.computeStringSize(82, this.bluetoothMAC_);
/*       */       }
/*  8837 */       if (this.bluetoothDataLinkConnectStatus_) {
/*  8838 */         size += 
/*  8839 */           CodedOutputStream.computeBoolSize(83, this.bluetoothDataLinkConnectStatus_);
/*       */       }
/*  8841 */       if (!getBluetoothDataLinkNameBytes().isEmpty()) {
/*  8842 */         size += GeneratedMessageV3.computeStringSize(84, this.bluetoothDataLinkName_);
/*       */       }
/*  8844 */       if (!getBluetoothDataLinkMACBytes().isEmpty()) {
/*  8845 */         size += GeneratedMessageV3.computeStringSize(85, this.bluetoothDataLinkMAC_);
/*       */       }
/*  8847 */       if (this.bluetoothExtDeviceStatus_ != DolphinMessages.BluetoothExtDeviceStatus.BLExt_None.getNumber()) {
/*  8848 */         size += 
/*  8849 */           CodedOutputStream.computeEnumSize(86, this.bluetoothExtDeviceStatus_);
/*       */       }
/*  8851 */       if (!getBluetoothExtDeviceNameBytes().isEmpty()) {
/*  8852 */         size += GeneratedMessageV3.computeStringSize(87, this.bluetoothExtDeviceName_);
/*       */       }
/*  8854 */       if (!getBluetoothExtDeviceMACBytes().isEmpty()) {
/*  8855 */         size += GeneratedMessageV3.computeStringSize(88, this.bluetoothExtDeviceMAC_);
/*       */       }
/*       */       
/*  8858 */       int dataSize = 0; int i;
/*  8859 */       for (i = 0; i < this.iOListID_.size(); i++) {
/*  8860 */         dataSize += 
/*  8861 */           CodedOutputStream.computeEnumSizeNoTag(((Integer)this.iOListID_.get(i)).intValue());
/*       */       }
/*  8863 */       size += dataSize;
/*  8864 */       if (!getIOListIDList().isEmpty()) { size += 2;
/*  8865 */         size += 
/*  8866 */           CodedOutputStream.computeUInt32SizeNoTag(dataSize); }
/*  8867 */        this.iOListIDMemoizedSerializedSize = dataSize;
/*       */ 
/*       */       
/*  8870 */       dataSize = 0;
/*  8871 */       for (i = 0; i < this.iOListValue_.size(); i++) {
/*  8872 */         dataSize += 
/*  8873 */           CodedOutputStream.computeUInt64SizeNoTag(this.iOListValue_.getLong(i));
/*       */       }
/*  8875 */       size += dataSize;
/*  8876 */       if (!getIOListValueList().isEmpty()) {
/*  8877 */         size += 2;
/*  8878 */         size += 
/*  8879 */           CodedOutputStream.computeInt32SizeNoTag(dataSize);
/*       */       } 
/*  8881 */       this.iOListValueMemoizedSerializedSize = dataSize;
/*       */       
/*  8883 */       size += this.unknownFields.getSerializedSize();
/*  8884 */       this.memoizedSize = size;
/*  8885 */       return size;
/*       */     }
/*       */ 
/*       */     
/*       */     public boolean equals(Object obj) {
/*  8890 */       if (obj == this) {
/*  8891 */         return true;
/*       */       }
/*  8893 */       if (!(obj instanceof DeviceInfo)) {
/*  8894 */         return super.equals(obj);
/*       */       }
/*  8896 */       DeviceInfo other = (DeviceInfo)obj;
/*       */ 
/*       */       
/*  8899 */       if (!getName().equals(other.getName())) return false; 
/*  8900 */       if (getIMEI() != other
/*  8901 */         .getIMEI()) return false;
/*       */       
/*  8903 */       if (!getFirmwareVersion().equals(other.getFirmwareVersion())) return false; 
/*  8904 */       if (getRTCTimestamp() != other
/*  8905 */         .getRTCTimestamp()) return false; 
/*  8906 */       if (getLastStartTimestamp() != other
/*  8907 */         .getLastStartTimestamp()) return false; 
/*  8908 */       if (getUpTime() != other
/*  8909 */         .getUpTime()) return false; 
/*  8910 */       if (getTotalUpTime() != other
/*  8911 */         .getTotalUpTime()) return false; 
/*  8912 */       if (this.gNSSStatus_ != other.gNSSStatus_) return false; 
/*  8913 */       if (getGNSSFix() != other
/*  8914 */         .getGNSSFix()) return false; 
/*  8915 */       if (getGNSSTimeToFirstFix() != other
/*  8916 */         .getGNSSTimeToFirstFix()) return false; 
/*  8917 */       if (getGNSSTimeToLastFix() != other
/*  8918 */         .getGNSSTimeToLastFix()) return false; 
/*  8919 */       if (getGNSSPackets() != other
/*  8920 */         .getGNSSPackets()) return false; 
/*  8921 */       if (Float.floatToIntBits(getGNSSLatitude()) != 
/*  8922 */         Float.floatToIntBits(other
/*  8923 */           .getGNSSLatitude())) return false; 
/*  8924 */       if (Float.floatToIntBits(getGNSSLongitude()) != 
/*  8925 */         Float.floatToIntBits(other
/*  8926 */           .getGNSSLongitude())) return false; 
/*  8927 */       if (getGNSSAltitude() != other
/*  8928 */         .getGNSSAltitude()) return false; 
/*  8929 */       if (getGNSSSpeed() != other
/*  8930 */         .getGNSSSpeed()) return false; 
/*  8931 */       if (getGNSSBearing() != other
/*  8932 */         .getGNSSBearing()) return false; 
/*  8933 */       if (getGNSSHDOP() != other
/*  8934 */         .getGNSSHDOP()) return false; 
/*  8935 */       if (getGNSSPDOP() != other
/*  8936 */         .getGNSSPDOP()) return false; 
/*  8937 */       if (getGNSSSatsInUse() != other
/*  8938 */         .getGNSSSatsInUse()) return false; 
/*  8939 */       if (getGNSSGPSSats() != other
/*  8940 */         .getGNSSGPSSats()) return false; 
/*  8941 */       if (getGNSSGLONASSSats() != other
/*  8942 */         .getGNSSGLONASSSats()) return false; 
/*  8943 */       if (getGNSSGalileoSats() != other
/*  8944 */         .getGNSSGalileoSats()) return false; 
/*  8945 */       if (getGNSSBeidouSats() != other
/*  8946 */         .getGNSSBeidouSats()) return false; 
/*  8947 */       if (this.gNSSJammingStatus_ != other.gNSSJammingStatus_) return false; 
/*  8948 */       if (this.gSMModemStatus_ != other.gSMModemStatus_) return false; 
/*  8949 */       if (this.gSMSIMStatus_ != other.gSMSIMStatus_) return false; 
/*  8950 */       if (getGSMGPRSStatus() != other
/*  8951 */         .getGSMGPRSStatus()) return false;
/*       */       
/*  8953 */       if (!getGSMOperatorName().equals(other.getGSMOperatorName())) return false; 
/*  8954 */       if (getGSMOperatorCode() != other
/*  8955 */         .getGSMOperatorCode()) return false; 
/*  8956 */       if (getGSMLocationAreaCode() != other
/*  8957 */         .getGSMLocationAreaCode()) return false; 
/*  8958 */       if (getGSMCellID() != other
/*  8959 */         .getGSMCellID()) return false; 
/*  8960 */       if (getGSMSignalStrength() != other
/*  8961 */         .getGSMSignalStrength()) return false; 
/*  8962 */       if (getGSMJamming() != other
/*  8963 */         .getGSMJamming()) return false; 
/*  8964 */       if (getGSMRecordsSentCount() != other
/*  8965 */         .getGSMRecordsSentCount()) return false; 
/*  8966 */       if (getGSMRecordsLastSentTime() != other
/*  8967 */         .getGSMRecordsLastSentTime()) return false; 
/*  8968 */       if (getGSMRecordsLastServerResponseTime() != other
/*  8969 */         .getGSMRecordsLastServerResponseTime()) return false; 
/*  8970 */       if (getGSMRecordsCount() != other
/*  8971 */         .getGSMRecordsCount()) return false; 
/*  8972 */       if (getGSMGPRSSentData() != other
/*  8973 */         .getGSMGPRSSentData()) return false; 
/*  8974 */       if (getGSMGPRSReceivedData() != other
/*  8975 */         .getGSMGPRSReceivedData()) return false; 
/*  8976 */       if (getGSMSMSSent() != other
/*  8977 */         .getGSMSMSSent()) return false; 
/*  8978 */       if (getGSMSMSReceived() != other
/*  8979 */         .getGSMSMSReceived()) return false; 
/*  8980 */       if (getGSMSocketState() != other
/*  8981 */         .getGSMSocketState()) return false; 
/*  8982 */       if (this.bluetoothStatus_ != other.bluetoothStatus_) return false;
/*       */       
/*  8984 */       if (!getBluetoothName().equals(other.getBluetoothName())) return false;
/*       */       
/*  8986 */       if (!getBluetoothMAC().equals(other.getBluetoothMAC())) return false; 
/*  8987 */       if (getBluetoothDataLinkConnectStatus() != other
/*  8988 */         .getBluetoothDataLinkConnectStatus()) return false;
/*       */       
/*  8990 */       if (!getBluetoothDataLinkName().equals(other.getBluetoothDataLinkName())) return false;
/*       */       
/*  8992 */       if (!getBluetoothDataLinkMAC().equals(other.getBluetoothDataLinkMAC())) return false; 
/*  8993 */       if (this.bluetoothExtDeviceStatus_ != other.bluetoothExtDeviceStatus_) return false;
/*       */       
/*  8995 */       if (!getBluetoothExtDeviceName().equals(other.getBluetoothExtDeviceName())) return false;
/*       */       
/*  8997 */       if (!getBluetoothExtDeviceMAC().equals(other.getBluetoothExtDeviceMAC())) return false; 
/*  8998 */       if (!this.iOListID_.equals(other.iOListID_)) return false;
/*       */       
/*  9000 */       if (!getIOListValueList().equals(other.getIOListValueList())) return false; 
/*  9001 */       if (!this.unknownFields.equals(other.unknownFields)) return false; 
/*  9002 */       return true;
/*       */     }
/*       */ 
/*       */     
/*       */     public int hashCode() {
/*  9007 */       if (this.memoizedHashCode != 0) {
/*  9008 */         return this.memoizedHashCode;
/*       */       }
/*  9010 */       int hash = 41;
/*  9011 */       hash = 19 * hash + getDescriptor().hashCode();
/*  9012 */       hash = 37 * hash + 1;
/*  9013 */       hash = 53 * hash + getName().hashCode();
/*  9014 */       hash = 37 * hash + 2;
/*  9015 */       hash = 53 * hash + Internal.hashLong(
/*  9016 */           getIMEI());
/*  9017 */       hash = 37 * hash + 3;
/*  9018 */       hash = 53 * hash + getFirmwareVersion().hashCode();
/*  9019 */       hash = 37 * hash + 10;
/*  9020 */       hash = 53 * hash + getRTCTimestamp();
/*  9021 */       hash = 37 * hash + 11;
/*  9022 */       hash = 53 * hash + getLastStartTimestamp();
/*  9023 */       hash = 37 * hash + 12;
/*  9024 */       hash = 53 * hash + getUpTime();
/*  9025 */       hash = 37 * hash + 13;
/*  9026 */       hash = 53 * hash + getTotalUpTime();
/*  9027 */       hash = 37 * hash + 20;
/*  9028 */       hash = 53 * hash + this.gNSSStatus_;
/*  9029 */       hash = 37 * hash + 21;
/*  9030 */       hash = 53 * hash + Internal.hashBoolean(
/*  9031 */           getGNSSFix());
/*  9032 */       hash = 37 * hash + 22;
/*  9033 */       hash = 53 * hash + getGNSSTimeToFirstFix();
/*  9034 */       hash = 37 * hash + 23;
/*  9035 */       hash = 53 * hash + getGNSSTimeToLastFix();
/*  9036 */       hash = 37 * hash + 25;
/*  9037 */       hash = 53 * hash + getGNSSPackets();
/*  9038 */       hash = 37 * hash + 26;
/*  9039 */       hash = 53 * hash + Float.floatToIntBits(
/*  9040 */           getGNSSLatitude());
/*  9041 */       hash = 37 * hash + 27;
/*  9042 */       hash = 53 * hash + Float.floatToIntBits(
/*  9043 */           getGNSSLongitude());
/*  9044 */       hash = 37 * hash + 28;
/*  9045 */       hash = 53 * hash + getGNSSAltitude();
/*  9046 */       hash = 37 * hash + 29;
/*  9047 */       hash = 53 * hash + getGNSSSpeed();
/*  9048 */       hash = 37 * hash + 30;
/*  9049 */       hash = 53 * hash + getGNSSBearing();
/*  9050 */       hash = 37 * hash + 31;
/*  9051 */       hash = 53 * hash + getGNSSHDOP();
/*  9052 */       hash = 37 * hash + 32;
/*  9053 */       hash = 53 * hash + getGNSSPDOP();
/*  9054 */       hash = 37 * hash + 33;
/*  9055 */       hash = 53 * hash + getGNSSSatsInUse();
/*  9056 */       hash = 37 * hash + 34;
/*  9057 */       hash = 53 * hash + getGNSSGPSSats();
/*  9058 */       hash = 37 * hash + 35;
/*  9059 */       hash = 53 * hash + getGNSSGLONASSSats();
/*  9060 */       hash = 37 * hash + 36;
/*  9061 */       hash = 53 * hash + getGNSSGalileoSats();
/*  9062 */       hash = 37 * hash + 37;
/*  9063 */       hash = 53 * hash + getGNSSBeidouSats();
/*  9064 */       hash = 37 * hash + 38;
/*  9065 */       hash = 53 * hash + this.gNSSJammingStatus_;
/*  9066 */       hash = 37 * hash + 50;
/*  9067 */       hash = 53 * hash + this.gSMModemStatus_;
/*  9068 */       hash = 37 * hash + 52;
/*  9069 */       hash = 53 * hash + this.gSMSIMStatus_;
/*  9070 */       hash = 37 * hash + 53;
/*  9071 */       hash = 53 * hash + Internal.hashBoolean(
/*  9072 */           getGSMGPRSStatus());
/*  9073 */       hash = 37 * hash + 54;
/*  9074 */       hash = 53 * hash + getGSMOperatorName().hashCode();
/*  9075 */       hash = 37 * hash + 55;
/*  9076 */       hash = 53 * hash + getGSMOperatorCode();
/*  9077 */       hash = 37 * hash + 56;
/*  9078 */       hash = 53 * hash + getGSMLocationAreaCode();
/*  9079 */       hash = 37 * hash + 57;
/*  9080 */       hash = 53 * hash + getGSMCellID();
/*  9081 */       hash = 37 * hash + 58;
/*  9082 */       hash = 53 * hash + getGSMSignalStrength();
/*  9083 */       hash = 37 * hash + 59;
/*  9084 */       hash = 53 * hash + Internal.hashBoolean(
/*  9085 */           getGSMJamming());
/*  9086 */       hash = 37 * hash + 60;
/*  9087 */       hash = 53 * hash + getGSMRecordsSentCount();
/*  9088 */       hash = 37 * hash + 61;
/*  9089 */       hash = 53 * hash + getGSMRecordsLastSentTime();
/*  9090 */       hash = 37 * hash + 62;
/*  9091 */       hash = 53 * hash + getGSMRecordsLastServerResponseTime();
/*  9092 */       hash = 37 * hash + 63;
/*  9093 */       hash = 53 * hash + getGSMRecordsCount();
/*  9094 */       hash = 37 * hash + 65;
/*  9095 */       hash = 53 * hash + getGSMGPRSSentData();
/*  9096 */       hash = 37 * hash + 66;
/*  9097 */       hash = 53 * hash + getGSMGPRSReceivedData();
/*  9098 */       hash = 37 * hash + 69;
/*  9099 */       hash = 53 * hash + getGSMSMSSent();
/*  9100 */       hash = 37 * hash + 70;
/*  9101 */       hash = 53 * hash + getGSMSMSReceived();
/*  9102 */       hash = 37 * hash + 75;
/*  9103 */       hash = 53 * hash + Internal.hashBoolean(
/*  9104 */           getGSMSocketState());
/*  9105 */       hash = 37 * hash + 80;
/*  9106 */       hash = 53 * hash + this.bluetoothStatus_;
/*  9107 */       hash = 37 * hash + 81;
/*  9108 */       hash = 53 * hash + getBluetoothName().hashCode();
/*  9109 */       hash = 37 * hash + 82;
/*  9110 */       hash = 53 * hash + getBluetoothMAC().hashCode();
/*  9111 */       hash = 37 * hash + 83;
/*  9112 */       hash = 53 * hash + Internal.hashBoolean(
/*  9113 */           getBluetoothDataLinkConnectStatus());
/*  9114 */       hash = 37 * hash + 84;
/*  9115 */       hash = 53 * hash + getBluetoothDataLinkName().hashCode();
/*  9116 */       hash = 37 * hash + 85;
/*  9117 */       hash = 53 * hash + getBluetoothDataLinkMAC().hashCode();
/*  9118 */       hash = 37 * hash + 86;
/*  9119 */       hash = 53 * hash + this.bluetoothExtDeviceStatus_;
/*  9120 */       hash = 37 * hash + 87;
/*  9121 */       hash = 53 * hash + getBluetoothExtDeviceName().hashCode();
/*  9122 */       hash = 37 * hash + 88;
/*  9123 */       hash = 53 * hash + getBluetoothExtDeviceMAC().hashCode();
/*  9124 */       if (getIOListIDCount() > 0) {
/*  9125 */         hash = 37 * hash + 100;
/*  9126 */         hash = 53 * hash + this.iOListID_.hashCode();
/*       */       } 
/*  9128 */       if (getIOListValueCount() > 0) {
/*  9129 */         hash = 37 * hash + 101;
/*  9130 */         hash = 53 * hash + getIOListValueList().hashCode();
/*       */       } 
/*  9132 */       hash = 29 * hash + this.unknownFields.hashCode();
/*  9133 */       this.memoizedHashCode = hash;
/*  9134 */       return hash;
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static DeviceInfo parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
/*  9140 */       return (DeviceInfo)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static DeviceInfo parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*  9146 */       return (DeviceInfo)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static DeviceInfo parseFrom(ByteString data) throws InvalidProtocolBufferException {
/*  9151 */       return (DeviceInfo)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static DeviceInfo parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*  9157 */       return (DeviceInfo)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static DeviceInfo parseFrom(byte[] data) throws InvalidProtocolBufferException {
/*  9161 */       return (DeviceInfo)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static DeviceInfo parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*  9167 */       return (DeviceInfo)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static DeviceInfo parseFrom(InputStream input) throws IOException {
/*  9171 */       return 
/*  9172 */         (DeviceInfo)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static DeviceInfo parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*  9178 */       return 
/*  9179 */         (DeviceInfo)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static DeviceInfo parseDelimitedFrom(InputStream input) throws IOException {
/*  9183 */       return 
/*  9184 */         (DeviceInfo)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static DeviceInfo parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*  9190 */       return 
/*  9191 */         (DeviceInfo)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static DeviceInfo parseFrom(CodedInputStream input) throws IOException {
/*  9196 */       return 
/*  9197 */         (DeviceInfo)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static DeviceInfo parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*  9203 */       return 
/*  9204 */         (DeviceInfo)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public Builder newBuilderForType() {
/*  9208 */       return newBuilder();
/*       */     } public static Builder newBuilder() {
/*  9210 */       return DEFAULT_INSTANCE.toBuilder();
/*       */     }
/*       */     public static Builder newBuilder(DeviceInfo prototype) {
/*  9213 */       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
/*       */     }
/*       */     
/*       */     public Builder toBuilder() {
/*  9217 */       return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder())
/*  9218 */         .mergeFrom(this);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
/*  9224 */       Builder builder = new Builder(parent);
/*  9225 */       return builder;
/*       */     }
/*       */     public static final class Builder extends GeneratedMessageV3.Builder<Builder> implements DolphinMessages.DeviceInfoOrBuilder { private int bitField0_; private Object name_; private long iMEI_; private Object firmwareVersion_; private int rTCTimestamp_; private int lastStartTimestamp_; private int upTime_; private int totalUpTime_; private int gNSSStatus_; private boolean gNSSFix_; private int gNSSTimeToFirstFix_; private int gNSSTimeToLastFix_; private int gNSSPackets_; private float gNSSLatitude_; private float gNSSLongitude_; private int gNSSAltitude_; private int gNSSSpeed_; private int gNSSBearing_; private int gNSSHDOP_; private int gNSSPDOP_; private int gNSSSatsInUse_; private int gNSSGPSSats_; private int gNSSGLONASSSats_; private int gNSSGalileoSats_; private int gNSSBeidouSats_; private int gNSSJammingStatus_; private int gSMModemStatus_; private int gSMSIMStatus_; private boolean gSMGPRSStatus_; private Object gSMOperatorName_; private int gSMOperatorCode_; private int gSMLocationAreaCode_; private int gSMCellID_; private int gSMSignalStrength_; private boolean gSMJamming_; private int gSMRecordsSentCount_; private int gSMRecordsLastSentTime_; private int gSMRecordsLastServerResponseTime_; private int gSMRecordsCount_; private int gSMGPRSSentData_; private int gSMGPRSReceivedData_; private int gSMSMSSent_; private int gSMSMSReceived_; private boolean gSMSocketState_; private int bluetoothStatus_;
/*       */       private Object bluetoothName_;
/*       */       private Object bluetoothMAC_;
/*       */       private boolean bluetoothDataLinkConnectStatus_;
/*       */       private Object bluetoothDataLinkName_;
/*       */       private Object bluetoothDataLinkMAC_;
/*       */       private int bluetoothExtDeviceStatus_;
/*       */       private Object bluetoothExtDeviceName_;
/*       */       private Object bluetoothExtDeviceMAC_;
/*       */       private List<Integer> iOListID_;
/*       */       private Internal.LongList iOListValue_;
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/*  9240 */         return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_DeviceInfo_descriptor;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
/*  9246 */         return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_DeviceInfo_fieldAccessorTable
/*  9247 */           .ensureFieldAccessorsInitialized(DolphinMessages.DeviceInfo.class, Builder.class);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private Builder()
/*       */       {
/*  9729 */         this.name_ = "";
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/*  9836 */         this.firmwareVersion_ = "";
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 10048 */         this.gNSSStatus_ = 0;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 10618 */         this.gNSSJammingStatus_ = 0;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 10672 */         this.gSMModemStatus_ = 0;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 10746 */         this.gSMSIMStatus_ = 0;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 10831 */         this.gSMOperatorName_ = "";
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 11341 */         this.bluetoothStatus_ = 0;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 11415 */         this.bluetoothName_ = "";
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 11491 */         this.bluetoothMAC_ = "";
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 11598 */         this.bluetoothDataLinkName_ = "";
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 11674 */         this.bluetoothDataLinkMAC_ = "";
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 11750 */         this.bluetoothExtDeviceStatus_ = 0;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 11804 */         this.bluetoothExtDeviceName_ = "";
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 11880 */         this.bluetoothExtDeviceMAC_ = "";
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 11956 */         this
/* 11957 */           .iOListID_ = Collections.emptyList();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 12144 */         this.iOListValue_ = DolphinMessages.DeviceInfo.emptyLongList(); maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (DolphinMessages.DeviceInfo.alwaysUseFieldBuilders); } public Builder clear() { super.clear(); this.name_ = ""; this.iMEI_ = 0L; this.firmwareVersion_ = ""; this.rTCTimestamp_ = 0; this.lastStartTimestamp_ = 0; this.upTime_ = 0; this.totalUpTime_ = 0; this.gNSSStatus_ = 0; this.gNSSFix_ = false; this.gNSSTimeToFirstFix_ = 0; this.gNSSTimeToLastFix_ = 0; this.gNSSPackets_ = 0; this.gNSSLatitude_ = 0.0F; this.gNSSLongitude_ = 0.0F; this.gNSSAltitude_ = 0; this.gNSSSpeed_ = 0; this.gNSSBearing_ = 0; this.gNSSHDOP_ = 0; this.gNSSPDOP_ = 0; this.gNSSSatsInUse_ = 0; this.gNSSGPSSats_ = 0; this.gNSSGLONASSSats_ = 0; this.gNSSGalileoSats_ = 0; this.gNSSBeidouSats_ = 0; this.gNSSJammingStatus_ = 0; this.gSMModemStatus_ = 0; this.gSMSIMStatus_ = 0; this.gSMGPRSStatus_ = false; this.gSMOperatorName_ = ""; this.gSMOperatorCode_ = 0; this.gSMLocationAreaCode_ = 0; this.gSMCellID_ = 0; this.gSMSignalStrength_ = 0; this.gSMJamming_ = false; this.gSMRecordsSentCount_ = 0; this.gSMRecordsLastSentTime_ = 0; this.gSMRecordsLastServerResponseTime_ = 0; this.gSMRecordsCount_ = 0; this.gSMGPRSSentData_ = 0; this.gSMGPRSReceivedData_ = 0; this.gSMSMSSent_ = 0; this.gSMSMSReceived_ = 0; this.gSMSocketState_ = false; this.bluetoothStatus_ = 0; this.bluetoothName_ = ""; this.bluetoothMAC_ = ""; this.bluetoothDataLinkConnectStatus_ = false; this.bluetoothDataLinkName_ = ""; this.bluetoothDataLinkMAC_ = ""; this.bluetoothExtDeviceStatus_ = 0; this.bluetoothExtDeviceName_ = ""; this.bluetoothExtDeviceMAC_ = ""; this.iOListID_ = Collections.emptyList(); this.bitField0_ &= 0xFFFFFFFE; this.iOListValue_ = DolphinMessages.DeviceInfo.emptyLongList(); this.bitField0_ &= 0xFFFFFFFD; return this; } public Descriptors.Descriptor getDescriptorForType() { return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_DeviceInfo_descriptor; } public DolphinMessages.DeviceInfo getDefaultInstanceForType() { return DolphinMessages.DeviceInfo.getDefaultInstance(); } public DolphinMessages.DeviceInfo build() { DolphinMessages.DeviceInfo result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public DolphinMessages.DeviceInfo buildPartial() { DolphinMessages.DeviceInfo result = new DolphinMessages.DeviceInfo(this); int from_bitField0_ = this.bitField0_; result.name_ = this.name_; result.iMEI_ = this.iMEI_; result.firmwareVersion_ = this.firmwareVersion_; result.rTCTimestamp_ = this.rTCTimestamp_; result.lastStartTimestamp_ = this.lastStartTimestamp_; result.upTime_ = this.upTime_; result.totalUpTime_ = this.totalUpTime_; result.gNSSStatus_ = this.gNSSStatus_; result.gNSSFix_ = this.gNSSFix_; result.gNSSTimeToFirstFix_ = this.gNSSTimeToFirstFix_; result.gNSSTimeToLastFix_ = this.gNSSTimeToLastFix_; result.gNSSPackets_ = this.gNSSPackets_; result.gNSSLatitude_ = this.gNSSLatitude_; result.gNSSLongitude_ = this.gNSSLongitude_; result.gNSSAltitude_ = this.gNSSAltitude_; result.gNSSSpeed_ = this.gNSSSpeed_; result.gNSSBearing_ = this.gNSSBearing_; result.gNSSHDOP_ = this.gNSSHDOP_; result.gNSSPDOP_ = this.gNSSPDOP_; result.gNSSSatsInUse_ = this.gNSSSatsInUse_; result.gNSSGPSSats_ = this.gNSSGPSSats_; result.gNSSGLONASSSats_ = this.gNSSGLONASSSats_; result.gNSSGalileoSats_ = this.gNSSGalileoSats_; result.gNSSBeidouSats_ = this.gNSSBeidouSats_; result.gNSSJammingStatus_ = this.gNSSJammingStatus_; result.gSMModemStatus_ = this.gSMModemStatus_; result.gSMSIMStatus_ = this.gSMSIMStatus_; result.gSMGPRSStatus_ = this.gSMGPRSStatus_; result.gSMOperatorName_ = this.gSMOperatorName_; result.gSMOperatorCode_ = this.gSMOperatorCode_; result.gSMLocationAreaCode_ = this.gSMLocationAreaCode_; result.gSMCellID_ = this.gSMCellID_; result.gSMSignalStrength_ = this.gSMSignalStrength_; result.gSMJamming_ = this.gSMJamming_; result.gSMRecordsSentCount_ = this.gSMRecordsSentCount_; result.gSMRecordsLastSentTime_ = this.gSMRecordsLastSentTime_; result.gSMRecordsLastServerResponseTime_ = this.gSMRecordsLastServerResponseTime_; result.gSMRecordsCount_ = this.gSMRecordsCount_; result.gSMGPRSSentData_ = this.gSMGPRSSentData_; result.gSMGPRSReceivedData_ = this.gSMGPRSReceivedData_; result.gSMSMSSent_ = this.gSMSMSSent_; result.gSMSMSReceived_ = this.gSMSMSReceived_; result.gSMSocketState_ = this.gSMSocketState_; result.bluetoothStatus_ = this.bluetoothStatus_; result.bluetoothName_ = this.bluetoothName_; result.bluetoothMAC_ = this.bluetoothMAC_; result.bluetoothDataLinkConnectStatus_ = this.bluetoothDataLinkConnectStatus_; result.bluetoothDataLinkName_ = this.bluetoothDataLinkName_; result.bluetoothDataLinkMAC_ = this.bluetoothDataLinkMAC_; result.bluetoothExtDeviceStatus_ = this.bluetoothExtDeviceStatus_; result.bluetoothExtDeviceName_ = this.bluetoothExtDeviceName_; result.bluetoothExtDeviceMAC_ = this.bluetoothExtDeviceMAC_; if ((this.bitField0_ & 0x1) != 0) { this.iOListID_ = Collections.unmodifiableList(this.iOListID_); this.bitField0_ &= 0xFFFFFFFE; }  result.iOListID_ = this.iOListID_; if ((this.bitField0_ & 0x2) != 0) { this.iOListValue_.makeImmutable(); this.bitField0_ &= 0xFFFFFFFD; }  result.iOListValue_ = this.iOListValue_; onBuilt(); return result; } public Builder clone() { return (Builder)super.clone(); } public Builder setField(Descriptors.FieldDescriptor field, Object value) { return (Builder)super.setField(field, value); } public Builder clearField(Descriptors.FieldDescriptor field) { return (Builder)super.clearField(field); } public Builder clearOneof(Descriptors.OneofDescriptor oneof) { return (Builder)super.clearOneof(oneof); } public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) { return (Builder)super.setRepeatedField(field, index, value); } public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) { return (Builder)super.addRepeatedField(field, value); } public Builder mergeFrom(Message other) { if (other instanceof DolphinMessages.DeviceInfo) return mergeFrom((DolphinMessages.DeviceInfo)other);  super.mergeFrom(other); return this; } public Builder mergeFrom(DolphinMessages.DeviceInfo other) { if (other == DolphinMessages.DeviceInfo.getDefaultInstance()) return this;  if (!other.getName().isEmpty()) { this.name_ = other.name_; onChanged(); }  if (other.getIMEI() != 0L) setIMEI(other.getIMEI());  if (!other.getFirmwareVersion().isEmpty()) { this.firmwareVersion_ = other.firmwareVersion_; onChanged(); }  if (other.getRTCTimestamp() != 0) setRTCTimestamp(other.getRTCTimestamp());  if (other.getLastStartTimestamp() != 0) setLastStartTimestamp(other.getLastStartTimestamp());  if (other.getUpTime() != 0) setUpTime(other.getUpTime());  if (other.getTotalUpTime() != 0) setTotalUpTime(other.getTotalUpTime());  if (other.gNSSStatus_ != 0) setGNSSStatusValue(other.getGNSSStatusValue());  if (other.getGNSSFix()) setGNSSFix(other.getGNSSFix());  if (other.getGNSSTimeToFirstFix() != 0) setGNSSTimeToFirstFix(other.getGNSSTimeToFirstFix());  if (other.getGNSSTimeToLastFix() != 0) setGNSSTimeToLastFix(other.getGNSSTimeToLastFix());  if (other.getGNSSPackets() != 0) setGNSSPackets(other.getGNSSPackets());  if (other.getGNSSLatitude() != 0.0F) setGNSSLatitude(other.getGNSSLatitude());  if (other.getGNSSLongitude() != 0.0F) setGNSSLongitude(other.getGNSSLongitude());  if (other.getGNSSAltitude() != 0) setGNSSAltitude(other.getGNSSAltitude());  if (other.getGNSSSpeed() != 0) setGNSSSpeed(other.getGNSSSpeed());  if (other.getGNSSBearing() != 0) setGNSSBearing(other.getGNSSBearing());  if (other.getGNSSHDOP() != 0) setGNSSHDOP(other.getGNSSHDOP());  if (other.getGNSSPDOP() != 0) setGNSSPDOP(other.getGNSSPDOP());  if (other.getGNSSSatsInUse() != 0) setGNSSSatsInUse(other.getGNSSSatsInUse());  if (other.getGNSSGPSSats() != 0) setGNSSGPSSats(other.getGNSSGPSSats());  if (other.getGNSSGLONASSSats() != 0) setGNSSGLONASSSats(other.getGNSSGLONASSSats());  if (other.getGNSSGalileoSats() != 0) setGNSSGalileoSats(other.getGNSSGalileoSats());  if (other.getGNSSBeidouSats() != 0) setGNSSBeidouSats(other.getGNSSBeidouSats());  if (other.gNSSJammingStatus_ != 0) setGNSSJammingStatusValue(other.getGNSSJammingStatusValue());  if (other.gSMModemStatus_ != 0) setGSMModemStatusValue(other.getGSMModemStatusValue());  if (other.gSMSIMStatus_ != 0) setGSMSIMStatusValue(other.getGSMSIMStatusValue());  if (other.getGSMGPRSStatus()) setGSMGPRSStatus(other.getGSMGPRSStatus());  if (!other.getGSMOperatorName().isEmpty()) { this.gSMOperatorName_ = other.gSMOperatorName_; onChanged(); }  if (other.getGSMOperatorCode() != 0) setGSMOperatorCode(other.getGSMOperatorCode());  if (other.getGSMLocationAreaCode() != 0) setGSMLocationAreaCode(other.getGSMLocationAreaCode());  if (other.getGSMCellID() != 0) setGSMCellID(other.getGSMCellID());  if (other.getGSMSignalStrength() != 0) setGSMSignalStrength(other.getGSMSignalStrength());  if (other.getGSMJamming()) setGSMJamming(other.getGSMJamming());  if (other.getGSMRecordsSentCount() != 0) setGSMRecordsSentCount(other.getGSMRecordsSentCount());  if (other.getGSMRecordsLastSentTime() != 0) setGSMRecordsLastSentTime(other.getGSMRecordsLastSentTime());  if (other.getGSMRecordsLastServerResponseTime() != 0) setGSMRecordsLastServerResponseTime(other.getGSMRecordsLastServerResponseTime());  if (other.getGSMRecordsCount() != 0) setGSMRecordsCount(other.getGSMRecordsCount());  if (other.getGSMGPRSSentData() != 0) setGSMGPRSSentData(other.getGSMGPRSSentData());  if (other.getGSMGPRSReceivedData() != 0) setGSMGPRSReceivedData(other.getGSMGPRSReceivedData());  if (other.getGSMSMSSent() != 0) setGSMSMSSent(other.getGSMSMSSent());  if (other.getGSMSMSReceived() != 0) setGSMSMSReceived(other.getGSMSMSReceived());  if (other.getGSMSocketState()) setGSMSocketState(other.getGSMSocketState());  if (other.bluetoothStatus_ != 0) setBluetoothStatusValue(other.getBluetoothStatusValue());  if (!other.getBluetoothName().isEmpty()) { this.bluetoothName_ = other.bluetoothName_; onChanged(); }  if (!other.getBluetoothMAC().isEmpty()) { this.bluetoothMAC_ = other.bluetoothMAC_; onChanged(); }  if (other.getBluetoothDataLinkConnectStatus()) setBluetoothDataLinkConnectStatus(other.getBluetoothDataLinkConnectStatus());  if (!other.getBluetoothDataLinkName().isEmpty()) { this.bluetoothDataLinkName_ = other.bluetoothDataLinkName_; onChanged(); }  if (!other.getBluetoothDataLinkMAC().isEmpty()) { this.bluetoothDataLinkMAC_ = other.bluetoothDataLinkMAC_; onChanged(); }  if (other.bluetoothExtDeviceStatus_ != 0) setBluetoothExtDeviceStatusValue(other.getBluetoothExtDeviceStatusValue());  if (!other.getBluetoothExtDeviceName().isEmpty()) { this.bluetoothExtDeviceName_ = other.bluetoothExtDeviceName_; onChanged(); }  if (!other.getBluetoothExtDeviceMAC().isEmpty()) { this.bluetoothExtDeviceMAC_ = other.bluetoothExtDeviceMAC_; onChanged(); }  if (!other.iOListID_.isEmpty()) { if (this.iOListID_.isEmpty()) { this.iOListID_ = other.iOListID_; this.bitField0_ &= 0xFFFFFFFE; } else { ensureIOListIDIsMutable(); this.iOListID_.addAll(other.iOListID_); }  onChanged(); }  if (!other.iOListValue_.isEmpty()) { if (this.iOListValue_.isEmpty()) { this.iOListValue_ = other.iOListValue_; this.bitField0_ &= 0xFFFFFFFD; } else { ensureIOListValueIsMutable(); this.iOListValue_.addAll((Collection)other.iOListValue_); }  onChanged(); }  mergeUnknownFields(other.unknownFields); onChanged(); return this; } public final boolean isInitialized() { return true; } public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { DolphinMessages.DeviceInfo parsedMessage = null; try { parsedMessage = (DolphinMessages.DeviceInfo)DolphinMessages.DeviceInfo.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (DolphinMessages.DeviceInfo)e.getUnfinishedMessage(); throw e.unwrapIOException(); } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; } public String getName() { Object ref = this.name_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.name_ = s; return s; }  return (String)ref; } public ByteString getNameBytes() { Object ref = this.name_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.name_ = b; return b; }  return (ByteString)ref; } public Builder setName(String value) { if (value == null) throw new NullPointerException();  this.name_ = value; onChanged(); return this; } public Builder clearName() { this.name_ = DolphinMessages.DeviceInfo.getDefaultInstance().getName(); onChanged(); return this; } public Builder setNameBytes(ByteString value) { if (value == null) throw new NullPointerException();  DolphinMessages.DeviceInfo.checkByteStringIsUtf8(value); this.name_ = value; onChanged(); return this; } public long getIMEI() { return this.iMEI_; } public Builder setIMEI(long value) { this.iMEI_ = value; onChanged(); return this; } public Builder clearIMEI() { this.iMEI_ = 0L; onChanged(); return this; } public String getFirmwareVersion() { Object ref = this.firmwareVersion_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.firmwareVersion_ = s; return s; }  return (String)ref; } public ByteString getFirmwareVersionBytes() { Object ref = this.firmwareVersion_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.firmwareVersion_ = b; return b; }  return (ByteString)ref; } public Builder setFirmwareVersion(String value) { if (value == null) throw new NullPointerException();  this.firmwareVersion_ = value; onChanged(); return this; } public Builder clearFirmwareVersion() { this.firmwareVersion_ = DolphinMessages.DeviceInfo.getDefaultInstance().getFirmwareVersion(); onChanged(); return this; } public Builder setFirmwareVersionBytes(ByteString value) { if (value == null) throw new NullPointerException();  DolphinMessages.DeviceInfo.checkByteStringIsUtf8(value); this.firmwareVersion_ = value; onChanged(); return this; } public int getRTCTimestamp() { return this.rTCTimestamp_; } public Builder setRTCTimestamp(int value) { this.rTCTimestamp_ = value; onChanged(); return this; } public Builder clearRTCTimestamp() { this.rTCTimestamp_ = 0; onChanged(); return this; } public int getLastStartTimestamp() { return this.lastStartTimestamp_; } public Builder setLastStartTimestamp(int value) { this.lastStartTimestamp_ = value; onChanged(); return this; } public Builder clearLastStartTimestamp() { this.lastStartTimestamp_ = 0; onChanged(); return this; } public int getUpTime() { return this.upTime_; } public Builder setUpTime(int value) { this.upTime_ = value; onChanged(); return this; } public Builder clearUpTime() { this.upTime_ = 0; onChanged(); return this; } public int getTotalUpTime() { return this.totalUpTime_; } public Builder setTotalUpTime(int value) { this.totalUpTime_ = value; onChanged(); return this; } public Builder clearTotalUpTime() { this.totalUpTime_ = 0; onChanged(); return this; } public int getGNSSStatusValue() { return this.gNSSStatus_; } public Builder setGNSSStatusValue(int value) { this.gNSSStatus_ = value; onChanged(); return this; } public DolphinMessages.GNSSStatus getGNSSStatus() { DolphinMessages.GNSSStatus result = DolphinMessages.GNSSStatus.valueOf(this.gNSSStatus_); return (result == null) ? DolphinMessages.GNSSStatus.UNRECOGNIZED : result; } public Builder setGNSSStatus(DolphinMessages.GNSSStatus value) { if (value == null) throw new NullPointerException();  this.gNSSStatus_ = value.getNumber(); onChanged(); return this; } public Builder clearGNSSStatus() { this.gNSSStatus_ = 0; onChanged(); return this; } public boolean getGNSSFix() { return this.gNSSFix_; } public Builder setGNSSFix(boolean value) { this.gNSSFix_ = value; onChanged(); return this; } public Builder clearGNSSFix() { this.gNSSFix_ = false; onChanged(); return this; } public int getGNSSTimeToFirstFix() { return this.gNSSTimeToFirstFix_; } public Builder setGNSSTimeToFirstFix(int value) { this.gNSSTimeToFirstFix_ = value; onChanged(); return this; } public Builder clearGNSSTimeToFirstFix() { this.gNSSTimeToFirstFix_ = 0; onChanged(); return this; } public int getGNSSTimeToLastFix() { return this.gNSSTimeToLastFix_; } public Builder setGNSSTimeToLastFix(int value) { this.gNSSTimeToLastFix_ = value; onChanged(); return this; } private Builder(GeneratedMessageV3.BuilderParent parent) { super(parent); this.name_ = ""; this.firmwareVersion_ = ""; this.gNSSStatus_ = 0; this.gNSSJammingStatus_ = 0; this.gSMModemStatus_ = 0; this.gSMSIMStatus_ = 0; this.gSMOperatorName_ = ""; this.bluetoothStatus_ = 0; this.bluetoothName_ = ""; this.bluetoothMAC_ = ""; this.bluetoothDataLinkName_ = ""; this.bluetoothDataLinkMAC_ = ""; this.bluetoothExtDeviceStatus_ = 0; this.bluetoothExtDeviceName_ = ""; this.bluetoothExtDeviceMAC_ = ""; this.iOListID_ = Collections.emptyList(); this.iOListValue_ = DolphinMessages.DeviceInfo.emptyLongList(); maybeForceBuilderInitialization(); }
/*       */       public Builder clearGNSSTimeToLastFix() { this.gNSSTimeToLastFix_ = 0; onChanged(); return this; }
/* 12146 */       public int getGNSSPackets() { return this.gNSSPackets_; } public Builder setGNSSPackets(int value) { this.gNSSPackets_ = value; onChanged(); return this; } public Builder clearGNSSPackets() { this.gNSSPackets_ = 0; onChanged(); return this; } public float getGNSSLatitude() { return this.gNSSLatitude_; } public Builder setGNSSLatitude(float value) { this.gNSSLatitude_ = value; onChanged(); return this; } public Builder clearGNSSLatitude() { this.gNSSLatitude_ = 0.0F; onChanged(); return this; } public float getGNSSLongitude() { return this.gNSSLongitude_; } public Builder setGNSSLongitude(float value) { this.gNSSLongitude_ = value; onChanged(); return this; } public Builder clearGNSSLongitude() { this.gNSSLongitude_ = 0.0F; onChanged(); return this; } public int getGNSSAltitude() { return this.gNSSAltitude_; } public Builder setGNSSAltitude(int value) { this.gNSSAltitude_ = value; onChanged(); return this; } public Builder clearGNSSAltitude() { this.gNSSAltitude_ = 0; onChanged(); return this; } public int getGNSSSpeed() { return this.gNSSSpeed_; } public Builder setGNSSSpeed(int value) { this.gNSSSpeed_ = value; onChanged(); return this; } public Builder clearGNSSSpeed() { this.gNSSSpeed_ = 0; onChanged(); return this; } public int getGNSSBearing() { return this.gNSSBearing_; } public Builder setGNSSBearing(int value) { this.gNSSBearing_ = value; onChanged(); return this; } public Builder clearGNSSBearing() { this.gNSSBearing_ = 0; onChanged(); return this; } public int getGNSSHDOP() { return this.gNSSHDOP_; } public Builder setGNSSHDOP(int value) { this.gNSSHDOP_ = value; onChanged(); return this; } public Builder clearGNSSHDOP() { this.gNSSHDOP_ = 0; onChanged(); return this; } public int getGNSSPDOP() { return this.gNSSPDOP_; } public Builder setGNSSPDOP(int value) { this.gNSSPDOP_ = value; onChanged(); return this; } public Builder clearGNSSPDOP() { this.gNSSPDOP_ = 0; onChanged(); return this; } public int getGNSSSatsInUse() { return this.gNSSSatsInUse_; } public Builder setGNSSSatsInUse(int value) { this.gNSSSatsInUse_ = value; onChanged(); return this; } public Builder clearGNSSSatsInUse() { this.gNSSSatsInUse_ = 0; onChanged(); return this; } public int getGNSSGPSSats() { return this.gNSSGPSSats_; } public Builder setGNSSGPSSats(int value) { this.gNSSGPSSats_ = value; onChanged(); return this; } public Builder clearGNSSGPSSats() { this.gNSSGPSSats_ = 0; onChanged(); return this; } public int getGNSSGLONASSSats() { return this.gNSSGLONASSSats_; } public Builder setGNSSGLONASSSats(int value) { this.gNSSGLONASSSats_ = value; onChanged(); return this; } public Builder clearGNSSGLONASSSats() { this.gNSSGLONASSSats_ = 0; onChanged(); return this; } public int getGNSSGalileoSats() { return this.gNSSGalileoSats_; } public Builder setGNSSGalileoSats(int value) { this.gNSSGalileoSats_ = value; onChanged(); return this; } public Builder clearGNSSGalileoSats() { this.gNSSGalileoSats_ = 0; onChanged(); return this; } public int getGNSSBeidouSats() { return this.gNSSBeidouSats_; } public Builder setGNSSBeidouSats(int value) { this.gNSSBeidouSats_ = value; onChanged(); return this; } public Builder clearGNSSBeidouSats() { this.gNSSBeidouSats_ = 0; onChanged(); return this; } public int getGNSSJammingStatusValue() { return this.gNSSJammingStatus_; } public Builder setGNSSJammingStatusValue(int value) { this.gNSSJammingStatus_ = value; onChanged(); return this; } public DolphinMessages.GNSS_JammingStatus getGNSSJammingStatus() { DolphinMessages.GNSS_JammingStatus result = DolphinMessages.GNSS_JammingStatus.valueOf(this.gNSSJammingStatus_); return (result == null) ? DolphinMessages.GNSS_JammingStatus.UNRECOGNIZED : result; } public Builder setGNSSJammingStatus(DolphinMessages.GNSS_JammingStatus value) { if (value == null) throw new NullPointerException();  this.gNSSJammingStatus_ = value.getNumber(); onChanged(); return this; } public Builder clearGNSSJammingStatus() { this.gNSSJammingStatus_ = 0; onChanged(); return this; } public int getGSMModemStatusValue() { return this.gSMModemStatus_; } public Builder setGSMModemStatusValue(int value) { this.gSMModemStatus_ = value; onChanged(); return this; } public DolphinMessages.ModemStatus getGSMModemStatus() { DolphinMessages.ModemStatus result = DolphinMessages.ModemStatus.valueOf(this.gSMModemStatus_); return (result == null) ? DolphinMessages.ModemStatus.UNRECOGNIZED : result; } public Builder setGSMModemStatus(DolphinMessages.ModemStatus value) { if (value == null) throw new NullPointerException();  this.gSMModemStatus_ = value.getNumber(); onChanged(); return this; } public Builder clearGSMModemStatus() { this.gSMModemStatus_ = 0; onChanged(); return this; } public int getGSMSIMStatusValue() { return this.gSMSIMStatus_; } public Builder setGSMSIMStatusValue(int value) { this.gSMSIMStatus_ = value; onChanged(); return this; } public DolphinMessages.SIMStatus getGSMSIMStatus() { DolphinMessages.SIMStatus result = DolphinMessages.SIMStatus.valueOf(this.gSMSIMStatus_); return (result == null) ? DolphinMessages.SIMStatus.UNRECOGNIZED : result; } private void ensureIOListValueIsMutable() { if ((this.bitField0_ & 0x2) == 0)
/* 12147 */         { this.iOListValue_ = DolphinMessages.DeviceInfo.mutableCopy(this.iOListValue_);
/* 12148 */           this.bitField0_ |= 0x2; }  } public Builder setGSMSIMStatus(DolphinMessages.SIMStatus value) { if (value == null) throw new NullPointerException();  this.gSMSIMStatus_ = value.getNumber(); onChanged(); return this; } public Builder clearGSMSIMStatus() { this.gSMSIMStatus_ = 0; onChanged(); return this; } public boolean getGSMGPRSStatus() { return this.gSMGPRSStatus_; } public Builder setGSMGPRSStatus(boolean value) { this.gSMGPRSStatus_ = value; onChanged(); return this; } public Builder clearGSMGPRSStatus() { this.gSMGPRSStatus_ = false; onChanged(); return this; } public String getGSMOperatorName() { Object ref = this.gSMOperatorName_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.gSMOperatorName_ = s; return s; }  return (String)ref; } public ByteString getGSMOperatorNameBytes() { Object ref = this.gSMOperatorName_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.gSMOperatorName_ = b; return b; }  return (ByteString)ref; } public Builder setGSMOperatorName(String value) { if (value == null) throw new NullPointerException();  this.gSMOperatorName_ = value; onChanged(); return this; } public Builder clearGSMOperatorName() { this.gSMOperatorName_ = DolphinMessages.DeviceInfo.getDefaultInstance().getGSMOperatorName(); onChanged(); return this; } public Builder setGSMOperatorNameBytes(ByteString value) { if (value == null) throw new NullPointerException();  DolphinMessages.DeviceInfo.checkByteStringIsUtf8(value); this.gSMOperatorName_ = value; onChanged(); return this; } public int getGSMOperatorCode() { return this.gSMOperatorCode_; } public Builder setGSMOperatorCode(int value) { this.gSMOperatorCode_ = value; onChanged(); return this; } public Builder clearGSMOperatorCode() { this.gSMOperatorCode_ = 0; onChanged(); return this; } public int getGSMLocationAreaCode() { return this.gSMLocationAreaCode_; } public Builder setGSMLocationAreaCode(int value) { this.gSMLocationAreaCode_ = value; onChanged(); return this; } public Builder clearGSMLocationAreaCode() { this.gSMLocationAreaCode_ = 0; onChanged(); return this; } public int getGSMCellID() { return this.gSMCellID_; } public Builder setGSMCellID(int value) { this.gSMCellID_ = value; onChanged(); return this; } public Builder clearGSMCellID() { this.gSMCellID_ = 0; onChanged(); return this; } public int getGSMSignalStrength() { return this.gSMSignalStrength_; } public Builder setGSMSignalStrength(int value) { this.gSMSignalStrength_ = value; onChanged(); return this; } public Builder clearGSMSignalStrength() { this.gSMSignalStrength_ = 0; onChanged(); return this; } public boolean getGSMJamming() { return this.gSMJamming_; } public Builder setGSMJamming(boolean value) { this.gSMJamming_ = value; onChanged(); return this; } public Builder clearGSMJamming() { this.gSMJamming_ = false; onChanged(); return this; } public int getGSMRecordsSentCount() { return this.gSMRecordsSentCount_; } public Builder setGSMRecordsSentCount(int value) { this.gSMRecordsSentCount_ = value; onChanged(); return this; } public Builder clearGSMRecordsSentCount() { this.gSMRecordsSentCount_ = 0; onChanged(); return this; } public int getGSMRecordsLastSentTime() { return this.gSMRecordsLastSentTime_; } public Builder setGSMRecordsLastSentTime(int value) { this.gSMRecordsLastSentTime_ = value; onChanged(); return this; } public Builder clearGSMRecordsLastSentTime() { this.gSMRecordsLastSentTime_ = 0; onChanged(); return this; } public int getGSMRecordsLastServerResponseTime() { return this.gSMRecordsLastServerResponseTime_; } public Builder setGSMRecordsLastServerResponseTime(int value) { this.gSMRecordsLastServerResponseTime_ = value; onChanged(); return this; } public Builder clearGSMRecordsLastServerResponseTime() { this.gSMRecordsLastServerResponseTime_ = 0; onChanged(); return this; } public int getGSMRecordsCount() { return this.gSMRecordsCount_; } public Builder setGSMRecordsCount(int value) { this.gSMRecordsCount_ = value; onChanged(); return this; } public Builder clearGSMRecordsCount() { this.gSMRecordsCount_ = 0; onChanged(); return this; } public int getGSMGPRSSentData() { return this.gSMGPRSSentData_; } public Builder setGSMGPRSSentData(int value) { this.gSMGPRSSentData_ = value; onChanged(); return this; } public Builder clearGSMGPRSSentData() { this.gSMGPRSSentData_ = 0; onChanged(); return this; } public int getGSMGPRSReceivedData() { return this.gSMGPRSReceivedData_; } public Builder setGSMGPRSReceivedData(int value) { this.gSMGPRSReceivedData_ = value; onChanged(); return this; } public Builder clearGSMGPRSReceivedData() { this.gSMGPRSReceivedData_ = 0; onChanged(); return this; } public int getGSMSMSSent() { return this.gSMSMSSent_; } public Builder setGSMSMSSent(int value) { this.gSMSMSSent_ = value; onChanged(); return this; } public Builder clearGSMSMSSent() { this.gSMSMSSent_ = 0; onChanged(); return this; } public int getGSMSMSReceived() { return this.gSMSMSReceived_; } public Builder setGSMSMSReceived(int value) { this.gSMSMSReceived_ = value; onChanged(); return this; } public Builder clearGSMSMSReceived() { this.gSMSMSReceived_ = 0; onChanged(); return this; } public boolean getGSMSocketState() { return this.gSMSocketState_; } public Builder setGSMSocketState(boolean value) { this.gSMSocketState_ = value; onChanged(); return this; } public Builder clearGSMSocketState() { this.gSMSocketState_ = false; onChanged(); return this; } public int getBluetoothStatusValue() { return this.bluetoothStatus_; } public Builder setBluetoothStatusValue(int value) { this.bluetoothStatus_ = value; onChanged(); return this; } public DolphinMessages.BluetoothStatus getBluetoothStatus() { DolphinMessages.BluetoothStatus result = DolphinMessages.BluetoothStatus.valueOf(this.bluetoothStatus_); return (result == null) ? DolphinMessages.BluetoothStatus.UNRECOGNIZED : result; } public Builder setBluetoothStatus(DolphinMessages.BluetoothStatus value) { if (value == null) throw new NullPointerException();  this.bluetoothStatus_ = value.getNumber(); onChanged(); return this; } public Builder clearBluetoothStatus() { this.bluetoothStatus_ = 0; onChanged(); return this; } public String getBluetoothName() { Object ref = this.bluetoothName_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.bluetoothName_ = s; return s; }  return (String)ref; } public ByteString getBluetoothNameBytes() { Object ref = this.bluetoothName_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.bluetoothName_ = b; return b; }  return (ByteString)ref; } public Builder setBluetoothName(String value) { if (value == null) throw new NullPointerException();  this.bluetoothName_ = value; onChanged(); return this; } public Builder clearBluetoothName() { this.bluetoothName_ = DolphinMessages.DeviceInfo.getDefaultInstance().getBluetoothName(); onChanged(); return this; } public Builder setBluetoothNameBytes(ByteString value) { if (value == null) throw new NullPointerException();  DolphinMessages.DeviceInfo.checkByteStringIsUtf8(value); this.bluetoothName_ = value; onChanged(); return this; } public String getBluetoothMAC() { Object ref = this.bluetoothMAC_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.bluetoothMAC_ = s; return s; }  return (String)ref; } public ByteString getBluetoothMACBytes() { Object ref = this.bluetoothMAC_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.bluetoothMAC_ = b; return b; }  return (ByteString)ref; } public Builder setBluetoothMAC(String value) { if (value == null) throw new NullPointerException();  this.bluetoothMAC_ = value; onChanged(); return this; } public Builder clearBluetoothMAC() { this.bluetoothMAC_ = DolphinMessages.DeviceInfo.getDefaultInstance().getBluetoothMAC(); onChanged(); return this; } public Builder setBluetoothMACBytes(ByteString value) { if (value == null) throw new NullPointerException();  DolphinMessages.DeviceInfo.checkByteStringIsUtf8(value); this.bluetoothMAC_ = value; onChanged(); return this; } public boolean getBluetoothDataLinkConnectStatus() { return this.bluetoothDataLinkConnectStatus_; } public Builder setBluetoothDataLinkConnectStatus(boolean value) { this.bluetoothDataLinkConnectStatus_ = value; onChanged(); return this; } public Builder clearBluetoothDataLinkConnectStatus() { this.bluetoothDataLinkConnectStatus_ = false; onChanged(); return this; } public String getBluetoothDataLinkName() { Object ref = this.bluetoothDataLinkName_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.bluetoothDataLinkName_ = s; return s; }  return (String)ref; } public ByteString getBluetoothDataLinkNameBytes() { Object ref = this.bluetoothDataLinkName_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.bluetoothDataLinkName_ = b; return b; }  return (ByteString)ref; } public Builder setBluetoothDataLinkName(String value) { if (value == null) throw new NullPointerException();  this.bluetoothDataLinkName_ = value; onChanged(); return this; } public Builder clearBluetoothDataLinkName() { this.bluetoothDataLinkName_ = DolphinMessages.DeviceInfo.getDefaultInstance().getBluetoothDataLinkName(); onChanged(); return this; } public Builder setBluetoothDataLinkNameBytes(ByteString value) { if (value == null) throw new NullPointerException();  DolphinMessages.DeviceInfo.checkByteStringIsUtf8(value); this.bluetoothDataLinkName_ = value; onChanged(); return this; } public String getBluetoothDataLinkMAC() { Object ref = this.bluetoothDataLinkMAC_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.bluetoothDataLinkMAC_ = s; return s; }  return (String)ref; } public ByteString getBluetoothDataLinkMACBytes() { Object ref = this.bluetoothDataLinkMAC_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.bluetoothDataLinkMAC_ = b; return b; }  return (ByteString)ref; } public Builder setBluetoothDataLinkMAC(String value) { if (value == null) throw new NullPointerException();  this.bluetoothDataLinkMAC_ = value; onChanged(); return this; } public Builder clearBluetoothDataLinkMAC() { this.bluetoothDataLinkMAC_ = DolphinMessages.DeviceInfo.getDefaultInstance().getBluetoothDataLinkMAC(); onChanged(); return this; } public Builder setBluetoothDataLinkMACBytes(ByteString value) { if (value == null) throw new NullPointerException();  DolphinMessages.DeviceInfo.checkByteStringIsUtf8(value); this.bluetoothDataLinkMAC_ = value; onChanged(); return this; } public int getBluetoothExtDeviceStatusValue() { return this.bluetoothExtDeviceStatus_; } public Builder setBluetoothExtDeviceStatusValue(int value) { this.bluetoothExtDeviceStatus_ = value; onChanged(); return this; } public DolphinMessages.BluetoothExtDeviceStatus getBluetoothExtDeviceStatus() { DolphinMessages.BluetoothExtDeviceStatus result = DolphinMessages.BluetoothExtDeviceStatus.valueOf(this.bluetoothExtDeviceStatus_); return (result == null) ? DolphinMessages.BluetoothExtDeviceStatus.UNRECOGNIZED : result; } public Builder setBluetoothExtDeviceStatus(DolphinMessages.BluetoothExtDeviceStatus value) { if (value == null) throw new NullPointerException();  this.bluetoothExtDeviceStatus_ = value.getNumber(); onChanged(); return this; } public Builder clearBluetoothExtDeviceStatus() { this.bluetoothExtDeviceStatus_ = 0; onChanged(); return this; } public String getBluetoothExtDeviceName() { Object ref = this.bluetoothExtDeviceName_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.bluetoothExtDeviceName_ = s; return s; }  return (String)ref; } public ByteString getBluetoothExtDeviceNameBytes() { Object ref = this.bluetoothExtDeviceName_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.bluetoothExtDeviceName_ = b; return b; }  return (ByteString)ref; } public Builder setBluetoothExtDeviceName(String value) { if (value == null) throw new NullPointerException();  this.bluetoothExtDeviceName_ = value; onChanged(); return this; } public Builder clearBluetoothExtDeviceName() { this.bluetoothExtDeviceName_ = DolphinMessages.DeviceInfo.getDefaultInstance().getBluetoothExtDeviceName(); onChanged(); return this; } public Builder setBluetoothExtDeviceNameBytes(ByteString value) { if (value == null) throw new NullPointerException();  DolphinMessages.DeviceInfo.checkByteStringIsUtf8(value); this.bluetoothExtDeviceName_ = value; onChanged(); return this; } public String getBluetoothExtDeviceMAC() { Object ref = this.bluetoothExtDeviceMAC_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.bluetoothExtDeviceMAC_ = s; return s; }  return (String)ref; } public ByteString getBluetoothExtDeviceMACBytes() { Object ref = this.bluetoothExtDeviceMAC_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.bluetoothExtDeviceMAC_ = b; return b; }  return (ByteString)ref; } public Builder setBluetoothExtDeviceMAC(String value) { if (value == null) throw new NullPointerException();  this.bluetoothExtDeviceMAC_ = value; onChanged(); return this; } public Builder clearBluetoothExtDeviceMAC() { this.bluetoothExtDeviceMAC_ = DolphinMessages.DeviceInfo.getDefaultInstance().getBluetoothExtDeviceMAC(); onChanged(); return this; } public Builder setBluetoothExtDeviceMACBytes(ByteString value) { if (value == null) throw new NullPointerException();  DolphinMessages.DeviceInfo.checkByteStringIsUtf8(value); this.bluetoothExtDeviceMAC_ = value; onChanged(); return this; } private void ensureIOListIDIsMutable() { if ((this.bitField0_ & 0x1) == 0) { this.iOListID_ = new ArrayList<>(this.iOListID_); this.bitField0_ |= 0x1; }  } public List<DolphinConfig.AlarmType> getIOListIDList() { return (List<DolphinConfig.AlarmType>)new Internal.ListAdapter(this.iOListID_, DolphinMessages.DeviceInfo.iOListID_converter_); } public int getIOListIDCount() { return this.iOListID_.size(); } public DolphinConfig.AlarmType getIOListID(int index) { return (DolphinConfig.AlarmType)DolphinMessages.DeviceInfo.iOListID_converter_.convert(this.iOListID_.get(index)); } public Builder setIOListID(int index, DolphinConfig.AlarmType value) { if (value == null) throw new NullPointerException();  ensureIOListIDIsMutable(); this.iOListID_.set(index, Integer.valueOf(value.getNumber())); onChanged(); return this; }
/*       */       public Builder addIOListID(DolphinConfig.AlarmType value) { if (value == null) throw new NullPointerException();  ensureIOListIDIsMutable(); this.iOListID_.add(Integer.valueOf(value.getNumber())); onChanged(); return this; }
/*       */       public Builder addAllIOListID(Iterable<? extends DolphinConfig.AlarmType> values) { ensureIOListIDIsMutable(); for (DolphinConfig.AlarmType value : values) this.iOListID_.add(Integer.valueOf(value.getNumber()));  onChanged(); return this; }
/*       */       public Builder clearIOListID() { this.iOListID_ = Collections.emptyList(); this.bitField0_ &= 0xFFFFFFFE; onChanged(); return this; }
/*       */       public List<Integer> getIOListIDValueList() { return Collections.unmodifiableList(this.iOListID_); }
/*       */       public int getIOListIDValue(int index) { return ((Integer)this.iOListID_.get(index)).intValue(); }
/*       */       public Builder setIOListIDValue(int index, int value) { ensureIOListIDIsMutable(); this.iOListID_.set(index, Integer.valueOf(value)); onChanged(); return this; }
/*       */       public Builder addIOListIDValue(int value) { ensureIOListIDIsMutable(); this.iOListID_.add(Integer.valueOf(value)); onChanged(); return this; }
/*       */       public Builder addAllIOListIDValue(Iterable<Integer> values) { ensureIOListIDIsMutable(); for (Iterator<Integer> iterator = values.iterator(); iterator.hasNext(); ) { int value = ((Integer)iterator.next()).intValue(); this.iOListID_.add(Integer.valueOf(value)); }  onChanged(); return this; }
/* 12157 */       public List<Long> getIOListValueList() { return ((this.bitField0_ & 0x2) != 0) ? 
/* 12158 */           Collections.<Long>unmodifiableList((List<? extends Long>)this.iOListValue_) : (List<Long>)this.iOListValue_; }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getIOListValueCount() {
/* 12165 */         return this.iOListValue_.size();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public long getIOListValue(int index) {
/* 12173 */         return this.iOListValue_.getLong(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOListValue(int index, long value) {
/* 12183 */         ensureIOListValueIsMutable();
/* 12184 */         this.iOListValue_.setLong(index, value);
/* 12185 */         onChanged();
/* 12186 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addIOListValue(long value) {
/* 12194 */         ensureIOListValueIsMutable();
/* 12195 */         this.iOListValue_.addLong(value);
/* 12196 */         onChanged();
/* 12197 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addAllIOListValue(Iterable<? extends Long> values) {
/* 12206 */         ensureIOListValueIsMutable();
/* 12207 */         AbstractMessageLite.Builder.addAll(values, (List)this.iOListValue_);
/*       */         
/* 12209 */         onChanged();
/* 12210 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearIOListValue() {
/* 12217 */         this.iOListValue_ = DolphinMessages.DeviceInfo.emptyLongList();
/* 12218 */         this.bitField0_ &= 0xFFFFFFFD;
/* 12219 */         onChanged();
/* 12220 */         return this;
/*       */       }
/*       */ 
/*       */       
/*       */       public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
/* 12225 */         return (Builder)super.setUnknownFields(unknownFields);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
/* 12231 */         return (Builder)super.mergeUnknownFields(unknownFields);
/*       */       } }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 12241 */     private static final DeviceInfo DEFAULT_INSTANCE = new DeviceInfo();
/*       */ 
/*       */     
/*       */     public static DeviceInfo getDefaultInstance() {
/* 12245 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */ 
/*       */     
/* 12249 */     private static final Parser<DeviceInfo> PARSER = (Parser<DeviceInfo>)new AbstractParser<DeviceInfo>()
/*       */       {
/*       */ 
/*       */         
/*       */         public DolphinMessages.DeviceInfo parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException
/*       */         {
/* 12255 */           return new DolphinMessages.DeviceInfo(input, extensionRegistry);
/*       */         }
/*       */       };
/*       */     
/*       */     public static Parser<DeviceInfo> parser() {
/* 12260 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public Parser<DeviceInfo> getParserForType() {
/* 12265 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public DeviceInfo getDefaultInstanceForType() {
/* 12270 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */   }
/*       */ 
/*       */ 
/*       */   
/*       */   public static interface ConfigSetRequestOrBuilder
/*       */     extends MessageOrBuilder
/*       */   {
/*       */     String getPassword();
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getPasswordBytes();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasConfiguration();
/*       */ 
/*       */     
/*       */     DolphinConfig.Config getConfiguration();
/*       */ 
/*       */     
/*       */     DolphinConfig.ConfigOrBuilder getConfigurationOrBuilder();
/*       */   }
/*       */ 
/*       */   
/*       */   public static final class ConfigSetRequest
/*       */     extends GeneratedMessageV3
/*       */     implements ConfigSetRequestOrBuilder
/*       */   {
/*       */     private static final long serialVersionUID = 0L;
/*       */     
/*       */     public static final int PASSWORD_FIELD_NUMBER = 1;
/*       */     
/*       */     private volatile Object password_;
/*       */     
/*       */     public static final int CONFIGURATION_FIELD_NUMBER = 2;
/*       */     
/*       */     private DolphinConfig.Config configuration_;
/*       */     
/*       */     private byte memoizedIsInitialized;
/*       */ 
/*       */     
/*       */     private ConfigSetRequest(GeneratedMessageV3.Builder<?> builder)
/*       */     {
/* 12316 */       super(builder);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/* 12467 */       this.memoizedIsInitialized = -1; } private ConfigSetRequest() { this.memoizedIsInitialized = -1; this.password_ = ""; } protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) { return new ConfigSetRequest(); } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private ConfigSetRequest(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this(); if (extensionRegistry == null) throw new NullPointerException();  UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { String s; DolphinConfig.Config.Builder subBuilder; int tag = input.readTag(); switch (tag) { case 0: done = true; continue;case 10: s = input.readStringRequireUtf8(); this.password_ = s; continue;case 18: subBuilder = null; if (this.configuration_ != null) subBuilder = this.configuration_.toBuilder();  this.configuration_ = (DolphinConfig.Config)input.readMessage(DolphinConfig.Config.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.configuration_); this.configuration_ = subBuilder.buildPartial(); }  continue; }  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this); } finally { this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_ConfigSetRequest_descriptor; } protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() { return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_ConfigSetRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(ConfigSetRequest.class, Builder.class); } public String getPassword() { Object ref = this.password_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.password_ = s; return s; } public ByteString getPasswordBytes() { Object ref = this.password_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.password_ = b; return b; }  return (ByteString)ref; } public boolean hasConfiguration() { return (this.configuration_ != null); }
/*       */     public DolphinConfig.Config getConfiguration() { return (this.configuration_ == null) ? DolphinConfig.Config.getDefaultInstance() : this.configuration_; }
/*       */     public DolphinConfig.ConfigOrBuilder getConfigurationOrBuilder() { return (DolphinConfig.ConfigOrBuilder)getConfiguration(); }
/* 12470 */     public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized;
/* 12471 */       if (isInitialized == 1) return true; 
/* 12472 */       if (isInitialized == 0) return false;
/*       */       
/* 12474 */       this.memoizedIsInitialized = 1;
/* 12475 */       return true; }
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/* 12481 */       if (!getPasswordBytes().isEmpty()) {
/* 12482 */         GeneratedMessageV3.writeString(output, 1, this.password_);
/*       */       }
/* 12484 */       if (this.configuration_ != null) {
/* 12485 */         output.writeMessage(2, (MessageLite)getConfiguration());
/*       */       }
/* 12487 */       this.unknownFields.writeTo(output);
/*       */     }
/*       */ 
/*       */     
/*       */     public int getSerializedSize() {
/* 12492 */       int size = this.memoizedSize;
/* 12493 */       if (size != -1) return size;
/*       */       
/* 12495 */       size = 0;
/* 12496 */       if (!getPasswordBytes().isEmpty()) {
/* 12497 */         size += GeneratedMessageV3.computeStringSize(1, this.password_);
/*       */       }
/* 12499 */       if (this.configuration_ != null) {
/* 12500 */         size += 
/* 12501 */           CodedOutputStream.computeMessageSize(2, (MessageLite)getConfiguration());
/*       */       }
/* 12503 */       size += this.unknownFields.getSerializedSize();
/* 12504 */       this.memoizedSize = size;
/* 12505 */       return size;
/*       */     }
/*       */ 
/*       */     
/*       */     public boolean equals(Object obj) {
/* 12510 */       if (obj == this) {
/* 12511 */         return true;
/*       */       }
/* 12513 */       if (!(obj instanceof ConfigSetRequest)) {
/* 12514 */         return super.equals(obj);
/*       */       }
/* 12516 */       ConfigSetRequest other = (ConfigSetRequest)obj;
/*       */ 
/*       */       
/* 12519 */       if (!getPassword().equals(other.getPassword())) return false; 
/* 12520 */       if (hasConfiguration() != other.hasConfiguration()) return false; 
/* 12521 */       if (hasConfiguration() && 
/*       */         
/* 12523 */         !getConfiguration().equals(other.getConfiguration())) return false;
/*       */       
/* 12525 */       if (!this.unknownFields.equals(other.unknownFields)) return false; 
/* 12526 */       return true;
/*       */     }
/*       */ 
/*       */     
/*       */     public int hashCode() {
/* 12531 */       if (this.memoizedHashCode != 0) {
/* 12532 */         return this.memoizedHashCode;
/*       */       }
/* 12534 */       int hash = 41;
/* 12535 */       hash = 19 * hash + getDescriptor().hashCode();
/* 12536 */       hash = 37 * hash + 1;
/* 12537 */       hash = 53 * hash + getPassword().hashCode();
/* 12538 */       if (hasConfiguration()) {
/* 12539 */         hash = 37 * hash + 2;
/* 12540 */         hash = 53 * hash + getConfiguration().hashCode();
/*       */       } 
/* 12542 */       hash = 29 * hash + this.unknownFields.hashCode();
/* 12543 */       this.memoizedHashCode = hash;
/* 12544 */       return hash;
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static ConfigSetRequest parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
/* 12550 */       return (ConfigSetRequest)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static ConfigSetRequest parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 12556 */       return (ConfigSetRequest)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static ConfigSetRequest parseFrom(ByteString data) throws InvalidProtocolBufferException {
/* 12561 */       return (ConfigSetRequest)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static ConfigSetRequest parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 12567 */       return (ConfigSetRequest)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static ConfigSetRequest parseFrom(byte[] data) throws InvalidProtocolBufferException {
/* 12571 */       return (ConfigSetRequest)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static ConfigSetRequest parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 12577 */       return (ConfigSetRequest)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static ConfigSetRequest parseFrom(InputStream input) throws IOException {
/* 12581 */       return 
/* 12582 */         (ConfigSetRequest)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static ConfigSetRequest parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 12588 */       return 
/* 12589 */         (ConfigSetRequest)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static ConfigSetRequest parseDelimitedFrom(InputStream input) throws IOException {
/* 12593 */       return 
/* 12594 */         (ConfigSetRequest)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static ConfigSetRequest parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 12600 */       return 
/* 12601 */         (ConfigSetRequest)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static ConfigSetRequest parseFrom(CodedInputStream input) throws IOException {
/* 12606 */       return 
/* 12607 */         (ConfigSetRequest)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static ConfigSetRequest parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 12613 */       return 
/* 12614 */         (ConfigSetRequest)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public Builder newBuilderForType() {
/* 12618 */       return newBuilder();
/*       */     } public static Builder newBuilder() {
/* 12620 */       return DEFAULT_INSTANCE.toBuilder();
/*       */     }
/*       */     public static Builder newBuilder(ConfigSetRequest prototype) {
/* 12623 */       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
/*       */     }
/*       */     
/*       */     public Builder toBuilder() {
/* 12627 */       return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder())
/* 12628 */         .mergeFrom(this);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
/* 12634 */       Builder builder = new Builder(parent);
/* 12635 */       return builder;
/*       */     }
/*       */     
/*       */     public static final class Builder
/*       */       extends GeneratedMessageV3.Builder<Builder>
/*       */       implements DolphinMessages.ConfigSetRequestOrBuilder {
/*       */       private Object password_;
/*       */       private DolphinConfig.Config configuration_;
/*       */       private SingleFieldBuilderV3<DolphinConfig.Config, DolphinConfig.Config.Builder, DolphinConfig.ConfigOrBuilder> configurationBuilder_;
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/* 12646 */         return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_ConfigSetRequest_descriptor;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
/* 12652 */         return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_ConfigSetRequest_fieldAccessorTable
/* 12653 */           .ensureFieldAccessorsInitialized(DolphinMessages.ConfigSetRequest.class, Builder.class);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private Builder()
/*       */       {
/* 12799 */         this.password_ = ""; maybeForceBuilderInitialization(); } private Builder(GeneratedMessageV3.BuilderParent parent) { super(parent); this.password_ = ""; maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (DolphinMessages.ConfigSetRequest.alwaysUseFieldBuilders); } public Builder clear() { super.clear(); this.password_ = ""; if (this.configurationBuilder_ == null) { this.configuration_ = null; } else { this.configuration_ = null; this.configurationBuilder_ = null; }  return this; } public Descriptors.Descriptor getDescriptorForType() { return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_ConfigSetRequest_descriptor; } public DolphinMessages.ConfigSetRequest getDefaultInstanceForType() { return DolphinMessages.ConfigSetRequest.getDefaultInstance(); } public DolphinMessages.ConfigSetRequest build() { DolphinMessages.ConfigSetRequest result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public DolphinMessages.ConfigSetRequest buildPartial() { DolphinMessages.ConfigSetRequest result = new DolphinMessages.ConfigSetRequest(this); result.password_ = this.password_; if (this.configurationBuilder_ == null) { result.configuration_ = this.configuration_; } else { result.configuration_ = (DolphinConfig.Config)this.configurationBuilder_.build(); }  onBuilt(); return result; } public Builder clone() { return (Builder)super.clone(); } public Builder setField(Descriptors.FieldDescriptor field, Object value) { return (Builder)super.setField(field, value); } public Builder clearField(Descriptors.FieldDescriptor field) { return (Builder)super.clearField(field); } public Builder clearOneof(Descriptors.OneofDescriptor oneof) { return (Builder)super.clearOneof(oneof); } public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) { return (Builder)super.setRepeatedField(field, index, value); }
/*       */       public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) { return (Builder)super.addRepeatedField(field, value); }
/*       */       public Builder mergeFrom(Message other) { if (other instanceof DolphinMessages.ConfigSetRequest) return mergeFrom((DolphinMessages.ConfigSetRequest)other);  super.mergeFrom(other); return this; }
/*       */       public Builder mergeFrom(DolphinMessages.ConfigSetRequest other) { if (other == DolphinMessages.ConfigSetRequest.getDefaultInstance()) return this;  if (!other.getPassword().isEmpty()) { this.password_ = other.password_; onChanged(); }  if (other.hasConfiguration()) mergeConfiguration(other.getConfiguration());  mergeUnknownFields(other.unknownFields); onChanged(); return this; }
/*       */       public final boolean isInitialized() { return true; }
/*       */       public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { DolphinMessages.ConfigSetRequest parsedMessage = null; try { parsedMessage = (DolphinMessages.ConfigSetRequest)DolphinMessages.ConfigSetRequest.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (DolphinMessages.ConfigSetRequest)e.getUnfinishedMessage(); throw e.unwrapIOException(); } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; }
/* 12805 */       public String getPassword() { Object ref = this.password_;
/* 12806 */         if (!(ref instanceof String)) {
/* 12807 */           ByteString bs = (ByteString)ref;
/*       */           
/* 12809 */           String s = bs.toStringUtf8();
/* 12810 */           this.password_ = s;
/* 12811 */           return s;
/*       */         } 
/* 12813 */         return (String)ref; }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public ByteString getPasswordBytes() {
/* 12822 */         Object ref = this.password_;
/* 12823 */         if (ref instanceof String) {
/*       */           
/* 12825 */           ByteString b = ByteString.copyFromUtf8((String)ref);
/*       */           
/* 12827 */           this.password_ = b;
/* 12828 */           return b;
/*       */         } 
/* 12830 */         return (ByteString)ref;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setPassword(String value) {
/* 12840 */         if (value == null) {
/* 12841 */           throw new NullPointerException();
/*       */         }
/*       */         
/* 12844 */         this.password_ = value;
/* 12845 */         onChanged();
/* 12846 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearPassword() {
/* 12854 */         this.password_ = DolphinMessages.ConfigSetRequest.getDefaultInstance().getPassword();
/* 12855 */         onChanged();
/* 12856 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setPasswordBytes(ByteString value) {
/* 12865 */         if (value == null) {
/* 12866 */           throw new NullPointerException();
/*       */         }
/* 12868 */         DolphinMessages.ConfigSetRequest.checkByteStringIsUtf8(value);
/*       */         
/* 12870 */         this.password_ = value;
/* 12871 */         onChanged();
/* 12872 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasConfiguration() {
/* 12883 */         return (this.configurationBuilder_ != null || this.configuration_ != null);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.Config getConfiguration() {
/* 12890 */         if (this.configurationBuilder_ == null) {
/* 12891 */           return (this.configuration_ == null) ? DolphinConfig.Config.getDefaultInstance() : this.configuration_;
/*       */         }
/* 12893 */         return (DolphinConfig.Config)this.configurationBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setConfiguration(DolphinConfig.Config value) {
/* 12900 */         if (this.configurationBuilder_ == null) {
/* 12901 */           if (value == null) {
/* 12902 */             throw new NullPointerException();
/*       */           }
/* 12904 */           this.configuration_ = value;
/* 12905 */           onChanged();
/*       */         } else {
/* 12907 */           this.configurationBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         
/* 12910 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setConfiguration(DolphinConfig.Config.Builder builderForValue) {
/* 12917 */         if (this.configurationBuilder_ == null) {
/* 12918 */           this.configuration_ = builderForValue.build();
/* 12919 */           onChanged();
/*       */         } else {
/* 12921 */           this.configurationBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         
/* 12924 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeConfiguration(DolphinConfig.Config value) {
/* 12930 */         if (this.configurationBuilder_ == null) {
/* 12931 */           if (this.configuration_ != null) {
/* 12932 */             this
/* 12933 */               .configuration_ = DolphinConfig.Config.newBuilder(this.configuration_).mergeFrom(value).buildPartial();
/*       */           } else {
/* 12935 */             this.configuration_ = value;
/*       */           } 
/* 12937 */           onChanged();
/*       */         } else {
/* 12939 */           this.configurationBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         
/* 12942 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearConfiguration() {
/* 12948 */         if (this.configurationBuilder_ == null) {
/* 12949 */           this.configuration_ = null;
/* 12950 */           onChanged();
/*       */         } else {
/* 12952 */           this.configuration_ = null;
/* 12953 */           this.configurationBuilder_ = null;
/*       */         } 
/*       */         
/* 12956 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.Config.Builder getConfigurationBuilder() {
/* 12963 */         onChanged();
/* 12964 */         return (DolphinConfig.Config.Builder)getConfigurationFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.ConfigOrBuilder getConfigurationOrBuilder() {
/* 12970 */         if (this.configurationBuilder_ != null) {
/* 12971 */           return (DolphinConfig.ConfigOrBuilder)this.configurationBuilder_.getMessageOrBuilder();
/*       */         }
/* 12973 */         return (this.configuration_ == null) ? 
/* 12974 */           (DolphinConfig.ConfigOrBuilder)DolphinConfig.Config.getDefaultInstance() : (DolphinConfig.ConfigOrBuilder)this.configuration_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.Config, DolphinConfig.Config.Builder, DolphinConfig.ConfigOrBuilder> getConfigurationFieldBuilder() {
/* 12983 */         if (this.configurationBuilder_ == null) {
/* 12984 */           this
/*       */ 
/*       */ 
/*       */             
/* 12988 */             .configurationBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getConfiguration(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/* 12989 */           this.configuration_ = null;
/*       */         } 
/* 12991 */         return this.configurationBuilder_;
/*       */       }
/*       */ 
/*       */       
/*       */       public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
/* 12996 */         return (Builder)super.setUnknownFields(unknownFields);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
/* 13002 */         return (Builder)super.mergeUnknownFields(unknownFields);
/*       */       }
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 13012 */     private static final ConfigSetRequest DEFAULT_INSTANCE = new ConfigSetRequest();
/*       */ 
/*       */     
/*       */     public static ConfigSetRequest getDefaultInstance() {
/* 13016 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */ 
/*       */     
/* 13020 */     private static final Parser<ConfigSetRequest> PARSER = (Parser<ConfigSetRequest>)new AbstractParser<ConfigSetRequest>()
/*       */       {
/*       */ 
/*       */         
/*       */         public DolphinMessages.ConfigSetRequest parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException
/*       */         {
/* 13026 */           return new DolphinMessages.ConfigSetRequest(input, extensionRegistry);
/*       */         }
/*       */       };
/*       */     
/*       */     public static Parser<ConfigSetRequest> parser() {
/* 13031 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public Parser<ConfigSetRequest> getParserForType() {
/* 13036 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public ConfigSetRequest getDefaultInstanceForType() {
/* 13041 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */   }
/*       */ 
/*       */   
/*       */   public static interface ConfigSetResponseOrBuilder
/*       */     extends MessageOrBuilder
/*       */   {
/*       */     int getResponseValue();
/*       */ 
/*       */     
/*       */     DolphinMessages.ConfigResponseCode getResponse();
/*       */   }
/*       */ 
/*       */   
/*       */   public static final class ConfigSetResponse
/*       */     extends GeneratedMessageV3
/*       */     implements ConfigSetResponseOrBuilder
/*       */   {
/*       */     private static final long serialVersionUID = 0L;
/*       */     
/*       */     public static final int RESPONSE_FIELD_NUMBER = 1;
/*       */     
/*       */     private int response_;
/*       */     
/*       */     private byte memoizedIsInitialized;
/*       */ 
/*       */     
/*       */     private ConfigSetResponse(GeneratedMessageV3.Builder<?> builder)
/*       */     {
/* 13071 */       super(builder);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/* 13164 */       this.memoizedIsInitialized = -1; } private ConfigSetResponse() { this.memoizedIsInitialized = -1; this.response_ = 0; } protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) { return new ConfigSetResponse(); } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private ConfigSetResponse(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this(); if (extensionRegistry == null) throw new NullPointerException();  UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { int rawValue, tag = input.readTag(); switch (tag) { case 0: done = true; continue;case 8: rawValue = input.readEnum(); this.response_ = rawValue; continue; }  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this); } finally { this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_ConfigSetResponse_descriptor; } protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() { return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_ConfigSetResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(ConfigSetResponse.class, Builder.class); }
/*       */     public int getResponseValue() { return this.response_; }
/*       */     public DolphinMessages.ConfigResponseCode getResponse() { DolphinMessages.ConfigResponseCode result = DolphinMessages.ConfigResponseCode.valueOf(this.response_); return (result == null) ? DolphinMessages.ConfigResponseCode.UNRECOGNIZED : result; }
/* 13167 */     public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized;
/* 13168 */       if (isInitialized == 1) return true; 
/* 13169 */       if (isInitialized == 0) return false;
/*       */       
/* 13171 */       this.memoizedIsInitialized = 1;
/* 13172 */       return true; }
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/* 13178 */       if (this.response_ != DolphinMessages.ConfigResponseCode.OK.getNumber()) {
/* 13179 */         output.writeEnum(1, this.response_);
/*       */       }
/* 13181 */       this.unknownFields.writeTo(output);
/*       */     }
/*       */ 
/*       */     
/*       */     public int getSerializedSize() {
/* 13186 */       int size = this.memoizedSize;
/* 13187 */       if (size != -1) return size;
/*       */       
/* 13189 */       size = 0;
/* 13190 */       if (this.response_ != DolphinMessages.ConfigResponseCode.OK.getNumber()) {
/* 13191 */         size += 
/* 13192 */           CodedOutputStream.computeEnumSize(1, this.response_);
/*       */       }
/* 13194 */       size += this.unknownFields.getSerializedSize();
/* 13195 */       this.memoizedSize = size;
/* 13196 */       return size;
/*       */     }
/*       */ 
/*       */     
/*       */     public boolean equals(Object obj) {
/* 13201 */       if (obj == this) {
/* 13202 */         return true;
/*       */       }
/* 13204 */       if (!(obj instanceof ConfigSetResponse)) {
/* 13205 */         return super.equals(obj);
/*       */       }
/* 13207 */       ConfigSetResponse other = (ConfigSetResponse)obj;
/*       */       
/* 13209 */       if (this.response_ != other.response_) return false; 
/* 13210 */       if (!this.unknownFields.equals(other.unknownFields)) return false; 
/* 13211 */       return true;
/*       */     }
/*       */ 
/*       */     
/*       */     public int hashCode() {
/* 13216 */       if (this.memoizedHashCode != 0) {
/* 13217 */         return this.memoizedHashCode;
/*       */       }
/* 13219 */       int hash = 41;
/* 13220 */       hash = 19 * hash + getDescriptor().hashCode();
/* 13221 */       hash = 37 * hash + 1;
/* 13222 */       hash = 53 * hash + this.response_;
/* 13223 */       hash = 29 * hash + this.unknownFields.hashCode();
/* 13224 */       this.memoizedHashCode = hash;
/* 13225 */       return hash;
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static ConfigSetResponse parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
/* 13231 */       return (ConfigSetResponse)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static ConfigSetResponse parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 13237 */       return (ConfigSetResponse)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static ConfigSetResponse parseFrom(ByteString data) throws InvalidProtocolBufferException {
/* 13242 */       return (ConfigSetResponse)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static ConfigSetResponse parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 13248 */       return (ConfigSetResponse)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static ConfigSetResponse parseFrom(byte[] data) throws InvalidProtocolBufferException {
/* 13252 */       return (ConfigSetResponse)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static ConfigSetResponse parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 13258 */       return (ConfigSetResponse)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static ConfigSetResponse parseFrom(InputStream input) throws IOException {
/* 13262 */       return 
/* 13263 */         (ConfigSetResponse)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static ConfigSetResponse parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 13269 */       return 
/* 13270 */         (ConfigSetResponse)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static ConfigSetResponse parseDelimitedFrom(InputStream input) throws IOException {
/* 13274 */       return 
/* 13275 */         (ConfigSetResponse)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static ConfigSetResponse parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 13281 */       return 
/* 13282 */         (ConfigSetResponse)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static ConfigSetResponse parseFrom(CodedInputStream input) throws IOException {
/* 13287 */       return 
/* 13288 */         (ConfigSetResponse)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static ConfigSetResponse parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 13294 */       return 
/* 13295 */         (ConfigSetResponse)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public Builder newBuilderForType() {
/* 13299 */       return newBuilder();
/*       */     } public static Builder newBuilder() {
/* 13301 */       return DEFAULT_INSTANCE.toBuilder();
/*       */     }
/*       */     public static Builder newBuilder(ConfigSetResponse prototype) {
/* 13304 */       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
/*       */     }
/*       */     
/*       */     public Builder toBuilder() {
/* 13308 */       return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder())
/* 13309 */         .mergeFrom(this);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
/* 13315 */       Builder builder = new Builder(parent);
/* 13316 */       return builder;
/*       */     }
/*       */ 
/*       */     
/*       */     public static final class Builder
/*       */       extends GeneratedMessageV3.Builder<Builder>
/*       */       implements DolphinMessages.ConfigSetResponseOrBuilder
/*       */     {
/*       */       private int response_;
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/* 13327 */         return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_ConfigSetResponse_descriptor;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
/* 13333 */         return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_ConfigSetResponse_fieldAccessorTable
/* 13334 */           .ensureFieldAccessorsInitialized(DolphinMessages.ConfigSetResponse.class, Builder.class);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private Builder()
/*       */       {
/* 13465 */         this.response_ = 0; maybeForceBuilderInitialization(); } private Builder(GeneratedMessageV3.BuilderParent parent) { super(parent); this.response_ = 0; maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (DolphinMessages.ConfigSetResponse.alwaysUseFieldBuilders); } public Builder clear() { super.clear(); this.response_ = 0; return this; } public Descriptors.Descriptor getDescriptorForType() { return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_ConfigSetResponse_descriptor; } public DolphinMessages.ConfigSetResponse getDefaultInstanceForType() { return DolphinMessages.ConfigSetResponse.getDefaultInstance(); } public DolphinMessages.ConfigSetResponse build() { DolphinMessages.ConfigSetResponse result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public DolphinMessages.ConfigSetResponse buildPartial() { DolphinMessages.ConfigSetResponse result = new DolphinMessages.ConfigSetResponse(this); result.response_ = this.response_; onBuilt(); return result; } public Builder clone() { return (Builder)super.clone(); } public Builder setField(Descriptors.FieldDescriptor field, Object value) { return (Builder)super.setField(field, value); } public Builder clearField(Descriptors.FieldDescriptor field) { return (Builder)super.clearField(field); } public Builder clearOneof(Descriptors.OneofDescriptor oneof) { return (Builder)super.clearOneof(oneof); } public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) { return (Builder)super.setRepeatedField(field, index, value); }
/*       */       public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) { return (Builder)super.addRepeatedField(field, value); }
/*       */       public Builder mergeFrom(Message other) { if (other instanceof DolphinMessages.ConfigSetResponse) return mergeFrom((DolphinMessages.ConfigSetResponse)other);  super.mergeFrom(other); return this; }
/*       */       public Builder mergeFrom(DolphinMessages.ConfigSetResponse other) { if (other == DolphinMessages.ConfigSetResponse.getDefaultInstance()) return this;  if (other.response_ != 0) setResponseValue(other.getResponseValue());  mergeUnknownFields(other.unknownFields); onChanged(); return this; }
/*       */       public final boolean isInitialized() { return true; }
/*       */       public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { DolphinMessages.ConfigSetResponse parsedMessage = null; try { parsedMessage = (DolphinMessages.ConfigSetResponse)DolphinMessages.ConfigSetResponse.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (DolphinMessages.ConfigSetResponse)e.getUnfinishedMessage(); throw e.unwrapIOException(); } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; }
/* 13471 */       public int getResponseValue() { return this.response_; }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setResponseValue(int value) {
/* 13480 */         this.response_ = value;
/* 13481 */         onChanged();
/* 13482 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinMessages.ConfigResponseCode getResponse() {
/* 13491 */         DolphinMessages.ConfigResponseCode result = DolphinMessages.ConfigResponseCode.valueOf(this.response_);
/* 13492 */         return (result == null) ? DolphinMessages.ConfigResponseCode.UNRECOGNIZED : result;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setResponse(DolphinMessages.ConfigResponseCode value) {
/* 13500 */         if (value == null) {
/* 13501 */           throw new NullPointerException();
/*       */         }
/*       */         
/* 13504 */         this.response_ = value.getNumber();
/* 13505 */         onChanged();
/* 13506 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearResponse() {
/* 13514 */         this.response_ = 0;
/* 13515 */         onChanged();
/* 13516 */         return this;
/*       */       }
/*       */ 
/*       */       
/*       */       public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
/* 13521 */         return (Builder)super.setUnknownFields(unknownFields);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
/* 13527 */         return (Builder)super.mergeUnknownFields(unknownFields);
/*       */       }
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 13537 */     private static final ConfigSetResponse DEFAULT_INSTANCE = new ConfigSetResponse();
/*       */ 
/*       */     
/*       */     public static ConfigSetResponse getDefaultInstance() {
/* 13541 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */ 
/*       */     
/* 13545 */     private static final Parser<ConfigSetResponse> PARSER = (Parser<ConfigSetResponse>)new AbstractParser<ConfigSetResponse>()
/*       */       {
/*       */ 
/*       */         
/*       */         public DolphinMessages.ConfigSetResponse parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException
/*       */         {
/* 13551 */           return new DolphinMessages.ConfigSetResponse(input, extensionRegistry);
/*       */         }
/*       */       };
/*       */     
/*       */     public static Parser<ConfigSetResponse> parser() {
/* 13556 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public Parser<ConfigSetResponse> getParserForType() {
/* 13561 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public ConfigSetResponse getDefaultInstanceForType() {
/* 13566 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */   }
/*       */ 
/*       */ 
/*       */   
/*       */   public static interface ConfigGetRequestOrBuilder
/*       */     extends MessageOrBuilder
/*       */   {
/*       */     String getPassword();
/*       */ 
/*       */     
/*       */     ByteString getPasswordBytes();
/*       */   }
/*       */ 
/*       */   
/*       */   public static final class ConfigGetRequest
/*       */     extends GeneratedMessageV3
/*       */     implements ConfigGetRequestOrBuilder
/*       */   {
/*       */     private static final long serialVersionUID = 0L;
/*       */     
/*       */     public static final int PASSWORD_FIELD_NUMBER = 1;
/*       */     
/*       */     private volatile Object password_;
/*       */     
/*       */     private byte memoizedIsInitialized;
/*       */ 
/*       */     
/*       */     private ConfigGetRequest(GeneratedMessageV3.Builder<?> builder)
/*       */     {
/* 13597 */       super(builder);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/* 13709 */       this.memoizedIsInitialized = -1; } private ConfigGetRequest() { this.memoizedIsInitialized = -1; this.password_ = ""; } protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) { return new ConfigGetRequest(); } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private ConfigGetRequest(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this(); if (extensionRegistry == null) throw new NullPointerException();  UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { String s; int tag = input.readTag(); switch (tag) { case 0: done = true; continue;case 10: s = input.readStringRequireUtf8(); this.password_ = s; continue; }  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this); } finally { this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_ConfigGetRequest_descriptor; } protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() { return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_ConfigGetRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(ConfigGetRequest.class, Builder.class); }
/*       */     public String getPassword() { Object ref = this.password_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.password_ = s; return s; }
/*       */     public ByteString getPasswordBytes() { Object ref = this.password_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.password_ = b; return b; }  return (ByteString)ref; }
/* 13712 */     public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized;
/* 13713 */       if (isInitialized == 1) return true; 
/* 13714 */       if (isInitialized == 0) return false;
/*       */       
/* 13716 */       this.memoizedIsInitialized = 1;
/* 13717 */       return true; }
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/* 13723 */       if (!getPasswordBytes().isEmpty()) {
/* 13724 */         GeneratedMessageV3.writeString(output, 1, this.password_);
/*       */       }
/* 13726 */       this.unknownFields.writeTo(output);
/*       */     }
/*       */ 
/*       */     
/*       */     public int getSerializedSize() {
/* 13731 */       int size = this.memoizedSize;
/* 13732 */       if (size != -1) return size;
/*       */       
/* 13734 */       size = 0;
/* 13735 */       if (!getPasswordBytes().isEmpty()) {
/* 13736 */         size += GeneratedMessageV3.computeStringSize(1, this.password_);
/*       */       }
/* 13738 */       size += this.unknownFields.getSerializedSize();
/* 13739 */       this.memoizedSize = size;
/* 13740 */       return size;
/*       */     }
/*       */ 
/*       */     
/*       */     public boolean equals(Object obj) {
/* 13745 */       if (obj == this) {
/* 13746 */         return true;
/*       */       }
/* 13748 */       if (!(obj instanceof ConfigGetRequest)) {
/* 13749 */         return super.equals(obj);
/*       */       }
/* 13751 */       ConfigGetRequest other = (ConfigGetRequest)obj;
/*       */ 
/*       */       
/* 13754 */       if (!getPassword().equals(other.getPassword())) return false; 
/* 13755 */       if (!this.unknownFields.equals(other.unknownFields)) return false; 
/* 13756 */       return true;
/*       */     }
/*       */ 
/*       */     
/*       */     public int hashCode() {
/* 13761 */       if (this.memoizedHashCode != 0) {
/* 13762 */         return this.memoizedHashCode;
/*       */       }
/* 13764 */       int hash = 41;
/* 13765 */       hash = 19 * hash + getDescriptor().hashCode();
/* 13766 */       hash = 37 * hash + 1;
/* 13767 */       hash = 53 * hash + getPassword().hashCode();
/* 13768 */       hash = 29 * hash + this.unknownFields.hashCode();
/* 13769 */       this.memoizedHashCode = hash;
/* 13770 */       return hash;
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static ConfigGetRequest parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
/* 13776 */       return (ConfigGetRequest)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static ConfigGetRequest parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 13782 */       return (ConfigGetRequest)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static ConfigGetRequest parseFrom(ByteString data) throws InvalidProtocolBufferException {
/* 13787 */       return (ConfigGetRequest)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static ConfigGetRequest parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 13793 */       return (ConfigGetRequest)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static ConfigGetRequest parseFrom(byte[] data) throws InvalidProtocolBufferException {
/* 13797 */       return (ConfigGetRequest)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static ConfigGetRequest parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 13803 */       return (ConfigGetRequest)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static ConfigGetRequest parseFrom(InputStream input) throws IOException {
/* 13807 */       return 
/* 13808 */         (ConfigGetRequest)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static ConfigGetRequest parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 13814 */       return 
/* 13815 */         (ConfigGetRequest)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static ConfigGetRequest parseDelimitedFrom(InputStream input) throws IOException {
/* 13819 */       return 
/* 13820 */         (ConfigGetRequest)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static ConfigGetRequest parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 13826 */       return 
/* 13827 */         (ConfigGetRequest)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static ConfigGetRequest parseFrom(CodedInputStream input) throws IOException {
/* 13832 */       return 
/* 13833 */         (ConfigGetRequest)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static ConfigGetRequest parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 13839 */       return 
/* 13840 */         (ConfigGetRequest)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public Builder newBuilderForType() {
/* 13844 */       return newBuilder();
/*       */     } public static Builder newBuilder() {
/* 13846 */       return DEFAULT_INSTANCE.toBuilder();
/*       */     }
/*       */     public static Builder newBuilder(ConfigGetRequest prototype) {
/* 13849 */       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
/*       */     }
/*       */     
/*       */     public Builder toBuilder() {
/* 13853 */       return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder())
/* 13854 */         .mergeFrom(this);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
/* 13860 */       Builder builder = new Builder(parent);
/* 13861 */       return builder;
/*       */     }
/*       */ 
/*       */     
/*       */     public static final class Builder
/*       */       extends GeneratedMessageV3.Builder<Builder>
/*       */       implements DolphinMessages.ConfigGetRequestOrBuilder
/*       */     {
/*       */       private Object password_;
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/* 13872 */         return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_ConfigGetRequest_descriptor;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
/* 13878 */         return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_ConfigGetRequest_fieldAccessorTable
/* 13879 */           .ensureFieldAccessorsInitialized(DolphinMessages.ConfigGetRequest.class, Builder.class);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private Builder()
/*       */       {
/* 14011 */         this.password_ = ""; maybeForceBuilderInitialization(); } private Builder(GeneratedMessageV3.BuilderParent parent) { super(parent); this.password_ = ""; maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (DolphinMessages.ConfigGetRequest.alwaysUseFieldBuilders); } public Builder clear() { super.clear(); this.password_ = ""; return this; } public Descriptors.Descriptor getDescriptorForType() { return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_ConfigGetRequest_descriptor; } public DolphinMessages.ConfigGetRequest getDefaultInstanceForType() { return DolphinMessages.ConfigGetRequest.getDefaultInstance(); } public DolphinMessages.ConfigGetRequest build() { DolphinMessages.ConfigGetRequest result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public DolphinMessages.ConfigGetRequest buildPartial() { DolphinMessages.ConfigGetRequest result = new DolphinMessages.ConfigGetRequest(this); result.password_ = this.password_; onBuilt(); return result; } public Builder clone() { return (Builder)super.clone(); } public Builder setField(Descriptors.FieldDescriptor field, Object value) { return (Builder)super.setField(field, value); } public Builder clearField(Descriptors.FieldDescriptor field) { return (Builder)super.clearField(field); } public Builder clearOneof(Descriptors.OneofDescriptor oneof) { return (Builder)super.clearOneof(oneof); } public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) { return (Builder)super.setRepeatedField(field, index, value); }
/*       */       public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) { return (Builder)super.addRepeatedField(field, value); }
/*       */       public Builder mergeFrom(Message other) { if (other instanceof DolphinMessages.ConfigGetRequest) return mergeFrom((DolphinMessages.ConfigGetRequest)other);  super.mergeFrom(other); return this; }
/*       */       public Builder mergeFrom(DolphinMessages.ConfigGetRequest other) { if (other == DolphinMessages.ConfigGetRequest.getDefaultInstance()) return this;  if (!other.getPassword().isEmpty()) { this.password_ = other.password_; onChanged(); }  mergeUnknownFields(other.unknownFields); onChanged(); return this; }
/*       */       public final boolean isInitialized() { return true; }
/*       */       public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { DolphinMessages.ConfigGetRequest parsedMessage = null; try { parsedMessage = (DolphinMessages.ConfigGetRequest)DolphinMessages.ConfigGetRequest.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (DolphinMessages.ConfigGetRequest)e.getUnfinishedMessage(); throw e.unwrapIOException(); } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; }
/* 14017 */       public String getPassword() { Object ref = this.password_;
/* 14018 */         if (!(ref instanceof String)) {
/* 14019 */           ByteString bs = (ByteString)ref;
/*       */           
/* 14021 */           String s = bs.toStringUtf8();
/* 14022 */           this.password_ = s;
/* 14023 */           return s;
/*       */         } 
/* 14025 */         return (String)ref; }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public ByteString getPasswordBytes() {
/* 14034 */         Object ref = this.password_;
/* 14035 */         if (ref instanceof String) {
/*       */           
/* 14037 */           ByteString b = ByteString.copyFromUtf8((String)ref);
/*       */           
/* 14039 */           this.password_ = b;
/* 14040 */           return b;
/*       */         } 
/* 14042 */         return (ByteString)ref;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setPassword(String value) {
/* 14052 */         if (value == null) {
/* 14053 */           throw new NullPointerException();
/*       */         }
/*       */         
/* 14056 */         this.password_ = value;
/* 14057 */         onChanged();
/* 14058 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearPassword() {
/* 14066 */         this.password_ = DolphinMessages.ConfigGetRequest.getDefaultInstance().getPassword();
/* 14067 */         onChanged();
/* 14068 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setPasswordBytes(ByteString value) {
/* 14077 */         if (value == null) {
/* 14078 */           throw new NullPointerException();
/*       */         }
/* 14080 */         DolphinMessages.ConfigGetRequest.checkByteStringIsUtf8(value);
/*       */         
/* 14082 */         this.password_ = value;
/* 14083 */         onChanged();
/* 14084 */         return this;
/*       */       }
/*       */ 
/*       */       
/*       */       public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
/* 14089 */         return (Builder)super.setUnknownFields(unknownFields);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
/* 14095 */         return (Builder)super.mergeUnknownFields(unknownFields);
/*       */       }
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 14105 */     private static final ConfigGetRequest DEFAULT_INSTANCE = new ConfigGetRequest();
/*       */ 
/*       */     
/*       */     public static ConfigGetRequest getDefaultInstance() {
/* 14109 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */ 
/*       */     
/* 14113 */     private static final Parser<ConfigGetRequest> PARSER = (Parser<ConfigGetRequest>)new AbstractParser<ConfigGetRequest>()
/*       */       {
/*       */ 
/*       */         
/*       */         public DolphinMessages.ConfigGetRequest parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException
/*       */         {
/* 14119 */           return new DolphinMessages.ConfigGetRequest(input, extensionRegistry);
/*       */         }
/*       */       };
/*       */     
/*       */     public static Parser<ConfigGetRequest> parser() {
/* 14124 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public Parser<ConfigGetRequest> getParserForType() {
/* 14129 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public ConfigGetRequest getDefaultInstanceForType() {
/* 14134 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */   }
/*       */ 
/*       */ 
/*       */   
/*       */   public static interface ConfigGetResponseOrBuilder
/*       */     extends MessageOrBuilder
/*       */   {
/*       */     int getResponseValue();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinMessages.ConfigResponseCode getResponse();
/*       */ 
/*       */     
/*       */     boolean hasData();
/*       */ 
/*       */     
/*       */     DolphinConfig.Config getData();
/*       */ 
/*       */     
/*       */     DolphinConfig.ConfigOrBuilder getDataOrBuilder();
/*       */   }
/*       */ 
/*       */   
/*       */   public static final class ConfigGetResponse
/*       */     extends GeneratedMessageV3
/*       */     implements ConfigGetResponseOrBuilder
/*       */   {
/*       */     private static final long serialVersionUID = 0L;
/*       */     
/*       */     public static final int RESPONSE_FIELD_NUMBER = 1;
/*       */     
/*       */     private int response_;
/*       */     
/*       */     public static final int DATA_FIELD_NUMBER = 2;
/*       */     
/*       */     private DolphinConfig.Config data_;
/*       */     
/*       */     private byte memoizedIsInitialized;
/*       */ 
/*       */     
/*       */     private ConfigGetResponse(GeneratedMessageV3.Builder<?> builder)
/*       */     {
/* 14179 */       super(builder);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/* 14311 */       this.memoizedIsInitialized = -1; } private ConfigGetResponse() { this.memoizedIsInitialized = -1; this.response_ = 0; } protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) { return new ConfigGetResponse(); } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private ConfigGetResponse(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this(); if (extensionRegistry == null) throw new NullPointerException();  UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { int rawValue; DolphinConfig.Config.Builder subBuilder; int tag = input.readTag(); switch (tag) { case 0: done = true; continue;case 8: rawValue = input.readEnum(); this.response_ = rawValue; continue;case 18: subBuilder = null; if (this.data_ != null) subBuilder = this.data_.toBuilder();  this.data_ = (DolphinConfig.Config)input.readMessage(DolphinConfig.Config.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.data_); this.data_ = subBuilder.buildPartial(); }  continue; }  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this); } finally { this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_ConfigGetResponse_descriptor; } protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() { return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_ConfigGetResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(ConfigGetResponse.class, Builder.class); } public int getResponseValue() { return this.response_; } public DolphinMessages.ConfigResponseCode getResponse() { DolphinMessages.ConfigResponseCode result = DolphinMessages.ConfigResponseCode.valueOf(this.response_); return (result == null) ? DolphinMessages.ConfigResponseCode.UNRECOGNIZED : result; } public boolean hasData() { return (this.data_ != null); }
/*       */     public DolphinConfig.Config getData() { return (this.data_ == null) ? DolphinConfig.Config.getDefaultInstance() : this.data_; }
/*       */     public DolphinConfig.ConfigOrBuilder getDataOrBuilder() { return (DolphinConfig.ConfigOrBuilder)getData(); }
/* 14314 */     public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized;
/* 14315 */       if (isInitialized == 1) return true; 
/* 14316 */       if (isInitialized == 0) return false;
/*       */       
/* 14318 */       this.memoizedIsInitialized = 1;
/* 14319 */       return true; }
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/* 14325 */       if (this.response_ != DolphinMessages.ConfigResponseCode.OK.getNumber()) {
/* 14326 */         output.writeEnum(1, this.response_);
/*       */       }
/* 14328 */       if (this.data_ != null) {
/* 14329 */         output.writeMessage(2, (MessageLite)getData());
/*       */       }
/* 14331 */       this.unknownFields.writeTo(output);
/*       */     }
/*       */ 
/*       */     
/*       */     public int getSerializedSize() {
/* 14336 */       int size = this.memoizedSize;
/* 14337 */       if (size != -1) return size;
/*       */       
/* 14339 */       size = 0;
/* 14340 */       if (this.response_ != DolphinMessages.ConfigResponseCode.OK.getNumber()) {
/* 14341 */         size += 
/* 14342 */           CodedOutputStream.computeEnumSize(1, this.response_);
/*       */       }
/* 14344 */       if (this.data_ != null) {
/* 14345 */         size += 
/* 14346 */           CodedOutputStream.computeMessageSize(2, (MessageLite)getData());
/*       */       }
/* 14348 */       size += this.unknownFields.getSerializedSize();
/* 14349 */       this.memoizedSize = size;
/* 14350 */       return size;
/*       */     }
/*       */ 
/*       */     
/*       */     public boolean equals(Object obj) {
/* 14355 */       if (obj == this) {
/* 14356 */         return true;
/*       */       }
/* 14358 */       if (!(obj instanceof ConfigGetResponse)) {
/* 14359 */         return super.equals(obj);
/*       */       }
/* 14361 */       ConfigGetResponse other = (ConfigGetResponse)obj;
/*       */       
/* 14363 */       if (this.response_ != other.response_) return false; 
/* 14364 */       if (hasData() != other.hasData()) return false; 
/* 14365 */       if (hasData() && 
/*       */         
/* 14367 */         !getData().equals(other.getData())) return false;
/*       */       
/* 14369 */       if (!this.unknownFields.equals(other.unknownFields)) return false; 
/* 14370 */       return true;
/*       */     }
/*       */ 
/*       */     
/*       */     public int hashCode() {
/* 14375 */       if (this.memoizedHashCode != 0) {
/* 14376 */         return this.memoizedHashCode;
/*       */       }
/* 14378 */       int hash = 41;
/* 14379 */       hash = 19 * hash + getDescriptor().hashCode();
/* 14380 */       hash = 37 * hash + 1;
/* 14381 */       hash = 53 * hash + this.response_;
/* 14382 */       if (hasData()) {
/* 14383 */         hash = 37 * hash + 2;
/* 14384 */         hash = 53 * hash + getData().hashCode();
/*       */       } 
/* 14386 */       hash = 29 * hash + this.unknownFields.hashCode();
/* 14387 */       this.memoizedHashCode = hash;
/* 14388 */       return hash;
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static ConfigGetResponse parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
/* 14394 */       return (ConfigGetResponse)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static ConfigGetResponse parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 14400 */       return (ConfigGetResponse)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static ConfigGetResponse parseFrom(ByteString data) throws InvalidProtocolBufferException {
/* 14405 */       return (ConfigGetResponse)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static ConfigGetResponse parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 14411 */       return (ConfigGetResponse)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static ConfigGetResponse parseFrom(byte[] data) throws InvalidProtocolBufferException {
/* 14415 */       return (ConfigGetResponse)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static ConfigGetResponse parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 14421 */       return (ConfigGetResponse)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static ConfigGetResponse parseFrom(InputStream input) throws IOException {
/* 14425 */       return 
/* 14426 */         (ConfigGetResponse)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static ConfigGetResponse parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 14432 */       return 
/* 14433 */         (ConfigGetResponse)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static ConfigGetResponse parseDelimitedFrom(InputStream input) throws IOException {
/* 14437 */       return 
/* 14438 */         (ConfigGetResponse)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static ConfigGetResponse parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 14444 */       return 
/* 14445 */         (ConfigGetResponse)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static ConfigGetResponse parseFrom(CodedInputStream input) throws IOException {
/* 14450 */       return 
/* 14451 */         (ConfigGetResponse)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static ConfigGetResponse parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 14457 */       return 
/* 14458 */         (ConfigGetResponse)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public Builder newBuilderForType() {
/* 14462 */       return newBuilder();
/*       */     } public static Builder newBuilder() {
/* 14464 */       return DEFAULT_INSTANCE.toBuilder();
/*       */     }
/*       */     public static Builder newBuilder(ConfigGetResponse prototype) {
/* 14467 */       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
/*       */     }
/*       */     
/*       */     public Builder toBuilder() {
/* 14471 */       return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder())
/* 14472 */         .mergeFrom(this);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
/* 14478 */       Builder builder = new Builder(parent);
/* 14479 */       return builder;
/*       */     }
/*       */     
/*       */     public static final class Builder
/*       */       extends GeneratedMessageV3.Builder<Builder>
/*       */       implements DolphinMessages.ConfigGetResponseOrBuilder {
/*       */       private int response_;
/*       */       private DolphinConfig.Config data_;
/*       */       private SingleFieldBuilderV3<DolphinConfig.Config, DolphinConfig.Config.Builder, DolphinConfig.ConfigOrBuilder> dataBuilder_;
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/* 14490 */         return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_ConfigGetResponse_descriptor;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
/* 14496 */         return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_ConfigGetResponse_fieldAccessorTable
/* 14497 */           .ensureFieldAccessorsInitialized(DolphinMessages.ConfigGetResponse.class, Builder.class);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private Builder()
/*       */       {
/* 14642 */         this.response_ = 0; maybeForceBuilderInitialization(); } private Builder(GeneratedMessageV3.BuilderParent parent) { super(parent); this.response_ = 0; maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (DolphinMessages.ConfigGetResponse.alwaysUseFieldBuilders); } public Builder clear() { super.clear(); this.response_ = 0; if (this.dataBuilder_ == null) { this.data_ = null; } else { this.data_ = null; this.dataBuilder_ = null; }  return this; } public Descriptors.Descriptor getDescriptorForType() { return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_ConfigGetResponse_descriptor; } public DolphinMessages.ConfigGetResponse getDefaultInstanceForType() { return DolphinMessages.ConfigGetResponse.getDefaultInstance(); } public DolphinMessages.ConfigGetResponse build() { DolphinMessages.ConfigGetResponse result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public DolphinMessages.ConfigGetResponse buildPartial() { DolphinMessages.ConfigGetResponse result = new DolphinMessages.ConfigGetResponse(this); result.response_ = this.response_; if (this.dataBuilder_ == null) { result.data_ = this.data_; } else { result.data_ = (DolphinConfig.Config)this.dataBuilder_.build(); }  onBuilt(); return result; } public Builder clone() { return (Builder)super.clone(); } public Builder setField(Descriptors.FieldDescriptor field, Object value) { return (Builder)super.setField(field, value); } public Builder clearField(Descriptors.FieldDescriptor field) { return (Builder)super.clearField(field); } public Builder clearOneof(Descriptors.OneofDescriptor oneof) { return (Builder)super.clearOneof(oneof); } public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) { return (Builder)super.setRepeatedField(field, index, value); }
/*       */       public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) { return (Builder)super.addRepeatedField(field, value); }
/*       */       public Builder mergeFrom(Message other) { if (other instanceof DolphinMessages.ConfigGetResponse) return mergeFrom((DolphinMessages.ConfigGetResponse)other);  super.mergeFrom(other); return this; }
/*       */       public Builder mergeFrom(DolphinMessages.ConfigGetResponse other) { if (other == DolphinMessages.ConfigGetResponse.getDefaultInstance()) return this;  if (other.response_ != 0) setResponseValue(other.getResponseValue());  if (other.hasData()) mergeData(other.getData());  mergeUnknownFields(other.unknownFields); onChanged(); return this; }
/*       */       public final boolean isInitialized() { return true; }
/*       */       public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { DolphinMessages.ConfigGetResponse parsedMessage = null; try { parsedMessage = (DolphinMessages.ConfigGetResponse)DolphinMessages.ConfigGetResponse.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (DolphinMessages.ConfigGetResponse)e.getUnfinishedMessage(); throw e.unwrapIOException(); } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; }
/* 14648 */       public int getResponseValue() { return this.response_; }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setResponseValue(int value) {
/* 14657 */         this.response_ = value;
/* 14658 */         onChanged();
/* 14659 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinMessages.ConfigResponseCode getResponse() {
/* 14668 */         DolphinMessages.ConfigResponseCode result = DolphinMessages.ConfigResponseCode.valueOf(this.response_);
/* 14669 */         return (result == null) ? DolphinMessages.ConfigResponseCode.UNRECOGNIZED : result;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setResponse(DolphinMessages.ConfigResponseCode value) {
/* 14677 */         if (value == null) {
/* 14678 */           throw new NullPointerException();
/*       */         }
/*       */         
/* 14681 */         this.response_ = value.getNumber();
/* 14682 */         onChanged();
/* 14683 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearResponse() {
/* 14691 */         this.response_ = 0;
/* 14692 */         onChanged();
/* 14693 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasData() {
/* 14704 */         return (this.dataBuilder_ != null || this.data_ != null);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.Config getData() {
/* 14711 */         if (this.dataBuilder_ == null) {
/* 14712 */           return (this.data_ == null) ? DolphinConfig.Config.getDefaultInstance() : this.data_;
/*       */         }
/* 14714 */         return (DolphinConfig.Config)this.dataBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setData(DolphinConfig.Config value) {
/* 14721 */         if (this.dataBuilder_ == null) {
/* 14722 */           if (value == null) {
/* 14723 */             throw new NullPointerException();
/*       */           }
/* 14725 */           this.data_ = value;
/* 14726 */           onChanged();
/*       */         } else {
/* 14728 */           this.dataBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         
/* 14731 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setData(DolphinConfig.Config.Builder builderForValue) {
/* 14738 */         if (this.dataBuilder_ == null) {
/* 14739 */           this.data_ = builderForValue.build();
/* 14740 */           onChanged();
/*       */         } else {
/* 14742 */           this.dataBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         
/* 14745 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeData(DolphinConfig.Config value) {
/* 14751 */         if (this.dataBuilder_ == null) {
/* 14752 */           if (this.data_ != null) {
/* 14753 */             this
/* 14754 */               .data_ = DolphinConfig.Config.newBuilder(this.data_).mergeFrom(value).buildPartial();
/*       */           } else {
/* 14756 */             this.data_ = value;
/*       */           } 
/* 14758 */           onChanged();
/*       */         } else {
/* 14760 */           this.dataBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         
/* 14763 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearData() {
/* 14769 */         if (this.dataBuilder_ == null) {
/* 14770 */           this.data_ = null;
/* 14771 */           onChanged();
/*       */         } else {
/* 14773 */           this.data_ = null;
/* 14774 */           this.dataBuilder_ = null;
/*       */         } 
/*       */         
/* 14777 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.Config.Builder getDataBuilder() {
/* 14784 */         onChanged();
/* 14785 */         return (DolphinConfig.Config.Builder)getDataFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.ConfigOrBuilder getDataOrBuilder() {
/* 14791 */         if (this.dataBuilder_ != null) {
/* 14792 */           return (DolphinConfig.ConfigOrBuilder)this.dataBuilder_.getMessageOrBuilder();
/*       */         }
/* 14794 */         return (this.data_ == null) ? 
/* 14795 */           (DolphinConfig.ConfigOrBuilder)DolphinConfig.Config.getDefaultInstance() : (DolphinConfig.ConfigOrBuilder)this.data_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.Config, DolphinConfig.Config.Builder, DolphinConfig.ConfigOrBuilder> getDataFieldBuilder() {
/* 14804 */         if (this.dataBuilder_ == null) {
/* 14805 */           this
/*       */ 
/*       */ 
/*       */             
/* 14809 */             .dataBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getData(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/* 14810 */           this.data_ = null;
/*       */         } 
/* 14812 */         return this.dataBuilder_;
/*       */       }
/*       */ 
/*       */       
/*       */       public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
/* 14817 */         return (Builder)super.setUnknownFields(unknownFields);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
/* 14823 */         return (Builder)super.mergeUnknownFields(unknownFields);
/*       */       }
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 14833 */     private static final ConfigGetResponse DEFAULT_INSTANCE = new ConfigGetResponse();
/*       */ 
/*       */     
/*       */     public static ConfigGetResponse getDefaultInstance() {
/* 14837 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */ 
/*       */     
/* 14841 */     private static final Parser<ConfigGetResponse> PARSER = (Parser<ConfigGetResponse>)new AbstractParser<ConfigGetResponse>()
/*       */       {
/*       */ 
/*       */         
/*       */         public DolphinMessages.ConfigGetResponse parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException
/*       */         {
/* 14847 */           return new DolphinMessages.ConfigGetResponse(input, extensionRegistry);
/*       */         }
/*       */       };
/*       */     
/*       */     public static Parser<ConfigGetResponse> parser() {
/* 14852 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public Parser<ConfigGetResponse> getParserForType() {
/* 14857 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public ConfigGetResponse getDefaultInstanceForType() {
/* 14862 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */   }
/*       */ 
/*       */ 
/*       */   
/*       */   public static interface ConfigDiffRequestOrBuilder
/*       */     extends MessageOrBuilder
/*       */   {
/*       */     String getPassword();
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getPasswordBytes();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasConfigDiff();
/*       */ 
/*       */     
/*       */     DolphinConfig.ConfigDiff getConfigDiff();
/*       */ 
/*       */     
/*       */     DolphinConfig.ConfigDiffOrBuilder getConfigDiffOrBuilder();
/*       */   }
/*       */ 
/*       */   
/*       */   public static final class ConfigDiffRequest
/*       */     extends GeneratedMessageV3
/*       */     implements ConfigDiffRequestOrBuilder
/*       */   {
/*       */     private static final long serialVersionUID = 0L;
/*       */     
/*       */     public static final int PASSWORD_FIELD_NUMBER = 1;
/*       */     
/*       */     private volatile Object password_;
/*       */     
/*       */     public static final int CONFIGDIFF_FIELD_NUMBER = 2;
/*       */     
/*       */     private DolphinConfig.ConfigDiff configDiff_;
/*       */     
/*       */     private byte memoizedIsInitialized;
/*       */ 
/*       */     
/*       */     private ConfigDiffRequest(GeneratedMessageV3.Builder<?> builder)
/*       */     {
/* 14908 */       super(builder);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/* 15059 */       this.memoizedIsInitialized = -1; } private ConfigDiffRequest() { this.memoizedIsInitialized = -1; this.password_ = ""; } protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) { return new ConfigDiffRequest(); } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private ConfigDiffRequest(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this(); if (extensionRegistry == null) throw new NullPointerException();  UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { String s; DolphinConfig.ConfigDiff.Builder subBuilder; int tag = input.readTag(); switch (tag) { case 0: done = true; continue;case 10: s = input.readStringRequireUtf8(); this.password_ = s; continue;case 18: subBuilder = null; if (this.configDiff_ != null) subBuilder = this.configDiff_.toBuilder();  this.configDiff_ = (DolphinConfig.ConfigDiff)input.readMessage(DolphinConfig.ConfigDiff.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.configDiff_); this.configDiff_ = subBuilder.buildPartial(); }  continue; }  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this); } finally { this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_ConfigDiffRequest_descriptor; } protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() { return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_ConfigDiffRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(ConfigDiffRequest.class, Builder.class); } public String getPassword() { Object ref = this.password_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.password_ = s; return s; } public ByteString getPasswordBytes() { Object ref = this.password_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.password_ = b; return b; }  return (ByteString)ref; } public boolean hasConfigDiff() { return (this.configDiff_ != null); }
/*       */     public DolphinConfig.ConfigDiff getConfigDiff() { return (this.configDiff_ == null) ? DolphinConfig.ConfigDiff.getDefaultInstance() : this.configDiff_; }
/*       */     public DolphinConfig.ConfigDiffOrBuilder getConfigDiffOrBuilder() { return (DolphinConfig.ConfigDiffOrBuilder)getConfigDiff(); }
/* 15062 */     public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized;
/* 15063 */       if (isInitialized == 1) return true; 
/* 15064 */       if (isInitialized == 0) return false;
/*       */       
/* 15066 */       this.memoizedIsInitialized = 1;
/* 15067 */       return true; }
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/* 15073 */       if (!getPasswordBytes().isEmpty()) {
/* 15074 */         GeneratedMessageV3.writeString(output, 1, this.password_);
/*       */       }
/* 15076 */       if (this.configDiff_ != null) {
/* 15077 */         output.writeMessage(2, (MessageLite)getConfigDiff());
/*       */       }
/* 15079 */       this.unknownFields.writeTo(output);
/*       */     }
/*       */ 
/*       */     
/*       */     public int getSerializedSize() {
/* 15084 */       int size = this.memoizedSize;
/* 15085 */       if (size != -1) return size;
/*       */       
/* 15087 */       size = 0;
/* 15088 */       if (!getPasswordBytes().isEmpty()) {
/* 15089 */         size += GeneratedMessageV3.computeStringSize(1, this.password_);
/*       */       }
/* 15091 */       if (this.configDiff_ != null) {
/* 15092 */         size += 
/* 15093 */           CodedOutputStream.computeMessageSize(2, (MessageLite)getConfigDiff());
/*       */       }
/* 15095 */       size += this.unknownFields.getSerializedSize();
/* 15096 */       this.memoizedSize = size;
/* 15097 */       return size;
/*       */     }
/*       */ 
/*       */     
/*       */     public boolean equals(Object obj) {
/* 15102 */       if (obj == this) {
/* 15103 */         return true;
/*       */       }
/* 15105 */       if (!(obj instanceof ConfigDiffRequest)) {
/* 15106 */         return super.equals(obj);
/*       */       }
/* 15108 */       ConfigDiffRequest other = (ConfigDiffRequest)obj;
/*       */ 
/*       */       
/* 15111 */       if (!getPassword().equals(other.getPassword())) return false; 
/* 15112 */       if (hasConfigDiff() != other.hasConfigDiff()) return false; 
/* 15113 */       if (hasConfigDiff() && 
/*       */         
/* 15115 */         !getConfigDiff().equals(other.getConfigDiff())) return false;
/*       */       
/* 15117 */       if (!this.unknownFields.equals(other.unknownFields)) return false; 
/* 15118 */       return true;
/*       */     }
/*       */ 
/*       */     
/*       */     public int hashCode() {
/* 15123 */       if (this.memoizedHashCode != 0) {
/* 15124 */         return this.memoizedHashCode;
/*       */       }
/* 15126 */       int hash = 41;
/* 15127 */       hash = 19 * hash + getDescriptor().hashCode();
/* 15128 */       hash = 37 * hash + 1;
/* 15129 */       hash = 53 * hash + getPassword().hashCode();
/* 15130 */       if (hasConfigDiff()) {
/* 15131 */         hash = 37 * hash + 2;
/* 15132 */         hash = 53 * hash + getConfigDiff().hashCode();
/*       */       } 
/* 15134 */       hash = 29 * hash + this.unknownFields.hashCode();
/* 15135 */       this.memoizedHashCode = hash;
/* 15136 */       return hash;
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static ConfigDiffRequest parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
/* 15142 */       return (ConfigDiffRequest)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static ConfigDiffRequest parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 15148 */       return (ConfigDiffRequest)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static ConfigDiffRequest parseFrom(ByteString data) throws InvalidProtocolBufferException {
/* 15153 */       return (ConfigDiffRequest)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static ConfigDiffRequest parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 15159 */       return (ConfigDiffRequest)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static ConfigDiffRequest parseFrom(byte[] data) throws InvalidProtocolBufferException {
/* 15163 */       return (ConfigDiffRequest)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static ConfigDiffRequest parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 15169 */       return (ConfigDiffRequest)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static ConfigDiffRequest parseFrom(InputStream input) throws IOException {
/* 15173 */       return 
/* 15174 */         (ConfigDiffRequest)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static ConfigDiffRequest parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 15180 */       return 
/* 15181 */         (ConfigDiffRequest)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static ConfigDiffRequest parseDelimitedFrom(InputStream input) throws IOException {
/* 15185 */       return 
/* 15186 */         (ConfigDiffRequest)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static ConfigDiffRequest parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 15192 */       return 
/* 15193 */         (ConfigDiffRequest)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static ConfigDiffRequest parseFrom(CodedInputStream input) throws IOException {
/* 15198 */       return 
/* 15199 */         (ConfigDiffRequest)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static ConfigDiffRequest parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 15205 */       return 
/* 15206 */         (ConfigDiffRequest)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public Builder newBuilderForType() {
/* 15210 */       return newBuilder();
/*       */     } public static Builder newBuilder() {
/* 15212 */       return DEFAULT_INSTANCE.toBuilder();
/*       */     }
/*       */     public static Builder newBuilder(ConfigDiffRequest prototype) {
/* 15215 */       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
/*       */     }
/*       */     
/*       */     public Builder toBuilder() {
/* 15219 */       return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder())
/* 15220 */         .mergeFrom(this);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
/* 15226 */       Builder builder = new Builder(parent);
/* 15227 */       return builder;
/*       */     }
/*       */     
/*       */     public static final class Builder
/*       */       extends GeneratedMessageV3.Builder<Builder>
/*       */       implements DolphinMessages.ConfigDiffRequestOrBuilder {
/*       */       private Object password_;
/*       */       private DolphinConfig.ConfigDiff configDiff_;
/*       */       private SingleFieldBuilderV3<DolphinConfig.ConfigDiff, DolphinConfig.ConfigDiff.Builder, DolphinConfig.ConfigDiffOrBuilder> configDiffBuilder_;
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/* 15238 */         return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_ConfigDiffRequest_descriptor;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
/* 15244 */         return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_ConfigDiffRequest_fieldAccessorTable
/* 15245 */           .ensureFieldAccessorsInitialized(DolphinMessages.ConfigDiffRequest.class, Builder.class);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private Builder()
/*       */       {
/* 15391 */         this.password_ = ""; maybeForceBuilderInitialization(); } private Builder(GeneratedMessageV3.BuilderParent parent) { super(parent); this.password_ = ""; maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (DolphinMessages.ConfigDiffRequest.alwaysUseFieldBuilders); } public Builder clear() { super.clear(); this.password_ = ""; if (this.configDiffBuilder_ == null) { this.configDiff_ = null; } else { this.configDiff_ = null; this.configDiffBuilder_ = null; }  return this; } public Descriptors.Descriptor getDescriptorForType() { return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_ConfigDiffRequest_descriptor; } public DolphinMessages.ConfigDiffRequest getDefaultInstanceForType() { return DolphinMessages.ConfigDiffRequest.getDefaultInstance(); } public DolphinMessages.ConfigDiffRequest build() { DolphinMessages.ConfigDiffRequest result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public DolphinMessages.ConfigDiffRequest buildPartial() { DolphinMessages.ConfigDiffRequest result = new DolphinMessages.ConfigDiffRequest(this); result.password_ = this.password_; if (this.configDiffBuilder_ == null) { result.configDiff_ = this.configDiff_; } else { result.configDiff_ = (DolphinConfig.ConfigDiff)this.configDiffBuilder_.build(); }  onBuilt(); return result; } public Builder clone() { return (Builder)super.clone(); } public Builder setField(Descriptors.FieldDescriptor field, Object value) { return (Builder)super.setField(field, value); } public Builder clearField(Descriptors.FieldDescriptor field) { return (Builder)super.clearField(field); } public Builder clearOneof(Descriptors.OneofDescriptor oneof) { return (Builder)super.clearOneof(oneof); } public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) { return (Builder)super.setRepeatedField(field, index, value); }
/*       */       public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) { return (Builder)super.addRepeatedField(field, value); }
/*       */       public Builder mergeFrom(Message other) { if (other instanceof DolphinMessages.ConfigDiffRequest) return mergeFrom((DolphinMessages.ConfigDiffRequest)other);  super.mergeFrom(other); return this; }
/*       */       public Builder mergeFrom(DolphinMessages.ConfigDiffRequest other) { if (other == DolphinMessages.ConfigDiffRequest.getDefaultInstance()) return this;  if (!other.getPassword().isEmpty()) { this.password_ = other.password_; onChanged(); }  if (other.hasConfigDiff()) mergeConfigDiff(other.getConfigDiff());  mergeUnknownFields(other.unknownFields); onChanged(); return this; }
/*       */       public final boolean isInitialized() { return true; }
/*       */       public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { DolphinMessages.ConfigDiffRequest parsedMessage = null; try { parsedMessage = (DolphinMessages.ConfigDiffRequest)DolphinMessages.ConfigDiffRequest.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (DolphinMessages.ConfigDiffRequest)e.getUnfinishedMessage(); throw e.unwrapIOException(); } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; }
/* 15397 */       public String getPassword() { Object ref = this.password_;
/* 15398 */         if (!(ref instanceof String)) {
/* 15399 */           ByteString bs = (ByteString)ref;
/*       */           
/* 15401 */           String s = bs.toStringUtf8();
/* 15402 */           this.password_ = s;
/* 15403 */           return s;
/*       */         } 
/* 15405 */         return (String)ref; }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public ByteString getPasswordBytes() {
/* 15414 */         Object ref = this.password_;
/* 15415 */         if (ref instanceof String) {
/*       */           
/* 15417 */           ByteString b = ByteString.copyFromUtf8((String)ref);
/*       */           
/* 15419 */           this.password_ = b;
/* 15420 */           return b;
/*       */         } 
/* 15422 */         return (ByteString)ref;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setPassword(String value) {
/* 15432 */         if (value == null) {
/* 15433 */           throw new NullPointerException();
/*       */         }
/*       */         
/* 15436 */         this.password_ = value;
/* 15437 */         onChanged();
/* 15438 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearPassword() {
/* 15446 */         this.password_ = DolphinMessages.ConfigDiffRequest.getDefaultInstance().getPassword();
/* 15447 */         onChanged();
/* 15448 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setPasswordBytes(ByteString value) {
/* 15457 */         if (value == null) {
/* 15458 */           throw new NullPointerException();
/*       */         }
/* 15460 */         DolphinMessages.ConfigDiffRequest.checkByteStringIsUtf8(value);
/*       */         
/* 15462 */         this.password_ = value;
/* 15463 */         onChanged();
/* 15464 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasConfigDiff() {
/* 15475 */         return (this.configDiffBuilder_ != null || this.configDiff_ != null);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.ConfigDiff getConfigDiff() {
/* 15482 */         if (this.configDiffBuilder_ == null) {
/* 15483 */           return (this.configDiff_ == null) ? DolphinConfig.ConfigDiff.getDefaultInstance() : this.configDiff_;
/*       */         }
/* 15485 */         return (DolphinConfig.ConfigDiff)this.configDiffBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setConfigDiff(DolphinConfig.ConfigDiff value) {
/* 15492 */         if (this.configDiffBuilder_ == null) {
/* 15493 */           if (value == null) {
/* 15494 */             throw new NullPointerException();
/*       */           }
/* 15496 */           this.configDiff_ = value;
/* 15497 */           onChanged();
/*       */         } else {
/* 15499 */           this.configDiffBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         
/* 15502 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setConfigDiff(DolphinConfig.ConfigDiff.Builder builderForValue) {
/* 15509 */         if (this.configDiffBuilder_ == null) {
/* 15510 */           this.configDiff_ = builderForValue.build();
/* 15511 */           onChanged();
/*       */         } else {
/* 15513 */           this.configDiffBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         
/* 15516 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeConfigDiff(DolphinConfig.ConfigDiff value) {
/* 15522 */         if (this.configDiffBuilder_ == null) {
/* 15523 */           if (this.configDiff_ != null) {
/* 15524 */             this
/* 15525 */               .configDiff_ = DolphinConfig.ConfigDiff.newBuilder(this.configDiff_).mergeFrom(value).buildPartial();
/*       */           } else {
/* 15527 */             this.configDiff_ = value;
/*       */           } 
/* 15529 */           onChanged();
/*       */         } else {
/* 15531 */           this.configDiffBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         
/* 15534 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearConfigDiff() {
/* 15540 */         if (this.configDiffBuilder_ == null) {
/* 15541 */           this.configDiff_ = null;
/* 15542 */           onChanged();
/*       */         } else {
/* 15544 */           this.configDiff_ = null;
/* 15545 */           this.configDiffBuilder_ = null;
/*       */         } 
/*       */         
/* 15548 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.ConfigDiff.Builder getConfigDiffBuilder() {
/* 15555 */         onChanged();
/* 15556 */         return (DolphinConfig.ConfigDiff.Builder)getConfigDiffFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.ConfigDiffOrBuilder getConfigDiffOrBuilder() {
/* 15562 */         if (this.configDiffBuilder_ != null) {
/* 15563 */           return (DolphinConfig.ConfigDiffOrBuilder)this.configDiffBuilder_.getMessageOrBuilder();
/*       */         }
/* 15565 */         return (this.configDiff_ == null) ? 
/* 15566 */           (DolphinConfig.ConfigDiffOrBuilder)DolphinConfig.ConfigDiff.getDefaultInstance() : (DolphinConfig.ConfigDiffOrBuilder)this.configDiff_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.ConfigDiff, DolphinConfig.ConfigDiff.Builder, DolphinConfig.ConfigDiffOrBuilder> getConfigDiffFieldBuilder() {
/* 15575 */         if (this.configDiffBuilder_ == null) {
/* 15576 */           this
/*       */ 
/*       */ 
/*       */             
/* 15580 */             .configDiffBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getConfigDiff(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/* 15581 */           this.configDiff_ = null;
/*       */         } 
/* 15583 */         return this.configDiffBuilder_;
/*       */       }
/*       */ 
/*       */       
/*       */       public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
/* 15588 */         return (Builder)super.setUnknownFields(unknownFields);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
/* 15594 */         return (Builder)super.mergeUnknownFields(unknownFields);
/*       */       }
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 15604 */     private static final ConfigDiffRequest DEFAULT_INSTANCE = new ConfigDiffRequest();
/*       */ 
/*       */     
/*       */     public static ConfigDiffRequest getDefaultInstance() {
/* 15608 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */ 
/*       */     
/* 15612 */     private static final Parser<ConfigDiffRequest> PARSER = (Parser<ConfigDiffRequest>)new AbstractParser<ConfigDiffRequest>()
/*       */       {
/*       */ 
/*       */         
/*       */         public DolphinMessages.ConfigDiffRequest parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException
/*       */         {
/* 15618 */           return new DolphinMessages.ConfigDiffRequest(input, extensionRegistry);
/*       */         }
/*       */       };
/*       */     
/*       */     public static Parser<ConfigDiffRequest> parser() {
/* 15623 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public Parser<ConfigDiffRequest> getParserForType() {
/* 15628 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public ConfigDiffRequest getDefaultInstanceForType() {
/* 15633 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */   }
/*       */ 
/*       */ 
/*       */   
/*       */   public static interface FirmwareUpdateInfo_RequestOrBuilder
/*       */     extends MessageOrBuilder
/*       */   {
/*       */     String getChannel();
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getChannelBytes();
/*       */ 
/*       */ 
/*       */     
/*       */     int getHardwareVersion();
/*       */ 
/*       */     
/*       */     String getDeviceVersionName();
/*       */ 
/*       */     
/*       */     ByteString getDeviceVersionNameBytes();
/*       */ 
/*       */     
/*       */     int getDeviceVersionMajor();
/*       */ 
/*       */     
/*       */     int getDeviceVersionMinor();
/*       */ 
/*       */     
/*       */     int getDeviceVersionRevision();
/*       */   }
/*       */ 
/*       */   
/*       */   public static final class FirmwareUpdateInfo_Request
/*       */     extends GeneratedMessageV3
/*       */     implements FirmwareUpdateInfo_RequestOrBuilder
/*       */   {
/*       */     private static final long serialVersionUID = 0L;
/*       */     
/*       */     public static final int CHANNEL_FIELD_NUMBER = 1;
/*       */     
/*       */     private volatile Object channel_;
/*       */     
/*       */     public static final int HARDWAREVERSION_FIELD_NUMBER = 2;
/*       */     
/*       */     private int hardwareVersion_;
/*       */     
/*       */     public static final int DEVICE_VERSION_NAME_FIELD_NUMBER = 10;
/*       */     
/*       */     private volatile Object deviceVersionName_;
/*       */     
/*       */     public static final int DEVICE_VERSION_MAJOR_FIELD_NUMBER = 11;
/*       */     
/*       */     private int deviceVersionMajor_;
/*       */     
/*       */     public static final int DEVICE_VERSION_MINOR_FIELD_NUMBER = 12;
/*       */     
/*       */     private int deviceVersionMinor_;
/*       */     
/*       */     public static final int DEVICE_VERSION_REVISION_FIELD_NUMBER = 13;
/*       */     
/*       */     private int deviceVersionRevision_;
/*       */     
/*       */     private byte memoizedIsInitialized;
/*       */ 
/*       */     
/*       */     private FirmwareUpdateInfo_Request(GeneratedMessageV3.Builder<?> builder)
/*       */     {
/* 15704 */       super(builder);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/* 15925 */       this.memoizedIsInitialized = -1; } private FirmwareUpdateInfo_Request() { this.memoizedIsInitialized = -1; this.channel_ = ""; this.deviceVersionName_ = ""; } protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) { return new FirmwareUpdateInfo_Request(); } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private FirmwareUpdateInfo_Request(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this(); if (extensionRegistry == null) throw new NullPointerException();  UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { String s; int tag = input.readTag(); switch (tag) { case 0: done = true; continue;case 10: s = input.readStringRequireUtf8(); this.channel_ = s; continue;case 16: this.hardwareVersion_ = input.readUInt32(); continue;case 82: s = input.readStringRequireUtf8(); this.deviceVersionName_ = s; continue;case 88: this.deviceVersionMajor_ = input.readUInt32(); continue;case 96: this.deviceVersionMinor_ = input.readUInt32(); continue;case 104: this.deviceVersionRevision_ = input.readUInt32(); continue; }  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this); } finally { this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_FirmwareUpdateInfo_Request_descriptor; } protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() { return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_FirmwareUpdateInfo_Request_fieldAccessorTable.ensureFieldAccessorsInitialized(FirmwareUpdateInfo_Request.class, Builder.class); } public String getChannel() { Object ref = this.channel_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.channel_ = s; return s; } public ByteString getChannelBytes() { Object ref = this.channel_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.channel_ = b; return b; }  return (ByteString)ref; } public int getHardwareVersion() { return this.hardwareVersion_; } public String getDeviceVersionName() { Object ref = this.deviceVersionName_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.deviceVersionName_ = s; return s; } public ByteString getDeviceVersionNameBytes() { Object ref = this.deviceVersionName_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.deviceVersionName_ = b; return b; }  return (ByteString)ref; } public int getDeviceVersionMajor() { return this.deviceVersionMajor_; }
/*       */     public int getDeviceVersionMinor() { return this.deviceVersionMinor_; }
/*       */     public int getDeviceVersionRevision() { return this.deviceVersionRevision_; }
/* 15928 */     public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized;
/* 15929 */       if (isInitialized == 1) return true; 
/* 15930 */       if (isInitialized == 0) return false;
/*       */       
/* 15932 */       this.memoizedIsInitialized = 1;
/* 15933 */       return true; }
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/* 15939 */       if (!getChannelBytes().isEmpty()) {
/* 15940 */         GeneratedMessageV3.writeString(output, 1, this.channel_);
/*       */       }
/* 15942 */       if (this.hardwareVersion_ != 0) {
/* 15943 */         output.writeUInt32(2, this.hardwareVersion_);
/*       */       }
/* 15945 */       if (!getDeviceVersionNameBytes().isEmpty()) {
/* 15946 */         GeneratedMessageV3.writeString(output, 10, this.deviceVersionName_);
/*       */       }
/* 15948 */       if (this.deviceVersionMajor_ != 0) {
/* 15949 */         output.writeUInt32(11, this.deviceVersionMajor_);
/*       */       }
/* 15951 */       if (this.deviceVersionMinor_ != 0) {
/* 15952 */         output.writeUInt32(12, this.deviceVersionMinor_);
/*       */       }
/* 15954 */       if (this.deviceVersionRevision_ != 0) {
/* 15955 */         output.writeUInt32(13, this.deviceVersionRevision_);
/*       */       }
/* 15957 */       this.unknownFields.writeTo(output);
/*       */     }
/*       */ 
/*       */     
/*       */     public int getSerializedSize() {
/* 15962 */       int size = this.memoizedSize;
/* 15963 */       if (size != -1) return size;
/*       */       
/* 15965 */       size = 0;
/* 15966 */       if (!getChannelBytes().isEmpty()) {
/* 15967 */         size += GeneratedMessageV3.computeStringSize(1, this.channel_);
/*       */       }
/* 15969 */       if (this.hardwareVersion_ != 0) {
/* 15970 */         size += 
/* 15971 */           CodedOutputStream.computeUInt32Size(2, this.hardwareVersion_);
/*       */       }
/* 15973 */       if (!getDeviceVersionNameBytes().isEmpty()) {
/* 15974 */         size += GeneratedMessageV3.computeStringSize(10, this.deviceVersionName_);
/*       */       }
/* 15976 */       if (this.deviceVersionMajor_ != 0) {
/* 15977 */         size += 
/* 15978 */           CodedOutputStream.computeUInt32Size(11, this.deviceVersionMajor_);
/*       */       }
/* 15980 */       if (this.deviceVersionMinor_ != 0) {
/* 15981 */         size += 
/* 15982 */           CodedOutputStream.computeUInt32Size(12, this.deviceVersionMinor_);
/*       */       }
/* 15984 */       if (this.deviceVersionRevision_ != 0) {
/* 15985 */         size += 
/* 15986 */           CodedOutputStream.computeUInt32Size(13, this.deviceVersionRevision_);
/*       */       }
/* 15988 */       size += this.unknownFields.getSerializedSize();
/* 15989 */       this.memoizedSize = size;
/* 15990 */       return size;
/*       */     }
/*       */ 
/*       */     
/*       */     public boolean equals(Object obj) {
/* 15995 */       if (obj == this) {
/* 15996 */         return true;
/*       */       }
/* 15998 */       if (!(obj instanceof FirmwareUpdateInfo_Request)) {
/* 15999 */         return super.equals(obj);
/*       */       }
/* 16001 */       FirmwareUpdateInfo_Request other = (FirmwareUpdateInfo_Request)obj;
/*       */ 
/*       */       
/* 16004 */       if (!getChannel().equals(other.getChannel())) return false; 
/* 16005 */       if (getHardwareVersion() != other
/* 16006 */         .getHardwareVersion()) return false;
/*       */       
/* 16008 */       if (!getDeviceVersionName().equals(other.getDeviceVersionName())) return false; 
/* 16009 */       if (getDeviceVersionMajor() != other
/* 16010 */         .getDeviceVersionMajor()) return false; 
/* 16011 */       if (getDeviceVersionMinor() != other
/* 16012 */         .getDeviceVersionMinor()) return false; 
/* 16013 */       if (getDeviceVersionRevision() != other
/* 16014 */         .getDeviceVersionRevision()) return false; 
/* 16015 */       if (!this.unknownFields.equals(other.unknownFields)) return false; 
/* 16016 */       return true;
/*       */     }
/*       */ 
/*       */     
/*       */     public int hashCode() {
/* 16021 */       if (this.memoizedHashCode != 0) {
/* 16022 */         return this.memoizedHashCode;
/*       */       }
/* 16024 */       int hash = 41;
/* 16025 */       hash = 19 * hash + getDescriptor().hashCode();
/* 16026 */       hash = 37 * hash + 1;
/* 16027 */       hash = 53 * hash + getChannel().hashCode();
/* 16028 */       hash = 37 * hash + 2;
/* 16029 */       hash = 53 * hash + getHardwareVersion();
/* 16030 */       hash = 37 * hash + 10;
/* 16031 */       hash = 53 * hash + getDeviceVersionName().hashCode();
/* 16032 */       hash = 37 * hash + 11;
/* 16033 */       hash = 53 * hash + getDeviceVersionMajor();
/* 16034 */       hash = 37 * hash + 12;
/* 16035 */       hash = 53 * hash + getDeviceVersionMinor();
/* 16036 */       hash = 37 * hash + 13;
/* 16037 */       hash = 53 * hash + getDeviceVersionRevision();
/* 16038 */       hash = 29 * hash + this.unknownFields.hashCode();
/* 16039 */       this.memoizedHashCode = hash;
/* 16040 */       return hash;
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static FirmwareUpdateInfo_Request parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
/* 16046 */       return (FirmwareUpdateInfo_Request)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static FirmwareUpdateInfo_Request parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 16052 */       return (FirmwareUpdateInfo_Request)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static FirmwareUpdateInfo_Request parseFrom(ByteString data) throws InvalidProtocolBufferException {
/* 16057 */       return (FirmwareUpdateInfo_Request)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static FirmwareUpdateInfo_Request parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 16063 */       return (FirmwareUpdateInfo_Request)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static FirmwareUpdateInfo_Request parseFrom(byte[] data) throws InvalidProtocolBufferException {
/* 16067 */       return (FirmwareUpdateInfo_Request)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static FirmwareUpdateInfo_Request parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 16073 */       return (FirmwareUpdateInfo_Request)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static FirmwareUpdateInfo_Request parseFrom(InputStream input) throws IOException {
/* 16077 */       return 
/* 16078 */         (FirmwareUpdateInfo_Request)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static FirmwareUpdateInfo_Request parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 16084 */       return 
/* 16085 */         (FirmwareUpdateInfo_Request)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static FirmwareUpdateInfo_Request parseDelimitedFrom(InputStream input) throws IOException {
/* 16089 */       return 
/* 16090 */         (FirmwareUpdateInfo_Request)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static FirmwareUpdateInfo_Request parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 16096 */       return 
/* 16097 */         (FirmwareUpdateInfo_Request)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static FirmwareUpdateInfo_Request parseFrom(CodedInputStream input) throws IOException {
/* 16102 */       return 
/* 16103 */         (FirmwareUpdateInfo_Request)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static FirmwareUpdateInfo_Request parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 16109 */       return 
/* 16110 */         (FirmwareUpdateInfo_Request)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public Builder newBuilderForType() {
/* 16114 */       return newBuilder();
/*       */     } public static Builder newBuilder() {
/* 16116 */       return DEFAULT_INSTANCE.toBuilder();
/*       */     }
/*       */     public static Builder newBuilder(FirmwareUpdateInfo_Request prototype) {
/* 16119 */       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
/*       */     }
/*       */     
/*       */     public Builder toBuilder() {
/* 16123 */       return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder())
/* 16124 */         .mergeFrom(this);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
/* 16130 */       Builder builder = new Builder(parent);
/* 16131 */       return builder;
/*       */     }
/*       */     
/*       */     public static final class Builder
/*       */       extends GeneratedMessageV3.Builder<Builder>
/*       */       implements DolphinMessages.FirmwareUpdateInfo_RequestOrBuilder
/*       */     {
/*       */       private Object channel_;
/*       */       private int hardwareVersion_;
/*       */       private Object deviceVersionName_;
/*       */       private int deviceVersionMajor_;
/*       */       private int deviceVersionMinor_;
/*       */       private int deviceVersionRevision_;
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/* 16146 */         return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_FirmwareUpdateInfo_Request_descriptor;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
/* 16152 */         return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_FirmwareUpdateInfo_Request_fieldAccessorTable
/* 16153 */           .ensureFieldAccessorsInitialized(DolphinMessages.FirmwareUpdateInfo_Request.class, Builder.class);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private Builder()
/*       */       {
/* 16316 */         this.channel_ = "";
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 16423 */         this.deviceVersionName_ = ""; maybeForceBuilderInitialization(); } private Builder(GeneratedMessageV3.BuilderParent parent) { super(parent); this.channel_ = ""; this.deviceVersionName_ = ""; maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (DolphinMessages.FirmwareUpdateInfo_Request.alwaysUseFieldBuilders); } public Builder clear() { super.clear(); this.channel_ = ""; this.hardwareVersion_ = 0; this.deviceVersionName_ = ""; this.deviceVersionMajor_ = 0; this.deviceVersionMinor_ = 0; this.deviceVersionRevision_ = 0; return this; } public Descriptors.Descriptor getDescriptorForType() { return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_FirmwareUpdateInfo_Request_descriptor; } public DolphinMessages.FirmwareUpdateInfo_Request getDefaultInstanceForType() { return DolphinMessages.FirmwareUpdateInfo_Request.getDefaultInstance(); } public DolphinMessages.FirmwareUpdateInfo_Request build() { DolphinMessages.FirmwareUpdateInfo_Request result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public DolphinMessages.FirmwareUpdateInfo_Request buildPartial() { DolphinMessages.FirmwareUpdateInfo_Request result = new DolphinMessages.FirmwareUpdateInfo_Request(this); result.channel_ = this.channel_; result.hardwareVersion_ = this.hardwareVersion_; result.deviceVersionName_ = this.deviceVersionName_; result.deviceVersionMajor_ = this.deviceVersionMajor_; result.deviceVersionMinor_ = this.deviceVersionMinor_; result.deviceVersionRevision_ = this.deviceVersionRevision_; onBuilt(); return result; } public Builder clone() { return (Builder)super.clone(); } public Builder setField(Descriptors.FieldDescriptor field, Object value) { return (Builder)super.setField(field, value); } public Builder clearField(Descriptors.FieldDescriptor field) { return (Builder)super.clearField(field); } public Builder clearOneof(Descriptors.OneofDescriptor oneof) { return (Builder)super.clearOneof(oneof); } public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) { return (Builder)super.setRepeatedField(field, index, value); } public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) { return (Builder)super.addRepeatedField(field, value); } public Builder mergeFrom(Message other) { if (other instanceof DolphinMessages.FirmwareUpdateInfo_Request) return mergeFrom((DolphinMessages.FirmwareUpdateInfo_Request)other);  super.mergeFrom(other); return this; } public Builder mergeFrom(DolphinMessages.FirmwareUpdateInfo_Request other) { if (other == DolphinMessages.FirmwareUpdateInfo_Request.getDefaultInstance()) return this;  if (!other.getChannel().isEmpty()) { this.channel_ = other.channel_; onChanged(); }  if (other.getHardwareVersion() != 0) setHardwareVersion(other.getHardwareVersion());  if (!other.getDeviceVersionName().isEmpty()) { this.deviceVersionName_ = other.deviceVersionName_; onChanged(); }  if (other.getDeviceVersionMajor() != 0) setDeviceVersionMajor(other.getDeviceVersionMajor());  if (other.getDeviceVersionMinor() != 0) setDeviceVersionMinor(other.getDeviceVersionMinor());  if (other.getDeviceVersionRevision() != 0) setDeviceVersionRevision(other.getDeviceVersionRevision());  mergeUnknownFields(other.unknownFields); onChanged(); return this; } public final boolean isInitialized() { return true; } public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { DolphinMessages.FirmwareUpdateInfo_Request parsedMessage = null; try { parsedMessage = (DolphinMessages.FirmwareUpdateInfo_Request)DolphinMessages.FirmwareUpdateInfo_Request.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (DolphinMessages.FirmwareUpdateInfo_Request)e.getUnfinishedMessage(); throw e.unwrapIOException(); } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; } public String getChannel() { Object ref = this.channel_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.channel_ = s; return s; }  return (String)ref; } public ByteString getChannelBytes() { Object ref = this.channel_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.channel_ = b; return b; }  return (ByteString)ref; } public Builder setChannel(String value) { if (value == null) throw new NullPointerException();  this.channel_ = value; onChanged(); return this; }
/*       */       public Builder clearChannel() { this.channel_ = DolphinMessages.FirmwareUpdateInfo_Request.getDefaultInstance().getChannel(); onChanged(); return this; }
/*       */       public Builder setChannelBytes(ByteString value) { if (value == null) throw new NullPointerException();  DolphinMessages.FirmwareUpdateInfo_Request.checkByteStringIsUtf8(value); this.channel_ = value; onChanged(); return this; }
/*       */       public int getHardwareVersion() { return this.hardwareVersion_; }
/*       */       public Builder setHardwareVersion(int value) { this.hardwareVersion_ = value; onChanged(); return this; }
/*       */       public Builder clearHardwareVersion() { this.hardwareVersion_ = 0; onChanged(); return this; }
/* 16429 */       public String getDeviceVersionName() { Object ref = this.deviceVersionName_;
/* 16430 */         if (!(ref instanceof String)) {
/* 16431 */           ByteString bs = (ByteString)ref;
/*       */           
/* 16433 */           String s = bs.toStringUtf8();
/* 16434 */           this.deviceVersionName_ = s;
/* 16435 */           return s;
/*       */         } 
/* 16437 */         return (String)ref; }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public ByteString getDeviceVersionNameBytes() {
/* 16446 */         Object ref = this.deviceVersionName_;
/* 16447 */         if (ref instanceof String) {
/*       */           
/* 16449 */           ByteString b = ByteString.copyFromUtf8((String)ref);
/*       */           
/* 16451 */           this.deviceVersionName_ = b;
/* 16452 */           return b;
/*       */         } 
/* 16454 */         return (ByteString)ref;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setDeviceVersionName(String value) {
/* 16464 */         if (value == null) {
/* 16465 */           throw new NullPointerException();
/*       */         }
/*       */         
/* 16468 */         this.deviceVersionName_ = value;
/* 16469 */         onChanged();
/* 16470 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearDeviceVersionName() {
/* 16478 */         this.deviceVersionName_ = DolphinMessages.FirmwareUpdateInfo_Request.getDefaultInstance().getDeviceVersionName();
/* 16479 */         onChanged();
/* 16480 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setDeviceVersionNameBytes(ByteString value) {
/* 16489 */         if (value == null) {
/* 16490 */           throw new NullPointerException();
/*       */         }
/* 16492 */         DolphinMessages.FirmwareUpdateInfo_Request.checkByteStringIsUtf8(value);
/*       */         
/* 16494 */         this.deviceVersionName_ = value;
/* 16495 */         onChanged();
/* 16496 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getDeviceVersionMajor() {
/* 16506 */         return this.deviceVersionMajor_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setDeviceVersionMajor(int value) {
/* 16515 */         this.deviceVersionMajor_ = value;
/* 16516 */         onChanged();
/* 16517 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearDeviceVersionMajor() {
/* 16525 */         this.deviceVersionMajor_ = 0;
/* 16526 */         onChanged();
/* 16527 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getDeviceVersionMinor() {
/* 16537 */         return this.deviceVersionMinor_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setDeviceVersionMinor(int value) {
/* 16546 */         this.deviceVersionMinor_ = value;
/* 16547 */         onChanged();
/* 16548 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearDeviceVersionMinor() {
/* 16556 */         this.deviceVersionMinor_ = 0;
/* 16557 */         onChanged();
/* 16558 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getDeviceVersionRevision() {
/* 16568 */         return this.deviceVersionRevision_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setDeviceVersionRevision(int value) {
/* 16577 */         this.deviceVersionRevision_ = value;
/* 16578 */         onChanged();
/* 16579 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearDeviceVersionRevision() {
/* 16587 */         this.deviceVersionRevision_ = 0;
/* 16588 */         onChanged();
/* 16589 */         return this;
/*       */       }
/*       */ 
/*       */       
/*       */       public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
/* 16594 */         return (Builder)super.setUnknownFields(unknownFields);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
/* 16600 */         return (Builder)super.mergeUnknownFields(unknownFields);
/*       */       }
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 16610 */     private static final FirmwareUpdateInfo_Request DEFAULT_INSTANCE = new FirmwareUpdateInfo_Request();
/*       */ 
/*       */     
/*       */     public static FirmwareUpdateInfo_Request getDefaultInstance() {
/* 16614 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */ 
/*       */     
/* 16618 */     private static final Parser<FirmwareUpdateInfo_Request> PARSER = (Parser<FirmwareUpdateInfo_Request>)new AbstractParser<FirmwareUpdateInfo_Request>()
/*       */       {
/*       */ 
/*       */         
/*       */         public DolphinMessages.FirmwareUpdateInfo_Request parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException
/*       */         {
/* 16624 */           return new DolphinMessages.FirmwareUpdateInfo_Request(input, extensionRegistry);
/*       */         }
/*       */       };
/*       */     
/*       */     public static Parser<FirmwareUpdateInfo_Request> parser() {
/* 16629 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public Parser<FirmwareUpdateInfo_Request> getParserForType() {
/* 16634 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public FirmwareUpdateInfo_Request getDefaultInstanceForType() {
/* 16639 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */   }
/*       */ 
/*       */ 
/*       */   
/*       */   public static interface FirmwareUpdateInfo_ResponseOrBuilder
/*       */     extends MessageOrBuilder
/*       */   {
/*       */     String getVersionName();
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getVersionNameBytes();
/*       */ 
/*       */ 
/*       */     
/*       */     int getVersionMajor();
/*       */ 
/*       */ 
/*       */     
/*       */     int getVersionMinor();
/*       */ 
/*       */     
/*       */     int getVersionRevision();
/*       */ 
/*       */     
/*       */     int getFirmwareID();
/*       */ 
/*       */     
/*       */     int getTotalSize();
/*       */   }
/*       */ 
/*       */   
/*       */   public static final class FirmwareUpdateInfo_Response
/*       */     extends GeneratedMessageV3
/*       */     implements FirmwareUpdateInfo_ResponseOrBuilder
/*       */   {
/*       */     private static final long serialVersionUID = 0L;
/*       */     
/*       */     public static final int VERSION_NAME_FIELD_NUMBER = 1;
/*       */     
/*       */     private volatile Object versionName_;
/*       */     
/*       */     public static final int VERSION_MAJOR_FIELD_NUMBER = 2;
/*       */     
/*       */     private int versionMajor_;
/*       */     
/*       */     public static final int VERSION_MINOR_FIELD_NUMBER = 3;
/*       */     
/*       */     private int versionMinor_;
/*       */     
/*       */     public static final int VERSION_REVISION_FIELD_NUMBER = 4;
/*       */     
/*       */     private int versionRevision_;
/*       */     
/*       */     public static final int FIRMWAREID_FIELD_NUMBER = 5;
/*       */     
/*       */     private int firmwareID_;
/*       */     
/*       */     public static final int TOTALSIZE_FIELD_NUMBER = 6;
/*       */     
/*       */     private int totalSize_;
/*       */     
/*       */     private byte memoizedIsInitialized;
/*       */ 
/*       */     
/*       */     private FirmwareUpdateInfo_Response(GeneratedMessageV3.Builder<?> builder)
/*       */     {
/* 16708 */       super(builder);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/* 16908 */       this.memoizedIsInitialized = -1; } private FirmwareUpdateInfo_Response() { this.memoizedIsInitialized = -1; this.versionName_ = ""; } protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) { return new FirmwareUpdateInfo_Response(); } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private FirmwareUpdateInfo_Response(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this(); if (extensionRegistry == null) throw new NullPointerException();  UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { String s; int tag = input.readTag(); switch (tag) { case 0: done = true; continue;case 10: s = input.readStringRequireUtf8(); this.versionName_ = s; continue;case 16: this.versionMajor_ = input.readUInt32(); continue;case 24: this.versionMinor_ = input.readUInt32(); continue;case 32: this.versionRevision_ = input.readUInt32(); continue;case 40: this.firmwareID_ = input.readUInt32(); continue;case 48: this.totalSize_ = input.readUInt32(); continue; }  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this); } finally { this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_FirmwareUpdateInfo_Response_descriptor; } protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() { return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_FirmwareUpdateInfo_Response_fieldAccessorTable.ensureFieldAccessorsInitialized(FirmwareUpdateInfo_Response.class, Builder.class); } public String getVersionName() { Object ref = this.versionName_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.versionName_ = s; return s; } public ByteString getVersionNameBytes() { Object ref = this.versionName_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.versionName_ = b; return b; }  return (ByteString)ref; } public int getVersionMajor() { return this.versionMajor_; } public int getVersionMinor() { return this.versionMinor_; } public int getVersionRevision() { return this.versionRevision_; }
/*       */     public int getFirmwareID() { return this.firmwareID_; }
/*       */     public int getTotalSize() { return this.totalSize_; }
/* 16911 */     public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized;
/* 16912 */       if (isInitialized == 1) return true; 
/* 16913 */       if (isInitialized == 0) return false;
/*       */       
/* 16915 */       this.memoizedIsInitialized = 1;
/* 16916 */       return true; }
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/* 16922 */       if (!getVersionNameBytes().isEmpty()) {
/* 16923 */         GeneratedMessageV3.writeString(output, 1, this.versionName_);
/*       */       }
/* 16925 */       if (this.versionMajor_ != 0) {
/* 16926 */         output.writeUInt32(2, this.versionMajor_);
/*       */       }
/* 16928 */       if (this.versionMinor_ != 0) {
/* 16929 */         output.writeUInt32(3, this.versionMinor_);
/*       */       }
/* 16931 */       if (this.versionRevision_ != 0) {
/* 16932 */         output.writeUInt32(4, this.versionRevision_);
/*       */       }
/* 16934 */       if (this.firmwareID_ != 0) {
/* 16935 */         output.writeUInt32(5, this.firmwareID_);
/*       */       }
/* 16937 */       if (this.totalSize_ != 0) {
/* 16938 */         output.writeUInt32(6, this.totalSize_);
/*       */       }
/* 16940 */       this.unknownFields.writeTo(output);
/*       */     }
/*       */ 
/*       */     
/*       */     public int getSerializedSize() {
/* 16945 */       int size = this.memoizedSize;
/* 16946 */       if (size != -1) return size;
/*       */       
/* 16948 */       size = 0;
/* 16949 */       if (!getVersionNameBytes().isEmpty()) {
/* 16950 */         size += GeneratedMessageV3.computeStringSize(1, this.versionName_);
/*       */       }
/* 16952 */       if (this.versionMajor_ != 0) {
/* 16953 */         size += 
/* 16954 */           CodedOutputStream.computeUInt32Size(2, this.versionMajor_);
/*       */       }
/* 16956 */       if (this.versionMinor_ != 0) {
/* 16957 */         size += 
/* 16958 */           CodedOutputStream.computeUInt32Size(3, this.versionMinor_);
/*       */       }
/* 16960 */       if (this.versionRevision_ != 0) {
/* 16961 */         size += 
/* 16962 */           CodedOutputStream.computeUInt32Size(4, this.versionRevision_);
/*       */       }
/* 16964 */       if (this.firmwareID_ != 0) {
/* 16965 */         size += 
/* 16966 */           CodedOutputStream.computeUInt32Size(5, this.firmwareID_);
/*       */       }
/* 16968 */       if (this.totalSize_ != 0) {
/* 16969 */         size += 
/* 16970 */           CodedOutputStream.computeUInt32Size(6, this.totalSize_);
/*       */       }
/* 16972 */       size += this.unknownFields.getSerializedSize();
/* 16973 */       this.memoizedSize = size;
/* 16974 */       return size;
/*       */     }
/*       */ 
/*       */     
/*       */     public boolean equals(Object obj) {
/* 16979 */       if (obj == this) {
/* 16980 */         return true;
/*       */       }
/* 16982 */       if (!(obj instanceof FirmwareUpdateInfo_Response)) {
/* 16983 */         return super.equals(obj);
/*       */       }
/* 16985 */       FirmwareUpdateInfo_Response other = (FirmwareUpdateInfo_Response)obj;
/*       */ 
/*       */       
/* 16988 */       if (!getVersionName().equals(other.getVersionName())) return false; 
/* 16989 */       if (getVersionMajor() != other
/* 16990 */         .getVersionMajor()) return false; 
/* 16991 */       if (getVersionMinor() != other
/* 16992 */         .getVersionMinor()) return false; 
/* 16993 */       if (getVersionRevision() != other
/* 16994 */         .getVersionRevision()) return false; 
/* 16995 */       if (getFirmwareID() != other
/* 16996 */         .getFirmwareID()) return false; 
/* 16997 */       if (getTotalSize() != other
/* 16998 */         .getTotalSize()) return false; 
/* 16999 */       if (!this.unknownFields.equals(other.unknownFields)) return false; 
/* 17000 */       return true;
/*       */     }
/*       */ 
/*       */     
/*       */     public int hashCode() {
/* 17005 */       if (this.memoizedHashCode != 0) {
/* 17006 */         return this.memoizedHashCode;
/*       */       }
/* 17008 */       int hash = 41;
/* 17009 */       hash = 19 * hash + getDescriptor().hashCode();
/* 17010 */       hash = 37 * hash + 1;
/* 17011 */       hash = 53 * hash + getVersionName().hashCode();
/* 17012 */       hash = 37 * hash + 2;
/* 17013 */       hash = 53 * hash + getVersionMajor();
/* 17014 */       hash = 37 * hash + 3;
/* 17015 */       hash = 53 * hash + getVersionMinor();
/* 17016 */       hash = 37 * hash + 4;
/* 17017 */       hash = 53 * hash + getVersionRevision();
/* 17018 */       hash = 37 * hash + 5;
/* 17019 */       hash = 53 * hash + getFirmwareID();
/* 17020 */       hash = 37 * hash + 6;
/* 17021 */       hash = 53 * hash + getTotalSize();
/* 17022 */       hash = 29 * hash + this.unknownFields.hashCode();
/* 17023 */       this.memoizedHashCode = hash;
/* 17024 */       return hash;
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static FirmwareUpdateInfo_Response parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
/* 17030 */       return (FirmwareUpdateInfo_Response)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static FirmwareUpdateInfo_Response parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 17036 */       return (FirmwareUpdateInfo_Response)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static FirmwareUpdateInfo_Response parseFrom(ByteString data) throws InvalidProtocolBufferException {
/* 17041 */       return (FirmwareUpdateInfo_Response)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static FirmwareUpdateInfo_Response parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 17047 */       return (FirmwareUpdateInfo_Response)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static FirmwareUpdateInfo_Response parseFrom(byte[] data) throws InvalidProtocolBufferException {
/* 17051 */       return (FirmwareUpdateInfo_Response)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static FirmwareUpdateInfo_Response parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 17057 */       return (FirmwareUpdateInfo_Response)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static FirmwareUpdateInfo_Response parseFrom(InputStream input) throws IOException {
/* 17061 */       return 
/* 17062 */         (FirmwareUpdateInfo_Response)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static FirmwareUpdateInfo_Response parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 17068 */       return 
/* 17069 */         (FirmwareUpdateInfo_Response)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static FirmwareUpdateInfo_Response parseDelimitedFrom(InputStream input) throws IOException {
/* 17073 */       return 
/* 17074 */         (FirmwareUpdateInfo_Response)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static FirmwareUpdateInfo_Response parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 17080 */       return 
/* 17081 */         (FirmwareUpdateInfo_Response)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static FirmwareUpdateInfo_Response parseFrom(CodedInputStream input) throws IOException {
/* 17086 */       return 
/* 17087 */         (FirmwareUpdateInfo_Response)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static FirmwareUpdateInfo_Response parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 17093 */       return 
/* 17094 */         (FirmwareUpdateInfo_Response)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public Builder newBuilderForType() {
/* 17098 */       return newBuilder();
/*       */     } public static Builder newBuilder() {
/* 17100 */       return DEFAULT_INSTANCE.toBuilder();
/*       */     }
/*       */     public static Builder newBuilder(FirmwareUpdateInfo_Response prototype) {
/* 17103 */       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
/*       */     }
/*       */     
/*       */     public Builder toBuilder() {
/* 17107 */       return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder())
/* 17108 */         .mergeFrom(this);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
/* 17114 */       Builder builder = new Builder(parent);
/* 17115 */       return builder;
/*       */     }
/*       */     
/*       */     public static final class Builder extends GeneratedMessageV3.Builder<Builder> implements DolphinMessages.FirmwareUpdateInfo_ResponseOrBuilder { private Object versionName_;
/*       */       private int versionMajor_;
/*       */       private int versionMinor_;
/*       */       private int versionRevision_;
/*       */       private int firmwareID_;
/*       */       private int totalSize_;
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/* 17126 */         return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_FirmwareUpdateInfo_Response_descriptor;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
/* 17132 */         return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_FirmwareUpdateInfo_Response_fieldAccessorTable
/* 17133 */           .ensureFieldAccessorsInitialized(DolphinMessages.FirmwareUpdateInfo_Response.class, Builder.class);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private Builder()
/*       */       {
/* 17295 */         this.versionName_ = ""; maybeForceBuilderInitialization(); } private Builder(GeneratedMessageV3.BuilderParent parent) { super(parent); this.versionName_ = ""; maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (DolphinMessages.FirmwareUpdateInfo_Response.alwaysUseFieldBuilders); } public Builder clear() { super.clear(); this.versionName_ = ""; this.versionMajor_ = 0; this.versionMinor_ = 0; this.versionRevision_ = 0; this.firmwareID_ = 0; this.totalSize_ = 0; return this; } public Descriptors.Descriptor getDescriptorForType() { return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_FirmwareUpdateInfo_Response_descriptor; } public DolphinMessages.FirmwareUpdateInfo_Response getDefaultInstanceForType() { return DolphinMessages.FirmwareUpdateInfo_Response.getDefaultInstance(); } public DolphinMessages.FirmwareUpdateInfo_Response build() { DolphinMessages.FirmwareUpdateInfo_Response result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public DolphinMessages.FirmwareUpdateInfo_Response buildPartial() { DolphinMessages.FirmwareUpdateInfo_Response result = new DolphinMessages.FirmwareUpdateInfo_Response(this); result.versionName_ = this.versionName_; result.versionMajor_ = this.versionMajor_; result.versionMinor_ = this.versionMinor_; result.versionRevision_ = this.versionRevision_; result.firmwareID_ = this.firmwareID_; result.totalSize_ = this.totalSize_; onBuilt(); return result; } public Builder clone() { return (Builder)super.clone(); } public Builder setField(Descriptors.FieldDescriptor field, Object value) { return (Builder)super.setField(field, value); } public Builder clearField(Descriptors.FieldDescriptor field) { return (Builder)super.clearField(field); } public Builder clearOneof(Descriptors.OneofDescriptor oneof) { return (Builder)super.clearOneof(oneof); } public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) { return (Builder)super.setRepeatedField(field, index, value); }
/*       */       public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) { return (Builder)super.addRepeatedField(field, value); }
/*       */       public Builder mergeFrom(Message other) { if (other instanceof DolphinMessages.FirmwareUpdateInfo_Response) return mergeFrom((DolphinMessages.FirmwareUpdateInfo_Response)other);  super.mergeFrom(other); return this; }
/*       */       public Builder mergeFrom(DolphinMessages.FirmwareUpdateInfo_Response other) { if (other == DolphinMessages.FirmwareUpdateInfo_Response.getDefaultInstance()) return this;  if (!other.getVersionName().isEmpty()) { this.versionName_ = other.versionName_; onChanged(); }  if (other.getVersionMajor() != 0) setVersionMajor(other.getVersionMajor());  if (other.getVersionMinor() != 0) setVersionMinor(other.getVersionMinor());  if (other.getVersionRevision() != 0) setVersionRevision(other.getVersionRevision());  if (other.getFirmwareID() != 0) setFirmwareID(other.getFirmwareID());  if (other.getTotalSize() != 0) setTotalSize(other.getTotalSize());  mergeUnknownFields(other.unknownFields); onChanged(); return this; }
/*       */       public final boolean isInitialized() { return true; }
/*       */       public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { DolphinMessages.FirmwareUpdateInfo_Response parsedMessage = null; try { parsedMessage = (DolphinMessages.FirmwareUpdateInfo_Response)DolphinMessages.FirmwareUpdateInfo_Response.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (DolphinMessages.FirmwareUpdateInfo_Response)e.getUnfinishedMessage(); throw e.unwrapIOException(); } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; }
/* 17301 */       public String getVersionName() { Object ref = this.versionName_;
/* 17302 */         if (!(ref instanceof String)) {
/* 17303 */           ByteString bs = (ByteString)ref;
/*       */           
/* 17305 */           String s = bs.toStringUtf8();
/* 17306 */           this.versionName_ = s;
/* 17307 */           return s;
/*       */         } 
/* 17309 */         return (String)ref; }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public ByteString getVersionNameBytes() {
/* 17318 */         Object ref = this.versionName_;
/* 17319 */         if (ref instanceof String) {
/*       */           
/* 17321 */           ByteString b = ByteString.copyFromUtf8((String)ref);
/*       */           
/* 17323 */           this.versionName_ = b;
/* 17324 */           return b;
/*       */         } 
/* 17326 */         return (ByteString)ref;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setVersionName(String value) {
/* 17336 */         if (value == null) {
/* 17337 */           throw new NullPointerException();
/*       */         }
/*       */         
/* 17340 */         this.versionName_ = value;
/* 17341 */         onChanged();
/* 17342 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearVersionName() {
/* 17350 */         this.versionName_ = DolphinMessages.FirmwareUpdateInfo_Response.getDefaultInstance().getVersionName();
/* 17351 */         onChanged();
/* 17352 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setVersionNameBytes(ByteString value) {
/* 17361 */         if (value == null) {
/* 17362 */           throw new NullPointerException();
/*       */         }
/* 17364 */         DolphinMessages.FirmwareUpdateInfo_Response.checkByteStringIsUtf8(value);
/*       */         
/* 17366 */         this.versionName_ = value;
/* 17367 */         onChanged();
/* 17368 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getVersionMajor() {
/* 17378 */         return this.versionMajor_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setVersionMajor(int value) {
/* 17387 */         this.versionMajor_ = value;
/* 17388 */         onChanged();
/* 17389 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearVersionMajor() {
/* 17397 */         this.versionMajor_ = 0;
/* 17398 */         onChanged();
/* 17399 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getVersionMinor() {
/* 17409 */         return this.versionMinor_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setVersionMinor(int value) {
/* 17418 */         this.versionMinor_ = value;
/* 17419 */         onChanged();
/* 17420 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearVersionMinor() {
/* 17428 */         this.versionMinor_ = 0;
/* 17429 */         onChanged();
/* 17430 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getVersionRevision() {
/* 17440 */         return this.versionRevision_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setVersionRevision(int value) {
/* 17449 */         this.versionRevision_ = value;
/* 17450 */         onChanged();
/* 17451 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearVersionRevision() {
/* 17459 */         this.versionRevision_ = 0;
/* 17460 */         onChanged();
/* 17461 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getFirmwareID() {
/* 17475 */         return this.firmwareID_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setFirmwareID(int value) {
/* 17488 */         this.firmwareID_ = value;
/* 17489 */         onChanged();
/* 17490 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearFirmwareID() {
/* 17502 */         this.firmwareID_ = 0;
/* 17503 */         onChanged();
/* 17504 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getTotalSize() {
/* 17518 */         return this.totalSize_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setTotalSize(int value) {
/* 17531 */         this.totalSize_ = value;
/* 17532 */         onChanged();
/* 17533 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearTotalSize() {
/* 17545 */         this.totalSize_ = 0;
/* 17546 */         onChanged();
/* 17547 */         return this;
/*       */       }
/*       */ 
/*       */       
/*       */       public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
/* 17552 */         return (Builder)super.setUnknownFields(unknownFields);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
/* 17558 */         return (Builder)super.mergeUnknownFields(unknownFields);
/*       */       } }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 17568 */     private static final FirmwareUpdateInfo_Response DEFAULT_INSTANCE = new FirmwareUpdateInfo_Response();
/*       */ 
/*       */     
/*       */     public static FirmwareUpdateInfo_Response getDefaultInstance() {
/* 17572 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */ 
/*       */     
/* 17576 */     private static final Parser<FirmwareUpdateInfo_Response> PARSER = (Parser<FirmwareUpdateInfo_Response>)new AbstractParser<FirmwareUpdateInfo_Response>()
/*       */       {
/*       */ 
/*       */         
/*       */         public DolphinMessages.FirmwareUpdateInfo_Response parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException
/*       */         {
/* 17582 */           return new DolphinMessages.FirmwareUpdateInfo_Response(input, extensionRegistry);
/*       */         }
/*       */       };
/*       */     
/*       */     public static Parser<FirmwareUpdateInfo_Response> parser() {
/* 17587 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public Parser<FirmwareUpdateInfo_Response> getParserForType() {
/* 17592 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public FirmwareUpdateInfo_Response getDefaultInstanceForType() {
/* 17597 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */   }
/*       */ 
/*       */   
/*       */   public static interface FirmwareUpdateRespOrBuilder
/*       */     extends MessageOrBuilder
/*       */   {
/*       */     int getFirmwareID();
/*       */ 
/*       */     
/*       */     int getResponseValue();
/*       */ 
/*       */     
/*       */     DolphinMessages.FURespCode getResponse();
/*       */ 
/*       */     
/*       */     String getFirmwareVersionName();
/*       */ 
/*       */     
/*       */     ByteString getFirmwareVersionNameBytes();
/*       */ 
/*       */     
/*       */     int getFirmwareVersionMajor();
/*       */ 
/*       */     
/*       */     int getFirmwareVersionMinor();
/*       */ 
/*       */     
/*       */     int getFirmwareVersionRevision();
/*       */   }
/*       */ 
/*       */   
/*       */   public static final class FirmwareUpdateResp
/*       */     extends GeneratedMessageV3
/*       */     implements FirmwareUpdateRespOrBuilder
/*       */   {
/*       */     private static final long serialVersionUID = 0L;
/*       */     
/*       */     public static final int FIRMWAREID_FIELD_NUMBER = 1;
/*       */     
/*       */     private int firmwareID_;
/*       */     
/*       */     public static final int RESPONSE_FIELD_NUMBER = 2;
/*       */     
/*       */     private int response_;
/*       */     
/*       */     public static final int FIRMWARE_VERSION_NAME_FIELD_NUMBER = 3;
/*       */     
/*       */     private volatile Object firmwareVersionName_;
/*       */     
/*       */     public static final int FIRMWARE_VERSION_MAJOR_FIELD_NUMBER = 4;
/*       */     
/*       */     private int firmwareVersionMajor_;
/*       */     
/*       */     public static final int FIRMWARE_VERSION_MINOR_FIELD_NUMBER = 5;
/*       */     
/*       */     private int firmwareVersionMinor_;
/*       */     
/*       */     public static final int FIRMWARE_VERSION_REVISION_FIELD_NUMBER = 6;
/*       */     
/*       */     private int firmwareVersionRevision_;
/*       */     private byte memoizedIsInitialized;
/*       */     
/*       */     private FirmwareUpdateResp(GeneratedMessageV3.Builder<?> builder)
/*       */     {
/* 17663 */       super(builder);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/* 17865 */       this.memoizedIsInitialized = -1; } private FirmwareUpdateResp() { this.memoizedIsInitialized = -1; this.response_ = 0; this.firmwareVersionName_ = ""; } protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) { return new FirmwareUpdateResp(); } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private FirmwareUpdateResp(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this(); if (extensionRegistry == null) throw new NullPointerException();  UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { int rawValue; String s; int tag = input.readTag(); switch (tag) { case 0: done = true; continue;case 8: this.firmwareID_ = input.readUInt32(); continue;case 16: rawValue = input.readEnum(); this.response_ = rawValue; continue;case 26: s = input.readStringRequireUtf8(); this.firmwareVersionName_ = s; continue;case 32: this.firmwareVersionMajor_ = input.readUInt32(); continue;case 40: this.firmwareVersionMinor_ = input.readUInt32(); continue;case 48: this.firmwareVersionRevision_ = input.readUInt32(); continue; }  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this); } finally { this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_FirmwareUpdateResp_descriptor; } protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() { return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_FirmwareUpdateResp_fieldAccessorTable.ensureFieldAccessorsInitialized(FirmwareUpdateResp.class, Builder.class); } public int getFirmwareID() { return this.firmwareID_; } public int getResponseValue() { return this.response_; } public DolphinMessages.FURespCode getResponse() { DolphinMessages.FURespCode result = DolphinMessages.FURespCode.valueOf(this.response_); return (result == null) ? DolphinMessages.FURespCode.UNRECOGNIZED : result; } public String getFirmwareVersionName() { Object ref = this.firmwareVersionName_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.firmwareVersionName_ = s; return s; } public ByteString getFirmwareVersionNameBytes() { Object ref = this.firmwareVersionName_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.firmwareVersionName_ = b; return b; }  return (ByteString)ref; } public int getFirmwareVersionMajor() { return this.firmwareVersionMajor_; }
/*       */     public int getFirmwareVersionMinor() { return this.firmwareVersionMinor_; }
/*       */     public int getFirmwareVersionRevision() { return this.firmwareVersionRevision_; }
/* 17868 */     public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized;
/* 17869 */       if (isInitialized == 1) return true; 
/* 17870 */       if (isInitialized == 0) return false;
/*       */       
/* 17872 */       this.memoizedIsInitialized = 1;
/* 17873 */       return true; }
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/* 17879 */       if (this.firmwareID_ != 0) {
/* 17880 */         output.writeUInt32(1, this.firmwareID_);
/*       */       }
/* 17882 */       if (this.response_ != DolphinMessages.FURespCode.FU_NONE.getNumber()) {
/* 17883 */         output.writeEnum(2, this.response_);
/*       */       }
/* 17885 */       if (!getFirmwareVersionNameBytes().isEmpty()) {
/* 17886 */         GeneratedMessageV3.writeString(output, 3, this.firmwareVersionName_);
/*       */       }
/* 17888 */       if (this.firmwareVersionMajor_ != 0) {
/* 17889 */         output.writeUInt32(4, this.firmwareVersionMajor_);
/*       */       }
/* 17891 */       if (this.firmwareVersionMinor_ != 0) {
/* 17892 */         output.writeUInt32(5, this.firmwareVersionMinor_);
/*       */       }
/* 17894 */       if (this.firmwareVersionRevision_ != 0) {
/* 17895 */         output.writeUInt32(6, this.firmwareVersionRevision_);
/*       */       }
/* 17897 */       this.unknownFields.writeTo(output);
/*       */     }
/*       */ 
/*       */     
/*       */     public int getSerializedSize() {
/* 17902 */       int size = this.memoizedSize;
/* 17903 */       if (size != -1) return size;
/*       */       
/* 17905 */       size = 0;
/* 17906 */       if (this.firmwareID_ != 0) {
/* 17907 */         size += 
/* 17908 */           CodedOutputStream.computeUInt32Size(1, this.firmwareID_);
/*       */       }
/* 17910 */       if (this.response_ != DolphinMessages.FURespCode.FU_NONE.getNumber()) {
/* 17911 */         size += 
/* 17912 */           CodedOutputStream.computeEnumSize(2, this.response_);
/*       */       }
/* 17914 */       if (!getFirmwareVersionNameBytes().isEmpty()) {
/* 17915 */         size += GeneratedMessageV3.computeStringSize(3, this.firmwareVersionName_);
/*       */       }
/* 17917 */       if (this.firmwareVersionMajor_ != 0) {
/* 17918 */         size += 
/* 17919 */           CodedOutputStream.computeUInt32Size(4, this.firmwareVersionMajor_);
/*       */       }
/* 17921 */       if (this.firmwareVersionMinor_ != 0) {
/* 17922 */         size += 
/* 17923 */           CodedOutputStream.computeUInt32Size(5, this.firmwareVersionMinor_);
/*       */       }
/* 17925 */       if (this.firmwareVersionRevision_ != 0) {
/* 17926 */         size += 
/* 17927 */           CodedOutputStream.computeUInt32Size(6, this.firmwareVersionRevision_);
/*       */       }
/* 17929 */       size += this.unknownFields.getSerializedSize();
/* 17930 */       this.memoizedSize = size;
/* 17931 */       return size;
/*       */     }
/*       */ 
/*       */     
/*       */     public boolean equals(Object obj) {
/* 17936 */       if (obj == this) {
/* 17937 */         return true;
/*       */       }
/* 17939 */       if (!(obj instanceof FirmwareUpdateResp)) {
/* 17940 */         return super.equals(obj);
/*       */       }
/* 17942 */       FirmwareUpdateResp other = (FirmwareUpdateResp)obj;
/*       */       
/* 17944 */       if (getFirmwareID() != other
/* 17945 */         .getFirmwareID()) return false; 
/* 17946 */       if (this.response_ != other.response_) return false;
/*       */       
/* 17948 */       if (!getFirmwareVersionName().equals(other.getFirmwareVersionName())) return false; 
/* 17949 */       if (getFirmwareVersionMajor() != other
/* 17950 */         .getFirmwareVersionMajor()) return false; 
/* 17951 */       if (getFirmwareVersionMinor() != other
/* 17952 */         .getFirmwareVersionMinor()) return false; 
/* 17953 */       if (getFirmwareVersionRevision() != other
/* 17954 */         .getFirmwareVersionRevision()) return false; 
/* 17955 */       if (!this.unknownFields.equals(other.unknownFields)) return false; 
/* 17956 */       return true;
/*       */     }
/*       */ 
/*       */     
/*       */     public int hashCode() {
/* 17961 */       if (this.memoizedHashCode != 0) {
/* 17962 */         return this.memoizedHashCode;
/*       */       }
/* 17964 */       int hash = 41;
/* 17965 */       hash = 19 * hash + getDescriptor().hashCode();
/* 17966 */       hash = 37 * hash + 1;
/* 17967 */       hash = 53 * hash + getFirmwareID();
/* 17968 */       hash = 37 * hash + 2;
/* 17969 */       hash = 53 * hash + this.response_;
/* 17970 */       hash = 37 * hash + 3;
/* 17971 */       hash = 53 * hash + getFirmwareVersionName().hashCode();
/* 17972 */       hash = 37 * hash + 4;
/* 17973 */       hash = 53 * hash + getFirmwareVersionMajor();
/* 17974 */       hash = 37 * hash + 5;
/* 17975 */       hash = 53 * hash + getFirmwareVersionMinor();
/* 17976 */       hash = 37 * hash + 6;
/* 17977 */       hash = 53 * hash + getFirmwareVersionRevision();
/* 17978 */       hash = 29 * hash + this.unknownFields.hashCode();
/* 17979 */       this.memoizedHashCode = hash;
/* 17980 */       return hash;
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static FirmwareUpdateResp parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
/* 17986 */       return (FirmwareUpdateResp)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static FirmwareUpdateResp parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 17992 */       return (FirmwareUpdateResp)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static FirmwareUpdateResp parseFrom(ByteString data) throws InvalidProtocolBufferException {
/* 17997 */       return (FirmwareUpdateResp)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static FirmwareUpdateResp parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 18003 */       return (FirmwareUpdateResp)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static FirmwareUpdateResp parseFrom(byte[] data) throws InvalidProtocolBufferException {
/* 18007 */       return (FirmwareUpdateResp)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static FirmwareUpdateResp parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 18013 */       return (FirmwareUpdateResp)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static FirmwareUpdateResp parseFrom(InputStream input) throws IOException {
/* 18017 */       return 
/* 18018 */         (FirmwareUpdateResp)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static FirmwareUpdateResp parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 18024 */       return 
/* 18025 */         (FirmwareUpdateResp)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static FirmwareUpdateResp parseDelimitedFrom(InputStream input) throws IOException {
/* 18029 */       return 
/* 18030 */         (FirmwareUpdateResp)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static FirmwareUpdateResp parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 18036 */       return 
/* 18037 */         (FirmwareUpdateResp)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static FirmwareUpdateResp parseFrom(CodedInputStream input) throws IOException {
/* 18042 */       return 
/* 18043 */         (FirmwareUpdateResp)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static FirmwareUpdateResp parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 18049 */       return 
/* 18050 */         (FirmwareUpdateResp)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public Builder newBuilderForType() {
/* 18054 */       return newBuilder();
/*       */     } public static Builder newBuilder() {
/* 18056 */       return DEFAULT_INSTANCE.toBuilder();
/*       */     }
/*       */     public static Builder newBuilder(FirmwareUpdateResp prototype) {
/* 18059 */       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
/*       */     }
/*       */     
/*       */     public Builder toBuilder() {
/* 18063 */       return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder())
/* 18064 */         .mergeFrom(this);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
/* 18070 */       Builder builder = new Builder(parent);
/* 18071 */       return builder;
/*       */     }
/*       */     
/*       */     public static final class Builder extends GeneratedMessageV3.Builder<Builder> implements DolphinMessages.FirmwareUpdateRespOrBuilder { private int firmwareID_;
/*       */       private int response_;
/*       */       private Object firmwareVersionName_;
/*       */       private int firmwareVersionMajor_;
/*       */       private int firmwareVersionMinor_;
/*       */       private int firmwareVersionRevision_;
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/* 18082 */         return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_FirmwareUpdateResp_descriptor;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
/* 18088 */         return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_FirmwareUpdateResp_fieldAccessorTable
/* 18089 */           .ensureFieldAccessorsInitialized(DolphinMessages.FirmwareUpdateResp.class, Builder.class);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private Builder()
/*       */       {
/* 18282 */         this.response_ = 0;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 18336 */         this.firmwareVersionName_ = ""; maybeForceBuilderInitialization(); } private Builder(GeneratedMessageV3.BuilderParent parent) { super(parent); this.response_ = 0; this.firmwareVersionName_ = ""; maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (DolphinMessages.FirmwareUpdateResp.alwaysUseFieldBuilders); } public Builder clear() { super.clear(); this.firmwareID_ = 0; this.response_ = 0; this.firmwareVersionName_ = ""; this.firmwareVersionMajor_ = 0; this.firmwareVersionMinor_ = 0; this.firmwareVersionRevision_ = 0; return this; } public Descriptors.Descriptor getDescriptorForType() { return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_FirmwareUpdateResp_descriptor; } public DolphinMessages.FirmwareUpdateResp getDefaultInstanceForType() { return DolphinMessages.FirmwareUpdateResp.getDefaultInstance(); } public DolphinMessages.FirmwareUpdateResp build() { DolphinMessages.FirmwareUpdateResp result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public DolphinMessages.FirmwareUpdateResp buildPartial() { DolphinMessages.FirmwareUpdateResp result = new DolphinMessages.FirmwareUpdateResp(this); result.firmwareID_ = this.firmwareID_; result.response_ = this.response_; result.firmwareVersionName_ = this.firmwareVersionName_; result.firmwareVersionMajor_ = this.firmwareVersionMajor_; result.firmwareVersionMinor_ = this.firmwareVersionMinor_; result.firmwareVersionRevision_ = this.firmwareVersionRevision_; onBuilt(); return result; } public Builder clone() { return (Builder)super.clone(); } public Builder setField(Descriptors.FieldDescriptor field, Object value) { return (Builder)super.setField(field, value); } public Builder clearField(Descriptors.FieldDescriptor field) { return (Builder)super.clearField(field); } public Builder clearOneof(Descriptors.OneofDescriptor oneof) { return (Builder)super.clearOneof(oneof); } public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) { return (Builder)super.setRepeatedField(field, index, value); } public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) { return (Builder)super.addRepeatedField(field, value); } public Builder mergeFrom(Message other) { if (other instanceof DolphinMessages.FirmwareUpdateResp) return mergeFrom((DolphinMessages.FirmwareUpdateResp)other);  super.mergeFrom(other); return this; } public Builder mergeFrom(DolphinMessages.FirmwareUpdateResp other) { if (other == DolphinMessages.FirmwareUpdateResp.getDefaultInstance()) return this;  if (other.getFirmwareID() != 0) setFirmwareID(other.getFirmwareID());  if (other.response_ != 0) setResponseValue(other.getResponseValue());  if (!other.getFirmwareVersionName().isEmpty()) { this.firmwareVersionName_ = other.firmwareVersionName_; onChanged(); }  if (other.getFirmwareVersionMajor() != 0) setFirmwareVersionMajor(other.getFirmwareVersionMajor());  if (other.getFirmwareVersionMinor() != 0) setFirmwareVersionMinor(other.getFirmwareVersionMinor());  if (other.getFirmwareVersionRevision() != 0) setFirmwareVersionRevision(other.getFirmwareVersionRevision());  mergeUnknownFields(other.unknownFields); onChanged(); return this; } public final boolean isInitialized() { return true; } public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { DolphinMessages.FirmwareUpdateResp parsedMessage = null; try { parsedMessage = (DolphinMessages.FirmwareUpdateResp)DolphinMessages.FirmwareUpdateResp.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (DolphinMessages.FirmwareUpdateResp)e.getUnfinishedMessage(); throw e.unwrapIOException(); } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; } public int getFirmwareID() { return this.firmwareID_; } public Builder setFirmwareID(int value) { this.firmwareID_ = value; onChanged(); return this; } public Builder clearFirmwareID() { this.firmwareID_ = 0; onChanged(); return this; }
/*       */       public int getResponseValue() { return this.response_; }
/*       */       public Builder setResponseValue(int value) { this.response_ = value; onChanged(); return this; }
/*       */       public DolphinMessages.FURespCode getResponse() { DolphinMessages.FURespCode result = DolphinMessages.FURespCode.valueOf(this.response_); return (result == null) ? DolphinMessages.FURespCode.UNRECOGNIZED : result; }
/*       */       public Builder setResponse(DolphinMessages.FURespCode value) { if (value == null) throw new NullPointerException();  this.response_ = value.getNumber(); onChanged(); return this; }
/*       */       public Builder clearResponse() { this.response_ = 0; onChanged(); return this; }
/* 18342 */       public String getFirmwareVersionName() { Object ref = this.firmwareVersionName_;
/* 18343 */         if (!(ref instanceof String)) {
/* 18344 */           ByteString bs = (ByteString)ref;
/*       */           
/* 18346 */           String s = bs.toStringUtf8();
/* 18347 */           this.firmwareVersionName_ = s;
/* 18348 */           return s;
/*       */         } 
/* 18350 */         return (String)ref; }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public ByteString getFirmwareVersionNameBytes() {
/* 18359 */         Object ref = this.firmwareVersionName_;
/* 18360 */         if (ref instanceof String) {
/*       */           
/* 18362 */           ByteString b = ByteString.copyFromUtf8((String)ref);
/*       */           
/* 18364 */           this.firmwareVersionName_ = b;
/* 18365 */           return b;
/*       */         } 
/* 18367 */         return (ByteString)ref;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setFirmwareVersionName(String value) {
/* 18377 */         if (value == null) {
/* 18378 */           throw new NullPointerException();
/*       */         }
/*       */         
/* 18381 */         this.firmwareVersionName_ = value;
/* 18382 */         onChanged();
/* 18383 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearFirmwareVersionName() {
/* 18391 */         this.firmwareVersionName_ = DolphinMessages.FirmwareUpdateResp.getDefaultInstance().getFirmwareVersionName();
/* 18392 */         onChanged();
/* 18393 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setFirmwareVersionNameBytes(ByteString value) {
/* 18402 */         if (value == null) {
/* 18403 */           throw new NullPointerException();
/*       */         }
/* 18405 */         DolphinMessages.FirmwareUpdateResp.checkByteStringIsUtf8(value);
/*       */         
/* 18407 */         this.firmwareVersionName_ = value;
/* 18408 */         onChanged();
/* 18409 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getFirmwareVersionMajor() {
/* 18419 */         return this.firmwareVersionMajor_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setFirmwareVersionMajor(int value) {
/* 18428 */         this.firmwareVersionMajor_ = value;
/* 18429 */         onChanged();
/* 18430 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearFirmwareVersionMajor() {
/* 18438 */         this.firmwareVersionMajor_ = 0;
/* 18439 */         onChanged();
/* 18440 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getFirmwareVersionMinor() {
/* 18450 */         return this.firmwareVersionMinor_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setFirmwareVersionMinor(int value) {
/* 18459 */         this.firmwareVersionMinor_ = value;
/* 18460 */         onChanged();
/* 18461 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearFirmwareVersionMinor() {
/* 18469 */         this.firmwareVersionMinor_ = 0;
/* 18470 */         onChanged();
/* 18471 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getFirmwareVersionRevision() {
/* 18481 */         return this.firmwareVersionRevision_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setFirmwareVersionRevision(int value) {
/* 18490 */         this.firmwareVersionRevision_ = value;
/* 18491 */         onChanged();
/* 18492 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearFirmwareVersionRevision() {
/* 18500 */         this.firmwareVersionRevision_ = 0;
/* 18501 */         onChanged();
/* 18502 */         return this;
/*       */       }
/*       */ 
/*       */       
/*       */       public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
/* 18507 */         return (Builder)super.setUnknownFields(unknownFields);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
/* 18513 */         return (Builder)super.mergeUnknownFields(unknownFields);
/*       */       } }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 18523 */     private static final FirmwareUpdateResp DEFAULT_INSTANCE = new FirmwareUpdateResp();
/*       */ 
/*       */     
/*       */     public static FirmwareUpdateResp getDefaultInstance() {
/* 18527 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */ 
/*       */     
/* 18531 */     private static final Parser<FirmwareUpdateResp> PARSER = (Parser<FirmwareUpdateResp>)new AbstractParser<FirmwareUpdateResp>()
/*       */       {
/*       */ 
/*       */         
/*       */         public DolphinMessages.FirmwareUpdateResp parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException
/*       */         {
/* 18537 */           return new DolphinMessages.FirmwareUpdateResp(input, extensionRegistry);
/*       */         }
/*       */       };
/*       */     
/*       */     public static Parser<FirmwareUpdateResp> parser() {
/* 18542 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public Parser<FirmwareUpdateResp> getParserForType() {
/* 18547 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public FirmwareUpdateResp getDefaultInstanceForType() {
/* 18552 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */   }
/*       */ 
/*       */ 
/*       */   
/*       */   public static interface FUStartDataOrBuilder
/*       */     extends MessageOrBuilder
/*       */   {
/*       */     int getFirmwareID();
/*       */ 
/*       */ 
/*       */     
/*       */     int getTotalSize();
/*       */   }
/*       */ 
/*       */ 
/*       */   
/*       */   public static final class FUStartData
/*       */     extends GeneratedMessageV3
/*       */     implements FUStartDataOrBuilder
/*       */   {
/*       */     private static final long serialVersionUID = 0L;
/*       */ 
/*       */     
/*       */     public static final int FIRMWAREID_FIELD_NUMBER = 1;
/*       */ 
/*       */     
/*       */     private int firmwareID_;
/*       */     
/*       */     public static final int TOTALSIZE_FIELD_NUMBER = 2;
/*       */     
/*       */     private int totalSize_;
/*       */     
/*       */     private byte memoizedIsInitialized;
/*       */ 
/*       */     
/*       */     private FUStartData(GeneratedMessageV3.Builder<?> builder)
/*       */     {
/* 18591 */       super(builder);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/* 18698 */       this.memoizedIsInitialized = -1; } private FUStartData() { this.memoizedIsInitialized = -1; } protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) { return new FUStartData(); } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private FUStartData(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this(); if (extensionRegistry == null) throw new NullPointerException();  UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { int tag = input.readTag(); switch (tag) { case 0: done = true; continue;case 8: this.firmwareID_ = input.readUInt32(); continue;case 16: this.totalSize_ = input.readUInt32(); continue; }  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this); } finally { this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_FUStartData_descriptor; } protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() { return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_FUStartData_fieldAccessorTable.ensureFieldAccessorsInitialized(FUStartData.class, Builder.class); }
/*       */     public int getFirmwareID() { return this.firmwareID_; }
/*       */     public int getTotalSize() { return this.totalSize_; }
/* 18701 */     public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized;
/* 18702 */       if (isInitialized == 1) return true; 
/* 18703 */       if (isInitialized == 0) return false;
/*       */       
/* 18705 */       this.memoizedIsInitialized = 1;
/* 18706 */       return true; }
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/* 18712 */       if (this.firmwareID_ != 0) {
/* 18713 */         output.writeUInt32(1, this.firmwareID_);
/*       */       }
/* 18715 */       if (this.totalSize_ != 0) {
/* 18716 */         output.writeUInt32(2, this.totalSize_);
/*       */       }
/* 18718 */       this.unknownFields.writeTo(output);
/*       */     }
/*       */ 
/*       */     
/*       */     public int getSerializedSize() {
/* 18723 */       int size = this.memoizedSize;
/* 18724 */       if (size != -1) return size;
/*       */       
/* 18726 */       size = 0;
/* 18727 */       if (this.firmwareID_ != 0) {
/* 18728 */         size += 
/* 18729 */           CodedOutputStream.computeUInt32Size(1, this.firmwareID_);
/*       */       }
/* 18731 */       if (this.totalSize_ != 0) {
/* 18732 */         size += 
/* 18733 */           CodedOutputStream.computeUInt32Size(2, this.totalSize_);
/*       */       }
/* 18735 */       size += this.unknownFields.getSerializedSize();
/* 18736 */       this.memoizedSize = size;
/* 18737 */       return size;
/*       */     }
/*       */ 
/*       */     
/*       */     public boolean equals(Object obj) {
/* 18742 */       if (obj == this) {
/* 18743 */         return true;
/*       */       }
/* 18745 */       if (!(obj instanceof FUStartData)) {
/* 18746 */         return super.equals(obj);
/*       */       }
/* 18748 */       FUStartData other = (FUStartData)obj;
/*       */       
/* 18750 */       if (getFirmwareID() != other
/* 18751 */         .getFirmwareID()) return false; 
/* 18752 */       if (getTotalSize() != other
/* 18753 */         .getTotalSize()) return false; 
/* 18754 */       if (!this.unknownFields.equals(other.unknownFields)) return false; 
/* 18755 */       return true;
/*       */     }
/*       */ 
/*       */     
/*       */     public int hashCode() {
/* 18760 */       if (this.memoizedHashCode != 0) {
/* 18761 */         return this.memoizedHashCode;
/*       */       }
/* 18763 */       int hash = 41;
/* 18764 */       hash = 19 * hash + getDescriptor().hashCode();
/* 18765 */       hash = 37 * hash + 1;
/* 18766 */       hash = 53 * hash + getFirmwareID();
/* 18767 */       hash = 37 * hash + 2;
/* 18768 */       hash = 53 * hash + getTotalSize();
/* 18769 */       hash = 29 * hash + this.unknownFields.hashCode();
/* 18770 */       this.memoizedHashCode = hash;
/* 18771 */       return hash;
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static FUStartData parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
/* 18777 */       return (FUStartData)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static FUStartData parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 18783 */       return (FUStartData)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static FUStartData parseFrom(ByteString data) throws InvalidProtocolBufferException {
/* 18788 */       return (FUStartData)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static FUStartData parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 18794 */       return (FUStartData)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static FUStartData parseFrom(byte[] data) throws InvalidProtocolBufferException {
/* 18798 */       return (FUStartData)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static FUStartData parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 18804 */       return (FUStartData)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static FUStartData parseFrom(InputStream input) throws IOException {
/* 18808 */       return 
/* 18809 */         (FUStartData)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static FUStartData parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 18815 */       return 
/* 18816 */         (FUStartData)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static FUStartData parseDelimitedFrom(InputStream input) throws IOException {
/* 18820 */       return 
/* 18821 */         (FUStartData)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static FUStartData parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 18827 */       return 
/* 18828 */         (FUStartData)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static FUStartData parseFrom(CodedInputStream input) throws IOException {
/* 18833 */       return 
/* 18834 */         (FUStartData)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static FUStartData parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 18840 */       return 
/* 18841 */         (FUStartData)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public Builder newBuilderForType() {
/* 18845 */       return newBuilder();
/*       */     } public static Builder newBuilder() {
/* 18847 */       return DEFAULT_INSTANCE.toBuilder();
/*       */     }
/*       */     public static Builder newBuilder(FUStartData prototype) {
/* 18850 */       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
/*       */     }
/*       */     
/*       */     public Builder toBuilder() {
/* 18854 */       return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder())
/* 18855 */         .mergeFrom(this);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
/* 18861 */       Builder builder = new Builder(parent);
/* 18862 */       return builder;
/*       */     }
/*       */     
/*       */     public static final class Builder
/*       */       extends GeneratedMessageV3.Builder<Builder>
/*       */       implements DolphinMessages.FUStartDataOrBuilder
/*       */     {
/*       */       private int firmwareID_;
/*       */       private int totalSize_;
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/* 18873 */         return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_FUStartData_descriptor;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
/* 18879 */         return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_FUStartData_fieldAccessorTable
/* 18880 */           .ensureFieldAccessorsInitialized(DolphinMessages.FUStartData.class, Builder.class);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       private Builder() {
/* 18886 */         maybeForceBuilderInitialization();
/*       */       }
/*       */ 
/*       */       
/*       */       private Builder(GeneratedMessageV3.BuilderParent parent) {
/* 18891 */         super(parent);
/* 18892 */         maybeForceBuilderInitialization();
/*       */       }
/*       */       
/*       */       private void maybeForceBuilderInitialization() {
/* 18896 */         if (DolphinMessages.FUStartData.alwaysUseFieldBuilders);
/*       */       }
/*       */ 
/*       */       
/*       */       public Builder clear() {
/* 18901 */         super.clear();
/* 18902 */         this.firmwareID_ = 0;
/*       */         
/* 18904 */         this.totalSize_ = 0;
/*       */         
/* 18906 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Descriptors.Descriptor getDescriptorForType() {
/* 18912 */         return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_FUStartData_descriptor;
/*       */       }
/*       */ 
/*       */       
/*       */       public DolphinMessages.FUStartData getDefaultInstanceForType() {
/* 18917 */         return DolphinMessages.FUStartData.getDefaultInstance();
/*       */       }
/*       */ 
/*       */       
/*       */       public DolphinMessages.FUStartData build() {
/* 18922 */         DolphinMessages.FUStartData result = buildPartial();
/* 18923 */         if (!result.isInitialized()) {
/* 18924 */           throw newUninitializedMessageException(result);
/*       */         }
/* 18926 */         return result;
/*       */       }
/*       */ 
/*       */       
/*       */       public DolphinMessages.FUStartData buildPartial() {
/* 18931 */         DolphinMessages.FUStartData result = new DolphinMessages.FUStartData(this);
/* 18932 */         result.firmwareID_ = this.firmwareID_;
/* 18933 */         result.totalSize_ = this.totalSize_;
/* 18934 */         onBuilt();
/* 18935 */         return result;
/*       */       }
/*       */ 
/*       */       
/*       */       public Builder clone() {
/* 18940 */         return (Builder)super.clone();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setField(Descriptors.FieldDescriptor field, Object value) {
/* 18946 */         return (Builder)super.setField(field, value);
/*       */       }
/*       */ 
/*       */       
/*       */       public Builder clearField(Descriptors.FieldDescriptor field) {
/* 18951 */         return (Builder)super.clearField(field);
/*       */       }
/*       */ 
/*       */       
/*       */       public Builder clearOneof(Descriptors.OneofDescriptor oneof) {
/* 18956 */         return (Builder)super.clearOneof(oneof);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
/* 18962 */         return (Builder)super.setRepeatedField(field, index, value);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
/* 18968 */         return (Builder)super.addRepeatedField(field, value);
/*       */       }
/*       */       
/*       */       public Builder mergeFrom(Message other) {
/* 18972 */         if (other instanceof DolphinMessages.FUStartData) {
/* 18973 */           return mergeFrom((DolphinMessages.FUStartData)other);
/*       */         }
/* 18975 */         super.mergeFrom(other);
/* 18976 */         return this;
/*       */       }
/*       */ 
/*       */       
/*       */       public Builder mergeFrom(DolphinMessages.FUStartData other) {
/* 18981 */         if (other == DolphinMessages.FUStartData.getDefaultInstance()) return this; 
/* 18982 */         if (other.getFirmwareID() != 0) {
/* 18983 */           setFirmwareID(other.getFirmwareID());
/*       */         }
/* 18985 */         if (other.getTotalSize() != 0) {
/* 18986 */           setTotalSize(other.getTotalSize());
/*       */         }
/* 18988 */         mergeUnknownFields(other.unknownFields);
/* 18989 */         onChanged();
/* 18990 */         return this;
/*       */       }
/*       */ 
/*       */       
/*       */       public final boolean isInitialized() {
/* 18995 */         return true;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 19003 */         DolphinMessages.FUStartData parsedMessage = null;
/*       */         try {
/* 19005 */           parsedMessage = (DolphinMessages.FUStartData)DolphinMessages.FUStartData.PARSER.parsePartialFrom(input, extensionRegistry);
/* 19006 */         } catch (InvalidProtocolBufferException e) {
/* 19007 */           parsedMessage = (DolphinMessages.FUStartData)e.getUnfinishedMessage();
/* 19008 */           throw e.unwrapIOException();
/*       */         } finally {
/* 19010 */           if (parsedMessage != null) {
/* 19011 */             mergeFrom(parsedMessage);
/*       */           }
/*       */         } 
/* 19014 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getFirmwareID() {
/* 19028 */         return this.firmwareID_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setFirmwareID(int value) {
/* 19041 */         this.firmwareID_ = value;
/* 19042 */         onChanged();
/* 19043 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearFirmwareID() {
/* 19055 */         this.firmwareID_ = 0;
/* 19056 */         onChanged();
/* 19057 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getTotalSize() {
/* 19071 */         return this.totalSize_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setTotalSize(int value) {
/* 19084 */         this.totalSize_ = value;
/* 19085 */         onChanged();
/* 19086 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearTotalSize() {
/* 19098 */         this.totalSize_ = 0;
/* 19099 */         onChanged();
/* 19100 */         return this;
/*       */       }
/*       */ 
/*       */       
/*       */       public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
/* 19105 */         return (Builder)super.setUnknownFields(unknownFields);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
/* 19111 */         return (Builder)super.mergeUnknownFields(unknownFields);
/*       */       }
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 19121 */     private static final FUStartData DEFAULT_INSTANCE = new FUStartData();
/*       */ 
/*       */     
/*       */     public static FUStartData getDefaultInstance() {
/* 19125 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */ 
/*       */     
/* 19129 */     private static final Parser<FUStartData> PARSER = (Parser<FUStartData>)new AbstractParser<FUStartData>()
/*       */       {
/*       */ 
/*       */         
/*       */         public DolphinMessages.FUStartData parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException
/*       */         {
/* 19135 */           return new DolphinMessages.FUStartData(input, extensionRegistry);
/*       */         }
/*       */       };
/*       */     
/*       */     public static Parser<FUStartData> parser() {
/* 19140 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public Parser<FUStartData> getParserForType() {
/* 19145 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public FUStartData getDefaultInstanceForType() {
/* 19150 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */   }
/*       */ 
/*       */   
/*       */   public static interface FUPackRequestOrBuilder
/*       */     extends MessageOrBuilder
/*       */   {
/*       */     int getFirmwareID();
/*       */ 
/*       */     
/*       */     int getStart();
/*       */ 
/*       */     
/*       */     int getEnd();
/*       */   }
/*       */ 
/*       */   
/*       */   public static final class FUPackRequest
/*       */     extends GeneratedMessageV3
/*       */     implements FUPackRequestOrBuilder
/*       */   {
/*       */     private static final long serialVersionUID = 0L;
/*       */     
/*       */     public static final int FIRMWAREID_FIELD_NUMBER = 1;
/*       */     
/*       */     private int firmwareID_;
/*       */     
/*       */     public static final int START_FIELD_NUMBER = 2;
/*       */     
/*       */     private int start_;
/*       */     public static final int END_FIELD_NUMBER = 3;
/*       */     private int end_;
/*       */     private byte memoizedIsInitialized;
/*       */     
/*       */     private FUPackRequest(GeneratedMessageV3.Builder<?> builder)
/*       */     {
/* 19187 */       super(builder);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/* 19302 */       this.memoizedIsInitialized = -1; } private FUPackRequest() { this.memoizedIsInitialized = -1; } protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) { return new FUPackRequest(); } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private FUPackRequest(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this(); if (extensionRegistry == null) throw new NullPointerException();  UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { int tag = input.readTag(); switch (tag) { case 0: done = true; continue;case 8: this.firmwareID_ = input.readUInt32(); continue;case 16: this.start_ = input.readUInt32(); continue;case 24: this.end_ = input.readUInt32(); continue; }  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this); } finally { this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_FUPackRequest_descriptor; } protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() { return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_FUPackRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(FUPackRequest.class, Builder.class); } public int getFirmwareID() { return this.firmwareID_; }
/*       */     public int getStart() { return this.start_; }
/*       */     public int getEnd() { return this.end_; }
/* 19305 */     public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized;
/* 19306 */       if (isInitialized == 1) return true; 
/* 19307 */       if (isInitialized == 0) return false;
/*       */       
/* 19309 */       this.memoizedIsInitialized = 1;
/* 19310 */       return true; }
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/* 19316 */       if (this.firmwareID_ != 0) {
/* 19317 */         output.writeUInt32(1, this.firmwareID_);
/*       */       }
/* 19319 */       if (this.start_ != 0) {
/* 19320 */         output.writeUInt32(2, this.start_);
/*       */       }
/* 19322 */       if (this.end_ != 0) {
/* 19323 */         output.writeUInt32(3, this.end_);
/*       */       }
/* 19325 */       this.unknownFields.writeTo(output);
/*       */     }
/*       */ 
/*       */     
/*       */     public int getSerializedSize() {
/* 19330 */       int size = this.memoizedSize;
/* 19331 */       if (size != -1) return size;
/*       */       
/* 19333 */       size = 0;
/* 19334 */       if (this.firmwareID_ != 0) {
/* 19335 */         size += 
/* 19336 */           CodedOutputStream.computeUInt32Size(1, this.firmwareID_);
/*       */       }
/* 19338 */       if (this.start_ != 0) {
/* 19339 */         size += 
/* 19340 */           CodedOutputStream.computeUInt32Size(2, this.start_);
/*       */       }
/* 19342 */       if (this.end_ != 0) {
/* 19343 */         size += 
/* 19344 */           CodedOutputStream.computeUInt32Size(3, this.end_);
/*       */       }
/* 19346 */       size += this.unknownFields.getSerializedSize();
/* 19347 */       this.memoizedSize = size;
/* 19348 */       return size;
/*       */     }
/*       */ 
/*       */     
/*       */     public boolean equals(Object obj) {
/* 19353 */       if (obj == this) {
/* 19354 */         return true;
/*       */       }
/* 19356 */       if (!(obj instanceof FUPackRequest)) {
/* 19357 */         return super.equals(obj);
/*       */       }
/* 19359 */       FUPackRequest other = (FUPackRequest)obj;
/*       */       
/* 19361 */       if (getFirmwareID() != other
/* 19362 */         .getFirmwareID()) return false; 
/* 19363 */       if (getStart() != other
/* 19364 */         .getStart()) return false; 
/* 19365 */       if (getEnd() != other
/* 19366 */         .getEnd()) return false; 
/* 19367 */       if (!this.unknownFields.equals(other.unknownFields)) return false; 
/* 19368 */       return true;
/*       */     }
/*       */ 
/*       */     
/*       */     public int hashCode() {
/* 19373 */       if (this.memoizedHashCode != 0) {
/* 19374 */         return this.memoizedHashCode;
/*       */       }
/* 19376 */       int hash = 41;
/* 19377 */       hash = 19 * hash + getDescriptor().hashCode();
/* 19378 */       hash = 37 * hash + 1;
/* 19379 */       hash = 53 * hash + getFirmwareID();
/* 19380 */       hash = 37 * hash + 2;
/* 19381 */       hash = 53 * hash + getStart();
/* 19382 */       hash = 37 * hash + 3;
/* 19383 */       hash = 53 * hash + getEnd();
/* 19384 */       hash = 29 * hash + this.unknownFields.hashCode();
/* 19385 */       this.memoizedHashCode = hash;
/* 19386 */       return hash;
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static FUPackRequest parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
/* 19392 */       return (FUPackRequest)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static FUPackRequest parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 19398 */       return (FUPackRequest)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static FUPackRequest parseFrom(ByteString data) throws InvalidProtocolBufferException {
/* 19403 */       return (FUPackRequest)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static FUPackRequest parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 19409 */       return (FUPackRequest)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static FUPackRequest parseFrom(byte[] data) throws InvalidProtocolBufferException {
/* 19413 */       return (FUPackRequest)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static FUPackRequest parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 19419 */       return (FUPackRequest)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static FUPackRequest parseFrom(InputStream input) throws IOException {
/* 19423 */       return 
/* 19424 */         (FUPackRequest)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static FUPackRequest parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 19430 */       return 
/* 19431 */         (FUPackRequest)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static FUPackRequest parseDelimitedFrom(InputStream input) throws IOException {
/* 19435 */       return 
/* 19436 */         (FUPackRequest)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static FUPackRequest parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 19442 */       return 
/* 19443 */         (FUPackRequest)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static FUPackRequest parseFrom(CodedInputStream input) throws IOException {
/* 19448 */       return 
/* 19449 */         (FUPackRequest)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static FUPackRequest parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 19455 */       return 
/* 19456 */         (FUPackRequest)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public Builder newBuilderForType() {
/* 19460 */       return newBuilder();
/*       */     } public static Builder newBuilder() {
/* 19462 */       return DEFAULT_INSTANCE.toBuilder();
/*       */     }
/*       */     public static Builder newBuilder(FUPackRequest prototype) {
/* 19465 */       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
/*       */     }
/*       */     
/*       */     public Builder toBuilder() {
/* 19469 */       return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder())
/* 19470 */         .mergeFrom(this);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
/* 19476 */       Builder builder = new Builder(parent);
/* 19477 */       return builder;
/*       */     }
/*       */     
/*       */     public static final class Builder
/*       */       extends GeneratedMessageV3.Builder<Builder>
/*       */       implements DolphinMessages.FUPackRequestOrBuilder {
/*       */       private int firmwareID_;
/*       */       private int start_;
/*       */       private int end_;
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/* 19488 */         return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_FUPackRequest_descriptor;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
/* 19494 */         return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_FUPackRequest_fieldAccessorTable
/* 19495 */           .ensureFieldAccessorsInitialized(DolphinMessages.FUPackRequest.class, Builder.class);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       private Builder() {
/* 19501 */         maybeForceBuilderInitialization();
/*       */       }
/*       */ 
/*       */       
/*       */       private Builder(GeneratedMessageV3.BuilderParent parent) {
/* 19506 */         super(parent);
/* 19507 */         maybeForceBuilderInitialization();
/*       */       }
/*       */       
/*       */       private void maybeForceBuilderInitialization() {
/* 19511 */         if (DolphinMessages.FUPackRequest.alwaysUseFieldBuilders);
/*       */       }
/*       */ 
/*       */       
/*       */       public Builder clear() {
/* 19516 */         super.clear();
/* 19517 */         this.firmwareID_ = 0;
/*       */         
/* 19519 */         this.start_ = 0;
/*       */         
/* 19521 */         this.end_ = 0;
/*       */         
/* 19523 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Descriptors.Descriptor getDescriptorForType() {
/* 19529 */         return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_FUPackRequest_descriptor;
/*       */       }
/*       */ 
/*       */       
/*       */       public DolphinMessages.FUPackRequest getDefaultInstanceForType() {
/* 19534 */         return DolphinMessages.FUPackRequest.getDefaultInstance();
/*       */       }
/*       */ 
/*       */       
/*       */       public DolphinMessages.FUPackRequest build() {
/* 19539 */         DolphinMessages.FUPackRequest result = buildPartial();
/* 19540 */         if (!result.isInitialized()) {
/* 19541 */           throw newUninitializedMessageException(result);
/*       */         }
/* 19543 */         return result;
/*       */       }
/*       */ 
/*       */       
/*       */       public DolphinMessages.FUPackRequest buildPartial() {
/* 19548 */         DolphinMessages.FUPackRequest result = new DolphinMessages.FUPackRequest(this);
/* 19549 */         result.firmwareID_ = this.firmwareID_;
/* 19550 */         result.start_ = this.start_;
/* 19551 */         result.end_ = this.end_;
/* 19552 */         onBuilt();
/* 19553 */         return result;
/*       */       }
/*       */ 
/*       */       
/*       */       public Builder clone() {
/* 19558 */         return (Builder)super.clone();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setField(Descriptors.FieldDescriptor field, Object value) {
/* 19564 */         return (Builder)super.setField(field, value);
/*       */       }
/*       */ 
/*       */       
/*       */       public Builder clearField(Descriptors.FieldDescriptor field) {
/* 19569 */         return (Builder)super.clearField(field);
/*       */       }
/*       */ 
/*       */       
/*       */       public Builder clearOneof(Descriptors.OneofDescriptor oneof) {
/* 19574 */         return (Builder)super.clearOneof(oneof);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
/* 19580 */         return (Builder)super.setRepeatedField(field, index, value);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
/* 19586 */         return (Builder)super.addRepeatedField(field, value);
/*       */       }
/*       */       
/*       */       public Builder mergeFrom(Message other) {
/* 19590 */         if (other instanceof DolphinMessages.FUPackRequest) {
/* 19591 */           return mergeFrom((DolphinMessages.FUPackRequest)other);
/*       */         }
/* 19593 */         super.mergeFrom(other);
/* 19594 */         return this;
/*       */       }
/*       */ 
/*       */       
/*       */       public Builder mergeFrom(DolphinMessages.FUPackRequest other) {
/* 19599 */         if (other == DolphinMessages.FUPackRequest.getDefaultInstance()) return this; 
/* 19600 */         if (other.getFirmwareID() != 0) {
/* 19601 */           setFirmwareID(other.getFirmwareID());
/*       */         }
/* 19603 */         if (other.getStart() != 0) {
/* 19604 */           setStart(other.getStart());
/*       */         }
/* 19606 */         if (other.getEnd() != 0) {
/* 19607 */           setEnd(other.getEnd());
/*       */         }
/* 19609 */         mergeUnknownFields(other.unknownFields);
/* 19610 */         onChanged();
/* 19611 */         return this;
/*       */       }
/*       */ 
/*       */       
/*       */       public final boolean isInitialized() {
/* 19616 */         return true;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 19624 */         DolphinMessages.FUPackRequest parsedMessage = null;
/*       */         try {
/* 19626 */           parsedMessage = (DolphinMessages.FUPackRequest)DolphinMessages.FUPackRequest.PARSER.parsePartialFrom(input, extensionRegistry);
/* 19627 */         } catch (InvalidProtocolBufferException e) {
/* 19628 */           parsedMessage = (DolphinMessages.FUPackRequest)e.getUnfinishedMessage();
/* 19629 */           throw e.unwrapIOException();
/*       */         } finally {
/* 19631 */           if (parsedMessage != null) {
/* 19632 */             mergeFrom(parsedMessage);
/*       */           }
/*       */         } 
/* 19635 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getFirmwareID() {
/* 19645 */         return this.firmwareID_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setFirmwareID(int value) {
/* 19654 */         this.firmwareID_ = value;
/* 19655 */         onChanged();
/* 19656 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearFirmwareID() {
/* 19664 */         this.firmwareID_ = 0;
/* 19665 */         onChanged();
/* 19666 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getStart() {
/* 19676 */         return this.start_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setStart(int value) {
/* 19685 */         this.start_ = value;
/* 19686 */         onChanged();
/* 19687 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearStart() {
/* 19695 */         this.start_ = 0;
/* 19696 */         onChanged();
/* 19697 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getEnd() {
/* 19707 */         return this.end_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setEnd(int value) {
/* 19716 */         this.end_ = value;
/* 19717 */         onChanged();
/* 19718 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearEnd() {
/* 19726 */         this.end_ = 0;
/* 19727 */         onChanged();
/* 19728 */         return this;
/*       */       }
/*       */ 
/*       */       
/*       */       public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
/* 19733 */         return (Builder)super.setUnknownFields(unknownFields);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
/* 19739 */         return (Builder)super.mergeUnknownFields(unknownFields);
/*       */       }
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 19749 */     private static final FUPackRequest DEFAULT_INSTANCE = new FUPackRequest();
/*       */ 
/*       */     
/*       */     public static FUPackRequest getDefaultInstance() {
/* 19753 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */ 
/*       */     
/* 19757 */     private static final Parser<FUPackRequest> PARSER = (Parser<FUPackRequest>)new AbstractParser<FUPackRequest>()
/*       */       {
/*       */ 
/*       */         
/*       */         public DolphinMessages.FUPackRequest parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException
/*       */         {
/* 19763 */           return new DolphinMessages.FUPackRequest(input, extensionRegistry);
/*       */         }
/*       */       };
/*       */     
/*       */     public static Parser<FUPackRequest> parser() {
/* 19768 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public Parser<FUPackRequest> getParserForType() {
/* 19773 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public FUPackRequest getDefaultInstanceForType() {
/* 19778 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */   }
/*       */ 
/*       */   
/*       */   public static interface FUPacketOrBuilder
/*       */     extends MessageOrBuilder
/*       */   {
/*       */     int getFirmwareID();
/*       */ 
/*       */     
/*       */     int getResponseValue();
/*       */ 
/*       */     
/*       */     DolphinMessages.FURespCode getResponse();
/*       */ 
/*       */     
/*       */     int getStart();
/*       */ 
/*       */     
/*       */     int getEnd();
/*       */ 
/*       */     
/*       */     ByteString getData();
/*       */   }
/*       */ 
/*       */   
/*       */   public static final class FUPacket
/*       */     extends GeneratedMessageV3
/*       */     implements FUPacketOrBuilder
/*       */   {
/*       */     private static final long serialVersionUID = 0L;
/*       */     
/*       */     public static final int FIRMWAREID_FIELD_NUMBER = 1;
/*       */     
/*       */     private int firmwareID_;
/*       */     
/*       */     public static final int RESPONSE_FIELD_NUMBER = 2;
/*       */     
/*       */     private int response_;
/*       */     
/*       */     public static final int START_FIELD_NUMBER = 3;
/*       */     
/*       */     private int start_;
/*       */     
/*       */     public static final int END_FIELD_NUMBER = 4;
/*       */     
/*       */     private int end_;
/*       */     public static final int DATA_FIELD_NUMBER = 5;
/*       */     private ByteString data_;
/*       */     private byte memoizedIsInitialized;
/*       */     
/*       */     private FUPacket(GeneratedMessageV3.Builder<?> builder)
/*       */     {
/* 19832 */       super(builder);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/* 19990 */       this.memoizedIsInitialized = -1; } private FUPacket() { this.memoizedIsInitialized = -1; this.response_ = 0; this.data_ = ByteString.EMPTY; } protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) { return new FUPacket(); } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private FUPacket(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this(); if (extensionRegistry == null) throw new NullPointerException();  UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { int rawValue, tag = input.readTag(); switch (tag) { case 0: done = true; continue;case 8: this.firmwareID_ = input.readUInt32(); continue;case 16: rawValue = input.readEnum(); this.response_ = rawValue; continue;case 24: this.start_ = input.readUInt32(); continue;case 32: this.end_ = input.readUInt32(); continue;case 42: this.data_ = input.readBytes(); continue; }  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this); } finally { this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_FUPacket_descriptor; } protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() { return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_FUPacket_fieldAccessorTable.ensureFieldAccessorsInitialized(FUPacket.class, Builder.class); } public int getFirmwareID() { return this.firmwareID_; } public int getResponseValue() { return this.response_; } public DolphinMessages.FURespCode getResponse() { DolphinMessages.FURespCode result = DolphinMessages.FURespCode.valueOf(this.response_); return (result == null) ? DolphinMessages.FURespCode.UNRECOGNIZED : result; } public int getStart() { return this.start_; }
/*       */     public int getEnd() { return this.end_; }
/*       */     public ByteString getData() { return this.data_; }
/* 19993 */     public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized;
/* 19994 */       if (isInitialized == 1) return true; 
/* 19995 */       if (isInitialized == 0) return false;
/*       */       
/* 19997 */       this.memoizedIsInitialized = 1;
/* 19998 */       return true; }
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/* 20004 */       if (this.firmwareID_ != 0) {
/* 20005 */         output.writeUInt32(1, this.firmwareID_);
/*       */       }
/* 20007 */       if (this.response_ != DolphinMessages.FURespCode.FU_NONE.getNumber()) {
/* 20008 */         output.writeEnum(2, this.response_);
/*       */       }
/* 20010 */       if (this.start_ != 0) {
/* 20011 */         output.writeUInt32(3, this.start_);
/*       */       }
/* 20013 */       if (this.end_ != 0) {
/* 20014 */         output.writeUInt32(4, this.end_);
/*       */       }
/* 20016 */       if (!this.data_.isEmpty()) {
/* 20017 */         output.writeBytes(5, this.data_);
/*       */       }
/* 20019 */       this.unknownFields.writeTo(output);
/*       */     }
/*       */ 
/*       */     
/*       */     public int getSerializedSize() {
/* 20024 */       int size = this.memoizedSize;
/* 20025 */       if (size != -1) return size;
/*       */       
/* 20027 */       size = 0;
/* 20028 */       if (this.firmwareID_ != 0) {
/* 20029 */         size += 
/* 20030 */           CodedOutputStream.computeUInt32Size(1, this.firmwareID_);
/*       */       }
/* 20032 */       if (this.response_ != DolphinMessages.FURespCode.FU_NONE.getNumber()) {
/* 20033 */         size += 
/* 20034 */           CodedOutputStream.computeEnumSize(2, this.response_);
/*       */       }
/* 20036 */       if (this.start_ != 0) {
/* 20037 */         size += 
/* 20038 */           CodedOutputStream.computeUInt32Size(3, this.start_);
/*       */       }
/* 20040 */       if (this.end_ != 0) {
/* 20041 */         size += 
/* 20042 */           CodedOutputStream.computeUInt32Size(4, this.end_);
/*       */       }
/* 20044 */       if (!this.data_.isEmpty()) {
/* 20045 */         size += 
/* 20046 */           CodedOutputStream.computeBytesSize(5, this.data_);
/*       */       }
/* 20048 */       size += this.unknownFields.getSerializedSize();
/* 20049 */       this.memoizedSize = size;
/* 20050 */       return size;
/*       */     }
/*       */ 
/*       */     
/*       */     public boolean equals(Object obj) {
/* 20055 */       if (obj == this) {
/* 20056 */         return true;
/*       */       }
/* 20058 */       if (!(obj instanceof FUPacket)) {
/* 20059 */         return super.equals(obj);
/*       */       }
/* 20061 */       FUPacket other = (FUPacket)obj;
/*       */       
/* 20063 */       if (getFirmwareID() != other
/* 20064 */         .getFirmwareID()) return false; 
/* 20065 */       if (this.response_ != other.response_) return false; 
/* 20066 */       if (getStart() != other
/* 20067 */         .getStart()) return false; 
/* 20068 */       if (getEnd() != other
/* 20069 */         .getEnd()) return false;
/*       */       
/* 20071 */       if (!getData().equals(other.getData())) return false; 
/* 20072 */       if (!this.unknownFields.equals(other.unknownFields)) return false; 
/* 20073 */       return true;
/*       */     }
/*       */ 
/*       */     
/*       */     public int hashCode() {
/* 20078 */       if (this.memoizedHashCode != 0) {
/* 20079 */         return this.memoizedHashCode;
/*       */       }
/* 20081 */       int hash = 41;
/* 20082 */       hash = 19 * hash + getDescriptor().hashCode();
/* 20083 */       hash = 37 * hash + 1;
/* 20084 */       hash = 53 * hash + getFirmwareID();
/* 20085 */       hash = 37 * hash + 2;
/* 20086 */       hash = 53 * hash + this.response_;
/* 20087 */       hash = 37 * hash + 3;
/* 20088 */       hash = 53 * hash + getStart();
/* 20089 */       hash = 37 * hash + 4;
/* 20090 */       hash = 53 * hash + getEnd();
/* 20091 */       hash = 37 * hash + 5;
/* 20092 */       hash = 53 * hash + getData().hashCode();
/* 20093 */       hash = 29 * hash + this.unknownFields.hashCode();
/* 20094 */       this.memoizedHashCode = hash;
/* 20095 */       return hash;
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static FUPacket parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
/* 20101 */       return (FUPacket)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static FUPacket parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 20107 */       return (FUPacket)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static FUPacket parseFrom(ByteString data) throws InvalidProtocolBufferException {
/* 20112 */       return (FUPacket)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static FUPacket parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 20118 */       return (FUPacket)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static FUPacket parseFrom(byte[] data) throws InvalidProtocolBufferException {
/* 20122 */       return (FUPacket)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static FUPacket parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 20128 */       return (FUPacket)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static FUPacket parseFrom(InputStream input) throws IOException {
/* 20132 */       return 
/* 20133 */         (FUPacket)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static FUPacket parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 20139 */       return 
/* 20140 */         (FUPacket)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static FUPacket parseDelimitedFrom(InputStream input) throws IOException {
/* 20144 */       return 
/* 20145 */         (FUPacket)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static FUPacket parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 20151 */       return 
/* 20152 */         (FUPacket)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static FUPacket parseFrom(CodedInputStream input) throws IOException {
/* 20157 */       return 
/* 20158 */         (FUPacket)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static FUPacket parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 20164 */       return 
/* 20165 */         (FUPacket)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public Builder newBuilderForType() {
/* 20169 */       return newBuilder();
/*       */     } public static Builder newBuilder() {
/* 20171 */       return DEFAULT_INSTANCE.toBuilder();
/*       */     }
/*       */     public static Builder newBuilder(FUPacket prototype) {
/* 20174 */       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
/*       */     }
/*       */     
/*       */     public Builder toBuilder() {
/* 20178 */       return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder())
/* 20179 */         .mergeFrom(this);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
/* 20185 */       Builder builder = new Builder(parent);
/* 20186 */       return builder;
/*       */     }
/*       */     
/*       */     public static final class Builder extends GeneratedMessageV3.Builder<Builder> implements DolphinMessages.FUPacketOrBuilder {
/*       */       private int firmwareID_;
/*       */       private int response_;
/*       */       private int start_;
/*       */       private int end_;
/*       */       private ByteString data_;
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/* 20197 */         return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_FUPacket_descriptor;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
/* 20203 */         return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_FUPacket_fieldAccessorTable
/* 20204 */           .ensureFieldAccessorsInitialized(DolphinMessages.FUPacket.class, Builder.class);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private Builder()
/*       */       {
/* 20390 */         this.response_ = 0;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 20506 */         this.data_ = ByteString.EMPTY; maybeForceBuilderInitialization(); } private Builder(GeneratedMessageV3.BuilderParent parent) { super(parent); this.response_ = 0; this.data_ = ByteString.EMPTY; maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (DolphinMessages.FUPacket.alwaysUseFieldBuilders); } public Builder clear() { super.clear(); this.firmwareID_ = 0; this.response_ = 0; this.start_ = 0; this.end_ = 0; this.data_ = ByteString.EMPTY; return this; } public Descriptors.Descriptor getDescriptorForType() { return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_FUPacket_descriptor; } public DolphinMessages.FUPacket getDefaultInstanceForType() { return DolphinMessages.FUPacket.getDefaultInstance(); } public DolphinMessages.FUPacket build() { DolphinMessages.FUPacket result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public DolphinMessages.FUPacket buildPartial() { DolphinMessages.FUPacket result = new DolphinMessages.FUPacket(this); result.firmwareID_ = this.firmwareID_; result.response_ = this.response_; result.start_ = this.start_; result.end_ = this.end_; result.data_ = this.data_; onBuilt(); return result; } public Builder clone() { return (Builder)super.clone(); } public Builder setField(Descriptors.FieldDescriptor field, Object value) { return (Builder)super.setField(field, value); } public Builder clearField(Descriptors.FieldDescriptor field) { return (Builder)super.clearField(field); } public Builder clearOneof(Descriptors.OneofDescriptor oneof) { return (Builder)super.clearOneof(oneof); } public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) { return (Builder)super.setRepeatedField(field, index, value); } public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) { return (Builder)super.addRepeatedField(field, value); } public Builder mergeFrom(Message other) { if (other instanceof DolphinMessages.FUPacket) return mergeFrom((DolphinMessages.FUPacket)other);  super.mergeFrom(other); return this; } public Builder mergeFrom(DolphinMessages.FUPacket other) { if (other == DolphinMessages.FUPacket.getDefaultInstance()) return this;  if (other.getFirmwareID() != 0) setFirmwareID(other.getFirmwareID());  if (other.response_ != 0) setResponseValue(other.getResponseValue());  if (other.getStart() != 0) setStart(other.getStart());  if (other.getEnd() != 0) setEnd(other.getEnd());  if (other.getData() != ByteString.EMPTY) setData(other.getData());  mergeUnknownFields(other.unknownFields); onChanged(); return this; } public final boolean isInitialized() { return true; } public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { DolphinMessages.FUPacket parsedMessage = null; try { parsedMessage = (DolphinMessages.FUPacket)DolphinMessages.FUPacket.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (DolphinMessages.FUPacket)e.getUnfinishedMessage(); throw e.unwrapIOException(); } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; } public int getFirmwareID() { return this.firmwareID_; } public Builder setFirmwareID(int value) { this.firmwareID_ = value; onChanged(); return this; } public Builder clearFirmwareID() { this.firmwareID_ = 0; onChanged(); return this; } public int getResponseValue() { return this.response_; } public Builder setResponseValue(int value) { this.response_ = value; onChanged(); return this; } public DolphinMessages.FURespCode getResponse() { DolphinMessages.FURespCode result = DolphinMessages.FURespCode.valueOf(this.response_); return (result == null) ? DolphinMessages.FURespCode.UNRECOGNIZED : result; } public Builder setResponse(DolphinMessages.FURespCode value) { if (value == null) throw new NullPointerException();  this.response_ = value.getNumber(); onChanged(); return this; } public Builder clearResponse() { this.response_ = 0; onChanged(); return this; }
/*       */       public int getStart() { return this.start_; }
/*       */       public Builder setStart(int value) { this.start_ = value; onChanged(); return this; }
/*       */       public Builder clearStart() { this.start_ = 0; onChanged(); return this; }
/*       */       public int getEnd() { return this.end_; }
/*       */       public Builder setEnd(int value) { this.end_ = value; onChanged(); return this; }
/*       */       public Builder clearEnd() { this.end_ = 0; onChanged(); return this; }
/* 20513 */       public ByteString getData() { return this.data_; }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setData(ByteString value) {
/* 20521 */         if (value == null) {
/* 20522 */           throw new NullPointerException();
/*       */         }
/*       */         
/* 20525 */         this.data_ = value;
/* 20526 */         onChanged();
/* 20527 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearData() {
/* 20535 */         this.data_ = DolphinMessages.FUPacket.getDefaultInstance().getData();
/* 20536 */         onChanged();
/* 20537 */         return this;
/*       */       }
/*       */ 
/*       */       
/*       */       public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
/* 20542 */         return (Builder)super.setUnknownFields(unknownFields);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
/* 20548 */         return (Builder)super.mergeUnknownFields(unknownFields);
/*       */       }
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 20558 */     private static final FUPacket DEFAULT_INSTANCE = new FUPacket();
/*       */ 
/*       */     
/*       */     public static FUPacket getDefaultInstance() {
/* 20562 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */ 
/*       */     
/* 20566 */     private static final Parser<FUPacket> PARSER = (Parser<FUPacket>)new AbstractParser<FUPacket>()
/*       */       {
/*       */ 
/*       */         
/*       */         public DolphinMessages.FUPacket parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException
/*       */         {
/* 20572 */           return new DolphinMessages.FUPacket(input, extensionRegistry);
/*       */         }
/*       */       };
/*       */     
/*       */     public static Parser<FUPacket> parser() {
/* 20577 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public Parser<FUPacket> getParserForType() {
/* 20582 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public FUPacket getDefaultInstanceForType() {
/* 20587 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */   }
/*       */ 
/*       */ 
/*       */   
/*       */   public static interface LogMessageOrBuilder
/*       */     extends MessageOrBuilder
/*       */   {
/*       */     int getUnixTimestamp();
/*       */ 
/*       */     
/*       */     int getLevelValue();
/*       */ 
/*       */     
/*       */     DolphinMessages.LogLevel getLevel();
/*       */ 
/*       */     
/*       */     String getMessage();
/*       */ 
/*       */     
/*       */     ByteString getMessageBytes();
/*       */   }
/*       */ 
/*       */   
/*       */   public static final class LogMessage
/*       */     extends GeneratedMessageV3
/*       */     implements LogMessageOrBuilder
/*       */   {
/*       */     private static final long serialVersionUID = 0L;
/*       */     
/*       */     public static final int UNIXTIMESTAMP_FIELD_NUMBER = 1;
/*       */     
/*       */     private int unixTimestamp_;
/*       */     
/*       */     public static final int LEVEL_FIELD_NUMBER = 2;
/*       */     
/*       */     private int level_;
/*       */     
/*       */     public static final int MESSAGE_FIELD_NUMBER = 3;
/*       */     
/*       */     private volatile Object message_;
/*       */     
/*       */     private byte memoizedIsInitialized;
/*       */ 
/*       */     
/*       */     private LogMessage(GeneratedMessageV3.Builder<?> builder)
/*       */     {
/* 20635 */       super(builder);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/* 20789 */       this.memoizedIsInitialized = -1; } private LogMessage() { this.memoizedIsInitialized = -1; this.level_ = 0; this.message_ = ""; } protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) { return new LogMessage(); } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private LogMessage(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this(); if (extensionRegistry == null) throw new NullPointerException();  UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { int rawValue; String s; int tag = input.readTag(); switch (tag) { case 0: done = true; continue;case 13: this.unixTimestamp_ = input.readFixed32(); continue;case 16: rawValue = input.readEnum(); this.level_ = rawValue; continue;case 26: s = input.readStringRequireUtf8(); this.message_ = s; continue; }  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this); } finally { this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_LogMessage_descriptor; } protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() { return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_LogMessage_fieldAccessorTable.ensureFieldAccessorsInitialized(LogMessage.class, Builder.class); } public int getUnixTimestamp() { return this.unixTimestamp_; } public int getLevelValue() { return this.level_; } public DolphinMessages.LogLevel getLevel() { DolphinMessages.LogLevel result = DolphinMessages.LogLevel.valueOf(this.level_); return (result == null) ? DolphinMessages.LogLevel.UNRECOGNIZED : result; }
/*       */     public String getMessage() { Object ref = this.message_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.message_ = s; return s; }
/*       */     public ByteString getMessageBytes() { Object ref = this.message_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.message_ = b; return b; }  return (ByteString)ref; }
/* 20792 */     public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized;
/* 20793 */       if (isInitialized == 1) return true; 
/* 20794 */       if (isInitialized == 0) return false;
/*       */       
/* 20796 */       this.memoizedIsInitialized = 1;
/* 20797 */       return true; }
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/* 20803 */       if (this.unixTimestamp_ != 0) {
/* 20804 */         output.writeFixed32(1, this.unixTimestamp_);
/*       */       }
/* 20806 */       if (this.level_ != DolphinMessages.LogLevel.LOG_LEVEL_NONE.getNumber()) {
/* 20807 */         output.writeEnum(2, this.level_);
/*       */       }
/* 20809 */       if (!getMessageBytes().isEmpty()) {
/* 20810 */         GeneratedMessageV3.writeString(output, 3, this.message_);
/*       */       }
/* 20812 */       this.unknownFields.writeTo(output);
/*       */     }
/*       */ 
/*       */     
/*       */     public int getSerializedSize() {
/* 20817 */       int size = this.memoizedSize;
/* 20818 */       if (size != -1) return size;
/*       */       
/* 20820 */       size = 0;
/* 20821 */       if (this.unixTimestamp_ != 0) {
/* 20822 */         size += 
/* 20823 */           CodedOutputStream.computeFixed32Size(1, this.unixTimestamp_);
/*       */       }
/* 20825 */       if (this.level_ != DolphinMessages.LogLevel.LOG_LEVEL_NONE.getNumber()) {
/* 20826 */         size += 
/* 20827 */           CodedOutputStream.computeEnumSize(2, this.level_);
/*       */       }
/* 20829 */       if (!getMessageBytes().isEmpty()) {
/* 20830 */         size += GeneratedMessageV3.computeStringSize(3, this.message_);
/*       */       }
/* 20832 */       size += this.unknownFields.getSerializedSize();
/* 20833 */       this.memoizedSize = size;
/* 20834 */       return size;
/*       */     }
/*       */ 
/*       */     
/*       */     public boolean equals(Object obj) {
/* 20839 */       if (obj == this) {
/* 20840 */         return true;
/*       */       }
/* 20842 */       if (!(obj instanceof LogMessage)) {
/* 20843 */         return super.equals(obj);
/*       */       }
/* 20845 */       LogMessage other = (LogMessage)obj;
/*       */       
/* 20847 */       if (getUnixTimestamp() != other
/* 20848 */         .getUnixTimestamp()) return false; 
/* 20849 */       if (this.level_ != other.level_) return false;
/*       */       
/* 20851 */       if (!getMessage().equals(other.getMessage())) return false; 
/* 20852 */       if (!this.unknownFields.equals(other.unknownFields)) return false; 
/* 20853 */       return true;
/*       */     }
/*       */ 
/*       */     
/*       */     public int hashCode() {
/* 20858 */       if (this.memoizedHashCode != 0) {
/* 20859 */         return this.memoizedHashCode;
/*       */       }
/* 20861 */       int hash = 41;
/* 20862 */       hash = 19 * hash + getDescriptor().hashCode();
/* 20863 */       hash = 37 * hash + 1;
/* 20864 */       hash = 53 * hash + getUnixTimestamp();
/* 20865 */       hash = 37 * hash + 2;
/* 20866 */       hash = 53 * hash + this.level_;
/* 20867 */       hash = 37 * hash + 3;
/* 20868 */       hash = 53 * hash + getMessage().hashCode();
/* 20869 */       hash = 29 * hash + this.unknownFields.hashCode();
/* 20870 */       this.memoizedHashCode = hash;
/* 20871 */       return hash;
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static LogMessage parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
/* 20877 */       return (LogMessage)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static LogMessage parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 20883 */       return (LogMessage)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static LogMessage parseFrom(ByteString data) throws InvalidProtocolBufferException {
/* 20888 */       return (LogMessage)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static LogMessage parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 20894 */       return (LogMessage)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static LogMessage parseFrom(byte[] data) throws InvalidProtocolBufferException {
/* 20898 */       return (LogMessage)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static LogMessage parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 20904 */       return (LogMessage)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static LogMessage parseFrom(InputStream input) throws IOException {
/* 20908 */       return 
/* 20909 */         (LogMessage)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static LogMessage parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 20915 */       return 
/* 20916 */         (LogMessage)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static LogMessage parseDelimitedFrom(InputStream input) throws IOException {
/* 20920 */       return 
/* 20921 */         (LogMessage)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static LogMessage parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 20927 */       return 
/* 20928 */         (LogMessage)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static LogMessage parseFrom(CodedInputStream input) throws IOException {
/* 20933 */       return 
/* 20934 */         (LogMessage)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static LogMessage parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 20940 */       return 
/* 20941 */         (LogMessage)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public Builder newBuilderForType() {
/* 20945 */       return newBuilder();
/*       */     } public static Builder newBuilder() {
/* 20947 */       return DEFAULT_INSTANCE.toBuilder();
/*       */     }
/*       */     public static Builder newBuilder(LogMessage prototype) {
/* 20950 */       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
/*       */     }
/*       */     
/*       */     public Builder toBuilder() {
/* 20954 */       return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder())
/* 20955 */         .mergeFrom(this);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
/* 20961 */       Builder builder = new Builder(parent);
/* 20962 */       return builder;
/*       */     }
/*       */     
/*       */     public static final class Builder
/*       */       extends GeneratedMessageV3.Builder<Builder>
/*       */       implements DolphinMessages.LogMessageOrBuilder {
/*       */       private int unixTimestamp_;
/*       */       private int level_;
/*       */       private Object message_;
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/* 20973 */         return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_LogMessage_descriptor;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
/* 20979 */         return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_LogMessage_fieldAccessorTable
/* 20980 */           .ensureFieldAccessorsInitialized(DolphinMessages.LogMessage.class, Builder.class);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private Builder()
/*       */       {
/* 21155 */         this.level_ = 0;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 21209 */         this.message_ = ""; maybeForceBuilderInitialization(); } private Builder(GeneratedMessageV3.BuilderParent parent) { super(parent); this.level_ = 0; this.message_ = ""; maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (DolphinMessages.LogMessage.alwaysUseFieldBuilders); } public Builder clear() { super.clear(); this.unixTimestamp_ = 0; this.level_ = 0; this.message_ = ""; return this; } public Descriptors.Descriptor getDescriptorForType() { return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_LogMessage_descriptor; } public DolphinMessages.LogMessage getDefaultInstanceForType() { return DolphinMessages.LogMessage.getDefaultInstance(); } public DolphinMessages.LogMessage build() { DolphinMessages.LogMessage result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public DolphinMessages.LogMessage buildPartial() { DolphinMessages.LogMessage result = new DolphinMessages.LogMessage(this); result.unixTimestamp_ = this.unixTimestamp_; result.level_ = this.level_; result.message_ = this.message_; onBuilt(); return result; } public Builder clone() { return (Builder)super.clone(); } public Builder setField(Descriptors.FieldDescriptor field, Object value) { return (Builder)super.setField(field, value); } public Builder clearField(Descriptors.FieldDescriptor field) { return (Builder)super.clearField(field); } public Builder clearOneof(Descriptors.OneofDescriptor oneof) { return (Builder)super.clearOneof(oneof); } public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) { return (Builder)super.setRepeatedField(field, index, value); } public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) { return (Builder)super.addRepeatedField(field, value); } public Builder mergeFrom(Message other) { if (other instanceof DolphinMessages.LogMessage) return mergeFrom((DolphinMessages.LogMessage)other);  super.mergeFrom(other); return this; } public Builder mergeFrom(DolphinMessages.LogMessage other) { if (other == DolphinMessages.LogMessage.getDefaultInstance()) return this;  if (other.getUnixTimestamp() != 0) setUnixTimestamp(other.getUnixTimestamp());  if (other.level_ != 0) setLevelValue(other.getLevelValue());  if (!other.getMessage().isEmpty()) { this.message_ = other.message_; onChanged(); }  mergeUnknownFields(other.unknownFields); onChanged(); return this; } public final boolean isInitialized() { return true; } public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { DolphinMessages.LogMessage parsedMessage = null; try { parsedMessage = (DolphinMessages.LogMessage)DolphinMessages.LogMessage.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (DolphinMessages.LogMessage)e.getUnfinishedMessage(); throw e.unwrapIOException(); } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; } public int getUnixTimestamp() { return this.unixTimestamp_; } public Builder setUnixTimestamp(int value) { this.unixTimestamp_ = value; onChanged(); return this; } public Builder clearUnixTimestamp() { this.unixTimestamp_ = 0; onChanged(); return this; }
/*       */       public int getLevelValue() { return this.level_; }
/*       */       public Builder setLevelValue(int value) { this.level_ = value; onChanged(); return this; }
/*       */       public DolphinMessages.LogLevel getLevel() { DolphinMessages.LogLevel result = DolphinMessages.LogLevel.valueOf(this.level_); return (result == null) ? DolphinMessages.LogLevel.UNRECOGNIZED : result; }
/*       */       public Builder setLevel(DolphinMessages.LogLevel value) { if (value == null) throw new NullPointerException();  this.level_ = value.getNumber(); onChanged(); return this; }
/*       */       public Builder clearLevel() { this.level_ = 0; onChanged(); return this; }
/* 21215 */       public String getMessage() { Object ref = this.message_;
/* 21216 */         if (!(ref instanceof String)) {
/* 21217 */           ByteString bs = (ByteString)ref;
/*       */           
/* 21219 */           String s = bs.toStringUtf8();
/* 21220 */           this.message_ = s;
/* 21221 */           return s;
/*       */         } 
/* 21223 */         return (String)ref; }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public ByteString getMessageBytes() {
/* 21232 */         Object ref = this.message_;
/* 21233 */         if (ref instanceof String) {
/*       */           
/* 21235 */           ByteString b = ByteString.copyFromUtf8((String)ref);
/*       */           
/* 21237 */           this.message_ = b;
/* 21238 */           return b;
/*       */         } 
/* 21240 */         return (ByteString)ref;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setMessage(String value) {
/* 21250 */         if (value == null) {
/* 21251 */           throw new NullPointerException();
/*       */         }
/*       */         
/* 21254 */         this.message_ = value;
/* 21255 */         onChanged();
/* 21256 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearMessage() {
/* 21264 */         this.message_ = DolphinMessages.LogMessage.getDefaultInstance().getMessage();
/* 21265 */         onChanged();
/* 21266 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setMessageBytes(ByteString value) {
/* 21275 */         if (value == null) {
/* 21276 */           throw new NullPointerException();
/*       */         }
/* 21278 */         DolphinMessages.LogMessage.checkByteStringIsUtf8(value);
/*       */         
/* 21280 */         this.message_ = value;
/* 21281 */         onChanged();
/* 21282 */         return this;
/*       */       }
/*       */ 
/*       */       
/*       */       public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
/* 21287 */         return (Builder)super.setUnknownFields(unknownFields);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
/* 21293 */         return (Builder)super.mergeUnknownFields(unknownFields);
/*       */       }
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 21303 */     private static final LogMessage DEFAULT_INSTANCE = new LogMessage();
/*       */ 
/*       */     
/*       */     public static LogMessage getDefaultInstance() {
/* 21307 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */ 
/*       */     
/* 21311 */     private static final Parser<LogMessage> PARSER = (Parser<LogMessage>)new AbstractParser<LogMessage>()
/*       */       {
/*       */ 
/*       */         
/*       */         public DolphinMessages.LogMessage parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException
/*       */         {
/* 21317 */           return new DolphinMessages.LogMessage(input, extensionRegistry);
/*       */         }
/*       */       };
/*       */     
/*       */     public static Parser<LogMessage> parser() {
/* 21322 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public Parser<LogMessage> getParserForType() {
/* 21327 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public LogMessage getDefaultInstanceForType() {
/* 21332 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */   }
/*       */ 
/*       */ 
/*       */   
/*       */   public static interface LogPackOrBuilder
/*       */     extends MessageOrBuilder
/*       */   {
/*       */     List<DolphinMessages.LogMessage> getMessagesList();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinMessages.LogMessage getMessages(int param1Int);
/*       */ 
/*       */ 
/*       */     
/*       */     int getMessagesCount();
/*       */ 
/*       */ 
/*       */     
/*       */     List<? extends DolphinMessages.LogMessageOrBuilder> getMessagesOrBuilderList();
/*       */ 
/*       */     
/*       */     DolphinMessages.LogMessageOrBuilder getMessagesOrBuilder(int param1Int);
/*       */   }
/*       */ 
/*       */   
/*       */   public static final class LogPack
/*       */     extends GeneratedMessageV3
/*       */     implements LogPackOrBuilder
/*       */   {
/*       */     private static final long serialVersionUID = 0L;
/*       */     
/*       */     public static final int MESSAGES_FIELD_NUMBER = 1;
/*       */     
/*       */     private List<DolphinMessages.LogMessage> messages_;
/*       */     
/*       */     private byte memoizedIsInitialized;
/*       */ 
/*       */     
/*       */     private LogPack(GeneratedMessageV3.Builder<?> builder)
/*       */     {
/* 21375 */       super(builder);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/* 21496 */       this.memoizedIsInitialized = -1; } private LogPack() { this.memoizedIsInitialized = -1; this.messages_ = Collections.emptyList(); } protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) { return new LogPack(); } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private LogPack(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this(); if (extensionRegistry == null) throw new NullPointerException();  int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { int tag = input.readTag(); switch (tag) { case 0: done = true; continue;case 10: if ((mutable_bitField0_ & 0x1) == 0) { this.messages_ = new ArrayList<>(); mutable_bitField0_ |= 0x1; }  this.messages_.add(input.readMessage(DolphinMessages.LogMessage.parser(), extensionRegistry)); continue; }  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this); } finally { if ((mutable_bitField0_ & 0x1) != 0) this.messages_ = Collections.unmodifiableList(this.messages_);  this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_LogPack_descriptor; } protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() { return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_LogPack_fieldAccessorTable.ensureFieldAccessorsInitialized(LogPack.class, Builder.class); } public List<DolphinMessages.LogMessage> getMessagesList() { return this.messages_; } public List<? extends DolphinMessages.LogMessageOrBuilder> getMessagesOrBuilderList() { return (List)this.messages_; } public int getMessagesCount() { return this.messages_.size(); }
/*       */     public DolphinMessages.LogMessage getMessages(int index) { return this.messages_.get(index); }
/*       */     public DolphinMessages.LogMessageOrBuilder getMessagesOrBuilder(int index) { return this.messages_.get(index); }
/* 21499 */     public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized;
/* 21500 */       if (isInitialized == 1) return true; 
/* 21501 */       if (isInitialized == 0) return false;
/*       */       
/* 21503 */       this.memoizedIsInitialized = 1;
/* 21504 */       return true; }
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/* 21510 */       for (int i = 0; i < this.messages_.size(); i++) {
/* 21511 */         output.writeMessage(1, (MessageLite)this.messages_.get(i));
/*       */       }
/* 21513 */       this.unknownFields.writeTo(output);
/*       */     }
/*       */ 
/*       */     
/*       */     public int getSerializedSize() {
/* 21518 */       int size = this.memoizedSize;
/* 21519 */       if (size != -1) return size;
/*       */       
/* 21521 */       size = 0;
/* 21522 */       for (int i = 0; i < this.messages_.size(); i++) {
/* 21523 */         size += 
/* 21524 */           CodedOutputStream.computeMessageSize(1, (MessageLite)this.messages_.get(i));
/*       */       }
/* 21526 */       size += this.unknownFields.getSerializedSize();
/* 21527 */       this.memoizedSize = size;
/* 21528 */       return size;
/*       */     }
/*       */ 
/*       */     
/*       */     public boolean equals(Object obj) {
/* 21533 */       if (obj == this) {
/* 21534 */         return true;
/*       */       }
/* 21536 */       if (!(obj instanceof LogPack)) {
/* 21537 */         return super.equals(obj);
/*       */       }
/* 21539 */       LogPack other = (LogPack)obj;
/*       */ 
/*       */       
/* 21542 */       if (!getMessagesList().equals(other.getMessagesList())) return false; 
/* 21543 */       if (!this.unknownFields.equals(other.unknownFields)) return false; 
/* 21544 */       return true;
/*       */     }
/*       */ 
/*       */     
/*       */     public int hashCode() {
/* 21549 */       if (this.memoizedHashCode != 0) {
/* 21550 */         return this.memoizedHashCode;
/*       */       }
/* 21552 */       int hash = 41;
/* 21553 */       hash = 19 * hash + getDescriptor().hashCode();
/* 21554 */       if (getMessagesCount() > 0) {
/* 21555 */         hash = 37 * hash + 1;
/* 21556 */         hash = 53 * hash + getMessagesList().hashCode();
/*       */       } 
/* 21558 */       hash = 29 * hash + this.unknownFields.hashCode();
/* 21559 */       this.memoizedHashCode = hash;
/* 21560 */       return hash;
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static LogPack parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
/* 21566 */       return (LogPack)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static LogPack parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 21572 */       return (LogPack)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static LogPack parseFrom(ByteString data) throws InvalidProtocolBufferException {
/* 21577 */       return (LogPack)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static LogPack parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 21583 */       return (LogPack)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static LogPack parseFrom(byte[] data) throws InvalidProtocolBufferException {
/* 21587 */       return (LogPack)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static LogPack parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 21593 */       return (LogPack)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static LogPack parseFrom(InputStream input) throws IOException {
/* 21597 */       return 
/* 21598 */         (LogPack)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static LogPack parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 21604 */       return 
/* 21605 */         (LogPack)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static LogPack parseDelimitedFrom(InputStream input) throws IOException {
/* 21609 */       return 
/* 21610 */         (LogPack)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static LogPack parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 21616 */       return 
/* 21617 */         (LogPack)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static LogPack parseFrom(CodedInputStream input) throws IOException {
/* 21622 */       return 
/* 21623 */         (LogPack)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static LogPack parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 21629 */       return 
/* 21630 */         (LogPack)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public Builder newBuilderForType() {
/* 21634 */       return newBuilder();
/*       */     } public static Builder newBuilder() {
/* 21636 */       return DEFAULT_INSTANCE.toBuilder();
/*       */     }
/*       */     public static Builder newBuilder(LogPack prototype) {
/* 21639 */       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
/*       */     }
/*       */     
/*       */     public Builder toBuilder() {
/* 21643 */       return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder())
/* 21644 */         .mergeFrom(this);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
/* 21650 */       Builder builder = new Builder(parent);
/* 21651 */       return builder;
/*       */     }
/*       */     
/*       */     public static final class Builder
/*       */       extends GeneratedMessageV3.Builder<Builder>
/*       */       implements DolphinMessages.LogPackOrBuilder {
/*       */       private int bitField0_;
/*       */       private List<DolphinMessages.LogMessage> messages_;
/*       */       private RepeatedFieldBuilderV3<DolphinMessages.LogMessage, DolphinMessages.LogMessage.Builder, DolphinMessages.LogMessageOrBuilder> messagesBuilder_;
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/* 21662 */         return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_LogPack_descriptor;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
/* 21668 */         return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_LogPack_fieldAccessorTable
/* 21669 */           .ensureFieldAccessorsInitialized(DolphinMessages.LogPack.class, Builder.class);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private Builder()
/*       */       {
/* 21838 */         this
/* 21839 */           .messages_ = Collections.emptyList(); maybeForceBuilderInitialization(); } private Builder(GeneratedMessageV3.BuilderParent parent) { super(parent); this.messages_ = Collections.emptyList(); maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (DolphinMessages.LogPack.alwaysUseFieldBuilders) getMessagesFieldBuilder();  } public Builder clear() { super.clear(); if (this.messagesBuilder_ == null) { this.messages_ = Collections.emptyList(); this.bitField0_ &= 0xFFFFFFFE; } else { this.messagesBuilder_.clear(); }  return this; } public Descriptors.Descriptor getDescriptorForType() { return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_LogPack_descriptor; } public DolphinMessages.LogPack getDefaultInstanceForType() { return DolphinMessages.LogPack.getDefaultInstance(); } public DolphinMessages.LogPack build() { DolphinMessages.LogPack result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public DolphinMessages.LogPack buildPartial() { DolphinMessages.LogPack result = new DolphinMessages.LogPack(this); int from_bitField0_ = this.bitField0_; if (this.messagesBuilder_ == null) { if ((this.bitField0_ & 0x1) != 0) { this.messages_ = Collections.unmodifiableList(this.messages_); this.bitField0_ &= 0xFFFFFFFE; }  result.messages_ = this.messages_; } else { result.messages_ = this.messagesBuilder_.build(); }  onBuilt(); return result; } public Builder clone() { return (Builder)super.clone(); } public Builder setField(Descriptors.FieldDescriptor field, Object value) { return (Builder)super.setField(field, value); } public Builder clearField(Descriptors.FieldDescriptor field) { return (Builder)super.clearField(field); } public Builder clearOneof(Descriptors.OneofDescriptor oneof) { return (Builder)super.clearOneof(oneof); } public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) { return (Builder)super.setRepeatedField(field, index, value); } public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) { return (Builder)super.addRepeatedField(field, value); } public Builder mergeFrom(Message other) { if (other instanceof DolphinMessages.LogPack) return mergeFrom((DolphinMessages.LogPack)other);  super.mergeFrom(other); return this; } public Builder mergeFrom(DolphinMessages.LogPack other) { if (other == DolphinMessages.LogPack.getDefaultInstance()) return this;  if (this.messagesBuilder_ == null) { if (!other.messages_.isEmpty()) { if (this.messages_.isEmpty()) { this.messages_ = other.messages_; this.bitField0_ &= 0xFFFFFFFE; } else { ensureMessagesIsMutable(); this.messages_.addAll(other.messages_); }  onChanged(); }  } else if (!other.messages_.isEmpty()) { if (this.messagesBuilder_.isEmpty()) { this.messagesBuilder_.dispose(); this.messagesBuilder_ = null; this.messages_ = other.messages_; this.bitField0_ &= 0xFFFFFFFE; this.messagesBuilder_ = DolphinMessages.LogPack.alwaysUseFieldBuilders ? getMessagesFieldBuilder() : null; } else { this.messagesBuilder_.addAllMessages(other.messages_); }  }  mergeUnknownFields(other.unknownFields); onChanged(); return this; } public final boolean isInitialized() { return true; }
/*       */       public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { DolphinMessages.LogPack parsedMessage = null; try { parsedMessage = (DolphinMessages.LogPack)DolphinMessages.LogPack.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (DolphinMessages.LogPack)e.getUnfinishedMessage(); throw e.unwrapIOException(); } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; }
/* 21841 */       private void ensureMessagesIsMutable() { if ((this.bitField0_ & 0x1) == 0) {
/* 21842 */           this.messages_ = new ArrayList<>(this.messages_);
/* 21843 */           this.bitField0_ |= 0x1;
/*       */         }  }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public List<DolphinMessages.LogMessage> getMessagesList() {
/* 21854 */         if (this.messagesBuilder_ == null) {
/* 21855 */           return Collections.unmodifiableList(this.messages_);
/*       */         }
/* 21857 */         return this.messagesBuilder_.getMessageList();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getMessagesCount() {
/* 21864 */         if (this.messagesBuilder_ == null) {
/* 21865 */           return this.messages_.size();
/*       */         }
/* 21867 */         return this.messagesBuilder_.getCount();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinMessages.LogMessage getMessages(int index) {
/* 21874 */         if (this.messagesBuilder_ == null) {
/* 21875 */           return this.messages_.get(index);
/*       */         }
/* 21877 */         return (DolphinMessages.LogMessage)this.messagesBuilder_.getMessage(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setMessages(int index, DolphinMessages.LogMessage value) {
/* 21885 */         if (this.messagesBuilder_ == null) {
/* 21886 */           if (value == null) {
/* 21887 */             throw new NullPointerException();
/*       */           }
/* 21889 */           ensureMessagesIsMutable();
/* 21890 */           this.messages_.set(index, value);
/* 21891 */           onChanged();
/*       */         } else {
/* 21893 */           this.messagesBuilder_.setMessage(index, (AbstractMessage)value);
/*       */         } 
/* 21895 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setMessages(int index, DolphinMessages.LogMessage.Builder builderForValue) {
/* 21902 */         if (this.messagesBuilder_ == null) {
/* 21903 */           ensureMessagesIsMutable();
/* 21904 */           this.messages_.set(index, builderForValue.build());
/* 21905 */           onChanged();
/*       */         } else {
/* 21907 */           this.messagesBuilder_.setMessage(index, (AbstractMessage)builderForValue.build());
/*       */         } 
/* 21909 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addMessages(DolphinMessages.LogMessage value) {
/* 21915 */         if (this.messagesBuilder_ == null) {
/* 21916 */           if (value == null) {
/* 21917 */             throw new NullPointerException();
/*       */           }
/* 21919 */           ensureMessagesIsMutable();
/* 21920 */           this.messages_.add(value);
/* 21921 */           onChanged();
/*       */         } else {
/* 21923 */           this.messagesBuilder_.addMessage((AbstractMessage)value);
/*       */         } 
/* 21925 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addMessages(int index, DolphinMessages.LogMessage value) {
/* 21932 */         if (this.messagesBuilder_ == null) {
/* 21933 */           if (value == null) {
/* 21934 */             throw new NullPointerException();
/*       */           }
/* 21936 */           ensureMessagesIsMutable();
/* 21937 */           this.messages_.add(index, value);
/* 21938 */           onChanged();
/*       */         } else {
/* 21940 */           this.messagesBuilder_.addMessage(index, (AbstractMessage)value);
/*       */         } 
/* 21942 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addMessages(DolphinMessages.LogMessage.Builder builderForValue) {
/* 21949 */         if (this.messagesBuilder_ == null) {
/* 21950 */           ensureMessagesIsMutable();
/* 21951 */           this.messages_.add(builderForValue.build());
/* 21952 */           onChanged();
/*       */         } else {
/* 21954 */           this.messagesBuilder_.addMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/* 21956 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addMessages(int index, DolphinMessages.LogMessage.Builder builderForValue) {
/* 21963 */         if (this.messagesBuilder_ == null) {
/* 21964 */           ensureMessagesIsMutable();
/* 21965 */           this.messages_.add(index, builderForValue.build());
/* 21966 */           onChanged();
/*       */         } else {
/* 21968 */           this.messagesBuilder_.addMessage(index, (AbstractMessage)builderForValue.build());
/*       */         } 
/* 21970 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addAllMessages(Iterable<? extends DolphinMessages.LogMessage> values) {
/* 21977 */         if (this.messagesBuilder_ == null) {
/* 21978 */           ensureMessagesIsMutable();
/* 21979 */           AbstractMessageLite.Builder.addAll(values, this.messages_);
/*       */           
/* 21981 */           onChanged();
/*       */         } else {
/* 21983 */           this.messagesBuilder_.addAllMessages(values);
/*       */         } 
/* 21985 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearMessages() {
/* 21991 */         if (this.messagesBuilder_ == null) {
/* 21992 */           this.messages_ = Collections.emptyList();
/* 21993 */           this.bitField0_ &= 0xFFFFFFFE;
/* 21994 */           onChanged();
/*       */         } else {
/* 21996 */           this.messagesBuilder_.clear();
/*       */         } 
/* 21998 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder removeMessages(int index) {
/* 22004 */         if (this.messagesBuilder_ == null) {
/* 22005 */           ensureMessagesIsMutable();
/* 22006 */           this.messages_.remove(index);
/* 22007 */           onChanged();
/*       */         } else {
/* 22009 */           this.messagesBuilder_.remove(index);
/*       */         } 
/* 22011 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinMessages.LogMessage.Builder getMessagesBuilder(int index) {
/* 22018 */         return (DolphinMessages.LogMessage.Builder)getMessagesFieldBuilder().getBuilder(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinMessages.LogMessageOrBuilder getMessagesOrBuilder(int index) {
/* 22025 */         if (this.messagesBuilder_ == null)
/* 22026 */           return this.messages_.get(index); 
/* 22027 */         return (DolphinMessages.LogMessageOrBuilder)this.messagesBuilder_.getMessageOrBuilder(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public List<? extends DolphinMessages.LogMessageOrBuilder> getMessagesOrBuilderList() {
/* 22035 */         if (this.messagesBuilder_ != null) {
/* 22036 */           return this.messagesBuilder_.getMessageOrBuilderList();
/*       */         }
/* 22038 */         return Collections.unmodifiableList((List)this.messages_);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinMessages.LogMessage.Builder addMessagesBuilder() {
/* 22045 */         return (DolphinMessages.LogMessage.Builder)getMessagesFieldBuilder().addBuilder(
/* 22046 */             (AbstractMessage)DolphinMessages.LogMessage.getDefaultInstance());
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinMessages.LogMessage.Builder addMessagesBuilder(int index) {
/* 22053 */         return (DolphinMessages.LogMessage.Builder)getMessagesFieldBuilder().addBuilder(index, 
/* 22054 */             (AbstractMessage)DolphinMessages.LogMessage.getDefaultInstance());
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public List<DolphinMessages.LogMessage.Builder> getMessagesBuilderList() {
/* 22061 */         return getMessagesFieldBuilder().getBuilderList();
/*       */       }
/*       */ 
/*       */       
/*       */       private RepeatedFieldBuilderV3<DolphinMessages.LogMessage, DolphinMessages.LogMessage.Builder, DolphinMessages.LogMessageOrBuilder> getMessagesFieldBuilder() {
/* 22066 */         if (this.messagesBuilder_ == null) {
/* 22067 */           this
/*       */ 
/*       */ 
/*       */ 
/*       */             
/* 22072 */             .messagesBuilder_ = new RepeatedFieldBuilderV3(this.messages_, ((this.bitField0_ & 0x1) != 0), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/* 22073 */           this.messages_ = null;
/*       */         } 
/* 22075 */         return this.messagesBuilder_;
/*       */       }
/*       */ 
/*       */       
/*       */       public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
/* 22080 */         return (Builder)super.setUnknownFields(unknownFields);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
/* 22086 */         return (Builder)super.mergeUnknownFields(unknownFields);
/*       */       }
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 22096 */     private static final LogPack DEFAULT_INSTANCE = new LogPack();
/*       */ 
/*       */     
/*       */     public static LogPack getDefaultInstance() {
/* 22100 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */ 
/*       */     
/* 22104 */     private static final Parser<LogPack> PARSER = (Parser<LogPack>)new AbstractParser<LogPack>()
/*       */       {
/*       */ 
/*       */         
/*       */         public DolphinMessages.LogPack parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException
/*       */         {
/* 22110 */           return new DolphinMessages.LogPack(input, extensionRegistry);
/*       */         }
/*       */       };
/*       */     
/*       */     public static Parser<LogPack> parser() {
/* 22115 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public Parser<LogPack> getParserForType() {
/* 22120 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public LogPack getDefaultInstanceForType() {
/* 22125 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */   }
/*       */ 
/*       */   
/*       */   public static interface LogStartOrBuilder
/*       */     extends MessageOrBuilder
/*       */   {
/*       */     int getLevelValue();
/*       */ 
/*       */     
/*       */     DolphinMessages.LogLevel getLevel();
/*       */   }
/*       */ 
/*       */   
/*       */   public static final class LogStart
/*       */     extends GeneratedMessageV3
/*       */     implements LogStartOrBuilder
/*       */   {
/*       */     private static final long serialVersionUID = 0L;
/*       */     
/*       */     public static final int LEVEL_FIELD_NUMBER = 1;
/*       */     
/*       */     private int level_;
/*       */     
/*       */     private byte memoizedIsInitialized;
/*       */ 
/*       */     
/*       */     private LogStart(GeneratedMessageV3.Builder<?> builder)
/*       */     {
/* 22155 */       super(builder);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/* 22248 */       this.memoizedIsInitialized = -1; } private LogStart() { this.memoizedIsInitialized = -1; this.level_ = 0; } protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) { return new LogStart(); } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private LogStart(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this(); if (extensionRegistry == null) throw new NullPointerException();  UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { int rawValue, tag = input.readTag(); switch (tag) { case 0: done = true; continue;case 8: rawValue = input.readEnum(); this.level_ = rawValue; continue; }  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this); } finally { this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_LogStart_descriptor; } protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() { return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_LogStart_fieldAccessorTable.ensureFieldAccessorsInitialized(LogStart.class, Builder.class); }
/*       */     public int getLevelValue() { return this.level_; }
/*       */     public DolphinMessages.LogLevel getLevel() { DolphinMessages.LogLevel result = DolphinMessages.LogLevel.valueOf(this.level_); return (result == null) ? DolphinMessages.LogLevel.UNRECOGNIZED : result; }
/* 22251 */     public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized;
/* 22252 */       if (isInitialized == 1) return true; 
/* 22253 */       if (isInitialized == 0) return false;
/*       */       
/* 22255 */       this.memoizedIsInitialized = 1;
/* 22256 */       return true; }
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/* 22262 */       if (this.level_ != DolphinMessages.LogLevel.LOG_LEVEL_NONE.getNumber()) {
/* 22263 */         output.writeEnum(1, this.level_);
/*       */       }
/* 22265 */       this.unknownFields.writeTo(output);
/*       */     }
/*       */ 
/*       */     
/*       */     public int getSerializedSize() {
/* 22270 */       int size = this.memoizedSize;
/* 22271 */       if (size != -1) return size;
/*       */       
/* 22273 */       size = 0;
/* 22274 */       if (this.level_ != DolphinMessages.LogLevel.LOG_LEVEL_NONE.getNumber()) {
/* 22275 */         size += 
/* 22276 */           CodedOutputStream.computeEnumSize(1, this.level_);
/*       */       }
/* 22278 */       size += this.unknownFields.getSerializedSize();
/* 22279 */       this.memoizedSize = size;
/* 22280 */       return size;
/*       */     }
/*       */ 
/*       */     
/*       */     public boolean equals(Object obj) {
/* 22285 */       if (obj == this) {
/* 22286 */         return true;
/*       */       }
/* 22288 */       if (!(obj instanceof LogStart)) {
/* 22289 */         return super.equals(obj);
/*       */       }
/* 22291 */       LogStart other = (LogStart)obj;
/*       */       
/* 22293 */       if (this.level_ != other.level_) return false; 
/* 22294 */       if (!this.unknownFields.equals(other.unknownFields)) return false; 
/* 22295 */       return true;
/*       */     }
/*       */ 
/*       */     
/*       */     public int hashCode() {
/* 22300 */       if (this.memoizedHashCode != 0) {
/* 22301 */         return this.memoizedHashCode;
/*       */       }
/* 22303 */       int hash = 41;
/* 22304 */       hash = 19 * hash + getDescriptor().hashCode();
/* 22305 */       hash = 37 * hash + 1;
/* 22306 */       hash = 53 * hash + this.level_;
/* 22307 */       hash = 29 * hash + this.unknownFields.hashCode();
/* 22308 */       this.memoizedHashCode = hash;
/* 22309 */       return hash;
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static LogStart parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
/* 22315 */       return (LogStart)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static LogStart parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 22321 */       return (LogStart)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static LogStart parseFrom(ByteString data) throws InvalidProtocolBufferException {
/* 22326 */       return (LogStart)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static LogStart parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 22332 */       return (LogStart)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static LogStart parseFrom(byte[] data) throws InvalidProtocolBufferException {
/* 22336 */       return (LogStart)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static LogStart parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 22342 */       return (LogStart)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static LogStart parseFrom(InputStream input) throws IOException {
/* 22346 */       return 
/* 22347 */         (LogStart)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static LogStart parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 22353 */       return 
/* 22354 */         (LogStart)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static LogStart parseDelimitedFrom(InputStream input) throws IOException {
/* 22358 */       return 
/* 22359 */         (LogStart)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static LogStart parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 22365 */       return 
/* 22366 */         (LogStart)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static LogStart parseFrom(CodedInputStream input) throws IOException {
/* 22371 */       return 
/* 22372 */         (LogStart)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static LogStart parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 22378 */       return 
/* 22379 */         (LogStart)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public Builder newBuilderForType() {
/* 22383 */       return newBuilder();
/*       */     } public static Builder newBuilder() {
/* 22385 */       return DEFAULT_INSTANCE.toBuilder();
/*       */     }
/*       */     public static Builder newBuilder(LogStart prototype) {
/* 22388 */       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
/*       */     }
/*       */     
/*       */     public Builder toBuilder() {
/* 22392 */       return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder())
/* 22393 */         .mergeFrom(this);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
/* 22399 */       Builder builder = new Builder(parent);
/* 22400 */       return builder;
/*       */     }
/*       */ 
/*       */     
/*       */     public static final class Builder
/*       */       extends GeneratedMessageV3.Builder<Builder>
/*       */       implements DolphinMessages.LogStartOrBuilder
/*       */     {
/*       */       private int level_;
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/* 22411 */         return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_LogStart_descriptor;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
/* 22417 */         return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_LogStart_fieldAccessorTable
/* 22418 */           .ensureFieldAccessorsInitialized(DolphinMessages.LogStart.class, Builder.class);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private Builder()
/*       */       {
/* 22549 */         this.level_ = 0; maybeForceBuilderInitialization(); } private Builder(GeneratedMessageV3.BuilderParent parent) { super(parent); this.level_ = 0; maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (DolphinMessages.LogStart.alwaysUseFieldBuilders); } public Builder clear() { super.clear(); this.level_ = 0; return this; } public Descriptors.Descriptor getDescriptorForType() { return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_LogStart_descriptor; } public DolphinMessages.LogStart getDefaultInstanceForType() { return DolphinMessages.LogStart.getDefaultInstance(); } public DolphinMessages.LogStart build() { DolphinMessages.LogStart result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public DolphinMessages.LogStart buildPartial() { DolphinMessages.LogStart result = new DolphinMessages.LogStart(this); result.level_ = this.level_; onBuilt(); return result; } public Builder clone() { return (Builder)super.clone(); } public Builder setField(Descriptors.FieldDescriptor field, Object value) { return (Builder)super.setField(field, value); } public Builder clearField(Descriptors.FieldDescriptor field) { return (Builder)super.clearField(field); } public Builder clearOneof(Descriptors.OneofDescriptor oneof) { return (Builder)super.clearOneof(oneof); } public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) { return (Builder)super.setRepeatedField(field, index, value); }
/*       */       public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) { return (Builder)super.addRepeatedField(field, value); }
/*       */       public Builder mergeFrom(Message other) { if (other instanceof DolphinMessages.LogStart) return mergeFrom((DolphinMessages.LogStart)other);  super.mergeFrom(other); return this; }
/*       */       public Builder mergeFrom(DolphinMessages.LogStart other) { if (other == DolphinMessages.LogStart.getDefaultInstance()) return this;  if (other.level_ != 0) setLevelValue(other.getLevelValue());  mergeUnknownFields(other.unknownFields); onChanged(); return this; }
/*       */       public final boolean isInitialized() { return true; }
/*       */       public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { DolphinMessages.LogStart parsedMessage = null; try { parsedMessage = (DolphinMessages.LogStart)DolphinMessages.LogStart.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (DolphinMessages.LogStart)e.getUnfinishedMessage(); throw e.unwrapIOException(); } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; }
/* 22555 */       public int getLevelValue() { return this.level_; }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setLevelValue(int value) {
/* 22564 */         this.level_ = value;
/* 22565 */         onChanged();
/* 22566 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinMessages.LogLevel getLevel() {
/* 22575 */         DolphinMessages.LogLevel result = DolphinMessages.LogLevel.valueOf(this.level_);
/* 22576 */         return (result == null) ? DolphinMessages.LogLevel.UNRECOGNIZED : result;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setLevel(DolphinMessages.LogLevel value) {
/* 22584 */         if (value == null) {
/* 22585 */           throw new NullPointerException();
/*       */         }
/*       */         
/* 22588 */         this.level_ = value.getNumber();
/* 22589 */         onChanged();
/* 22590 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearLevel() {
/* 22598 */         this.level_ = 0;
/* 22599 */         onChanged();
/* 22600 */         return this;
/*       */       }
/*       */ 
/*       */       
/*       */       public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
/* 22605 */         return (Builder)super.setUnknownFields(unknownFields);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
/* 22611 */         return (Builder)super.mergeUnknownFields(unknownFields);
/*       */       }
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 22621 */     private static final LogStart DEFAULT_INSTANCE = new LogStart();
/*       */ 
/*       */     
/*       */     public static LogStart getDefaultInstance() {
/* 22625 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */ 
/*       */     
/* 22629 */     private static final Parser<LogStart> PARSER = (Parser<LogStart>)new AbstractParser<LogStart>()
/*       */       {
/*       */ 
/*       */         
/*       */         public DolphinMessages.LogStart parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException
/*       */         {
/* 22635 */           return new DolphinMessages.LogStart(input, extensionRegistry);
/*       */         }
/*       */       };
/*       */     
/*       */     public static Parser<LogStart> parser() {
/* 22640 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public Parser<LogStart> getParserForType() {
/* 22645 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public LogStart getDefaultInstanceForType() {
/* 22650 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */   }
/*       */ 
/*       */ 
/*       */   
/*       */   public static interface FMSDataOrBuilder
/*       */     extends MessageOrBuilder
/*       */   {
/*       */     List<Integer> getPGNIdListList();
/*       */ 
/*       */ 
/*       */     
/*       */     int getPGNIdListCount();
/*       */ 
/*       */ 
/*       */     
/*       */     int getPGNIdList(int param1Int);
/*       */ 
/*       */ 
/*       */     
/*       */     List<Long> getPGNValueListList();
/*       */ 
/*       */ 
/*       */     
/*       */     int getPGNValueListCount();
/*       */ 
/*       */ 
/*       */     
/*       */     long getPGNValueList(int param1Int);
/*       */   }
/*       */ 
/*       */ 
/*       */   
/*       */   public static final class FMSData
/*       */     extends GeneratedMessageV3
/*       */     implements FMSDataOrBuilder
/*       */   {
/*       */     private static final long serialVersionUID = 0L;
/*       */     
/*       */     public static final int PGN_ID_LIST_FIELD_NUMBER = 1;
/*       */     
/*       */     private Internal.IntList pGNIdList_;
/*       */     
/*       */     private int pGNIdListMemoizedSerializedSize;
/*       */     
/*       */     public static final int PGN_VALUE_LIST_FIELD_NUMBER = 2;
/*       */     
/*       */     private Internal.LongList pGNValueList_;
/*       */     
/*       */     private int pGNValueListMemoizedSerializedSize;
/*       */     
/*       */     private byte memoizedIsInitialized;
/*       */ 
/*       */     
/*       */     private FMSData(GeneratedMessageV3.Builder<?> builder)
/*       */     {
/* 22707 */       super(builder);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/* 22851 */       this.pGNIdListMemoizedSerializedSize = -1;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/* 22879 */       this.pGNValueListMemoizedSerializedSize = -1;
/*       */       
/* 22881 */       this.memoizedIsInitialized = -1; } private FMSData() { this.pGNIdListMemoizedSerializedSize = -1; this.pGNValueListMemoizedSerializedSize = -1; this.memoizedIsInitialized = -1; this.pGNIdList_ = emptyIntList(); this.pGNValueList_ = emptyLongList(); } protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) { return new FMSData(); } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private FMSData(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this(); if (extensionRegistry == null) throw new NullPointerException();  int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { int length, limit, tag = input.readTag(); switch (tag) { case 0: done = true; continue;case 8: if ((mutable_bitField0_ & 0x1) == 0) { this.pGNIdList_ = newIntList(); mutable_bitField0_ |= 0x1; }  this.pGNIdList_.addInt(input.readUInt32()); continue;case 10: length = input.readRawVarint32(); limit = input.pushLimit(length); if ((mutable_bitField0_ & 0x1) == 0 && input.getBytesUntilLimit() > 0) { this.pGNIdList_ = newIntList(); mutable_bitField0_ |= 0x1; }  while (input.getBytesUntilLimit() > 0) this.pGNIdList_.addInt(input.readUInt32());  input.popLimit(limit); continue;case 16: if ((mutable_bitField0_ & 0x2) == 0) { this.pGNValueList_ = newLongList(); mutable_bitField0_ |= 0x2; }  this.pGNValueList_.addLong(input.readUInt64()); continue;case 18: length = input.readRawVarint32(); limit = input.pushLimit(length); if ((mutable_bitField0_ & 0x2) == 0 && input.getBytesUntilLimit() > 0) { this.pGNValueList_ = newLongList(); mutable_bitField0_ |= 0x2; }  while (input.getBytesUntilLimit() > 0) this.pGNValueList_.addLong(input.readUInt64());  input.popLimit(limit); continue; }  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this); } finally { if ((mutable_bitField0_ & 0x1) != 0) this.pGNIdList_.makeImmutable();  if ((mutable_bitField0_ & 0x2) != 0) this.pGNValueList_.makeImmutable();  this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_FMSData_descriptor; } protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() { return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_FMSData_fieldAccessorTable.ensureFieldAccessorsInitialized(FMSData.class, Builder.class); } public List<Integer> getPGNIdListList() { return (List<Integer>)this.pGNIdList_; } public int getPGNIdListCount() { return this.pGNIdList_.size(); } public int getPGNIdList(int index) { return this.pGNIdList_.getInt(index); } public List<Long> getPGNValueListList() { return (List<Long>)this.pGNValueList_; }
/*       */     public int getPGNValueListCount() { return this.pGNValueList_.size(); }
/*       */     public long getPGNValueList(int index) { return this.pGNValueList_.getLong(index); }
/* 22884 */     public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized;
/* 22885 */       if (isInitialized == 1) return true; 
/* 22886 */       if (isInitialized == 0) return false;
/*       */       
/* 22888 */       this.memoizedIsInitialized = 1;
/* 22889 */       return true; }
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/* 22895 */       getSerializedSize();
/* 22896 */       if (getPGNIdListList().size() > 0) {
/* 22897 */         output.writeUInt32NoTag(10);
/* 22898 */         output.writeUInt32NoTag(this.pGNIdListMemoizedSerializedSize);
/*       */       }  int i;
/* 22900 */       for (i = 0; i < this.pGNIdList_.size(); i++) {
/* 22901 */         output.writeUInt32NoTag(this.pGNIdList_.getInt(i));
/*       */       }
/* 22903 */       if (getPGNValueListList().size() > 0) {
/* 22904 */         output.writeUInt32NoTag(18);
/* 22905 */         output.writeUInt32NoTag(this.pGNValueListMemoizedSerializedSize);
/*       */       } 
/* 22907 */       for (i = 0; i < this.pGNValueList_.size(); i++) {
/* 22908 */         output.writeUInt64NoTag(this.pGNValueList_.getLong(i));
/*       */       }
/* 22910 */       this.unknownFields.writeTo(output);
/*       */     }
/*       */ 
/*       */     
/*       */     public int getSerializedSize() {
/* 22915 */       int size = this.memoizedSize;
/* 22916 */       if (size != -1) return size;
/*       */       
/* 22918 */       size = 0;
/*       */       
/* 22920 */       int dataSize = 0; int i;
/* 22921 */       for (i = 0; i < this.pGNIdList_.size(); i++) {
/* 22922 */         dataSize += 
/* 22923 */           CodedOutputStream.computeUInt32SizeNoTag(this.pGNIdList_.getInt(i));
/*       */       }
/* 22925 */       size += dataSize;
/* 22926 */       if (!getPGNIdListList().isEmpty()) {
/* 22927 */         size++;
/* 22928 */         size += 
/* 22929 */           CodedOutputStream.computeInt32SizeNoTag(dataSize);
/*       */       } 
/* 22931 */       this.pGNIdListMemoizedSerializedSize = dataSize;
/*       */ 
/*       */       
/* 22934 */       dataSize = 0;
/* 22935 */       for (i = 0; i < this.pGNValueList_.size(); i++) {
/* 22936 */         dataSize += 
/* 22937 */           CodedOutputStream.computeUInt64SizeNoTag(this.pGNValueList_.getLong(i));
/*       */       }
/* 22939 */       size += dataSize;
/* 22940 */       if (!getPGNValueListList().isEmpty()) {
/* 22941 */         size++;
/* 22942 */         size += 
/* 22943 */           CodedOutputStream.computeInt32SizeNoTag(dataSize);
/*       */       } 
/* 22945 */       this.pGNValueListMemoizedSerializedSize = dataSize;
/*       */       
/* 22947 */       size += this.unknownFields.getSerializedSize();
/* 22948 */       this.memoizedSize = size;
/* 22949 */       return size;
/*       */     }
/*       */ 
/*       */     
/*       */     public boolean equals(Object obj) {
/* 22954 */       if (obj == this) {
/* 22955 */         return true;
/*       */       }
/* 22957 */       if (!(obj instanceof FMSData)) {
/* 22958 */         return super.equals(obj);
/*       */       }
/* 22960 */       FMSData other = (FMSData)obj;
/*       */ 
/*       */       
/* 22963 */       if (!getPGNIdListList().equals(other.getPGNIdListList())) return false;
/*       */       
/* 22965 */       if (!getPGNValueListList().equals(other.getPGNValueListList())) return false; 
/* 22966 */       if (!this.unknownFields.equals(other.unknownFields)) return false; 
/* 22967 */       return true;
/*       */     }
/*       */ 
/*       */     
/*       */     public int hashCode() {
/* 22972 */       if (this.memoizedHashCode != 0) {
/* 22973 */         return this.memoizedHashCode;
/*       */       }
/* 22975 */       int hash = 41;
/* 22976 */       hash = 19 * hash + getDescriptor().hashCode();
/* 22977 */       if (getPGNIdListCount() > 0) {
/* 22978 */         hash = 37 * hash + 1;
/* 22979 */         hash = 53 * hash + getPGNIdListList().hashCode();
/*       */       } 
/* 22981 */       if (getPGNValueListCount() > 0) {
/* 22982 */         hash = 37 * hash + 2;
/* 22983 */         hash = 53 * hash + getPGNValueListList().hashCode();
/*       */       } 
/* 22985 */       hash = 29 * hash + this.unknownFields.hashCode();
/* 22986 */       this.memoizedHashCode = hash;
/* 22987 */       return hash;
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static FMSData parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
/* 22993 */       return (FMSData)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static FMSData parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 22999 */       return (FMSData)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static FMSData parseFrom(ByteString data) throws InvalidProtocolBufferException {
/* 23004 */       return (FMSData)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static FMSData parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 23010 */       return (FMSData)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static FMSData parseFrom(byte[] data) throws InvalidProtocolBufferException {
/* 23014 */       return (FMSData)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static FMSData parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 23020 */       return (FMSData)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static FMSData parseFrom(InputStream input) throws IOException {
/* 23024 */       return 
/* 23025 */         (FMSData)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static FMSData parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 23031 */       return 
/* 23032 */         (FMSData)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static FMSData parseDelimitedFrom(InputStream input) throws IOException {
/* 23036 */       return 
/* 23037 */         (FMSData)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static FMSData parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 23043 */       return 
/* 23044 */         (FMSData)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static FMSData parseFrom(CodedInputStream input) throws IOException {
/* 23049 */       return 
/* 23050 */         (FMSData)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static FMSData parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 23056 */       return 
/* 23057 */         (FMSData)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public Builder newBuilderForType() {
/* 23061 */       return newBuilder();
/*       */     } public static Builder newBuilder() {
/* 23063 */       return DEFAULT_INSTANCE.toBuilder();
/*       */     }
/*       */     public static Builder newBuilder(FMSData prototype) {
/* 23066 */       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
/*       */     }
/*       */     
/*       */     public Builder toBuilder() {
/* 23070 */       return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder())
/* 23071 */         .mergeFrom(this);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
/* 23077 */       Builder builder = new Builder(parent);
/* 23078 */       return builder;
/*       */     }
/*       */ 
/*       */     
/*       */     public static final class Builder
/*       */       extends GeneratedMessageV3.Builder<Builder>
/*       */       implements DolphinMessages.FMSDataOrBuilder
/*       */     {
/*       */       private int bitField0_;
/*       */       
/*       */       private Internal.IntList pGNIdList_;
/*       */       
/*       */       private Internal.LongList pGNValueList_;
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/* 23093 */         return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_FMSData_descriptor;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
/* 23099 */         return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_FMSData_fieldAccessorTable
/* 23100 */           .ensureFieldAccessorsInitialized(DolphinMessages.FMSData.class, Builder.class);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private Builder()
/*       */       {
/* 23261 */         this.pGNIdList_ = DolphinMessages.FMSData.emptyIntList();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 23340 */         this.pGNValueList_ = DolphinMessages.FMSData.emptyLongList(); maybeForceBuilderInitialization(); } private Builder(GeneratedMessageV3.BuilderParent parent) { super(parent); this.pGNIdList_ = DolphinMessages.FMSData.emptyIntList(); this.pGNValueList_ = DolphinMessages.FMSData.emptyLongList(); maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (DolphinMessages.FMSData.alwaysUseFieldBuilders); } public Builder clear() { super.clear(); this.pGNIdList_ = DolphinMessages.FMSData.emptyIntList(); this.bitField0_ &= 0xFFFFFFFE; this.pGNValueList_ = DolphinMessages.FMSData.emptyLongList(); this.bitField0_ &= 0xFFFFFFFD; return this; } public Descriptors.Descriptor getDescriptorForType() { return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_FMSData_descriptor; } public DolphinMessages.FMSData getDefaultInstanceForType() { return DolphinMessages.FMSData.getDefaultInstance(); } public DolphinMessages.FMSData build() { DolphinMessages.FMSData result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public DolphinMessages.FMSData buildPartial() { DolphinMessages.FMSData result = new DolphinMessages.FMSData(this); int from_bitField0_ = this.bitField0_; if ((this.bitField0_ & 0x1) != 0) { this.pGNIdList_.makeImmutable(); this.bitField0_ &= 0xFFFFFFFE; }  result.pGNIdList_ = this.pGNIdList_; if ((this.bitField0_ & 0x2) != 0) { this.pGNValueList_.makeImmutable(); this.bitField0_ &= 0xFFFFFFFD; }  result.pGNValueList_ = this.pGNValueList_; onBuilt(); return result; } public Builder clone() { return (Builder)super.clone(); } public Builder setField(Descriptors.FieldDescriptor field, Object value) { return (Builder)super.setField(field, value); } public Builder clearField(Descriptors.FieldDescriptor field) { return (Builder)super.clearField(field); } public Builder clearOneof(Descriptors.OneofDescriptor oneof) { return (Builder)super.clearOneof(oneof); } public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) { return (Builder)super.setRepeatedField(field, index, value); } public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) { return (Builder)super.addRepeatedField(field, value); } public Builder mergeFrom(Message other) { if (other instanceof DolphinMessages.FMSData) return mergeFrom((DolphinMessages.FMSData)other);  super.mergeFrom(other); return this; } public Builder mergeFrom(DolphinMessages.FMSData other) { if (other == DolphinMessages.FMSData.getDefaultInstance()) return this;  if (!other.pGNIdList_.isEmpty()) { if (this.pGNIdList_.isEmpty()) { this.pGNIdList_ = other.pGNIdList_; this.bitField0_ &= 0xFFFFFFFE; } else { ensurePGNIdListIsMutable(); this.pGNIdList_.addAll((Collection)other.pGNIdList_); }  onChanged(); }  if (!other.pGNValueList_.isEmpty()) { if (this.pGNValueList_.isEmpty()) { this.pGNValueList_ = other.pGNValueList_; this.bitField0_ &= 0xFFFFFFFD; } else { ensurePGNValueListIsMutable(); this.pGNValueList_.addAll((Collection)other.pGNValueList_); }  onChanged(); }  mergeUnknownFields(other.unknownFields); onChanged(); return this; } public final boolean isInitialized() { return true; } public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { DolphinMessages.FMSData parsedMessage = null; try { parsedMessage = (DolphinMessages.FMSData)DolphinMessages.FMSData.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (DolphinMessages.FMSData)e.getUnfinishedMessage(); throw e.unwrapIOException(); } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; } private void ensurePGNIdListIsMutable() { if ((this.bitField0_ & 0x1) == 0) { this.pGNIdList_ = DolphinMessages.FMSData.mutableCopy(this.pGNIdList_); this.bitField0_ |= 0x1; }  } public List<Integer> getPGNIdListList() { return ((this.bitField0_ & 0x1) != 0) ? Collections.<Integer>unmodifiableList((List<? extends Integer>)this.pGNIdList_) : (List<Integer>)this.pGNIdList_; } public int getPGNIdListCount() { return this.pGNIdList_.size(); } public int getPGNIdList(int index) { return this.pGNIdList_.getInt(index); } public Builder setPGNIdList(int index, int value) { ensurePGNIdListIsMutable(); this.pGNIdList_.setInt(index, value); onChanged(); return this; } public Builder addPGNIdList(int value) { ensurePGNIdListIsMutable(); this.pGNIdList_.addInt(value); onChanged(); return this; } public Builder addAllPGNIdList(Iterable<? extends Integer> values) { ensurePGNIdListIsMutable(); AbstractMessageLite.Builder.addAll(values, (List)this.pGNIdList_); onChanged(); return this; }
/*       */       public Builder clearPGNIdList() { this.pGNIdList_ = DolphinMessages.FMSData.emptyIntList(); this.bitField0_ &= 0xFFFFFFFE; onChanged(); return this; }
/* 23342 */       private void ensurePGNValueListIsMutable() { if ((this.bitField0_ & 0x2) == 0) {
/* 23343 */           this.pGNValueList_ = DolphinMessages.FMSData.mutableCopy(this.pGNValueList_);
/* 23344 */           this.bitField0_ |= 0x2;
/*       */         }  }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public List<Long> getPGNValueListList() {
/* 23353 */         return ((this.bitField0_ & 0x2) != 0) ? 
/* 23354 */           Collections.<Long>unmodifiableList((List<? extends Long>)this.pGNValueList_) : (List<Long>)this.pGNValueList_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getPGNValueListCount() {
/* 23361 */         return this.pGNValueList_.size();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public long getPGNValueList(int index) {
/* 23369 */         return this.pGNValueList_.getLong(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setPGNValueList(int index, long value) {
/* 23379 */         ensurePGNValueListIsMutable();
/* 23380 */         this.pGNValueList_.setLong(index, value);
/* 23381 */         onChanged();
/* 23382 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addPGNValueList(long value) {
/* 23390 */         ensurePGNValueListIsMutable();
/* 23391 */         this.pGNValueList_.addLong(value);
/* 23392 */         onChanged();
/* 23393 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addAllPGNValueList(Iterable<? extends Long> values) {
/* 23402 */         ensurePGNValueListIsMutable();
/* 23403 */         AbstractMessageLite.Builder.addAll(values, (List)this.pGNValueList_);
/*       */         
/* 23405 */         onChanged();
/* 23406 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearPGNValueList() {
/* 23413 */         this.pGNValueList_ = DolphinMessages.FMSData.emptyLongList();
/* 23414 */         this.bitField0_ &= 0xFFFFFFFD;
/* 23415 */         onChanged();
/* 23416 */         return this;
/*       */       }
/*       */ 
/*       */       
/*       */       public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
/* 23421 */         return (Builder)super.setUnknownFields(unknownFields);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
/* 23427 */         return (Builder)super.mergeUnknownFields(unknownFields);
/*       */       }
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 23437 */     private static final FMSData DEFAULT_INSTANCE = new FMSData();
/*       */ 
/*       */     
/*       */     public static FMSData getDefaultInstance() {
/* 23441 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */ 
/*       */     
/* 23445 */     private static final Parser<FMSData> PARSER = (Parser<FMSData>)new AbstractParser<FMSData>()
/*       */       {
/*       */ 
/*       */         
/*       */         public DolphinMessages.FMSData parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException
/*       */         {
/* 23451 */           return new DolphinMessages.FMSData(input, extensionRegistry);
/*       */         }
/*       */       };
/*       */     
/*       */     public static Parser<FMSData> parser() {
/* 23456 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public Parser<FMSData> getParserForType() {
/* 23461 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public FMSData getDefaultInstanceForType() {
/* 23466 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */   }
/*       */ 
/*       */ 
/*       */   
/*       */   public static interface AuthenticateRequestOrBuilder
/*       */     extends MessageOrBuilder
/*       */   {
/*       */     String getCode();
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getCodeBytes();
/*       */   }
/*       */ 
/*       */ 
/*       */   
/*       */   public static final class AuthenticateRequest
/*       */     extends GeneratedMessageV3
/*       */     implements AuthenticateRequestOrBuilder
/*       */   {
/*       */     private static final long serialVersionUID = 0L;
/*       */ 
/*       */     
/*       */     public static final int CODE_FIELD_NUMBER = 1;
/*       */ 
/*       */     
/*       */     private volatile Object code_;
/*       */     
/*       */     private byte memoizedIsInitialized;
/*       */ 
/*       */     
/*       */     private AuthenticateRequest(GeneratedMessageV3.Builder<?> builder)
/*       */     {
/* 23501 */       super(builder);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/* 23613 */       this.memoizedIsInitialized = -1; } private AuthenticateRequest() { this.memoizedIsInitialized = -1; this.code_ = ""; } protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) { return new AuthenticateRequest(); } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private AuthenticateRequest(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this(); if (extensionRegistry == null) throw new NullPointerException();  UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { String s; int tag = input.readTag(); switch (tag) { case 0: done = true; continue;case 10: s = input.readStringRequireUtf8(); this.code_ = s; continue; }  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this); } finally { this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_AuthenticateRequest_descriptor; } protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() { return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_AuthenticateRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(AuthenticateRequest.class, Builder.class); }
/*       */     public String getCode() { Object ref = this.code_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.code_ = s; return s; }
/*       */     public ByteString getCodeBytes() { Object ref = this.code_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.code_ = b; return b; }  return (ByteString)ref; }
/* 23616 */     public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized;
/* 23617 */       if (isInitialized == 1) return true; 
/* 23618 */       if (isInitialized == 0) return false;
/*       */       
/* 23620 */       this.memoizedIsInitialized = 1;
/* 23621 */       return true; }
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/* 23627 */       if (!getCodeBytes().isEmpty()) {
/* 23628 */         GeneratedMessageV3.writeString(output, 1, this.code_);
/*       */       }
/* 23630 */       this.unknownFields.writeTo(output);
/*       */     }
/*       */ 
/*       */     
/*       */     public int getSerializedSize() {
/* 23635 */       int size = this.memoizedSize;
/* 23636 */       if (size != -1) return size;
/*       */       
/* 23638 */       size = 0;
/* 23639 */       if (!getCodeBytes().isEmpty()) {
/* 23640 */         size += GeneratedMessageV3.computeStringSize(1, this.code_);
/*       */       }
/* 23642 */       size += this.unknownFields.getSerializedSize();
/* 23643 */       this.memoizedSize = size;
/* 23644 */       return size;
/*       */     }
/*       */ 
/*       */     
/*       */     public boolean equals(Object obj) {
/* 23649 */       if (obj == this) {
/* 23650 */         return true;
/*       */       }
/* 23652 */       if (!(obj instanceof AuthenticateRequest)) {
/* 23653 */         return super.equals(obj);
/*       */       }
/* 23655 */       AuthenticateRequest other = (AuthenticateRequest)obj;
/*       */ 
/*       */       
/* 23658 */       if (!getCode().equals(other.getCode())) return false; 
/* 23659 */       if (!this.unknownFields.equals(other.unknownFields)) return false; 
/* 23660 */       return true;
/*       */     }
/*       */ 
/*       */     
/*       */     public int hashCode() {
/* 23665 */       if (this.memoizedHashCode != 0) {
/* 23666 */         return this.memoizedHashCode;
/*       */       }
/* 23668 */       int hash = 41;
/* 23669 */       hash = 19 * hash + getDescriptor().hashCode();
/* 23670 */       hash = 37 * hash + 1;
/* 23671 */       hash = 53 * hash + getCode().hashCode();
/* 23672 */       hash = 29 * hash + this.unknownFields.hashCode();
/* 23673 */       this.memoizedHashCode = hash;
/* 23674 */       return hash;
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static AuthenticateRequest parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
/* 23680 */       return (AuthenticateRequest)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static AuthenticateRequest parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 23686 */       return (AuthenticateRequest)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static AuthenticateRequest parseFrom(ByteString data) throws InvalidProtocolBufferException {
/* 23691 */       return (AuthenticateRequest)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static AuthenticateRequest parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 23697 */       return (AuthenticateRequest)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static AuthenticateRequest parseFrom(byte[] data) throws InvalidProtocolBufferException {
/* 23701 */       return (AuthenticateRequest)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static AuthenticateRequest parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 23707 */       return (AuthenticateRequest)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static AuthenticateRequest parseFrom(InputStream input) throws IOException {
/* 23711 */       return 
/* 23712 */         (AuthenticateRequest)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static AuthenticateRequest parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 23718 */       return 
/* 23719 */         (AuthenticateRequest)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static AuthenticateRequest parseDelimitedFrom(InputStream input) throws IOException {
/* 23723 */       return 
/* 23724 */         (AuthenticateRequest)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static AuthenticateRequest parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 23730 */       return 
/* 23731 */         (AuthenticateRequest)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static AuthenticateRequest parseFrom(CodedInputStream input) throws IOException {
/* 23736 */       return 
/* 23737 */         (AuthenticateRequest)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static AuthenticateRequest parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 23743 */       return 
/* 23744 */         (AuthenticateRequest)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public Builder newBuilderForType() {
/* 23748 */       return newBuilder();
/*       */     } public static Builder newBuilder() {
/* 23750 */       return DEFAULT_INSTANCE.toBuilder();
/*       */     }
/*       */     public static Builder newBuilder(AuthenticateRequest prototype) {
/* 23753 */       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
/*       */     }
/*       */     
/*       */     public Builder toBuilder() {
/* 23757 */       return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder())
/* 23758 */         .mergeFrom(this);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
/* 23764 */       Builder builder = new Builder(parent);
/* 23765 */       return builder;
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final class Builder
/*       */       extends GeneratedMessageV3.Builder<Builder>
/*       */       implements DolphinMessages.AuthenticateRequestOrBuilder
/*       */     {
/*       */       private Object code_;
/*       */ 
/*       */ 
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/* 23780 */         return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_AuthenticateRequest_descriptor;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
/* 23786 */         return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_AuthenticateRequest_fieldAccessorTable
/* 23787 */           .ensureFieldAccessorsInitialized(DolphinMessages.AuthenticateRequest.class, Builder.class);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private Builder()
/*       */       {
/* 23919 */         this.code_ = ""; maybeForceBuilderInitialization(); } private Builder(GeneratedMessageV3.BuilderParent parent) { super(parent); this.code_ = ""; maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (DolphinMessages.AuthenticateRequest.alwaysUseFieldBuilders); } public Builder clear() { super.clear(); this.code_ = ""; return this; } public Descriptors.Descriptor getDescriptorForType() { return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_AuthenticateRequest_descriptor; } public DolphinMessages.AuthenticateRequest getDefaultInstanceForType() { return DolphinMessages.AuthenticateRequest.getDefaultInstance(); } public DolphinMessages.AuthenticateRequest build() { DolphinMessages.AuthenticateRequest result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public DolphinMessages.AuthenticateRequest buildPartial() { DolphinMessages.AuthenticateRequest result = new DolphinMessages.AuthenticateRequest(this); result.code_ = this.code_; onBuilt(); return result; } public Builder clone() { return (Builder)super.clone(); } public Builder setField(Descriptors.FieldDescriptor field, Object value) { return (Builder)super.setField(field, value); } public Builder clearField(Descriptors.FieldDescriptor field) { return (Builder)super.clearField(field); } public Builder clearOneof(Descriptors.OneofDescriptor oneof) { return (Builder)super.clearOneof(oneof); } public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) { return (Builder)super.setRepeatedField(field, index, value); }
/*       */       public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) { return (Builder)super.addRepeatedField(field, value); }
/*       */       public Builder mergeFrom(Message other) { if (other instanceof DolphinMessages.AuthenticateRequest) return mergeFrom((DolphinMessages.AuthenticateRequest)other);  super.mergeFrom(other); return this; }
/*       */       public Builder mergeFrom(DolphinMessages.AuthenticateRequest other) { if (other == DolphinMessages.AuthenticateRequest.getDefaultInstance()) return this;  if (!other.getCode().isEmpty()) { this.code_ = other.code_; onChanged(); }  mergeUnknownFields(other.unknownFields); onChanged(); return this; }
/*       */       public final boolean isInitialized() { return true; }
/*       */       public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { DolphinMessages.AuthenticateRequest parsedMessage = null; try { parsedMessage = (DolphinMessages.AuthenticateRequest)DolphinMessages.AuthenticateRequest.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (DolphinMessages.AuthenticateRequest)e.getUnfinishedMessage(); throw e.unwrapIOException(); } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; }
/* 23925 */       public String getCode() { Object ref = this.code_;
/* 23926 */         if (!(ref instanceof String)) {
/* 23927 */           ByteString bs = (ByteString)ref;
/*       */           
/* 23929 */           String s = bs.toStringUtf8();
/* 23930 */           this.code_ = s;
/* 23931 */           return s;
/*       */         } 
/* 23933 */         return (String)ref; }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public ByteString getCodeBytes() {
/* 23942 */         Object ref = this.code_;
/* 23943 */         if (ref instanceof String) {
/*       */           
/* 23945 */           ByteString b = ByteString.copyFromUtf8((String)ref);
/*       */           
/* 23947 */           this.code_ = b;
/* 23948 */           return b;
/*       */         } 
/* 23950 */         return (ByteString)ref;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setCode(String value) {
/* 23960 */         if (value == null) {
/* 23961 */           throw new NullPointerException();
/*       */         }
/*       */         
/* 23964 */         this.code_ = value;
/* 23965 */         onChanged();
/* 23966 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearCode() {
/* 23974 */         this.code_ = DolphinMessages.AuthenticateRequest.getDefaultInstance().getCode();
/* 23975 */         onChanged();
/* 23976 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setCodeBytes(ByteString value) {
/* 23985 */         if (value == null) {
/* 23986 */           throw new NullPointerException();
/*       */         }
/* 23988 */         DolphinMessages.AuthenticateRequest.checkByteStringIsUtf8(value);
/*       */         
/* 23990 */         this.code_ = value;
/* 23991 */         onChanged();
/* 23992 */         return this;
/*       */       }
/*       */ 
/*       */       
/*       */       public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
/* 23997 */         return (Builder)super.setUnknownFields(unknownFields);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
/* 24003 */         return (Builder)super.mergeUnknownFields(unknownFields);
/*       */       }
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 24013 */     private static final AuthenticateRequest DEFAULT_INSTANCE = new AuthenticateRequest();
/*       */ 
/*       */     
/*       */     public static AuthenticateRequest getDefaultInstance() {
/* 24017 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */ 
/*       */     
/* 24021 */     private static final Parser<AuthenticateRequest> PARSER = (Parser<AuthenticateRequest>)new AbstractParser<AuthenticateRequest>()
/*       */       {
/*       */ 
/*       */         
/*       */         public DolphinMessages.AuthenticateRequest parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException
/*       */         {
/* 24027 */           return new DolphinMessages.AuthenticateRequest(input, extensionRegistry);
/*       */         }
/*       */       };
/*       */     
/*       */     public static Parser<AuthenticateRequest> parser() {
/* 24032 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public Parser<AuthenticateRequest> getParserForType() {
/* 24037 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public AuthenticateRequest getDefaultInstanceForType() {
/* 24042 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */   }
/*       */ 
/*       */   
/*       */   public static interface AuthenticateResponseOrBuilder
/*       */     extends MessageOrBuilder
/*       */   {
/*       */     int getCodeValue();
/*       */ 
/*       */     
/*       */     DolphinMessages.AuthenticateResponseCode getCode();
/*       */   }
/*       */ 
/*       */   
/*       */   public static final class AuthenticateResponse
/*       */     extends GeneratedMessageV3
/*       */     implements AuthenticateResponseOrBuilder
/*       */   {
/*       */     private static final long serialVersionUID = 0L;
/*       */     
/*       */     public static final int CODE_FIELD_NUMBER = 1;
/*       */     
/*       */     private int code_;
/*       */     
/*       */     private byte memoizedIsInitialized;
/*       */ 
/*       */     
/*       */     private AuthenticateResponse(GeneratedMessageV3.Builder<?> builder)
/*       */     {
/* 24072 */       super(builder);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/* 24165 */       this.memoizedIsInitialized = -1; } private AuthenticateResponse() { this.memoizedIsInitialized = -1; this.code_ = 0; } protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) { return new AuthenticateResponse(); } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private AuthenticateResponse(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this(); if (extensionRegistry == null) throw new NullPointerException();  UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { int rawValue, tag = input.readTag(); switch (tag) { case 0: done = true; continue;case 8: rawValue = input.readEnum(); this.code_ = rawValue; continue; }  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this); } finally { this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_AuthenticateResponse_descriptor; } protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() { return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_AuthenticateResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(AuthenticateResponse.class, Builder.class); }
/*       */     public int getCodeValue() { return this.code_; }
/*       */     public DolphinMessages.AuthenticateResponseCode getCode() { DolphinMessages.AuthenticateResponseCode result = DolphinMessages.AuthenticateResponseCode.valueOf(this.code_); return (result == null) ? DolphinMessages.AuthenticateResponseCode.UNRECOGNIZED : result; }
/* 24168 */     public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized;
/* 24169 */       if (isInitialized == 1) return true; 
/* 24170 */       if (isInitialized == 0) return false;
/*       */       
/* 24172 */       this.memoizedIsInitialized = 1;
/* 24173 */       return true; }
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/* 24179 */       if (this.code_ != DolphinMessages.AuthenticateResponseCode.Authenticate_Invalid.getNumber()) {
/* 24180 */         output.writeEnum(1, this.code_);
/*       */       }
/* 24182 */       this.unknownFields.writeTo(output);
/*       */     }
/*       */ 
/*       */     
/*       */     public int getSerializedSize() {
/* 24187 */       int size = this.memoizedSize;
/* 24188 */       if (size != -1) return size;
/*       */       
/* 24190 */       size = 0;
/* 24191 */       if (this.code_ != DolphinMessages.AuthenticateResponseCode.Authenticate_Invalid.getNumber()) {
/* 24192 */         size += 
/* 24193 */           CodedOutputStream.computeEnumSize(1, this.code_);
/*       */       }
/* 24195 */       size += this.unknownFields.getSerializedSize();
/* 24196 */       this.memoizedSize = size;
/* 24197 */       return size;
/*       */     }
/*       */ 
/*       */     
/*       */     public boolean equals(Object obj) {
/* 24202 */       if (obj == this) {
/* 24203 */         return true;
/*       */       }
/* 24205 */       if (!(obj instanceof AuthenticateResponse)) {
/* 24206 */         return super.equals(obj);
/*       */       }
/* 24208 */       AuthenticateResponse other = (AuthenticateResponse)obj;
/*       */       
/* 24210 */       if (this.code_ != other.code_) return false; 
/* 24211 */       if (!this.unknownFields.equals(other.unknownFields)) return false; 
/* 24212 */       return true;
/*       */     }
/*       */ 
/*       */     
/*       */     public int hashCode() {
/* 24217 */       if (this.memoizedHashCode != 0) {
/* 24218 */         return this.memoizedHashCode;
/*       */       }
/* 24220 */       int hash = 41;
/* 24221 */       hash = 19 * hash + getDescriptor().hashCode();
/* 24222 */       hash = 37 * hash + 1;
/* 24223 */       hash = 53 * hash + this.code_;
/* 24224 */       hash = 29 * hash + this.unknownFields.hashCode();
/* 24225 */       this.memoizedHashCode = hash;
/* 24226 */       return hash;
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static AuthenticateResponse parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
/* 24232 */       return (AuthenticateResponse)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static AuthenticateResponse parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 24238 */       return (AuthenticateResponse)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static AuthenticateResponse parseFrom(ByteString data) throws InvalidProtocolBufferException {
/* 24243 */       return (AuthenticateResponse)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static AuthenticateResponse parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 24249 */       return (AuthenticateResponse)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static AuthenticateResponse parseFrom(byte[] data) throws InvalidProtocolBufferException {
/* 24253 */       return (AuthenticateResponse)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static AuthenticateResponse parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 24259 */       return (AuthenticateResponse)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static AuthenticateResponse parseFrom(InputStream input) throws IOException {
/* 24263 */       return 
/* 24264 */         (AuthenticateResponse)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static AuthenticateResponse parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 24270 */       return 
/* 24271 */         (AuthenticateResponse)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static AuthenticateResponse parseDelimitedFrom(InputStream input) throws IOException {
/* 24275 */       return 
/* 24276 */         (AuthenticateResponse)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static AuthenticateResponse parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 24282 */       return 
/* 24283 */         (AuthenticateResponse)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static AuthenticateResponse parseFrom(CodedInputStream input) throws IOException {
/* 24288 */       return 
/* 24289 */         (AuthenticateResponse)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static AuthenticateResponse parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 24295 */       return 
/* 24296 */         (AuthenticateResponse)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public Builder newBuilderForType() {
/* 24300 */       return newBuilder();
/*       */     } public static Builder newBuilder() {
/* 24302 */       return DEFAULT_INSTANCE.toBuilder();
/*       */     }
/*       */     public static Builder newBuilder(AuthenticateResponse prototype) {
/* 24305 */       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
/*       */     }
/*       */     
/*       */     public Builder toBuilder() {
/* 24309 */       return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder())
/* 24310 */         .mergeFrom(this);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
/* 24316 */       Builder builder = new Builder(parent);
/* 24317 */       return builder;
/*       */     }
/*       */ 
/*       */     
/*       */     public static final class Builder
/*       */       extends GeneratedMessageV3.Builder<Builder>
/*       */       implements DolphinMessages.AuthenticateResponseOrBuilder
/*       */     {
/*       */       private int code_;
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/* 24328 */         return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_AuthenticateResponse_descriptor;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
/* 24334 */         return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_AuthenticateResponse_fieldAccessorTable
/* 24335 */           .ensureFieldAccessorsInitialized(DolphinMessages.AuthenticateResponse.class, Builder.class);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private Builder()
/*       */       {
/* 24466 */         this.code_ = 0; maybeForceBuilderInitialization(); } private Builder(GeneratedMessageV3.BuilderParent parent) { super(parent); this.code_ = 0; maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (DolphinMessages.AuthenticateResponse.alwaysUseFieldBuilders); } public Builder clear() { super.clear(); this.code_ = 0; return this; } public Descriptors.Descriptor getDescriptorForType() { return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_AuthenticateResponse_descriptor; } public DolphinMessages.AuthenticateResponse getDefaultInstanceForType() { return DolphinMessages.AuthenticateResponse.getDefaultInstance(); } public DolphinMessages.AuthenticateResponse build() { DolphinMessages.AuthenticateResponse result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public DolphinMessages.AuthenticateResponse buildPartial() { DolphinMessages.AuthenticateResponse result = new DolphinMessages.AuthenticateResponse(this); result.code_ = this.code_; onBuilt(); return result; } public Builder clone() { return (Builder)super.clone(); } public Builder setField(Descriptors.FieldDescriptor field, Object value) { return (Builder)super.setField(field, value); } public Builder clearField(Descriptors.FieldDescriptor field) { return (Builder)super.clearField(field); } public Builder clearOneof(Descriptors.OneofDescriptor oneof) { return (Builder)super.clearOneof(oneof); } public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) { return (Builder)super.setRepeatedField(field, index, value); }
/*       */       public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) { return (Builder)super.addRepeatedField(field, value); }
/*       */       public Builder mergeFrom(Message other) { if (other instanceof DolphinMessages.AuthenticateResponse) return mergeFrom((DolphinMessages.AuthenticateResponse)other);  super.mergeFrom(other); return this; }
/*       */       public Builder mergeFrom(DolphinMessages.AuthenticateResponse other) { if (other == DolphinMessages.AuthenticateResponse.getDefaultInstance()) return this;  if (other.code_ != 0) setCodeValue(other.getCodeValue());  mergeUnknownFields(other.unknownFields); onChanged(); return this; }
/*       */       public final boolean isInitialized() { return true; }
/*       */       public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { DolphinMessages.AuthenticateResponse parsedMessage = null; try { parsedMessage = (DolphinMessages.AuthenticateResponse)DolphinMessages.AuthenticateResponse.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (DolphinMessages.AuthenticateResponse)e.getUnfinishedMessage(); throw e.unwrapIOException(); } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; }
/* 24472 */       public int getCodeValue() { return this.code_; }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setCodeValue(int value) {
/* 24481 */         this.code_ = value;
/* 24482 */         onChanged();
/* 24483 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinMessages.AuthenticateResponseCode getCode() {
/* 24492 */         DolphinMessages.AuthenticateResponseCode result = DolphinMessages.AuthenticateResponseCode.valueOf(this.code_);
/* 24493 */         return (result == null) ? DolphinMessages.AuthenticateResponseCode.UNRECOGNIZED : result;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setCode(DolphinMessages.AuthenticateResponseCode value) {
/* 24501 */         if (value == null) {
/* 24502 */           throw new NullPointerException();
/*       */         }
/*       */         
/* 24505 */         this.code_ = value.getNumber();
/* 24506 */         onChanged();
/* 24507 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearCode() {
/* 24515 */         this.code_ = 0;
/* 24516 */         onChanged();
/* 24517 */         return this;
/*       */       }
/*       */ 
/*       */       
/*       */       public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
/* 24522 */         return (Builder)super.setUnknownFields(unknownFields);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
/* 24528 */         return (Builder)super.mergeUnknownFields(unknownFields);
/*       */       }
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 24538 */     private static final AuthenticateResponse DEFAULT_INSTANCE = new AuthenticateResponse();
/*       */ 
/*       */     
/*       */     public static AuthenticateResponse getDefaultInstance() {
/* 24542 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */ 
/*       */     
/* 24546 */     private static final Parser<AuthenticateResponse> PARSER = (Parser<AuthenticateResponse>)new AbstractParser<AuthenticateResponse>()
/*       */       {
/*       */ 
/*       */         
/*       */         public DolphinMessages.AuthenticateResponse parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException
/*       */         {
/* 24552 */           return new DolphinMessages.AuthenticateResponse(input, extensionRegistry);
/*       */         }
/*       */       };
/*       */     
/*       */     public static Parser<AuthenticateResponse> parser() {
/* 24557 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public Parser<AuthenticateResponse> getParserForType() {
/* 24562 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public AuthenticateResponse getDefaultInstanceForType() {
/* 24567 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */   }
/*       */ 
/*       */ 
/*       */   
/*       */   public static interface CommandRequestOrBuilder
/*       */     extends MessageOrBuilder
/*       */   {
/*       */     String getCommand();
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getCommandBytes();
/*       */   }
/*       */ 
/*       */ 
/*       */   
/*       */   public static final class CommandRequest
/*       */     extends GeneratedMessageV3
/*       */     implements CommandRequestOrBuilder
/*       */   {
/*       */     private static final long serialVersionUID = 0L;
/*       */ 
/*       */     
/*       */     public static final int COMMAND_FIELD_NUMBER = 1;
/*       */ 
/*       */     
/*       */     private volatile Object command_;
/*       */     
/*       */     private byte memoizedIsInitialized;
/*       */ 
/*       */     
/*       */     private CommandRequest(GeneratedMessageV3.Builder<?> builder)
/*       */     {
/* 24602 */       super(builder);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/* 24714 */       this.memoizedIsInitialized = -1; } private CommandRequest() { this.memoizedIsInitialized = -1; this.command_ = ""; } protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) { return new CommandRequest(); } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private CommandRequest(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this(); if (extensionRegistry == null) throw new NullPointerException();  UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { String s; int tag = input.readTag(); switch (tag) { case 0: done = true; continue;case 10: s = input.readStringRequireUtf8(); this.command_ = s; continue; }  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this); } finally { this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_CommandRequest_descriptor; } protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() { return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_CommandRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(CommandRequest.class, Builder.class); }
/*       */     public String getCommand() { Object ref = this.command_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.command_ = s; return s; }
/*       */     public ByteString getCommandBytes() { Object ref = this.command_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.command_ = b; return b; }  return (ByteString)ref; }
/* 24717 */     public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized;
/* 24718 */       if (isInitialized == 1) return true; 
/* 24719 */       if (isInitialized == 0) return false;
/*       */       
/* 24721 */       this.memoizedIsInitialized = 1;
/* 24722 */       return true; }
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/* 24728 */       if (!getCommandBytes().isEmpty()) {
/* 24729 */         GeneratedMessageV3.writeString(output, 1, this.command_);
/*       */       }
/* 24731 */       this.unknownFields.writeTo(output);
/*       */     }
/*       */ 
/*       */     
/*       */     public int getSerializedSize() {
/* 24736 */       int size = this.memoizedSize;
/* 24737 */       if (size != -1) return size;
/*       */       
/* 24739 */       size = 0;
/* 24740 */       if (!getCommandBytes().isEmpty()) {
/* 24741 */         size += GeneratedMessageV3.computeStringSize(1, this.command_);
/*       */       }
/* 24743 */       size += this.unknownFields.getSerializedSize();
/* 24744 */       this.memoizedSize = size;
/* 24745 */       return size;
/*       */     }
/*       */ 
/*       */     
/*       */     public boolean equals(Object obj) {
/* 24750 */       if (obj == this) {
/* 24751 */         return true;
/*       */       }
/* 24753 */       if (!(obj instanceof CommandRequest)) {
/* 24754 */         return super.equals(obj);
/*       */       }
/* 24756 */       CommandRequest other = (CommandRequest)obj;
/*       */ 
/*       */       
/* 24759 */       if (!getCommand().equals(other.getCommand())) return false; 
/* 24760 */       if (!this.unknownFields.equals(other.unknownFields)) return false; 
/* 24761 */       return true;
/*       */     }
/*       */ 
/*       */     
/*       */     public int hashCode() {
/* 24766 */       if (this.memoizedHashCode != 0) {
/* 24767 */         return this.memoizedHashCode;
/*       */       }
/* 24769 */       int hash = 41;
/* 24770 */       hash = 19 * hash + getDescriptor().hashCode();
/* 24771 */       hash = 37 * hash + 1;
/* 24772 */       hash = 53 * hash + getCommand().hashCode();
/* 24773 */       hash = 29 * hash + this.unknownFields.hashCode();
/* 24774 */       this.memoizedHashCode = hash;
/* 24775 */       return hash;
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static CommandRequest parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
/* 24781 */       return (CommandRequest)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static CommandRequest parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 24787 */       return (CommandRequest)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static CommandRequest parseFrom(ByteString data) throws InvalidProtocolBufferException {
/* 24792 */       return (CommandRequest)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static CommandRequest parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 24798 */       return (CommandRequest)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static CommandRequest parseFrom(byte[] data) throws InvalidProtocolBufferException {
/* 24802 */       return (CommandRequest)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static CommandRequest parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 24808 */       return (CommandRequest)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static CommandRequest parseFrom(InputStream input) throws IOException {
/* 24812 */       return 
/* 24813 */         (CommandRequest)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static CommandRequest parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 24819 */       return 
/* 24820 */         (CommandRequest)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static CommandRequest parseDelimitedFrom(InputStream input) throws IOException {
/* 24824 */       return 
/* 24825 */         (CommandRequest)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static CommandRequest parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 24831 */       return 
/* 24832 */         (CommandRequest)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static CommandRequest parseFrom(CodedInputStream input) throws IOException {
/* 24837 */       return 
/* 24838 */         (CommandRequest)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static CommandRequest parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 24844 */       return 
/* 24845 */         (CommandRequest)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public Builder newBuilderForType() {
/* 24849 */       return newBuilder();
/*       */     } public static Builder newBuilder() {
/* 24851 */       return DEFAULT_INSTANCE.toBuilder();
/*       */     }
/*       */     public static Builder newBuilder(CommandRequest prototype) {
/* 24854 */       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
/*       */     }
/*       */     
/*       */     public Builder toBuilder() {
/* 24858 */       return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder())
/* 24859 */         .mergeFrom(this);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
/* 24865 */       Builder builder = new Builder(parent);
/* 24866 */       return builder;
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final class Builder
/*       */       extends GeneratedMessageV3.Builder<Builder>
/*       */       implements DolphinMessages.CommandRequestOrBuilder
/*       */     {
/*       */       private Object command_;
/*       */ 
/*       */ 
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/* 24881 */         return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_CommandRequest_descriptor;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
/* 24887 */         return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_CommandRequest_fieldAccessorTable
/* 24888 */           .ensureFieldAccessorsInitialized(DolphinMessages.CommandRequest.class, Builder.class);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private Builder()
/*       */       {
/* 25020 */         this.command_ = ""; maybeForceBuilderInitialization(); } private Builder(GeneratedMessageV3.BuilderParent parent) { super(parent); this.command_ = ""; maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (DolphinMessages.CommandRequest.alwaysUseFieldBuilders); } public Builder clear() { super.clear(); this.command_ = ""; return this; } public Descriptors.Descriptor getDescriptorForType() { return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_CommandRequest_descriptor; } public DolphinMessages.CommandRequest getDefaultInstanceForType() { return DolphinMessages.CommandRequest.getDefaultInstance(); } public DolphinMessages.CommandRequest build() { DolphinMessages.CommandRequest result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public DolphinMessages.CommandRequest buildPartial() { DolphinMessages.CommandRequest result = new DolphinMessages.CommandRequest(this); result.command_ = this.command_; onBuilt(); return result; } public Builder clone() { return (Builder)super.clone(); } public Builder setField(Descriptors.FieldDescriptor field, Object value) { return (Builder)super.setField(field, value); } public Builder clearField(Descriptors.FieldDescriptor field) { return (Builder)super.clearField(field); } public Builder clearOneof(Descriptors.OneofDescriptor oneof) { return (Builder)super.clearOneof(oneof); } public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) { return (Builder)super.setRepeatedField(field, index, value); }
/*       */       public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) { return (Builder)super.addRepeatedField(field, value); }
/*       */       public Builder mergeFrom(Message other) { if (other instanceof DolphinMessages.CommandRequest) return mergeFrom((DolphinMessages.CommandRequest)other);  super.mergeFrom(other); return this; }
/*       */       public Builder mergeFrom(DolphinMessages.CommandRequest other) { if (other == DolphinMessages.CommandRequest.getDefaultInstance()) return this;  if (!other.getCommand().isEmpty()) { this.command_ = other.command_; onChanged(); }  mergeUnknownFields(other.unknownFields); onChanged(); return this; }
/*       */       public final boolean isInitialized() { return true; }
/*       */       public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { DolphinMessages.CommandRequest parsedMessage = null; try { parsedMessage = (DolphinMessages.CommandRequest)DolphinMessages.CommandRequest.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (DolphinMessages.CommandRequest)e.getUnfinishedMessage(); throw e.unwrapIOException(); } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; }
/* 25026 */       public String getCommand() { Object ref = this.command_;
/* 25027 */         if (!(ref instanceof String)) {
/* 25028 */           ByteString bs = (ByteString)ref;
/*       */           
/* 25030 */           String s = bs.toStringUtf8();
/* 25031 */           this.command_ = s;
/* 25032 */           return s;
/*       */         } 
/* 25034 */         return (String)ref; }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public ByteString getCommandBytes() {
/* 25043 */         Object ref = this.command_;
/* 25044 */         if (ref instanceof String) {
/*       */           
/* 25046 */           ByteString b = ByteString.copyFromUtf8((String)ref);
/*       */           
/* 25048 */           this.command_ = b;
/* 25049 */           return b;
/*       */         } 
/* 25051 */         return (ByteString)ref;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setCommand(String value) {
/* 25061 */         if (value == null) {
/* 25062 */           throw new NullPointerException();
/*       */         }
/*       */         
/* 25065 */         this.command_ = value;
/* 25066 */         onChanged();
/* 25067 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearCommand() {
/* 25075 */         this.command_ = DolphinMessages.CommandRequest.getDefaultInstance().getCommand();
/* 25076 */         onChanged();
/* 25077 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setCommandBytes(ByteString value) {
/* 25086 */         if (value == null) {
/* 25087 */           throw new NullPointerException();
/*       */         }
/* 25089 */         DolphinMessages.CommandRequest.checkByteStringIsUtf8(value);
/*       */         
/* 25091 */         this.command_ = value;
/* 25092 */         onChanged();
/* 25093 */         return this;
/*       */       }
/*       */ 
/*       */       
/*       */       public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
/* 25098 */         return (Builder)super.setUnknownFields(unknownFields);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
/* 25104 */         return (Builder)super.mergeUnknownFields(unknownFields);
/*       */       }
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 25114 */     private static final CommandRequest DEFAULT_INSTANCE = new CommandRequest();
/*       */ 
/*       */     
/*       */     public static CommandRequest getDefaultInstance() {
/* 25118 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */ 
/*       */     
/* 25122 */     private static final Parser<CommandRequest> PARSER = (Parser<CommandRequest>)new AbstractParser<CommandRequest>()
/*       */       {
/*       */ 
/*       */         
/*       */         public DolphinMessages.CommandRequest parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException
/*       */         {
/* 25128 */           return new DolphinMessages.CommandRequest(input, extensionRegistry);
/*       */         }
/*       */       };
/*       */     
/*       */     public static Parser<CommandRequest> parser() {
/* 25133 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public Parser<CommandRequest> getParserForType() {
/* 25138 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public CommandRequest getDefaultInstanceForType() {
/* 25143 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */   }
/*       */ 
/*       */ 
/*       */   
/*       */   public static interface CommandResponseOrBuilder
/*       */     extends MessageOrBuilder
/*       */   {
/*       */     String getResponse();
/*       */ 
/*       */     
/*       */     ByteString getResponseBytes();
/*       */   }
/*       */ 
/*       */   
/*       */   public static final class CommandResponse
/*       */     extends GeneratedMessageV3
/*       */     implements CommandResponseOrBuilder
/*       */   {
/*       */     private static final long serialVersionUID = 0L;
/*       */     
/*       */     public static final int RESPONSE_FIELD_NUMBER = 1;
/*       */     
/*       */     private volatile Object response_;
/*       */     
/*       */     private byte memoizedIsInitialized;
/*       */ 
/*       */     
/*       */     private CommandResponse(GeneratedMessageV3.Builder<?> builder)
/*       */     {
/* 25174 */       super(builder);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/* 25286 */       this.memoizedIsInitialized = -1; } private CommandResponse() { this.memoizedIsInitialized = -1; this.response_ = ""; } protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) { return new CommandResponse(); } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private CommandResponse(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this(); if (extensionRegistry == null) throw new NullPointerException();  UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { String s; int tag = input.readTag(); switch (tag) { case 0: done = true; continue;case 10: s = input.readStringRequireUtf8(); this.response_ = s; continue; }  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this); } finally { this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_CommandResponse_descriptor; } protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() { return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_CommandResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(CommandResponse.class, Builder.class); }
/*       */     public String getResponse() { Object ref = this.response_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.response_ = s; return s; }
/*       */     public ByteString getResponseBytes() { Object ref = this.response_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.response_ = b; return b; }  return (ByteString)ref; }
/* 25289 */     public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized;
/* 25290 */       if (isInitialized == 1) return true; 
/* 25291 */       if (isInitialized == 0) return false;
/*       */       
/* 25293 */       this.memoizedIsInitialized = 1;
/* 25294 */       return true; }
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/* 25300 */       if (!getResponseBytes().isEmpty()) {
/* 25301 */         GeneratedMessageV3.writeString(output, 1, this.response_);
/*       */       }
/* 25303 */       this.unknownFields.writeTo(output);
/*       */     }
/*       */ 
/*       */     
/*       */     public int getSerializedSize() {
/* 25308 */       int size = this.memoizedSize;
/* 25309 */       if (size != -1) return size;
/*       */       
/* 25311 */       size = 0;
/* 25312 */       if (!getResponseBytes().isEmpty()) {
/* 25313 */         size += GeneratedMessageV3.computeStringSize(1, this.response_);
/*       */       }
/* 25315 */       size += this.unknownFields.getSerializedSize();
/* 25316 */       this.memoizedSize = size;
/* 25317 */       return size;
/*       */     }
/*       */ 
/*       */     
/*       */     public boolean equals(Object obj) {
/* 25322 */       if (obj == this) {
/* 25323 */         return true;
/*       */       }
/* 25325 */       if (!(obj instanceof CommandResponse)) {
/* 25326 */         return super.equals(obj);
/*       */       }
/* 25328 */       CommandResponse other = (CommandResponse)obj;
/*       */ 
/*       */       
/* 25331 */       if (!getResponse().equals(other.getResponse())) return false; 
/* 25332 */       if (!this.unknownFields.equals(other.unknownFields)) return false; 
/* 25333 */       return true;
/*       */     }
/*       */ 
/*       */     
/*       */     public int hashCode() {
/* 25338 */       if (this.memoizedHashCode != 0) {
/* 25339 */         return this.memoizedHashCode;
/*       */       }
/* 25341 */       int hash = 41;
/* 25342 */       hash = 19 * hash + getDescriptor().hashCode();
/* 25343 */       hash = 37 * hash + 1;
/* 25344 */       hash = 53 * hash + getResponse().hashCode();
/* 25345 */       hash = 29 * hash + this.unknownFields.hashCode();
/* 25346 */       this.memoizedHashCode = hash;
/* 25347 */       return hash;
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static CommandResponse parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
/* 25353 */       return (CommandResponse)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static CommandResponse parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 25359 */       return (CommandResponse)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static CommandResponse parseFrom(ByteString data) throws InvalidProtocolBufferException {
/* 25364 */       return (CommandResponse)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static CommandResponse parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 25370 */       return (CommandResponse)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static CommandResponse parseFrom(byte[] data) throws InvalidProtocolBufferException {
/* 25374 */       return (CommandResponse)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static CommandResponse parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 25380 */       return (CommandResponse)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static CommandResponse parseFrom(InputStream input) throws IOException {
/* 25384 */       return 
/* 25385 */         (CommandResponse)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static CommandResponse parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 25391 */       return 
/* 25392 */         (CommandResponse)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static CommandResponse parseDelimitedFrom(InputStream input) throws IOException {
/* 25396 */       return 
/* 25397 */         (CommandResponse)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static CommandResponse parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 25403 */       return 
/* 25404 */         (CommandResponse)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static CommandResponse parseFrom(CodedInputStream input) throws IOException {
/* 25409 */       return 
/* 25410 */         (CommandResponse)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static CommandResponse parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 25416 */       return 
/* 25417 */         (CommandResponse)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public Builder newBuilderForType() {
/* 25421 */       return newBuilder();
/*       */     } public static Builder newBuilder() {
/* 25423 */       return DEFAULT_INSTANCE.toBuilder();
/*       */     }
/*       */     public static Builder newBuilder(CommandResponse prototype) {
/* 25426 */       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
/*       */     }
/*       */     
/*       */     public Builder toBuilder() {
/* 25430 */       return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder())
/* 25431 */         .mergeFrom(this);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
/* 25437 */       Builder builder = new Builder(parent);
/* 25438 */       return builder;
/*       */     }
/*       */ 
/*       */     
/*       */     public static final class Builder
/*       */       extends GeneratedMessageV3.Builder<Builder>
/*       */       implements DolphinMessages.CommandResponseOrBuilder
/*       */     {
/*       */       private Object response_;
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/* 25449 */         return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_CommandResponse_descriptor;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
/* 25455 */         return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_CommandResponse_fieldAccessorTable
/* 25456 */           .ensureFieldAccessorsInitialized(DolphinMessages.CommandResponse.class, Builder.class);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private Builder()
/*       */       {
/* 25588 */         this.response_ = ""; maybeForceBuilderInitialization(); } private Builder(GeneratedMessageV3.BuilderParent parent) { super(parent); this.response_ = ""; maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (DolphinMessages.CommandResponse.alwaysUseFieldBuilders); } public Builder clear() { super.clear(); this.response_ = ""; return this; } public Descriptors.Descriptor getDescriptorForType() { return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_CommandResponse_descriptor; } public DolphinMessages.CommandResponse getDefaultInstanceForType() { return DolphinMessages.CommandResponse.getDefaultInstance(); } public DolphinMessages.CommandResponse build() { DolphinMessages.CommandResponse result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public DolphinMessages.CommandResponse buildPartial() { DolphinMessages.CommandResponse result = new DolphinMessages.CommandResponse(this); result.response_ = this.response_; onBuilt(); return result; } public Builder clone() { return (Builder)super.clone(); } public Builder setField(Descriptors.FieldDescriptor field, Object value) { return (Builder)super.setField(field, value); } public Builder clearField(Descriptors.FieldDescriptor field) { return (Builder)super.clearField(field); } public Builder clearOneof(Descriptors.OneofDescriptor oneof) { return (Builder)super.clearOneof(oneof); } public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) { return (Builder)super.setRepeatedField(field, index, value); }
/*       */       public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) { return (Builder)super.addRepeatedField(field, value); }
/*       */       public Builder mergeFrom(Message other) { if (other instanceof DolphinMessages.CommandResponse) return mergeFrom((DolphinMessages.CommandResponse)other);  super.mergeFrom(other); return this; }
/*       */       public Builder mergeFrom(DolphinMessages.CommandResponse other) { if (other == DolphinMessages.CommandResponse.getDefaultInstance()) return this;  if (!other.getResponse().isEmpty()) { this.response_ = other.response_; onChanged(); }  mergeUnknownFields(other.unknownFields); onChanged(); return this; }
/*       */       public final boolean isInitialized() { return true; }
/*       */       public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { DolphinMessages.CommandResponse parsedMessage = null; try { parsedMessage = (DolphinMessages.CommandResponse)DolphinMessages.CommandResponse.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (DolphinMessages.CommandResponse)e.getUnfinishedMessage(); throw e.unwrapIOException(); } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; }
/* 25594 */       public String getResponse() { Object ref = this.response_;
/* 25595 */         if (!(ref instanceof String)) {
/* 25596 */           ByteString bs = (ByteString)ref;
/*       */           
/* 25598 */           String s = bs.toStringUtf8();
/* 25599 */           this.response_ = s;
/* 25600 */           return s;
/*       */         } 
/* 25602 */         return (String)ref; }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public ByteString getResponseBytes() {
/* 25611 */         Object ref = this.response_;
/* 25612 */         if (ref instanceof String) {
/*       */           
/* 25614 */           ByteString b = ByteString.copyFromUtf8((String)ref);
/*       */           
/* 25616 */           this.response_ = b;
/* 25617 */           return b;
/*       */         } 
/* 25619 */         return (ByteString)ref;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setResponse(String value) {
/* 25629 */         if (value == null) {
/* 25630 */           throw new NullPointerException();
/*       */         }
/*       */         
/* 25633 */         this.response_ = value;
/* 25634 */         onChanged();
/* 25635 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearResponse() {
/* 25643 */         this.response_ = DolphinMessages.CommandResponse.getDefaultInstance().getResponse();
/* 25644 */         onChanged();
/* 25645 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setResponseBytes(ByteString value) {
/* 25654 */         if (value == null) {
/* 25655 */           throw new NullPointerException();
/*       */         }
/* 25657 */         DolphinMessages.CommandResponse.checkByteStringIsUtf8(value);
/*       */         
/* 25659 */         this.response_ = value;
/* 25660 */         onChanged();
/* 25661 */         return this;
/*       */       }
/*       */ 
/*       */       
/*       */       public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
/* 25666 */         return (Builder)super.setUnknownFields(unknownFields);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
/* 25672 */         return (Builder)super.mergeUnknownFields(unknownFields);
/*       */       }
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 25682 */     private static final CommandResponse DEFAULT_INSTANCE = new CommandResponse();
/*       */ 
/*       */     
/*       */     public static CommandResponse getDefaultInstance() {
/* 25686 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */ 
/*       */     
/* 25690 */     private static final Parser<CommandResponse> PARSER = (Parser<CommandResponse>)new AbstractParser<CommandResponse>()
/*       */       {
/*       */ 
/*       */         
/*       */         public DolphinMessages.CommandResponse parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException
/*       */         {
/* 25696 */           return new DolphinMessages.CommandResponse(input, extensionRegistry);
/*       */         }
/*       */       };
/*       */     
/*       */     public static Parser<CommandResponse> parser() {
/* 25701 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public Parser<CommandResponse> getParserForType() {
/* 25706 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public CommandResponse getDefaultInstanceForType() {
/* 25711 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */   }
/*       */ 
/*       */   
/*       */   public static interface USSDDataOrBuilder
/*       */     extends MessageOrBuilder
/*       */   {
/*       */     int getID();
/*       */ 
/*       */     
/*       */     String getUSSDCode();
/*       */ 
/*       */     
/*       */     ByteString getUSSDCodeBytes();
/*       */ 
/*       */     
/*       */     String getUSSDResponse();
/*       */ 
/*       */     
/*       */     ByteString getUSSDResponseBytes();
/*       */ 
/*       */     
/*       */     int getTimestamp();
/*       */ 
/*       */     
/*       */     boolean getResponseStatus();
/*       */   }
/*       */ 
/*       */   
/*       */   public static final class USSDData
/*       */     extends GeneratedMessageV3
/*       */     implements USSDDataOrBuilder
/*       */   {
/*       */     private static final long serialVersionUID = 0L;
/*       */     
/*       */     public static final int ID_FIELD_NUMBER = 1;
/*       */     
/*       */     private int iD_;
/*       */     
/*       */     public static final int USSDCODE_FIELD_NUMBER = 2;
/*       */     
/*       */     private volatile Object uSSDCode_;
/*       */     
/*       */     public static final int USSDRESPONSE_FIELD_NUMBER = 3;
/*       */     
/*       */     private volatile Object uSSDResponse_;
/*       */     
/*       */     public static final int TIMESTAMP_FIELD_NUMBER = 4;
/*       */     
/*       */     private int timestamp_;
/*       */     
/*       */     public static final int RESPONSESTATUS_FIELD_NUMBER = 5;
/*       */     
/*       */     private boolean responseStatus_;
/*       */     
/*       */     private byte memoizedIsInitialized;
/*       */ 
/*       */     
/*       */     private USSDData(GeneratedMessageV3.Builder<?> builder)
/*       */     {
/* 25772 */       super(builder);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/* 25977 */       this.memoizedIsInitialized = -1; } private USSDData() { this.memoizedIsInitialized = -1; this.uSSDCode_ = ""; this.uSSDResponse_ = ""; } protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) { return new USSDData(); } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private USSDData(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this(); if (extensionRegistry == null) throw new NullPointerException();  UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { String s; int tag = input.readTag(); switch (tag) { case 0: done = true; continue;case 8: this.iD_ = input.readUInt32(); continue;case 18: s = input.readStringRequireUtf8(); this.uSSDCode_ = s; continue;case 26: s = input.readStringRequireUtf8(); this.uSSDResponse_ = s; continue;case 32: this.timestamp_ = input.readUInt32(); continue;case 40: this.responseStatus_ = input.readBool(); continue; }  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this); } finally { this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_USSDData_descriptor; } protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() { return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_USSDData_fieldAccessorTable.ensureFieldAccessorsInitialized(USSDData.class, Builder.class); } public int getID() { return this.iD_; } public String getUSSDCode() { Object ref = this.uSSDCode_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.uSSDCode_ = s; return s; } public ByteString getUSSDCodeBytes() { Object ref = this.uSSDCode_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.uSSDCode_ = b; return b; }  return (ByteString)ref; } public String getUSSDResponse() { Object ref = this.uSSDResponse_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.uSSDResponse_ = s; return s; } public ByteString getUSSDResponseBytes() { Object ref = this.uSSDResponse_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.uSSDResponse_ = b; return b; }  return (ByteString)ref; }
/*       */     public int getTimestamp() { return this.timestamp_; }
/*       */     public boolean getResponseStatus() { return this.responseStatus_; }
/* 25980 */     public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized;
/* 25981 */       if (isInitialized == 1) return true; 
/* 25982 */       if (isInitialized == 0) return false;
/*       */       
/* 25984 */       this.memoizedIsInitialized = 1;
/* 25985 */       return true; }
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/* 25991 */       if (this.iD_ != 0) {
/* 25992 */         output.writeUInt32(1, this.iD_);
/*       */       }
/* 25994 */       if (!getUSSDCodeBytes().isEmpty()) {
/* 25995 */         GeneratedMessageV3.writeString(output, 2, this.uSSDCode_);
/*       */       }
/* 25997 */       if (!getUSSDResponseBytes().isEmpty()) {
/* 25998 */         GeneratedMessageV3.writeString(output, 3, this.uSSDResponse_);
/*       */       }
/* 26000 */       if (this.timestamp_ != 0) {
/* 26001 */         output.writeUInt32(4, this.timestamp_);
/*       */       }
/* 26003 */       if (this.responseStatus_) {
/* 26004 */         output.writeBool(5, this.responseStatus_);
/*       */       }
/* 26006 */       this.unknownFields.writeTo(output);
/*       */     }
/*       */ 
/*       */     
/*       */     public int getSerializedSize() {
/* 26011 */       int size = this.memoizedSize;
/* 26012 */       if (size != -1) return size;
/*       */       
/* 26014 */       size = 0;
/* 26015 */       if (this.iD_ != 0) {
/* 26016 */         size += 
/* 26017 */           CodedOutputStream.computeUInt32Size(1, this.iD_);
/*       */       }
/* 26019 */       if (!getUSSDCodeBytes().isEmpty()) {
/* 26020 */         size += GeneratedMessageV3.computeStringSize(2, this.uSSDCode_);
/*       */       }
/* 26022 */       if (!getUSSDResponseBytes().isEmpty()) {
/* 26023 */         size += GeneratedMessageV3.computeStringSize(3, this.uSSDResponse_);
/*       */       }
/* 26025 */       if (this.timestamp_ != 0) {
/* 26026 */         size += 
/* 26027 */           CodedOutputStream.computeUInt32Size(4, this.timestamp_);
/*       */       }
/* 26029 */       if (this.responseStatus_) {
/* 26030 */         size += 
/* 26031 */           CodedOutputStream.computeBoolSize(5, this.responseStatus_);
/*       */       }
/* 26033 */       size += this.unknownFields.getSerializedSize();
/* 26034 */       this.memoizedSize = size;
/* 26035 */       return size;
/*       */     }
/*       */ 
/*       */     
/*       */     public boolean equals(Object obj) {
/* 26040 */       if (obj == this) {
/* 26041 */         return true;
/*       */       }
/* 26043 */       if (!(obj instanceof USSDData)) {
/* 26044 */         return super.equals(obj);
/*       */       }
/* 26046 */       USSDData other = (USSDData)obj;
/*       */       
/* 26048 */       if (getID() != other
/* 26049 */         .getID()) return false;
/*       */       
/* 26051 */       if (!getUSSDCode().equals(other.getUSSDCode())) return false;
/*       */       
/* 26053 */       if (!getUSSDResponse().equals(other.getUSSDResponse())) return false; 
/* 26054 */       if (getTimestamp() != other
/* 26055 */         .getTimestamp()) return false; 
/* 26056 */       if (getResponseStatus() != other
/* 26057 */         .getResponseStatus()) return false; 
/* 26058 */       if (!this.unknownFields.equals(other.unknownFields)) return false; 
/* 26059 */       return true;
/*       */     }
/*       */ 
/*       */     
/*       */     public int hashCode() {
/* 26064 */       if (this.memoizedHashCode != 0) {
/* 26065 */         return this.memoizedHashCode;
/*       */       }
/* 26067 */       int hash = 41;
/* 26068 */       hash = 19 * hash + getDescriptor().hashCode();
/* 26069 */       hash = 37 * hash + 1;
/* 26070 */       hash = 53 * hash + getID();
/* 26071 */       hash = 37 * hash + 2;
/* 26072 */       hash = 53 * hash + getUSSDCode().hashCode();
/* 26073 */       hash = 37 * hash + 3;
/* 26074 */       hash = 53 * hash + getUSSDResponse().hashCode();
/* 26075 */       hash = 37 * hash + 4;
/* 26076 */       hash = 53 * hash + getTimestamp();
/* 26077 */       hash = 37 * hash + 5;
/* 26078 */       hash = 53 * hash + Internal.hashBoolean(
/* 26079 */           getResponseStatus());
/* 26080 */       hash = 29 * hash + this.unknownFields.hashCode();
/* 26081 */       this.memoizedHashCode = hash;
/* 26082 */       return hash;
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static USSDData parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
/* 26088 */       return (USSDData)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static USSDData parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 26094 */       return (USSDData)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static USSDData parseFrom(ByteString data) throws InvalidProtocolBufferException {
/* 26099 */       return (USSDData)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static USSDData parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 26105 */       return (USSDData)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static USSDData parseFrom(byte[] data) throws InvalidProtocolBufferException {
/* 26109 */       return (USSDData)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static USSDData parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 26115 */       return (USSDData)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static USSDData parseFrom(InputStream input) throws IOException {
/* 26119 */       return 
/* 26120 */         (USSDData)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static USSDData parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 26126 */       return 
/* 26127 */         (USSDData)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static USSDData parseDelimitedFrom(InputStream input) throws IOException {
/* 26131 */       return 
/* 26132 */         (USSDData)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static USSDData parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 26138 */       return 
/* 26139 */         (USSDData)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static USSDData parseFrom(CodedInputStream input) throws IOException {
/* 26144 */       return 
/* 26145 */         (USSDData)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static USSDData parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 26151 */       return 
/* 26152 */         (USSDData)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public Builder newBuilderForType() {
/* 26156 */       return newBuilder();
/*       */     } public static Builder newBuilder() {
/* 26158 */       return DEFAULT_INSTANCE.toBuilder();
/*       */     }
/*       */     public static Builder newBuilder(USSDData prototype) {
/* 26161 */       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
/*       */     }
/*       */     
/*       */     public Builder toBuilder() {
/* 26165 */       return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder())
/* 26166 */         .mergeFrom(this);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
/* 26172 */       Builder builder = new Builder(parent);
/* 26173 */       return builder;
/*       */     }
/*       */     
/*       */     public static final class Builder extends GeneratedMessageV3.Builder<Builder> implements DolphinMessages.USSDDataOrBuilder {
/*       */       private int iD_;
/*       */       private Object uSSDCode_;
/*       */       private Object uSSDResponse_;
/*       */       private int timestamp_;
/*       */       private boolean responseStatus_;
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/* 26184 */         return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_USSDData_descriptor;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
/* 26190 */         return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_USSDData_fieldAccessorTable
/* 26191 */           .ensureFieldAccessorsInitialized(DolphinMessages.USSDData.class, Builder.class);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private Builder()
/*       */       {
/* 26379 */         this.uSSDCode_ = "";
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 26455 */         this.uSSDResponse_ = ""; maybeForceBuilderInitialization(); } private Builder(GeneratedMessageV3.BuilderParent parent) { super(parent); this.uSSDCode_ = ""; this.uSSDResponse_ = ""; maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (DolphinMessages.USSDData.alwaysUseFieldBuilders); } public Builder clear() { super.clear(); this.iD_ = 0; this.uSSDCode_ = ""; this.uSSDResponse_ = ""; this.timestamp_ = 0; this.responseStatus_ = false; return this; } public Descriptors.Descriptor getDescriptorForType() { return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_USSDData_descriptor; } public DolphinMessages.USSDData getDefaultInstanceForType() { return DolphinMessages.USSDData.getDefaultInstance(); } public DolphinMessages.USSDData build() { DolphinMessages.USSDData result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public DolphinMessages.USSDData buildPartial() { DolphinMessages.USSDData result = new DolphinMessages.USSDData(this); result.iD_ = this.iD_; result.uSSDCode_ = this.uSSDCode_; result.uSSDResponse_ = this.uSSDResponse_; result.timestamp_ = this.timestamp_; result.responseStatus_ = this.responseStatus_; onBuilt(); return result; } public Builder clone() { return (Builder)super.clone(); } public Builder setField(Descriptors.FieldDescriptor field, Object value) { return (Builder)super.setField(field, value); } public Builder clearField(Descriptors.FieldDescriptor field) { return (Builder)super.clearField(field); } public Builder clearOneof(Descriptors.OneofDescriptor oneof) { return (Builder)super.clearOneof(oneof); } public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) { return (Builder)super.setRepeatedField(field, index, value); } public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) { return (Builder)super.addRepeatedField(field, value); } public Builder mergeFrom(Message other) { if (other instanceof DolphinMessages.USSDData) return mergeFrom((DolphinMessages.USSDData)other);  super.mergeFrom(other); return this; } public Builder mergeFrom(DolphinMessages.USSDData other) { if (other == DolphinMessages.USSDData.getDefaultInstance()) return this;  if (other.getID() != 0) setID(other.getID());  if (!other.getUSSDCode().isEmpty()) { this.uSSDCode_ = other.uSSDCode_; onChanged(); }  if (!other.getUSSDResponse().isEmpty()) { this.uSSDResponse_ = other.uSSDResponse_; onChanged(); }  if (other.getTimestamp() != 0) setTimestamp(other.getTimestamp());  if (other.getResponseStatus()) setResponseStatus(other.getResponseStatus());  mergeUnknownFields(other.unknownFields); onChanged(); return this; } public final boolean isInitialized() { return true; } public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { DolphinMessages.USSDData parsedMessage = null; try { parsedMessage = (DolphinMessages.USSDData)DolphinMessages.USSDData.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (DolphinMessages.USSDData)e.getUnfinishedMessage(); throw e.unwrapIOException(); } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; } public int getID() { return this.iD_; } public Builder setID(int value) { this.iD_ = value; onChanged(); return this; } public Builder clearID() { this.iD_ = 0; onChanged(); return this; }
/*       */       public String getUSSDCode() { Object ref = this.uSSDCode_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.uSSDCode_ = s; return s; }  return (String)ref; }
/*       */       public ByteString getUSSDCodeBytes() { Object ref = this.uSSDCode_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.uSSDCode_ = b; return b; }  return (ByteString)ref; }
/*       */       public Builder setUSSDCode(String value) { if (value == null) throw new NullPointerException();  this.uSSDCode_ = value; onChanged(); return this; }
/*       */       public Builder clearUSSDCode() { this.uSSDCode_ = DolphinMessages.USSDData.getDefaultInstance().getUSSDCode(); onChanged(); return this; }
/*       */       public Builder setUSSDCodeBytes(ByteString value) { if (value == null) throw new NullPointerException();  DolphinMessages.USSDData.checkByteStringIsUtf8(value); this.uSSDCode_ = value; onChanged(); return this; }
/* 26461 */       public String getUSSDResponse() { Object ref = this.uSSDResponse_;
/* 26462 */         if (!(ref instanceof String)) {
/* 26463 */           ByteString bs = (ByteString)ref;
/*       */           
/* 26465 */           String s = bs.toStringUtf8();
/* 26466 */           this.uSSDResponse_ = s;
/* 26467 */           return s;
/*       */         } 
/* 26469 */         return (String)ref; }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public ByteString getUSSDResponseBytes() {
/* 26478 */         Object ref = this.uSSDResponse_;
/* 26479 */         if (ref instanceof String) {
/*       */           
/* 26481 */           ByteString b = ByteString.copyFromUtf8((String)ref);
/*       */           
/* 26483 */           this.uSSDResponse_ = b;
/* 26484 */           return b;
/*       */         } 
/* 26486 */         return (ByteString)ref;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setUSSDResponse(String value) {
/* 26496 */         if (value == null) {
/* 26497 */           throw new NullPointerException();
/*       */         }
/*       */         
/* 26500 */         this.uSSDResponse_ = value;
/* 26501 */         onChanged();
/* 26502 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearUSSDResponse() {
/* 26510 */         this.uSSDResponse_ = DolphinMessages.USSDData.getDefaultInstance().getUSSDResponse();
/* 26511 */         onChanged();
/* 26512 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setUSSDResponseBytes(ByteString value) {
/* 26521 */         if (value == null) {
/* 26522 */           throw new NullPointerException();
/*       */         }
/* 26524 */         DolphinMessages.USSDData.checkByteStringIsUtf8(value);
/*       */         
/* 26526 */         this.uSSDResponse_ = value;
/* 26527 */         onChanged();
/* 26528 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getTimestamp() {
/* 26538 */         return this.timestamp_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setTimestamp(int value) {
/* 26547 */         this.timestamp_ = value;
/* 26548 */         onChanged();
/* 26549 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearTimestamp() {
/* 26557 */         this.timestamp_ = 0;
/* 26558 */         onChanged();
/* 26559 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean getResponseStatus() {
/* 26569 */         return this.responseStatus_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setResponseStatus(boolean value) {
/* 26578 */         this.responseStatus_ = value;
/* 26579 */         onChanged();
/* 26580 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearResponseStatus() {
/* 26588 */         this.responseStatus_ = false;
/* 26589 */         onChanged();
/* 26590 */         return this;
/*       */       }
/*       */ 
/*       */       
/*       */       public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
/* 26595 */         return (Builder)super.setUnknownFields(unknownFields);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
/* 26601 */         return (Builder)super.mergeUnknownFields(unknownFields);
/*       */       }
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 26611 */     private static final USSDData DEFAULT_INSTANCE = new USSDData();
/*       */ 
/*       */     
/*       */     public static USSDData getDefaultInstance() {
/* 26615 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */ 
/*       */     
/* 26619 */     private static final Parser<USSDData> PARSER = (Parser<USSDData>)new AbstractParser<USSDData>()
/*       */       {
/*       */ 
/*       */         
/*       */         public DolphinMessages.USSDData parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException
/*       */         {
/* 26625 */           return new DolphinMessages.USSDData(input, extensionRegistry);
/*       */         }
/*       */       };
/*       */     
/*       */     public static Parser<USSDData> parser() {
/* 26630 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public Parser<USSDData> getParserForType() {
/* 26635 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public USSDData getDefaultInstanceForType() {
/* 26640 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */   }
/*       */ 
/*       */   
/*       */   public static interface CrashAccelDataOrBuilder
/*       */     extends MessageOrBuilder
/*       */   {
/*       */     long getTimestamp();
/*       */ 
/*       */     
/*       */     int getX();
/*       */ 
/*       */     
/*       */     int getY();
/*       */ 
/*       */     
/*       */     int getZ();
/*       */   }
/*       */ 
/*       */   
/*       */   public static final class CrashAccelData
/*       */     extends GeneratedMessageV3
/*       */     implements CrashAccelDataOrBuilder
/*       */   {
/*       */     private static final long serialVersionUID = 0L;
/*       */     
/*       */     public static final int TIMESTAMP_FIELD_NUMBER = 1;
/*       */     
/*       */     private long timestamp_;
/*       */     
/*       */     public static final int X_FIELD_NUMBER = 2;
/*       */     
/*       */     private int x_;
/*       */     
/*       */     public static final int Y_FIELD_NUMBER = 3;
/*       */     
/*       */     private int y_;
/*       */     
/*       */     public static final int Z_FIELD_NUMBER = 4;
/*       */     
/*       */     private int z_;
/*       */     
/*       */     private byte memoizedIsInitialized;
/*       */     
/*       */     private CrashAccelData(GeneratedMessageV3.Builder<?> builder)
/*       */     {
/* 26687 */       super(builder);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/* 26818 */       this.memoizedIsInitialized = -1; } private CrashAccelData() { this.memoizedIsInitialized = -1; } protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) { return new CrashAccelData(); } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private CrashAccelData(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this(); if (extensionRegistry == null) throw new NullPointerException();  UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { int tag = input.readTag(); switch (tag) { case 0: done = true; continue;case 8: this.timestamp_ = input.readUInt64(); continue;case 16: this.x_ = input.readSInt32(); continue;case 24: this.y_ = input.readSInt32(); continue;case 32: this.z_ = input.readSInt32(); continue; }  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this); } finally { this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_CrashAccelData_descriptor; } protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() { return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_CrashAccelData_fieldAccessorTable.ensureFieldAccessorsInitialized(CrashAccelData.class, Builder.class); } public long getTimestamp() { return this.timestamp_; } public int getX() { return this.x_; }
/*       */     public int getY() { return this.y_; }
/*       */     public int getZ() { return this.z_; }
/* 26821 */     public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized;
/* 26822 */       if (isInitialized == 1) return true; 
/* 26823 */       if (isInitialized == 0) return false;
/*       */       
/* 26825 */       this.memoizedIsInitialized = 1;
/* 26826 */       return true; }
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/* 26832 */       if (this.timestamp_ != 0L) {
/* 26833 */         output.writeUInt64(1, this.timestamp_);
/*       */       }
/* 26835 */       if (this.x_ != 0) {
/* 26836 */         output.writeSInt32(2, this.x_);
/*       */       }
/* 26838 */       if (this.y_ != 0) {
/* 26839 */         output.writeSInt32(3, this.y_);
/*       */       }
/* 26841 */       if (this.z_ != 0) {
/* 26842 */         output.writeSInt32(4, this.z_);
/*       */       }
/* 26844 */       this.unknownFields.writeTo(output);
/*       */     }
/*       */ 
/*       */     
/*       */     public int getSerializedSize() {
/* 26849 */       int size = this.memoizedSize;
/* 26850 */       if (size != -1) return size;
/*       */       
/* 26852 */       size = 0;
/* 26853 */       if (this.timestamp_ != 0L) {
/* 26854 */         size += 
/* 26855 */           CodedOutputStream.computeUInt64Size(1, this.timestamp_);
/*       */       }
/* 26857 */       if (this.x_ != 0) {
/* 26858 */         size += 
/* 26859 */           CodedOutputStream.computeSInt32Size(2, this.x_);
/*       */       }
/* 26861 */       if (this.y_ != 0) {
/* 26862 */         size += 
/* 26863 */           CodedOutputStream.computeSInt32Size(3, this.y_);
/*       */       }
/* 26865 */       if (this.z_ != 0) {
/* 26866 */         size += 
/* 26867 */           CodedOutputStream.computeSInt32Size(4, this.z_);
/*       */       }
/* 26869 */       size += this.unknownFields.getSerializedSize();
/* 26870 */       this.memoizedSize = size;
/* 26871 */       return size;
/*       */     }
/*       */ 
/*       */     
/*       */     public boolean equals(Object obj) {
/* 26876 */       if (obj == this) {
/* 26877 */         return true;
/*       */       }
/* 26879 */       if (!(obj instanceof CrashAccelData)) {
/* 26880 */         return super.equals(obj);
/*       */       }
/* 26882 */       CrashAccelData other = (CrashAccelData)obj;
/*       */       
/* 26884 */       if (getTimestamp() != other
/* 26885 */         .getTimestamp()) return false; 
/* 26886 */       if (getX() != other
/* 26887 */         .getX()) return false; 
/* 26888 */       if (getY() != other
/* 26889 */         .getY()) return false; 
/* 26890 */       if (getZ() != other
/* 26891 */         .getZ()) return false; 
/* 26892 */       if (!this.unknownFields.equals(other.unknownFields)) return false; 
/* 26893 */       return true;
/*       */     }
/*       */ 
/*       */     
/*       */     public int hashCode() {
/* 26898 */       if (this.memoizedHashCode != 0) {
/* 26899 */         return this.memoizedHashCode;
/*       */       }
/* 26901 */       int hash = 41;
/* 26902 */       hash = 19 * hash + getDescriptor().hashCode();
/* 26903 */       hash = 37 * hash + 1;
/* 26904 */       hash = 53 * hash + Internal.hashLong(
/* 26905 */           getTimestamp());
/* 26906 */       hash = 37 * hash + 2;
/* 26907 */       hash = 53 * hash + getX();
/* 26908 */       hash = 37 * hash + 3;
/* 26909 */       hash = 53 * hash + getY();
/* 26910 */       hash = 37 * hash + 4;
/* 26911 */       hash = 53 * hash + getZ();
/* 26912 */       hash = 29 * hash + this.unknownFields.hashCode();
/* 26913 */       this.memoizedHashCode = hash;
/* 26914 */       return hash;
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static CrashAccelData parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
/* 26920 */       return (CrashAccelData)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static CrashAccelData parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 26926 */       return (CrashAccelData)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static CrashAccelData parseFrom(ByteString data) throws InvalidProtocolBufferException {
/* 26931 */       return (CrashAccelData)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static CrashAccelData parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 26937 */       return (CrashAccelData)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static CrashAccelData parseFrom(byte[] data) throws InvalidProtocolBufferException {
/* 26941 */       return (CrashAccelData)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static CrashAccelData parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 26947 */       return (CrashAccelData)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static CrashAccelData parseFrom(InputStream input) throws IOException {
/* 26951 */       return 
/* 26952 */         (CrashAccelData)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static CrashAccelData parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 26958 */       return 
/* 26959 */         (CrashAccelData)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static CrashAccelData parseDelimitedFrom(InputStream input) throws IOException {
/* 26963 */       return 
/* 26964 */         (CrashAccelData)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static CrashAccelData parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 26970 */       return 
/* 26971 */         (CrashAccelData)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static CrashAccelData parseFrom(CodedInputStream input) throws IOException {
/* 26976 */       return 
/* 26977 */         (CrashAccelData)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static CrashAccelData parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 26983 */       return 
/* 26984 */         (CrashAccelData)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public Builder newBuilderForType() {
/* 26988 */       return newBuilder();
/*       */     } public static Builder newBuilder() {
/* 26990 */       return DEFAULT_INSTANCE.toBuilder();
/*       */     }
/*       */     public static Builder newBuilder(CrashAccelData prototype) {
/* 26993 */       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
/*       */     }
/*       */     
/*       */     public Builder toBuilder() {
/* 26997 */       return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder())
/* 26998 */         .mergeFrom(this);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
/* 27004 */       Builder builder = new Builder(parent);
/* 27005 */       return builder;
/*       */     }
/*       */ 
/*       */     
/*       */     public static final class Builder
/*       */       extends GeneratedMessageV3.Builder<Builder>
/*       */       implements DolphinMessages.CrashAccelDataOrBuilder
/*       */     {
/*       */       private long timestamp_;
/*       */       
/*       */       private int x_;
/*       */       private int y_;
/*       */       private int z_;
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/* 27020 */         return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_CrashAccelData_descriptor;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
/* 27026 */         return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_CrashAccelData_fieldAccessorTable
/* 27027 */           .ensureFieldAccessorsInitialized(DolphinMessages.CrashAccelData.class, Builder.class);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       private Builder() {
/* 27033 */         maybeForceBuilderInitialization();
/*       */       }
/*       */ 
/*       */       
/*       */       private Builder(GeneratedMessageV3.BuilderParent parent) {
/* 27038 */         super(parent);
/* 27039 */         maybeForceBuilderInitialization();
/*       */       }
/*       */       
/*       */       private void maybeForceBuilderInitialization() {
/* 27043 */         if (DolphinMessages.CrashAccelData.alwaysUseFieldBuilders);
/*       */       }
/*       */ 
/*       */       
/*       */       public Builder clear() {
/* 27048 */         super.clear();
/* 27049 */         this.timestamp_ = 0L;
/*       */         
/* 27051 */         this.x_ = 0;
/*       */         
/* 27053 */         this.y_ = 0;
/*       */         
/* 27055 */         this.z_ = 0;
/*       */         
/* 27057 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Descriptors.Descriptor getDescriptorForType() {
/* 27063 */         return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_CrashAccelData_descriptor;
/*       */       }
/*       */ 
/*       */       
/*       */       public DolphinMessages.CrashAccelData getDefaultInstanceForType() {
/* 27068 */         return DolphinMessages.CrashAccelData.getDefaultInstance();
/*       */       }
/*       */ 
/*       */       
/*       */       public DolphinMessages.CrashAccelData build() {
/* 27073 */         DolphinMessages.CrashAccelData result = buildPartial();
/* 27074 */         if (!result.isInitialized()) {
/* 27075 */           throw newUninitializedMessageException(result);
/*       */         }
/* 27077 */         return result;
/*       */       }
/*       */ 
/*       */       
/*       */       public DolphinMessages.CrashAccelData buildPartial() {
/* 27082 */         DolphinMessages.CrashAccelData result = new DolphinMessages.CrashAccelData(this);
/* 27083 */         result.timestamp_ = this.timestamp_;
/* 27084 */         result.x_ = this.x_;
/* 27085 */         result.y_ = this.y_;
/* 27086 */         result.z_ = this.z_;
/* 27087 */         onBuilt();
/* 27088 */         return result;
/*       */       }
/*       */ 
/*       */       
/*       */       public Builder clone() {
/* 27093 */         return (Builder)super.clone();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setField(Descriptors.FieldDescriptor field, Object value) {
/* 27099 */         return (Builder)super.setField(field, value);
/*       */       }
/*       */ 
/*       */       
/*       */       public Builder clearField(Descriptors.FieldDescriptor field) {
/* 27104 */         return (Builder)super.clearField(field);
/*       */       }
/*       */ 
/*       */       
/*       */       public Builder clearOneof(Descriptors.OneofDescriptor oneof) {
/* 27109 */         return (Builder)super.clearOneof(oneof);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
/* 27115 */         return (Builder)super.setRepeatedField(field, index, value);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
/* 27121 */         return (Builder)super.addRepeatedField(field, value);
/*       */       }
/*       */       
/*       */       public Builder mergeFrom(Message other) {
/* 27125 */         if (other instanceof DolphinMessages.CrashAccelData) {
/* 27126 */           return mergeFrom((DolphinMessages.CrashAccelData)other);
/*       */         }
/* 27128 */         super.mergeFrom(other);
/* 27129 */         return this;
/*       */       }
/*       */ 
/*       */       
/*       */       public Builder mergeFrom(DolphinMessages.CrashAccelData other) {
/* 27134 */         if (other == DolphinMessages.CrashAccelData.getDefaultInstance()) return this; 
/* 27135 */         if (other.getTimestamp() != 0L) {
/* 27136 */           setTimestamp(other.getTimestamp());
/*       */         }
/* 27138 */         if (other.getX() != 0) {
/* 27139 */           setX(other.getX());
/*       */         }
/* 27141 */         if (other.getY() != 0) {
/* 27142 */           setY(other.getY());
/*       */         }
/* 27144 */         if (other.getZ() != 0) {
/* 27145 */           setZ(other.getZ());
/*       */         }
/* 27147 */         mergeUnknownFields(other.unknownFields);
/* 27148 */         onChanged();
/* 27149 */         return this;
/*       */       }
/*       */ 
/*       */       
/*       */       public final boolean isInitialized() {
/* 27154 */         return true;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 27162 */         DolphinMessages.CrashAccelData parsedMessage = null;
/*       */         try {
/* 27164 */           parsedMessage = (DolphinMessages.CrashAccelData)DolphinMessages.CrashAccelData.PARSER.parsePartialFrom(input, extensionRegistry);
/* 27165 */         } catch (InvalidProtocolBufferException e) {
/* 27166 */           parsedMessage = (DolphinMessages.CrashAccelData)e.getUnfinishedMessage();
/* 27167 */           throw e.unwrapIOException();
/*       */         } finally {
/* 27169 */           if (parsedMessage != null) {
/* 27170 */             mergeFrom(parsedMessage);
/*       */           }
/*       */         } 
/* 27173 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public long getTimestamp() {
/* 27183 */         return this.timestamp_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setTimestamp(long value) {
/* 27192 */         this.timestamp_ = value;
/* 27193 */         onChanged();
/* 27194 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearTimestamp() {
/* 27202 */         this.timestamp_ = 0L;
/* 27203 */         onChanged();
/* 27204 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getX() {
/* 27214 */         return this.x_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setX(int value) {
/* 27223 */         this.x_ = value;
/* 27224 */         onChanged();
/* 27225 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearX() {
/* 27233 */         this.x_ = 0;
/* 27234 */         onChanged();
/* 27235 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getY() {
/* 27245 */         return this.y_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setY(int value) {
/* 27254 */         this.y_ = value;
/* 27255 */         onChanged();
/* 27256 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearY() {
/* 27264 */         this.y_ = 0;
/* 27265 */         onChanged();
/* 27266 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getZ() {
/* 27276 */         return this.z_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setZ(int value) {
/* 27285 */         this.z_ = value;
/* 27286 */         onChanged();
/* 27287 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearZ() {
/* 27295 */         this.z_ = 0;
/* 27296 */         onChanged();
/* 27297 */         return this;
/*       */       }
/*       */ 
/*       */       
/*       */       public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
/* 27302 */         return (Builder)super.setUnknownFields(unknownFields);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
/* 27308 */         return (Builder)super.mergeUnknownFields(unknownFields);
/*       */       }
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 27318 */     private static final CrashAccelData DEFAULT_INSTANCE = new CrashAccelData();
/*       */ 
/*       */     
/*       */     public static CrashAccelData getDefaultInstance() {
/* 27322 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */ 
/*       */     
/* 27326 */     private static final Parser<CrashAccelData> PARSER = (Parser<CrashAccelData>)new AbstractParser<CrashAccelData>()
/*       */       {
/*       */ 
/*       */         
/*       */         public DolphinMessages.CrashAccelData parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException
/*       */         {
/* 27332 */           return new DolphinMessages.CrashAccelData(input, extensionRegistry);
/*       */         }
/*       */       };
/*       */     
/*       */     public static Parser<CrashAccelData> parser() {
/* 27337 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public Parser<CrashAccelData> getParserForType() {
/* 27342 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public CrashAccelData getDefaultInstanceForType() {
/* 27347 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */   }
/*       */ 
/*       */ 
/*       */   
/*       */   public static interface CrashDataOrBuilder
/*       */     extends MessageOrBuilder
/*       */   {
/*       */     int getTimestamp();
/*       */ 
/*       */ 
/*       */     
/*       */     int getLevel();
/*       */ 
/*       */ 
/*       */     
/*       */     List<DolphinMessages.CrashAccelData> getAccelDataList();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinMessages.CrashAccelData getAccelData(int param1Int);
/*       */ 
/*       */ 
/*       */     
/*       */     int getAccelDataCount();
/*       */ 
/*       */ 
/*       */     
/*       */     List<? extends DolphinMessages.CrashAccelDataOrBuilder> getAccelDataOrBuilderList();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinMessages.CrashAccelDataOrBuilder getAccelDataOrBuilder(int param1Int);
/*       */ 
/*       */     
/*       */     List<DolphinMessages.DataPoint> getPointDataList();
/*       */ 
/*       */     
/*       */     DolphinMessages.DataPoint getPointData(int param1Int);
/*       */ 
/*       */     
/*       */     int getPointDataCount();
/*       */ 
/*       */     
/*       */     List<? extends DolphinMessages.DataPointOrBuilder> getPointDataOrBuilderList();
/*       */ 
/*       */     
/*       */     DolphinMessages.DataPointOrBuilder getPointDataOrBuilder(int param1Int);
/*       */   }
/*       */ 
/*       */   
/*       */   public static final class CrashData
/*       */     extends GeneratedMessageV3
/*       */     implements CrashDataOrBuilder
/*       */   {
/*       */     private static final long serialVersionUID = 0L;
/*       */     
/*       */     public static final int TIMESTAMP_FIELD_NUMBER = 1;
/*       */     
/*       */     private int timestamp_;
/*       */     
/*       */     public static final int LEVEL_FIELD_NUMBER = 2;
/*       */     
/*       */     private int level_;
/*       */     
/*       */     public static final int ACCELDATA_FIELD_NUMBER = 3;
/*       */     
/*       */     private List<DolphinMessages.CrashAccelData> accelData_;
/*       */     
/*       */     public static final int POINTDATA_FIELD_NUMBER = 4;
/*       */     
/*       */     private List<DolphinMessages.DataPoint> pointData_;
/*       */     
/*       */     private byte memoizedIsInitialized;
/*       */ 
/*       */     
/*       */     private CrashData(GeneratedMessageV3.Builder<?> builder)
/*       */     {
/* 27426 */       super(builder);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/* 27632 */       this.memoizedIsInitialized = -1; } private CrashData() { this.memoizedIsInitialized = -1; this.accelData_ = Collections.emptyList(); this.pointData_ = Collections.emptyList(); } protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) { return new CrashData(); } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private CrashData(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this(); if (extensionRegistry == null) throw new NullPointerException();  int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { int tag = input.readTag(); switch (tag) { case 0: done = true; continue;case 8: this.timestamp_ = input.readUInt32(); continue;case 16: this.level_ = input.readUInt32(); continue;case 26: if ((mutable_bitField0_ & 0x1) == 0) { this.accelData_ = new ArrayList<>(); mutable_bitField0_ |= 0x1; }  this.accelData_.add(input.readMessage(DolphinMessages.CrashAccelData.parser(), extensionRegistry)); continue;case 34: if ((mutable_bitField0_ & 0x2) == 0) { this.pointData_ = new ArrayList<>(); mutable_bitField0_ |= 0x2; }  this.pointData_.add(input.readMessage(DolphinMessages.DataPoint.parser(), extensionRegistry)); continue; }  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this); } finally { if ((mutable_bitField0_ & 0x1) != 0) this.accelData_ = Collections.unmodifiableList(this.accelData_);  if ((mutable_bitField0_ & 0x2) != 0) this.pointData_ = Collections.unmodifiableList(this.pointData_);  this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_CrashData_descriptor; } protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() { return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_CrashData_fieldAccessorTable.ensureFieldAccessorsInitialized(CrashData.class, Builder.class); } public int getTimestamp() { return this.timestamp_; } public int getLevel() { return this.level_; } public List<DolphinMessages.CrashAccelData> getAccelDataList() { return this.accelData_; } public List<? extends DolphinMessages.CrashAccelDataOrBuilder> getAccelDataOrBuilderList() { return (List)this.accelData_; } public int getAccelDataCount() { return this.accelData_.size(); } public DolphinMessages.CrashAccelData getAccelData(int index) { return this.accelData_.get(index); } public DolphinMessages.CrashAccelDataOrBuilder getAccelDataOrBuilder(int index) { return this.accelData_.get(index); } public List<DolphinMessages.DataPoint> getPointDataList() { return this.pointData_; } public List<? extends DolphinMessages.DataPointOrBuilder> getPointDataOrBuilderList() { return (List)this.pointData_; } public int getPointDataCount() { return this.pointData_.size(); }
/*       */     public DolphinMessages.DataPoint getPointData(int index) { return this.pointData_.get(index); }
/*       */     public DolphinMessages.DataPointOrBuilder getPointDataOrBuilder(int index) { return this.pointData_.get(index); }
/* 27635 */     public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized;
/* 27636 */       if (isInitialized == 1) return true; 
/* 27637 */       if (isInitialized == 0) return false;
/*       */       
/* 27639 */       this.memoizedIsInitialized = 1;
/* 27640 */       return true; }
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/* 27646 */       if (this.timestamp_ != 0) {
/* 27647 */         output.writeUInt32(1, this.timestamp_);
/*       */       }
/* 27649 */       if (this.level_ != 0)
/* 27650 */         output.writeUInt32(2, this.level_); 
/*       */       int i;
/* 27652 */       for (i = 0; i < this.accelData_.size(); i++) {
/* 27653 */         output.writeMessage(3, (MessageLite)this.accelData_.get(i));
/*       */       }
/* 27655 */       for (i = 0; i < this.pointData_.size(); i++) {
/* 27656 */         output.writeMessage(4, (MessageLite)this.pointData_.get(i));
/*       */       }
/* 27658 */       this.unknownFields.writeTo(output);
/*       */     }
/*       */ 
/*       */     
/*       */     public int getSerializedSize() {
/* 27663 */       int size = this.memoizedSize;
/* 27664 */       if (size != -1) return size;
/*       */       
/* 27666 */       size = 0;
/* 27667 */       if (this.timestamp_ != 0) {
/* 27668 */         size += 
/* 27669 */           CodedOutputStream.computeUInt32Size(1, this.timestamp_);
/*       */       }
/* 27671 */       if (this.level_ != 0)
/* 27672 */         size += 
/* 27673 */           CodedOutputStream.computeUInt32Size(2, this.level_); 
/*       */       int i;
/* 27675 */       for (i = 0; i < this.accelData_.size(); i++) {
/* 27676 */         size += 
/* 27677 */           CodedOutputStream.computeMessageSize(3, (MessageLite)this.accelData_.get(i));
/*       */       }
/* 27679 */       for (i = 0; i < this.pointData_.size(); i++) {
/* 27680 */         size += 
/* 27681 */           CodedOutputStream.computeMessageSize(4, (MessageLite)this.pointData_.get(i));
/*       */       }
/* 27683 */       size += this.unknownFields.getSerializedSize();
/* 27684 */       this.memoizedSize = size;
/* 27685 */       return size;
/*       */     }
/*       */ 
/*       */     
/*       */     public boolean equals(Object obj) {
/* 27690 */       if (obj == this) {
/* 27691 */         return true;
/*       */       }
/* 27693 */       if (!(obj instanceof CrashData)) {
/* 27694 */         return super.equals(obj);
/*       */       }
/* 27696 */       CrashData other = (CrashData)obj;
/*       */       
/* 27698 */       if (getTimestamp() != other
/* 27699 */         .getTimestamp()) return false; 
/* 27700 */       if (getLevel() != other
/* 27701 */         .getLevel()) return false;
/*       */       
/* 27703 */       if (!getAccelDataList().equals(other.getAccelDataList())) return false;
/*       */       
/* 27705 */       if (!getPointDataList().equals(other.getPointDataList())) return false; 
/* 27706 */       if (!this.unknownFields.equals(other.unknownFields)) return false; 
/* 27707 */       return true;
/*       */     }
/*       */ 
/*       */     
/*       */     public int hashCode() {
/* 27712 */       if (this.memoizedHashCode != 0) {
/* 27713 */         return this.memoizedHashCode;
/*       */       }
/* 27715 */       int hash = 41;
/* 27716 */       hash = 19 * hash + getDescriptor().hashCode();
/* 27717 */       hash = 37 * hash + 1;
/* 27718 */       hash = 53 * hash + getTimestamp();
/* 27719 */       hash = 37 * hash + 2;
/* 27720 */       hash = 53 * hash + getLevel();
/* 27721 */       if (getAccelDataCount() > 0) {
/* 27722 */         hash = 37 * hash + 3;
/* 27723 */         hash = 53 * hash + getAccelDataList().hashCode();
/*       */       } 
/* 27725 */       if (getPointDataCount() > 0) {
/* 27726 */         hash = 37 * hash + 4;
/* 27727 */         hash = 53 * hash + getPointDataList().hashCode();
/*       */       } 
/* 27729 */       hash = 29 * hash + this.unknownFields.hashCode();
/* 27730 */       this.memoizedHashCode = hash;
/* 27731 */       return hash;
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static CrashData parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
/* 27737 */       return (CrashData)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static CrashData parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 27743 */       return (CrashData)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static CrashData parseFrom(ByteString data) throws InvalidProtocolBufferException {
/* 27748 */       return (CrashData)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static CrashData parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 27754 */       return (CrashData)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static CrashData parseFrom(byte[] data) throws InvalidProtocolBufferException {
/* 27758 */       return (CrashData)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static CrashData parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 27764 */       return (CrashData)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static CrashData parseFrom(InputStream input) throws IOException {
/* 27768 */       return 
/* 27769 */         (CrashData)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static CrashData parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 27775 */       return 
/* 27776 */         (CrashData)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static CrashData parseDelimitedFrom(InputStream input) throws IOException {
/* 27780 */       return 
/* 27781 */         (CrashData)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static CrashData parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 27787 */       return 
/* 27788 */         (CrashData)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static CrashData parseFrom(CodedInputStream input) throws IOException {
/* 27793 */       return 
/* 27794 */         (CrashData)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static CrashData parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 27800 */       return 
/* 27801 */         (CrashData)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public Builder newBuilderForType() {
/* 27805 */       return newBuilder();
/*       */     } public static Builder newBuilder() {
/* 27807 */       return DEFAULT_INSTANCE.toBuilder();
/*       */     }
/*       */     public static Builder newBuilder(CrashData prototype) {
/* 27810 */       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
/*       */     }
/*       */     
/*       */     public Builder toBuilder() {
/* 27814 */       return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder())
/* 27815 */         .mergeFrom(this);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
/* 27821 */       Builder builder = new Builder(parent);
/* 27822 */       return builder;
/*       */     }
/*       */     public static final class Builder extends GeneratedMessageV3.Builder<Builder> implements DolphinMessages.CrashDataOrBuilder { private int bitField0_;
/*       */       private int timestamp_;
/*       */       private int level_;
/*       */       private List<DolphinMessages.CrashAccelData> accelData_;
/*       */       private RepeatedFieldBuilderV3<DolphinMessages.CrashAccelData, DolphinMessages.CrashAccelData.Builder, DolphinMessages.CrashAccelDataOrBuilder> accelDataBuilder_;
/*       */       private List<DolphinMessages.DataPoint> pointData_;
/*       */       private RepeatedFieldBuilderV3<DolphinMessages.DataPoint, DolphinMessages.DataPoint.Builder, DolphinMessages.DataPointOrBuilder> pointDataBuilder_;
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/* 27833 */         return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_CrashData_descriptor;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
/* 27839 */         return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_CrashData_fieldAccessorTable
/* 27840 */           .ensureFieldAccessorsInitialized(DolphinMessages.CrashData.class, Builder.class);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private Builder()
/*       */       {
/* 28125 */         this
/* 28126 */           .accelData_ = Collections.emptyList();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 28365 */         this
/* 28366 */           .pointData_ = Collections.emptyList(); maybeForceBuilderInitialization(); } private Builder(GeneratedMessageV3.BuilderParent parent) { super(parent); this.accelData_ = Collections.emptyList(); this.pointData_ = Collections.emptyList(); maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (DolphinMessages.CrashData.alwaysUseFieldBuilders) { getAccelDataFieldBuilder(); getPointDataFieldBuilder(); }  } public Builder clear() { super.clear(); this.timestamp_ = 0; this.level_ = 0; if (this.accelDataBuilder_ == null) { this.accelData_ = Collections.emptyList(); this.bitField0_ &= 0xFFFFFFFE; } else { this.accelDataBuilder_.clear(); }  if (this.pointDataBuilder_ == null) { this.pointData_ = Collections.emptyList(); this.bitField0_ &= 0xFFFFFFFD; } else { this.pointDataBuilder_.clear(); }  return this; } public Descriptors.Descriptor getDescriptorForType() { return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_CrashData_descriptor; } public DolphinMessages.CrashData getDefaultInstanceForType() { return DolphinMessages.CrashData.getDefaultInstance(); } public DolphinMessages.CrashData build() { DolphinMessages.CrashData result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public DolphinMessages.CrashData buildPartial() { DolphinMessages.CrashData result = new DolphinMessages.CrashData(this); int from_bitField0_ = this.bitField0_; result.timestamp_ = this.timestamp_; result.level_ = this.level_; if (this.accelDataBuilder_ == null) { if ((this.bitField0_ & 0x1) != 0) { this.accelData_ = Collections.unmodifiableList(this.accelData_); this.bitField0_ &= 0xFFFFFFFE; }  result.accelData_ = this.accelData_; } else { result.accelData_ = this.accelDataBuilder_.build(); }  if (this.pointDataBuilder_ == null) { if ((this.bitField0_ & 0x2) != 0) { this.pointData_ = Collections.unmodifiableList(this.pointData_); this.bitField0_ &= 0xFFFFFFFD; }  result.pointData_ = this.pointData_; } else { result.pointData_ = this.pointDataBuilder_.build(); }  onBuilt(); return result; } public Builder clone() { return (Builder)super.clone(); } public Builder setField(Descriptors.FieldDescriptor field, Object value) { return (Builder)super.setField(field, value); } public Builder clearField(Descriptors.FieldDescriptor field) { return (Builder)super.clearField(field); } public Builder clearOneof(Descriptors.OneofDescriptor oneof) { return (Builder)super.clearOneof(oneof); } public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) { return (Builder)super.setRepeatedField(field, index, value); } public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) { return (Builder)super.addRepeatedField(field, value); } public Builder mergeFrom(Message other) { if (other instanceof DolphinMessages.CrashData) return mergeFrom((DolphinMessages.CrashData)other);  super.mergeFrom(other); return this; } public Builder mergeFrom(DolphinMessages.CrashData other) { if (other == DolphinMessages.CrashData.getDefaultInstance()) return this;  if (other.getTimestamp() != 0) setTimestamp(other.getTimestamp());  if (other.getLevel() != 0) setLevel(other.getLevel());  if (this.accelDataBuilder_ == null) { if (!other.accelData_.isEmpty()) { if (this.accelData_.isEmpty()) { this.accelData_ = other.accelData_; this.bitField0_ &= 0xFFFFFFFE; } else { ensureAccelDataIsMutable(); this.accelData_.addAll(other.accelData_); }  onChanged(); }  } else if (!other.accelData_.isEmpty()) { if (this.accelDataBuilder_.isEmpty()) { this.accelDataBuilder_.dispose(); this.accelDataBuilder_ = null; this.accelData_ = other.accelData_; this.bitField0_ &= 0xFFFFFFFE; this.accelDataBuilder_ = DolphinMessages.CrashData.alwaysUseFieldBuilders ? getAccelDataFieldBuilder() : null; } else { this.accelDataBuilder_.addAllMessages(other.accelData_); }  }  if (this.pointDataBuilder_ == null) { if (!other.pointData_.isEmpty()) { if (this.pointData_.isEmpty()) { this.pointData_ = other.pointData_; this.bitField0_ &= 0xFFFFFFFD; } else { ensurePointDataIsMutable(); this.pointData_.addAll(other.pointData_); }  onChanged(); }  } else if (!other.pointData_.isEmpty()) { if (this.pointDataBuilder_.isEmpty()) { this.pointDataBuilder_.dispose(); this.pointDataBuilder_ = null; this.pointData_ = other.pointData_; this.bitField0_ &= 0xFFFFFFFD; this.pointDataBuilder_ = DolphinMessages.CrashData.alwaysUseFieldBuilders ? getPointDataFieldBuilder() : null; } else { this.pointDataBuilder_.addAllMessages(other.pointData_); }  }  mergeUnknownFields(other.unknownFields); onChanged(); return this; } public final boolean isInitialized() { return true; } public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { DolphinMessages.CrashData parsedMessage = null; try { parsedMessage = (DolphinMessages.CrashData)DolphinMessages.CrashData.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (DolphinMessages.CrashData)e.getUnfinishedMessage(); throw e.unwrapIOException(); } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; } public int getTimestamp() { return this.timestamp_; } public Builder setTimestamp(int value) { this.timestamp_ = value; onChanged(); return this; } public Builder clearTimestamp() { this.timestamp_ = 0; onChanged(); return this; } public int getLevel() { return this.level_; } public Builder setLevel(int value) { this.level_ = value; onChanged(); return this; } public Builder clearLevel() { this.level_ = 0; onChanged(); return this; } private void ensureAccelDataIsMutable() { if ((this.bitField0_ & 0x1) == 0) { this.accelData_ = new ArrayList<>(this.accelData_); this.bitField0_ |= 0x1; }  } public List<DolphinMessages.CrashAccelData> getAccelDataList() { if (this.accelDataBuilder_ == null) return Collections.unmodifiableList(this.accelData_);  return this.accelDataBuilder_.getMessageList(); } public int getAccelDataCount() { if (this.accelDataBuilder_ == null) return this.accelData_.size();  return this.accelDataBuilder_.getCount(); } public DolphinMessages.CrashAccelData getAccelData(int index) { if (this.accelDataBuilder_ == null) return this.accelData_.get(index);  return (DolphinMessages.CrashAccelData)this.accelDataBuilder_.getMessage(index); } public Builder setAccelData(int index, DolphinMessages.CrashAccelData value) { if (this.accelDataBuilder_ == null) { if (value == null) throw new NullPointerException();  ensureAccelDataIsMutable(); this.accelData_.set(index, value); onChanged(); } else { this.accelDataBuilder_.setMessage(index, (AbstractMessage)value); }  return this; } public Builder setAccelData(int index, DolphinMessages.CrashAccelData.Builder builderForValue) { if (this.accelDataBuilder_ == null) { ensureAccelDataIsMutable(); this.accelData_.set(index, builderForValue.build()); onChanged(); } else { this.accelDataBuilder_.setMessage(index, (AbstractMessage)builderForValue.build()); }  return this; } public Builder addAccelData(DolphinMessages.CrashAccelData value) { if (this.accelDataBuilder_ == null) { if (value == null) throw new NullPointerException();  ensureAccelDataIsMutable(); this.accelData_.add(value); onChanged(); } else { this.accelDataBuilder_.addMessage((AbstractMessage)value); }  return this; } public Builder addAccelData(int index, DolphinMessages.CrashAccelData value) { if (this.accelDataBuilder_ == null) { if (value == null) throw new NullPointerException();  ensureAccelDataIsMutable(); this.accelData_.add(index, value); onChanged(); } else { this.accelDataBuilder_.addMessage(index, (AbstractMessage)value); }  return this; } public Builder addAccelData(DolphinMessages.CrashAccelData.Builder builderForValue) { if (this.accelDataBuilder_ == null) { ensureAccelDataIsMutable(); this.accelData_.add(builderForValue.build()); onChanged(); } else { this.accelDataBuilder_.addMessage((AbstractMessage)builderForValue.build()); }  return this; } public Builder addAccelData(int index, DolphinMessages.CrashAccelData.Builder builderForValue) { if (this.accelDataBuilder_ == null) { ensureAccelDataIsMutable(); this.accelData_.add(index, builderForValue.build()); onChanged(); } else { this.accelDataBuilder_.addMessage(index, (AbstractMessage)builderForValue.build()); }  return this; } public Builder addAllAccelData(Iterable<? extends DolphinMessages.CrashAccelData> values) { if (this.accelDataBuilder_ == null) { ensureAccelDataIsMutable(); AbstractMessageLite.Builder.addAll(values, this.accelData_); onChanged(); } else { this.accelDataBuilder_.addAllMessages(values); }  return this; } public Builder clearAccelData() { if (this.accelDataBuilder_ == null) { this.accelData_ = Collections.emptyList(); this.bitField0_ &= 0xFFFFFFFE; onChanged(); } else { this.accelDataBuilder_.clear(); }  return this; } public Builder removeAccelData(int index) { if (this.accelDataBuilder_ == null) { ensureAccelDataIsMutable(); this.accelData_.remove(index); onChanged(); } else { this.accelDataBuilder_.remove(index); }  return this; } public DolphinMessages.CrashAccelData.Builder getAccelDataBuilder(int index) { return (DolphinMessages.CrashAccelData.Builder)getAccelDataFieldBuilder().getBuilder(index); } public DolphinMessages.CrashAccelDataOrBuilder getAccelDataOrBuilder(int index) { if (this.accelDataBuilder_ == null) return this.accelData_.get(index);  return (DolphinMessages.CrashAccelDataOrBuilder)this.accelDataBuilder_.getMessageOrBuilder(index); } public List<? extends DolphinMessages.CrashAccelDataOrBuilder> getAccelDataOrBuilderList() { if (this.accelDataBuilder_ != null) return this.accelDataBuilder_.getMessageOrBuilderList();  return Collections.unmodifiableList((List)this.accelData_); } public DolphinMessages.CrashAccelData.Builder addAccelDataBuilder() { return (DolphinMessages.CrashAccelData.Builder)getAccelDataFieldBuilder().addBuilder((AbstractMessage)DolphinMessages.CrashAccelData.getDefaultInstance()); } public DolphinMessages.CrashAccelData.Builder addAccelDataBuilder(int index) { return (DolphinMessages.CrashAccelData.Builder)getAccelDataFieldBuilder().addBuilder(index, (AbstractMessage)DolphinMessages.CrashAccelData.getDefaultInstance()); } public List<DolphinMessages.CrashAccelData.Builder> getAccelDataBuilderList() { return getAccelDataFieldBuilder().getBuilderList(); }
/*       */       private RepeatedFieldBuilderV3<DolphinMessages.CrashAccelData, DolphinMessages.CrashAccelData.Builder, DolphinMessages.CrashAccelDataOrBuilder> getAccelDataFieldBuilder() { if (this.accelDataBuilder_ == null) { this.accelDataBuilder_ = new RepeatedFieldBuilderV3(this.accelData_, ((this.bitField0_ & 0x1) != 0), (AbstractMessage.BuilderParent)getParentForChildren(), isClean()); this.accelData_ = null; }  return this.accelDataBuilder_; }
/* 28368 */       private void ensurePointDataIsMutable() { if ((this.bitField0_ & 0x2) == 0) {
/* 28369 */           this.pointData_ = new ArrayList<>(this.pointData_);
/* 28370 */           this.bitField0_ |= 0x2;
/*       */         }  }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public List<DolphinMessages.DataPoint> getPointDataList() {
/* 28381 */         if (this.pointDataBuilder_ == null) {
/* 28382 */           return Collections.unmodifiableList(this.pointData_);
/*       */         }
/* 28384 */         return this.pointDataBuilder_.getMessageList();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getPointDataCount() {
/* 28391 */         if (this.pointDataBuilder_ == null) {
/* 28392 */           return this.pointData_.size();
/*       */         }
/* 28394 */         return this.pointDataBuilder_.getCount();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinMessages.DataPoint getPointData(int index) {
/* 28401 */         if (this.pointDataBuilder_ == null) {
/* 28402 */           return this.pointData_.get(index);
/*       */         }
/* 28404 */         return (DolphinMessages.DataPoint)this.pointDataBuilder_.getMessage(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setPointData(int index, DolphinMessages.DataPoint value) {
/* 28412 */         if (this.pointDataBuilder_ == null) {
/* 28413 */           if (value == null) {
/* 28414 */             throw new NullPointerException();
/*       */           }
/* 28416 */           ensurePointDataIsMutable();
/* 28417 */           this.pointData_.set(index, value);
/* 28418 */           onChanged();
/*       */         } else {
/* 28420 */           this.pointDataBuilder_.setMessage(index, (AbstractMessage)value);
/*       */         } 
/* 28422 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setPointData(int index, DolphinMessages.DataPoint.Builder builderForValue) {
/* 28429 */         if (this.pointDataBuilder_ == null) {
/* 28430 */           ensurePointDataIsMutable();
/* 28431 */           this.pointData_.set(index, builderForValue.build());
/* 28432 */           onChanged();
/*       */         } else {
/* 28434 */           this.pointDataBuilder_.setMessage(index, (AbstractMessage)builderForValue.build());
/*       */         } 
/* 28436 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addPointData(DolphinMessages.DataPoint value) {
/* 28442 */         if (this.pointDataBuilder_ == null) {
/* 28443 */           if (value == null) {
/* 28444 */             throw new NullPointerException();
/*       */           }
/* 28446 */           ensurePointDataIsMutable();
/* 28447 */           this.pointData_.add(value);
/* 28448 */           onChanged();
/*       */         } else {
/* 28450 */           this.pointDataBuilder_.addMessage((AbstractMessage)value);
/*       */         } 
/* 28452 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addPointData(int index, DolphinMessages.DataPoint value) {
/* 28459 */         if (this.pointDataBuilder_ == null) {
/* 28460 */           if (value == null) {
/* 28461 */             throw new NullPointerException();
/*       */           }
/* 28463 */           ensurePointDataIsMutable();
/* 28464 */           this.pointData_.add(index, value);
/* 28465 */           onChanged();
/*       */         } else {
/* 28467 */           this.pointDataBuilder_.addMessage(index, (AbstractMessage)value);
/*       */         } 
/* 28469 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addPointData(DolphinMessages.DataPoint.Builder builderForValue) {
/* 28476 */         if (this.pointDataBuilder_ == null) {
/* 28477 */           ensurePointDataIsMutable();
/* 28478 */           this.pointData_.add(builderForValue.build());
/* 28479 */           onChanged();
/*       */         } else {
/* 28481 */           this.pointDataBuilder_.addMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/* 28483 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addPointData(int index, DolphinMessages.DataPoint.Builder builderForValue) {
/* 28490 */         if (this.pointDataBuilder_ == null) {
/* 28491 */           ensurePointDataIsMutable();
/* 28492 */           this.pointData_.add(index, builderForValue.build());
/* 28493 */           onChanged();
/*       */         } else {
/* 28495 */           this.pointDataBuilder_.addMessage(index, (AbstractMessage)builderForValue.build());
/*       */         } 
/* 28497 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addAllPointData(Iterable<? extends DolphinMessages.DataPoint> values) {
/* 28504 */         if (this.pointDataBuilder_ == null) {
/* 28505 */           ensurePointDataIsMutable();
/* 28506 */           AbstractMessageLite.Builder.addAll(values, this.pointData_);
/*       */           
/* 28508 */           onChanged();
/*       */         } else {
/* 28510 */           this.pointDataBuilder_.addAllMessages(values);
/*       */         } 
/* 28512 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearPointData() {
/* 28518 */         if (this.pointDataBuilder_ == null) {
/* 28519 */           this.pointData_ = Collections.emptyList();
/* 28520 */           this.bitField0_ &= 0xFFFFFFFD;
/* 28521 */           onChanged();
/*       */         } else {
/* 28523 */           this.pointDataBuilder_.clear();
/*       */         } 
/* 28525 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder removePointData(int index) {
/* 28531 */         if (this.pointDataBuilder_ == null) {
/* 28532 */           ensurePointDataIsMutable();
/* 28533 */           this.pointData_.remove(index);
/* 28534 */           onChanged();
/*       */         } else {
/* 28536 */           this.pointDataBuilder_.remove(index);
/*       */         } 
/* 28538 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinMessages.DataPoint.Builder getPointDataBuilder(int index) {
/* 28545 */         return (DolphinMessages.DataPoint.Builder)getPointDataFieldBuilder().getBuilder(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinMessages.DataPointOrBuilder getPointDataOrBuilder(int index) {
/* 28552 */         if (this.pointDataBuilder_ == null)
/* 28553 */           return this.pointData_.get(index); 
/* 28554 */         return (DolphinMessages.DataPointOrBuilder)this.pointDataBuilder_.getMessageOrBuilder(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public List<? extends DolphinMessages.DataPointOrBuilder> getPointDataOrBuilderList() {
/* 28562 */         if (this.pointDataBuilder_ != null) {
/* 28563 */           return this.pointDataBuilder_.getMessageOrBuilderList();
/*       */         }
/* 28565 */         return Collections.unmodifiableList((List)this.pointData_);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinMessages.DataPoint.Builder addPointDataBuilder() {
/* 28572 */         return (DolphinMessages.DataPoint.Builder)getPointDataFieldBuilder().addBuilder(
/* 28573 */             (AbstractMessage)DolphinMessages.DataPoint.getDefaultInstance());
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinMessages.DataPoint.Builder addPointDataBuilder(int index) {
/* 28580 */         return (DolphinMessages.DataPoint.Builder)getPointDataFieldBuilder().addBuilder(index, 
/* 28581 */             (AbstractMessage)DolphinMessages.DataPoint.getDefaultInstance());
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public List<DolphinMessages.DataPoint.Builder> getPointDataBuilderList() {
/* 28588 */         return getPointDataFieldBuilder().getBuilderList();
/*       */       }
/*       */ 
/*       */       
/*       */       private RepeatedFieldBuilderV3<DolphinMessages.DataPoint, DolphinMessages.DataPoint.Builder, DolphinMessages.DataPointOrBuilder> getPointDataFieldBuilder() {
/* 28593 */         if (this.pointDataBuilder_ == null) {
/* 28594 */           this
/*       */ 
/*       */ 
/*       */ 
/*       */             
/* 28599 */             .pointDataBuilder_ = new RepeatedFieldBuilderV3(this.pointData_, ((this.bitField0_ & 0x2) != 0), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/* 28600 */           this.pointData_ = null;
/*       */         } 
/* 28602 */         return this.pointDataBuilder_;
/*       */       }
/*       */ 
/*       */       
/*       */       public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
/* 28607 */         return (Builder)super.setUnknownFields(unknownFields);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
/* 28613 */         return (Builder)super.mergeUnknownFields(unknownFields);
/*       */       } }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 28623 */     private static final CrashData DEFAULT_INSTANCE = new CrashData();
/*       */ 
/*       */     
/*       */     public static CrashData getDefaultInstance() {
/* 28627 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */ 
/*       */     
/* 28631 */     private static final Parser<CrashData> PARSER = (Parser<CrashData>)new AbstractParser<CrashData>()
/*       */       {
/*       */ 
/*       */         
/*       */         public DolphinMessages.CrashData parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException
/*       */         {
/* 28637 */           return new DolphinMessages.CrashData(input, extensionRegistry);
/*       */         }
/*       */       };
/*       */     
/*       */     public static Parser<CrashData> parser() {
/* 28642 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public Parser<CrashData> getParserForType() {
/* 28647 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public CrashData getDefaultInstanceForType() {
/* 28652 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */   }
/*       */ 
/*       */   
/*       */   public static interface CrashDataResponseOrBuilder
/*       */     extends MessageOrBuilder
/*       */   {
/*       */     int getCodeValue();
/*       */ 
/*       */     
/*       */     DolphinMessages.CrashDataResponseCode getCode();
/*       */   }
/*       */ 
/*       */   
/*       */   public static final class CrashDataResponse
/*       */     extends GeneratedMessageV3
/*       */     implements CrashDataResponseOrBuilder
/*       */   {
/*       */     private static final long serialVersionUID = 0L;
/*       */     
/*       */     public static final int CODE_FIELD_NUMBER = 1;
/*       */     
/*       */     private int code_;
/*       */     
/*       */     private byte memoizedIsInitialized;
/*       */ 
/*       */     
/*       */     private CrashDataResponse(GeneratedMessageV3.Builder<?> builder)
/*       */     {
/* 28682 */       super(builder);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/* 28775 */       this.memoizedIsInitialized = -1; } private CrashDataResponse() { this.memoizedIsInitialized = -1; this.code_ = 0; } protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) { return new CrashDataResponse(); } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private CrashDataResponse(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this(); if (extensionRegistry == null) throw new NullPointerException();  UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { int rawValue, tag = input.readTag(); switch (tag) { case 0: done = true; continue;case 8: rawValue = input.readEnum(); this.code_ = rawValue; continue; }  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this); } finally { this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_CrashDataResponse_descriptor; } protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() { return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_CrashDataResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(CrashDataResponse.class, Builder.class); }
/*       */     public int getCodeValue() { return this.code_; }
/*       */     public DolphinMessages.CrashDataResponseCode getCode() { DolphinMessages.CrashDataResponseCode result = DolphinMessages.CrashDataResponseCode.valueOf(this.code_); return (result == null) ? DolphinMessages.CrashDataResponseCode.UNRECOGNIZED : result; }
/* 28778 */     public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized;
/* 28779 */       if (isInitialized == 1) return true; 
/* 28780 */       if (isInitialized == 0) return false;
/*       */       
/* 28782 */       this.memoizedIsInitialized = 1;
/* 28783 */       return true; }
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/* 28789 */       if (this.code_ != DolphinMessages.CrashDataResponseCode.CrashData_Error.getNumber()) {
/* 28790 */         output.writeEnum(1, this.code_);
/*       */       }
/* 28792 */       this.unknownFields.writeTo(output);
/*       */     }
/*       */ 
/*       */     
/*       */     public int getSerializedSize() {
/* 28797 */       int size = this.memoizedSize;
/* 28798 */       if (size != -1) return size;
/*       */       
/* 28800 */       size = 0;
/* 28801 */       if (this.code_ != DolphinMessages.CrashDataResponseCode.CrashData_Error.getNumber()) {
/* 28802 */         size += 
/* 28803 */           CodedOutputStream.computeEnumSize(1, this.code_);
/*       */       }
/* 28805 */       size += this.unknownFields.getSerializedSize();
/* 28806 */       this.memoizedSize = size;
/* 28807 */       return size;
/*       */     }
/*       */ 
/*       */     
/*       */     public boolean equals(Object obj) {
/* 28812 */       if (obj == this) {
/* 28813 */         return true;
/*       */       }
/* 28815 */       if (!(obj instanceof CrashDataResponse)) {
/* 28816 */         return super.equals(obj);
/*       */       }
/* 28818 */       CrashDataResponse other = (CrashDataResponse)obj;
/*       */       
/* 28820 */       if (this.code_ != other.code_) return false; 
/* 28821 */       if (!this.unknownFields.equals(other.unknownFields)) return false; 
/* 28822 */       return true;
/*       */     }
/*       */ 
/*       */     
/*       */     public int hashCode() {
/* 28827 */       if (this.memoizedHashCode != 0) {
/* 28828 */         return this.memoizedHashCode;
/*       */       }
/* 28830 */       int hash = 41;
/* 28831 */       hash = 19 * hash + getDescriptor().hashCode();
/* 28832 */       hash = 37 * hash + 1;
/* 28833 */       hash = 53 * hash + this.code_;
/* 28834 */       hash = 29 * hash + this.unknownFields.hashCode();
/* 28835 */       this.memoizedHashCode = hash;
/* 28836 */       return hash;
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static CrashDataResponse parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
/* 28842 */       return (CrashDataResponse)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static CrashDataResponse parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 28848 */       return (CrashDataResponse)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static CrashDataResponse parseFrom(ByteString data) throws InvalidProtocolBufferException {
/* 28853 */       return (CrashDataResponse)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static CrashDataResponse parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 28859 */       return (CrashDataResponse)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static CrashDataResponse parseFrom(byte[] data) throws InvalidProtocolBufferException {
/* 28863 */       return (CrashDataResponse)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static CrashDataResponse parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 28869 */       return (CrashDataResponse)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static CrashDataResponse parseFrom(InputStream input) throws IOException {
/* 28873 */       return 
/* 28874 */         (CrashDataResponse)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static CrashDataResponse parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 28880 */       return 
/* 28881 */         (CrashDataResponse)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static CrashDataResponse parseDelimitedFrom(InputStream input) throws IOException {
/* 28885 */       return 
/* 28886 */         (CrashDataResponse)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static CrashDataResponse parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 28892 */       return 
/* 28893 */         (CrashDataResponse)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static CrashDataResponse parseFrom(CodedInputStream input) throws IOException {
/* 28898 */       return 
/* 28899 */         (CrashDataResponse)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static CrashDataResponse parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 28905 */       return 
/* 28906 */         (CrashDataResponse)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public Builder newBuilderForType() {
/* 28910 */       return newBuilder();
/*       */     } public static Builder newBuilder() {
/* 28912 */       return DEFAULT_INSTANCE.toBuilder();
/*       */     }
/*       */     public static Builder newBuilder(CrashDataResponse prototype) {
/* 28915 */       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
/*       */     }
/*       */     
/*       */     public Builder toBuilder() {
/* 28919 */       return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder())
/* 28920 */         .mergeFrom(this);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
/* 28926 */       Builder builder = new Builder(parent);
/* 28927 */       return builder;
/*       */     }
/*       */ 
/*       */     
/*       */     public static final class Builder
/*       */       extends GeneratedMessageV3.Builder<Builder>
/*       */       implements DolphinMessages.CrashDataResponseOrBuilder
/*       */     {
/*       */       private int code_;
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/* 28938 */         return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_CrashDataResponse_descriptor;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
/* 28944 */         return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_CrashDataResponse_fieldAccessorTable
/* 28945 */           .ensureFieldAccessorsInitialized(DolphinMessages.CrashDataResponse.class, Builder.class);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private Builder()
/*       */       {
/* 29076 */         this.code_ = 0; maybeForceBuilderInitialization(); } private Builder(GeneratedMessageV3.BuilderParent parent) { super(parent); this.code_ = 0; maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (DolphinMessages.CrashDataResponse.alwaysUseFieldBuilders); } public Builder clear() { super.clear(); this.code_ = 0; return this; } public Descriptors.Descriptor getDescriptorForType() { return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_CrashDataResponse_descriptor; } public DolphinMessages.CrashDataResponse getDefaultInstanceForType() { return DolphinMessages.CrashDataResponse.getDefaultInstance(); } public DolphinMessages.CrashDataResponse build() { DolphinMessages.CrashDataResponse result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public DolphinMessages.CrashDataResponse buildPartial() { DolphinMessages.CrashDataResponse result = new DolphinMessages.CrashDataResponse(this); result.code_ = this.code_; onBuilt(); return result; } public Builder clone() { return (Builder)super.clone(); } public Builder setField(Descriptors.FieldDescriptor field, Object value) { return (Builder)super.setField(field, value); } public Builder clearField(Descriptors.FieldDescriptor field) { return (Builder)super.clearField(field); } public Builder clearOneof(Descriptors.OneofDescriptor oneof) { return (Builder)super.clearOneof(oneof); } public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) { return (Builder)super.setRepeatedField(field, index, value); }
/*       */       public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) { return (Builder)super.addRepeatedField(field, value); }
/*       */       public Builder mergeFrom(Message other) { if (other instanceof DolphinMessages.CrashDataResponse) return mergeFrom((DolphinMessages.CrashDataResponse)other);  super.mergeFrom(other); return this; }
/*       */       public Builder mergeFrom(DolphinMessages.CrashDataResponse other) { if (other == DolphinMessages.CrashDataResponse.getDefaultInstance()) return this;  if (other.code_ != 0) setCodeValue(other.getCodeValue());  mergeUnknownFields(other.unknownFields); onChanged(); return this; }
/*       */       public final boolean isInitialized() { return true; }
/*       */       public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { DolphinMessages.CrashDataResponse parsedMessage = null; try { parsedMessage = (DolphinMessages.CrashDataResponse)DolphinMessages.CrashDataResponse.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (DolphinMessages.CrashDataResponse)e.getUnfinishedMessage(); throw e.unwrapIOException(); } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; }
/* 29082 */       public int getCodeValue() { return this.code_; }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setCodeValue(int value) {
/* 29091 */         this.code_ = value;
/* 29092 */         onChanged();
/* 29093 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinMessages.CrashDataResponseCode getCode() {
/* 29102 */         DolphinMessages.CrashDataResponseCode result = DolphinMessages.CrashDataResponseCode.valueOf(this.code_);
/* 29103 */         return (result == null) ? DolphinMessages.CrashDataResponseCode.UNRECOGNIZED : result;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setCode(DolphinMessages.CrashDataResponseCode value) {
/* 29111 */         if (value == null) {
/* 29112 */           throw new NullPointerException();
/*       */         }
/*       */         
/* 29115 */         this.code_ = value.getNumber();
/* 29116 */         onChanged();
/* 29117 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearCode() {
/* 29125 */         this.code_ = 0;
/* 29126 */         onChanged();
/* 29127 */         return this;
/*       */       }
/*       */ 
/*       */       
/*       */       public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
/* 29132 */         return (Builder)super.setUnknownFields(unknownFields);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
/* 29138 */         return (Builder)super.mergeUnknownFields(unknownFields);
/*       */       }
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 29148 */     private static final CrashDataResponse DEFAULT_INSTANCE = new CrashDataResponse();
/*       */ 
/*       */     
/*       */     public static CrashDataResponse getDefaultInstance() {
/* 29152 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */ 
/*       */     
/* 29156 */     private static final Parser<CrashDataResponse> PARSER = (Parser<CrashDataResponse>)new AbstractParser<CrashDataResponse>()
/*       */       {
/*       */ 
/*       */         
/*       */         public DolphinMessages.CrashDataResponse parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException
/*       */         {
/* 29162 */           return new DolphinMessages.CrashDataResponse(input, extensionRegistry);
/*       */         }
/*       */       };
/*       */     
/*       */     public static Parser<CrashDataResponse> parser() {
/* 29167 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public Parser<CrashDataResponse> getParserForType() {
/* 29172 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public CrashDataResponse getDefaultInstanceForType() {
/* 29177 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */   }
/*       */ 
/*       */   
/*       */   public static interface DTCResposneOrBuilder
/*       */     extends MessageOrBuilder
/*       */   {
/*       */     int getDTCResposneCodeValue();
/*       */ 
/*       */     
/*       */     DolphinMessages.DTCResposneCode getDTCResposneCode();
/*       */   }
/*       */ 
/*       */   
/*       */   public static final class DTCResposne
/*       */     extends GeneratedMessageV3
/*       */     implements DTCResposneOrBuilder
/*       */   {
/*       */     private static final long serialVersionUID = 0L;
/*       */     
/*       */     public static final int DTCRESPOSNECODE_FIELD_NUMBER = 1;
/*       */     
/*       */     private int dTCResposneCode_;
/*       */     
/*       */     private byte memoizedIsInitialized;
/*       */ 
/*       */     
/*       */     private DTCResposne(GeneratedMessageV3.Builder<?> builder)
/*       */     {
/* 29207 */       super(builder);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/* 29300 */       this.memoizedIsInitialized = -1; } private DTCResposne() { this.memoizedIsInitialized = -1; this.dTCResposneCode_ = 0; } protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) { return new DTCResposne(); } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private DTCResposne(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this(); if (extensionRegistry == null) throw new NullPointerException();  UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { int rawValue, tag = input.readTag(); switch (tag) { case 0: done = true; continue;case 8: rawValue = input.readEnum(); this.dTCResposneCode_ = rawValue; continue; }  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this); } finally { this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_DTCResposne_descriptor; } protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() { return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_DTCResposne_fieldAccessorTable.ensureFieldAccessorsInitialized(DTCResposne.class, Builder.class); }
/*       */     public int getDTCResposneCodeValue() { return this.dTCResposneCode_; }
/*       */     public DolphinMessages.DTCResposneCode getDTCResposneCode() { DolphinMessages.DTCResposneCode result = DolphinMessages.DTCResposneCode.valueOf(this.dTCResposneCode_); return (result == null) ? DolphinMessages.DTCResposneCode.UNRECOGNIZED : result; }
/* 29303 */     public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized;
/* 29304 */       if (isInitialized == 1) return true; 
/* 29305 */       if (isInitialized == 0) return false;
/*       */       
/* 29307 */       this.memoizedIsInitialized = 1;
/* 29308 */       return true; }
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/* 29314 */       if (this.dTCResposneCode_ != DolphinMessages.DTCResposneCode.DTC_RESPOSNE_NONE.getNumber()) {
/* 29315 */         output.writeEnum(1, this.dTCResposneCode_);
/*       */       }
/* 29317 */       this.unknownFields.writeTo(output);
/*       */     }
/*       */ 
/*       */     
/*       */     public int getSerializedSize() {
/* 29322 */       int size = this.memoizedSize;
/* 29323 */       if (size != -1) return size;
/*       */       
/* 29325 */       size = 0;
/* 29326 */       if (this.dTCResposneCode_ != DolphinMessages.DTCResposneCode.DTC_RESPOSNE_NONE.getNumber()) {
/* 29327 */         size += 
/* 29328 */           CodedOutputStream.computeEnumSize(1, this.dTCResposneCode_);
/*       */       }
/* 29330 */       size += this.unknownFields.getSerializedSize();
/* 29331 */       this.memoizedSize = size;
/* 29332 */       return size;
/*       */     }
/*       */ 
/*       */     
/*       */     public boolean equals(Object obj) {
/* 29337 */       if (obj == this) {
/* 29338 */         return true;
/*       */       }
/* 29340 */       if (!(obj instanceof DTCResposne)) {
/* 29341 */         return super.equals(obj);
/*       */       }
/* 29343 */       DTCResposne other = (DTCResposne)obj;
/*       */       
/* 29345 */       if (this.dTCResposneCode_ != other.dTCResposneCode_) return false; 
/* 29346 */       if (!this.unknownFields.equals(other.unknownFields)) return false; 
/* 29347 */       return true;
/*       */     }
/*       */ 
/*       */     
/*       */     public int hashCode() {
/* 29352 */       if (this.memoizedHashCode != 0) {
/* 29353 */         return this.memoizedHashCode;
/*       */       }
/* 29355 */       int hash = 41;
/* 29356 */       hash = 19 * hash + getDescriptor().hashCode();
/* 29357 */       hash = 37 * hash + 1;
/* 29358 */       hash = 53 * hash + this.dTCResposneCode_;
/* 29359 */       hash = 29 * hash + this.unknownFields.hashCode();
/* 29360 */       this.memoizedHashCode = hash;
/* 29361 */       return hash;
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static DTCResposne parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
/* 29367 */       return (DTCResposne)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static DTCResposne parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 29373 */       return (DTCResposne)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static DTCResposne parseFrom(ByteString data) throws InvalidProtocolBufferException {
/* 29378 */       return (DTCResposne)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static DTCResposne parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 29384 */       return (DTCResposne)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static DTCResposne parseFrom(byte[] data) throws InvalidProtocolBufferException {
/* 29388 */       return (DTCResposne)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static DTCResposne parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 29394 */       return (DTCResposne)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static DTCResposne parseFrom(InputStream input) throws IOException {
/* 29398 */       return 
/* 29399 */         (DTCResposne)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static DTCResposne parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 29405 */       return 
/* 29406 */         (DTCResposne)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static DTCResposne parseDelimitedFrom(InputStream input) throws IOException {
/* 29410 */       return 
/* 29411 */         (DTCResposne)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static DTCResposne parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 29417 */       return 
/* 29418 */         (DTCResposne)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static DTCResposne parseFrom(CodedInputStream input) throws IOException {
/* 29423 */       return 
/* 29424 */         (DTCResposne)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static DTCResposne parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 29430 */       return 
/* 29431 */         (DTCResposne)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public Builder newBuilderForType() {
/* 29435 */       return newBuilder();
/*       */     } public static Builder newBuilder() {
/* 29437 */       return DEFAULT_INSTANCE.toBuilder();
/*       */     }
/*       */     public static Builder newBuilder(DTCResposne prototype) {
/* 29440 */       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
/*       */     }
/*       */     
/*       */     public Builder toBuilder() {
/* 29444 */       return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder())
/* 29445 */         .mergeFrom(this);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
/* 29451 */       Builder builder = new Builder(parent);
/* 29452 */       return builder;
/*       */     }
/*       */ 
/*       */     
/*       */     public static final class Builder
/*       */       extends GeneratedMessageV3.Builder<Builder>
/*       */       implements DolphinMessages.DTCResposneOrBuilder
/*       */     {
/*       */       private int dTCResposneCode_;
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/* 29463 */         return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_DTCResposne_descriptor;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
/* 29469 */         return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_DTCResposne_fieldAccessorTable
/* 29470 */           .ensureFieldAccessorsInitialized(DolphinMessages.DTCResposne.class, Builder.class);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private Builder()
/*       */       {
/* 29601 */         this.dTCResposneCode_ = 0; maybeForceBuilderInitialization(); } private Builder(GeneratedMessageV3.BuilderParent parent) { super(parent); this.dTCResposneCode_ = 0; maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (DolphinMessages.DTCResposne.alwaysUseFieldBuilders); } public Builder clear() { super.clear(); this.dTCResposneCode_ = 0; return this; } public Descriptors.Descriptor getDescriptorForType() { return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_DTCResposne_descriptor; } public DolphinMessages.DTCResposne getDefaultInstanceForType() { return DolphinMessages.DTCResposne.getDefaultInstance(); } public DolphinMessages.DTCResposne build() { DolphinMessages.DTCResposne result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public DolphinMessages.DTCResposne buildPartial() { DolphinMessages.DTCResposne result = new DolphinMessages.DTCResposne(this); result.dTCResposneCode_ = this.dTCResposneCode_; onBuilt(); return result; } public Builder clone() { return (Builder)super.clone(); } public Builder setField(Descriptors.FieldDescriptor field, Object value) { return (Builder)super.setField(field, value); } public Builder clearField(Descriptors.FieldDescriptor field) { return (Builder)super.clearField(field); } public Builder clearOneof(Descriptors.OneofDescriptor oneof) { return (Builder)super.clearOneof(oneof); } public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) { return (Builder)super.setRepeatedField(field, index, value); }
/*       */       public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) { return (Builder)super.addRepeatedField(field, value); }
/*       */       public Builder mergeFrom(Message other) { if (other instanceof DolphinMessages.DTCResposne) return mergeFrom((DolphinMessages.DTCResposne)other);  super.mergeFrom(other); return this; }
/*       */       public Builder mergeFrom(DolphinMessages.DTCResposne other) { if (other == DolphinMessages.DTCResposne.getDefaultInstance()) return this;  if (other.dTCResposneCode_ != 0) setDTCResposneCodeValue(other.getDTCResposneCodeValue());  mergeUnknownFields(other.unknownFields); onChanged(); return this; }
/*       */       public final boolean isInitialized() { return true; }
/*       */       public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { DolphinMessages.DTCResposne parsedMessage = null; try { parsedMessage = (DolphinMessages.DTCResposne)DolphinMessages.DTCResposne.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (DolphinMessages.DTCResposne)e.getUnfinishedMessage(); throw e.unwrapIOException(); } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; }
/* 29607 */       public int getDTCResposneCodeValue() { return this.dTCResposneCode_; }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setDTCResposneCodeValue(int value) {
/* 29616 */         this.dTCResposneCode_ = value;
/* 29617 */         onChanged();
/* 29618 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinMessages.DTCResposneCode getDTCResposneCode() {
/* 29627 */         DolphinMessages.DTCResposneCode result = DolphinMessages.DTCResposneCode.valueOf(this.dTCResposneCode_);
/* 29628 */         return (result == null) ? DolphinMessages.DTCResposneCode.UNRECOGNIZED : result;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setDTCResposneCode(DolphinMessages.DTCResposneCode value) {
/* 29636 */         if (value == null) {
/* 29637 */           throw new NullPointerException();
/*       */         }
/*       */         
/* 29640 */         this.dTCResposneCode_ = value.getNumber();
/* 29641 */         onChanged();
/* 29642 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearDTCResposneCode() {
/* 29650 */         this.dTCResposneCode_ = 0;
/* 29651 */         onChanged();
/* 29652 */         return this;
/*       */       }
/*       */ 
/*       */       
/*       */       public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
/* 29657 */         return (Builder)super.setUnknownFields(unknownFields);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
/* 29663 */         return (Builder)super.mergeUnknownFields(unknownFields);
/*       */       }
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 29673 */     private static final DTCResposne DEFAULT_INSTANCE = new DTCResposne();
/*       */ 
/*       */     
/*       */     public static DTCResposne getDefaultInstance() {
/* 29677 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */ 
/*       */     
/* 29681 */     private static final Parser<DTCResposne> PARSER = (Parser<DTCResposne>)new AbstractParser<DTCResposne>()
/*       */       {
/*       */ 
/*       */         
/*       */         public DolphinMessages.DTCResposne parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException
/*       */         {
/* 29687 */           return new DolphinMessages.DTCResposne(input, extensionRegistry);
/*       */         }
/*       */       };
/*       */     
/*       */     public static Parser<DTCResposne> parser() {
/* 29692 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public Parser<DTCResposne> getParserForType() {
/* 29697 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public DTCResposne getDefaultInstanceForType() {
/* 29702 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */   }
/*       */ 
/*       */ 
/*       */   
/*       */   public static interface DTCRequestOrBuilder
/*       */     extends MessageOrBuilder
/*       */   {
/*       */     List<DolphinMessages.DTCRecord> getDTCRecordsList();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinMessages.DTCRecord getDTCRecords(int param1Int);
/*       */ 
/*       */ 
/*       */     
/*       */     int getDTCRecordsCount();
/*       */ 
/*       */ 
/*       */     
/*       */     List<? extends DolphinMessages.DTCRecordOrBuilder> getDTCRecordsOrBuilderList();
/*       */ 
/*       */     
/*       */     DolphinMessages.DTCRecordOrBuilder getDTCRecordsOrBuilder(int param1Int);
/*       */   }
/*       */ 
/*       */   
/*       */   public static final class DTCRequest
/*       */     extends GeneratedMessageV3
/*       */     implements DTCRequestOrBuilder
/*       */   {
/*       */     private static final long serialVersionUID = 0L;
/*       */     
/*       */     public static final int DTCRECORDS_FIELD_NUMBER = 1;
/*       */     
/*       */     private List<DolphinMessages.DTCRecord> dTCRecords_;
/*       */     
/*       */     private byte memoizedIsInitialized;
/*       */ 
/*       */     
/*       */     private DTCRequest(GeneratedMessageV3.Builder<?> builder)
/*       */     {
/* 29745 */       super(builder);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/* 29866 */       this.memoizedIsInitialized = -1; } private DTCRequest() { this.memoizedIsInitialized = -1; this.dTCRecords_ = Collections.emptyList(); } protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) { return new DTCRequest(); } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private DTCRequest(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this(); if (extensionRegistry == null) throw new NullPointerException();  int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { int tag = input.readTag(); switch (tag) { case 0: done = true; continue;case 10: if ((mutable_bitField0_ & 0x1) == 0) { this.dTCRecords_ = new ArrayList<>(); mutable_bitField0_ |= 0x1; }  this.dTCRecords_.add(input.readMessage(DolphinMessages.DTCRecord.parser(), extensionRegistry)); continue; }  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this); } finally { if ((mutable_bitField0_ & 0x1) != 0) this.dTCRecords_ = Collections.unmodifiableList(this.dTCRecords_);  this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_DTCRequest_descriptor; } protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() { return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_DTCRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(DTCRequest.class, Builder.class); } public List<DolphinMessages.DTCRecord> getDTCRecordsList() { return this.dTCRecords_; } public List<? extends DolphinMessages.DTCRecordOrBuilder> getDTCRecordsOrBuilderList() { return (List)this.dTCRecords_; } public int getDTCRecordsCount() { return this.dTCRecords_.size(); }
/*       */     public DolphinMessages.DTCRecord getDTCRecords(int index) { return this.dTCRecords_.get(index); }
/*       */     public DolphinMessages.DTCRecordOrBuilder getDTCRecordsOrBuilder(int index) { return this.dTCRecords_.get(index); }
/* 29869 */     public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized;
/* 29870 */       if (isInitialized == 1) return true; 
/* 29871 */       if (isInitialized == 0) return false;
/*       */       
/* 29873 */       this.memoizedIsInitialized = 1;
/* 29874 */       return true; }
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/* 29880 */       for (int i = 0; i < this.dTCRecords_.size(); i++) {
/* 29881 */         output.writeMessage(1, (MessageLite)this.dTCRecords_.get(i));
/*       */       }
/* 29883 */       this.unknownFields.writeTo(output);
/*       */     }
/*       */ 
/*       */     
/*       */     public int getSerializedSize() {
/* 29888 */       int size = this.memoizedSize;
/* 29889 */       if (size != -1) return size;
/*       */       
/* 29891 */       size = 0;
/* 29892 */       for (int i = 0; i < this.dTCRecords_.size(); i++) {
/* 29893 */         size += 
/* 29894 */           CodedOutputStream.computeMessageSize(1, (MessageLite)this.dTCRecords_.get(i));
/*       */       }
/* 29896 */       size += this.unknownFields.getSerializedSize();
/* 29897 */       this.memoizedSize = size;
/* 29898 */       return size;
/*       */     }
/*       */ 
/*       */     
/*       */     public boolean equals(Object obj) {
/* 29903 */       if (obj == this) {
/* 29904 */         return true;
/*       */       }
/* 29906 */       if (!(obj instanceof DTCRequest)) {
/* 29907 */         return super.equals(obj);
/*       */       }
/* 29909 */       DTCRequest other = (DTCRequest)obj;
/*       */ 
/*       */       
/* 29912 */       if (!getDTCRecordsList().equals(other.getDTCRecordsList())) return false; 
/* 29913 */       if (!this.unknownFields.equals(other.unknownFields)) return false; 
/* 29914 */       return true;
/*       */     }
/*       */ 
/*       */     
/*       */     public int hashCode() {
/* 29919 */       if (this.memoizedHashCode != 0) {
/* 29920 */         return this.memoizedHashCode;
/*       */       }
/* 29922 */       int hash = 41;
/* 29923 */       hash = 19 * hash + getDescriptor().hashCode();
/* 29924 */       if (getDTCRecordsCount() > 0) {
/* 29925 */         hash = 37 * hash + 1;
/* 29926 */         hash = 53 * hash + getDTCRecordsList().hashCode();
/*       */       } 
/* 29928 */       hash = 29 * hash + this.unknownFields.hashCode();
/* 29929 */       this.memoizedHashCode = hash;
/* 29930 */       return hash;
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static DTCRequest parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
/* 29936 */       return (DTCRequest)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static DTCRequest parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 29942 */       return (DTCRequest)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static DTCRequest parseFrom(ByteString data) throws InvalidProtocolBufferException {
/* 29947 */       return (DTCRequest)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static DTCRequest parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 29953 */       return (DTCRequest)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static DTCRequest parseFrom(byte[] data) throws InvalidProtocolBufferException {
/* 29957 */       return (DTCRequest)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static DTCRequest parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 29963 */       return (DTCRequest)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static DTCRequest parseFrom(InputStream input) throws IOException {
/* 29967 */       return 
/* 29968 */         (DTCRequest)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static DTCRequest parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 29974 */       return 
/* 29975 */         (DTCRequest)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static DTCRequest parseDelimitedFrom(InputStream input) throws IOException {
/* 29979 */       return 
/* 29980 */         (DTCRequest)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static DTCRequest parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 29986 */       return 
/* 29987 */         (DTCRequest)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static DTCRequest parseFrom(CodedInputStream input) throws IOException {
/* 29992 */       return 
/* 29993 */         (DTCRequest)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static DTCRequest parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 29999 */       return 
/* 30000 */         (DTCRequest)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public Builder newBuilderForType() {
/* 30004 */       return newBuilder();
/*       */     } public static Builder newBuilder() {
/* 30006 */       return DEFAULT_INSTANCE.toBuilder();
/*       */     }
/*       */     public static Builder newBuilder(DTCRequest prototype) {
/* 30009 */       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
/*       */     }
/*       */     
/*       */     public Builder toBuilder() {
/* 30013 */       return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder())
/* 30014 */         .mergeFrom(this);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
/* 30020 */       Builder builder = new Builder(parent);
/* 30021 */       return builder;
/*       */     }
/*       */     
/*       */     public static final class Builder
/*       */       extends GeneratedMessageV3.Builder<Builder>
/*       */       implements DolphinMessages.DTCRequestOrBuilder {
/*       */       private int bitField0_;
/*       */       private List<DolphinMessages.DTCRecord> dTCRecords_;
/*       */       private RepeatedFieldBuilderV3<DolphinMessages.DTCRecord, DolphinMessages.DTCRecord.Builder, DolphinMessages.DTCRecordOrBuilder> dTCRecordsBuilder_;
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/* 30032 */         return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_DTCRequest_descriptor;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
/* 30038 */         return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_DTCRequest_fieldAccessorTable
/* 30039 */           .ensureFieldAccessorsInitialized(DolphinMessages.DTCRequest.class, Builder.class);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private Builder()
/*       */       {
/* 30208 */         this
/* 30209 */           .dTCRecords_ = Collections.emptyList(); maybeForceBuilderInitialization(); } private Builder(GeneratedMessageV3.BuilderParent parent) { super(parent); this.dTCRecords_ = Collections.emptyList(); maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (DolphinMessages.DTCRequest.alwaysUseFieldBuilders) getDTCRecordsFieldBuilder();  } public Builder clear() { super.clear(); if (this.dTCRecordsBuilder_ == null) { this.dTCRecords_ = Collections.emptyList(); this.bitField0_ &= 0xFFFFFFFE; } else { this.dTCRecordsBuilder_.clear(); }  return this; } public Descriptors.Descriptor getDescriptorForType() { return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_DTCRequest_descriptor; } public DolphinMessages.DTCRequest getDefaultInstanceForType() { return DolphinMessages.DTCRequest.getDefaultInstance(); } public DolphinMessages.DTCRequest build() { DolphinMessages.DTCRequest result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public DolphinMessages.DTCRequest buildPartial() { DolphinMessages.DTCRequest result = new DolphinMessages.DTCRequest(this); int from_bitField0_ = this.bitField0_; if (this.dTCRecordsBuilder_ == null) { if ((this.bitField0_ & 0x1) != 0) { this.dTCRecords_ = Collections.unmodifiableList(this.dTCRecords_); this.bitField0_ &= 0xFFFFFFFE; }  result.dTCRecords_ = this.dTCRecords_; } else { result.dTCRecords_ = this.dTCRecordsBuilder_.build(); }  onBuilt(); return result; } public Builder clone() { return (Builder)super.clone(); } public Builder setField(Descriptors.FieldDescriptor field, Object value) { return (Builder)super.setField(field, value); } public Builder clearField(Descriptors.FieldDescriptor field) { return (Builder)super.clearField(field); } public Builder clearOneof(Descriptors.OneofDescriptor oneof) { return (Builder)super.clearOneof(oneof); } public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) { return (Builder)super.setRepeatedField(field, index, value); } public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) { return (Builder)super.addRepeatedField(field, value); } public Builder mergeFrom(Message other) { if (other instanceof DolphinMessages.DTCRequest) return mergeFrom((DolphinMessages.DTCRequest)other);  super.mergeFrom(other); return this; } public Builder mergeFrom(DolphinMessages.DTCRequest other) { if (other == DolphinMessages.DTCRequest.getDefaultInstance()) return this;  if (this.dTCRecordsBuilder_ == null) { if (!other.dTCRecords_.isEmpty()) { if (this.dTCRecords_.isEmpty()) { this.dTCRecords_ = other.dTCRecords_; this.bitField0_ &= 0xFFFFFFFE; } else { ensureDTCRecordsIsMutable(); this.dTCRecords_.addAll(other.dTCRecords_); }  onChanged(); }  } else if (!other.dTCRecords_.isEmpty()) { if (this.dTCRecordsBuilder_.isEmpty()) { this.dTCRecordsBuilder_.dispose(); this.dTCRecordsBuilder_ = null; this.dTCRecords_ = other.dTCRecords_; this.bitField0_ &= 0xFFFFFFFE; this.dTCRecordsBuilder_ = DolphinMessages.DTCRequest.alwaysUseFieldBuilders ? getDTCRecordsFieldBuilder() : null; } else { this.dTCRecordsBuilder_.addAllMessages(other.dTCRecords_); }  }  mergeUnknownFields(other.unknownFields); onChanged(); return this; } public final boolean isInitialized() { return true; }
/*       */       public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { DolphinMessages.DTCRequest parsedMessage = null; try { parsedMessage = (DolphinMessages.DTCRequest)DolphinMessages.DTCRequest.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (DolphinMessages.DTCRequest)e.getUnfinishedMessage(); throw e.unwrapIOException(); } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; }
/* 30211 */       private void ensureDTCRecordsIsMutable() { if ((this.bitField0_ & 0x1) == 0) {
/* 30212 */           this.dTCRecords_ = new ArrayList<>(this.dTCRecords_);
/* 30213 */           this.bitField0_ |= 0x1;
/*       */         }  }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public List<DolphinMessages.DTCRecord> getDTCRecordsList() {
/* 30224 */         if (this.dTCRecordsBuilder_ == null) {
/* 30225 */           return Collections.unmodifiableList(this.dTCRecords_);
/*       */         }
/* 30227 */         return this.dTCRecordsBuilder_.getMessageList();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getDTCRecordsCount() {
/* 30234 */         if (this.dTCRecordsBuilder_ == null) {
/* 30235 */           return this.dTCRecords_.size();
/*       */         }
/* 30237 */         return this.dTCRecordsBuilder_.getCount();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinMessages.DTCRecord getDTCRecords(int index) {
/* 30244 */         if (this.dTCRecordsBuilder_ == null) {
/* 30245 */           return this.dTCRecords_.get(index);
/*       */         }
/* 30247 */         return (DolphinMessages.DTCRecord)this.dTCRecordsBuilder_.getMessage(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setDTCRecords(int index, DolphinMessages.DTCRecord value) {
/* 30255 */         if (this.dTCRecordsBuilder_ == null) {
/* 30256 */           if (value == null) {
/* 30257 */             throw new NullPointerException();
/*       */           }
/* 30259 */           ensureDTCRecordsIsMutable();
/* 30260 */           this.dTCRecords_.set(index, value);
/* 30261 */           onChanged();
/*       */         } else {
/* 30263 */           this.dTCRecordsBuilder_.setMessage(index, (AbstractMessage)value);
/*       */         } 
/* 30265 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setDTCRecords(int index, DolphinMessages.DTCRecord.Builder builderForValue) {
/* 30272 */         if (this.dTCRecordsBuilder_ == null) {
/* 30273 */           ensureDTCRecordsIsMutable();
/* 30274 */           this.dTCRecords_.set(index, builderForValue.build());
/* 30275 */           onChanged();
/*       */         } else {
/* 30277 */           this.dTCRecordsBuilder_.setMessage(index, (AbstractMessage)builderForValue.build());
/*       */         } 
/* 30279 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addDTCRecords(DolphinMessages.DTCRecord value) {
/* 30285 */         if (this.dTCRecordsBuilder_ == null) {
/* 30286 */           if (value == null) {
/* 30287 */             throw new NullPointerException();
/*       */           }
/* 30289 */           ensureDTCRecordsIsMutable();
/* 30290 */           this.dTCRecords_.add(value);
/* 30291 */           onChanged();
/*       */         } else {
/* 30293 */           this.dTCRecordsBuilder_.addMessage((AbstractMessage)value);
/*       */         } 
/* 30295 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addDTCRecords(int index, DolphinMessages.DTCRecord value) {
/* 30302 */         if (this.dTCRecordsBuilder_ == null) {
/* 30303 */           if (value == null) {
/* 30304 */             throw new NullPointerException();
/*       */           }
/* 30306 */           ensureDTCRecordsIsMutable();
/* 30307 */           this.dTCRecords_.add(index, value);
/* 30308 */           onChanged();
/*       */         } else {
/* 30310 */           this.dTCRecordsBuilder_.addMessage(index, (AbstractMessage)value);
/*       */         } 
/* 30312 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addDTCRecords(DolphinMessages.DTCRecord.Builder builderForValue) {
/* 30319 */         if (this.dTCRecordsBuilder_ == null) {
/* 30320 */           ensureDTCRecordsIsMutable();
/* 30321 */           this.dTCRecords_.add(builderForValue.build());
/* 30322 */           onChanged();
/*       */         } else {
/* 30324 */           this.dTCRecordsBuilder_.addMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/* 30326 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addDTCRecords(int index, DolphinMessages.DTCRecord.Builder builderForValue) {
/* 30333 */         if (this.dTCRecordsBuilder_ == null) {
/* 30334 */           ensureDTCRecordsIsMutable();
/* 30335 */           this.dTCRecords_.add(index, builderForValue.build());
/* 30336 */           onChanged();
/*       */         } else {
/* 30338 */           this.dTCRecordsBuilder_.addMessage(index, (AbstractMessage)builderForValue.build());
/*       */         } 
/* 30340 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addAllDTCRecords(Iterable<? extends DolphinMessages.DTCRecord> values) {
/* 30347 */         if (this.dTCRecordsBuilder_ == null) {
/* 30348 */           ensureDTCRecordsIsMutable();
/* 30349 */           AbstractMessageLite.Builder.addAll(values, this.dTCRecords_);
/*       */           
/* 30351 */           onChanged();
/*       */         } else {
/* 30353 */           this.dTCRecordsBuilder_.addAllMessages(values);
/*       */         } 
/* 30355 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearDTCRecords() {
/* 30361 */         if (this.dTCRecordsBuilder_ == null) {
/* 30362 */           this.dTCRecords_ = Collections.emptyList();
/* 30363 */           this.bitField0_ &= 0xFFFFFFFE;
/* 30364 */           onChanged();
/*       */         } else {
/* 30366 */           this.dTCRecordsBuilder_.clear();
/*       */         } 
/* 30368 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder removeDTCRecords(int index) {
/* 30374 */         if (this.dTCRecordsBuilder_ == null) {
/* 30375 */           ensureDTCRecordsIsMutable();
/* 30376 */           this.dTCRecords_.remove(index);
/* 30377 */           onChanged();
/*       */         } else {
/* 30379 */           this.dTCRecordsBuilder_.remove(index);
/*       */         } 
/* 30381 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinMessages.DTCRecord.Builder getDTCRecordsBuilder(int index) {
/* 30388 */         return (DolphinMessages.DTCRecord.Builder)getDTCRecordsFieldBuilder().getBuilder(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinMessages.DTCRecordOrBuilder getDTCRecordsOrBuilder(int index) {
/* 30395 */         if (this.dTCRecordsBuilder_ == null)
/* 30396 */           return this.dTCRecords_.get(index); 
/* 30397 */         return (DolphinMessages.DTCRecordOrBuilder)this.dTCRecordsBuilder_.getMessageOrBuilder(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public List<? extends DolphinMessages.DTCRecordOrBuilder> getDTCRecordsOrBuilderList() {
/* 30405 */         if (this.dTCRecordsBuilder_ != null) {
/* 30406 */           return this.dTCRecordsBuilder_.getMessageOrBuilderList();
/*       */         }
/* 30408 */         return Collections.unmodifiableList((List)this.dTCRecords_);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinMessages.DTCRecord.Builder addDTCRecordsBuilder() {
/* 30415 */         return (DolphinMessages.DTCRecord.Builder)getDTCRecordsFieldBuilder().addBuilder(
/* 30416 */             (AbstractMessage)DolphinMessages.DTCRecord.getDefaultInstance());
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinMessages.DTCRecord.Builder addDTCRecordsBuilder(int index) {
/* 30423 */         return (DolphinMessages.DTCRecord.Builder)getDTCRecordsFieldBuilder().addBuilder(index, 
/* 30424 */             (AbstractMessage)DolphinMessages.DTCRecord.getDefaultInstance());
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public List<DolphinMessages.DTCRecord.Builder> getDTCRecordsBuilderList() {
/* 30431 */         return getDTCRecordsFieldBuilder().getBuilderList();
/*       */       }
/*       */ 
/*       */       
/*       */       private RepeatedFieldBuilderV3<DolphinMessages.DTCRecord, DolphinMessages.DTCRecord.Builder, DolphinMessages.DTCRecordOrBuilder> getDTCRecordsFieldBuilder() {
/* 30436 */         if (this.dTCRecordsBuilder_ == null) {
/* 30437 */           this
/*       */ 
/*       */ 
/*       */ 
/*       */             
/* 30442 */             .dTCRecordsBuilder_ = new RepeatedFieldBuilderV3(this.dTCRecords_, ((this.bitField0_ & 0x1) != 0), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/* 30443 */           this.dTCRecords_ = null;
/*       */         } 
/* 30445 */         return this.dTCRecordsBuilder_;
/*       */       }
/*       */ 
/*       */       
/*       */       public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
/* 30450 */         return (Builder)super.setUnknownFields(unknownFields);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
/* 30456 */         return (Builder)super.mergeUnknownFields(unknownFields);
/*       */       }
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 30466 */     private static final DTCRequest DEFAULT_INSTANCE = new DTCRequest();
/*       */ 
/*       */     
/*       */     public static DTCRequest getDefaultInstance() {
/* 30470 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */ 
/*       */     
/* 30474 */     private static final Parser<DTCRequest> PARSER = (Parser<DTCRequest>)new AbstractParser<DTCRequest>()
/*       */       {
/*       */ 
/*       */         
/*       */         public DolphinMessages.DTCRequest parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException
/*       */         {
/* 30480 */           return new DolphinMessages.DTCRequest(input, extensionRegistry);
/*       */         }
/*       */       };
/*       */     
/*       */     public static Parser<DTCRequest> parser() {
/* 30485 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public Parser<DTCRequest> getParserForType() {
/* 30490 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public DTCRequest getDefaultInstanceForType() {
/* 30495 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */   }
/*       */ 
/*       */ 
/*       */   
/*       */   public static interface DTCRecordOrBuilder
/*       */     extends MessageOrBuilder
/*       */   {
/*       */     List<DolphinMessages.DTCCode> getDTCCodesList();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinMessages.DTCCode getDTCCodes(int param1Int);
/*       */ 
/*       */     
/*       */     int getDTCCodesCount();
/*       */ 
/*       */     
/*       */     List<? extends DolphinMessages.DTCCodeOrBuilder> getDTCCodesOrBuilderList();
/*       */ 
/*       */     
/*       */     DolphinMessages.DTCCodeOrBuilder getDTCCodesOrBuilder(int param1Int);
/*       */ 
/*       */     
/*       */     int getTimestamp();
/*       */ 
/*       */     
/*       */     boolean getOBDMalfunctionIndicatorLamp();
/*       */ 
/*       */     
/*       */     int getFMSProtectLamp();
/*       */ 
/*       */     
/*       */     int getFMSAmberWarningLamp();
/*       */ 
/*       */     
/*       */     int getFMSRedStopLamp();
/*       */ 
/*       */     
/*       */     int getFMSMalfunctionIndicatorLamp();
/*       */ 
/*       */     
/*       */     int getFMSSAELamp1();
/*       */ 
/*       */     
/*       */     int getFMSSAELamp2();
/*       */ 
/*       */     
/*       */     int getFMSSAELamp3();
/*       */ 
/*       */     
/*       */     int getFMSSAELamp4();
/*       */   }
/*       */ 
/*       */   
/*       */   public static final class DTCRecord
/*       */     extends GeneratedMessageV3
/*       */     implements DTCRecordOrBuilder
/*       */   {
/*       */     private static final long serialVersionUID = 0L;
/*       */     
/*       */     public static final int DTCCODES_FIELD_NUMBER = 1;
/*       */     
/*       */     private List<DolphinMessages.DTCCode> dTCCodes_;
/*       */     
/*       */     public static final int TIMESTAMP_FIELD_NUMBER = 2;
/*       */     
/*       */     private int timestamp_;
/*       */     
/*       */     public static final int OBD_MALFUNCTIONINDICATORLAMP_FIELD_NUMBER = 3;
/*       */     
/*       */     private boolean oBDMalfunctionIndicatorLamp_;
/*       */     
/*       */     public static final int FMS_PROTECTLAMP_FIELD_NUMBER = 4;
/*       */     
/*       */     private int fMSProtectLamp_;
/*       */     
/*       */     public static final int FMS_AMBERWARNINGLAMP_FIELD_NUMBER = 5;
/*       */     
/*       */     private int fMSAmberWarningLamp_;
/*       */     
/*       */     public static final int FMS_REDSTOPLAMP_FIELD_NUMBER = 6;
/*       */     
/*       */     private int fMSRedStopLamp_;
/*       */     
/*       */     public static final int FMS_MALFUNCTIONINDICATORLAMP_FIELD_NUMBER = 7;
/*       */     
/*       */     private int fMSMalfunctionIndicatorLamp_;
/*       */     
/*       */     public static final int FMS_SAELAMP1_FIELD_NUMBER = 8;
/*       */     
/*       */     private int fMSSAELamp1_;
/*       */     
/*       */     public static final int FMS_SAELAMP2_FIELD_NUMBER = 9;
/*       */     
/*       */     private int fMSSAELamp2_;
/*       */     
/*       */     public static final int FMS_SAELAMP3_FIELD_NUMBER = 10;
/*       */     
/*       */     private int fMSSAELamp3_;
/*       */     
/*       */     public static final int FMS_SAELAMP4_FIELD_NUMBER = 11;
/*       */     
/*       */     private int fMSSAELamp4_;
/*       */     
/*       */     private byte memoizedIsInitialized;
/*       */ 
/*       */     
/*       */     private DTCRecord(GeneratedMessageV3.Builder<?> builder)
/*       */     {
/* 30606 */       super(builder);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/* 30895 */       this.memoizedIsInitialized = -1; } private DTCRecord() { this.memoizedIsInitialized = -1; this.dTCCodes_ = Collections.emptyList(); } protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) { return new DTCRecord(); } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private DTCRecord(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this(); if (extensionRegistry == null) throw new NullPointerException();  int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { int tag = input.readTag(); switch (tag) { case 0: done = true; continue;case 10: if ((mutable_bitField0_ & 0x1) == 0) { this.dTCCodes_ = new ArrayList<>(); mutable_bitField0_ |= 0x1; }  this.dTCCodes_.add(input.readMessage(DolphinMessages.DTCCode.parser(), extensionRegistry)); continue;case 16: this.timestamp_ = input.readUInt32(); continue;case 24: this.oBDMalfunctionIndicatorLamp_ = input.readBool(); continue;case 32: this.fMSProtectLamp_ = input.readUInt32(); continue;case 40: this.fMSAmberWarningLamp_ = input.readUInt32(); continue;case 48: this.fMSRedStopLamp_ = input.readUInt32(); continue;case 56: this.fMSMalfunctionIndicatorLamp_ = input.readUInt32(); continue;case 64: this.fMSSAELamp1_ = input.readUInt32(); continue;case 72: this.fMSSAELamp2_ = input.readUInt32(); continue;case 80: this.fMSSAELamp3_ = input.readUInt32(); continue;case 88: this.fMSSAELamp4_ = input.readUInt32(); continue; }  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this); } finally { if ((mutable_bitField0_ & 0x1) != 0) this.dTCCodes_ = Collections.unmodifiableList(this.dTCCodes_);  this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_DTCRecord_descriptor; } protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() { return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_DTCRecord_fieldAccessorTable.ensureFieldAccessorsInitialized(DTCRecord.class, Builder.class); } public List<DolphinMessages.DTCCode> getDTCCodesList() { return this.dTCCodes_; } public List<? extends DolphinMessages.DTCCodeOrBuilder> getDTCCodesOrBuilderList() { return (List)this.dTCCodes_; } public int getDTCCodesCount() { return this.dTCCodes_.size(); } public DolphinMessages.DTCCode getDTCCodes(int index) { return this.dTCCodes_.get(index); } public DolphinMessages.DTCCodeOrBuilder getDTCCodesOrBuilder(int index) { return this.dTCCodes_.get(index); } public int getTimestamp() { return this.timestamp_; } public boolean getOBDMalfunctionIndicatorLamp() { return this.oBDMalfunctionIndicatorLamp_; } public int getFMSProtectLamp() { return this.fMSProtectLamp_; } public int getFMSAmberWarningLamp() { return this.fMSAmberWarningLamp_; } public int getFMSRedStopLamp() { return this.fMSRedStopLamp_; } public int getFMSMalfunctionIndicatorLamp() { return this.fMSMalfunctionIndicatorLamp_; } public int getFMSSAELamp1() { return this.fMSSAELamp1_; } public int getFMSSAELamp2() { return this.fMSSAELamp2_; }
/*       */     public int getFMSSAELamp3() { return this.fMSSAELamp3_; }
/*       */     public int getFMSSAELamp4() { return this.fMSSAELamp4_; }
/* 30898 */     public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized;
/* 30899 */       if (isInitialized == 1) return true; 
/* 30900 */       if (isInitialized == 0) return false;
/*       */       
/* 30902 */       this.memoizedIsInitialized = 1;
/* 30903 */       return true; }
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/* 30909 */       for (int i = 0; i < this.dTCCodes_.size(); i++) {
/* 30910 */         output.writeMessage(1, (MessageLite)this.dTCCodes_.get(i));
/*       */       }
/* 30912 */       if (this.timestamp_ != 0) {
/* 30913 */         output.writeUInt32(2, this.timestamp_);
/*       */       }
/* 30915 */       if (this.oBDMalfunctionIndicatorLamp_) {
/* 30916 */         output.writeBool(3, this.oBDMalfunctionIndicatorLamp_);
/*       */       }
/* 30918 */       if (this.fMSProtectLamp_ != 0) {
/* 30919 */         output.writeUInt32(4, this.fMSProtectLamp_);
/*       */       }
/* 30921 */       if (this.fMSAmberWarningLamp_ != 0) {
/* 30922 */         output.writeUInt32(5, this.fMSAmberWarningLamp_);
/*       */       }
/* 30924 */       if (this.fMSRedStopLamp_ != 0) {
/* 30925 */         output.writeUInt32(6, this.fMSRedStopLamp_);
/*       */       }
/* 30927 */       if (this.fMSMalfunctionIndicatorLamp_ != 0) {
/* 30928 */         output.writeUInt32(7, this.fMSMalfunctionIndicatorLamp_);
/*       */       }
/* 30930 */       if (this.fMSSAELamp1_ != 0) {
/* 30931 */         output.writeUInt32(8, this.fMSSAELamp1_);
/*       */       }
/* 30933 */       if (this.fMSSAELamp2_ != 0) {
/* 30934 */         output.writeUInt32(9, this.fMSSAELamp2_);
/*       */       }
/* 30936 */       if (this.fMSSAELamp3_ != 0) {
/* 30937 */         output.writeUInt32(10, this.fMSSAELamp3_);
/*       */       }
/* 30939 */       if (this.fMSSAELamp4_ != 0) {
/* 30940 */         output.writeUInt32(11, this.fMSSAELamp4_);
/*       */       }
/* 30942 */       this.unknownFields.writeTo(output);
/*       */     }
/*       */ 
/*       */     
/*       */     public int getSerializedSize() {
/* 30947 */       int size = this.memoizedSize;
/* 30948 */       if (size != -1) return size;
/*       */       
/* 30950 */       size = 0;
/* 30951 */       for (int i = 0; i < this.dTCCodes_.size(); i++) {
/* 30952 */         size += 
/* 30953 */           CodedOutputStream.computeMessageSize(1, (MessageLite)this.dTCCodes_.get(i));
/*       */       }
/* 30955 */       if (this.timestamp_ != 0) {
/* 30956 */         size += 
/* 30957 */           CodedOutputStream.computeUInt32Size(2, this.timestamp_);
/*       */       }
/* 30959 */       if (this.oBDMalfunctionIndicatorLamp_) {
/* 30960 */         size += 
/* 30961 */           CodedOutputStream.computeBoolSize(3, this.oBDMalfunctionIndicatorLamp_);
/*       */       }
/* 30963 */       if (this.fMSProtectLamp_ != 0) {
/* 30964 */         size += 
/* 30965 */           CodedOutputStream.computeUInt32Size(4, this.fMSProtectLamp_);
/*       */       }
/* 30967 */       if (this.fMSAmberWarningLamp_ != 0) {
/* 30968 */         size += 
/* 30969 */           CodedOutputStream.computeUInt32Size(5, this.fMSAmberWarningLamp_);
/*       */       }
/* 30971 */       if (this.fMSRedStopLamp_ != 0) {
/* 30972 */         size += 
/* 30973 */           CodedOutputStream.computeUInt32Size(6, this.fMSRedStopLamp_);
/*       */       }
/* 30975 */       if (this.fMSMalfunctionIndicatorLamp_ != 0) {
/* 30976 */         size += 
/* 30977 */           CodedOutputStream.computeUInt32Size(7, this.fMSMalfunctionIndicatorLamp_);
/*       */       }
/* 30979 */       if (this.fMSSAELamp1_ != 0) {
/* 30980 */         size += 
/* 30981 */           CodedOutputStream.computeUInt32Size(8, this.fMSSAELamp1_);
/*       */       }
/* 30983 */       if (this.fMSSAELamp2_ != 0) {
/* 30984 */         size += 
/* 30985 */           CodedOutputStream.computeUInt32Size(9, this.fMSSAELamp2_);
/*       */       }
/* 30987 */       if (this.fMSSAELamp3_ != 0) {
/* 30988 */         size += 
/* 30989 */           CodedOutputStream.computeUInt32Size(10, this.fMSSAELamp3_);
/*       */       }
/* 30991 */       if (this.fMSSAELamp4_ != 0) {
/* 30992 */         size += 
/* 30993 */           CodedOutputStream.computeUInt32Size(11, this.fMSSAELamp4_);
/*       */       }
/* 30995 */       size += this.unknownFields.getSerializedSize();
/* 30996 */       this.memoizedSize = size;
/* 30997 */       return size;
/*       */     }
/*       */ 
/*       */     
/*       */     public boolean equals(Object obj) {
/* 31002 */       if (obj == this) {
/* 31003 */         return true;
/*       */       }
/* 31005 */       if (!(obj instanceof DTCRecord)) {
/* 31006 */         return super.equals(obj);
/*       */       }
/* 31008 */       DTCRecord other = (DTCRecord)obj;
/*       */ 
/*       */       
/* 31011 */       if (!getDTCCodesList().equals(other.getDTCCodesList())) return false; 
/* 31012 */       if (getTimestamp() != other
/* 31013 */         .getTimestamp()) return false; 
/* 31014 */       if (getOBDMalfunctionIndicatorLamp() != other
/* 31015 */         .getOBDMalfunctionIndicatorLamp()) return false; 
/* 31016 */       if (getFMSProtectLamp() != other
/* 31017 */         .getFMSProtectLamp()) return false; 
/* 31018 */       if (getFMSAmberWarningLamp() != other
/* 31019 */         .getFMSAmberWarningLamp()) return false; 
/* 31020 */       if (getFMSRedStopLamp() != other
/* 31021 */         .getFMSRedStopLamp()) return false; 
/* 31022 */       if (getFMSMalfunctionIndicatorLamp() != other
/* 31023 */         .getFMSMalfunctionIndicatorLamp()) return false; 
/* 31024 */       if (getFMSSAELamp1() != other
/* 31025 */         .getFMSSAELamp1()) return false; 
/* 31026 */       if (getFMSSAELamp2() != other
/* 31027 */         .getFMSSAELamp2()) return false; 
/* 31028 */       if (getFMSSAELamp3() != other
/* 31029 */         .getFMSSAELamp3()) return false; 
/* 31030 */       if (getFMSSAELamp4() != other
/* 31031 */         .getFMSSAELamp4()) return false; 
/* 31032 */       if (!this.unknownFields.equals(other.unknownFields)) return false; 
/* 31033 */       return true;
/*       */     }
/*       */ 
/*       */     
/*       */     public int hashCode() {
/* 31038 */       if (this.memoizedHashCode != 0) {
/* 31039 */         return this.memoizedHashCode;
/*       */       }
/* 31041 */       int hash = 41;
/* 31042 */       hash = 19 * hash + getDescriptor().hashCode();
/* 31043 */       if (getDTCCodesCount() > 0) {
/* 31044 */         hash = 37 * hash + 1;
/* 31045 */         hash = 53 * hash + getDTCCodesList().hashCode();
/*       */       } 
/* 31047 */       hash = 37 * hash + 2;
/* 31048 */       hash = 53 * hash + getTimestamp();
/* 31049 */       hash = 37 * hash + 3;
/* 31050 */       hash = 53 * hash + Internal.hashBoolean(
/* 31051 */           getOBDMalfunctionIndicatorLamp());
/* 31052 */       hash = 37 * hash + 4;
/* 31053 */       hash = 53 * hash + getFMSProtectLamp();
/* 31054 */       hash = 37 * hash + 5;
/* 31055 */       hash = 53 * hash + getFMSAmberWarningLamp();
/* 31056 */       hash = 37 * hash + 6;
/* 31057 */       hash = 53 * hash + getFMSRedStopLamp();
/* 31058 */       hash = 37 * hash + 7;
/* 31059 */       hash = 53 * hash + getFMSMalfunctionIndicatorLamp();
/* 31060 */       hash = 37 * hash + 8;
/* 31061 */       hash = 53 * hash + getFMSSAELamp1();
/* 31062 */       hash = 37 * hash + 9;
/* 31063 */       hash = 53 * hash + getFMSSAELamp2();
/* 31064 */       hash = 37 * hash + 10;
/* 31065 */       hash = 53 * hash + getFMSSAELamp3();
/* 31066 */       hash = 37 * hash + 11;
/* 31067 */       hash = 53 * hash + getFMSSAELamp4();
/* 31068 */       hash = 29 * hash + this.unknownFields.hashCode();
/* 31069 */       this.memoizedHashCode = hash;
/* 31070 */       return hash;
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static DTCRecord parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
/* 31076 */       return (DTCRecord)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static DTCRecord parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 31082 */       return (DTCRecord)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static DTCRecord parseFrom(ByteString data) throws InvalidProtocolBufferException {
/* 31087 */       return (DTCRecord)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static DTCRecord parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 31093 */       return (DTCRecord)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static DTCRecord parseFrom(byte[] data) throws InvalidProtocolBufferException {
/* 31097 */       return (DTCRecord)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static DTCRecord parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 31103 */       return (DTCRecord)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static DTCRecord parseFrom(InputStream input) throws IOException {
/* 31107 */       return 
/* 31108 */         (DTCRecord)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static DTCRecord parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 31114 */       return 
/* 31115 */         (DTCRecord)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static DTCRecord parseDelimitedFrom(InputStream input) throws IOException {
/* 31119 */       return 
/* 31120 */         (DTCRecord)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static DTCRecord parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 31126 */       return 
/* 31127 */         (DTCRecord)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static DTCRecord parseFrom(CodedInputStream input) throws IOException {
/* 31132 */       return 
/* 31133 */         (DTCRecord)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static DTCRecord parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 31139 */       return 
/* 31140 */         (DTCRecord)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public Builder newBuilderForType() {
/* 31144 */       return newBuilder();
/*       */     } public static Builder newBuilder() {
/* 31146 */       return DEFAULT_INSTANCE.toBuilder();
/*       */     }
/*       */     public static Builder newBuilder(DTCRecord prototype) {
/* 31149 */       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
/*       */     }
/*       */     
/*       */     public Builder toBuilder() {
/* 31153 */       return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder())
/* 31154 */         .mergeFrom(this);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
/* 31160 */       Builder builder = new Builder(parent);
/* 31161 */       return builder;
/*       */     }
/*       */     public static final class Builder extends GeneratedMessageV3.Builder<Builder> implements DolphinMessages.DTCRecordOrBuilder { private int bitField0_; private List<DolphinMessages.DTCCode> dTCCodes_; private RepeatedFieldBuilderV3<DolphinMessages.DTCCode, DolphinMessages.DTCCode.Builder, DolphinMessages.DTCCodeOrBuilder> dTCCodesBuilder_; private int timestamp_; private boolean oBDMalfunctionIndicatorLamp_; private int fMSProtectLamp_; private int fMSAmberWarningLamp_;
/*       */       private int fMSRedStopLamp_;
/*       */       private int fMSMalfunctionIndicatorLamp_;
/*       */       private int fMSSAELamp1_;
/*       */       private int fMSSAELamp2_;
/*       */       private int fMSSAELamp3_;
/*       */       private int fMSSAELamp4_;
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/* 31172 */         return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_DTCRecord_descriptor;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
/* 31178 */         return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_DTCRecord_fieldAccessorTable
/* 31179 */           .ensureFieldAccessorsInitialized(DolphinMessages.DTCRecord.class, Builder.class);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private Builder()
/*       */       {
/* 31408 */         this
/* 31409 */           .dTCCodes_ = Collections.emptyList(); maybeForceBuilderInitialization(); } private Builder(GeneratedMessageV3.BuilderParent parent) { super(parent); this.dTCCodes_ = Collections.emptyList(); maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (DolphinMessages.DTCRecord.alwaysUseFieldBuilders) getDTCCodesFieldBuilder();  } public Builder clear() { super.clear(); if (this.dTCCodesBuilder_ == null) { this.dTCCodes_ = Collections.emptyList(); this.bitField0_ &= 0xFFFFFFFE; } else { this.dTCCodesBuilder_.clear(); }  this.timestamp_ = 0; this.oBDMalfunctionIndicatorLamp_ = false; this.fMSProtectLamp_ = 0; this.fMSAmberWarningLamp_ = 0; this.fMSRedStopLamp_ = 0; this.fMSMalfunctionIndicatorLamp_ = 0; this.fMSSAELamp1_ = 0; this.fMSSAELamp2_ = 0; this.fMSSAELamp3_ = 0; this.fMSSAELamp4_ = 0; return this; } public Descriptors.Descriptor getDescriptorForType() { return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_DTCRecord_descriptor; } public DolphinMessages.DTCRecord getDefaultInstanceForType() { return DolphinMessages.DTCRecord.getDefaultInstance(); } public DolphinMessages.DTCRecord build() { DolphinMessages.DTCRecord result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public DolphinMessages.DTCRecord buildPartial() { DolphinMessages.DTCRecord result = new DolphinMessages.DTCRecord(this); int from_bitField0_ = this.bitField0_; if (this.dTCCodesBuilder_ == null) { if ((this.bitField0_ & 0x1) != 0) { this.dTCCodes_ = Collections.unmodifiableList(this.dTCCodes_); this.bitField0_ &= 0xFFFFFFFE; }  result.dTCCodes_ = this.dTCCodes_; } else { result.dTCCodes_ = this.dTCCodesBuilder_.build(); }  result.timestamp_ = this.timestamp_; result.oBDMalfunctionIndicatorLamp_ = this.oBDMalfunctionIndicatorLamp_; result.fMSProtectLamp_ = this.fMSProtectLamp_; result.fMSAmberWarningLamp_ = this.fMSAmberWarningLamp_; result.fMSRedStopLamp_ = this.fMSRedStopLamp_; result.fMSMalfunctionIndicatorLamp_ = this.fMSMalfunctionIndicatorLamp_; result.fMSSAELamp1_ = this.fMSSAELamp1_; result.fMSSAELamp2_ = this.fMSSAELamp2_; result.fMSSAELamp3_ = this.fMSSAELamp3_; result.fMSSAELamp4_ = this.fMSSAELamp4_; onBuilt(); return result; } public Builder clone() { return (Builder)super.clone(); } public Builder setField(Descriptors.FieldDescriptor field, Object value) { return (Builder)super.setField(field, value); } public Builder clearField(Descriptors.FieldDescriptor field) { return (Builder)super.clearField(field); } public Builder clearOneof(Descriptors.OneofDescriptor oneof) { return (Builder)super.clearOneof(oneof); } public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) { return (Builder)super.setRepeatedField(field, index, value); } public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) { return (Builder)super.addRepeatedField(field, value); } public Builder mergeFrom(Message other) { if (other instanceof DolphinMessages.DTCRecord) return mergeFrom((DolphinMessages.DTCRecord)other);  super.mergeFrom(other); return this; } public Builder mergeFrom(DolphinMessages.DTCRecord other) { if (other == DolphinMessages.DTCRecord.getDefaultInstance()) return this;  if (this.dTCCodesBuilder_ == null) { if (!other.dTCCodes_.isEmpty()) { if (this.dTCCodes_.isEmpty()) { this.dTCCodes_ = other.dTCCodes_; this.bitField0_ &= 0xFFFFFFFE; } else { ensureDTCCodesIsMutable(); this.dTCCodes_.addAll(other.dTCCodes_); }  onChanged(); }  } else if (!other.dTCCodes_.isEmpty()) { if (this.dTCCodesBuilder_.isEmpty()) { this.dTCCodesBuilder_.dispose(); this.dTCCodesBuilder_ = null; this.dTCCodes_ = other.dTCCodes_; this.bitField0_ &= 0xFFFFFFFE; this.dTCCodesBuilder_ = DolphinMessages.DTCRecord.alwaysUseFieldBuilders ? getDTCCodesFieldBuilder() : null; } else { this.dTCCodesBuilder_.addAllMessages(other.dTCCodes_); }  }  if (other.getTimestamp() != 0) setTimestamp(other.getTimestamp());  if (other.getOBDMalfunctionIndicatorLamp()) setOBDMalfunctionIndicatorLamp(other.getOBDMalfunctionIndicatorLamp());  if (other.getFMSProtectLamp() != 0) setFMSProtectLamp(other.getFMSProtectLamp());  if (other.getFMSAmberWarningLamp() != 0) setFMSAmberWarningLamp(other.getFMSAmberWarningLamp());  if (other.getFMSRedStopLamp() != 0) setFMSRedStopLamp(other.getFMSRedStopLamp());  if (other.getFMSMalfunctionIndicatorLamp() != 0) setFMSMalfunctionIndicatorLamp(other.getFMSMalfunctionIndicatorLamp());  if (other.getFMSSAELamp1() != 0) setFMSSAELamp1(other.getFMSSAELamp1());  if (other.getFMSSAELamp2() != 0) setFMSSAELamp2(other.getFMSSAELamp2());  if (other.getFMSSAELamp3() != 0) setFMSSAELamp3(other.getFMSSAELamp3());  if (other.getFMSSAELamp4() != 0) setFMSSAELamp4(other.getFMSSAELamp4());  mergeUnknownFields(other.unknownFields); onChanged(); return this; } public final boolean isInitialized() { return true; }
/*       */       public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { DolphinMessages.DTCRecord parsedMessage = null; try { parsedMessage = (DolphinMessages.DTCRecord)DolphinMessages.DTCRecord.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (DolphinMessages.DTCRecord)e.getUnfinishedMessage(); throw e.unwrapIOException(); } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; }
/* 31411 */       private void ensureDTCCodesIsMutable() { if ((this.bitField0_ & 0x1) == 0) {
/* 31412 */           this.dTCCodes_ = new ArrayList<>(this.dTCCodes_);
/* 31413 */           this.bitField0_ |= 0x1;
/*       */         }  }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public List<DolphinMessages.DTCCode> getDTCCodesList() {
/* 31424 */         if (this.dTCCodesBuilder_ == null) {
/* 31425 */           return Collections.unmodifiableList(this.dTCCodes_);
/*       */         }
/* 31427 */         return this.dTCCodesBuilder_.getMessageList();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getDTCCodesCount() {
/* 31434 */         if (this.dTCCodesBuilder_ == null) {
/* 31435 */           return this.dTCCodes_.size();
/*       */         }
/* 31437 */         return this.dTCCodesBuilder_.getCount();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinMessages.DTCCode getDTCCodes(int index) {
/* 31444 */         if (this.dTCCodesBuilder_ == null) {
/* 31445 */           return this.dTCCodes_.get(index);
/*       */         }
/* 31447 */         return (DolphinMessages.DTCCode)this.dTCCodesBuilder_.getMessage(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setDTCCodes(int index, DolphinMessages.DTCCode value) {
/* 31455 */         if (this.dTCCodesBuilder_ == null) {
/* 31456 */           if (value == null) {
/* 31457 */             throw new NullPointerException();
/*       */           }
/* 31459 */           ensureDTCCodesIsMutable();
/* 31460 */           this.dTCCodes_.set(index, value);
/* 31461 */           onChanged();
/*       */         } else {
/* 31463 */           this.dTCCodesBuilder_.setMessage(index, (AbstractMessage)value);
/*       */         } 
/* 31465 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setDTCCodes(int index, DolphinMessages.DTCCode.Builder builderForValue) {
/* 31472 */         if (this.dTCCodesBuilder_ == null) {
/* 31473 */           ensureDTCCodesIsMutable();
/* 31474 */           this.dTCCodes_.set(index, builderForValue.build());
/* 31475 */           onChanged();
/*       */         } else {
/* 31477 */           this.dTCCodesBuilder_.setMessage(index, (AbstractMessage)builderForValue.build());
/*       */         } 
/* 31479 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addDTCCodes(DolphinMessages.DTCCode value) {
/* 31485 */         if (this.dTCCodesBuilder_ == null) {
/* 31486 */           if (value == null) {
/* 31487 */             throw new NullPointerException();
/*       */           }
/* 31489 */           ensureDTCCodesIsMutable();
/* 31490 */           this.dTCCodes_.add(value);
/* 31491 */           onChanged();
/*       */         } else {
/* 31493 */           this.dTCCodesBuilder_.addMessage((AbstractMessage)value);
/*       */         } 
/* 31495 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addDTCCodes(int index, DolphinMessages.DTCCode value) {
/* 31502 */         if (this.dTCCodesBuilder_ == null) {
/* 31503 */           if (value == null) {
/* 31504 */             throw new NullPointerException();
/*       */           }
/* 31506 */           ensureDTCCodesIsMutable();
/* 31507 */           this.dTCCodes_.add(index, value);
/* 31508 */           onChanged();
/*       */         } else {
/* 31510 */           this.dTCCodesBuilder_.addMessage(index, (AbstractMessage)value);
/*       */         } 
/* 31512 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addDTCCodes(DolphinMessages.DTCCode.Builder builderForValue) {
/* 31519 */         if (this.dTCCodesBuilder_ == null) {
/* 31520 */           ensureDTCCodesIsMutable();
/* 31521 */           this.dTCCodes_.add(builderForValue.build());
/* 31522 */           onChanged();
/*       */         } else {
/* 31524 */           this.dTCCodesBuilder_.addMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/* 31526 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addDTCCodes(int index, DolphinMessages.DTCCode.Builder builderForValue) {
/* 31533 */         if (this.dTCCodesBuilder_ == null) {
/* 31534 */           ensureDTCCodesIsMutable();
/* 31535 */           this.dTCCodes_.add(index, builderForValue.build());
/* 31536 */           onChanged();
/*       */         } else {
/* 31538 */           this.dTCCodesBuilder_.addMessage(index, (AbstractMessage)builderForValue.build());
/*       */         } 
/* 31540 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addAllDTCCodes(Iterable<? extends DolphinMessages.DTCCode> values) {
/* 31547 */         if (this.dTCCodesBuilder_ == null) {
/* 31548 */           ensureDTCCodesIsMutable();
/* 31549 */           AbstractMessageLite.Builder.addAll(values, this.dTCCodes_);
/*       */           
/* 31551 */           onChanged();
/*       */         } else {
/* 31553 */           this.dTCCodesBuilder_.addAllMessages(values);
/*       */         } 
/* 31555 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearDTCCodes() {
/* 31561 */         if (this.dTCCodesBuilder_ == null) {
/* 31562 */           this.dTCCodes_ = Collections.emptyList();
/* 31563 */           this.bitField0_ &= 0xFFFFFFFE;
/* 31564 */           onChanged();
/*       */         } else {
/* 31566 */           this.dTCCodesBuilder_.clear();
/*       */         } 
/* 31568 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder removeDTCCodes(int index) {
/* 31574 */         if (this.dTCCodesBuilder_ == null) {
/* 31575 */           ensureDTCCodesIsMutable();
/* 31576 */           this.dTCCodes_.remove(index);
/* 31577 */           onChanged();
/*       */         } else {
/* 31579 */           this.dTCCodesBuilder_.remove(index);
/*       */         } 
/* 31581 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinMessages.DTCCode.Builder getDTCCodesBuilder(int index) {
/* 31588 */         return (DolphinMessages.DTCCode.Builder)getDTCCodesFieldBuilder().getBuilder(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinMessages.DTCCodeOrBuilder getDTCCodesOrBuilder(int index) {
/* 31595 */         if (this.dTCCodesBuilder_ == null)
/* 31596 */           return this.dTCCodes_.get(index); 
/* 31597 */         return (DolphinMessages.DTCCodeOrBuilder)this.dTCCodesBuilder_.getMessageOrBuilder(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public List<? extends DolphinMessages.DTCCodeOrBuilder> getDTCCodesOrBuilderList() {
/* 31605 */         if (this.dTCCodesBuilder_ != null) {
/* 31606 */           return this.dTCCodesBuilder_.getMessageOrBuilderList();
/*       */         }
/* 31608 */         return Collections.unmodifiableList((List)this.dTCCodes_);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinMessages.DTCCode.Builder addDTCCodesBuilder() {
/* 31615 */         return (DolphinMessages.DTCCode.Builder)getDTCCodesFieldBuilder().addBuilder(
/* 31616 */             (AbstractMessage)DolphinMessages.DTCCode.getDefaultInstance());
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinMessages.DTCCode.Builder addDTCCodesBuilder(int index) {
/* 31623 */         return (DolphinMessages.DTCCode.Builder)getDTCCodesFieldBuilder().addBuilder(index, 
/* 31624 */             (AbstractMessage)DolphinMessages.DTCCode.getDefaultInstance());
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public List<DolphinMessages.DTCCode.Builder> getDTCCodesBuilderList() {
/* 31631 */         return getDTCCodesFieldBuilder().getBuilderList();
/*       */       }
/*       */ 
/*       */       
/*       */       private RepeatedFieldBuilderV3<DolphinMessages.DTCCode, DolphinMessages.DTCCode.Builder, DolphinMessages.DTCCodeOrBuilder> getDTCCodesFieldBuilder() {
/* 31636 */         if (this.dTCCodesBuilder_ == null) {
/* 31637 */           this
/*       */ 
/*       */ 
/*       */ 
/*       */             
/* 31642 */             .dTCCodesBuilder_ = new RepeatedFieldBuilderV3(this.dTCCodes_, ((this.bitField0_ & 0x1) != 0), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/* 31643 */           this.dTCCodes_ = null;
/*       */         } 
/* 31645 */         return this.dTCCodesBuilder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getTimestamp() {
/* 31655 */         return this.timestamp_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setTimestamp(int value) {
/* 31664 */         this.timestamp_ = value;
/* 31665 */         onChanged();
/* 31666 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearTimestamp() {
/* 31674 */         this.timestamp_ = 0;
/* 31675 */         onChanged();
/* 31676 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean getOBDMalfunctionIndicatorLamp() {
/* 31690 */         return this.oBDMalfunctionIndicatorLamp_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setOBDMalfunctionIndicatorLamp(boolean value) {
/* 31703 */         this.oBDMalfunctionIndicatorLamp_ = value;
/* 31704 */         onChanged();
/* 31705 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearOBDMalfunctionIndicatorLamp() {
/* 31717 */         this.oBDMalfunctionIndicatorLamp_ = false;
/* 31718 */         onChanged();
/* 31719 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getFMSProtectLamp() {
/* 31733 */         return this.fMSProtectLamp_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setFMSProtectLamp(int value) {
/* 31746 */         this.fMSProtectLamp_ = value;
/* 31747 */         onChanged();
/* 31748 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearFMSProtectLamp() {
/* 31760 */         this.fMSProtectLamp_ = 0;
/* 31761 */         onChanged();
/* 31762 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getFMSAmberWarningLamp() {
/* 31772 */         return this.fMSAmberWarningLamp_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setFMSAmberWarningLamp(int value) {
/* 31781 */         this.fMSAmberWarningLamp_ = value;
/* 31782 */         onChanged();
/* 31783 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearFMSAmberWarningLamp() {
/* 31791 */         this.fMSAmberWarningLamp_ = 0;
/* 31792 */         onChanged();
/* 31793 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getFMSRedStopLamp() {
/* 31803 */         return this.fMSRedStopLamp_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setFMSRedStopLamp(int value) {
/* 31812 */         this.fMSRedStopLamp_ = value;
/* 31813 */         onChanged();
/* 31814 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearFMSRedStopLamp() {
/* 31822 */         this.fMSRedStopLamp_ = 0;
/* 31823 */         onChanged();
/* 31824 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getFMSMalfunctionIndicatorLamp() {
/* 31834 */         return this.fMSMalfunctionIndicatorLamp_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setFMSMalfunctionIndicatorLamp(int value) {
/* 31843 */         this.fMSMalfunctionIndicatorLamp_ = value;
/* 31844 */         onChanged();
/* 31845 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearFMSMalfunctionIndicatorLamp() {
/* 31853 */         this.fMSMalfunctionIndicatorLamp_ = 0;
/* 31854 */         onChanged();
/* 31855 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getFMSSAELamp1() {
/* 31865 */         return this.fMSSAELamp1_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setFMSSAELamp1(int value) {
/* 31874 */         this.fMSSAELamp1_ = value;
/* 31875 */         onChanged();
/* 31876 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearFMSSAELamp1() {
/* 31884 */         this.fMSSAELamp1_ = 0;
/* 31885 */         onChanged();
/* 31886 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getFMSSAELamp2() {
/* 31896 */         return this.fMSSAELamp2_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setFMSSAELamp2(int value) {
/* 31905 */         this.fMSSAELamp2_ = value;
/* 31906 */         onChanged();
/* 31907 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearFMSSAELamp2() {
/* 31915 */         this.fMSSAELamp2_ = 0;
/* 31916 */         onChanged();
/* 31917 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getFMSSAELamp3() {
/* 31927 */         return this.fMSSAELamp3_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setFMSSAELamp3(int value) {
/* 31936 */         this.fMSSAELamp3_ = value;
/* 31937 */         onChanged();
/* 31938 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearFMSSAELamp3() {
/* 31946 */         this.fMSSAELamp3_ = 0;
/* 31947 */         onChanged();
/* 31948 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getFMSSAELamp4() {
/* 31958 */         return this.fMSSAELamp4_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setFMSSAELamp4(int value) {
/* 31967 */         this.fMSSAELamp4_ = value;
/* 31968 */         onChanged();
/* 31969 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearFMSSAELamp4() {
/* 31977 */         this.fMSSAELamp4_ = 0;
/* 31978 */         onChanged();
/* 31979 */         return this;
/*       */       }
/*       */ 
/*       */       
/*       */       public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
/* 31984 */         return (Builder)super.setUnknownFields(unknownFields);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
/* 31990 */         return (Builder)super.mergeUnknownFields(unknownFields);
/*       */       } }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 32000 */     private static final DTCRecord DEFAULT_INSTANCE = new DTCRecord();
/*       */ 
/*       */     
/*       */     public static DTCRecord getDefaultInstance() {
/* 32004 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */ 
/*       */     
/* 32008 */     private static final Parser<DTCRecord> PARSER = (Parser<DTCRecord>)new AbstractParser<DTCRecord>()
/*       */       {
/*       */ 
/*       */         
/*       */         public DolphinMessages.DTCRecord parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException
/*       */         {
/* 32014 */           return new DolphinMessages.DTCRecord(input, extensionRegistry);
/*       */         }
/*       */       };
/*       */     
/*       */     public static Parser<DTCRecord> parser() {
/* 32019 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public Parser<DTCRecord> getParserForType() {
/* 32024 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public DTCRecord getDefaultInstanceForType() {
/* 32029 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */   }
/*       */ 
/*       */   
/*       */   public static interface DTCCodeOrBuilder
/*       */     extends MessageOrBuilder
/*       */   {
/*       */     int getDTCTypeValue();
/*       */ 
/*       */     
/*       */     DolphinMessages.DTCType getDTCType();
/*       */ 
/*       */     
/*       */     int getCode();
/*       */ 
/*       */     
/*       */     int getReason();
/*       */ 
/*       */     
/*       */     int getOccurrenceCount();
/*       */ 
/*       */     
/*       */     int getSource();
/*       */   }
/*       */ 
/*       */   
/*       */   public static final class DTCCode
/*       */     extends GeneratedMessageV3
/*       */     implements DTCCodeOrBuilder
/*       */   {
/*       */     private static final long serialVersionUID = 0L;
/*       */     
/*       */     public static final int DTCTYPE_FIELD_NUMBER = 1;
/*       */     
/*       */     private int dTCType_;
/*       */     
/*       */     public static final int CODE_FIELD_NUMBER = 2;
/*       */     
/*       */     private int code_;
/*       */     
/*       */     public static final int REASON_FIELD_NUMBER = 3;
/*       */     
/*       */     private int reason_;
/*       */     
/*       */     public static final int OCCURRENCECOUNT_FIELD_NUMBER = 4;
/*       */     
/*       */     private int occurrenceCount_;
/*       */     public static final int SOURCE_FIELD_NUMBER = 5;
/*       */     private int source_;
/*       */     private byte memoizedIsInitialized;
/*       */     
/*       */     private DTCCode(GeneratedMessageV3.Builder<?> builder)
/*       */     {
/* 32083 */       super(builder);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/* 32240 */       this.memoizedIsInitialized = -1; } private DTCCode() { this.memoizedIsInitialized = -1; this.dTCType_ = 0; } protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) { return new DTCCode(); } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private DTCCode(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this(); if (extensionRegistry == null) throw new NullPointerException();  UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { int rawValue, tag = input.readTag(); switch (tag) { case 0: done = true; continue;case 8: rawValue = input.readEnum(); this.dTCType_ = rawValue; continue;case 16: this.code_ = input.readUInt32(); continue;case 24: this.reason_ = input.readUInt32(); continue;case 32: this.occurrenceCount_ = input.readUInt32(); continue;case 40: this.source_ = input.readUInt32(); continue; }  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this); } finally { this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_DTCCode_descriptor; } protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() { return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_DTCCode_fieldAccessorTable.ensureFieldAccessorsInitialized(DTCCode.class, Builder.class); } public int getDTCTypeValue() { return this.dTCType_; } public DolphinMessages.DTCType getDTCType() { DolphinMessages.DTCType result = DolphinMessages.DTCType.valueOf(this.dTCType_); return (result == null) ? DolphinMessages.DTCType.UNRECOGNIZED : result; } public int getCode() { return this.code_; } public int getReason() { return this.reason_; }
/*       */     public int getOccurrenceCount() { return this.occurrenceCount_; }
/*       */     public int getSource() { return this.source_; }
/* 32243 */     public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized;
/* 32244 */       if (isInitialized == 1) return true; 
/* 32245 */       if (isInitialized == 0) return false;
/*       */       
/* 32247 */       this.memoizedIsInitialized = 1;
/* 32248 */       return true; }
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/* 32254 */       if (this.dTCType_ != DolphinMessages.DTCType.OBD_STORED_DTC.getNumber()) {
/* 32255 */         output.writeEnum(1, this.dTCType_);
/*       */       }
/* 32257 */       if (this.code_ != 0) {
/* 32258 */         output.writeUInt32(2, this.code_);
/*       */       }
/* 32260 */       if (this.reason_ != 0) {
/* 32261 */         output.writeUInt32(3, this.reason_);
/*       */       }
/* 32263 */       if (this.occurrenceCount_ != 0) {
/* 32264 */         output.writeUInt32(4, this.occurrenceCount_);
/*       */       }
/* 32266 */       if (this.source_ != 0) {
/* 32267 */         output.writeUInt32(5, this.source_);
/*       */       }
/* 32269 */       this.unknownFields.writeTo(output);
/*       */     }
/*       */ 
/*       */     
/*       */     public int getSerializedSize() {
/* 32274 */       int size = this.memoizedSize;
/* 32275 */       if (size != -1) return size;
/*       */       
/* 32277 */       size = 0;
/* 32278 */       if (this.dTCType_ != DolphinMessages.DTCType.OBD_STORED_DTC.getNumber()) {
/* 32279 */         size += 
/* 32280 */           CodedOutputStream.computeEnumSize(1, this.dTCType_);
/*       */       }
/* 32282 */       if (this.code_ != 0) {
/* 32283 */         size += 
/* 32284 */           CodedOutputStream.computeUInt32Size(2, this.code_);
/*       */       }
/* 32286 */       if (this.reason_ != 0) {
/* 32287 */         size += 
/* 32288 */           CodedOutputStream.computeUInt32Size(3, this.reason_);
/*       */       }
/* 32290 */       if (this.occurrenceCount_ != 0) {
/* 32291 */         size += 
/* 32292 */           CodedOutputStream.computeUInt32Size(4, this.occurrenceCount_);
/*       */       }
/* 32294 */       if (this.source_ != 0) {
/* 32295 */         size += 
/* 32296 */           CodedOutputStream.computeUInt32Size(5, this.source_);
/*       */       }
/* 32298 */       size += this.unknownFields.getSerializedSize();
/* 32299 */       this.memoizedSize = size;
/* 32300 */       return size;
/*       */     }
/*       */ 
/*       */     
/*       */     public boolean equals(Object obj) {
/* 32305 */       if (obj == this) {
/* 32306 */         return true;
/*       */       }
/* 32308 */       if (!(obj instanceof DTCCode)) {
/* 32309 */         return super.equals(obj);
/*       */       }
/* 32311 */       DTCCode other = (DTCCode)obj;
/*       */       
/* 32313 */       if (this.dTCType_ != other.dTCType_) return false; 
/* 32314 */       if (getCode() != other
/* 32315 */         .getCode()) return false; 
/* 32316 */       if (getReason() != other
/* 32317 */         .getReason()) return false; 
/* 32318 */       if (getOccurrenceCount() != other
/* 32319 */         .getOccurrenceCount()) return false; 
/* 32320 */       if (getSource() != other
/* 32321 */         .getSource()) return false; 
/* 32322 */       if (!this.unknownFields.equals(other.unknownFields)) return false; 
/* 32323 */       return true;
/*       */     }
/*       */ 
/*       */     
/*       */     public int hashCode() {
/* 32328 */       if (this.memoizedHashCode != 0) {
/* 32329 */         return this.memoizedHashCode;
/*       */       }
/* 32331 */       int hash = 41;
/* 32332 */       hash = 19 * hash + getDescriptor().hashCode();
/* 32333 */       hash = 37 * hash + 1;
/* 32334 */       hash = 53 * hash + this.dTCType_;
/* 32335 */       hash = 37 * hash + 2;
/* 32336 */       hash = 53 * hash + getCode();
/* 32337 */       hash = 37 * hash + 3;
/* 32338 */       hash = 53 * hash + getReason();
/* 32339 */       hash = 37 * hash + 4;
/* 32340 */       hash = 53 * hash + getOccurrenceCount();
/* 32341 */       hash = 37 * hash + 5;
/* 32342 */       hash = 53 * hash + getSource();
/* 32343 */       hash = 29 * hash + this.unknownFields.hashCode();
/* 32344 */       this.memoizedHashCode = hash;
/* 32345 */       return hash;
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static DTCCode parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
/* 32351 */       return (DTCCode)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static DTCCode parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 32357 */       return (DTCCode)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static DTCCode parseFrom(ByteString data) throws InvalidProtocolBufferException {
/* 32362 */       return (DTCCode)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static DTCCode parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 32368 */       return (DTCCode)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static DTCCode parseFrom(byte[] data) throws InvalidProtocolBufferException {
/* 32372 */       return (DTCCode)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static DTCCode parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 32378 */       return (DTCCode)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static DTCCode parseFrom(InputStream input) throws IOException {
/* 32382 */       return 
/* 32383 */         (DTCCode)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static DTCCode parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 32389 */       return 
/* 32390 */         (DTCCode)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static DTCCode parseDelimitedFrom(InputStream input) throws IOException {
/* 32394 */       return 
/* 32395 */         (DTCCode)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static DTCCode parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 32401 */       return 
/* 32402 */         (DTCCode)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static DTCCode parseFrom(CodedInputStream input) throws IOException {
/* 32407 */       return 
/* 32408 */         (DTCCode)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static DTCCode parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 32414 */       return 
/* 32415 */         (DTCCode)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public Builder newBuilderForType() {
/* 32419 */       return newBuilder();
/*       */     } public static Builder newBuilder() {
/* 32421 */       return DEFAULT_INSTANCE.toBuilder();
/*       */     }
/*       */     public static Builder newBuilder(DTCCode prototype) {
/* 32424 */       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
/*       */     }
/*       */     
/*       */     public Builder toBuilder() {
/* 32428 */       return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder())
/* 32429 */         .mergeFrom(this);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
/* 32435 */       Builder builder = new Builder(parent);
/* 32436 */       return builder;
/*       */     }
/*       */     
/*       */     public static final class Builder extends GeneratedMessageV3.Builder<Builder> implements DolphinMessages.DTCCodeOrBuilder {
/*       */       private int dTCType_;
/*       */       private int code_;
/*       */       private int reason_;
/*       */       private int occurrenceCount_;
/*       */       private int source_;
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/* 32447 */         return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_DTCCode_descriptor;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
/* 32453 */         return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_DTCCode_fieldAccessorTable
/* 32454 */           .ensureFieldAccessorsInitialized(DolphinMessages.DTCCode.class, Builder.class);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private Builder()
/*       */       {
/* 32609 */         this.dTCType_ = 0; maybeForceBuilderInitialization(); } private Builder(GeneratedMessageV3.BuilderParent parent) { super(parent); this.dTCType_ = 0; maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (DolphinMessages.DTCCode.alwaysUseFieldBuilders); } public Builder clear() { super.clear(); this.dTCType_ = 0; this.code_ = 0; this.reason_ = 0; this.occurrenceCount_ = 0; this.source_ = 0; return this; } public Descriptors.Descriptor getDescriptorForType() { return DolphinMessages.internal_static_org_traccar_protobuf_dolphin_Messages_DTCCode_descriptor; } public DolphinMessages.DTCCode getDefaultInstanceForType() { return DolphinMessages.DTCCode.getDefaultInstance(); } public DolphinMessages.DTCCode build() { DolphinMessages.DTCCode result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public DolphinMessages.DTCCode buildPartial() { DolphinMessages.DTCCode result = new DolphinMessages.DTCCode(this); result.dTCType_ = this.dTCType_; result.code_ = this.code_; result.reason_ = this.reason_; result.occurrenceCount_ = this.occurrenceCount_; result.source_ = this.source_; onBuilt(); return result; } public Builder clone() { return (Builder)super.clone(); } public Builder setField(Descriptors.FieldDescriptor field, Object value) { return (Builder)super.setField(field, value); } public Builder clearField(Descriptors.FieldDescriptor field) { return (Builder)super.clearField(field); } public Builder clearOneof(Descriptors.OneofDescriptor oneof) { return (Builder)super.clearOneof(oneof); } public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) { return (Builder)super.setRepeatedField(field, index, value); }
/*       */       public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) { return (Builder)super.addRepeatedField(field, value); }
/*       */       public Builder mergeFrom(Message other) { if (other instanceof DolphinMessages.DTCCode) return mergeFrom((DolphinMessages.DTCCode)other);  super.mergeFrom(other); return this; }
/*       */       public Builder mergeFrom(DolphinMessages.DTCCode other) { if (other == DolphinMessages.DTCCode.getDefaultInstance()) return this;  if (other.dTCType_ != 0) setDTCTypeValue(other.getDTCTypeValue());  if (other.getCode() != 0) setCode(other.getCode());  if (other.getReason() != 0) setReason(other.getReason());  if (other.getOccurrenceCount() != 0) setOccurrenceCount(other.getOccurrenceCount());  if (other.getSource() != 0) setSource(other.getSource());  mergeUnknownFields(other.unknownFields); onChanged(); return this; }
/*       */       public final boolean isInitialized() { return true; }
/*       */       public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { DolphinMessages.DTCCode parsedMessage = null; try { parsedMessage = (DolphinMessages.DTCCode)DolphinMessages.DTCCode.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (DolphinMessages.DTCCode)e.getUnfinishedMessage(); throw e.unwrapIOException(); } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; }
/* 32615 */       public int getDTCTypeValue() { return this.dTCType_; }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setDTCTypeValue(int value) {
/* 32624 */         this.dTCType_ = value;
/* 32625 */         onChanged();
/* 32626 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinMessages.DTCType getDTCType() {
/* 32635 */         DolphinMessages.DTCType result = DolphinMessages.DTCType.valueOf(this.dTCType_);
/* 32636 */         return (result == null) ? DolphinMessages.DTCType.UNRECOGNIZED : result;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setDTCType(DolphinMessages.DTCType value) {
/* 32644 */         if (value == null) {
/* 32645 */           throw new NullPointerException();
/*       */         }
/*       */         
/* 32648 */         this.dTCType_ = value.getNumber();
/* 32649 */         onChanged();
/* 32650 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearDTCType() {
/* 32658 */         this.dTCType_ = 0;
/* 32659 */         onChanged();
/* 32660 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getCode() {
/* 32670 */         return this.code_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setCode(int value) {
/* 32679 */         this.code_ = value;
/* 32680 */         onChanged();
/* 32681 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearCode() {
/* 32689 */         this.code_ = 0;
/* 32690 */         onChanged();
/* 32691 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getReason() {
/* 32701 */         return this.reason_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setReason(int value) {
/* 32710 */         this.reason_ = value;
/* 32711 */         onChanged();
/* 32712 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearReason() {
/* 32720 */         this.reason_ = 0;
/* 32721 */         onChanged();
/* 32722 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getOccurrenceCount() {
/* 32732 */         return this.occurrenceCount_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setOccurrenceCount(int value) {
/* 32741 */         this.occurrenceCount_ = value;
/* 32742 */         onChanged();
/* 32743 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearOccurrenceCount() {
/* 32751 */         this.occurrenceCount_ = 0;
/* 32752 */         onChanged();
/* 32753 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getSource() {
/* 32763 */         return this.source_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setSource(int value) {
/* 32772 */         this.source_ = value;
/* 32773 */         onChanged();
/* 32774 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearSource() {
/* 32782 */         this.source_ = 0;
/* 32783 */         onChanged();
/* 32784 */         return this;
/*       */       }
/*       */ 
/*       */       
/*       */       public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
/* 32789 */         return (Builder)super.setUnknownFields(unknownFields);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
/* 32795 */         return (Builder)super.mergeUnknownFields(unknownFields);
/*       */       }
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 32805 */     private static final DTCCode DEFAULT_INSTANCE = new DTCCode();
/*       */ 
/*       */     
/*       */     public static DTCCode getDefaultInstance() {
/* 32809 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */ 
/*       */     
/* 32813 */     private static final Parser<DTCCode> PARSER = (Parser<DTCCode>)new AbstractParser<DTCCode>()
/*       */       {
/*       */ 
/*       */         
/*       */         public DolphinMessages.DTCCode parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException
/*       */         {
/* 32819 */           return new DolphinMessages.DTCCode(input, extensionRegistry);
/*       */         }
/*       */       };
/*       */     
/*       */     public static Parser<DTCCode> parser() {
/* 32824 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public Parser<DTCCode> getParserForType() {
/* 32829 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public DTCCode getDefaultInstanceForType() {
/* 32834 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public static Descriptors.FileDescriptor getDescriptor() {
/* 33002 */     return descriptor;
/*       */   }
/*       */ 
/*       */   
/*       */   static {
/* 33007 */     String[] descriptorData = { "\n\025DolphinMessages.proto\022%org.traccar.protobuf.dolphin.Messages\032\023DolphinConfig.proto\"S\n\006IOData\022:\n\002ID\030\001 \001(\0162..org.traccar.protobuf.dolphin.Config.AlarmType\022\r\n\005Value\030\002 \001(\004\"¯\002\n\tDataPoint\022\020\n\bLatitude\030\001 \001(\002\022\021\n\tLongitude\030\002 \001(\002\022\020\n\bAltitude\030\003 \001(\002\022\022\n\nSatellites\030\004 \001(\r\022\r\n\005Speed\030\005 \001(\002\022\017\n\007Bearing\030\006 \001(\002\022\f\n\004HDOP\030\007 \001(\r\022\021\n\tTimestamp\030\b \001(\007\022=\n\005Alarm\030\t \001(\0162..org.traccar.protobuf.dolphin.Config.AlarmType\022A\n\tIOList_ID\030\013 \003(\0162..org.traccar.protobuf.dolphin.Config.AlarmType\022\024\n\fIOList_Value\030\f \003(\004\"S\n\017DataPackRequest\022@\n\006Points\030\001 \003(\01320.org.traccar.protobuf.dolphin.Messages.DataPoint\"a\n\020DataPackResponse\022M\n\bResponse\030\001 \001(\0162;.org.traccar.protobuf.dolphin.Messages.DataPackResponseCode\"ç\r\n\nDeviceInfo\022\f\n\004Name\030\001 \001(\t\022\f\n\004IMEI\030\002 \001(\006\022\027\n\017FirmwareVersion\030\003 \001(\t\022\024\n\fRTCTimestamp\030\n \001(\007\022\032\n\022LastStartTimestamp\030\013 \001(\007\022\016\n\006UpTime\030\f \001(\r\022\023\n\013TotalUpTime\030\r \001(\r\022F\n\013GNSS_Status\030\024 \001(\01621.org.traccar.protobuf.dolphin.Messages.GNSSStatus\022\020\n\bGNSS_Fix\030\025 \001(\b\022\033\n\023GNSS_TimeToFirstFix\030\026 \001(\r\022\032\n\022GNSS_TimeToLastFix\030\027 \001(\r\022\024\n\fGNSS_Packets\030\031 \001(\r\022\025\n\rGNSS_Latitude\030\032 \001(\002\022\026\n\016GNSS_Longitude\030\033 \001(\002\022\025\n\rGNSS_Altitude\030\034 \001(\r\022\022\n\nGNSS_Speed\030\035 \001(\r\022\024\n\fGNSS_Bearing\030\036 \001(\r\022\021\n\tGNSS_HDOP\030\037 \001(\r\022\021\n\tGNSS_PDOP\030  \001(\r\022\026\n\016GNSS_SatsInUse\030! \001(\r\022\024\n\fGNSS_GPSSats\030\" \001(\r\022\030\n\020GNSS_GLONASSSats\030# \001(\r\022\030\n\020GNSS_GalileoSats\030$ \001(\r\022\027\n\017GNSS_BeidouSats\030% \001(\r\022U\n\022GNSS_JammingStatus\030& \001(\01629.org.traccar.protobuf.dolphin.Messages.GNSS_JammingStatus\022K\n\017GSM_ModemStatus\0302 \001(\01622.org.traccar.protobuf.dolphin.Messages.ModemStatus\022G\n\rGSM_SIMStatus\0304 \001(\01620.org.traccar.protobuf.dolphin.Messages.SIMStatus\022\026\n\016GSM_GPRSStatus\0305 \001(\b\022\030\n\020GSM_OperatorName\0306 \001(\t\022\030\n\020GSM_OperatorCode\0307 \001(\r\022\034\n\024GSM_LocationAreaCode\0308 \001(\r\022\022\n\nGSM_CellID\0309 \001(\r\022\032\n\022GSM_SignalStrength\030: \001(\r\022\023\n\013GSM_Jamming\030; \001(\b\022\035\n\025GSM_Records_SentCount\030< \001(\r\022 \n\030GSM_Records_LastSentTime\030= \001(\r\022*\n\"GSM_Records_LastServerResponseTime\030> \001(\r\022\031\n\021GSM_Records_Count\030? \001(\r\022\031\n\021GSM_GPRS_SentData\030A \001(\r\022\035\n\025GSM_GPRS_ReceivedData\030B \001(\r\022\024\n\fGSM_SMS_Sent\030E \001(\r\022\030\n\020GSM_SMS_Received\030F \001(\r\022\030\n\020GSM_Socket_State\030K \001(\b\022P\n\020Bluetooth_Status\030P \001(\01626.org.traccar.protobuf.dolphin.Messages.BluetoothStatus\022\026\n\016Bluetooth_Name\030Q \001(\t\022\025\n\rBluetooth_MAC\030R \001(\t\022(\n Bluetooth_DataLink_ConnectStatus\030S \001(\b\022\037\n\027Bluetooth_DataLink_Name\030T \001(\t\022\036\n\026Bluetooth_DataLink_MAC\030U \001(\t\022c\n\032Bluetooth_ExtDevice_Status\030V \001(\0162?.org.traccar.protobuf.dolphin.Messages.BluetoothExtDeviceStatus\022 \n\030Bluetooth_ExtDevice_Name\030W \001(\t\022\037\n\027Bluetooth_ExtDevice_MAC\030X \001(\t\022A\n\tIOList_ID\030d \003(\0162..org.traccar.protobuf.dolphin.Config.AlarmType\022\024\n\fIOList_Value\030e \003(\004\"h\n\020ConfigSetRequest\022\020\n\bPassword\030\001 \001(\t\022B\n\rConfiguration\030\002 \001(\0132+.org.traccar.protobuf.dolphin.Config.Config\"`\n\021ConfigSetResponse\022K\n\bResponse\030\001 \001(\01629.org.traccar.protobuf.dolphin.Messages.ConfigResponseCode\"$\n\020ConfigGetRequest\022\020\n\bPassword\030\001 \001(\t\"\001\n\021ConfigGetResponse\022K\n\bResponse\030\001 \001(\01629.org.traccar.protobuf.dolphin.Messages.ConfigResponseCode\0229\n\004Data\030\002 \001(\0132+.org.traccar.protobuf.dolphin.Config.Config\"j\n\021ConfigDiffRequest\022\020\n\bPassword\030\001 \001(\t\022C\n\nConfigDiff\030\002 \001(\0132/.org.traccar.protobuf.dolphin.Config.ConfigDiff\"À\001\n\032FirmwareUpdateInfo_Request\022\017\n\007Channel\030\001 \001(\t\022\027\n\017HardwareVersion\030\002 \001(\r\022\033\n\023Device_Version_Name\030\n \001(\t\022\034\n\024Device_Version_Major\030\013 \001(\r\022\034\n\024Device_Version_Minor\030\f \001(\r\022\037\n\027Device_Version_Revision\030\r \001(\r\"¢\001\n\033FirmwareUpdateInfo_Response\022\024\n\fVersion_Name\030\001 \001(\t\022\025\n\rVersion_Major\030\002 \001(\r\022\025\n\rVersion_Minor\030\003 \001(\r\022\030\n\020Version_Revision\030\004 \001(\r\022\022\n\nFirmwareID\030\005 \001(\r\022\021\n\tTotalSize\030\006 \001(\r\"ï\001\n\022FirmwareUpdateResp\022\022\n\nFirmwareID\030\001 \001(\r\022C\n\bResponse\030\002 \001(\01621.org.traccar.protobuf.dolphin.Messages.FURespCode\022\035\n\025Firmware_Version_Name\030\003 \001(\t\022\036\n\026Firmware_Version_Major\030\004 \001(\r\022\036\n\026Firmware_Version_Minor\030\005 \001(\r\022!\n\031Firmware_Version_Revision\030\006 \001(\r\"4\n\013FUStartData\022\022\n\nFirmwareID\030\001 \001(\r\022\021\n\tTotalSize\030\002 \001(\r\"?\n\rFUPackRequest\022\022\n\nFirmwareID\030\001 \001(\r\022\r\n\005Start\030\002 \001(\r\022\013\n\003End\030\003 \001(\r\"\001\n\bFUPacket\022\022\n\nFirmwareID\030\001 \001(\r\022C\n\bResponse\030\002 \001(\01621.org.traccar.protobuf.dolphin.Messages.FURespCode\022\r\n\005Start\030\003 \001(\r\022\013\n\003End\030\004 \001(\r\022\f\n\004Data\030\005 \001(\f\"t\n\nLogMessage\022\025\n\rUnixTimestamp\030\001 \001(\007\022>\n\005Level\030\002 \001(\0162/.org.traccar.protobuf.dolphin.Messages.LogLevel\022\017\n\007Message\030\003 \001(\t\"N\n\007LogPack\022C\n\bMessages\030\001 \003(\01321.org.traccar.protobuf.dolphin.Messages.LogMessage\"J\n\bLogStart\022>\n\005Level\030\001 \001(\0162/.org.traccar.protobuf.dolphin.Messages.LogLevel\"6\n\007FMSData\022\023\n\013PGN_Id_List\030\001 \003(\r\022\026\n\016PGN_Value_List\030\002 \003(\004\"#\n\023AuthenticateRequest\022\f\n\004Code\030\001 \001(\t\"e\n\024AuthenticateResponse\022M\n\004Code\030\001 \001(\0162?.org.traccar.protobuf.dolphin.Messages.AuthenticateResponseCode\"!\n\016CommandRequest\022\017\n\007Command\030\001 \001(\t\"#\n\017CommandResponse\022\020\n\bResponse\030\001 \001(\t\"i\n\bUSSDData\022\n\n\002ID\030\001 \001(\r\022\020\n\bUSSDCode\030\002 \001(\t\022\024\n\fUSSDResponse\030\003 \001(\t\022\021\n\tTimestamp\030\004 \001(\r\022\026\n\016ResponseStatus\030\005 \001(\b\"D\n\016CrashAccelData\022\021\n\tTimestamp\030\001 \001(\004\022\t\n\001X\030\002 \001(\021\022\t\n\001Y\030\003 \001(\021\022\t\n\001Z\030\004 \001(\021\"¼\001\n\tCrashData\022\021\n\tTimestamp\030\001 \001(\r\022\r\n\005Level\030\002 \001(\r\022H\n\tAccelData\030\003 \003(\01325.org.traccar.protobuf.dolphin.Messages.CrashAccelData\022C\n\tPointData\030\004 \003(\01320.org.traccar.protobuf.dolphin.Messages.DataPoint\"_\n\021CrashDataResponse\022J\n\004Code\030\001 \001(\0162<.org.traccar.protobuf.dolphin.Messages.CrashDataResponseCode\"^\n\013DTCResposne\022O\n\017DTCResposneCode\030\001 \001(\01626.org.traccar.protobuf.dolphin.Messages.DTCResposneCode\"R\n\nDTCRequest\022D\n\nDTCRecords\030\001 \003(\01320.org.traccar.protobuf.dolphin.Messages.DTCRecord\"Ô\002\n\tDTCRecord\022@\n\bDTCCodes\030\001 \003(\0132..org.traccar.protobuf.dolphin.Messages.DTCCode\022\021\n\tTimestamp\030\002 \001(\r\022$\n\034OBD_MalfunctionIndicatorLamp\030\003 \001(\b\022\027\n\017FMS_ProtectLamp\030\004 \001(\r\022\034\n\024FMS_AmberWarningLamp\030\005 \001(\r\022\027\n\017FMS_RedStopLamp\030\006 \001(\r\022$\n\034FMS_MalfunctionIndicatorLamp\030\007 \001(\r\022\024\n\fFMS_SAELamp1\030\b \001(\r\022\024\n\fFMS_SAELamp2\030\t \001(\r\022\024\n\fFMS_SAELamp3\030\n \001(\r\022\024\n\fFMS_SAELamp4\030\013 \001(\r\"\001\n\007DTCCode\022?\n\007DTCType\030\001 \001(\0162..org.traccar.protobuf.dolphin.Messages.DTCType\022\f\n\004Code\030\002 \001(\r\022\016\n\006Reason\030\003 \001(\r\022\027\n\017OccurrenceCount\030\004 \001(\r\022\016\n\006Source\030\005 \001(\r*¸\n\n\013MessageType\022\013\n\007Timeout\020\000\022\024\n\020DataPack_Request\020\001\022\025\n\021DataPack_Response\020\002\022\032\n\026Authentication_Request\020\007\022\033\n\027Authentication_Response\020\b\022\032\n\026OnlinePosition_Request\020\t\022\026\n\022Config_Set_Request\020\n\022\027\n\023Config_Set_Response\020\013\022\026\n\022Config_Get_Request\020\f\022\027\n\023Config_Get_Response\020\r\022\027\n\023Config_Diff_Request\020\016\022\030\n\024Config_Diff_Response\020\017\022$\n Config_SSLSetCertificate_Request\020\020\022%\n!Config_SSLSetCertificate_Response\020\021\022\037\n\033Config_SSLGetStatus_Request\020\022\022 \n\034Config_SSLGetStatus_Response\020\023\022\031\n\025Firmware_Info_Request\020\024\022\032\n\026Firmware_Info_Response\020\025\022!\n\035Firmware_Update_Start_Request\020\026\022\"\n\036Firmware_Update_Start_Response\020\027\022\034\n\030Firmware_GetPack_Request\020\030\022\035\n\031Firmware_GetPack_Response\020\031\022\031\n\025Firmware_Update_State\020\032\022\b\n\004Ping\020\036\022\b\n\004Pong\020\037\022\r\n\tLog_Start\020 \022\013\n\007Log_End\020!\022\f\n\bLog_Pack\020\"\022\026\n\022DeviceInfo_Request\020#\022\027\n\023DeviceInfo_Response\020$\022\027\n\023Temperature_Request\020(\022\030\n\024Temperature_Response\020)\022\026\n\022TiltStatus_Request\020*\022\023\n\017TiltStatus_Data\020+\022\023\n\017Command_Request\020<\022\024\n\020Command_Response\020=\022\024\n\020USSDData_Request\020D\022\031\n\025ExpBoard_Data_Request\020F\022\032\n\026ExpBoard_Data_Response\020G\022\037\n\033ExpBoard_SetDigital_Request\020H\022 \n\034ExpBoard_SetDigital_Response\020I\022\025\n\021FMS_DataLog_Start\020P\022\023\n\017FMS_DataLog_End\020Q\022\024\n\020FMS_DataLog_Data\020R\022\026\n\022Crash_Data_Request\020Z\022\027\n\023Crash_Data_Response\020[\022 \n\034SIPAAD_SSL_GetStatus_Request\020d\022!\n\035SIPAAD_SSL_GetStatus_Response\020e\022-\n)DiagnosticsTroubleCodes_SaveCodes_Request\020n\022.\n*DiagnosticsTroubleCodes_SaveCodes_Response\020o*2\n\fMessageFlags\022\r\n\tFlag_None\020\000\022\023\n\017Flag_Compressed\020\001*s\n\024DataPackResponseCode\022\024\n\020DataPack_Timeout\020\000\022\017\n\013DataPack_OK\020\001\022\031\n\025DataPack_UnknownError\020\002\022\031\n\025DataPack_Decode_Error\020\003*M\n\nGNSSStatus\022\f\n\bGNSS_Off\020\000\022\021\n\rGNSS_NotFixed\020\001\022\016\n\nGNSS_Fixed\020\002\022\016\n\nGNSS_Sleep\020\003*z\n\022GNSS_JammingStatus\022\035\n\031GNSS_UnknownJammingStatus\020\000\022\022\n\016GNSS_NoJamming\020\001\022\027\n\023GNSS_JammingWarning\020\002\022\030\n\024GNSS_JammingCritical\020\003*\001\n\013ModemStatus\022\023\n\017ModemStatus_Off\020\000\022\035\n\031ModemStatus_NotRegistered\020\001\022\031\n\025ModemStatus_Searching\020\002\022\032\n\026ModemStatus_Registered\020\003\022\027\n\023ModemStatus_Roaming\020\004*Ò\001\n\tSIMStatus\022\023\n\017SIM_NotInserted\020\000\022\r\n\tSIM_Ready\020\001\022\017\n\013SIM_PIN_REQ\020\002\022\017\n\013SIM_PUK_REQ\020\003\022\022\n\016SIM_PH_PIN_REQ\020\004\022\022\n\016SIM_PH_PUK_REQ\020\005\022\020\n\fSIM_PIN2_REQ\020\006\022\020\n\fSIM_PUK2_REQ\020\007\022\f\n\bSIM_Busy\020\b\022\020\n\fSIM_NotReady\020\t\022\023\n\017SIM_Unspecified\020\n*@\n\017BluetoothStatus\022\n\n\006BL_Off\020\000\022\017\n\013BL_OnHidden\020\001\022\020\n\fBL_OnVisible\020\002*\001\n\030BluetoothExtDeviceStatus\022\016\n\nBLExt_None\020\000\022\022\n\016BLExt_Scanning\020\001\022\021\n\rBLExt_Pairing\020\002\022\025\n\021BLExt_WaitForPair\020\003\022\024\n\020BLExt_Connecting\020\004\022\023\n\017BLExt_Connected\020\005*h\n\022ConfigResponseCode\022\006\n\002OK\020\000\022\021\n\rUnknown_Error\020\001\022\022\n\016Protocol_Error\020\002\022\017\n\013Store_Error\020\003\022\022\n\016Wrong_Password\020\004*°\002\n\nFURespCode\022\013\n\007FU_NONE\020\000\022\026\n\022FU_UPDATE_START_OK\020\001\022\031\n\025FU_UPDATE_START_ERROR\020\002\022\036\n\032FU_UPDATE_START_ERROR_SIZE\020\003\022\021\n\rFU_GETPACK_OK\020\004\022\024\n\020FU_GETPACK_ERROR\020\005\022\036\n\032FU_UPDATE_STATE_INSTALLING\020\006\022\034\n\030FU_UPDATE_STATE_FINISHED\020\007\022\031\n\025FU_UPDATE_STATE_ERROR\020\b\022!\n\035FU_UPDATE_STATE_ERROR_INVALID\020\t\022\035\n\031FU_UPDATE_STATE_ERROR_CRC\020\n*\001\n\bLogLevel\022\022\n\016LOG_LEVEL_NONE\020\000\022\023\n\017LOG_LEVEL_FATAL\020\001\022\023\n\017LOG_LEVEL_ERROR\020\002\022\022\n\016LOG_LEVEL_WARN\020\004\022\022\n\016LOG_LEVEL_INFO\020\b\022\023\n\017LOG_LEVEL_DEBUG\020\020*¬\001\n\017SystemResetType\022\027\n\023SystemReset_PowerOn\020\000\022\025\n\021SystemReset_Sleep\020\001\022\031\n\025SystemReset_HardFault\020\002\022\030\n\024SystemReset_WatchDog\020\003\022\036\n\032SystemReset_FirmwareUpdate\020\004\022\024\n\020SystemReset_User\020\005*L\n\030AuthenticateResponseCode\022\030\n\024Authenticate_Invalid\020\000\022\026\n\022Authenticate_Valid\020\001*>\n\025CrashDataResponseCode\022\023\n\017CrashData_Error\020\000\022\020\n\fCrashData_OK\020\001*U\n\017DTCResposneCode\022\025\n\021DTC_RESPOSNE_NONE\020\000\022\026\n\022DTC_RESPOSNE_ERROR\020\001\022\023\n\017DTC_RESPOSNE_OK\020\002*f\n\007DTCType\022\022\n\016OBD_STORED_DTC\020\000\022\023\n\017OBD_PENDING_DTC\020\001\022\025\n\021OBD_PERMANENT_DTC\020\002\022\013\n\007FMS_DTC\020\003\022\016\n\nSCANIA_DTC\020\004B\017Z\rdolphindeviceb\006proto3" };
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 33232 */     descriptor = Descriptors.FileDescriptor.internalBuildGeneratedFileFrom(descriptorData, new Descriptors.FileDescriptor[] {
/*       */           
/* 33234 */           DolphinConfig.getDescriptor()
/*       */         });
/*       */     
/* 33237 */     internal_static_org_traccar_protobuf_dolphin_Messages_IOData_descriptor = getDescriptor().getMessageTypes().get(0);
/* 33238 */     internal_static_org_traccar_protobuf_dolphin_Messages_IOData_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_org_traccar_protobuf_dolphin_Messages_IOData_descriptor, new String[] { "ID", "Value" });
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 33243 */     internal_static_org_traccar_protobuf_dolphin_Messages_DataPoint_descriptor = getDescriptor().getMessageTypes().get(1);
/* 33244 */     internal_static_org_traccar_protobuf_dolphin_Messages_DataPoint_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_org_traccar_protobuf_dolphin_Messages_DataPoint_descriptor, new String[] { "Latitude", "Longitude", "Altitude", "Satellites", "Speed", "Bearing", "HDOP", "Timestamp", "Alarm", "IOListID", "IOListValue" });
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 33249 */     internal_static_org_traccar_protobuf_dolphin_Messages_DataPackRequest_descriptor = getDescriptor().getMessageTypes().get(2);
/* 33250 */     internal_static_org_traccar_protobuf_dolphin_Messages_DataPackRequest_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_org_traccar_protobuf_dolphin_Messages_DataPackRequest_descriptor, new String[] { "Points" });
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 33255 */     internal_static_org_traccar_protobuf_dolphin_Messages_DataPackResponse_descriptor = getDescriptor().getMessageTypes().get(3);
/* 33256 */     internal_static_org_traccar_protobuf_dolphin_Messages_DataPackResponse_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_org_traccar_protobuf_dolphin_Messages_DataPackResponse_descriptor, new String[] { "Response" });
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 33261 */     internal_static_org_traccar_protobuf_dolphin_Messages_DeviceInfo_descriptor = getDescriptor().getMessageTypes().get(4);
/* 33262 */     internal_static_org_traccar_protobuf_dolphin_Messages_DeviceInfo_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_org_traccar_protobuf_dolphin_Messages_DeviceInfo_descriptor, new String[] { "Name", "IMEI", "FirmwareVersion", "RTCTimestamp", "LastStartTimestamp", "UpTime", "TotalUpTime", "GNSSStatus", "GNSSFix", "GNSSTimeToFirstFix", "GNSSTimeToLastFix", "GNSSPackets", "GNSSLatitude", "GNSSLongitude", "GNSSAltitude", "GNSSSpeed", "GNSSBearing", "GNSSHDOP", "GNSSPDOP", "GNSSSatsInUse", "GNSSGPSSats", "GNSSGLONASSSats", "GNSSGalileoSats", "GNSSBeidouSats", "GNSSJammingStatus", "GSMModemStatus", "GSMSIMStatus", "GSMGPRSStatus", "GSMOperatorName", "GSMOperatorCode", "GSMLocationAreaCode", "GSMCellID", "GSMSignalStrength", "GSMJamming", "GSMRecordsSentCount", "GSMRecordsLastSentTime", "GSMRecordsLastServerResponseTime", "GSMRecordsCount", "GSMGPRSSentData", "GSMGPRSReceivedData", "GSMSMSSent", "GSMSMSReceived", "GSMSocketState", "BluetoothStatus", "BluetoothName", "BluetoothMAC", "BluetoothDataLinkConnectStatus", "BluetoothDataLinkName", "BluetoothDataLinkMAC", "BluetoothExtDeviceStatus", "BluetoothExtDeviceName", "BluetoothExtDeviceMAC", "IOListID", "IOListValue" });
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 33267 */     internal_static_org_traccar_protobuf_dolphin_Messages_ConfigSetRequest_descriptor = getDescriptor().getMessageTypes().get(5);
/* 33268 */     internal_static_org_traccar_protobuf_dolphin_Messages_ConfigSetRequest_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_org_traccar_protobuf_dolphin_Messages_ConfigSetRequest_descriptor, new String[] { "Password", "Configuration" });
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 33273 */     internal_static_org_traccar_protobuf_dolphin_Messages_ConfigSetResponse_descriptor = getDescriptor().getMessageTypes().get(6);
/* 33274 */     internal_static_org_traccar_protobuf_dolphin_Messages_ConfigSetResponse_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_org_traccar_protobuf_dolphin_Messages_ConfigSetResponse_descriptor, new String[] { "Response" });
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 33279 */     internal_static_org_traccar_protobuf_dolphin_Messages_ConfigGetRequest_descriptor = getDescriptor().getMessageTypes().get(7);
/* 33280 */     internal_static_org_traccar_protobuf_dolphin_Messages_ConfigGetRequest_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_org_traccar_protobuf_dolphin_Messages_ConfigGetRequest_descriptor, new String[] { "Password" });
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 33285 */     internal_static_org_traccar_protobuf_dolphin_Messages_ConfigGetResponse_descriptor = getDescriptor().getMessageTypes().get(8);
/* 33286 */     internal_static_org_traccar_protobuf_dolphin_Messages_ConfigGetResponse_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_org_traccar_protobuf_dolphin_Messages_ConfigGetResponse_descriptor, new String[] { "Response", "Data" });
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 33291 */     internal_static_org_traccar_protobuf_dolphin_Messages_ConfigDiffRequest_descriptor = getDescriptor().getMessageTypes().get(9);
/* 33292 */     internal_static_org_traccar_protobuf_dolphin_Messages_ConfigDiffRequest_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_org_traccar_protobuf_dolphin_Messages_ConfigDiffRequest_descriptor, new String[] { "Password", "ConfigDiff" });
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 33297 */     internal_static_org_traccar_protobuf_dolphin_Messages_FirmwareUpdateInfo_Request_descriptor = getDescriptor().getMessageTypes().get(10);
/* 33298 */     internal_static_org_traccar_protobuf_dolphin_Messages_FirmwareUpdateInfo_Request_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_org_traccar_protobuf_dolphin_Messages_FirmwareUpdateInfo_Request_descriptor, new String[] { "Channel", "HardwareVersion", "DeviceVersionName", "DeviceVersionMajor", "DeviceVersionMinor", "DeviceVersionRevision" });
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 33303 */     internal_static_org_traccar_protobuf_dolphin_Messages_FirmwareUpdateInfo_Response_descriptor = getDescriptor().getMessageTypes().get(11);
/* 33304 */     internal_static_org_traccar_protobuf_dolphin_Messages_FirmwareUpdateInfo_Response_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_org_traccar_protobuf_dolphin_Messages_FirmwareUpdateInfo_Response_descriptor, new String[] { "VersionName", "VersionMajor", "VersionMinor", "VersionRevision", "FirmwareID", "TotalSize" });
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 33309 */     internal_static_org_traccar_protobuf_dolphin_Messages_FirmwareUpdateResp_descriptor = getDescriptor().getMessageTypes().get(12);
/* 33310 */     internal_static_org_traccar_protobuf_dolphin_Messages_FirmwareUpdateResp_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_org_traccar_protobuf_dolphin_Messages_FirmwareUpdateResp_descriptor, new String[] { "FirmwareID", "Response", "FirmwareVersionName", "FirmwareVersionMajor", "FirmwareVersionMinor", "FirmwareVersionRevision" });
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 33315 */     internal_static_org_traccar_protobuf_dolphin_Messages_FUStartData_descriptor = getDescriptor().getMessageTypes().get(13);
/* 33316 */     internal_static_org_traccar_protobuf_dolphin_Messages_FUStartData_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_org_traccar_protobuf_dolphin_Messages_FUStartData_descriptor, new String[] { "FirmwareID", "TotalSize" });
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 33321 */     internal_static_org_traccar_protobuf_dolphin_Messages_FUPackRequest_descriptor = getDescriptor().getMessageTypes().get(14);
/* 33322 */     internal_static_org_traccar_protobuf_dolphin_Messages_FUPackRequest_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_org_traccar_protobuf_dolphin_Messages_FUPackRequest_descriptor, new String[] { "FirmwareID", "Start", "End" });
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 33327 */     internal_static_org_traccar_protobuf_dolphin_Messages_FUPacket_descriptor = getDescriptor().getMessageTypes().get(15);
/* 33328 */     internal_static_org_traccar_protobuf_dolphin_Messages_FUPacket_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_org_traccar_protobuf_dolphin_Messages_FUPacket_descriptor, new String[] { "FirmwareID", "Response", "Start", "End", "Data" });
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 33333 */     internal_static_org_traccar_protobuf_dolphin_Messages_LogMessage_descriptor = getDescriptor().getMessageTypes().get(16);
/* 33334 */     internal_static_org_traccar_protobuf_dolphin_Messages_LogMessage_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_org_traccar_protobuf_dolphin_Messages_LogMessage_descriptor, new String[] { "UnixTimestamp", "Level", "Message" });
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 33339 */     internal_static_org_traccar_protobuf_dolphin_Messages_LogPack_descriptor = getDescriptor().getMessageTypes().get(17);
/* 33340 */     internal_static_org_traccar_protobuf_dolphin_Messages_LogPack_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_org_traccar_protobuf_dolphin_Messages_LogPack_descriptor, new String[] { "Messages" });
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 33345 */     internal_static_org_traccar_protobuf_dolphin_Messages_LogStart_descriptor = getDescriptor().getMessageTypes().get(18);
/* 33346 */     internal_static_org_traccar_protobuf_dolphin_Messages_LogStart_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_org_traccar_protobuf_dolphin_Messages_LogStart_descriptor, new String[] { "Level" });
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 33351 */     internal_static_org_traccar_protobuf_dolphin_Messages_FMSData_descriptor = getDescriptor().getMessageTypes().get(19);
/* 33352 */     internal_static_org_traccar_protobuf_dolphin_Messages_FMSData_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_org_traccar_protobuf_dolphin_Messages_FMSData_descriptor, new String[] { "PGNIdList", "PGNValueList" });
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 33357 */     internal_static_org_traccar_protobuf_dolphin_Messages_AuthenticateRequest_descriptor = getDescriptor().getMessageTypes().get(20);
/* 33358 */     internal_static_org_traccar_protobuf_dolphin_Messages_AuthenticateRequest_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_org_traccar_protobuf_dolphin_Messages_AuthenticateRequest_descriptor, new String[] { "Code" });
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 33363 */     internal_static_org_traccar_protobuf_dolphin_Messages_AuthenticateResponse_descriptor = getDescriptor().getMessageTypes().get(21);
/* 33364 */     internal_static_org_traccar_protobuf_dolphin_Messages_AuthenticateResponse_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_org_traccar_protobuf_dolphin_Messages_AuthenticateResponse_descriptor, new String[] { "Code" });
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 33369 */     internal_static_org_traccar_protobuf_dolphin_Messages_CommandRequest_descriptor = getDescriptor().getMessageTypes().get(22);
/* 33370 */     internal_static_org_traccar_protobuf_dolphin_Messages_CommandRequest_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_org_traccar_protobuf_dolphin_Messages_CommandRequest_descriptor, new String[] { "Command" });
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 33375 */     internal_static_org_traccar_protobuf_dolphin_Messages_CommandResponse_descriptor = getDescriptor().getMessageTypes().get(23);
/* 33376 */     internal_static_org_traccar_protobuf_dolphin_Messages_CommandResponse_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_org_traccar_protobuf_dolphin_Messages_CommandResponse_descriptor, new String[] { "Response" });
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 33381 */     internal_static_org_traccar_protobuf_dolphin_Messages_USSDData_descriptor = getDescriptor().getMessageTypes().get(24);
/* 33382 */     internal_static_org_traccar_protobuf_dolphin_Messages_USSDData_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_org_traccar_protobuf_dolphin_Messages_USSDData_descriptor, new String[] { "ID", "USSDCode", "USSDResponse", "Timestamp", "ResponseStatus" });
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 33387 */     internal_static_org_traccar_protobuf_dolphin_Messages_CrashAccelData_descriptor = getDescriptor().getMessageTypes().get(25);
/* 33388 */     internal_static_org_traccar_protobuf_dolphin_Messages_CrashAccelData_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_org_traccar_protobuf_dolphin_Messages_CrashAccelData_descriptor, new String[] { "Timestamp", "X", "Y", "Z" });
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 33393 */     internal_static_org_traccar_protobuf_dolphin_Messages_CrashData_descriptor = getDescriptor().getMessageTypes().get(26);
/* 33394 */     internal_static_org_traccar_protobuf_dolphin_Messages_CrashData_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_org_traccar_protobuf_dolphin_Messages_CrashData_descriptor, new String[] { "Timestamp", "Level", "AccelData", "PointData" });
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 33399 */     internal_static_org_traccar_protobuf_dolphin_Messages_CrashDataResponse_descriptor = getDescriptor().getMessageTypes().get(27);
/* 33400 */     internal_static_org_traccar_protobuf_dolphin_Messages_CrashDataResponse_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_org_traccar_protobuf_dolphin_Messages_CrashDataResponse_descriptor, new String[] { "Code" });
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 33405 */     internal_static_org_traccar_protobuf_dolphin_Messages_DTCResposne_descriptor = getDescriptor().getMessageTypes().get(28);
/* 33406 */     internal_static_org_traccar_protobuf_dolphin_Messages_DTCResposne_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_org_traccar_protobuf_dolphin_Messages_DTCResposne_descriptor, new String[] { "DTCResposneCode" });
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 33411 */     internal_static_org_traccar_protobuf_dolphin_Messages_DTCRequest_descriptor = getDescriptor().getMessageTypes().get(29);
/* 33412 */     internal_static_org_traccar_protobuf_dolphin_Messages_DTCRequest_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_org_traccar_protobuf_dolphin_Messages_DTCRequest_descriptor, new String[] { "DTCRecords" });
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 33417 */     internal_static_org_traccar_protobuf_dolphin_Messages_DTCRecord_descriptor = getDescriptor().getMessageTypes().get(30);
/* 33418 */     internal_static_org_traccar_protobuf_dolphin_Messages_DTCRecord_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_org_traccar_protobuf_dolphin_Messages_DTCRecord_descriptor, new String[] { "DTCCodes", "Timestamp", "OBDMalfunctionIndicatorLamp", "FMSProtectLamp", "FMSAmberWarningLamp", "FMSRedStopLamp", "FMSMalfunctionIndicatorLamp", "FMSSAELamp1", "FMSSAELamp2", "FMSSAELamp3", "FMSSAELamp4" });
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 33423 */     internal_static_org_traccar_protobuf_dolphin_Messages_DTCCode_descriptor = getDescriptor().getMessageTypes().get(31);
/* 33424 */     internal_static_org_traccar_protobuf_dolphin_Messages_DTCCode_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_org_traccar_protobuf_dolphin_Messages_DTCCode_descriptor, new String[] { "DTCType", "Code", "Reason", "OccurrenceCount", "Source" });
/*       */ 
/*       */ 
/*       */     
/* 33428 */     DolphinConfig.getDescriptor();
/*       */   } }


/* Location:              C:\User\\user\Documents\Ensurity Mobile [Client]\Latest App\traccar\tracker-server.jar!\org\traccar\protobuf\dolphin\Messages\DolphinMessages.class
 * Java compiler version: 8 (52.0)
 * JD-Core Version:       1.1.3
 */