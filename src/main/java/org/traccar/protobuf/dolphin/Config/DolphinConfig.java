/*       */ package org.traccar.protobuf.dolphin.Config;public final class DolphinConfig { private static final Descriptors.Descriptor internal_static_org_traccar_protobuf_dolphin_Config_Config_descriptor; private static final GeneratedMessageV3.FieldAccessorTable internal_static_org_traccar_protobuf_dolphin_Config_Config_fieldAccessorTable; private static final Descriptors.Descriptor internal_static_org_traccar_protobuf_dolphin_Config_ConfigDiff_descriptor; private static final GeneratedMessageV3.FieldAccessorTable internal_static_org_traccar_protobuf_dolphin_Config_ConfigDiff_fieldAccessorTable; private static final Descriptors.Descriptor internal_static_org_traccar_protobuf_dolphin_Config_Uint32DiffItem_descriptor; private static final GeneratedMessageV3.FieldAccessorTable internal_static_org_traccar_protobuf_dolphin_Config_Uint32DiffItem_fieldAccessorTable; private static final Descriptors.Descriptor internal_static_org_traccar_protobuf_dolphin_Config_Int32DiffItem_descriptor; private static final GeneratedMessageV3.FieldAccessorTable internal_static_org_traccar_protobuf_dolphin_Config_Int32DiffItem_fieldAccessorTable; private static final Descriptors.Descriptor internal_static_org_traccar_protobuf_dolphin_Config_Uint64DiffItem_descriptor; private static final GeneratedMessageV3.FieldAccessorTable internal_static_org_traccar_protobuf_dolphin_Config_Uint64DiffItem_fieldAccessorTable; private static final Descriptors.Descriptor internal_static_org_traccar_protobuf_dolphin_Config_Int64DiffItem_descriptor; private static final GeneratedMessageV3.FieldAccessorTable internal_static_org_traccar_protobuf_dolphin_Config_Int64DiffItem_fieldAccessorTable; private static final Descriptors.Descriptor internal_static_org_traccar_protobuf_dolphin_Config_BoolDiffItem_descriptor; private static final GeneratedMessageV3.FieldAccessorTable internal_static_org_traccar_protobuf_dolphin_Config_BoolDiffItem_fieldAccessorTable; private static final Descriptors.Descriptor internal_static_org_traccar_protobuf_dolphin_Config_StringDiffItem_descriptor; private static final GeneratedMessageV3.FieldAccessorTable internal_static_org_traccar_protobuf_dolphin_Config_StringDiffItem_fieldAccessorTable; private static final Descriptors.Descriptor internal_static_org_traccar_protobuf_dolphin_Config_GeoZone_descriptor; private static final GeneratedMessageV3.FieldAccessorTable internal_static_org_traccar_protobuf_dolphin_Config_GeoZone_fieldAccessorTable; private static final Descriptors.Descriptor internal_static_org_traccar_protobuf_dolphin_Config_IO_descriptor; private static final GeneratedMessageV3.FieldAccessorTable internal_static_org_traccar_protobuf_dolphin_Config_IO_fieldAccessorTable; private static final Descriptors.Descriptor internal_static_org_traccar_protobuf_dolphin_Config_Service_IOCondition_descriptor; private static final GeneratedMessageV3.FieldAccessorTable internal_static_org_traccar_protobuf_dolphin_Config_Service_IOCondition_fieldAccessorTable;
/*       */   private static final Descriptors.Descriptor internal_static_org_traccar_protobuf_dolphin_Config_Service_IOConditionGroup_descriptor;
/*       */   private static final GeneratedMessageV3.FieldAccessorTable internal_static_org_traccar_protobuf_dolphin_Config_Service_IOConditionGroup_fieldAccessorTable;
/*       */   private static final Descriptors.Descriptor internal_static_org_traccar_protobuf_dolphin_Config_Service_StateCondition_descriptor;
/*       */   private static final GeneratedMessageV3.FieldAccessorTable internal_static_org_traccar_protobuf_dolphin_Config_Service_StateCondition_fieldAccessorTable;
/*       */   private static final Descriptors.Descriptor internal_static_org_traccar_protobuf_dolphin_Config_Service_State_descriptor;
/*       */   private static final GeneratedMessageV3.FieldAccessorTable internal_static_org_traccar_protobuf_dolphin_Config_Service_State_fieldAccessorTable;
/*       */   private static final Descriptors.Descriptor internal_static_org_traccar_protobuf_dolphin_Config_Service_descriptor;
/*       */   private static final GeneratedMessageV3.FieldAccessorTable internal_static_org_traccar_protobuf_dolphin_Config_Service_fieldAccessorTable;
/*       */   private static Descriptors.FileDescriptor descriptor;
/*       */   
/*       */   public static void registerAllExtensions(ExtensionRegistryLite registry) {}
/*       */   
/*    14 */   public static void registerAllExtensions(ExtensionRegistry registry) { registerAllExtensions((ExtensionRegistryLite)registry); } public static Descriptors.FileDescriptor getDescriptor() { return descriptor; }
/*       */   static { String[] descriptorData = { "\n\023DolphinConfig.proto\022#org.traccar.protobuf.dolphin.Config\"Ïá\001\n\006Config\022P\n\023SerialPort_Baudrate\030P \001(\01623.org.traccar.protobuf.dolphin.Config.SerialBaudrate\022\"\n\032DoNotResetDeviceOnProblems\030Z \001(\b\022\020\n\bPassword\030c \001(\t\022E\n\bMovement\030d \001(\01623.org.traccar.protobuf.dolphin.Config.MovementSource\022!\n\031MovementSensorSensitivity\030e \001(\r\022=\n\005Sleep\030f \001(\0162..org.traccar.protobuf.dolphin.Config.SleepMode\022\024\n\fSleepTimeout\030g \001(\r\022A\n\bEngineOn\030h \001(\0162/.org.traccar.protobuf.dolphin.Config.EngineMode\022\025\n\rEngineOn_DIN1\030i \001(\b\022\025\n\rEngineOn_DIN2\030j \001(\b\022\037\n\027EngineOn_MovementSensor\030k \001(\b\022%\n\035EngineOn_PowerSupplyAvailable\030l \001(\b\022\031\n\021EngineOn_GpsSpeed\030m \001(\r\022\027\n\017EngineOn_CanRPM\030n \001(\r\022'\n\037EngineOn_MinActiveStateDuration\030o \001(\r\022Q\n\021EngineOn_Operator\030p \001(\01626.org.traccar.protobuf.dolphin.Config.ConditionOperator\022#\n\033EngineOn_MovementStartDelay\030q \001(\r\022\"\n\032EngineOn_MovementStopDelay\030r \001(\r\022 \n\030EngineOn_ExternalVoltage\030s \001(\r\022\025\n\rLedIndication\030t \001(\b\022;\n\004GNSS\030u \001(\0162-.org.traccar.protobuf.dolphin.Config.GNSSMode\022 \n\030StaticNavigation_Enabled\030v \001(\b\022\\\n\027StaticNavigation_Source\030w \001(\0162;.org.traccar.protobuf.dolphin.Config.StaticNavigationSource\022P\n\026RecordsSaveAndSendMode\030x \001(\01620.org.traccar.protobuf.dolphin.Config.RecordsMode\022U\n\023TimeSynchronization\030y \001(\01628.org.traccar.protobuf.dolphin.Config.TimeSynchronization\022\021\n\tNTPServer\030z \001(\t\022\023\n\013NTPInterval\030{ \001(\r\022\034\n\024Sleep_NoPowerTimeout\030} \001(\r\022\021\n\bSendPing\030\001 \001(\b\022\026\n\rTimetableMode\030\001 \001(\b\022\026\n\rTimetableData\030\001 \001(\f\022@\n\tService_1\030È\001 \001(\0132,.org.traccar.protobuf.dolphin.Config.Service\022@\n\tService_2\030É\001 \001(\0132,.org.traccar.protobuf.dolphin.Config.Service\022@\n\tService_3\030Ê\001 \001(\0132,.org.traccar.protobuf.dolphin.Config.Service\022!\n\030AnalogInput1_AverageTime\030¼\005 \001(\r\022!\n\030AnalogInput2_AverageTime\030½\005 \001(\r\022!\n\030AnalogInput3_AverageTime\030¾\005 \001(\r\022P\n\023Bluetooth_RadioMode\030 \006 \001(\01622.org.traccar.protobuf.dolphin.Config.BluetoothMode\022\027\n\016Bluetooth_Name\030¡\006 \001(\t\022\026\n\rBluetooth_PIN\030¢\006 \001(\t\022[\n\026Bluetooth_SecurityMode\030£\006 \001(\0162:.org.traccar.protobuf.dolphin.Config.BluetoothSecurityMode\022#\n\032Bluetooth_PowerDownOnSleep\030¤\006 \001(\b\022o\n Bluetooth_ExternalConnectionMode\030ª\006 \001(\0162D.org.traccar.protobuf.dolphin.Config.BluetoothExternalConnectionMode\022%\n\034Bluetooth_ExternalDevice_MAC\030«\006 \001(\t\022&\n\035Bluetooth_ExternalDevice_Name\030¬\006 \001(\t\022%\n\034Bluetooth_ExternalDevice_PIN\030­\006 \001(\t\022!\n\030Bluetooth_AuthorizedMAC1\030´\006 \001(\t\022!\n\030Bluetooth_AuthorizedMAC2\030µ\006 \001(\t\022!\n\030Bluetooth_AuthorizedMAC3\030¶\006 \001(\t\022!\n\030Bluetooth_AuthorizedMAC4\030·\006 \001(\t\022!\n\030Bluetooth_AuthorizedMAC5\030¸\006 \001(\t\022\034\n\023GPRS_ContextEnabled\030Ñ\017 \001(\b\022\025\n\fGPRS_ApnName\030Ò\017 \001(\t\022\031\n\020GPRS_ApnUsername\030Ó\017 \001(\t\022\031\n\020GPRS_ApnPassword\030Ô\017 \001(\t\022 \n\027GPRS_CHAPAuthentication\030Õ\017 \001(\b\022\031\n\020GPRS_LinkTimeout\030Ö\017 \001(\r\022\035\n\024GPRS_ResponseTimeout\030×\017 \001(\r\022\033\n\022GPRS_ServerAddress\030Ø\017 \001(\t\022\030\n\017GPRS_ServerPort\030Ù\017 \001(\r\022Q\n\023GPRS_ServerProtocol\030Ú\017 \001(\01623.org.traccar.protobuf.dolphin.Config.ServerProtocol\022!\n\030GPRS_BackupServerAddress\030Û\017 \001(\t\022\036\n\025GPRS_BackupServerPort\030Ü\017 \001(\r\022W\n\031GPRS_BackupServerProtocol\030Ý\017 \001(\01623.org.traccar.protobuf.dolphin.Config.ServerProtocol\022&\n\035GPRS_SSL_ClientAuthentication\030ä\017 \001(\b\022\035\n\024GPRS_DataCompression\030î\017 \001(\b\022U\n\023Authentication_Mode\030ó\017 \001(\01627.org.traccar.protobuf.dolphin.Config.AuthenticationMode\022\034\n\023Authentication_Code\030ô\017 \001(\t\022\037\n\026FirmwareUpdate_Enabled\030ø\017 \001(\b\022\037\n\026FirmwareUpdate_Channel\030ù\017 \001(\t\022%\n\034FirmwareUpdate_CheckInterval\030ú\017 \001(\r\022%\n\034FirmwareUpdate_ServerAddress\030ý\017 \001(\t\022\"\n\031FirmwareUpdate_ServerPort\030þ\017 \001(\r\022[\n\035FirmwareUpdate_ServerProtocol\030ÿ\017 \001(\01623.org.traccar.protobuf.dolphin.Config.ServerProtocol\022#\n\032FirmwareUpdate_LinkTimeout\030\020 \001(\r\022'\n\036FirmwareUpdate_ResponseTimeout\030\020 \001(\r\022\030\n\017SMS_DataSending\030¸\027 \001(\b\022\033\n\022SMS_DataSendNumber\030¹\027 \001(\t\022\025\n\fSMS_Password\030º\027 \001(\t\022\032\n\021SMS_EventTimeZone\030»\027 \001(\005\022R\n\030Call_IncommingCallAction\030ë\027 \001(\0162/.org.traccar.protobuf.dolphin.Config.CallAction\022\"\n\031Call_DigitalInput1_CallTo\030ï\027 \001(\r\022\"\n\031Call_DigitalInput2_CallTo\030ð\027 \001(\r\022\"\n\031Call_DigitalInput3_CallTo\030ñ\027 \001(\r\022\032\n\021AuthorizedNumber1\030\030 \001(\t\022\032\n\021AuthorizedNumber2\030\030 \001(\t\022\032\n\021AuthorizedNumber3\030\030 \001(\t\022\032\n\021AuthorizedNumber4\030\030 \001(\t\022\032\n\021AuthorizedNumber5\030 \030 \001(\t\022\032\n\021AuthorizedNumber6\030¡\030 \001(\t\022\032\n\021AuthorizedNumber7\030¢\030 \001(\t\022\032\n\021AuthorizedNumber8\030£\030 \001(\t\022\032\n\021AuthorizedNumber9\030¤\030 \001(\t\022\033\n\022AuthorizedNumber10\030¥\030 \001(\t\022\035\n\024GsmPredefinedNumber1\030\031 \001(\t\022\035\n\024GsmPredefinedNumber2\030\031 \001(\t\022\035\n\024GsmPredefinedNumber3\030\031 \001(\t\022\035\n\024GsmPredefinedNumber4\030\031 \001(\t\022\035\n\024GsmPredefinedNumber5\030\031 \001(\t\022\035\n\024GsmPredefinedNumber6\030\031 \001(\t\022\035\n\024GsmPredefinedNumber7\030\031 \001(\t\022\035\n\024GsmPredefinedNumber8\030\031 \001(\t\022\035\n\024GsmPredefinedNumber9\030\031 \001(\t\022\036\n\025GsmPredefinedNumber10\030\031 \001(\t\022\031\n\020RoamingOperator1\030' \001(\t\022\031\n\020RoamingOperator2\030' \001(\t\022\031\n\020RoamingOperator3\030' \001(\t\022\031\n\020RoamingOperator4\030' \001(\t\022\031\n\020RoamingOperator5\030' \001(\t\022 \n\027DAQ_Stop_Home_MinPeriod\030N \001(\r\022#\n\032DAQ_Stop_Roaming_MinPeriod\030ôN \001(\r\022\"\n\031DAQ_Moving_Home_MinPeriod\030ÂN \001(\r\022)\n DAQ_Moving_Home_MinPathDeviation\030ÃN \001(\r\022%\n\034DAQ_Moving_Roaming_MinPeriod\030¦O \001(\r\022,\n#DAQ_Moving_Roaming_MinPathDeviation\030§O \001(\r\022@\n\bGeoZone1\030 \001 \001(\0132,.org.traccar.protobuf.dolphin.Config.GeoZone\022@\n\bGeoZone2\030´\001 \001(\0132,.org.traccar.protobuf.dolphin.Config.GeoZone\022@\n\bGeoZone3\030È\001 \001(\0132,.org.traccar.protobuf.dolphin.Config.GeoZone\022@\n\bGeoZone4\030Ü\001 \001(\0132,.org.traccar.protobuf.dolphin.Config.GeoZone\022@\n\bGeoZone5\030ð\001 \001(\0132,.org.traccar.protobuf.dolphin.Config.GeoZone\022@\n\bGeoZone6\030\001 \001(\0132,.org.traccar.protobuf.dolphin.Config.GeoZone\022@\n\bGeoZone7\030\001 \001(\0132,.org.traccar.protobuf.dolphin.Config.GeoZone\022@\n\bGeoZone8\030¬\001 \001(\0132,.org.traccar.protobuf.dolphin.Config.GeoZone\022@\n\bGeoZone9\030À\001 \001(\0132,.org.traccar.protobuf.dolphin.Config.GeoZone\022A\n\tGeoZone10\030Ô\001 \001(\0132,.org.traccar.protobuf.dolphin.Config.GeoZone\022A\n\tGeoZone11\030è\001 \001(\0132,.org.traccar.protobuf.dolphin.Config.GeoZone\022A\n\tGeoZone12\030ü\001 \001(\0132,.org.traccar.protobuf.dolphin.Config.GeoZone\022A\n\tGeoZone13\030\001 \001(\0132,.org.traccar.protobuf.dolphin.Config.GeoZone\022A\n\tGeoZone14\030¤\001 \001(\0132,.org.traccar.protobuf.dolphin.Config.GeoZone\022A\n\tGeoZone15\030¸\001 \001(\0132,.org.traccar.protobuf.dolphin.Config.GeoZone\022A\n\tGeoZone16\030Ì\001 \001(\0132,.org.traccar.protobuf.dolphin.Config.GeoZone\022A\n\tGeoZone17\030à\001 \001(\0132,.org.traccar.protobuf.dolphin.Config.GeoZone\022A\n\tGeoZone18\030ô\001 \001(\0132,.org.traccar.protobuf.dolphin.Config.GeoZone\022A\n\tGeoZone19\030\001 \001(\0132,.org.traccar.protobuf.dolphin.Config.GeoZone\022A\n\tGeoZone20\030\001 \001(\0132,.org.traccar.protobuf.dolphin.Config.GeoZone\022A\n\tGeoZone21\030°\001 \001(\0132,.org.traccar.protobuf.dolphin.Config.GeoZone\022A\n\tGeoZone22\030Ä\001 \001(\0132,.org.traccar.protobuf.dolphin.Config.GeoZone\022A\n\tGeoZone23\030Ø\001 \001(\0132,.org.traccar.protobuf.dolphin.Config.GeoZone\022A\n\tGeoZone24\030ì\001 \001(\0132,.org.traccar.protobuf.dolphin.Config.GeoZone\022A\n\tGeoZone25\030 \001 \001(\0132,.org.traccar.protobuf.dolphin.Config.GeoZone\022A\n\tGeoZone26\030 \001 \001(\0132,.org.traccar.protobuf.dolphin.Config.GeoZone\022A\n\tGeoZone27\030¨ \001 \001(\0132,.org.traccar.protobuf.dolphin.Config.GeoZone\022A\n\tGeoZone28\030¼ \001 \001(\0132,.org.traccar.protobuf.dolphin.Config.GeoZone\022A\n\tGeoZone29\030Ð \001 \001(\0132,.org.traccar.protobuf.dolphin.Config.GeoZone\022A\n\tGeoZone30\030ä \001 \001(\0132,.org.traccar.protobuf.dolphin.Config.GeoZone\022A\n\tGeoZone31\030ø \001 \001(\0132,.org.traccar.protobuf.dolphin.Config.GeoZone\022A\n\tGeoZone32\030¡\001 \001(\0132,.org.traccar.protobuf.dolphin.Config.GeoZone\022A\n\tGeoZone33\030 ¡\001 \001(\0132,.org.traccar.protobuf.dolphin.Config.GeoZone\022A\n\tGeoZone34\030´¡\001 \001(\0132,.org.traccar.protobuf.dolphin.Config.GeoZone\022A\n\tGeoZone35\030È¡\001 \001(\0132,.org.traccar.protobuf.dolphin.Config.GeoZone\022A\n\tGeoZone36\030Ü¡\001 \001(\0132,.org.traccar.protobuf.dolphin.Config.GeoZone\022A\n\tGeoZone37\030ð¡\001 \001(\0132,.org.traccar.protobuf.dolphin.Config.GeoZone\022A\n\tGeoZone38\030¢\001 \001(\0132,.org.traccar.protobuf.dolphin.Config.GeoZone\022A\n\tGeoZone39\030¢\001 \001(\0132,.org.traccar.protobuf.dolphin.Config.GeoZone\022A\n\tGeoZone40\030¬¢\001 \001(\0132,.org.traccar.protobuf.dolphin.Config.GeoZone\022A\n\tGeoZone41\030À¢\001 \001(\0132,.org.traccar.protobuf.dolphin.Config.GeoZone\022A\n\tGeoZone42\030Ô¢\001 \001(\0132,.org.traccar.protobuf.dolphin.Config.GeoZone\022A\n\tGeoZone43\030è¢\001 \001(\0132,.org.traccar.protobuf.dolphin.Config.GeoZone\022A\n\tGeoZone44\030ü¢\001 \001(\0132,.org.traccar.protobuf.dolphin.Config.GeoZone\022A\n\tGeoZone45\030£\001 \001(\0132,.org.traccar.protobuf.dolphin.Config.GeoZone\022A\n\tGeoZone46\030¤£\001 \001(\0132,.org.traccar.protobuf.dolphin.Config.GeoZone\022A\n\tGeoZone47\030¸£\001 \001(\0132,.org.traccar.protobuf.dolphin.Config.GeoZone\022A\n\tGeoZone48\030Ì£\001 \001(\0132,.org.traccar.protobuf.dolphin.Config.GeoZone\022A\n\tGeoZone49\030à£\001 \001(\0132,.org.traccar.protobuf.dolphin.Config.GeoZone\022A\n\tGeoZone50\030ô£\001 \001(\0132,.org.traccar.protobuf.dolphin.Config.GeoZone\022\031\n\017Trip_StartSpeed\030àÚ\001 \001(\r\022\032\n\020Trip_UseIgnition\030áÚ\001 \001(\b\022#\n\031Trip_ParkDetectionTimeout\030âÚ\001 \001(\r\022\035\n\023Overspeeding_Enable\030ÄÛ\001 \001(\b\022\034\n\022Overspeeding_Limit\030ÅÛ\001 \001(\r\022&\n\034Overspeeding_ActivationSpeed\030ÆÛ\001 \001(\r\022j\n\035Overspeeding_DeactivationMode\030ÇÛ\001 \001(\0162A.org.traccar.protobuf.dolphin.Config.OverSpeedingDeactivationMode\022(\n\036Overspeeding_DeactivationValue\030ÈÛ\001 \001(\r\022\026\n\fUSSD_Enabled\030ìÛ\001 \001(\b\022\021\n\007USSD_ID\030íÛ\001 \001(\r\022\027\n\rUSSD_Interval\030îÛ\001 \001(\r\022\023\n\tUSSD_Code\030ïÛ\001 \001(\t\022\"\n\030SpeedSensor_KmPulseCount\030öÛ\001 \001(\r\022 \n\026CrashDetection_Enabled\030¨Ü\001 \001(\b\022(\n\036CrashDetection_Level1Threshold\030©Ü\001 \001(\r\022(\n\036CrashDetection_Level2Threshold\030ªÜ\001 \001(\r\022(\n\036CrashDetection_Level3Threshold\030«Ü\001 \001(\r\022S\n\024CrashDetection_Trace\030­Ü\001 \001(\01623.org.traccar.protobuf.dolphin.Config.CrashTraceType\022!\n\027CrashDetection_Duration\030²Ü\001 \001(\r\022\"\n\030CrashDetection_SendSMSTo\030¼Ü\001 \001(\r\022 \n\026CrashDetection_SMSText\030½Ü\001 \001(\t\022\037\n\025CrashDetection_CallTo\030ÁÜ\001 \001(\r\022#\n\031RolloverDetection_Enabled\030ÆÜ\001 \001(\b\022_\n\027DriverRegistration_Mode\030Èâ\001 \001(\0162<.org.traccar.protobuf.dolphin.Config.DriverRegistration_Mode\022s\n!DriverRegistration_Authentication\030Éâ\001 \001(\0162F.org.traccar.protobuf.dolphin.Config.DriverRegistration_Authentication\0222\n(DriverRegistration_DeregistrationTimeout\030Êâ\001 \001(\r\022h\n&DriverRegistration_BuzzerDigitalOutput\030Òâ\001 \001(\01626.org.traccar.protobuf.dolphin.Config.DigitalOutputName\022m\n+DriverRegistration_ImmobilizerDigitalOutput\030Óâ\001 \001(\01626.org.traccar.protobuf.dolphin.Config.DigitalOutputName\0221\n'DriverRegistration_ImmobilizerActiveLow\030Ôâ\001 \001(\b\022*\n DriverRegistration_AuthorizedID1\030¬ã\001 \001(\004\022*\n DriverRegistration_AuthorizedID2\030­ã\001 \001(\004\022*\n DriverRegistration_AuthorizedID3\030®ã\001 \001(\004\022*\n DriverRegistration_AuthorizedID4\030¯ã\001 \001(\004\022*\n DriverRegistration_AuthorizedID5\030°ã\001 \001(\004\022*\n DriverRegistration_AuthorizedID6\030±ã\001 \001(\004\022*\n DriverRegistration_AuthorizedID7\030²ã\001 \001(\004\022*\n DriverRegistration_AuthorizedID8\030³ã\001 \001(\004\022*\n DriverRegistration_AuthorizedID9\030´ã\001 \001(\004\022+\n!DriverRegistration_AuthorizedID10\030µã\001 \001(\004\022\030\n\016ECODriveActive\030°ê\001 \001(\b\022\037\n\025ECO_OverSpeedingLimit\030±ê\001 \001(\r\022#\n\031ECO_RPM_GreenBandLowLimit\030²ê\001 \001(\r\022$\n\032ECO_RPM_GreenBandHighLimit\030³ê\001 \001(\r\022 \n\026ECO_HarshBreakingLimit\030´ê\001 \001(\r\022\"\n\030ECO_ExtremeBreakingLimit\030µê\001 \001(\r\022$\n\032ECO_HarshAccelerationLimit\030¶ê\001 \001(\r\022\034\n\022ECO_CorneringLimit\030·ê\001 \001(\r\022\031\n\017ECO_IdlingDelay\030¸ê\001 \001(\r\022\031\n\017ECO_IdlingSpeed\030¹ê\001 \001(\r\022 \n\026ECO_CruiseControlSpeed\030ºê\001 \001(\r\022'\n\035ECO_CalculateOnlyWhenEngineOn\030Äê\001 \001(\b\022 \n\026ECO_CustomEngineSource\030Åê\001 \001(\b\022\033\n\021ECO_EngineOn_DIN1\030Æê\001 \001(\b\022\033\n\021ECO_EngineOn_DIN2\030Çê\001 \001(\b\022%\n\033ECO_EngineOn_MovementSensor\030Èê\001 \001(\b\022+\n!ECO_EngineOn_PowerSupplyAvailable\030Éê\001 \001(\b\022!\n\027ECO_EngineOn_CanRPM_Low\030Êê\001 \001(\r\022\"\n\030ECO_EngineOn_CanRPM_High\030Ëê\001 \001(\r\022W\n\025ECO_EngineOn_Operator\030Ìê\001 \001(\01626.org.traccar.protobuf.dolphin.Config.ConditionOperator\022&\n\034ECO_EngineOn_ExternalVoltage\030Íê\001 \001(\r\022J\n\rECU_Interface\030ë\001 \001(\01621.org.traccar.protobuf.dolphin.Config.ECUInterface\022W\n\027FuelConsumption_Enabled\030Æë\001 \001(\01624.org.traccar.protobuf.dolphin.Config.FuelConsumption\022,\n\"FuelConsumption_EngineDisplacement\030Çë\001 \001(\r\022#\n\031FuelConsumption_Cylinders\030Èë\001 \001(\r\022-\n#FuelConsumption_InjectorPerformance\030Éë\001 \001(\r\022/\n%FuelConsumption_VolumetricEfficiently\030Êë\001 \001(\r\022\034\n\022FaultCodesReadTime\030øë\001 \001(\r\022\034\n\022SIPAAD_LinkTimeout\030¤î\001 \001(\r\022 \n\026SIPAAD_ResponseTimeout\030¥î\001 \001(\r\022\036\n\024SIPAAD_ServerAddress\030¦î\001 \001(\t\022\033\n\021SIPAAD_ServerPort\030§î\001 \001(\r\022T\n\025SIPAAD_ServerProtocol\030¨î\001 \001(\01623.org.traccar.protobuf.dolphin.Config.ServerProtocol\022)\n\037SIPAAD_SSL_ClientAuthentication\030©î\001 \001(\b\022:\n\007IO_Time\030Ó\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022;\n\bIO_Angle\030Ô\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022;\n\bIO_Speed\030Õ\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022?\n\fIO_SleepMode\030Ø\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022>\n\013IO_Ignition\030Ú\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022>\n\013IO_Movement\030Û\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022>\n\013IO_DataMode\030Ü\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022@\n\rIO_GnssStatus\030ä\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022>\n\013IO_GnssHDOP\030å\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022>\n\013IO_GnssPDOP\030æ\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022G\n\024IO_GnssJammingStatus\030ç\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022?\n\fIO_GsmSignal\030î\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022?\n\fIO_GsmCellId\030ï\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022A\n\016IO_GsmAreaCode\030ð\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022A\n\016IO_GsmOperator\030ñ\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022D\n\021IO_GsmTemperature\030ò\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022F\n\023IO_GsmJammingStatus\030ó\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022E\n\022IO_ExternalVoltage\030ø\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022D\n\021IO_BatteryVoltage\030ù\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022D\n\021IO_BatteryCurrent\030ú\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022C\n\020IO_TotalOdometer\030\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022>\n\013IO_Odometer\030\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022B\n\017IO_EngineOnTime\030\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022G\n\024IO_EngineOnTimeDelta\030\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022@\n\rIO_IdlingTime\030\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022E\n\022IO_IdlingTimeDelta\030\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022G\n\024IO_SpeedSensor_Speed\030\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022J\n\027IO_SpeedSensor_Distance\030\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022O\n\034IO_SpeedSensor_TotalDistance\030\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022J\n\027IO_SpeedSensor_MaxSpeed\030\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022N\n\033IO_SpeedSensor_GPSSpeedDiff\030\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022C\n\020IO_DigitalInput1\030\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022C\n\020IO_DigitalInput2\030\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022A\n\016IO_PowerSupply\030\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022C\n\020IO_DigitalInput3\030\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022G\n\024IO_VehicleConnection\030\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022G\n\024IO_DigitalInput1Time\030 \003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022L\n\031IO_DigitalInput1TimeDelta\030¡\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022G\n\024IO_DigitalInput2Time\030¢\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022L\n\031IO_DigitalInput2TimeDelta\030£\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022E\n\022IO_PowerSupplyTime\030¤\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022J\n\027IO_PowerSupplyTimeDelta\030¥\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022G\n\024IO_DigitalInput3Time\030¦\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022L\n\031IO_DigitalInput3TimeDelta\030§\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022D\n\021IO_DigitalOutput1\030ª\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022D\n\021IO_DigitalOutput2\030«\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022B\n\017IO_AnalogInput1\030´\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022B\n\017IO_AnalogInput2\030µ\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022B\n\017IO_AnalogInput3\030¶\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022;\n\bIO_AxisX\030¾\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022;\n\bIO_AxisY\030¿\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022;\n\bIO_AxisZ\030À\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022B\n\017IO_ECO_MaxSpeed\030æ\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022M\n\032IO_ECO_NormalSpeedDistance\030ç\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022R\n\037IO_ECO_NormalSpeedTotalDistance\030è\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022J\n\027IO_ECO_NormalSpeedTimer\030é\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022O\n\034IO_ECO_NormalSpeedTotalTimer\030ê\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022N\n\033IO_ECO_OverSpeedingDistance\030ë\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022S\n IO_ECO_OverSpeedingTotalDistance\030ì\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022K\n\030IO_ECO_OverSpeedingTimer\030í\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022P\n\035IO_ECO_OverSpeedingTotalTimer\030î\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022@\n\rIO_ECO_MaxRPM\030ï\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022N\n\033IO_ECO_RPMGreenBandDistance\030ð\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022S\n IO_ECO_RPMGreenBandTotalDistance\030ñ\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022K\n\030IO_ECO_RPMGreenBandTimer\030ò\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022P\n\035IO_ECO_RPMGreenBandTotalTimer\030ó\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022I\n\026IO_ECO_OverRPMDistance\030ô\003 \001(\0132'.org.traccar.p", "rotobuf.dolphin.Config.IO\022N\n\033IO_ECO_OverRPMTotalDistance\030õ\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022F\n\023IO_ECO_OverRPMTimer\030ö\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022K\n\030IO_ECO_OverRPMTotalTimer\030÷\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022E\n\022IO_ECO_IdlingEvent\030ú\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022L\n\031IO_ECO_CruiseControlTimer\030û\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022Q\n\036IO_ECO_CruiseControlTotalTimer\030ü\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022O\n\034IO_ECO_CruiseControlDistance\030ý\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022T\n!IO_ECO_CruiseControlTotalDistance\030þ\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022J\n\027IO_ECO_UnderRPMDistance\030ÿ\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022O\n\034IO_ECO_UnderRPMTotalDistance\030\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022G\n\024IO_ECO_UnderRPMTimer\030\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022L\n\031IO_ECO_UnderRPMTotalTimer\030\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022F\n\023IO_ECO_BreakCounter\030\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022K\n\030IO_ECO_HarshBreakCounter\030\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022M\n\032IO_ECO_ExtremeBreakCounter\030\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022R\n\037IO_ECO_HarshAccelerationCounter\030\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022J\n\027IO_ECO_CorneringCounter\030\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022D\n\021IO_ECO_TotalBreak\030\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022I\n\026IO_ECO_TotalHarshBreak\030\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022K\n\030IO_ECO_TotalExtremeBreak\030\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022P\n\035IO_ECO_TotalHarshAcceleration\030\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022H\n\025IO_ECO_TotalCornering\030\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022:\n\007IO_Trip\030ü\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022?\n\fIO_Trip_Time\030ý\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022C\n\020IO_Trip_Distance\030þ\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022>\n\013IO_DriverID\030®\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022H\n\025IO_TemperatureSensor1\030à\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022K\n\030IO_TemperatureSensor1_ID\030á\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022H\n\025IO_TemperatureSensor2\030â\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022K\n\030IO_TemperatureSensor2_ID\030ã\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022H\n\025IO_TemperatureSensor3\030ä\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022K\n\030IO_TemperatureSensor3_ID\030å\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022E\n\022IO_HumiditySensor1\030ê\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022@\n\rIO_TiltStatus\030º\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022C\n\020IO_OBD_EngineRPM\030Ä\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022H\n\025IO_OBD_BatteryVoltage\030Å\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022R\n\037IO_OBD_EngineCoolantTemperature\030Æ\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022F\n\023IO_OBD_VehicleSpeed\030Ç\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022G\n\024IO_OBD_TotalDistance\030È\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022B\n\017IO_OBD_FuelRate\030É\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022G\n\024IO_OBD_TotalFuelUsed\030Ê\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022N\n\033IO_OBD_IntakeAirTemperature\030Ë\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022X\n%IO_OBD_IntakeManifoldAbsolutePressure\030Ì\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022R\n\037IO_OBD_MalfunctionIndicatorLamp\030ö\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022Q\n\036IO_DiagnosticTroubleCodesCount\030÷\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022N\n\033IO_OBD_CalculatedEngineLoad\030ø\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022I\n\026IO_OBD_MassAirFlowRate\030ù\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022J\n\027IO_OBD_ThrottlePosition\030ú\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022Q\n\036IO_OBD_RunTimeSinceEngineStart\030û\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022L\n\031IO_OBD_FuelTankLevelInput\030ü\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022[\n(IO_OBD_DistanceTraveledSinceCodesCleared\030ý\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022S\n IO_OBD_AbsoluteThrottlePositionD\030þ\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022J\n\027IO_OBD_TimeRunWithMILOn\030ÿ\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022N\n\033IO_OBD_EngineOilTemperature\030\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022K\n\030IO_OBD_FuelSystem1Status\030\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022K\n\030IO_OBD_FuelSystem2Status\030\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022N\n\033IO_OBD_OxygenSensor1Voltage\030\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022X\n%IO_OBD_OxygenSensor1ShortTermFuelTrim\030\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022N\n\033IO_OBD_OxygenSensor2Voltage\030\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022X\n%IO_OBD_OxygenSensor2ShortTermFuelTrim\030\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022N\n\033IO_OBD_OxygenSensor3Voltage\030\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022X\n%IO_OBD_OxygenSensor3ShortTermFuelTrim\030\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022N\n\033IO_OBD_OxygenSensor4Voltage\030\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022X\n%IO_OBD_OxygenSensor4ShortTermFuelTrim\030\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022V\n#IO_CANBus_Tachograph1_WorkingState1\030\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022V\n#IO_CANBus_Tachograph1_WorkingState2\030\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022V\n#IO_CANBus_Tachograph1_VehicleMotion\030\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022_\n,IO_CANBus_Tachograph1_Driv_1_Time_Rel_States\030\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022U\n\"IO_CANBus_Tachograph1_Driver1_Card\030\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022Y\n&IO_CANBus_Tachograph1_VehicleOverspeed\030\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022_\n,IO_CANBus_Tachograph1_Driv_2_Time_Rel_States\030\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022U\n\"IO_CANBus_Tachograph1_Driver2_Card\030\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022T\n!IO_CANBus_Tachograph1_SystemEvent\030\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022\\\n)IO_CANBus_Tachograph1_HandlingInformation\030\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022^\n+IO_CANBus_Tachograph1_TachographPerformance\030\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022[\n(IO_CANBus_Tachograph1_DirectionIndicator\030\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022U\n\"IO_CANBus_Tachograph1_VehicleSpeed\030\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022h\n5IO_CANBus_EngineTemperature1_EngineCoolantTemperature\030\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022l\n9IO_CANBus_ElectronicEngineController1_ActualEnginePercent\030\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022d\n1IO_CANBus_ElectronicEngineController1_EngineSpeed\030\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022Y\n&IO_CANBus_EngineHours_EngineTotalHours\030\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022a\n.IO_CANBus_VehicleDistance_TotalVehicleDistance\030\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022h\n5IO_CANBus_HighResolutionFuelConsumption_TotalFuelUsed\030\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022S\n IO_CANBus_DashDisplay_FuelLevel1\030\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022d\n1IO_CANBus_AmbientConditions_AmbientAirTemperature\030 \003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022Q\n\036IO_CANBus_FuelEconomy_FuelRate\030¡\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022a\n.IO_CANBus_FuelEconomy_InstantaneousFuelEconomy\030¢\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022o\n<IO_CANBus_AirSupplyPressure_ServiceBrakeAirPressureCircuit_1\030£\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022o\n<IO_CANBus_AirSupplyPressure_ServiceBrakeAirPressureCircuit_2\030¤\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022x\nEIO_CANBus_AftertreatmentDieselExhaustFluidTankInformation_Tank1_Level\030¥\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022|\nIIO_CANBus_TruckBus_ElectronicEngineController2_AcceleratorPedalPosition_1\030¶\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022s\n@IO_CANBus_TruckBus_ElectronicEngineController2_EnginePercentLoad\030·\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022\\\n)IO_CANBus_Truck_VehicleWeight_AxleWeight1\030¸\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022\\\n)IO_CANBus_Truck_VehicleWeight_AxleWeight2\030¹\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022\\\n)IO_CANBus_Truck_VehicleWeight_AxleWeight3\030º\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022e\n2IO_CANBus_Truck_ServiceInformation_ServiceDistance\030»\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022c\n0IO_CANBus_Truck_PTODriveEngagement_PTOEngageStat\030¼\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022y\nFIO_CANBus_Truck_CombinationVehicleWeight_GrossCombinationVehicleWeight\030½\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022y\nFIO_CANBus_TruckBus_Electronic_Retarder_Controller_1_RetarderTorqueMode\030¾\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022x\nEIO_CANBus_TruckBus_Electronic_Retarder_Controller_1_RetarderSelection\030¿\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022Z\n'IO_CANBus_Bus_DoorControl1_DoorPosition\030À\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022`\n-IO_CANBus_Bus_DoorControl1_RampWheelChairlift\030Á\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022Z\n'IO_CANBus_Bus_DoorControl1_DoorsStatus2\030Â\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022M\n\032IO_CANBus_Bus_DoorControl2\030Ã\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022d\n1IO_CANBus_BrakeLiningRemaining_AxleFrontLeftWheel\030Ä\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022e\n2IO_CANBus_BrakeLiningRemaining_AxleFrontRightWheel\030Å\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022d\n1IO_CANBus_BrakeLiningRemaining_AxleRear1LeftWheel\030Æ\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022e\n2IO_CANBus_BrakeLiningRemaining_AxleRear1RightWheel\030Ç\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022d\n1IO_CANBus_BrakeLiningRemaining_AxleRear2LeftWheel\030È\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022e\n2IO_CANBus_BrakeLiningRemaining_AxleRear2RightWheel\030É\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022d\n1IO_CANBus_BrakeLiningRemaining_AxleRear3LeftWheel\030Ê\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022e\n2IO_CANBus_BrakeLiningRemaining_AxleRear3RightWheel\030Ë\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022S\n IO_CANBus_TruckBus_CruiseControl\030à\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022b\n/IO_CANBus_Bus_AlternatorSpeed_AlternatorStatus1\030á\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022b\n/IO_CANBus_Bus_AlternatorSpeed_AlternatorStatus2\030â\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022b\n/IO_CANBus_Bus_AlternatorSpeed_AlternatorStatus3\030ã\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022b\n/IO_CANBus_Bus_AlternatorSpeed_AlternatorStatus4\030ä\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022o\n<IO_CANBus_Bus_ElectronicTransmissionController2_SelectedGear\030å\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022n\n;IO_CANBus_Bus_ElectronicTransmissionController2_CurrentGear\030æ\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022d\n1IO_CANBus_Bus_AirSuspensionControl4_FrontAxleLeft\030ç\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022e\n2IO_CANBus_Bus_AirSuspensionControl4_FrontAxleRight\030è\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022c\n0IO_CANBus_Bus_AirSuspensionControl4_RearAxleLeft\030é\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022d\n1IO_CANBus_Bus_AirSuspensionControl4_RearAxleright\030ê\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022S\n IO_CANBus_DashDisplay_FuelLevel2\030ë\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022i\n6IO_CANBus_ElectronicBrakeController_BrakePedalPosition\030ì\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022a\n.IO_CANBus_FuelConsumptionGaseous_TotalFuelUsed\030í\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022r\n?IO_CANBus_TruckBus_CruiseControlVehicleSpeed_ParkingBrakeSwitch\030î\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022o\n<IO_CANBus_TruckBus_CruiseControlVehicleSpeed_WheelBasedSpeed\030ï\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022s\n@IO_CANBus_TruckBus_CruiseControlVehicleSpeed_CruiseControlActive\030ð\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022k\n8IO_CANBus_TruckBus_CruiseControlVehicleSpeed_BrakeSwitch\030ñ\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022l\n9IO_CANBus_TruckBus_CruiseControlVehicleSpeed_ClutchSwitch\030ò\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022h\n5IO_CANBus_TruckBus_CruiseControlVehicleSpeed_PtoState\030ó\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022s\n@IO_CANBus_TruckBus_CruiseControlVehicleSpeed_CruiseControlStates\030ô\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022x\nEIO_CANBus_Bus_VehicleElectricalPower_HybridBatteryPackRemainingCharge\030õ\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022s\n@IO_CANBus_Bus_VehicleDynamicStabilityControl2_SteeringWheelAngle\030ö\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022b\n/IO_CANBus_ElectronicEngineController14_FuelType\030÷\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022d\n1IO_CANBus_EngineFluidLevelPressure_EngineOilLevel\030ø\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022g\n4IO_CANBus_EngineFluidLevelPressure_EngineOilPressure\030ù\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022b\n/IO_CANBus_EngineFluidLevelPressure_CoolantLevel\030ú\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022K\n\030IO_CANBus_TellTaleStatus\030û\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022`\n-IO_CANBus_FuelConsumption_EngineTotalFuelUsed\030ü\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IO\022\\\n)IO_CANBus_Truck_VehicleWeight_AxleWeight4\030ý\003 \001(\0132'.org.traccar.protobuf.dolphin.Config.IOJ\006\b¦\030\020Î\030J\006\b'\020º'J\b\bè\003\020é\003J\b\b\003\020Ê\003J\b\b\003\020\003J\b\b¤\003\020¥\003\"Ø\003\n\nConfigDiff\022L\n\017Uint32DiffItems\030\001 \003(\01323.org.traccar.protobuf.dolphin.Config.Uint32DiffItem\022J\n\016Int32DiffItems\030\002 \003(\01322.org.traccar.protobuf.dolphin.Config.Int32DiffItem\022L\n\017Uint64DiffItems\030\003 \003(\01323.org.traccar.protobuf.dolphin.Config.Uint64DiffItem\022J\n\016Int64DiffItems\030\004 \003(\01322.org.traccar.protobuf.dolphin.Config.Int64DiffItem\022L\n\017StringDiffItems\030\005 \003(\01323.org.traccar.protobuf.dolphin.Config.StringDiffItem\022H\n\rBoolDiffItems\030\006 \003(\01321.org.traccar.protobuf.dolphin.Config.BoolDiffItem\",\n\016Uint32DiffItem\022\013\n\003Tag\030\001 \001(\r\022\r\n\005Value\030\002 \001(\r\"+\n\rInt32DiffItem\022\013\n\003Tag\030\001 \001(\r\022\r\n\005Value\030\002 \001(\005\",\n\016Uint64DiffItem\022\013\n\003Tag\030\001 \001(\r\022\r\n\005Value\030\002 \001(\004\"+\n\rInt64DiffItem\022\013\n\003Tag\030\001 \001(\r\022\r\n\005Value\030\002 \001(\003\"*\n\fBoolDiffItem\022\013\n\003Tag\030\001 \001(\r\022\r\n\005Value\030\002 \001(\b\",\n\016StringDiffItem\022\013\n\003Tag\030\001 \001(\r\022\r\n\005Value\030\002 \001(\t\"Ø\002\n\007GeoZone\022?\n\bPriority\030\001 \001(\0162-.org.traccar.protobuf.dolphin.Config.Priority\022=\n\005Event\030\002 \001(\0162..org.traccar.protobuf.dolphin.Config.EventType\022\021\n\tEventOnly\030\003 \001(\b\022>\n\004Type\030\004 \001(\01620.org.traccar.protobuf.dolphin.Config.GeoZoneType\022\016\n\006Radius\030\005 \001(\r\022\016\n\006Border\030\006 \001(\r\022\024\n\fOverSpeeding\030\007 \001(\b\022\020\n\bMaxSpeed\030\b \001(\r\022\021\n\tSendSmsTo\030\t \001(\r\022\017\n\007SmsText\030\n \001(\t\022\016\n\006Points\030\013 \003(\002\"æ\001\n\002IO\022?\n\bPriority\030\001 \001(\0162-.org.traccar.protobuf.dolphin.Config.Priority\022=\n\005Event\030\002 \001(\0162..org.traccar.protobuf.dolphin.Config.EventType\022\020\n\bLowLevel\030\003 \001(\005\022\021\n\tHighLevel\030\004 \001(\005\022\021\n\tEventOnly\030\006 \001(\b\022\021\n\tSendSmsTo\030\007 \001(\r\022\017\n\007SmsText\030\b \001(\tJ\004\b\005\020\006\"\001\n\023Service_IOCondition\022\r\n\005IO_ID\030\001 \001(\r\022E\n\bOperator\030\002 \001(\01623.org.traccar.protobuf.dolphin.Config.NumberOperator\022\r\n\005Value\030\003 \001(\003\022\020\n\bCalcDiff\030\004 \001(\b\"µ\001\n\030Service_IOConditionGroup\022H\n\bOperator\030\001 \001(\01626.org.traccar.protobuf.dolphin.Config.ConditionOperator\022O\n\rIO_Conditions\030\002 \003(\01328.org.traccar.protobuf.dolphin.Config.Service_IOCondition\"\002\n\026Service_StateCondition\022R\n\022Condition_Operator\030\001 \001(\01626.org.traccar.protobuf.dolphin.Config.ConditionOperator\022O\n\rIO_Conditions\030\002 \003(\01328.org.traccar.protobuf.dolphin.Config.Service_IOCondition\022Y\n\022IO_ConditionGroups\030\003 \003(\0132=.org.traccar.protobuf.dolphin.Config.Service_IOConditionGroup\"Æ\001\n\rService_State\022\n\n\002ID\030\001 \001(\r\022S\n\016PointCondition\030\002 \001(\0132;.org.traccar.protobuf.dolphin.Config.Service_StateCondition\022T\n\017ChangeCondition\030\003 \001(\0132;.org.traccar.protobuf.dolphin.Config.Service_StateCondition\"Y\n\007Service\022\n\n\002ID\030\001 \001(\r\022B\n\006States\030\002 \003(\01322.org.traccar.protobuf.dolphin.Config.Service_State*O\n\016MovementSource\022\017\n\013MS_Ignition\020\000\022\017\n\013MS_Movement\020\001\022\n\n\006MS_GPS\020\002\022\017\n\013MS_CANSpeed\020\003*U\n\026StaticNavigationSource\022\017\n\013SN_Movement\020\000\022\017\n\013SN_Ignition\020\001\022\n\n\006SN_GPS\020\002\022\r\n\tSN_Custom\020\003*)\n\bGNSSMode\022\007\n\003All\020\000\022\013\n\007GLONASS\020\001\022\007\n\003GPS\020\002*L\n\023TimeSynchronization\022\013\n\007TS_None\020\000\022\n\n\006TS_NTP\020\001\022\013\n\007TS_NITZ\020\002\022\017\n\013TS_NTP_NITZ\020\003*I\n\nCallAction\022\013\n\007Nothing\020\000\022\n\n\006HangUp\020\001\022\022\n\016ReportPosition\020\002\022\016\n\nAutoAnswer\020\003*2\n\013GeoZoneType\022\f\n\bCircular\020\000\022\013\n\007Polygon\020\001\022\b\n\004Line\020\002*r\n\fGeozoneState\022\021\n\rGEO_OutOfZone\020\000\022\016\n\nGEO_InZone\020\001\022\024\n\020GEO_EnteringZone\020\002\022\023\n\017GEO_LeavingZone\020\004\022\024\n\020GEO_OverSpeeding\020\b*`\n\tSleepMode\022\021\n\rSleepDisabled\020\000\022\f\n\bGpsSleep\020\001\022\r\n\tDeepSleep\020\002\022\023\n\017OnlineDeepSleep\020\003\022\016\n\nUltraSleep\020\004*P\n\nEngineMode\022\017\n\013EM_AlwaysOn\020\000\022\017\n\013EM_Ignition\020\001\022\021\n\rEM_MoveSensor\020\002\022\r\n\tEM_Custom\020\003*9\n\013RecordsMode\022\017\n\013PositionFix\020\000\022\f\n\bTimeSync\020\001\022\013\n\007Allways\020\002*áL\n\tAlarmType\022\016\n\nAlarm_None\020\000\022\020\n\fAlarm_Normal\020\001\022\016\n\nAlarm_T", "ime\020\003\022\017\n\013Alarm_Angle\020\004\022\017\n\013Alarm_Speed\020\005\022\023\n\017Alarm_SleepMode\020\b\022\025\n\021Alarm_SystemReset\020\t\022\022\n\016Alarm_Ignition\020\n\022\022\n\016Alarm_Movement\020\013\022\022\n\016Alarm_DataMode\020\f\022\024\n\020Alarm_GnssStatus\020\024\022\022\n\016Alarm_GnssHDOP\020\025\022\022\n\016Alarm_GnssPDOP\020\026\022\033\n\027Alarm_GnssJammingStatus\020\027\022\031\n\025Alarm_GnssDataJumping\020\030\022\023\n\017Alarm_GsmSignal\020\036\022\023\n\017Alarm_GsmCellId\020\037\022\025\n\021Alarm_GsmAreaCode\020 \022\025\n\021Alarm_GsmOperator\020!\022\030\n\024Alarm_GsmTemperature\020\"\022\032\n\026Alarm_GsmJammingStatus\020#\022\031\n\025Alarm_ExternalVoltage\020(\022\030\n\024Alarm_BatteryVoltage\020)\022\030\n\024Alarm_BatteryCurrent\020*\022\027\n\023Alarm_TotalOdometer\0202\022\022\n\016Alarm_Odometer\0203\022\026\n\022Alarm_EngineOnTime\0204\022\033\n\027Alarm_EngineOnTimeDelta\0205\022\024\n\020Alarm_IdlingTime\0206\022\031\n\025Alarm_IdlingTimeDelta\0207\022\033\n\027Alarm_SpeedSensor_Speed\020<\022\036\n\032Alarm_SpeedSensor_Distance\020=\022#\n\037Alarm_SpeedSensor_TotalDistance\020>\022\036\n\032Alarm_SpeedSensor_MaxSpeed\020?\022\"\n\036Alarm_SpeedSensor_GPSSpeedDiff\020@\022\027\n\023Alarm_DigitalInput1\020F\022\027\n\023Alarm_DigitalInput2\020G\022\025\n\021Alarm_PowerSupply\020H\022\027\n\023Alarm_DigitalInput3\020I\022\033\n\027Alarm_VehicleConnection\020O\022\033\n\027Alarm_DigitalInput1Time\020P\022 \n\034Alarm_DigitalInput1TimeDelta\020Q\022\033\n\027Alarm_DigitalInput2Time\020R\022 \n\034Alarm_DigitalInput2TimeDelta\020S\022\031\n\025Alarm_PowerSupplyTime\020T\022\036\n\032Alarm_PowerSupplyTimeDelta\020U\022\033\n\027Alarm_DigitalInput3Time\020V\022 \n\034Alarm_DigitalInput3TimeDelta\020W\022\030\n\024Alarm_DigitalOutput1\020Z\022\030\n\024Alarm_DigitalOutput2\020[\022\026\n\022Alarm_AnalogInput1\020d\022\026\n\022Alarm_AnalogInput2\020e\022\026\n\022Alarm_AnalogInput3\020f\022\017\n\013Alarm_AxisX\020n\022\017\n\013Alarm_AxisY\020o\022\017\n\013Alarm_AxisZ\020p\022\027\n\022Alarm_ECO_MaxSpeed\020\001\022\"\n\035Alarm_ECO_NormalSpeedDistance\020\001\022'\n\"Alarm_ECO_NormalSpeedTotalDistance\020\001\022\037\n\032Alarm_ECO_NormalSpeedTimer\020\001\022$\n\037Alarm_ECO_NormalSpeedTotalTimer\020\001\022#\n\036Alarm_ECO_OverSpeedingDistance\020\001\022(\n#Alarm_ECO_OverSpeedingTotalDistance\020\001\022 \n\033Alarm_ECO_OverSpeedingTimer\020\001\022%\n Alarm_ECO_OverSpeedingTotalTimer\020\001\022\025\n\020Alarm_ECO_MaxRPM\020\001\022#\n\036Alarm_ECO_RPMGreenBandDistance\020 \001\022(\n#Alarm_ECO_RPMGreenBandTotalDistance\020¡\001\022 \n\033Alarm_ECO_RPMGreenBandTimer\020¢\001\022%\n Alarm_ECO_RPMGreenBandTotalTimer\020£\001\022\036\n\031Alarm_ECO_OverRPMDistance\020¤\001\022#\n\036Alarm_ECO_OverRPMTotalDistance\020¥\001\022\033\n\026Alarm_ECO_OverRPMTimer\020¦\001\022 \n\033Alarm_ECO_OverRPMTotalTimer\020§\001\022\032\n\025Alarm_ECO_IdlingEvent\020ª\001\022!\n\034Alarm_ECO_CruiseControlTimer\020«\001\022&\n!Alarm_ECO_CruiseControlTotalTimer\020¬\001\022$\n\037Alarm_ECO_CruiseControlDistance\020­\001\022)\n$Alarm_ECO_CruiseControlTotalDistance\020®\001\022\037\n\032Alarm_ECO_UnderRPMDistance\020¯\001\022$\n\037Alarm_ECO_UnderRPMTotalDistance\020°\001\022\034\n\027Alarm_ECO_UnderRPMTimer\020±\001\022!\n\034Alarm_ECO_UnderRPMTotalTimer\020²\001\022\033\n\026Alarm_ECO_BreakCounter\020´\001\022 \n\033Alarm_ECO_HarshBreakCounter\020µ\001\022\"\n\035Alarm_ECO_ExtremeBreakCounter\020¶\001\022'\n\"Alarm_ECO_HarshAccelerationCounter\020·\001\022\037\n\032Alarm_ECO_CorneringCounter\020¸\001\022\031\n\024Alarm_ECO_TotalBreak\020¹\001\022\036\n\031Alarm_ECO_TotalHarshBreak\020º\001\022 \n\033Alarm_ECO_TotalExtremeBreak\020»\001\022%\n Alarm_ECO_TotalHarshAcceleration\020¼\001\022\035\n\030Alarm_ECO_TotalCornering\020½\001\022\023\n\016Alarm_GeoZone1\020È\001\022\023\n\016Alarm_GeoZone2\020É\001\022\023\n\016Alarm_GeoZone3\020Ê\001\022\023\n\016Alarm_GeoZone4\020Ë\001\022\023\n\016Alarm_GeoZone5\020Ì\001\022\023\n\016Alarm_GeoZone6\020Í\001\022\023\n\016Alarm_GeoZone7\020Î\001\022\023\n\016Alarm_GeoZone8\020Ï\001\022\023\n\016Alarm_GeoZone9\020Ð\001\022\024\n\017Alarm_GeoZone10\020Ñ\001\022\024\n\017Alarm_GeoZone11\020Ò\001\022\024\n\017Alarm_GeoZone12\020Ó\001\022\024\n\017Alarm_GeoZone13\020Ô\001\022\024\n\017Alarm_GeoZone14\020Õ\001\022\024\n\017Alarm_GeoZone15\020Ö\001\022\024\n\017Alarm_GeoZone16\020×\001\022\024\n\017Alarm_GeoZone17\020Ø\001\022\024\n\017Alarm_GeoZone18\020Ù\001\022\024\n\017Alarm_GeoZone19\020Ú\001\022\024\n\017Alarm_GeoZone20\020Û\001\022\024\n\017Alarm_GeoZone21\020Ü\001\022\024\n\017Alarm_GeoZone22\020Ý\001\022\024\n\017Alarm_GeoZone23\020Þ\001\022\024\n\017Alarm_GeoZone24\020ß\001\022\024\n\017Alarm_GeoZone25\020à\001\022\024\n\017Alarm_GeoZone26\020á\001\022\024\n\017Alarm_GeoZone27\020â\001\022\024\n\017Alarm_GeoZone28\020ã\001\022\024\n\017Alarm_GeoZone29\020ä\001\022\024\n\017Alarm_GeoZone30\020å\001\022\024\n\017Alarm_GeoZone31\020æ\001\022\024\n\017Alarm_GeoZone32\020ç\001\022\024\n\017Alarm_GeoZone33\020è\001\022\024\n\017Alarm_GeoZone34\020é\001\022\024\n\017Alarm_GeoZone35\020ê\001\022\024\n\017Alarm_GeoZone36\020ë\001\022\024\n\017Alarm_GeoZone37\020ì\001\022\024\n\017Alarm_GeoZone38\020í\001\022\024\n\017Alarm_GeoZone39\020î\001\022\024\n\017Alarm_GeoZone40\020ï\001\022\024\n\017Alarm_GeoZone41\020ð\001\022\024\n\017Alarm_GeoZone42\020ñ\001\022\024\n\017Alarm_GeoZone43\020ò\001\022\024\n\017Alarm_GeoZone44\020ó\001\022\024\n\017Alarm_GeoZone45\020ô\001\022\024\n\017Alarm_GeoZone46\020õ\001\022\024\n\017Alarm_GeoZone47\020ö\001\022\024\n\017Alarm_GeoZone48\020÷\001\022\024\n\017Alarm_GeoZone49\020ø\001\022\024\n\017Alarm_GeoZone50\020ù\001\022\017\n\nAlarm_Trip\020¬\002\022\024\n\017Alarm_Trip_Time\020­\002\022\030\n\023Alarm_Trip_Distance\020®\002\022\022\n\rAlarm_Service\020Ê\002\022\031\n\024Alarm_CrashDetection\020Ô\002\022\023\n\016Alarm_DriverID\020Þ\002\022\035\n\030Alarm_TemperatureSensor1\020\003\022 \n\033Alarm_TemperatureSensor1_ID\020\003\022\035\n\030Alarm_TemperatureSensor2\020\003\022 \n\033Alarm_TemperatureSensor2_ID\020\003\022\035\n\030Alarm_TemperatureSensor3\020\003\022 \n\033Alarm_TemperatureSensor3_ID\020\003\022\032\n\025Alarm_HumiditySensor1\020\003\022\025\n\020Alarm_TiltStatus\020ê\003\022\030\n\023Alarm_OBD_EngineRPM\020ô\003\022\035\n\030Alarm_OBD_BatteryVoltage\020õ\003\022'\n\"Alarm_OBD_EngineCoolantTemperature\020ö\003\022\033\n\026Alarm_OBD_VehicleSpeed\020÷\003\022\034\n\027Alarm_OBD_TotalDistance\020ø\003\022\027\n\022Alarm_OBD_FuelRate\020ù\003\022\034\n\027Alarm_OBD_TotalFuelUsed\020ú\003\022#\n\036Alarm_OBD_IntakeAirTemperature\020û\003\022-\n(Alarm_OBD_IntakeManifoldAbsolutePressure\020ü\003\022'\n\"Alarm_OBD_MalfunctionIndicatorLamp\020¦\004\022&\n!Alarm_DiagnosticTroubleCodesCount\020§\004\022#\n\036Alarm_OBD_CalculatedEngineLoad\020¨\004\022\036\n\031Alarm_OBD_MassAirFlowRate\020©\004\022\037\n\032Alarm_OBD_ThrottlePosition\020ª\004\022&\n!Alarm_OBD_RunTimeSinceEngineStart\020«\004\022!\n\034Alarm_OBD_FuelTankLevelInput\020¬\004\0220\n+Alarm_OBD_DistanceTraveledSinceCodesCleared\020­\004\022(\n#Alarm_OBD_AbsoluteThrottlePositionD\020®\004\022\037\n\032Alarm_OBD_TimeRunWithMILOn\020¯\004\022#\n\036Alarm_OBD_EngineOilTemperature\020°\004\022 \n\033Alarm_OBD_FuelSystem1Status\020±\004\022 \n\033Alarm_OBD_FuelSystem2Status\020²\004\022#\n\036Alarm_OBD_OxygenSensor1Voltage\020³\004\022-\n(Alarm_OBD_OxygenSensor1ShortTermFuelTrim\020´\004\022#\n\036Alarm_OBD_OxygenSensor2Voltage\020µ\004\022-\n(Alarm_OBD_OxygenSensor2ShortTermFuelTrim\020¶\004\022#\n\036Alarm_OBD_OxygenSensor3Voltage\020·\004\022-\n(Alarm_OBD_OxygenSensor3ShortTermFuelTrim\020¸\004\022#\n\036Alarm_OBD_OxygenSensor4Voltage\020¹\004\022-\n(Alarm_OBD_OxygenSensor4ShortTermFuelTrim\020º\004\022+\n&Alarm_CANBus_Tachograph1_WorkingState1\020¼\005\022+\n&Alarm_CANBus_Tachograph1_WorkingState2\020½\005\022+\n&Alarm_CANBus_Tachograph1_VehicleMotion\020¾\005\0224\n/Alarm_CANBus_Tachograph1_Driv_1_Time_Rel_States\020¿\005\022*\n%Alarm_CANBus_Tachograph1_Driver1_Card\020À\005\022.\n)Alarm_CANBus_Tachograph1_VehicleOverspeed\020Á\005\0224\n/Alarm_CANBus_Tachograph1_Driv_2_Time_Rel_States\020Â\005\022*\n%Alarm_CANBus_Tachograph1_Driver2_Card\020Ã\005\022)\n$Alarm_CANBus_Tachograph1_SystemEvent\020Ä\005\0221\n,Alarm_CANBus_Tachograph1_HandlingInformation\020Å\005\0223\n.Alarm_CANBus_Tachograph1_TachographPerformance\020Æ\005\0220\n+Alarm_CANBus_Tachograph1_DirectionIndicator\020Ç\005\022*\n%Alarm_CANBus_Tachograph1_VehicleSpeed\020È\005\022=\n8Alarm_CANBus_EngineTemperature1_EngineCoolantTemperature\020É\005\022A\n<Alarm_CANBus_ElectronicEngineController1_ActualEnginePercent\020Ê\005\0229\n4Alarm_CANBus_ElectronicEngineController1_EngineSpeed\020Ë\005\022.\n)Alarm_CANBus_EngineHours_EngineTotalHours\020Ì\005\0226\n1Alarm_CANBus_VehicleDistance_TotalVehicleDistance\020Í\005\022=\n8Alarm_CANBus_HighResolutionFuelConsumption_TotalFuelUsed\020Î\005\022(\n#Alarm_CANBus_DashDisplay_FuelLevel1\020Ï\005\0229\n4Alarm_CANBus_AmbientConditions_AmbientAirTemperature\020Ð\005\022&\n!Alarm_CANBus_FuelEconomy_FuelRate\020Ñ\005\0226\n1Alarm_CANBus_FuelEconomy_InstantaneousFuelEconomy\020Ò\005\022D\n?Alarm_CANBus_AirSupplyPressure_ServiceBrakeAirPressureCircuit_1\020Ó\005\022D\n?Alarm_CANBus_AirSupplyPressure_ServiceBrakeAirPressureCircuit_2\020Ô\005\022M\nHAlarm_CANBus_AftertreatmentDieselExhaustFluidTankInformation_Tank1_Level\020Õ\005\022Q\nLAlarm_CANBus_TruckBus_ElectronicEngineController2_AcceleratorPedalPosition_1\020æ\005\022H\nCAlarm_CANBus_TruckBus_ElectronicEngineController2_EnginePercentLoad\020ç\005\0221\n,Alarm_CANBus_Truck_VehicleWeight_AxleWeight1\020è\005\0221\n,Alarm_CANBus_Truck_VehicleWeight_AxleWeight2\020é\005\0221\n,Alarm_CANBus_Truck_VehicleWeight_AxleWeight3\020ê\005\022:\n5Alarm_CANBus_Truck_ServiceInformation_ServiceDistance\020ë\005\0228\n3Alarm_CANBus_Truck_PTODriveEngagement_PTOEngageStat\020ì\005\022N\nIAlarm_CANBus_Truck_CombinationVehicleWeight_GrossCombinationVehicleWeight\020í\005\022N\nIAlarm_CANBus_TruckBus_Electronic_Retarder_Controller_1_RetarderTorqueMode\020î\005\022M\nHAlarm_CANBus_TruckBus_Electronic_Retarder_Controller_1_RetarderSelection\020ï\005\022/\n*Alarm_CANBus_Bus_DoorControl1_DoorPosition\020ð\005\0225\n0Alarm_CANBus_Bus_DoorControl1_RampWheelChairlift\020ñ\005\022/\n*Alarm_CANBus_Bus_DoorControl1_DoorsStatus2\020ò\005\022\"\n\035Alarm_CANBus_Bus_DoorControl2\020ó\005\0229\n4Alarm_CANBus_BrakeLiningRemaining_AxleFrontLeftWheel\020ô\005\022:\n5Alarm_CANBus_BrakeLiningRemaining_AxleFrontRightWheel\020õ\005\0229\n4Alarm_CANBus_BrakeLiningRemaining_AxleRear1LeftWheel\020ö\005\022:\n5Alarm_CANBus_BrakeLiningRemaining_AxleRear1RightWheel\020÷\005\0229\n4Alarm_CANBus_BrakeLiningRemaining_AxleRear2LeftWheel\020ø\005\022:\n5Alarm_CANBus_BrakeLiningRemaining_AxleRear2RightWheel\020ù\005\0229\n4Alarm_CANBus_BrakeLiningRemaining_AxleRear3LeftWheel\020ú\005\022:\n5Alarm_CANBus_BrakeLiningRemaining_AxleRear3RightWheel\020û\005\022(\n#Alarm_CANBus_TruckBus_CruiseControl\020\006\0227\n2Alarm_CANBus_Bus_AlternatorSpeed_AlternatorStatus1\020\006\0227\n2Alarm_CANBus_Bus_AlternatorSpeed_AlternatorStatus2\020\006\0227\n2Alarm_CANBus_Bus_AlternatorSpeed_AlternatorStatus3\020\006\0227\n2Alarm_CANBus_Bus_AlternatorSpeed_AlternatorStatus4\020\006\022D\n?Alarm_CANBus_Bus_ElectronicTransmissionController2_SelectedGear\020\006\022C\n>Alarm_CANBus_Bus_ElectronicTransmissionController2_CurrentGear\020\006\0229\n4Alarm_CANBus_Bus_AirSuspensionControl4_FrontAxleLeft\020\006\022:\n5Alarm_CANBus_Bus_AirSuspensionControl4_FrontAxleRight\020\006\0228\n3Alarm_CANBus_Bus_AirSuspensionControl4_RearAxleLeft\020\006\0229\n4Alarm_CANBus_Bus_AirSuspensionControl4_RearAxleright\020\006\022(\n#Alarm_CANBus_DashDisplay_FuelLevel2\020\006\022>\n9Alarm_CANBus_ElectronicBrakeController_BrakePedalPosition\020\006\0226\n1Alarm_CANBus_FuelConsumptionGaseous_TotalFuelUsed\020\006\022G\nBAlarm_CANBus_TruckBus_CruiseControlVehicleSpeed_ParkingBrakeSwitch\020\006\022D\n?Alarm_CANBus_TruckBus_CruiseControlVehicleSpeed_WheelBasedSpeed\020\006\022H\nCAlarm_CANBus_TruckBus_CruiseControlVehicleSpeed_CruiseControlActive\020 \006\022@\n;Alarm_CANBus_TruckBus_CruiseControlVehicleSpeed_BrakeSwitch\020¡\006\022A\n<Alarm_CANBus_TruckBus_CruiseControlVehicleSpeed_ClutchSwitch\020¢\006\022=\n8Alarm_CANBus_TruckBus_CruiseControlVehicleSpeed_PtoState\020£\006\022H\nCAlarm_CANBus_TruckBus_CruiseControlVehicleSpeed_CruiseControlStates\020¤\006\022M\nHAlarm_CANBus_Bus_VehicleElectricalPower_HybridBatteryPackRemainingCharge\020¥\006\022H\nCAlarm_CANBus_Bus_VehicleDynamicStabilityControl2_SteeringWheelAngle\020¦\006\0227\n2Alarm_CANBus_ElectronicEngineController14_FuelType\020§\006\0229\n4Alarm_CANBus_EngineFluidLevelPressure_EngineOilLevel\020¨\006\022<\n7Alarm_CANBus_EngineFluidLevelPressure_EngineOilPressure\020©\006\0227\n2Alarm_CANBus_EngineFluidLevelPressure_CoolantLevel\020ª\006\022 \n\033Alarm_CANBus_TellTaleStatus\020«\006\0225\n0Alarm_CANBus_FuelConsumption_EngineTotalFuelUsed\020¬\006\0221\n,Alarm_CANBus_Truck_VehicleWeight_AxleWeight4\020­\006*u\n\tEventType\022\016\n\nMonitoring\020\000\022\n\n\006OnExit\020\001\022\016\n\nOnEntrance\020\002\022\n\n\006OnBoth\020\003\022\017\n\013OnHystersis\020\004\022\f\n\bOnChange\020\005\022\021\n\rOnDeltaChange\020\006*A\n\bPriority\022\013\n\007PR_None\020\000\022\n\n\006PR_Low\020\001\022\013\n\007PR_High\020\002\022\017\n\013PR_SendData\020\003*U\n\021DigitalOutputName\022\026\n\022DigitalOutput_None\020\000\022\023\n\017DigitalOutput_1\020\001\022\023\n\017DigitalOutput_2\020\002*p\n\034OverSpeedingDeactivationMode\022(\n$OverSpeedingDeactivationMode_Timeout\020\000\022&\n\"OverSpeedingDeactivationMode_Speed\020\001*G\n\027DriverRegistration_Mode\022\023\n\017DRMode_Disabled\020\000\022\027\n\023DRMode_Registration\020\001*S\n!DriverRegistration_Authentication\022\027\n\023DRAuth_UnAuthorized\020\000\022\025\n\021DRAuth_Authorized\020\001*K\n\rBluetoothMode\022\017\n\013BM_Disabled\020\000\022\023\n\017BM_EnableHidden\020\001\022\024\n\020BM_EnableVisible\020\002*h\n\025BluetoothSecurityMode\022\022\n\016BSMode_PINOnly\020\000\022\026\n\022BSMode_PIN_MACList\020\001\022\022\n\016BSMode_MACList\020\002\022\017\n\013BSMode_None\020\003*s\n\037BluetoothExternalConnectionMode\022\020\n\fBECMode_None\020\000\022\025\n\021BECMode_HandsFree\020\001\022\021\n\rBECMode_OBDII\020\002\022\024\n\020BECMode_DataLink\020\003*+\n\016ServerProtocol\022\007\n\003TCP\020\000\022\007\n\003UDP\020\001\022\007\n\003SSL\020\002*[\n\022AuthenticationMode\022\027\n\023Authentication_IMEI\020\000\022,\n(Authentication_AuthenticationCodeAndIMEI\020\001*¾\001\n\nTiltStatus\022\016\n\nTS_Unknown\020\000\022\021\n\rTS_BoardReset\020Z\022\022\n\016TS_OffsetReset\020[\022\021\n\rTS_NormalTilt\020d\022\036\n\032TS_AuthorizedTiltUnloading\020e\022\020\n\fTS_PTOActive\020f\022\022\n\016TS_InvalidTilt\020g\022 \n\034TS_UnauthorizedTiltUnloading\020h*Ø\002\n\fECUInterface\022\020\n\fECU_Disabled\020\000\022\f\n\bOBD_Auto\020\001\022\037\n\033OBD_KLine_ISO14230_KWP_Fast\020\002\022 \n\034OBD_KLine_ISO14230_KWP_5Baud\020\003\022\025\n\021OBD_KLine_ISO9141\020\004\022\036\n\032OBD_CAN_ISO15765_11bit_500\020\005\022\036\n\032OBD_CAN_ISO15765_11bit_250\020\006\022\036\n\032OBD_CAN_ISO15765_29bit_500\020\007\022\036\n\032OBD_CAN_ISO15765_29bit_250\020\b\022\026\n\022OBD_KLine_Siemense\020\t\022\016\n\nCANBus_FMS\020\024\022\023\n\017CANBus_BenzAxor\020\025\022\021\n\rCANBus_Scania\020\026*B\n\017FuelConsumption\022\017\n\013FC_Disabled\020\000\022\017\n\013FC_Gasoline\020\001\022\r\n\tFC_Diesel\020\002*C\n\016CrashTraceType\022\022\n\016Trace_Disabled\020\000\022\017\n\013Trace_Point\020\001\022\f\n\bTrace_IO\020\002*5\n\016NumberOperator\022\t\n\005Equal\020\000\022\013\n\007Greater\020\001\022\013\n\007Smaller\020\002*$\n\021ConditionOperator\022\007\n\003AND\020\000\022\006\n\002OR\020\001*Æ\001\n\016SerialBaudrate\022\020\n\fSBaud_115200\020\000\022\017\n\013SBaud_57600\020\001\022\017\n\013SBaud_38400\020\002\022\017\n\013SBaud_28800\020\003\022\017\n\013SBaud_19200\020\004\022\017\n\013SBaud_14400\020\005\022\016\n\nSBaud_9600\020\006\022\016\n\nSBaud_4800\020\007\022\016\n\nSBaud_2400\020\b\022\016\n\nSBaud_1200\020\t\022\r\n\tSBaud_600\020\nB\017Z\rdolphindeviceb\006proto3" }; descriptor = Descriptors.FileDescriptor.internalBuildGeneratedFileFrom(descriptorData, new Descriptors.FileDescriptor[0]); internal_static_org_traccar_protobuf_dolphin_Config_Config_descriptor = getDescriptor().getMessageTypes().get(0); internal_static_org_traccar_protobuf_dolphin_Config_Config_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_org_traccar_protobuf_dolphin_Config_Config_descriptor, new String[] { "SerialPortBaudrate", "DoNotResetDeviceOnProblems", "Password", "Movement", "MovementSensorSensitivity", "Sleep", "SleepTimeout", "EngineOn", "EngineOnDIN1", "EngineOnDIN2", "EngineOnMovementSensor", "EngineOnPowerSupplyAvailable", "EngineOnGpsSpeed", "EngineOnCanRPM", "EngineOnMinActiveStateDuration", "EngineOnOperator", "EngineOnMovementStartDelay", "EngineOnMovementStopDelay", "EngineOnExternalVoltage", "LedIndication", "GNSS", "StaticNavigationEnabled", "StaticNavigationSource", "RecordsSaveAndSendMode", "TimeSynchronization", "NTPServer", "NTPInterval", "SleepNoPowerTimeout", "SendPing", "TimetableMode", "TimetableData", "Service1", "Service2", "Service3", "AnalogInput1AverageTime", "AnalogInput2AverageTime", "AnalogInput3AverageTime", "BluetoothRadioMode", "BluetoothName", "BluetoothPIN", "BluetoothSecurityMode", "BluetoothPowerDownOnSleep", "BluetoothExternalConnectionMode", "BluetoothExternalDeviceMAC", "BluetoothExternalDeviceName", "BluetoothExternalDevicePIN", "BluetoothAuthorizedMAC1", "BluetoothAuthorizedMAC2", "BluetoothAuthorizedMAC3", "BluetoothAuthorizedMAC4", "BluetoothAuthorizedMAC5", "GPRSContextEnabled", "GPRSApnName", "GPRSApnUsername", "GPRSApnPassword", "GPRSCHAPAuthentication", "GPRSLinkTimeout", "GPRSResponseTimeout", "GPRSServerAddress", "GPRSServerPort", "GPRSServerProtocol", "GPRSBackupServerAddress", "GPRSBackupServerPort", "GPRSBackupServerProtocol", "GPRSSSLClientAuthentication", "GPRSDataCompression", "AuthenticationMode", "AuthenticationCode", "FirmwareUpdateEnabled", "FirmwareUpdateChannel", "FirmwareUpdateCheckInterval", "FirmwareUpdateServerAddress", "FirmwareUpdateServerPort", "FirmwareUpdateServerProtocol", "FirmwareUpdateLinkTimeout", "FirmwareUpdateResponseTimeout", "SMSDataSending", "SMSDataSendNumber", "SMSPassword", "SMSEventTimeZone", "CallIncommingCallAction", "CallDigitalInput1CallTo", "CallDigitalInput2CallTo", "CallDigitalInput3CallTo", "AuthorizedNumber1", "AuthorizedNumber2", "AuthorizedNumber3", "AuthorizedNumber4", "AuthorizedNumber5", "AuthorizedNumber6", "AuthorizedNumber7", "AuthorizedNumber8", "AuthorizedNumber9", "AuthorizedNumber10", "GsmPredefinedNumber1", "GsmPredefinedNumber2", "GsmPredefinedNumber3", "GsmPredefinedNumber4", "GsmPredefinedNumber5", "GsmPredefinedNumber6", "GsmPredefinedNumber7", "GsmPredefinedNumber8", "GsmPredefinedNumber9", "GsmPredefinedNumber10", "RoamingOperator1", "RoamingOperator2", "RoamingOperator3", "RoamingOperator4", "RoamingOperator5", "DAQStopHomeMinPeriod", "DAQStopRoamingMinPeriod", "DAQMovingHomeMinPeriod", "DAQMovingHomeMinPathDeviation", "DAQMovingRoamingMinPeriod", "DAQMovingRoamingMinPathDeviation", "GeoZone1", "GeoZone2", "GeoZone3", "GeoZone4", "GeoZone5", "GeoZone6", "GeoZone7", "GeoZone8", "GeoZone9", "GeoZone10", "GeoZone11", "GeoZone12", "GeoZone13", "GeoZone14", "GeoZone15", "GeoZone16", "GeoZone17", "GeoZone18", "GeoZone19", "GeoZone20", "GeoZone21", "GeoZone22", "GeoZone23", "GeoZone24", "GeoZone25", "GeoZone26", "GeoZone27", "GeoZone28", "GeoZone29", "GeoZone30", "GeoZone31", "GeoZone32", "GeoZone33", "GeoZone34", "GeoZone35", "GeoZone36", "GeoZone37", "GeoZone38", "GeoZone39", "GeoZone40", "GeoZone41", "GeoZone42", "GeoZone43", "GeoZone44", "GeoZone45", "GeoZone46", "GeoZone47", "GeoZone48", "GeoZone49", "GeoZone50", "TripStartSpeed", "TripUseIgnition", "TripParkDetectionTimeout", "OverspeedingEnable", "OverspeedingLimit", "OverspeedingActivationSpeed", "OverspeedingDeactivationMode", "OverspeedingDeactivationValue", "USSDEnabled", "USSDID", "USSDInterval", "USSDCode", "SpeedSensorKmPulseCount", "CrashDetectionEnabled", "CrashDetectionLevel1Threshold", "CrashDetectionLevel2Threshold", "CrashDetectionLevel3Threshold", "CrashDetectionTrace", "CrashDetectionDuration", "CrashDetectionSendSMSTo", "CrashDetectionSMSText", "CrashDetectionCallTo", "RolloverDetectionEnabled", "DriverRegistrationMode", "DriverRegistrationAuthentication", "DriverRegistrationDeregistrationTimeout", "DriverRegistrationBuzzerDigitalOutput", "DriverRegistrationImmobilizerDigitalOutput", "DriverRegistrationImmobilizerActiveLow", "DriverRegistrationAuthorizedID1", "DriverRegistrationAuthorizedID2", "DriverRegistrationAuthorizedID3", "DriverRegistrationAuthorizedID4", "DriverRegistrationAuthorizedID5", "DriverRegistrationAuthorizedID6", "DriverRegistrationAuthorizedID7", "DriverRegistrationAuthorizedID8", "DriverRegistrationAuthorizedID9", "DriverRegistrationAuthorizedID10", "ECODriveActive", "ECOOverSpeedingLimit", "ECORPMGreenBandLowLimit", "ECORPMGreenBandHighLimit", "ECOHarshBreakingLimit", "ECOExtremeBreakingLimit", "ECOHarshAccelerationLimit", "ECOCorneringLimit", "ECOIdlingDelay", "ECOIdlingSpeed", "ECOCruiseControlSpeed", "ECOCalculateOnlyWhenEngineOn", "ECOCustomEngineSource", "ECOEngineOnDIN1", "ECOEngineOnDIN2", "ECOEngineOnMovementSensor", "ECOEngineOnPowerSupplyAvailable", "ECOEngineOnCanRPMLow", "ECOEngineOnCanRPMHigh", "ECOEngineOnOperator", "ECOEngineOnExternalVoltage", "ECUInterface", "FuelConsumptionEnabled", "FuelConsumptionEngineDisplacement", "FuelConsumptionCylinders", "FuelConsumptionInjectorPerformance", "FuelConsumptionVolumetricEfficiently", "FaultCodesReadTime", "SIPAADLinkTimeout", "SIPAADResponseTimeout", "SIPAADServerAddress", "SIPAADServerPort", "SIPAADServerProtocol", "SIPAADSSLClientAuthentication", "IOTime", "IOAngle", "IOSpeed", "IOSleepMode", "IOIgnition", "IOMovement", "IODataMode", "IOGnssStatus", "IOGnssHDOP", "IOGnssPDOP", "IOGnssJammingStatus", "IOGsmSignal", "IOGsmCellId", "IOGsmAreaCode", "IOGsmOperator", "IOGsmTemperature", "IOGsmJammingStatus", "IOExternalVoltage", "IOBatteryVoltage", "IOBatteryCurrent", "IOTotalOdometer", "IOOdometer", "IOEngineOnTime", "IOEngineOnTimeDelta", "IOIdlingTime", "IOIdlingTimeDelta", "IOSpeedSensorSpeed", "IOSpeedSensorDistance", "IOSpeedSensorTotalDistance", "IOSpeedSensorMaxSpeed", "IOSpeedSensorGPSSpeedDiff", "IODigitalInput1", "IODigitalInput2", "IOPowerSupply", "IODigitalInput3", "IOVehicleConnection", "IODigitalInput1Time", "IODigitalInput1TimeDelta", "IODigitalInput2Time", "IODigitalInput2TimeDelta", "IOPowerSupplyTime", "IOPowerSupplyTimeDelta", "IODigitalInput3Time", "IODigitalInput3TimeDelta", "IODigitalOutput1", "IODigitalOutput2", "IOAnalogInput1", "IOAnalogInput2", "IOAnalogInput3", "IOAxisX", "IOAxisY", "IOAxisZ", "IOECOMaxSpeed", "IOECONormalSpeedDistance", "IOECONormalSpeedTotalDistance", "IOECONormalSpeedTimer", "IOECONormalSpeedTotalTimer", "IOECOOverSpeedingDistance", "IOECOOverSpeedingTotalDistance", "IOECOOverSpeedingTimer", "IOECOOverSpeedingTotalTimer", "IOECOMaxRPM", "IOECORPMGreenBandDistance", "IOECORPMGreenBandTotalDistance", "IOECORPMGreenBandTimer", "IOECORPMGreenBandTotalTimer", "IOECOOverRPMDistance", "IOECOOverRPMTotalDistance", "IOECOOverRPMTimer", "IOECOOverRPMTotalTimer", "IOECOIdlingEvent", "IOECOCruiseControlTimer", "IOECOCruiseControlTotalTimer", "IOECOCruiseControlDistance", "IOECOCruiseControlTotalDistance", "IOECOUnderRPMDistance", "IOECOUnderRPMTotalDistance", "IOECOUnderRPMTimer", "IOECOUnderRPMTotalTimer", "IOECOBreakCounter", "IOECOHarshBreakCounter", "IOECOExtremeBreakCounter", "IOECOHarshAccelerationCounter", "IOECOCorneringCounter", "IOECOTotalBreak", "IOECOTotalHarshBreak", "IOECOTotalExtremeBreak", "IOECOTotalHarshAcceleration", "IOECOTotalCornering", "IOTrip", "IOTripTime", "IOTripDistance", "IODriverID", "IOTemperatureSensor1", "IOTemperatureSensor1ID", "IOTemperatureSensor2", "IOTemperatureSensor2ID", "IOTemperatureSensor3", "IOTemperatureSensor3ID", "IOHumiditySensor1", "IOTiltStatus", "IOOBDEngineRPM", 
/*       */           "IOOBDBatteryVoltage", "IOOBDEngineCoolantTemperature", "IOOBDVehicleSpeed", "IOOBDTotalDistance", "IOOBDFuelRate", "IOOBDTotalFuelUsed", "IOOBDIntakeAirTemperature", "IOOBDIntakeManifoldAbsolutePressure", "IOOBDMalfunctionIndicatorLamp", "IODiagnosticTroubleCodesCount", 
/*       */           "IOOBDCalculatedEngineLoad", "IOOBDMassAirFlowRate", "IOOBDThrottlePosition", "IOOBDRunTimeSinceEngineStart", "IOOBDFuelTankLevelInput", "IOOBDDistanceTraveledSinceCodesCleared", "IOOBDAbsoluteThrottlePositionD", "IOOBDTimeRunWithMILOn", "IOOBDEngineOilTemperature", "IOOBDFuelSystem1Status", 
/*       */           "IOOBDFuelSystem2Status", "IOOBDOxygenSensor1Voltage", "IOOBDOxygenSensor1ShortTermFuelTrim", "IOOBDOxygenSensor2Voltage", "IOOBDOxygenSensor2ShortTermFuelTrim", "IOOBDOxygenSensor3Voltage", "IOOBDOxygenSensor3ShortTermFuelTrim", "IOOBDOxygenSensor4Voltage", "IOOBDOxygenSensor4ShortTermFuelTrim", "IOCANBusTachograph1WorkingState1", 
/*       */           "IOCANBusTachograph1WorkingState2", "IOCANBusTachograph1VehicleMotion", "IOCANBusTachograph1Driv1TimeRelStates", "IOCANBusTachograph1Driver1Card", "IOCANBusTachograph1VehicleOverspeed", "IOCANBusTachograph1Driv2TimeRelStates", "IOCANBusTachograph1Driver2Card", "IOCANBusTachograph1SystemEvent", "IOCANBusTachograph1HandlingInformation", "IOCANBusTachograph1TachographPerformance", 
/*       */           "IOCANBusTachograph1DirectionIndicator", "IOCANBusTachograph1VehicleSpeed", "IOCANBusEngineTemperature1EngineCoolantTemperature", "IOCANBusElectronicEngineController1ActualEnginePercent", "IOCANBusElectronicEngineController1EngineSpeed", "IOCANBusEngineHoursEngineTotalHours", "IOCANBusVehicleDistanceTotalVehicleDistance", "IOCANBusHighResolutionFuelConsumptionTotalFuelUsed", "IOCANBusDashDisplayFuelLevel1", "IOCANBusAmbientConditionsAmbientAirTemperature", 
/*       */           "IOCANBusFuelEconomyFuelRate", "IOCANBusFuelEconomyInstantaneousFuelEconomy", "IOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit1", "IOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit2", "IOCANBusAftertreatmentDieselExhaustFluidTankInformationTank1Level", "IOCANBusTruckBusElectronicEngineController2AcceleratorPedalPosition1", "IOCANBusTruckBusElectronicEngineController2EnginePercentLoad", "IOCANBusTruckVehicleWeightAxleWeight1", "IOCANBusTruckVehicleWeightAxleWeight2", "IOCANBusTruckVehicleWeightAxleWeight3", 
/*       */           "IOCANBusTruckServiceInformationServiceDistance", "IOCANBusTruckPTODriveEngagementPTOEngageStat", "IOCANBusTruckCombinationVehicleWeightGrossCombinationVehicleWeight", "IOCANBusTruckBusElectronicRetarderController1RetarderTorqueMode", "IOCANBusTruckBusElectronicRetarderController1RetarderSelection", "IOCANBusBusDoorControl1DoorPosition", "IOCANBusBusDoorControl1RampWheelChairlift", "IOCANBusBusDoorControl1DoorsStatus2", "IOCANBusBusDoorControl2", "IOCANBusBrakeLiningRemainingAxleFrontLeftWheel", 
/*       */           "IOCANBusBrakeLiningRemainingAxleFrontRightWheel", "IOCANBusBrakeLiningRemainingAxleRear1LeftWheel", "IOCANBusBrakeLiningRemainingAxleRear1RightWheel", "IOCANBusBrakeLiningRemainingAxleRear2LeftWheel", "IOCANBusBrakeLiningRemainingAxleRear2RightWheel", "IOCANBusBrakeLiningRemainingAxleRear3LeftWheel", "IOCANBusBrakeLiningRemainingAxleRear3RightWheel", "IOCANBusTruckBusCruiseControl", "IOCANBusBusAlternatorSpeedAlternatorStatus1", "IOCANBusBusAlternatorSpeedAlternatorStatus2", 
/*       */           "IOCANBusBusAlternatorSpeedAlternatorStatus3", "IOCANBusBusAlternatorSpeedAlternatorStatus4", "IOCANBusBusElectronicTransmissionController2SelectedGear", "IOCANBusBusElectronicTransmissionController2CurrentGear", "IOCANBusBusAirSuspensionControl4FrontAxleLeft", "IOCANBusBusAirSuspensionControl4FrontAxleRight", "IOCANBusBusAirSuspensionControl4RearAxleLeft", "IOCANBusBusAirSuspensionControl4RearAxleright", "IOCANBusDashDisplayFuelLevel2", "IOCANBusElectronicBrakeControllerBrakePedalPosition", 
/*       */           "IOCANBusFuelConsumptionGaseousTotalFuelUsed", "IOCANBusTruckBusCruiseControlVehicleSpeedParkingBrakeSwitch", "IOCANBusTruckBusCruiseControlVehicleSpeedWheelBasedSpeed", "IOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlActive", "IOCANBusTruckBusCruiseControlVehicleSpeedBrakeSwitch", "IOCANBusTruckBusCruiseControlVehicleSpeedClutchSwitch", "IOCANBusTruckBusCruiseControlVehicleSpeedPtoState", "IOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlStates", "IOCANBusBusVehicleElectricalPowerHybridBatteryPackRemainingCharge", "IOCANBusBusVehicleDynamicStabilityControl2SteeringWheelAngle", 
/*       */           "IOCANBusElectronicEngineController14FuelType", "IOCANBusEngineFluidLevelPressureEngineOilLevel", "IOCANBusEngineFluidLevelPressureEngineOilPressure", "IOCANBusEngineFluidLevelPressureCoolantLevel", "IOCANBusTellTaleStatus", "IOCANBusFuelConsumptionEngineTotalFuelUsed", "IOCANBusTruckVehicleWeightAxleWeight4" }); internal_static_org_traccar_protobuf_dolphin_Config_ConfigDiff_descriptor = getDescriptor().getMessageTypes().get(1); internal_static_org_traccar_protobuf_dolphin_Config_ConfigDiff_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_org_traccar_protobuf_dolphin_Config_ConfigDiff_descriptor, new String[] { "Uint32DiffItems", "Int32DiffItems", "Uint64DiffItems", "Int64DiffItems", "StringDiffItems", "BoolDiffItems" }); internal_static_org_traccar_protobuf_dolphin_Config_Uint32DiffItem_descriptor = getDescriptor().getMessageTypes().get(2); internal_static_org_traccar_protobuf_dolphin_Config_Uint32DiffItem_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_org_traccar_protobuf_dolphin_Config_Uint32DiffItem_descriptor, new String[] { "Tag", "Value" }); internal_static_org_traccar_protobuf_dolphin_Config_Int32DiffItem_descriptor = getDescriptor().getMessageTypes().get(3); internal_static_org_traccar_protobuf_dolphin_Config_Int32DiffItem_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_org_traccar_protobuf_dolphin_Config_Int32DiffItem_descriptor, new String[] { "Tag", "Value" }); internal_static_org_traccar_protobuf_dolphin_Config_Uint64DiffItem_descriptor = getDescriptor().getMessageTypes().get(4); internal_static_org_traccar_protobuf_dolphin_Config_Uint64DiffItem_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_org_traccar_protobuf_dolphin_Config_Uint64DiffItem_descriptor, new String[] { "Tag", "Value" }); internal_static_org_traccar_protobuf_dolphin_Config_Int64DiffItem_descriptor = getDescriptor().getMessageTypes().get(5); internal_static_org_traccar_protobuf_dolphin_Config_Int64DiffItem_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_org_traccar_protobuf_dolphin_Config_Int64DiffItem_descriptor, new String[] { "Tag", "Value" }); internal_static_org_traccar_protobuf_dolphin_Config_BoolDiffItem_descriptor = getDescriptor().getMessageTypes().get(6); internal_static_org_traccar_protobuf_dolphin_Config_BoolDiffItem_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_org_traccar_protobuf_dolphin_Config_BoolDiffItem_descriptor, new String[] { "Tag", "Value" }); internal_static_org_traccar_protobuf_dolphin_Config_StringDiffItem_descriptor = getDescriptor().getMessageTypes().get(7); internal_static_org_traccar_protobuf_dolphin_Config_StringDiffItem_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_org_traccar_protobuf_dolphin_Config_StringDiffItem_descriptor, new String[] { "Tag", "Value" }); internal_static_org_traccar_protobuf_dolphin_Config_GeoZone_descriptor = getDescriptor().getMessageTypes().get(8); internal_static_org_traccar_protobuf_dolphin_Config_GeoZone_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_org_traccar_protobuf_dolphin_Config_GeoZone_descriptor, new String[] { 
/*       */           "Priority", "Event", "EventOnly", "Type", "Radius", "Border", "OverSpeeding", "MaxSpeed", "SendSmsTo", "SmsText", 
/*       */           "Points" }); internal_static_org_traccar_protobuf_dolphin_Config_IO_descriptor = getDescriptor().getMessageTypes().get(9); internal_static_org_traccar_protobuf_dolphin_Config_IO_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_org_traccar_protobuf_dolphin_Config_IO_descriptor, new String[] { "Priority", "Event", "LowLevel", "HighLevel", "EventOnly", "SendSmsTo", "SmsText" }); internal_static_org_traccar_protobuf_dolphin_Config_Service_IOCondition_descriptor = getDescriptor().getMessageTypes().get(10); internal_static_org_traccar_protobuf_dolphin_Config_Service_IOCondition_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_org_traccar_protobuf_dolphin_Config_Service_IOCondition_descriptor, new String[] { "IOID", "Operator", "Value", "CalcDiff" }); internal_static_org_traccar_protobuf_dolphin_Config_Service_IOConditionGroup_descriptor = getDescriptor().getMessageTypes().get(11); internal_static_org_traccar_protobuf_dolphin_Config_Service_IOConditionGroup_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_org_traccar_protobuf_dolphin_Config_Service_IOConditionGroup_descriptor, new String[] { "Operator", "IOConditions" }); internal_static_org_traccar_protobuf_dolphin_Config_Service_StateCondition_descriptor = getDescriptor().getMessageTypes().get(12); internal_static_org_traccar_protobuf_dolphin_Config_Service_StateCondition_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_org_traccar_protobuf_dolphin_Config_Service_StateCondition_descriptor, new String[] { "ConditionOperator", "IOConditions", "IOConditionGroups" }); internal_static_org_traccar_protobuf_dolphin_Config_Service_State_descriptor = getDescriptor().getMessageTypes().get(13); internal_static_org_traccar_protobuf_dolphin_Config_Service_State_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_org_traccar_protobuf_dolphin_Config_Service_State_descriptor, new String[] { "ID", "PointCondition", "ChangeCondition" }); internal_static_org_traccar_protobuf_dolphin_Config_Service_descriptor = getDescriptor().getMessageTypes().get(14); internal_static_org_traccar_protobuf_dolphin_Config_Service_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_org_traccar_protobuf_dolphin_Config_Service_descriptor, new String[] { "ID", "States" }); }
/*    29 */   public enum MovementSource implements ProtocolMessageEnum { MS_Ignition(0),
/*       */ 
/*       */ 
/*       */     
/*    33 */     MS_Movement(1),
/*       */ 
/*       */ 
/*       */     
/*    37 */     MS_GPS(2),
/*       */ 
/*       */ 
/*       */     
/*    41 */     MS_CANSpeed(3),
/*    42 */     UNRECOGNIZED(-1);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int MS_Ignition_VALUE = 0;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int MS_Movement_VALUE = 1;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int MS_GPS_VALUE = 2;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int MS_CANSpeed_VALUE = 3;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*   100 */     private static final Internal.EnumLiteMap<MovementSource> internalValueMap = new Internal.EnumLiteMap<MovementSource>()
/*       */       {
/*       */         public DolphinConfig.MovementSource findValueByNumber(int number) {
/*   103 */           return DolphinConfig.MovementSource.forNumber(number);
/*       */         }
/*       */       };
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*   124 */     private static final MovementSource[] VALUES = values(); private final int value; public final int getNumber() { if (this == UNRECOGNIZED)
/*       */         throw new IllegalArgumentException("Can't get the number of an unknown enum value.");  return this.value; }
/*       */     public static MovementSource forNumber(int value) { switch (value) { case 0:
/*       */           return MS_Ignition;
/*       */         case 1:
/*       */           return MS_Movement;
/*       */         case 2:
/*       */           return MS_GPS;
/*       */         case 3:
/*       */           return MS_CANSpeed; }
/*       */        return null; }
/*       */     public static Internal.EnumLiteMap<MovementSource> internalGetValueMap() { return internalValueMap; }
/*       */     static {  }
/*       */     public final Descriptors.EnumValueDescriptor getValueDescriptor() { if (this == UNRECOGNIZED)
/*       */         throw new IllegalStateException("Can't get the descriptor of an unrecognized enum value.");  return getDescriptor().getValues().get(ordinal()); }
/*       */     public final Descriptors.EnumDescriptor getDescriptorForType() { return getDescriptor(); }
/*       */     public static final Descriptors.EnumDescriptor getDescriptor() { return DolphinConfig.getDescriptor().getEnumTypes().get(0); }
/*   141 */     MovementSource(int value) { this.value = value; }
/*       */      }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public enum StaticNavigationSource
/*       */     implements ProtocolMessageEnum
/*       */   {
/*   155 */     SN_Movement(0),
/*       */ 
/*       */ 
/*       */     
/*   159 */     SN_Ignition(1),
/*       */ 
/*       */ 
/*       */     
/*   163 */     SN_GPS(2),
/*       */ 
/*       */ 
/*       */     
/*   167 */     SN_Custom(3),
/*   168 */     UNRECOGNIZED(-1);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int SN_Movement_VALUE = 0;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int SN_Ignition_VALUE = 1;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int SN_GPS_VALUE = 2;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int SN_Custom_VALUE = 3;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*   226 */     private static final Internal.EnumLiteMap<StaticNavigationSource> internalValueMap = new Internal.EnumLiteMap<StaticNavigationSource>()
/*       */       {
/*       */         public DolphinConfig.StaticNavigationSource findValueByNumber(int number) {
/*   229 */           return DolphinConfig.StaticNavigationSource.forNumber(number);
/*       */         }
/*       */       };
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*   250 */     private static final StaticNavigationSource[] VALUES = values(); private final int value; public final int getNumber() { if (this == UNRECOGNIZED)
/*       */         throw new IllegalArgumentException("Can't get the number of an unknown enum value.");  return this.value; }
/*       */     public static StaticNavigationSource forNumber(int value) { switch (value) { case 0:
/*       */           return SN_Movement;
/*       */         case 1:
/*       */           return SN_Ignition;
/*       */         case 2:
/*       */           return SN_GPS;
/*       */         case 3:
/*       */           return SN_Custom; }
/*       */        return null; }
/*       */     public static Internal.EnumLiteMap<StaticNavigationSource> internalGetValueMap() { return internalValueMap; }
/*       */     static {  }
/*       */     public final Descriptors.EnumValueDescriptor getValueDescriptor() { if (this == UNRECOGNIZED)
/*       */         throw new IllegalStateException("Can't get the descriptor of an unrecognized enum value.");  return getDescriptor().getValues().get(ordinal()); }
/*       */     public final Descriptors.EnumDescriptor getDescriptorForType() { return getDescriptor(); }
/*       */     public static final Descriptors.EnumDescriptor getDescriptor() { return DolphinConfig.getDescriptor().getEnumTypes().get(1); }
/*   267 */     StaticNavigationSource(int value) { this.value = value; }
/*       */   
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public enum GNSSMode
/*       */     implements ProtocolMessageEnum
/*       */   {
/*   281 */     All(0),
/*       */ 
/*       */ 
/*       */     
/*   285 */     GLONASS(1),
/*       */ 
/*       */ 
/*       */     
/*   289 */     GPS(2),
/*   290 */     UNRECOGNIZED(-1);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int All_VALUE = 0;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int GLONASS_VALUE = 1;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int GPS_VALUE = 2;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*   343 */     private static final Internal.EnumLiteMap<GNSSMode> internalValueMap = new Internal.EnumLiteMap<GNSSMode>()
/*       */       {
/*       */         public DolphinConfig.GNSSMode findValueByNumber(int number) {
/*   346 */           return DolphinConfig.GNSSMode.forNumber(number);
/*       */         }
/*       */       };
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*   367 */     private static final GNSSMode[] VALUES = values(); private final int value; public final int getNumber() { if (this == UNRECOGNIZED)
/*       */         throw new IllegalArgumentException("Can't get the number of an unknown enum value.");  return this.value; }
/*       */     public static GNSSMode forNumber(int value) { switch (value) {
/*       */         case 0:
/*       */           return All;
/*       */         case 1:
/*       */           return GLONASS;
/*       */         case 2:
/*       */           return GPS;
/*       */       }  return null; }
/*       */     public static Internal.EnumLiteMap<GNSSMode> internalGetValueMap() { return internalValueMap; }
/*       */     static {  }
/*       */     public final Descriptors.EnumValueDescriptor getValueDescriptor() { if (this == UNRECOGNIZED)
/*       */         throw new IllegalStateException("Can't get the descriptor of an unrecognized enum value."); 
/*       */       return getDescriptor().getValues().get(ordinal()); }
/*       */     public final Descriptors.EnumDescriptor getDescriptorForType() { return getDescriptor(); }
/*       */     public static final Descriptors.EnumDescriptor getDescriptor() { return DolphinConfig.getDescriptor().getEnumTypes().get(2); }
/*   384 */     GNSSMode(int value) { this.value = value; }
/*       */   
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public enum TimeSynchronization
/*       */     implements ProtocolMessageEnum
/*       */   {
/*   398 */     TS_None(0),
/*       */ 
/*       */ 
/*       */     
/*   402 */     TS_NTP(1),
/*       */ 
/*       */ 
/*       */     
/*   406 */     TS_NITZ(2),
/*       */ 
/*       */ 
/*       */     
/*   410 */     TS_NTP_NITZ(3),
/*   411 */     UNRECOGNIZED(-1);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int TS_None_VALUE = 0;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int TS_NTP_VALUE = 1;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int TS_NITZ_VALUE = 2;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int TS_NTP_NITZ_VALUE = 3;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*   469 */     private static final Internal.EnumLiteMap<TimeSynchronization> internalValueMap = new Internal.EnumLiteMap<TimeSynchronization>()
/*       */       {
/*       */         public DolphinConfig.TimeSynchronization findValueByNumber(int number) {
/*   472 */           return DolphinConfig.TimeSynchronization.forNumber(number);
/*       */         }
/*       */       };
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*   493 */     private static final TimeSynchronization[] VALUES = values(); private final int value; public final int getNumber() { if (this == UNRECOGNIZED)
/*       */         throw new IllegalArgumentException("Can't get the number of an unknown enum value.");  return this.value; }
/*       */     public static TimeSynchronization forNumber(int value) { switch (value) { case 0:
/*       */           return TS_None;
/*       */         case 1:
/*       */           return TS_NTP;
/*       */         case 2:
/*       */           return TS_NITZ;
/*       */         case 3:
/*       */           return TS_NTP_NITZ; }
/*       */        return null; }
/*       */     public static Internal.EnumLiteMap<TimeSynchronization> internalGetValueMap() { return internalValueMap; }
/*       */     static {  }
/*       */     public final Descriptors.EnumValueDescriptor getValueDescriptor() { if (this == UNRECOGNIZED)
/*       */         throw new IllegalStateException("Can't get the descriptor of an unrecognized enum value.");  return getDescriptor().getValues().get(ordinal()); }
/*       */     public final Descriptors.EnumDescriptor getDescriptorForType() { return getDescriptor(); }
/*       */     public static final Descriptors.EnumDescriptor getDescriptor() { return DolphinConfig.getDescriptor().getEnumTypes().get(3); }
/*   510 */     TimeSynchronization(int value) { this.value = value; }
/*       */   
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public enum CallAction
/*       */     implements ProtocolMessageEnum
/*       */   {
/*   524 */     Nothing(0),
/*       */ 
/*       */ 
/*       */     
/*   528 */     HangUp(1),
/*       */ 
/*       */ 
/*       */     
/*   532 */     ReportPosition(2),
/*       */ 
/*       */ 
/*       */     
/*   536 */     AutoAnswer(3),
/*   537 */     UNRECOGNIZED(-1);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Nothing_VALUE = 0;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int HangUp_VALUE = 1;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int ReportPosition_VALUE = 2;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int AutoAnswer_VALUE = 3;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*   595 */     private static final Internal.EnumLiteMap<CallAction> internalValueMap = new Internal.EnumLiteMap<CallAction>()
/*       */       {
/*       */         public DolphinConfig.CallAction findValueByNumber(int number) {
/*   598 */           return DolphinConfig.CallAction.forNumber(number);
/*       */         }
/*       */       };
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*   619 */     private static final CallAction[] VALUES = values(); private final int value; public final int getNumber() { if (this == UNRECOGNIZED)
/*       */         throw new IllegalArgumentException("Can't get the number of an unknown enum value.");  return this.value; }
/*       */     public static CallAction forNumber(int value) { switch (value) { case 0:
/*       */           return Nothing;
/*       */         case 1:
/*       */           return HangUp;
/*       */         case 2:
/*       */           return ReportPosition;
/*       */         case 3:
/*       */           return AutoAnswer; }
/*       */        return null; }
/*       */     public static Internal.EnumLiteMap<CallAction> internalGetValueMap() { return internalValueMap; }
/*       */     static {  }
/*       */     public final Descriptors.EnumValueDescriptor getValueDescriptor() { if (this == UNRECOGNIZED)
/*       */         throw new IllegalStateException("Can't get the descriptor of an unrecognized enum value.");  return getDescriptor().getValues().get(ordinal()); }
/*       */     public final Descriptors.EnumDescriptor getDescriptorForType() { return getDescriptor(); }
/*       */     public static final Descriptors.EnumDescriptor getDescriptor() { return DolphinConfig.getDescriptor().getEnumTypes().get(4); }
/*   636 */     CallAction(int value) { this.value = value; }
/*       */   
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public enum GeoZoneType
/*       */     implements ProtocolMessageEnum
/*       */   {
/*   650 */     Circular(0),
/*       */ 
/*       */ 
/*       */     
/*   654 */     Polygon(1),
/*       */ 
/*       */ 
/*       */     
/*   658 */     Line(2),
/*   659 */     UNRECOGNIZED(-1);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Circular_VALUE = 0;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Polygon_VALUE = 1;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Line_VALUE = 2;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*   712 */     private static final Internal.EnumLiteMap<GeoZoneType> internalValueMap = new Internal.EnumLiteMap<GeoZoneType>()
/*       */       {
/*       */         public DolphinConfig.GeoZoneType findValueByNumber(int number) {
/*   715 */           return DolphinConfig.GeoZoneType.forNumber(number);
/*       */         }
/*       */       };
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*   736 */     private static final GeoZoneType[] VALUES = values(); private final int value; public final int getNumber() { if (this == UNRECOGNIZED)
/*       */         throw new IllegalArgumentException("Can't get the number of an unknown enum value.");  return this.value; }
/*       */     public static GeoZoneType forNumber(int value) { switch (value) {
/*       */         case 0:
/*       */           return Circular;
/*       */         case 1:
/*       */           return Polygon;
/*       */         case 2:
/*       */           return Line;
/*       */       }  return null; }
/*       */     public static Internal.EnumLiteMap<GeoZoneType> internalGetValueMap() { return internalValueMap; }
/*       */     static {  }
/*       */     public final Descriptors.EnumValueDescriptor getValueDescriptor() { if (this == UNRECOGNIZED)
/*       */         throw new IllegalStateException("Can't get the descriptor of an unrecognized enum value."); 
/*       */       return getDescriptor().getValues().get(ordinal()); }
/*       */     public final Descriptors.EnumDescriptor getDescriptorForType() { return getDescriptor(); }
/*       */     public static final Descriptors.EnumDescriptor getDescriptor() { return DolphinConfig.getDescriptor().getEnumTypes().get(5); }
/*   753 */     GeoZoneType(int value) { this.value = value; }
/*       */   
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public enum GeozoneState
/*       */     implements ProtocolMessageEnum
/*       */   {
/*   767 */     GEO_OutOfZone(0),
/*       */ 
/*       */ 
/*       */     
/*   771 */     GEO_InZone(1),
/*       */ 
/*       */ 
/*       */     
/*   775 */     GEO_EnteringZone(2),
/*       */ 
/*       */ 
/*       */     
/*   779 */     GEO_LeavingZone(4),
/*       */ 
/*       */ 
/*       */     
/*   783 */     GEO_OverSpeeding(8),
/*   784 */     UNRECOGNIZED(-1);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int GEO_OutOfZone_VALUE = 0;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int GEO_InZone_VALUE = 1;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int GEO_EnteringZone_VALUE = 2;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int GEO_LeavingZone_VALUE = 4;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int GEO_OverSpeeding_VALUE = 8;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*   847 */     private static final Internal.EnumLiteMap<GeozoneState> internalValueMap = new Internal.EnumLiteMap<GeozoneState>()
/*       */       {
/*       */         public DolphinConfig.GeozoneState findValueByNumber(int number) {
/*   850 */           return DolphinConfig.GeozoneState.forNumber(number);
/*       */         }
/*       */       };
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*   871 */     private static final GeozoneState[] VALUES = values(); private final int value; public final int getNumber() { if (this == UNRECOGNIZED)
/*       */         throw new IllegalArgumentException("Can't get the number of an unknown enum value.");  return this.value; }
/*       */     public static GeozoneState forNumber(int value) { switch (value) { case 0: return GEO_OutOfZone;
/*       */         case 1:
/*       */           return GEO_InZone;
/*       */         case 2:
/*       */           return GEO_EnteringZone;
/*       */         case 4:
/*       */           return GEO_LeavingZone;
/*       */         case 8:
/*       */           return GEO_OverSpeeding; }  return null; }
/*       */     public static Internal.EnumLiteMap<GeozoneState> internalGetValueMap() { return internalValueMap; }
/*       */     static {  }
/*       */     public final Descriptors.EnumValueDescriptor getValueDescriptor() { if (this == UNRECOGNIZED)
/*       */         throw new IllegalStateException("Can't get the descriptor of an unrecognized enum value.");  return getDescriptor().getValues().get(ordinal()); }
/*       */     public final Descriptors.EnumDescriptor getDescriptorForType() { return getDescriptor(); }
/*       */     public static final Descriptors.EnumDescriptor getDescriptor() { return DolphinConfig.getDescriptor().getEnumTypes().get(6); }
/*   888 */     GeozoneState(int value) { this.value = value; }
/*       */   
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public enum SleepMode
/*       */     implements ProtocolMessageEnum
/*       */   {
/*   906 */     SleepDisabled(0),
/*       */ 
/*       */ 
/*       */     
/*   910 */     GpsSleep(1),
/*       */ 
/*       */ 
/*       */     
/*   914 */     DeepSleep(2),
/*       */ 
/*       */ 
/*       */     
/*   918 */     OnlineDeepSleep(3),
/*       */ 
/*       */ 
/*       */     
/*   922 */     UltraSleep(4),
/*   923 */     UNRECOGNIZED(-1);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int SleepDisabled_VALUE = 0;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int GpsSleep_VALUE = 1;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int DeepSleep_VALUE = 2;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int OnlineDeepSleep_VALUE = 3;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int UltraSleep_VALUE = 4;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*   986 */     private static final Internal.EnumLiteMap<SleepMode> internalValueMap = new Internal.EnumLiteMap<SleepMode>()
/*       */       {
/*       */         public DolphinConfig.SleepMode findValueByNumber(int number) {
/*   989 */           return DolphinConfig.SleepMode.forNumber(number);
/*       */         }
/*       */       };
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*  1010 */     private static final SleepMode[] VALUES = values(); private final int value; public final int getNumber() { if (this == UNRECOGNIZED)
/*       */         throw new IllegalArgumentException("Can't get the number of an unknown enum value.");  return this.value; }
/*       */     public static SleepMode forNumber(int value) { switch (value) { case 0: return SleepDisabled;
/*       */         case 1:
/*       */           return GpsSleep;
/*       */         case 2:
/*       */           return DeepSleep;
/*       */         case 3:
/*       */           return OnlineDeepSleep;
/*       */         case 4:
/*       */           return UltraSleep; }  return null; }
/*       */     public static Internal.EnumLiteMap<SleepMode> internalGetValueMap() { return internalValueMap; }
/*       */     static {  }
/*       */     public final Descriptors.EnumValueDescriptor getValueDescriptor() { if (this == UNRECOGNIZED)
/*       */         throw new IllegalStateException("Can't get the descriptor of an unrecognized enum value.");  return getDescriptor().getValues().get(ordinal()); }
/*       */     public final Descriptors.EnumDescriptor getDescriptorForType() { return getDescriptor(); }
/*       */     public static final Descriptors.EnumDescriptor getDescriptor() { return DolphinConfig.getDescriptor().getEnumTypes().get(7); }
/*  1027 */     SleepMode(int value) { this.value = value; }
/*       */   
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public enum EngineMode
/*       */     implements ProtocolMessageEnum
/*       */   {
/*  1041 */     EM_AlwaysOn(0),
/*       */ 
/*       */ 
/*       */     
/*  1045 */     EM_Ignition(1),
/*       */ 
/*       */ 
/*       */     
/*  1049 */     EM_MoveSensor(2),
/*       */ 
/*       */ 
/*       */     
/*  1053 */     EM_Custom(3),
/*  1054 */     UNRECOGNIZED(-1);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int EM_AlwaysOn_VALUE = 0;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int EM_Ignition_VALUE = 1;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int EM_MoveSensor_VALUE = 2;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int EM_Custom_VALUE = 3;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*  1112 */     private static final Internal.EnumLiteMap<EngineMode> internalValueMap = new Internal.EnumLiteMap<EngineMode>()
/*       */       {
/*       */         public DolphinConfig.EngineMode findValueByNumber(int number) {
/*  1115 */           return DolphinConfig.EngineMode.forNumber(number);
/*       */         }
/*       */       };
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*  1136 */     private static final EngineMode[] VALUES = values(); private final int value; public final int getNumber() { if (this == UNRECOGNIZED)
/*       */         throw new IllegalArgumentException("Can't get the number of an unknown enum value.");  return this.value; }
/*       */     public static EngineMode forNumber(int value) { switch (value) { case 0:
/*       */           return EM_AlwaysOn;
/*       */         case 1:
/*       */           return EM_Ignition;
/*       */         case 2:
/*       */           return EM_MoveSensor;
/*       */         case 3:
/*       */           return EM_Custom; }
/*       */        return null; }
/*       */     public static Internal.EnumLiteMap<EngineMode> internalGetValueMap() { return internalValueMap; }
/*       */     static {  }
/*       */     public final Descriptors.EnumValueDescriptor getValueDescriptor() { if (this == UNRECOGNIZED)
/*       */         throw new IllegalStateException("Can't get the descriptor of an unrecognized enum value.");  return getDescriptor().getValues().get(ordinal()); }
/*       */     public final Descriptors.EnumDescriptor getDescriptorForType() { return getDescriptor(); }
/*       */     public static final Descriptors.EnumDescriptor getDescriptor() { return DolphinConfig.getDescriptor().getEnumTypes().get(8); }
/*  1153 */     EngineMode(int value) { this.value = value; }
/*       */   
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public enum RecordsMode
/*       */     implements ProtocolMessageEnum
/*       */   {
/*  1167 */     PositionFix(0),
/*       */ 
/*       */ 
/*       */     
/*  1171 */     TimeSync(1),
/*       */ 
/*       */ 
/*       */     
/*  1175 */     Allways(2),
/*  1176 */     UNRECOGNIZED(-1);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int PositionFix_VALUE = 0;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int TimeSync_VALUE = 1;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Allways_VALUE = 2;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*  1229 */     private static final Internal.EnumLiteMap<RecordsMode> internalValueMap = new Internal.EnumLiteMap<RecordsMode>()
/*       */       {
/*       */         public DolphinConfig.RecordsMode findValueByNumber(int number) {
/*  1232 */           return DolphinConfig.RecordsMode.forNumber(number);
/*       */         }
/*       */       };
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*  1253 */     private static final RecordsMode[] VALUES = values(); private final int value; public final int getNumber() { if (this == UNRECOGNIZED)
/*       */         throw new IllegalArgumentException("Can't get the number of an unknown enum value.");  return this.value; }
/*       */     public static RecordsMode forNumber(int value) { switch (value) {
/*       */         case 0:
/*       */           return PositionFix;
/*       */         case 1:
/*       */           return TimeSync;
/*       */         case 2:
/*       */           return Allways;
/*       */       }  return null; }
/*       */     public static Internal.EnumLiteMap<RecordsMode> internalGetValueMap() { return internalValueMap; }
/*       */     static {  }
/*       */     public final Descriptors.EnumValueDescriptor getValueDescriptor() { if (this == UNRECOGNIZED)
/*       */         throw new IllegalStateException("Can't get the descriptor of an unrecognized enum value."); 
/*       */       return getDescriptor().getValues().get(ordinal()); }
/*       */     public final Descriptors.EnumDescriptor getDescriptorForType() { return getDescriptor(); }
/*       */     public static final Descriptors.EnumDescriptor getDescriptor() { return DolphinConfig.getDescriptor().getEnumTypes().get(9); }
/*  1270 */     RecordsMode(int value) { this.value = value; }
/*       */   
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public enum AlarmType
/*       */     implements ProtocolMessageEnum
/*       */   {
/*  1288 */     Alarm_None(0),
/*       */ 
/*       */ 
/*       */     
/*  1292 */     Alarm_Normal(1),
/*       */ 
/*       */ 
/*       */     
/*  1296 */     Alarm_Time(3),
/*       */ 
/*       */ 
/*       */     
/*  1300 */     Alarm_Angle(4),
/*       */ 
/*       */ 
/*       */     
/*  1304 */     Alarm_Speed(5),
/*       */ 
/*       */ 
/*       */     
/*  1308 */     Alarm_SleepMode(8),
/*       */ 
/*       */ 
/*       */     
/*  1312 */     Alarm_SystemReset(9),
/*       */ 
/*       */ 
/*       */     
/*  1316 */     Alarm_Ignition(10),
/*       */ 
/*       */ 
/*       */     
/*  1320 */     Alarm_Movement(11),
/*       */ 
/*       */ 
/*       */     
/*  1324 */     Alarm_DataMode(12),
/*       */ 
/*       */ 
/*       */     
/*  1328 */     Alarm_GnssStatus(20),
/*       */ 
/*       */ 
/*       */     
/*  1332 */     Alarm_GnssHDOP(21),
/*       */ 
/*       */ 
/*       */     
/*  1336 */     Alarm_GnssPDOP(22),
/*       */ 
/*       */ 
/*       */     
/*  1340 */     Alarm_GnssJammingStatus(23),
/*       */ 
/*       */ 
/*       */     
/*  1344 */     Alarm_GnssDataJumping(24),
/*       */ 
/*       */ 
/*       */     
/*  1348 */     Alarm_GsmSignal(30),
/*       */ 
/*       */ 
/*       */     
/*  1352 */     Alarm_GsmCellId(31),
/*       */ 
/*       */ 
/*       */     
/*  1356 */     Alarm_GsmAreaCode(32),
/*       */ 
/*       */ 
/*       */     
/*  1360 */     Alarm_GsmOperator(33),
/*       */ 
/*       */ 
/*       */     
/*  1364 */     Alarm_GsmTemperature(34),
/*       */ 
/*       */ 
/*       */     
/*  1368 */     Alarm_GsmJammingStatus(35),
/*       */ 
/*       */ 
/*       */     
/*  1372 */     Alarm_ExternalVoltage(40),
/*       */ 
/*       */ 
/*       */     
/*  1376 */     Alarm_BatteryVoltage(41),
/*       */ 
/*       */ 
/*       */     
/*  1380 */     Alarm_BatteryCurrent(42),
/*       */ 
/*       */ 
/*       */     
/*  1384 */     Alarm_TotalOdometer(50),
/*       */ 
/*       */ 
/*       */     
/*  1388 */     Alarm_Odometer(51),
/*       */ 
/*       */ 
/*       */     
/*  1392 */     Alarm_EngineOnTime(52),
/*       */ 
/*       */ 
/*       */     
/*  1396 */     Alarm_EngineOnTimeDelta(53),
/*       */ 
/*       */ 
/*       */     
/*  1400 */     Alarm_IdlingTime(54),
/*       */ 
/*       */ 
/*       */     
/*  1404 */     Alarm_IdlingTimeDelta(55),
/*       */ 
/*       */ 
/*       */     
/*  1408 */     Alarm_SpeedSensor_Speed(60),
/*       */ 
/*       */ 
/*       */     
/*  1412 */     Alarm_SpeedSensor_Distance(61),
/*       */ 
/*       */ 
/*       */     
/*  1416 */     Alarm_SpeedSensor_TotalDistance(62),
/*       */ 
/*       */ 
/*       */     
/*  1420 */     Alarm_SpeedSensor_MaxSpeed(63),
/*       */ 
/*       */ 
/*       */     
/*  1424 */     Alarm_SpeedSensor_GPSSpeedDiff(64),
/*       */ 
/*       */ 
/*       */     
/*  1428 */     Alarm_DigitalInput1(70),
/*       */ 
/*       */ 
/*       */     
/*  1432 */     Alarm_DigitalInput2(71),
/*       */ 
/*       */ 
/*       */     
/*  1436 */     Alarm_PowerSupply(72),
/*       */ 
/*       */ 
/*       */     
/*  1440 */     Alarm_DigitalInput3(73),
/*       */ 
/*       */ 
/*       */     
/*  1444 */     Alarm_VehicleConnection(79),
/*       */ 
/*       */ 
/*       */     
/*  1448 */     Alarm_DigitalInput1Time(80),
/*       */ 
/*       */ 
/*       */     
/*  1452 */     Alarm_DigitalInput1TimeDelta(81),
/*       */ 
/*       */ 
/*       */     
/*  1456 */     Alarm_DigitalInput2Time(82),
/*       */ 
/*       */ 
/*       */     
/*  1460 */     Alarm_DigitalInput2TimeDelta(83),
/*       */ 
/*       */ 
/*       */     
/*  1464 */     Alarm_PowerSupplyTime(84),
/*       */ 
/*       */ 
/*       */     
/*  1468 */     Alarm_PowerSupplyTimeDelta(85),
/*       */ 
/*       */ 
/*       */     
/*  1472 */     Alarm_DigitalInput3Time(86),
/*       */ 
/*       */ 
/*       */     
/*  1476 */     Alarm_DigitalInput3TimeDelta(87),
/*       */ 
/*       */ 
/*       */     
/*  1480 */     Alarm_DigitalOutput1(90),
/*       */ 
/*       */ 
/*       */     
/*  1484 */     Alarm_DigitalOutput2(91),
/*       */ 
/*       */ 
/*       */     
/*  1488 */     Alarm_AnalogInput1(100),
/*       */ 
/*       */ 
/*       */     
/*  1492 */     Alarm_AnalogInput2(101),
/*       */ 
/*       */ 
/*       */     
/*  1496 */     Alarm_AnalogInput3(102),
/*       */ 
/*       */ 
/*       */     
/*  1500 */     Alarm_AxisX(110),
/*       */ 
/*       */ 
/*       */     
/*  1504 */     Alarm_AxisY(111),
/*       */ 
/*       */ 
/*       */     
/*  1508 */     Alarm_AxisZ(112),
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*  1516 */     Alarm_ECO_MaxSpeed(150),
/*       */ 
/*       */ 
/*       */     
/*  1520 */     Alarm_ECO_NormalSpeedDistance(151),
/*       */ 
/*       */ 
/*       */     
/*  1524 */     Alarm_ECO_NormalSpeedTotalDistance(152),
/*       */ 
/*       */ 
/*       */     
/*  1528 */     Alarm_ECO_NormalSpeedTimer(153),
/*       */ 
/*       */ 
/*       */     
/*  1532 */     Alarm_ECO_NormalSpeedTotalTimer(154),
/*       */ 
/*       */ 
/*       */     
/*  1536 */     Alarm_ECO_OverSpeedingDistance(155),
/*       */ 
/*       */ 
/*       */     
/*  1540 */     Alarm_ECO_OverSpeedingTotalDistance(156),
/*       */ 
/*       */ 
/*       */     
/*  1544 */     Alarm_ECO_OverSpeedingTimer(157),
/*       */ 
/*       */ 
/*       */     
/*  1548 */     Alarm_ECO_OverSpeedingTotalTimer(158),
/*       */ 
/*       */ 
/*       */     
/*  1552 */     Alarm_ECO_MaxRPM(159),
/*       */ 
/*       */ 
/*       */     
/*  1556 */     Alarm_ECO_RPMGreenBandDistance(160),
/*       */ 
/*       */ 
/*       */     
/*  1560 */     Alarm_ECO_RPMGreenBandTotalDistance(161),
/*       */ 
/*       */ 
/*       */     
/*  1564 */     Alarm_ECO_RPMGreenBandTimer(162),
/*       */ 
/*       */ 
/*       */     
/*  1568 */     Alarm_ECO_RPMGreenBandTotalTimer(163),
/*       */ 
/*       */ 
/*       */     
/*  1572 */     Alarm_ECO_OverRPMDistance(164),
/*       */ 
/*       */ 
/*       */     
/*  1576 */     Alarm_ECO_OverRPMTotalDistance(165),
/*       */ 
/*       */ 
/*       */     
/*  1580 */     Alarm_ECO_OverRPMTimer(166),
/*       */ 
/*       */ 
/*       */     
/*  1584 */     Alarm_ECO_OverRPMTotalTimer(167),
/*       */ 
/*       */ 
/*       */     
/*  1588 */     Alarm_ECO_IdlingEvent(170),
/*       */ 
/*       */ 
/*       */     
/*  1592 */     Alarm_ECO_CruiseControlTimer(171),
/*       */ 
/*       */ 
/*       */     
/*  1596 */     Alarm_ECO_CruiseControlTotalTimer(172),
/*       */ 
/*       */ 
/*       */     
/*  1600 */     Alarm_ECO_CruiseControlDistance(173),
/*       */ 
/*       */ 
/*       */     
/*  1604 */     Alarm_ECO_CruiseControlTotalDistance(174),
/*       */ 
/*       */ 
/*       */     
/*  1608 */     Alarm_ECO_UnderRPMDistance(175),
/*       */ 
/*       */ 
/*       */     
/*  1612 */     Alarm_ECO_UnderRPMTotalDistance(176),
/*       */ 
/*       */ 
/*       */     
/*  1616 */     Alarm_ECO_UnderRPMTimer(177),
/*       */ 
/*       */ 
/*       */     
/*  1620 */     Alarm_ECO_UnderRPMTotalTimer(178),
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*  1628 */     Alarm_ECO_BreakCounter(180),
/*       */ 
/*       */ 
/*       */     
/*  1632 */     Alarm_ECO_HarshBreakCounter(181),
/*       */ 
/*       */ 
/*       */     
/*  1636 */     Alarm_ECO_ExtremeBreakCounter(182),
/*       */ 
/*       */ 
/*       */     
/*  1640 */     Alarm_ECO_HarshAccelerationCounter(183),
/*       */ 
/*       */ 
/*       */     
/*  1644 */     Alarm_ECO_CorneringCounter(184),
/*       */ 
/*       */ 
/*       */     
/*  1648 */     Alarm_ECO_TotalBreak(185),
/*       */ 
/*       */ 
/*       */     
/*  1652 */     Alarm_ECO_TotalHarshBreak(186),
/*       */ 
/*       */ 
/*       */     
/*  1656 */     Alarm_ECO_TotalExtremeBreak(187),
/*       */ 
/*       */ 
/*       */     
/*  1660 */     Alarm_ECO_TotalHarshAcceleration(188),
/*       */ 
/*       */ 
/*       */     
/*  1664 */     Alarm_ECO_TotalCornering(189),
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*  1672 */     Alarm_GeoZone1(200),
/*       */ 
/*       */ 
/*       */     
/*  1676 */     Alarm_GeoZone2(201),
/*       */ 
/*       */ 
/*       */     
/*  1680 */     Alarm_GeoZone3(202),
/*       */ 
/*       */ 
/*       */     
/*  1684 */     Alarm_GeoZone4(203),
/*       */ 
/*       */ 
/*       */     
/*  1688 */     Alarm_GeoZone5(204),
/*       */ 
/*       */ 
/*       */     
/*  1692 */     Alarm_GeoZone6(205),
/*       */ 
/*       */ 
/*       */     
/*  1696 */     Alarm_GeoZone7(206),
/*       */ 
/*       */ 
/*       */     
/*  1700 */     Alarm_GeoZone8(207),
/*       */ 
/*       */ 
/*       */     
/*  1704 */     Alarm_GeoZone9(208),
/*       */ 
/*       */ 
/*       */     
/*  1708 */     Alarm_GeoZone10(209),
/*       */ 
/*       */ 
/*       */     
/*  1712 */     Alarm_GeoZone11(210),
/*       */ 
/*       */ 
/*       */     
/*  1716 */     Alarm_GeoZone12(211),
/*       */ 
/*       */ 
/*       */     
/*  1720 */     Alarm_GeoZone13(212),
/*       */ 
/*       */ 
/*       */     
/*  1724 */     Alarm_GeoZone14(213),
/*       */ 
/*       */ 
/*       */     
/*  1728 */     Alarm_GeoZone15(214),
/*       */ 
/*       */ 
/*       */     
/*  1732 */     Alarm_GeoZone16(215),
/*       */ 
/*       */ 
/*       */     
/*  1736 */     Alarm_GeoZone17(216),
/*       */ 
/*       */ 
/*       */     
/*  1740 */     Alarm_GeoZone18(217),
/*       */ 
/*       */ 
/*       */     
/*  1744 */     Alarm_GeoZone19(218),
/*       */ 
/*       */ 
/*       */     
/*  1748 */     Alarm_GeoZone20(219),
/*       */ 
/*       */ 
/*       */     
/*  1752 */     Alarm_GeoZone21(220),
/*       */ 
/*       */ 
/*       */     
/*  1756 */     Alarm_GeoZone22(221),
/*       */ 
/*       */ 
/*       */     
/*  1760 */     Alarm_GeoZone23(222),
/*       */ 
/*       */ 
/*       */     
/*  1764 */     Alarm_GeoZone24(223),
/*       */ 
/*       */ 
/*       */     
/*  1768 */     Alarm_GeoZone25(224),
/*       */ 
/*       */ 
/*       */     
/*  1772 */     Alarm_GeoZone26(225),
/*       */ 
/*       */ 
/*       */     
/*  1776 */     Alarm_GeoZone27(226),
/*       */ 
/*       */ 
/*       */     
/*  1780 */     Alarm_GeoZone28(227),
/*       */ 
/*       */ 
/*       */     
/*  1784 */     Alarm_GeoZone29(228),
/*       */ 
/*       */ 
/*       */     
/*  1788 */     Alarm_GeoZone30(229),
/*       */ 
/*       */ 
/*       */     
/*  1792 */     Alarm_GeoZone31(230),
/*       */ 
/*       */ 
/*       */     
/*  1796 */     Alarm_GeoZone32(231),
/*       */ 
/*       */ 
/*       */     
/*  1800 */     Alarm_GeoZone33(232),
/*       */ 
/*       */ 
/*       */     
/*  1804 */     Alarm_GeoZone34(233),
/*       */ 
/*       */ 
/*       */     
/*  1808 */     Alarm_GeoZone35(234),
/*       */ 
/*       */ 
/*       */     
/*  1812 */     Alarm_GeoZone36(235),
/*       */ 
/*       */ 
/*       */     
/*  1816 */     Alarm_GeoZone37(236),
/*       */ 
/*       */ 
/*       */     
/*  1820 */     Alarm_GeoZone38(237),
/*       */ 
/*       */ 
/*       */     
/*  1824 */     Alarm_GeoZone39(238),
/*       */ 
/*       */ 
/*       */     
/*  1828 */     Alarm_GeoZone40(239),
/*       */ 
/*       */ 
/*       */     
/*  1832 */     Alarm_GeoZone41(240),
/*       */ 
/*       */ 
/*       */     
/*  1836 */     Alarm_GeoZone42(241),
/*       */ 
/*       */ 
/*       */     
/*  1840 */     Alarm_GeoZone43(242),
/*       */ 
/*       */ 
/*       */     
/*  1844 */     Alarm_GeoZone44(243),
/*       */ 
/*       */ 
/*       */     
/*  1848 */     Alarm_GeoZone45(244),
/*       */ 
/*       */ 
/*       */     
/*  1852 */     Alarm_GeoZone46(245),
/*       */ 
/*       */ 
/*       */     
/*  1856 */     Alarm_GeoZone47(246),
/*       */ 
/*       */ 
/*       */     
/*  1860 */     Alarm_GeoZone48(247),
/*       */ 
/*       */ 
/*       */     
/*  1864 */     Alarm_GeoZone49(248),
/*       */ 
/*       */ 
/*       */     
/*  1868 */     Alarm_GeoZone50(249),
/*       */ 
/*       */ 
/*       */     
/*  1872 */     Alarm_Trip(300),
/*       */ 
/*       */ 
/*       */     
/*  1876 */     Alarm_Trip_Time(301),
/*       */ 
/*       */ 
/*       */     
/*  1880 */     Alarm_Trip_Distance(302),
/*       */ 
/*       */ 
/*       */     
/*  1884 */     Alarm_Service(330),
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*  1892 */     Alarm_CrashDetection(340),
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*  1900 */     Alarm_DriverID(350),
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*  1908 */     Alarm_TemperatureSensor1(400),
/*       */ 
/*       */ 
/*       */     
/*  1912 */     Alarm_TemperatureSensor1_ID(401),
/*       */ 
/*       */ 
/*       */     
/*  1916 */     Alarm_TemperatureSensor2(402),
/*       */ 
/*       */ 
/*       */     
/*  1920 */     Alarm_TemperatureSensor2_ID(403),
/*       */ 
/*       */ 
/*       */     
/*  1924 */     Alarm_TemperatureSensor3(404),
/*       */ 
/*       */ 
/*       */     
/*  1928 */     Alarm_TemperatureSensor3_ID(405),
/*       */ 
/*       */ 
/*       */     
/*  1932 */     Alarm_HumiditySensor1(410),
/*       */ 
/*       */ 
/*       */     
/*  1936 */     Alarm_TiltStatus(490),
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*  1944 */     Alarm_OBD_EngineRPM(500),
/*       */ 
/*       */ 
/*       */     
/*  1948 */     Alarm_OBD_BatteryVoltage(501),
/*       */ 
/*       */ 
/*       */     
/*  1952 */     Alarm_OBD_EngineCoolantTemperature(502),
/*       */ 
/*       */ 
/*       */     
/*  1956 */     Alarm_OBD_VehicleSpeed(503),
/*       */ 
/*       */ 
/*       */     
/*  1960 */     Alarm_OBD_TotalDistance(504),
/*       */ 
/*       */ 
/*       */     
/*  1964 */     Alarm_OBD_FuelRate(505),
/*       */ 
/*       */ 
/*       */     
/*  1968 */     Alarm_OBD_TotalFuelUsed(506),
/*       */ 
/*       */ 
/*       */     
/*  1972 */     Alarm_OBD_IntakeAirTemperature(507),
/*       */ 
/*       */ 
/*       */     
/*  1976 */     Alarm_OBD_IntakeManifoldAbsolutePressure(508),
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*  1984 */     Alarm_OBD_MalfunctionIndicatorLamp(550),
/*       */ 
/*       */ 
/*       */     
/*  1988 */     Alarm_DiagnosticTroubleCodesCount(551),
/*       */ 
/*       */ 
/*       */     
/*  1992 */     Alarm_OBD_CalculatedEngineLoad(552),
/*       */ 
/*       */ 
/*       */     
/*  1996 */     Alarm_OBD_MassAirFlowRate(553),
/*       */ 
/*       */ 
/*       */     
/*  2000 */     Alarm_OBD_ThrottlePosition(554),
/*       */ 
/*       */ 
/*       */     
/*  2004 */     Alarm_OBD_RunTimeSinceEngineStart(555),
/*       */ 
/*       */ 
/*       */     
/*  2008 */     Alarm_OBD_FuelTankLevelInput(556),
/*       */ 
/*       */ 
/*       */     
/*  2012 */     Alarm_OBD_DistanceTraveledSinceCodesCleared(557),
/*       */ 
/*       */ 
/*       */     
/*  2016 */     Alarm_OBD_AbsoluteThrottlePositionD(558),
/*       */ 
/*       */ 
/*       */     
/*  2020 */     Alarm_OBD_TimeRunWithMILOn(559),
/*       */ 
/*       */ 
/*       */     
/*  2024 */     Alarm_OBD_EngineOilTemperature(560),
/*       */ 
/*       */ 
/*       */     
/*  2028 */     Alarm_OBD_FuelSystem1Status(561),
/*       */ 
/*       */ 
/*       */     
/*  2032 */     Alarm_OBD_FuelSystem2Status(562),
/*       */ 
/*       */ 
/*       */     
/*  2036 */     Alarm_OBD_OxygenSensor1Voltage(563),
/*       */ 
/*       */ 
/*       */     
/*  2040 */     Alarm_OBD_OxygenSensor1ShortTermFuelTrim(564),
/*       */ 
/*       */ 
/*       */     
/*  2044 */     Alarm_OBD_OxygenSensor2Voltage(565),
/*       */ 
/*       */ 
/*       */     
/*  2048 */     Alarm_OBD_OxygenSensor2ShortTermFuelTrim(566),
/*       */ 
/*       */ 
/*       */     
/*  2052 */     Alarm_OBD_OxygenSensor3Voltage(567),
/*       */ 
/*       */ 
/*       */     
/*  2056 */     Alarm_OBD_OxygenSensor3ShortTermFuelTrim(568),
/*       */ 
/*       */ 
/*       */     
/*  2060 */     Alarm_OBD_OxygenSensor4Voltage(569),
/*       */ 
/*       */ 
/*       */     
/*  2064 */     Alarm_OBD_OxygenSensor4ShortTermFuelTrim(570),
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*  2072 */     Alarm_CANBus_Tachograph1_WorkingState1(700),
/*       */ 
/*       */ 
/*       */     
/*  2076 */     Alarm_CANBus_Tachograph1_WorkingState2(701),
/*       */ 
/*       */ 
/*       */     
/*  2080 */     Alarm_CANBus_Tachograph1_VehicleMotion(702),
/*       */ 
/*       */ 
/*       */     
/*  2084 */     Alarm_CANBus_Tachograph1_Driv_1_Time_Rel_States(703),
/*       */ 
/*       */ 
/*       */     
/*  2088 */     Alarm_CANBus_Tachograph1_Driver1_Card(704),
/*       */ 
/*       */ 
/*       */     
/*  2092 */     Alarm_CANBus_Tachograph1_VehicleOverspeed(705),
/*       */ 
/*       */ 
/*       */     
/*  2096 */     Alarm_CANBus_Tachograph1_Driv_2_Time_Rel_States(706),
/*       */ 
/*       */ 
/*       */     
/*  2100 */     Alarm_CANBus_Tachograph1_Driver2_Card(707),
/*       */ 
/*       */ 
/*       */     
/*  2104 */     Alarm_CANBus_Tachograph1_SystemEvent(708),
/*       */ 
/*       */ 
/*       */     
/*  2108 */     Alarm_CANBus_Tachograph1_HandlingInformation(709),
/*       */ 
/*       */ 
/*       */     
/*  2112 */     Alarm_CANBus_Tachograph1_TachographPerformance(710),
/*       */ 
/*       */ 
/*       */     
/*  2116 */     Alarm_CANBus_Tachograph1_DirectionIndicator(711),
/*       */ 
/*       */ 
/*       */     
/*  2120 */     Alarm_CANBus_Tachograph1_VehicleSpeed(712),
/*       */ 
/*       */ 
/*       */     
/*  2124 */     Alarm_CANBus_EngineTemperature1_EngineCoolantTemperature(713),
/*       */ 
/*       */ 
/*       */     
/*  2128 */     Alarm_CANBus_ElectronicEngineController1_ActualEnginePercent(714),
/*       */ 
/*       */ 
/*       */     
/*  2132 */     Alarm_CANBus_ElectronicEngineController1_EngineSpeed(715),
/*       */ 
/*       */ 
/*       */     
/*  2136 */     Alarm_CANBus_EngineHours_EngineTotalHours(716),
/*       */ 
/*       */ 
/*       */     
/*  2140 */     Alarm_CANBus_VehicleDistance_TotalVehicleDistance(717),
/*       */ 
/*       */ 
/*       */     
/*  2144 */     Alarm_CANBus_HighResolutionFuelConsumption_TotalFuelUsed(718),
/*       */ 
/*       */ 
/*       */     
/*  2148 */     Alarm_CANBus_DashDisplay_FuelLevel1(719),
/*       */ 
/*       */ 
/*       */     
/*  2152 */     Alarm_CANBus_AmbientConditions_AmbientAirTemperature(720),
/*       */ 
/*       */ 
/*       */     
/*  2156 */     Alarm_CANBus_FuelEconomy_FuelRate(721),
/*       */ 
/*       */ 
/*       */     
/*  2160 */     Alarm_CANBus_FuelEconomy_InstantaneousFuelEconomy(722),
/*       */ 
/*       */ 
/*       */     
/*  2164 */     Alarm_CANBus_AirSupplyPressure_ServiceBrakeAirPressureCircuit_1(723),
/*       */ 
/*       */ 
/*       */     
/*  2168 */     Alarm_CANBus_AirSupplyPressure_ServiceBrakeAirPressureCircuit_2(724),
/*       */ 
/*       */ 
/*       */     
/*  2172 */     Alarm_CANBus_AftertreatmentDieselExhaustFluidTankInformation_Tank1_Level(725),
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*  2195 */     Alarm_CANBus_TruckBus_ElectronicEngineController2_AcceleratorPedalPosition_1(742),
/*       */ 
/*       */ 
/*       */     
/*  2199 */     Alarm_CANBus_TruckBus_ElectronicEngineController2_EnginePercentLoad(743),
/*       */ 
/*       */ 
/*       */     
/*  2203 */     Alarm_CANBus_Truck_VehicleWeight_AxleWeight1(744),
/*       */ 
/*       */ 
/*       */     
/*  2207 */     Alarm_CANBus_Truck_VehicleWeight_AxleWeight2(745),
/*       */ 
/*       */ 
/*       */     
/*  2211 */     Alarm_CANBus_Truck_VehicleWeight_AxleWeight3(746),
/*       */ 
/*       */ 
/*       */     
/*  2215 */     Alarm_CANBus_Truck_ServiceInformation_ServiceDistance(747),
/*       */ 
/*       */ 
/*       */     
/*  2219 */     Alarm_CANBus_Truck_PTODriveEngagement_PTOEngageStat(748),
/*       */ 
/*       */ 
/*       */     
/*  2223 */     Alarm_CANBus_Truck_CombinationVehicleWeight_GrossCombinationVehicleWeight(749),
/*       */ 
/*       */ 
/*       */     
/*  2227 */     Alarm_CANBus_TruckBus_Electronic_Retarder_Controller_1_RetarderTorqueMode(750),
/*       */ 
/*       */ 
/*       */     
/*  2231 */     Alarm_CANBus_TruckBus_Electronic_Retarder_Controller_1_RetarderSelection(751),
/*       */ 
/*       */ 
/*       */     
/*  2235 */     Alarm_CANBus_Bus_DoorControl1_DoorPosition(752),
/*       */ 
/*       */ 
/*       */     
/*  2239 */     Alarm_CANBus_Bus_DoorControl1_RampWheelChairlift(753),
/*       */ 
/*       */ 
/*       */     
/*  2243 */     Alarm_CANBus_Bus_DoorControl1_DoorsStatus2(754),
/*       */ 
/*       */ 
/*       */     
/*  2247 */     Alarm_CANBus_Bus_DoorControl2(755),
/*       */ 
/*       */ 
/*       */     
/*  2251 */     Alarm_CANBus_BrakeLiningRemaining_AxleFrontLeftWheel(756),
/*       */ 
/*       */ 
/*       */     
/*  2255 */     Alarm_CANBus_BrakeLiningRemaining_AxleFrontRightWheel(757),
/*       */ 
/*       */ 
/*       */     
/*  2259 */     Alarm_CANBus_BrakeLiningRemaining_AxleRear1LeftWheel(758),
/*       */ 
/*       */ 
/*       */     
/*  2263 */     Alarm_CANBus_BrakeLiningRemaining_AxleRear1RightWheel(759),
/*       */ 
/*       */ 
/*       */     
/*  2267 */     Alarm_CANBus_BrakeLiningRemaining_AxleRear2LeftWheel(760),
/*       */ 
/*       */ 
/*       */     
/*  2271 */     Alarm_CANBus_BrakeLiningRemaining_AxleRear2RightWheel(761),
/*       */ 
/*       */ 
/*       */     
/*  2275 */     Alarm_CANBus_BrakeLiningRemaining_AxleRear3LeftWheel(762),
/*       */ 
/*       */ 
/*       */     
/*  2279 */     Alarm_CANBus_BrakeLiningRemaining_AxleRear3RightWheel(763),
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*  2306 */     Alarm_CANBus_TruckBus_CruiseControl(784),
/*       */ 
/*       */ 
/*       */     
/*  2310 */     Alarm_CANBus_Bus_AlternatorSpeed_AlternatorStatus1(785),
/*       */ 
/*       */ 
/*       */     
/*  2314 */     Alarm_CANBus_Bus_AlternatorSpeed_AlternatorStatus2(786),
/*       */ 
/*       */ 
/*       */     
/*  2318 */     Alarm_CANBus_Bus_AlternatorSpeed_AlternatorStatus3(787),
/*       */ 
/*       */ 
/*       */     
/*  2322 */     Alarm_CANBus_Bus_AlternatorSpeed_AlternatorStatus4(788),
/*       */ 
/*       */ 
/*       */     
/*  2326 */     Alarm_CANBus_Bus_ElectronicTransmissionController2_SelectedGear(789),
/*       */ 
/*       */ 
/*       */     
/*  2330 */     Alarm_CANBus_Bus_ElectronicTransmissionController2_CurrentGear(790),
/*       */ 
/*       */ 
/*       */     
/*  2334 */     Alarm_CANBus_Bus_AirSuspensionControl4_FrontAxleLeft(791),
/*       */ 
/*       */ 
/*       */     
/*  2338 */     Alarm_CANBus_Bus_AirSuspensionControl4_FrontAxleRight(792),
/*       */ 
/*       */ 
/*       */     
/*  2342 */     Alarm_CANBus_Bus_AirSuspensionControl4_RearAxleLeft(793),
/*       */ 
/*       */ 
/*       */     
/*  2346 */     Alarm_CANBus_Bus_AirSuspensionControl4_RearAxleright(794),
/*       */ 
/*       */ 
/*       */     
/*  2350 */     Alarm_CANBus_DashDisplay_FuelLevel2(795),
/*       */ 
/*       */ 
/*       */     
/*  2354 */     Alarm_CANBus_ElectronicBrakeController_BrakePedalPosition(796),
/*       */ 
/*       */ 
/*       */     
/*  2358 */     Alarm_CANBus_FuelConsumptionGaseous_TotalFuelUsed(797),
/*       */ 
/*       */ 
/*       */     
/*  2362 */     Alarm_CANBus_TruckBus_CruiseControlVehicleSpeed_ParkingBrakeSwitch(798),
/*       */ 
/*       */ 
/*       */     
/*  2366 */     Alarm_CANBus_TruckBus_CruiseControlVehicleSpeed_WheelBasedSpeed(799),
/*       */ 
/*       */ 
/*       */     
/*  2370 */     Alarm_CANBus_TruckBus_CruiseControlVehicleSpeed_CruiseControlActive(800),
/*       */ 
/*       */ 
/*       */     
/*  2374 */     Alarm_CANBus_TruckBus_CruiseControlVehicleSpeed_BrakeSwitch(801),
/*       */ 
/*       */ 
/*       */     
/*  2378 */     Alarm_CANBus_TruckBus_CruiseControlVehicleSpeed_ClutchSwitch(802),
/*       */ 
/*       */ 
/*       */     
/*  2382 */     Alarm_CANBus_TruckBus_CruiseControlVehicleSpeed_PtoState(803),
/*       */ 
/*       */ 
/*       */     
/*  2386 */     Alarm_CANBus_TruckBus_CruiseControlVehicleSpeed_CruiseControlStates(804),
/*       */ 
/*       */ 
/*       */     
/*  2390 */     Alarm_CANBus_Bus_VehicleElectricalPower_HybridBatteryPackRemainingCharge(805),
/*       */ 
/*       */ 
/*       */     
/*  2394 */     Alarm_CANBus_Bus_VehicleDynamicStabilityControl2_SteeringWheelAngle(806),
/*       */ 
/*       */ 
/*       */     
/*  2398 */     Alarm_CANBus_ElectronicEngineController14_FuelType(807),
/*       */ 
/*       */ 
/*       */     
/*  2402 */     Alarm_CANBus_EngineFluidLevelPressure_EngineOilLevel(808),
/*       */ 
/*       */ 
/*       */     
/*  2406 */     Alarm_CANBus_EngineFluidLevelPressure_EngineOilPressure(809),
/*       */ 
/*       */ 
/*       */     
/*  2410 */     Alarm_CANBus_EngineFluidLevelPressure_CoolantLevel(810),
/*       */ 
/*       */ 
/*       */     
/*  2414 */     Alarm_CANBus_TellTaleStatus(811),
/*       */ 
/*       */ 
/*       */     
/*  2418 */     Alarm_CANBus_FuelConsumption_EngineTotalFuelUsed(812),
/*       */ 
/*       */ 
/*       */     
/*  2422 */     Alarm_CANBus_Truck_VehicleWeight_AxleWeight4(813),
/*  2423 */     UNRECOGNIZED(-1);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_None_VALUE = 0;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_Normal_VALUE = 1;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_Time_VALUE = 3;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_Angle_VALUE = 4;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_Speed_VALUE = 5;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_SleepMode_VALUE = 8;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_SystemReset_VALUE = 9;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_Ignition_VALUE = 10;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_Movement_VALUE = 11;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_DataMode_VALUE = 12;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_GnssStatus_VALUE = 20;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_GnssHDOP_VALUE = 21;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_GnssPDOP_VALUE = 22;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_GnssJammingStatus_VALUE = 23;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_GnssDataJumping_VALUE = 24;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_GsmSignal_VALUE = 30;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_GsmCellId_VALUE = 31;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_GsmAreaCode_VALUE = 32;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_GsmOperator_VALUE = 33;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_GsmTemperature_VALUE = 34;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_GsmJammingStatus_VALUE = 35;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_ExternalVoltage_VALUE = 40;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_BatteryVoltage_VALUE = 41;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_BatteryCurrent_VALUE = 42;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_TotalOdometer_VALUE = 50;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_Odometer_VALUE = 51;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_EngineOnTime_VALUE = 52;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_EngineOnTimeDelta_VALUE = 53;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_IdlingTime_VALUE = 54;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_IdlingTimeDelta_VALUE = 55;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_SpeedSensor_Speed_VALUE = 60;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_SpeedSensor_Distance_VALUE = 61;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_SpeedSensor_TotalDistance_VALUE = 62;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_SpeedSensor_MaxSpeed_VALUE = 63;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_SpeedSensor_GPSSpeedDiff_VALUE = 64;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_DigitalInput1_VALUE = 70;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_DigitalInput2_VALUE = 71;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_PowerSupply_VALUE = 72;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_DigitalInput3_VALUE = 73;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_VehicleConnection_VALUE = 79;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_DigitalInput1Time_VALUE = 80;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_DigitalInput1TimeDelta_VALUE = 81;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_DigitalInput2Time_VALUE = 82;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_DigitalInput2TimeDelta_VALUE = 83;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_PowerSupplyTime_VALUE = 84;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_PowerSupplyTimeDelta_VALUE = 85;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_DigitalInput3Time_VALUE = 86;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_DigitalInput3TimeDelta_VALUE = 87;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_DigitalOutput1_VALUE = 90;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_DigitalOutput2_VALUE = 91;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_AnalogInput1_VALUE = 100;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_AnalogInput2_VALUE = 101;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_AnalogInput3_VALUE = 102;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_AxisX_VALUE = 110;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_AxisY_VALUE = 111;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_AxisZ_VALUE = 112;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_ECO_MaxSpeed_VALUE = 150;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_ECO_NormalSpeedDistance_VALUE = 151;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_ECO_NormalSpeedTotalDistance_VALUE = 152;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_ECO_NormalSpeedTimer_VALUE = 153;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_ECO_NormalSpeedTotalTimer_VALUE = 154;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_ECO_OverSpeedingDistance_VALUE = 155;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_ECO_OverSpeedingTotalDistance_VALUE = 156;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_ECO_OverSpeedingTimer_VALUE = 157;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_ECO_OverSpeedingTotalTimer_VALUE = 158;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_ECO_MaxRPM_VALUE = 159;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_ECO_RPMGreenBandDistance_VALUE = 160;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_ECO_RPMGreenBandTotalDistance_VALUE = 161;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_ECO_RPMGreenBandTimer_VALUE = 162;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_ECO_RPMGreenBandTotalTimer_VALUE = 163;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_ECO_OverRPMDistance_VALUE = 164;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_ECO_OverRPMTotalDistance_VALUE = 165;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_ECO_OverRPMTimer_VALUE = 166;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_ECO_OverRPMTotalTimer_VALUE = 167;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_ECO_IdlingEvent_VALUE = 170;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_ECO_CruiseControlTimer_VALUE = 171;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_ECO_CruiseControlTotalTimer_VALUE = 172;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_ECO_CruiseControlDistance_VALUE = 173;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_ECO_CruiseControlTotalDistance_VALUE = 174;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_ECO_UnderRPMDistance_VALUE = 175;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_ECO_UnderRPMTotalDistance_VALUE = 176;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_ECO_UnderRPMTimer_VALUE = 177;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_ECO_UnderRPMTotalTimer_VALUE = 178;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_ECO_BreakCounter_VALUE = 180;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_ECO_HarshBreakCounter_VALUE = 181;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_ECO_ExtremeBreakCounter_VALUE = 182;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_ECO_HarshAccelerationCounter_VALUE = 183;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_ECO_CorneringCounter_VALUE = 184;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_ECO_TotalBreak_VALUE = 185;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_ECO_TotalHarshBreak_VALUE = 186;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_ECO_TotalExtremeBreak_VALUE = 187;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_ECO_TotalHarshAcceleration_VALUE = 188;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_ECO_TotalCornering_VALUE = 189;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_GeoZone1_VALUE = 200;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_GeoZone2_VALUE = 201;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_GeoZone3_VALUE = 202;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_GeoZone4_VALUE = 203;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_GeoZone5_VALUE = 204;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_GeoZone6_VALUE = 205;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_GeoZone7_VALUE = 206;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_GeoZone8_VALUE = 207;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_GeoZone9_VALUE = 208;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_GeoZone10_VALUE = 209;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_GeoZone11_VALUE = 210;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_GeoZone12_VALUE = 211;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_GeoZone13_VALUE = 212;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_GeoZone14_VALUE = 213;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_GeoZone15_VALUE = 214;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_GeoZone16_VALUE = 215;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_GeoZone17_VALUE = 216;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_GeoZone18_VALUE = 217;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_GeoZone19_VALUE = 218;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_GeoZone20_VALUE = 219;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_GeoZone21_VALUE = 220;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_GeoZone22_VALUE = 221;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_GeoZone23_VALUE = 222;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_GeoZone24_VALUE = 223;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_GeoZone25_VALUE = 224;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_GeoZone26_VALUE = 225;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_GeoZone27_VALUE = 226;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_GeoZone28_VALUE = 227;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_GeoZone29_VALUE = 228;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_GeoZone30_VALUE = 229;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_GeoZone31_VALUE = 230;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_GeoZone32_VALUE = 231;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_GeoZone33_VALUE = 232;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_GeoZone34_VALUE = 233;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_GeoZone35_VALUE = 234;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_GeoZone36_VALUE = 235;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_GeoZone37_VALUE = 236;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_GeoZone38_VALUE = 237;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_GeoZone39_VALUE = 238;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_GeoZone40_VALUE = 239;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_GeoZone41_VALUE = 240;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_GeoZone42_VALUE = 241;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_GeoZone43_VALUE = 242;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_GeoZone44_VALUE = 243;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_GeoZone45_VALUE = 244;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_GeoZone46_VALUE = 245;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_GeoZone47_VALUE = 246;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_GeoZone48_VALUE = 247;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_GeoZone49_VALUE = 248;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_GeoZone50_VALUE = 249;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_Trip_VALUE = 300;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_Trip_Time_VALUE = 301;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_Trip_Distance_VALUE = 302;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_Service_VALUE = 330;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_CrashDetection_VALUE = 340;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_DriverID_VALUE = 350;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_TemperatureSensor1_VALUE = 400;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_TemperatureSensor1_ID_VALUE = 401;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_TemperatureSensor2_VALUE = 402;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_TemperatureSensor2_ID_VALUE = 403;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_TemperatureSensor3_VALUE = 404;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_TemperatureSensor3_ID_VALUE = 405;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_HumiditySensor1_VALUE = 410;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_TiltStatus_VALUE = 490;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_OBD_EngineRPM_VALUE = 500;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_OBD_BatteryVoltage_VALUE = 501;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_OBD_EngineCoolantTemperature_VALUE = 502;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_OBD_VehicleSpeed_VALUE = 503;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_OBD_TotalDistance_VALUE = 504;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_OBD_FuelRate_VALUE = 505;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_OBD_TotalFuelUsed_VALUE = 506;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_OBD_IntakeAirTemperature_VALUE = 507;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_OBD_IntakeManifoldAbsolutePressure_VALUE = 508;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_OBD_MalfunctionIndicatorLamp_VALUE = 550;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_DiagnosticTroubleCodesCount_VALUE = 551;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_OBD_CalculatedEngineLoad_VALUE = 552;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_OBD_MassAirFlowRate_VALUE = 553;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_OBD_ThrottlePosition_VALUE = 554;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_OBD_RunTimeSinceEngineStart_VALUE = 555;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_OBD_FuelTankLevelInput_VALUE = 556;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_OBD_DistanceTraveledSinceCodesCleared_VALUE = 557;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_OBD_AbsoluteThrottlePositionD_VALUE = 558;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_OBD_TimeRunWithMILOn_VALUE = 559;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_OBD_EngineOilTemperature_VALUE = 560;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_OBD_FuelSystem1Status_VALUE = 561;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_OBD_FuelSystem2Status_VALUE = 562;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_OBD_OxygenSensor1Voltage_VALUE = 563;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_OBD_OxygenSensor1ShortTermFuelTrim_VALUE = 564;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_OBD_OxygenSensor2Voltage_VALUE = 565;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_OBD_OxygenSensor2ShortTermFuelTrim_VALUE = 566;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_OBD_OxygenSensor3Voltage_VALUE = 567;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_OBD_OxygenSensor3ShortTermFuelTrim_VALUE = 568;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_OBD_OxygenSensor4Voltage_VALUE = 569;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_OBD_OxygenSensor4ShortTermFuelTrim_VALUE = 570;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_CANBus_Tachograph1_WorkingState1_VALUE = 700;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_CANBus_Tachograph1_WorkingState2_VALUE = 701;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_CANBus_Tachograph1_VehicleMotion_VALUE = 702;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_CANBus_Tachograph1_Driv_1_Time_Rel_States_VALUE = 703;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_CANBus_Tachograph1_Driver1_Card_VALUE = 704;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_CANBus_Tachograph1_VehicleOverspeed_VALUE = 705;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_CANBus_Tachograph1_Driv_2_Time_Rel_States_VALUE = 706;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_CANBus_Tachograph1_Driver2_Card_VALUE = 707;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_CANBus_Tachograph1_SystemEvent_VALUE = 708;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_CANBus_Tachograph1_HandlingInformation_VALUE = 709;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_CANBus_Tachograph1_TachographPerformance_VALUE = 710;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_CANBus_Tachograph1_DirectionIndicator_VALUE = 711;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_CANBus_Tachograph1_VehicleSpeed_VALUE = 712;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_CANBus_EngineTemperature1_EngineCoolantTemperature_VALUE = 713;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_CANBus_ElectronicEngineController1_ActualEnginePercent_VALUE = 714;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_CANBus_ElectronicEngineController1_EngineSpeed_VALUE = 715;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_CANBus_EngineHours_EngineTotalHours_VALUE = 716;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_CANBus_VehicleDistance_TotalVehicleDistance_VALUE = 717;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_CANBus_HighResolutionFuelConsumption_TotalFuelUsed_VALUE = 718;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_CANBus_DashDisplay_FuelLevel1_VALUE = 719;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_CANBus_AmbientConditions_AmbientAirTemperature_VALUE = 720;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_CANBus_FuelEconomy_FuelRate_VALUE = 721;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_CANBus_FuelEconomy_InstantaneousFuelEconomy_VALUE = 722;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_CANBus_AirSupplyPressure_ServiceBrakeAirPressureCircuit_1_VALUE = 723;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_CANBus_AirSupplyPressure_ServiceBrakeAirPressureCircuit_2_VALUE = 724;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_CANBus_AftertreatmentDieselExhaustFluidTankInformation_Tank1_Level_VALUE = 725;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_CANBus_TruckBus_ElectronicEngineController2_AcceleratorPedalPosition_1_VALUE = 742;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_CANBus_TruckBus_ElectronicEngineController2_EnginePercentLoad_VALUE = 743;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_CANBus_Truck_VehicleWeight_AxleWeight1_VALUE = 744;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_CANBus_Truck_VehicleWeight_AxleWeight2_VALUE = 745;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_CANBus_Truck_VehicleWeight_AxleWeight3_VALUE = 746;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_CANBus_Truck_ServiceInformation_ServiceDistance_VALUE = 747;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_CANBus_Truck_PTODriveEngagement_PTOEngageStat_VALUE = 748;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_CANBus_Truck_CombinationVehicleWeight_GrossCombinationVehicleWeight_VALUE = 749;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_CANBus_TruckBus_Electronic_Retarder_Controller_1_RetarderTorqueMode_VALUE = 750;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_CANBus_TruckBus_Electronic_Retarder_Controller_1_RetarderSelection_VALUE = 751;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_CANBus_Bus_DoorControl1_DoorPosition_VALUE = 752;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_CANBus_Bus_DoorControl1_RampWheelChairlift_VALUE = 753;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_CANBus_Bus_DoorControl1_DoorsStatus2_VALUE = 754;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_CANBus_Bus_DoorControl2_VALUE = 755;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_CANBus_BrakeLiningRemaining_AxleFrontLeftWheel_VALUE = 756;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_CANBus_BrakeLiningRemaining_AxleFrontRightWheel_VALUE = 757;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_CANBus_BrakeLiningRemaining_AxleRear1LeftWheel_VALUE = 758;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_CANBus_BrakeLiningRemaining_AxleRear1RightWheel_VALUE = 759;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_CANBus_BrakeLiningRemaining_AxleRear2LeftWheel_VALUE = 760;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_CANBus_BrakeLiningRemaining_AxleRear2RightWheel_VALUE = 761;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_CANBus_BrakeLiningRemaining_AxleRear3LeftWheel_VALUE = 762;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_CANBus_BrakeLiningRemaining_AxleRear3RightWheel_VALUE = 763;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_CANBus_TruckBus_CruiseControl_VALUE = 784;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_CANBus_Bus_AlternatorSpeed_AlternatorStatus1_VALUE = 785;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_CANBus_Bus_AlternatorSpeed_AlternatorStatus2_VALUE = 786;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_CANBus_Bus_AlternatorSpeed_AlternatorStatus3_VALUE = 787;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_CANBus_Bus_AlternatorSpeed_AlternatorStatus4_VALUE = 788;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_CANBus_Bus_ElectronicTransmissionController2_SelectedGear_VALUE = 789;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_CANBus_Bus_ElectronicTransmissionController2_CurrentGear_VALUE = 790;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_CANBus_Bus_AirSuspensionControl4_FrontAxleLeft_VALUE = 791;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_CANBus_Bus_AirSuspensionControl4_FrontAxleRight_VALUE = 792;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_CANBus_Bus_AirSuspensionControl4_RearAxleLeft_VALUE = 793;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_CANBus_Bus_AirSuspensionControl4_RearAxleright_VALUE = 794;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_CANBus_DashDisplay_FuelLevel2_VALUE = 795;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_CANBus_ElectronicBrakeController_BrakePedalPosition_VALUE = 796;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_CANBus_FuelConsumptionGaseous_TotalFuelUsed_VALUE = 797;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_CANBus_TruckBus_CruiseControlVehicleSpeed_ParkingBrakeSwitch_VALUE = 798;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_CANBus_TruckBus_CruiseControlVehicleSpeed_WheelBasedSpeed_VALUE = 799;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_CANBus_TruckBus_CruiseControlVehicleSpeed_CruiseControlActive_VALUE = 800;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_CANBus_TruckBus_CruiseControlVehicleSpeed_BrakeSwitch_VALUE = 801;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_CANBus_TruckBus_CruiseControlVehicleSpeed_ClutchSwitch_VALUE = 802;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_CANBus_TruckBus_CruiseControlVehicleSpeed_PtoState_VALUE = 803;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_CANBus_TruckBus_CruiseControlVehicleSpeed_CruiseControlStates_VALUE = 804;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_CANBus_Bus_VehicleElectricalPower_HybridBatteryPackRemainingCharge_VALUE = 805;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_CANBus_Bus_VehicleDynamicStabilityControl2_SteeringWheelAngle_VALUE = 806;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_CANBus_ElectronicEngineController14_FuelType_VALUE = 807;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_CANBus_EngineFluidLevelPressure_EngineOilLevel_VALUE = 808;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_CANBus_EngineFluidLevelPressure_EngineOilPressure_VALUE = 809;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_CANBus_EngineFluidLevelPressure_CoolantLevel_VALUE = 810;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_CANBus_TellTaleStatus_VALUE = 811;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_CANBus_FuelConsumption_EngineTotalFuelUsed_VALUE = 812;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Alarm_CANBus_Truck_VehicleWeight_AxleWeight4_VALUE = 813;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*  3864 */     private static final Internal.EnumLiteMap<AlarmType> internalValueMap = new Internal.EnumLiteMap<AlarmType>()
/*       */       {
/*       */         public DolphinConfig.AlarmType findValueByNumber(int number) {
/*  3867 */           return DolphinConfig.AlarmType.forNumber(number);
/*       */         }
/*       */       };
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*  3888 */     private static final AlarmType[] VALUES = values(); private final int value; public final int getNumber() { if (this == UNRECOGNIZED)
/*       */         throw new IllegalArgumentException("Can't get the number of an unknown enum value.");  return this.value; }
/*       */     public static AlarmType forNumber(int value) { switch (value) { case 0: return Alarm_None;case 1: return Alarm_Normal;case 3: return Alarm_Time;case 4: return Alarm_Angle;case 5: return Alarm_Speed;case 8: return Alarm_SleepMode;case 9: return Alarm_SystemReset;case 10: return Alarm_Ignition;case 11: return Alarm_Movement;case 12: return Alarm_DataMode;case 20: return Alarm_GnssStatus;case 21: return Alarm_GnssHDOP;case 22: return Alarm_GnssPDOP;case 23: return Alarm_GnssJammingStatus;case 24: return Alarm_GnssDataJumping;case 30: return Alarm_GsmSignal;case 31: return Alarm_GsmCellId;case 32: return Alarm_GsmAreaCode;case 33: return Alarm_GsmOperator;case 34: return Alarm_GsmTemperature;case 35: return Alarm_GsmJammingStatus;case 40: return Alarm_ExternalVoltage;case 41: return Alarm_BatteryVoltage;case 42: return Alarm_BatteryCurrent;case 50: return Alarm_TotalOdometer;case 51: return Alarm_Odometer;case 52: return Alarm_EngineOnTime;case 53: return Alarm_EngineOnTimeDelta;case 54: return Alarm_IdlingTime;case 55: return Alarm_IdlingTimeDelta;case 60: return Alarm_SpeedSensor_Speed;case 61: return Alarm_SpeedSensor_Distance;case 62: return Alarm_SpeedSensor_TotalDistance;case 63: return Alarm_SpeedSensor_MaxSpeed;case 64: return Alarm_SpeedSensor_GPSSpeedDiff;case 70: return Alarm_DigitalInput1;case 71: return Alarm_DigitalInput2;case 72: return Alarm_PowerSupply;case 73: return Alarm_DigitalInput3;case 79: return Alarm_VehicleConnection;case 80: return Alarm_DigitalInput1Time;case 81: return Alarm_DigitalInput1TimeDelta;case 82: return Alarm_DigitalInput2Time;case 83: return Alarm_DigitalInput2TimeDelta;case 84: return Alarm_PowerSupplyTime;case 85: return Alarm_PowerSupplyTimeDelta;case 86: return Alarm_DigitalInput3Time;case 87: return Alarm_DigitalInput3TimeDelta;case 90: return Alarm_DigitalOutput1;case 91: return Alarm_DigitalOutput2;case 100: return Alarm_AnalogInput1;case 101: return Alarm_AnalogInput2;case 102: return Alarm_AnalogInput3;case 110: return Alarm_AxisX;case 111: return Alarm_AxisY;case 112: return Alarm_AxisZ;case 150: return Alarm_ECO_MaxSpeed;case 151: return Alarm_ECO_NormalSpeedDistance;case 152: return Alarm_ECO_NormalSpeedTotalDistance;case 153: return Alarm_ECO_NormalSpeedTimer;case 154: return Alarm_ECO_NormalSpeedTotalTimer;case 155: return Alarm_ECO_OverSpeedingDistance;case 156: return Alarm_ECO_OverSpeedingTotalDistance;case 157: return Alarm_ECO_OverSpeedingTimer;case 158: return Alarm_ECO_OverSpeedingTotalTimer;case 159: return Alarm_ECO_MaxRPM;case 160: return Alarm_ECO_RPMGreenBandDistance;case 161: return Alarm_ECO_RPMGreenBandTotalDistance;case 162: return Alarm_ECO_RPMGreenBandTimer;case 163: return Alarm_ECO_RPMGreenBandTotalTimer;case 164: return Alarm_ECO_OverRPMDistance;case 165: return Alarm_ECO_OverRPMTotalDistance;case 166: return Alarm_ECO_OverRPMTimer;case 167: return Alarm_ECO_OverRPMTotalTimer;case 170: return Alarm_ECO_IdlingEvent;case 171: return Alarm_ECO_CruiseControlTimer;case 172: return Alarm_ECO_CruiseControlTotalTimer;case 173: return Alarm_ECO_CruiseControlDistance;case 174: return Alarm_ECO_CruiseControlTotalDistance;case 175: return Alarm_ECO_UnderRPMDistance;case 176: return Alarm_ECO_UnderRPMTotalDistance;case 177: return Alarm_ECO_UnderRPMTimer;case 178: return Alarm_ECO_UnderRPMTotalTimer;case 180: return Alarm_ECO_BreakCounter;case 181: return Alarm_ECO_HarshBreakCounter;case 182: return Alarm_ECO_ExtremeBreakCounter;case 183: return Alarm_ECO_HarshAccelerationCounter;case 184: return Alarm_ECO_CorneringCounter;case 185: return Alarm_ECO_TotalBreak;case 186: return Alarm_ECO_TotalHarshBreak;case 187: return Alarm_ECO_TotalExtremeBreak;case 188: return Alarm_ECO_TotalHarshAcceleration;case 189: return Alarm_ECO_TotalCornering;case 200: return Alarm_GeoZone1;case 201: return Alarm_GeoZone2;case 202: return Alarm_GeoZone3;case 203: return Alarm_GeoZone4;case 204: return Alarm_GeoZone5;case 205: return Alarm_GeoZone6;case 206: return Alarm_GeoZone7;case 207: return Alarm_GeoZone8;case 208: return Alarm_GeoZone9;case 209: return Alarm_GeoZone10;case 210: return Alarm_GeoZone11;case 211: return Alarm_GeoZone12;case 212: return Alarm_GeoZone13;case 213: return Alarm_GeoZone14;case 214: return Alarm_GeoZone15;case 215: return Alarm_GeoZone16;case 216: return Alarm_GeoZone17;case 217: return Alarm_GeoZone18;case 218: return Alarm_GeoZone19;case 219: return Alarm_GeoZone20;case 220: return Alarm_GeoZone21;case 221: return Alarm_GeoZone22;case 222: return Alarm_GeoZone23;case 223: return Alarm_GeoZone24;case 224: return Alarm_GeoZone25;case 225: return Alarm_GeoZone26;case 226: return Alarm_GeoZone27;case 227: return Alarm_GeoZone28;case 228: return Alarm_GeoZone29;case 229: return Alarm_GeoZone30;case 230: return Alarm_GeoZone31;case 231: return Alarm_GeoZone32;case 232: return Alarm_GeoZone33;case 233: return Alarm_GeoZone34;case 234: return Alarm_GeoZone35;case 235: return Alarm_GeoZone36;case 236: return Alarm_GeoZone37;case 237: return Alarm_GeoZone38;case 238: return Alarm_GeoZone39;case 239: return Alarm_GeoZone40;case 240: return Alarm_GeoZone41;case 241: return Alarm_GeoZone42;case 242: return Alarm_GeoZone43;case 243: return Alarm_GeoZone44;case 244: return Alarm_GeoZone45;case 245: return Alarm_GeoZone46;case 246: return Alarm_GeoZone47;case 247: return Alarm_GeoZone48;case 248: return Alarm_GeoZone49;case 249: return Alarm_GeoZone50;case 300: return Alarm_Trip;case 301: return Alarm_Trip_Time;case 302: return Alarm_Trip_Distance;case 330: return Alarm_Service;case 340: return Alarm_CrashDetection;case 350: return Alarm_DriverID;case 400: return Alarm_TemperatureSensor1;case 401: return Alarm_TemperatureSensor1_ID;case 402: return Alarm_TemperatureSensor2;case 403: return Alarm_TemperatureSensor2_ID;case 404: return Alarm_TemperatureSensor3;case 405: return Alarm_TemperatureSensor3_ID;case 410: return Alarm_HumiditySensor1;case 490: return Alarm_TiltStatus;case 500: return Alarm_OBD_EngineRPM;case 501: return Alarm_OBD_BatteryVoltage;case 502: return Alarm_OBD_EngineCoolantTemperature;case 503: return Alarm_OBD_VehicleSpeed;case 504: return Alarm_OBD_TotalDistance;case 505: return Alarm_OBD_FuelRate;case 506: return Alarm_OBD_TotalFuelUsed;case 507: return Alarm_OBD_IntakeAirTemperature;case 508: return Alarm_OBD_IntakeManifoldAbsolutePressure;case 550: return Alarm_OBD_MalfunctionIndicatorLamp;case 551: return Alarm_DiagnosticTroubleCodesCount;case 552: return Alarm_OBD_CalculatedEngineLoad;case 553: return Alarm_OBD_MassAirFlowRate;case 554: return Alarm_OBD_ThrottlePosition;case 555: return Alarm_OBD_RunTimeSinceEngineStart;case 556: return Alarm_OBD_FuelTankLevelInput;case 557: return Alarm_OBD_DistanceTraveledSinceCodesCleared;case 558: return Alarm_OBD_AbsoluteThrottlePositionD;case 559: return Alarm_OBD_TimeRunWithMILOn;case 560: return Alarm_OBD_EngineOilTemperature;case 561: return Alarm_OBD_FuelSystem1Status;case 562: return Alarm_OBD_FuelSystem2Status;case 563: return Alarm_OBD_OxygenSensor1Voltage;case 564: return Alarm_OBD_OxygenSensor1ShortTermFuelTrim;case 565: return Alarm_OBD_OxygenSensor2Voltage;case 566: return Alarm_OBD_OxygenSensor2ShortTermFuelTrim;case 567: return Alarm_OBD_OxygenSensor3Voltage;case 568: return Alarm_OBD_OxygenSensor3ShortTermFuelTrim;case 569: return Alarm_OBD_OxygenSensor4Voltage;case 570: return Alarm_OBD_OxygenSensor4ShortTermFuelTrim;case 700: return Alarm_CANBus_Tachograph1_WorkingState1;case 701: return Alarm_CANBus_Tachograph1_WorkingState2;case 702: return Alarm_CANBus_Tachograph1_VehicleMotion;case 703: return Alarm_CANBus_Tachograph1_Driv_1_Time_Rel_States;case 704: return Alarm_CANBus_Tachograph1_Driver1_Card;case 705: return Alarm_CANBus_Tachograph1_VehicleOverspeed;case 706: return Alarm_CANBus_Tachograph1_Driv_2_Time_Rel_States;case 707: return Alarm_CANBus_Tachograph1_Driver2_Card;case 708: return Alarm_CANBus_Tachograph1_SystemEvent;case 709: return Alarm_CANBus_Tachograph1_HandlingInformation;case 710: return Alarm_CANBus_Tachograph1_TachographPerformance;case 711: return Alarm_CANBus_Tachograph1_DirectionIndicator;case 712: return Alarm_CANBus_Tachograph1_VehicleSpeed;case 713: return Alarm_CANBus_EngineTemperature1_EngineCoolantTemperature;case 714: return Alarm_CANBus_ElectronicEngineController1_ActualEnginePercent;case 715: return Alarm_CANBus_ElectronicEngineController1_EngineSpeed;case 716: return Alarm_CANBus_EngineHours_EngineTotalHours;case 717: return Alarm_CANBus_VehicleDistance_TotalVehicleDistance;case 718: return Alarm_CANBus_HighResolutionFuelConsumption_TotalFuelUsed;case 719: return Alarm_CANBus_DashDisplay_FuelLevel1;case 720: return Alarm_CANBus_AmbientConditions_AmbientAirTemperature;case 721: return Alarm_CANBus_FuelEconomy_FuelRate;case 722: return Alarm_CANBus_FuelEconomy_InstantaneousFuelEconomy;case 723: return Alarm_CANBus_AirSupplyPressure_ServiceBrakeAirPressureCircuit_1;case 724: return Alarm_CANBus_AirSupplyPressure_ServiceBrakeAirPressureCircuit_2;case 725: return Alarm_CANBus_AftertreatmentDieselExhaustFluidTankInformation_Tank1_Level;case 742: return Alarm_CANBus_TruckBus_ElectronicEngineController2_AcceleratorPedalPosition_1;case 743: return Alarm_CANBus_TruckBus_ElectronicEngineController2_EnginePercentLoad;case 744: return Alarm_CANBus_Truck_VehicleWeight_AxleWeight1;case 745: return Alarm_CANBus_Truck_VehicleWeight_AxleWeight2;case 746: return Alarm_CANBus_Truck_VehicleWeight_AxleWeight3;case 747: return Alarm_CANBus_Truck_ServiceInformation_ServiceDistance;case 748: return Alarm_CANBus_Truck_PTODriveEngagement_PTOEngageStat;case 749: return Alarm_CANBus_Truck_CombinationVehicleWeight_GrossCombinationVehicleWeight;case 750: return Alarm_CANBus_TruckBus_Electronic_Retarder_Controller_1_RetarderTorqueMode;case 751: return Alarm_CANBus_TruckBus_Electronic_Retarder_Controller_1_RetarderSelection;case 752: return Alarm_CANBus_Bus_DoorControl1_DoorPosition;case 753: return Alarm_CANBus_Bus_DoorControl1_RampWheelChairlift;case 754: return Alarm_CANBus_Bus_DoorControl1_DoorsStatus2;case 755: return Alarm_CANBus_Bus_DoorControl2;case 756: return Alarm_CANBus_BrakeLiningRemaining_AxleFrontLeftWheel;case 757: return Alarm_CANBus_BrakeLiningRemaining_AxleFrontRightWheel;case 758: return Alarm_CANBus_BrakeLiningRemaining_AxleRear1LeftWheel;case 759: return Alarm_CANBus_BrakeLiningRemaining_AxleRear1RightWheel;case 760: return Alarm_CANBus_BrakeLiningRemaining_AxleRear2LeftWheel;case 761: return Alarm_CANBus_BrakeLiningRemaining_AxleRear2RightWheel;case 762: return Alarm_CANBus_BrakeLiningRemaining_AxleRear3LeftWheel;case 763: return Alarm_CANBus_BrakeLiningRemaining_AxleRear3RightWheel;case 784: return Alarm_CANBus_TruckBus_CruiseControl;case 785: return Alarm_CANBus_Bus_AlternatorSpeed_AlternatorStatus1;case 786: return Alarm_CANBus_Bus_AlternatorSpeed_AlternatorStatus2;case 787: return Alarm_CANBus_Bus_AlternatorSpeed_AlternatorStatus3;case 788: return Alarm_CANBus_Bus_AlternatorSpeed_AlternatorStatus4;case 789: return Alarm_CANBus_Bus_ElectronicTransmissionController2_SelectedGear;case 790: return Alarm_CANBus_Bus_ElectronicTransmissionController2_CurrentGear;case 791: return Alarm_CANBus_Bus_AirSuspensionControl4_FrontAxleLeft;case 792: return Alarm_CANBus_Bus_AirSuspensionControl4_FrontAxleRight;case 793: return Alarm_CANBus_Bus_AirSuspensionControl4_RearAxleLeft;case 794: return Alarm_CANBus_Bus_AirSuspensionControl4_RearAxleright;case 795: return Alarm_CANBus_DashDisplay_FuelLevel2;case 796: return Alarm_CANBus_ElectronicBrakeController_BrakePedalPosition;case 797: return Alarm_CANBus_FuelConsumptionGaseous_TotalFuelUsed;case 798: return Alarm_CANBus_TruckBus_CruiseControlVehicleSpeed_ParkingBrakeSwitch;case 799: return Alarm_CANBus_TruckBus_CruiseControlVehicleSpeed_WheelBasedSpeed;case 800: return Alarm_CANBus_TruckBus_CruiseControlVehicleSpeed_CruiseControlActive;case 801: return Alarm_CANBus_TruckBus_CruiseControlVehicleSpeed_BrakeSwitch;case 802: return Alarm_CANBus_TruckBus_CruiseControlVehicleSpeed_ClutchSwitch;case 803: return Alarm_CANBus_TruckBus_CruiseControlVehicleSpeed_PtoState;case 804: return Alarm_CANBus_TruckBus_CruiseControlVehicleSpeed_CruiseControlStates;case 805: return Alarm_CANBus_Bus_VehicleElectricalPower_HybridBatteryPackRemainingCharge;
/*       */         case 806: return Alarm_CANBus_Bus_VehicleDynamicStabilityControl2_SteeringWheelAngle;
/*       */         case 807: return Alarm_CANBus_ElectronicEngineController14_FuelType;
/*       */         case 808: return Alarm_CANBus_EngineFluidLevelPressure_EngineOilLevel;
/*       */         case 809: return Alarm_CANBus_EngineFluidLevelPressure_EngineOilPressure;
/*       */         case 810: return Alarm_CANBus_EngineFluidLevelPressure_CoolantLevel;
/*       */         case 811: return Alarm_CANBus_TellTaleStatus;
/*       */         case 812: return Alarm_CANBus_FuelConsumption_EngineTotalFuelUsed;
/*       */         case 813: return Alarm_CANBus_Truck_VehicleWeight_AxleWeight4; }  return null; }
/*       */     public static Internal.EnumLiteMap<AlarmType> internalGetValueMap() { return internalValueMap; }
/*       */     static {  }
/*       */     public final Descriptors.EnumValueDescriptor getValueDescriptor() { if (this == UNRECOGNIZED)
/*       */         throw new IllegalStateException("Can't get the descriptor of an unrecognized enum value.");  return getDescriptor().getValues().get(ordinal()); }
/*       */     public final Descriptors.EnumDescriptor getDescriptorForType() { return getDescriptor(); }
/*       */     public static final Descriptors.EnumDescriptor getDescriptor() { return DolphinConfig.getDescriptor().getEnumTypes().get(10); }
/*  3905 */     AlarmType(int value) { this.value = value; }
/*       */   
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public enum EventType
/*       */     implements ProtocolMessageEnum
/*       */   {
/*  3919 */     Monitoring(0),
/*       */ 
/*       */ 
/*       */     
/*  3923 */     OnExit(1),
/*       */ 
/*       */ 
/*       */     
/*  3927 */     OnEntrance(2),
/*       */ 
/*       */ 
/*       */     
/*  3931 */     OnBoth(3),
/*       */ 
/*       */ 
/*       */     
/*  3935 */     OnHystersis(4),
/*       */ 
/*       */ 
/*       */     
/*  3939 */     OnChange(5),
/*       */ 
/*       */ 
/*       */     
/*  3943 */     OnDeltaChange(6),
/*  3944 */     UNRECOGNIZED(-1);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Monitoring_VALUE = 0;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int OnExit_VALUE = 1;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int OnEntrance_VALUE = 2;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int OnBoth_VALUE = 3;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int OnHystersis_VALUE = 4;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int OnChange_VALUE = 5;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int OnDeltaChange_VALUE = 6;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*  4017 */     private static final Internal.EnumLiteMap<EventType> internalValueMap = new Internal.EnumLiteMap<EventType>()
/*       */       {
/*       */         public DolphinConfig.EventType findValueByNumber(int number) {
/*  4020 */           return DolphinConfig.EventType.forNumber(number);
/*       */         }
/*       */       };
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*  4041 */     private static final EventType[] VALUES = values(); private final int value; public final int getNumber() { if (this == UNRECOGNIZED)
/*       */         throw new IllegalArgumentException("Can't get the number of an unknown enum value.");  return this.value; }
/*       */     public static EventType forNumber(int value) { switch (value) { case 0: return Monitoring;
/*       */         case 1: return OnExit;
/*       */         case 2: return OnEntrance;
/*       */         case 3: return OnBoth;
/*       */         case 4: return OnHystersis;
/*       */         case 5:
/*       */           return OnChange;
/*       */         case 6:
/*       */           return OnDeltaChange; }  return null; }
/*       */     public static Internal.EnumLiteMap<EventType> internalGetValueMap() { return internalValueMap; }
/*       */     static {  }
/*       */     public final Descriptors.EnumValueDescriptor getValueDescriptor() { if (this == UNRECOGNIZED)
/*       */         throw new IllegalStateException("Can't get the descriptor of an unrecognized enum value.");  return getDescriptor().getValues().get(ordinal()); }
/*       */     public final Descriptors.EnumDescriptor getDescriptorForType() { return getDescriptor(); }
/*       */     public static final Descriptors.EnumDescriptor getDescriptor() { return DolphinConfig.getDescriptor().getEnumTypes().get(11); }
/*  4058 */     EventType(int value) { this.value = value; }
/*       */   
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public enum Priority
/*       */     implements ProtocolMessageEnum
/*       */   {
/*  4072 */     PR_None(0),
/*       */ 
/*       */ 
/*       */     
/*  4076 */     PR_Low(1),
/*       */ 
/*       */ 
/*       */     
/*  4080 */     PR_High(2),
/*       */ 
/*       */ 
/*       */     
/*  4084 */     PR_SendData(3),
/*  4085 */     UNRECOGNIZED(-1);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int PR_None_VALUE = 0;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int PR_Low_VALUE = 1;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int PR_High_VALUE = 2;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int PR_SendData_VALUE = 3;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*  4143 */     private static final Internal.EnumLiteMap<Priority> internalValueMap = new Internal.EnumLiteMap<Priority>()
/*       */       {
/*       */         public DolphinConfig.Priority findValueByNumber(int number) {
/*  4146 */           return DolphinConfig.Priority.forNumber(number);
/*       */         }
/*       */       };
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*  4167 */     private static final Priority[] VALUES = values(); private final int value; public final int getNumber() { if (this == UNRECOGNIZED)
/*       */         throw new IllegalArgumentException("Can't get the number of an unknown enum value.");  return this.value; }
/*       */     public static Priority forNumber(int value) { switch (value) { case 0:
/*       */           return PR_None;
/*       */         case 1:
/*       */           return PR_Low;
/*       */         case 2:
/*       */           return PR_High;
/*       */         case 3:
/*       */           return PR_SendData; }
/*       */        return null; }
/*       */     public static Internal.EnumLiteMap<Priority> internalGetValueMap() { return internalValueMap; }
/*       */     static {  }
/*       */     public final Descriptors.EnumValueDescriptor getValueDescriptor() { if (this == UNRECOGNIZED)
/*       */         throw new IllegalStateException("Can't get the descriptor of an unrecognized enum value.");  return getDescriptor().getValues().get(ordinal()); }
/*       */     public final Descriptors.EnumDescriptor getDescriptorForType() { return getDescriptor(); }
/*       */     public static final Descriptors.EnumDescriptor getDescriptor() { return DolphinConfig.getDescriptor().getEnumTypes().get(12); }
/*  4184 */     Priority(int value) { this.value = value; }
/*       */   
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public enum DigitalOutputName
/*       */     implements ProtocolMessageEnum
/*       */   {
/*  4202 */     DigitalOutput_None(0),
/*       */ 
/*       */ 
/*       */     
/*  4206 */     DigitalOutput_1(1),
/*       */ 
/*       */ 
/*       */     
/*  4210 */     DigitalOutput_2(2),
/*  4211 */     UNRECOGNIZED(-1);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int DigitalOutput_None_VALUE = 0;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int DigitalOutput_1_VALUE = 1;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int DigitalOutput_2_VALUE = 2;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*  4264 */     private static final Internal.EnumLiteMap<DigitalOutputName> internalValueMap = new Internal.EnumLiteMap<DigitalOutputName>()
/*       */       {
/*       */         public DolphinConfig.DigitalOutputName findValueByNumber(int number) {
/*  4267 */           return DolphinConfig.DigitalOutputName.forNumber(number);
/*       */         }
/*       */       };
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*  4288 */     private static final DigitalOutputName[] VALUES = values(); private final int value; public final int getNumber() { if (this == UNRECOGNIZED)
/*       */         throw new IllegalArgumentException("Can't get the number of an unknown enum value.");  return this.value; }
/*       */     public static DigitalOutputName forNumber(int value) { switch (value) {
/*       */         case 0:
/*       */           return DigitalOutput_None;
/*       */         case 1:
/*       */           return DigitalOutput_1;
/*       */         case 2:
/*       */           return DigitalOutput_2;
/*       */       }  return null; }
/*       */     public static Internal.EnumLiteMap<DigitalOutputName> internalGetValueMap() { return internalValueMap; }
/*       */     static {  }
/*       */     public final Descriptors.EnumValueDescriptor getValueDescriptor() { if (this == UNRECOGNIZED)
/*       */         throw new IllegalStateException("Can't get the descriptor of an unrecognized enum value."); 
/*       */       return getDescriptor().getValues().get(ordinal()); }
/*       */     public final Descriptors.EnumDescriptor getDescriptorForType() { return getDescriptor(); }
/*       */     public static final Descriptors.EnumDescriptor getDescriptor() { return DolphinConfig.getDescriptor().getEnumTypes().get(13); }
/*  4305 */     DigitalOutputName(int value) { this.value = value; }
/*       */   
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public enum OverSpeedingDeactivationMode
/*       */     implements ProtocolMessageEnum
/*       */   {
/*  4323 */     OverSpeedingDeactivationMode_Timeout(0),
/*       */ 
/*       */ 
/*       */     
/*  4327 */     OverSpeedingDeactivationMode_Speed(1),
/*  4328 */     UNRECOGNIZED(-1);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int OverSpeedingDeactivationMode_Timeout_VALUE = 0;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int OverSpeedingDeactivationMode_Speed_VALUE = 1;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*  4376 */     private static final Internal.EnumLiteMap<OverSpeedingDeactivationMode> internalValueMap = new Internal.EnumLiteMap<OverSpeedingDeactivationMode>()
/*       */       {
/*       */         public DolphinConfig.OverSpeedingDeactivationMode findValueByNumber(int number) {
/*  4379 */           return DolphinConfig.OverSpeedingDeactivationMode.forNumber(number);
/*       */         }
/*       */       };
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*  4400 */     private static final OverSpeedingDeactivationMode[] VALUES = values(); private final int value; public final int getNumber() { if (this == UNRECOGNIZED)
/*       */         throw new IllegalArgumentException("Can't get the number of an unknown enum value."); 
/*       */       return this.value; }
/*       */     public static OverSpeedingDeactivationMode forNumber(int value) { switch (value) {
/*       */         case 0:
/*       */           return OverSpeedingDeactivationMode_Timeout;
/*       */         case 1:
/*       */           return OverSpeedingDeactivationMode_Speed;
/*       */       } 
/*       */       return null; }
/*       */     public static Internal.EnumLiteMap<OverSpeedingDeactivationMode> internalGetValueMap() { return internalValueMap; }
/*       */     static {  }
/*       */     public final Descriptors.EnumValueDescriptor getValueDescriptor() { if (this == UNRECOGNIZED)
/*       */         throw new IllegalStateException("Can't get the descriptor of an unrecognized enum value."); 
/*       */       return getDescriptor().getValues().get(ordinal()); }
/*       */     public final Descriptors.EnumDescriptor getDescriptorForType() { return getDescriptor(); }
/*       */     public static final Descriptors.EnumDescriptor getDescriptor() { return DolphinConfig.getDescriptor().getEnumTypes().get(14); }
/*  4417 */     OverSpeedingDeactivationMode(int value) { this.value = value; }
/*       */   
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public enum DriverRegistration_Mode
/*       */     implements ProtocolMessageEnum
/*       */   {
/*  4435 */     DRMode_Disabled(0),
/*       */ 
/*       */ 
/*       */     
/*  4439 */     DRMode_Registration(1),
/*  4440 */     UNRECOGNIZED(-1);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int DRMode_Disabled_VALUE = 0;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int DRMode_Registration_VALUE = 1;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*  4488 */     private static final Internal.EnumLiteMap<DriverRegistration_Mode> internalValueMap = new Internal.EnumLiteMap<DriverRegistration_Mode>()
/*       */       {
/*       */         public DolphinConfig.DriverRegistration_Mode findValueByNumber(int number) {
/*  4491 */           return DolphinConfig.DriverRegistration_Mode.forNumber(number);
/*       */         }
/*       */       };
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*  4512 */     private static final DriverRegistration_Mode[] VALUES = values(); private final int value; public final int getNumber() { if (this == UNRECOGNIZED)
/*       */         throw new IllegalArgumentException("Can't get the number of an unknown enum value."); 
/*       */       return this.value; }
/*       */     public static DriverRegistration_Mode forNumber(int value) { switch (value) {
/*       */         case 0:
/*       */           return DRMode_Disabled;
/*       */         case 1:
/*       */           return DRMode_Registration;
/*       */       } 
/*       */       return null; }
/*       */     public static Internal.EnumLiteMap<DriverRegistration_Mode> internalGetValueMap() { return internalValueMap; }
/*       */     static {  }
/*       */     public final Descriptors.EnumValueDescriptor getValueDescriptor() { if (this == UNRECOGNIZED)
/*       */         throw new IllegalStateException("Can't get the descriptor of an unrecognized enum value."); 
/*       */       return getDescriptor().getValues().get(ordinal()); }
/*       */     public final Descriptors.EnumDescriptor getDescriptorForType() { return getDescriptor(); }
/*       */     public static final Descriptors.EnumDescriptor getDescriptor() { return DolphinConfig.getDescriptor().getEnumTypes().get(15); }
/*  4529 */     DriverRegistration_Mode(int value) { this.value = value; }
/*       */   
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public enum DriverRegistration_Authentication
/*       */     implements ProtocolMessageEnum
/*       */   {
/*  4543 */     DRAuth_UnAuthorized(0),
/*       */ 
/*       */ 
/*       */     
/*  4547 */     DRAuth_Authorized(1),
/*  4548 */     UNRECOGNIZED(-1);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int DRAuth_UnAuthorized_VALUE = 0;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int DRAuth_Authorized_VALUE = 1;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*  4596 */     private static final Internal.EnumLiteMap<DriverRegistration_Authentication> internalValueMap = new Internal.EnumLiteMap<DriverRegistration_Authentication>()
/*       */       {
/*       */         public DolphinConfig.DriverRegistration_Authentication findValueByNumber(int number) {
/*  4599 */           return DolphinConfig.DriverRegistration_Authentication.forNumber(number);
/*       */         }
/*       */       };
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*  4620 */     private static final DriverRegistration_Authentication[] VALUES = values(); private final int value; public final int getNumber() { if (this == UNRECOGNIZED)
/*       */         throw new IllegalArgumentException("Can't get the number of an unknown enum value."); 
/*       */       return this.value; }
/*       */     public static DriverRegistration_Authentication forNumber(int value) { switch (value) {
/*       */         case 0:
/*       */           return DRAuth_UnAuthorized;
/*       */         case 1:
/*       */           return DRAuth_Authorized;
/*       */       } 
/*       */       return null; }
/*       */     public static Internal.EnumLiteMap<DriverRegistration_Authentication> internalGetValueMap() { return internalValueMap; }
/*       */     static {  }
/*       */     public final Descriptors.EnumValueDescriptor getValueDescriptor() { if (this == UNRECOGNIZED)
/*       */         throw new IllegalStateException("Can't get the descriptor of an unrecognized enum value."); 
/*       */       return getDescriptor().getValues().get(ordinal()); }
/*       */     public final Descriptors.EnumDescriptor getDescriptorForType() { return getDescriptor(); }
/*       */     public static final Descriptors.EnumDescriptor getDescriptor() { return DolphinConfig.getDescriptor().getEnumTypes().get(16); }
/*  4637 */     DriverRegistration_Authentication(int value) { this.value = value; }
/*       */   
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public enum BluetoothMode
/*       */     implements ProtocolMessageEnum
/*       */   {
/*  4655 */     BM_Disabled(0),
/*       */ 
/*       */ 
/*       */     
/*  4659 */     BM_EnableHidden(1),
/*       */ 
/*       */ 
/*       */     
/*  4663 */     BM_EnableVisible(2),
/*  4664 */     UNRECOGNIZED(-1);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int BM_Disabled_VALUE = 0;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int BM_EnableHidden_VALUE = 1;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int BM_EnableVisible_VALUE = 2;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*  4717 */     private static final Internal.EnumLiteMap<BluetoothMode> internalValueMap = new Internal.EnumLiteMap<BluetoothMode>()
/*       */       {
/*       */         public DolphinConfig.BluetoothMode findValueByNumber(int number) {
/*  4720 */           return DolphinConfig.BluetoothMode.forNumber(number);
/*       */         }
/*       */       };
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*  4741 */     private static final BluetoothMode[] VALUES = values(); private final int value; public final int getNumber() { if (this == UNRECOGNIZED)
/*       */         throw new IllegalArgumentException("Can't get the number of an unknown enum value.");  return this.value; }
/*       */     public static BluetoothMode forNumber(int value) { switch (value) {
/*       */         case 0:
/*       */           return BM_Disabled;
/*       */         case 1:
/*       */           return BM_EnableHidden;
/*       */         case 2:
/*       */           return BM_EnableVisible;
/*       */       }  return null; }
/*       */     public static Internal.EnumLiteMap<BluetoothMode> internalGetValueMap() { return internalValueMap; }
/*       */     static {  }
/*       */     public final Descriptors.EnumValueDescriptor getValueDescriptor() { if (this == UNRECOGNIZED)
/*       */         throw new IllegalStateException("Can't get the descriptor of an unrecognized enum value."); 
/*       */       return getDescriptor().getValues().get(ordinal()); }
/*       */     public final Descriptors.EnumDescriptor getDescriptorForType() { return getDescriptor(); }
/*       */     public static final Descriptors.EnumDescriptor getDescriptor() { return DolphinConfig.getDescriptor().getEnumTypes().get(17); }
/*  4758 */     BluetoothMode(int value) { this.value = value; }
/*       */   
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public enum BluetoothSecurityMode
/*       */     implements ProtocolMessageEnum
/*       */   {
/*  4772 */     BSMode_PINOnly(0),
/*       */ 
/*       */ 
/*       */     
/*  4776 */     BSMode_PIN_MACList(1),
/*       */ 
/*       */ 
/*       */     
/*  4780 */     BSMode_MACList(2),
/*       */ 
/*       */ 
/*       */     
/*  4784 */     BSMode_None(3),
/*  4785 */     UNRECOGNIZED(-1);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int BSMode_PINOnly_VALUE = 0;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int BSMode_PIN_MACList_VALUE = 1;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int BSMode_MACList_VALUE = 2;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int BSMode_None_VALUE = 3;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*  4843 */     private static final Internal.EnumLiteMap<BluetoothSecurityMode> internalValueMap = new Internal.EnumLiteMap<BluetoothSecurityMode>()
/*       */       {
/*       */         public DolphinConfig.BluetoothSecurityMode findValueByNumber(int number) {
/*  4846 */           return DolphinConfig.BluetoothSecurityMode.forNumber(number);
/*       */         }
/*       */       };
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*  4867 */     private static final BluetoothSecurityMode[] VALUES = values(); private final int value; public final int getNumber() { if (this == UNRECOGNIZED)
/*       */         throw new IllegalArgumentException("Can't get the number of an unknown enum value.");  return this.value; }
/*       */     public static BluetoothSecurityMode forNumber(int value) { switch (value) { case 0:
/*       */           return BSMode_PINOnly;
/*       */         case 1:
/*       */           return BSMode_PIN_MACList;
/*       */         case 2:
/*       */           return BSMode_MACList;
/*       */         case 3:
/*       */           return BSMode_None; }
/*       */        return null; }
/*       */     public static Internal.EnumLiteMap<BluetoothSecurityMode> internalGetValueMap() { return internalValueMap; }
/*       */     static {  }
/*       */     public final Descriptors.EnumValueDescriptor getValueDescriptor() { if (this == UNRECOGNIZED)
/*       */         throw new IllegalStateException("Can't get the descriptor of an unrecognized enum value.");  return getDescriptor().getValues().get(ordinal()); }
/*       */     public final Descriptors.EnumDescriptor getDescriptorForType() { return getDescriptor(); }
/*       */     public static final Descriptors.EnumDescriptor getDescriptor() { return DolphinConfig.getDescriptor().getEnumTypes().get(18); }
/*  4884 */     BluetoothSecurityMode(int value) { this.value = value; }
/*       */   
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public enum BluetoothExternalConnectionMode
/*       */     implements ProtocolMessageEnum
/*       */   {
/*  4898 */     BECMode_None(0),
/*       */ 
/*       */ 
/*       */     
/*  4902 */     BECMode_HandsFree(1),
/*       */ 
/*       */ 
/*       */     
/*  4906 */     BECMode_OBDII(2),
/*       */ 
/*       */ 
/*       */     
/*  4910 */     BECMode_DataLink(3),
/*  4911 */     UNRECOGNIZED(-1);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int BECMode_None_VALUE = 0;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int BECMode_HandsFree_VALUE = 1;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int BECMode_OBDII_VALUE = 2;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int BECMode_DataLink_VALUE = 3;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*  4969 */     private static final Internal.EnumLiteMap<BluetoothExternalConnectionMode> internalValueMap = new Internal.EnumLiteMap<BluetoothExternalConnectionMode>()
/*       */       {
/*       */         public DolphinConfig.BluetoothExternalConnectionMode findValueByNumber(int number) {
/*  4972 */           return DolphinConfig.BluetoothExternalConnectionMode.forNumber(number);
/*       */         }
/*       */       };
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*  4993 */     private static final BluetoothExternalConnectionMode[] VALUES = values(); private final int value; public final int getNumber() { if (this == UNRECOGNIZED)
/*       */         throw new IllegalArgumentException("Can't get the number of an unknown enum value.");  return this.value; }
/*       */     public static BluetoothExternalConnectionMode forNumber(int value) { switch (value) { case 0:
/*       */           return BECMode_None;
/*       */         case 1:
/*       */           return BECMode_HandsFree;
/*       */         case 2:
/*       */           return BECMode_OBDII;
/*       */         case 3:
/*       */           return BECMode_DataLink; }
/*       */        return null; }
/*       */     public static Internal.EnumLiteMap<BluetoothExternalConnectionMode> internalGetValueMap() { return internalValueMap; }
/*       */     static {  }
/*       */     public final Descriptors.EnumValueDescriptor getValueDescriptor() { if (this == UNRECOGNIZED)
/*       */         throw new IllegalStateException("Can't get the descriptor of an unrecognized enum value.");  return getDescriptor().getValues().get(ordinal()); }
/*       */     public final Descriptors.EnumDescriptor getDescriptorForType() { return getDescriptor(); }
/*       */     public static final Descriptors.EnumDescriptor getDescriptor() { return DolphinConfig.getDescriptor().getEnumTypes().get(19); }
/*  5010 */     BluetoothExternalConnectionMode(int value) { this.value = value; }
/*       */   
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public enum ServerProtocol
/*       */     implements ProtocolMessageEnum
/*       */   {
/*  5028 */     TCP(0),
/*       */ 
/*       */ 
/*       */     
/*  5032 */     UDP(1),
/*       */ 
/*       */ 
/*       */     
/*  5036 */     SSL(2),
/*  5037 */     UNRECOGNIZED(-1);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int TCP_VALUE = 0;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int UDP_VALUE = 1;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int SSL_VALUE = 2;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*  5090 */     private static final Internal.EnumLiteMap<ServerProtocol> internalValueMap = new Internal.EnumLiteMap<ServerProtocol>()
/*       */       {
/*       */         public DolphinConfig.ServerProtocol findValueByNumber(int number) {
/*  5093 */           return DolphinConfig.ServerProtocol.forNumber(number);
/*       */         }
/*       */       };
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*  5114 */     private static final ServerProtocol[] VALUES = values(); private final int value; public final int getNumber() { if (this == UNRECOGNIZED)
/*       */         throw new IllegalArgumentException("Can't get the number of an unknown enum value.");  return this.value; }
/*       */     public static ServerProtocol forNumber(int value) { switch (value) {
/*       */         case 0:
/*       */           return TCP;
/*       */         case 1:
/*       */           return UDP;
/*       */         case 2:
/*       */           return SSL;
/*       */       }  return null; }
/*       */     public static Internal.EnumLiteMap<ServerProtocol> internalGetValueMap() { return internalValueMap; }
/*       */     static {  }
/*       */     public final Descriptors.EnumValueDescriptor getValueDescriptor() { if (this == UNRECOGNIZED)
/*       */         throw new IllegalStateException("Can't get the descriptor of an unrecognized enum value."); 
/*       */       return getDescriptor().getValues().get(ordinal()); }
/*       */     public final Descriptors.EnumDescriptor getDescriptorForType() { return getDescriptor(); }
/*       */     public static final Descriptors.EnumDescriptor getDescriptor() { return DolphinConfig.getDescriptor().getEnumTypes().get(20); }
/*  5131 */     ServerProtocol(int value) { this.value = value; }
/*       */   
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public enum AuthenticationMode
/*       */     implements ProtocolMessageEnum
/*       */   {
/*  5145 */     Authentication_IMEI(0),
/*       */ 
/*       */ 
/*       */     
/*  5149 */     Authentication_AuthenticationCodeAndIMEI(1),
/*  5150 */     UNRECOGNIZED(-1);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Authentication_IMEI_VALUE = 0;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Authentication_AuthenticationCodeAndIMEI_VALUE = 1;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*  5198 */     private static final Internal.EnumLiteMap<AuthenticationMode> internalValueMap = new Internal.EnumLiteMap<AuthenticationMode>()
/*       */       {
/*       */         public DolphinConfig.AuthenticationMode findValueByNumber(int number) {
/*  5201 */           return DolphinConfig.AuthenticationMode.forNumber(number);
/*       */         }
/*       */       };
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*  5222 */     private static final AuthenticationMode[] VALUES = values(); private final int value; public final int getNumber() { if (this == UNRECOGNIZED)
/*       */         throw new IllegalArgumentException("Can't get the number of an unknown enum value."); 
/*       */       return this.value; }
/*       */     public static AuthenticationMode forNumber(int value) { switch (value) {
/*       */         case 0:
/*       */           return Authentication_IMEI;
/*       */         case 1:
/*       */           return Authentication_AuthenticationCodeAndIMEI;
/*       */       } 
/*       */       return null; }
/*       */     public static Internal.EnumLiteMap<AuthenticationMode> internalGetValueMap() { return internalValueMap; }
/*       */     static {  }
/*       */     public final Descriptors.EnumValueDescriptor getValueDescriptor() { if (this == UNRECOGNIZED)
/*       */         throw new IllegalStateException("Can't get the descriptor of an unrecognized enum value."); 
/*       */       return getDescriptor().getValues().get(ordinal()); }
/*       */     public final Descriptors.EnumDescriptor getDescriptorForType() { return getDescriptor(); }
/*       */     public static final Descriptors.EnumDescriptor getDescriptor() { return DolphinConfig.getDescriptor().getEnumTypes().get(21); }
/*  5239 */     AuthenticationMode(int value) { this.value = value; }
/*       */   
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public enum TiltStatus
/*       */     implements ProtocolMessageEnum
/*       */   {
/*  5257 */     TS_Unknown(0),
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*  5265 */     TS_BoardReset(90),
/*       */ 
/*       */ 
/*       */     
/*  5269 */     TS_OffsetReset(91),
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*  5277 */     TS_NormalTilt(100),
/*       */ 
/*       */ 
/*       */     
/*  5281 */     TS_AuthorizedTiltUnloading(101),
/*       */ 
/*       */ 
/*       */     
/*  5285 */     TS_PTOActive(102),
/*       */ 
/*       */ 
/*       */     
/*  5289 */     TS_InvalidTilt(103),
/*       */ 
/*       */ 
/*       */     
/*  5293 */     TS_UnauthorizedTiltUnloading(104),
/*  5294 */     UNRECOGNIZED(-1);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int TS_Unknown_VALUE = 0;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int TS_BoardReset_VALUE = 90;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int TS_OffsetReset_VALUE = 91;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int TS_NormalTilt_VALUE = 100;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int TS_AuthorizedTiltUnloading_VALUE = 101;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int TS_PTOActive_VALUE = 102;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int TS_InvalidTilt_VALUE = 103;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int TS_UnauthorizedTiltUnloading_VALUE = 104;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*  5380 */     private static final Internal.EnumLiteMap<TiltStatus> internalValueMap = new Internal.EnumLiteMap<TiltStatus>()
/*       */       {
/*       */         public DolphinConfig.TiltStatus findValueByNumber(int number) {
/*  5383 */           return DolphinConfig.TiltStatus.forNumber(number);
/*       */         }
/*       */       };
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*  5404 */     private static final TiltStatus[] VALUES = values(); private final int value; public final int getNumber() { if (this == UNRECOGNIZED)
/*       */         throw new IllegalArgumentException("Can't get the number of an unknown enum value.");  return this.value; }
/*       */     public static TiltStatus forNumber(int value) { switch (value) { case 0: return TS_Unknown;
/*       */         case 90: return TS_BoardReset;
/*       */         case 91: return TS_OffsetReset;
/*       */         case 100: return TS_NormalTilt;
/*       */         case 101: return TS_AuthorizedTiltUnloading;
/*       */         case 102: return TS_PTOActive;
/*       */         case 103: return TS_InvalidTilt;
/*       */         case 104:
/*       */           return TS_UnauthorizedTiltUnloading; }  return null; }
/*       */     public static Internal.EnumLiteMap<TiltStatus> internalGetValueMap() { return internalValueMap; }
/*       */     static {  }
/*       */     public final Descriptors.EnumValueDescriptor getValueDescriptor() { if (this == UNRECOGNIZED)
/*       */         throw new IllegalStateException("Can't get the descriptor of an unrecognized enum value.");  return getDescriptor().getValues().get(ordinal()); }
/*       */     public final Descriptors.EnumDescriptor getDescriptorForType() { return getDescriptor(); }
/*       */     public static final Descriptors.EnumDescriptor getDescriptor() { return DolphinConfig.getDescriptor().getEnumTypes().get(22); }
/*  5421 */     TiltStatus(int value) { this.value = value; }
/*       */   
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public enum ECUInterface
/*       */     implements ProtocolMessageEnum
/*       */   {
/*  5439 */     ECU_Disabled(0),
/*       */ 
/*       */ 
/*       */     
/*  5443 */     OBD_Auto(1),
/*       */ 
/*       */ 
/*       */     
/*  5447 */     OBD_KLine_ISO14230_KWP_Fast(2),
/*       */ 
/*       */ 
/*       */     
/*  5451 */     OBD_KLine_ISO14230_KWP_5Baud(3),
/*       */ 
/*       */ 
/*       */     
/*  5455 */     OBD_KLine_ISO9141(4),
/*       */ 
/*       */ 
/*       */     
/*  5459 */     OBD_CAN_ISO15765_11bit_500(5),
/*       */ 
/*       */ 
/*       */     
/*  5463 */     OBD_CAN_ISO15765_11bit_250(6),
/*       */ 
/*       */ 
/*       */     
/*  5467 */     OBD_CAN_ISO15765_29bit_500(7),
/*       */ 
/*       */ 
/*       */     
/*  5471 */     OBD_CAN_ISO15765_29bit_250(8),
/*       */ 
/*       */ 
/*       */     
/*  5475 */     OBD_KLine_Siemense(9),
/*       */ 
/*       */ 
/*       */     
/*  5479 */     CANBus_FMS(20),
/*       */ 
/*       */ 
/*       */     
/*  5483 */     CANBus_BenzAxor(21),
/*       */ 
/*       */ 
/*       */     
/*  5487 */     CANBus_Scania(22),
/*  5488 */     UNRECOGNIZED(-1);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int ECU_Disabled_VALUE = 0;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int OBD_Auto_VALUE = 1;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int OBD_KLine_ISO14230_KWP_Fast_VALUE = 2;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int OBD_KLine_ISO14230_KWP_5Baud_VALUE = 3;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int OBD_KLine_ISO9141_VALUE = 4;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int OBD_CAN_ISO15765_11bit_500_VALUE = 5;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int OBD_CAN_ISO15765_11bit_250_VALUE = 6;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int OBD_CAN_ISO15765_29bit_500_VALUE = 7;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int OBD_CAN_ISO15765_29bit_250_VALUE = 8;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int OBD_KLine_Siemense_VALUE = 9;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int CANBus_FMS_VALUE = 20;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int CANBus_BenzAxor_VALUE = 21;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int CANBus_Scania_VALUE = 22;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*  5591 */     private static final Internal.EnumLiteMap<ECUInterface> internalValueMap = new Internal.EnumLiteMap<ECUInterface>()
/*       */       {
/*       */         public DolphinConfig.ECUInterface findValueByNumber(int number) {
/*  5594 */           return DolphinConfig.ECUInterface.forNumber(number);
/*       */         }
/*       */       };
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*  5615 */     private static final ECUInterface[] VALUES = values(); private final int value; public final int getNumber() { if (this == UNRECOGNIZED)
/*       */         throw new IllegalArgumentException("Can't get the number of an unknown enum value.");  return this.value; }
/*       */     public static ECUInterface forNumber(int value) { switch (value) { case 0: return ECU_Disabled;case 1: return OBD_Auto;case 2: return OBD_KLine_ISO14230_KWP_Fast;case 3: return OBD_KLine_ISO14230_KWP_5Baud;case 4: return OBD_KLine_ISO9141;
/*       */         case 5: return OBD_CAN_ISO15765_11bit_500;
/*       */         case 6: return OBD_CAN_ISO15765_11bit_250;
/*       */         case 7: return OBD_CAN_ISO15765_29bit_500;
/*       */         case 8: return OBD_CAN_ISO15765_29bit_250;
/*       */         case 9: return OBD_KLine_Siemense;
/*       */         case 20: return CANBus_FMS;
/*       */         case 21: return CANBus_BenzAxor;
/*       */         case 22: return CANBus_Scania; }  return null; }
/*       */     public static Internal.EnumLiteMap<ECUInterface> internalGetValueMap() { return internalValueMap; }
/*       */     static {  }
/*       */     public final Descriptors.EnumValueDescriptor getValueDescriptor() { if (this == UNRECOGNIZED)
/*       */         throw new IllegalStateException("Can't get the descriptor of an unrecognized enum value.");  return getDescriptor().getValues().get(ordinal()); }
/*       */     public final Descriptors.EnumDescriptor getDescriptorForType() { return getDescriptor(); }
/*       */     public static final Descriptors.EnumDescriptor getDescriptor() { return DolphinConfig.getDescriptor().getEnumTypes().get(23); }
/*  5632 */     ECUInterface(int value) { this.value = value; }
/*       */   
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public enum FuelConsumption
/*       */     implements ProtocolMessageEnum
/*       */   {
/*  5650 */     FC_Disabled(0),
/*       */ 
/*       */ 
/*       */     
/*  5654 */     FC_Gasoline(1),
/*       */ 
/*       */ 
/*       */     
/*  5658 */     FC_Diesel(2),
/*  5659 */     UNRECOGNIZED(-1);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int FC_Disabled_VALUE = 0;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int FC_Gasoline_VALUE = 1;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int FC_Diesel_VALUE = 2;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*  5712 */     private static final Internal.EnumLiteMap<FuelConsumption> internalValueMap = new Internal.EnumLiteMap<FuelConsumption>()
/*       */       {
/*       */         public DolphinConfig.FuelConsumption findValueByNumber(int number) {
/*  5715 */           return DolphinConfig.FuelConsumption.forNumber(number);
/*       */         }
/*       */       };
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*  5736 */     private static final FuelConsumption[] VALUES = values(); private final int value; public final int getNumber() { if (this == UNRECOGNIZED)
/*       */         throw new IllegalArgumentException("Can't get the number of an unknown enum value.");  return this.value; }
/*       */     public static FuelConsumption forNumber(int value) { switch (value) {
/*       */         case 0:
/*       */           return FC_Disabled;
/*       */         case 1:
/*       */           return FC_Gasoline;
/*       */         case 2:
/*       */           return FC_Diesel;
/*       */       }  return null; }
/*       */     public static Internal.EnumLiteMap<FuelConsumption> internalGetValueMap() { return internalValueMap; }
/*       */     static {  }
/*       */     public final Descriptors.EnumValueDescriptor getValueDescriptor() { if (this == UNRECOGNIZED)
/*       */         throw new IllegalStateException("Can't get the descriptor of an unrecognized enum value."); 
/*       */       return getDescriptor().getValues().get(ordinal()); }
/*       */     public final Descriptors.EnumDescriptor getDescriptorForType() { return getDescriptor(); }
/*       */     public static final Descriptors.EnumDescriptor getDescriptor() { return DolphinConfig.getDescriptor().getEnumTypes().get(24); }
/*  5753 */     FuelConsumption(int value) { this.value = value; }
/*       */   
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public enum CrashTraceType
/*       */     implements ProtocolMessageEnum
/*       */   {
/*  5771 */     Trace_Disabled(0),
/*       */ 
/*       */ 
/*       */     
/*  5775 */     Trace_Point(1),
/*       */ 
/*       */ 
/*       */     
/*  5779 */     Trace_IO(2),
/*  5780 */     UNRECOGNIZED(-1);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Trace_Disabled_VALUE = 0;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Trace_Point_VALUE = 1;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Trace_IO_VALUE = 2;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*  5833 */     private static final Internal.EnumLiteMap<CrashTraceType> internalValueMap = new Internal.EnumLiteMap<CrashTraceType>()
/*       */       {
/*       */         public DolphinConfig.CrashTraceType findValueByNumber(int number) {
/*  5836 */           return DolphinConfig.CrashTraceType.forNumber(number);
/*       */         }
/*       */       };
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*  5857 */     private static final CrashTraceType[] VALUES = values(); private final int value; public final int getNumber() { if (this == UNRECOGNIZED)
/*       */         throw new IllegalArgumentException("Can't get the number of an unknown enum value.");  return this.value; }
/*       */     public static CrashTraceType forNumber(int value) { switch (value) {
/*       */         case 0:
/*       */           return Trace_Disabled;
/*       */         case 1:
/*       */           return Trace_Point;
/*       */         case 2:
/*       */           return Trace_IO;
/*       */       }  return null; }
/*       */     public static Internal.EnumLiteMap<CrashTraceType> internalGetValueMap() { return internalValueMap; }
/*       */     static {  }
/*       */     public final Descriptors.EnumValueDescriptor getValueDescriptor() { if (this == UNRECOGNIZED)
/*       */         throw new IllegalStateException("Can't get the descriptor of an unrecognized enum value."); 
/*       */       return getDescriptor().getValues().get(ordinal()); }
/*       */     public final Descriptors.EnumDescriptor getDescriptorForType() { return getDescriptor(); }
/*       */     public static final Descriptors.EnumDescriptor getDescriptor() { return DolphinConfig.getDescriptor().getEnumTypes().get(25); }
/*  5874 */     CrashTraceType(int value) { this.value = value; }
/*       */   
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public enum NumberOperator
/*       */     implements ProtocolMessageEnum
/*       */   {
/*  5892 */     Equal(0),
/*       */ 
/*       */ 
/*       */     
/*  5896 */     Greater(1),
/*       */ 
/*       */ 
/*       */     
/*  5900 */     Smaller(2),
/*  5901 */     UNRECOGNIZED(-1);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Equal_VALUE = 0;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Greater_VALUE = 1;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int Smaller_VALUE = 2;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*  5954 */     private static final Internal.EnumLiteMap<NumberOperator> internalValueMap = new Internal.EnumLiteMap<NumberOperator>()
/*       */       {
/*       */         public DolphinConfig.NumberOperator findValueByNumber(int number) {
/*  5957 */           return DolphinConfig.NumberOperator.forNumber(number);
/*       */         }
/*       */       };
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*  5978 */     private static final NumberOperator[] VALUES = values(); private final int value; public final int getNumber() { if (this == UNRECOGNIZED)
/*       */         throw new IllegalArgumentException("Can't get the number of an unknown enum value.");  return this.value; }
/*       */     public static NumberOperator forNumber(int value) { switch (value) {
/*       */         case 0:
/*       */           return Equal;
/*       */         case 1:
/*       */           return Greater;
/*       */         case 2:
/*       */           return Smaller;
/*       */       }  return null; }
/*       */     public static Internal.EnumLiteMap<NumberOperator> internalGetValueMap() { return internalValueMap; }
/*       */     static {  }
/*       */     public final Descriptors.EnumValueDescriptor getValueDescriptor() { if (this == UNRECOGNIZED)
/*       */         throw new IllegalStateException("Can't get the descriptor of an unrecognized enum value."); 
/*       */       return getDescriptor().getValues().get(ordinal()); }
/*       */     public final Descriptors.EnumDescriptor getDescriptorForType() { return getDescriptor(); }
/*       */     public static final Descriptors.EnumDescriptor getDescriptor() { return DolphinConfig.getDescriptor().getEnumTypes().get(26); }
/*  5995 */     NumberOperator(int value) { this.value = value; }
/*       */   
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public enum ConditionOperator
/*       */     implements ProtocolMessageEnum
/*       */   {
/*  6009 */     AND(0),
/*       */ 
/*       */ 
/*       */     
/*  6013 */     OR(1),
/*  6014 */     UNRECOGNIZED(-1);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int AND_VALUE = 0;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int OR_VALUE = 1;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*  6062 */     private static final Internal.EnumLiteMap<ConditionOperator> internalValueMap = new Internal.EnumLiteMap<ConditionOperator>()
/*       */       {
/*       */         public DolphinConfig.ConditionOperator findValueByNumber(int number) {
/*  6065 */           return DolphinConfig.ConditionOperator.forNumber(number);
/*       */         }
/*       */       };
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*  6086 */     private static final ConditionOperator[] VALUES = values(); private final int value; public final int getNumber() { if (this == UNRECOGNIZED)
/*       */         throw new IllegalArgumentException("Can't get the number of an unknown enum value."); 
/*       */       return this.value; }
/*       */     public static ConditionOperator forNumber(int value) { switch (value) {
/*       */         case 0:
/*       */           return AND;
/*       */         case 1:
/*       */           return OR;
/*       */       } 
/*       */       return null; }
/*       */     public static Internal.EnumLiteMap<ConditionOperator> internalGetValueMap() { return internalValueMap; }
/*       */     static {  }
/*       */     public final Descriptors.EnumValueDescriptor getValueDescriptor() { if (this == UNRECOGNIZED)
/*       */         throw new IllegalStateException("Can't get the descriptor of an unrecognized enum value."); 
/*       */       return getDescriptor().getValues().get(ordinal()); }
/*       */     public final Descriptors.EnumDescriptor getDescriptorForType() { return getDescriptor(); }
/*       */     public static final Descriptors.EnumDescriptor getDescriptor() { return DolphinConfig.getDescriptor().getEnumTypes().get(27); }
/*  6103 */     ConditionOperator(int value) { this.value = value; }
/*       */   
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public enum SerialBaudrate
/*       */     implements ProtocolMessageEnum
/*       */   {
/*  6117 */     SBaud_115200(0),
/*       */ 
/*       */ 
/*       */     
/*  6121 */     SBaud_57600(1),
/*       */ 
/*       */ 
/*       */     
/*  6125 */     SBaud_38400(2),
/*       */ 
/*       */ 
/*       */     
/*  6129 */     SBaud_28800(3),
/*       */ 
/*       */ 
/*       */     
/*  6133 */     SBaud_19200(4),
/*       */ 
/*       */ 
/*       */     
/*  6137 */     SBaud_14400(5),
/*       */ 
/*       */ 
/*       */     
/*  6141 */     SBaud_9600(6),
/*       */ 
/*       */ 
/*       */     
/*  6145 */     SBaud_4800(7),
/*       */ 
/*       */ 
/*       */     
/*  6149 */     SBaud_2400(8),
/*       */ 
/*       */ 
/*       */     
/*  6153 */     SBaud_1200(9),
/*       */ 
/*       */ 
/*       */     
/*  6157 */     SBaud_600(10),
/*  6158 */     UNRECOGNIZED(-1);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int SBaud_115200_VALUE = 0;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int SBaud_57600_VALUE = 1;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int SBaud_38400_VALUE = 2;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int SBaud_28800_VALUE = 3;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int SBaud_19200_VALUE = 4;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int SBaud_14400_VALUE = 5;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int SBaud_9600_VALUE = 6;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int SBaud_4800_VALUE = 7;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int SBaud_2400_VALUE = 8;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int SBaud_1200_VALUE = 9;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int SBaud_600_VALUE = 10;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*  6251 */     private static final Internal.EnumLiteMap<SerialBaudrate> internalValueMap = new Internal.EnumLiteMap<SerialBaudrate>()
/*       */       {
/*       */         public DolphinConfig.SerialBaudrate findValueByNumber(int number) {
/*  6254 */           return DolphinConfig.SerialBaudrate.forNumber(number);
/*       */         }
/*       */       };
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*  6275 */     private static final SerialBaudrate[] VALUES = values(); private final int value; public final int getNumber() { if (this == UNRECOGNIZED)
/*       */         throw new IllegalArgumentException("Can't get the number of an unknown enum value.");  return this.value; }
/*       */     public static SerialBaudrate forNumber(int value) { switch (value) { case 0: return SBaud_115200;case 1: return SBaud_57600;case 2: return SBaud_38400;
/*       */         case 3: return SBaud_28800;
/*       */         case 4: return SBaud_19200;
/*       */         case 5: return SBaud_14400;
/*       */         case 6: return SBaud_9600;
/*       */         case 7: return SBaud_4800;
/*       */         case 8: return SBaud_2400;
/*       */         case 9: return SBaud_1200;
/*       */         case 10: return SBaud_600; }  return null; }
/*       */     public static Internal.EnumLiteMap<SerialBaudrate> internalGetValueMap() { return internalValueMap; }
/*       */     static {  }
/*       */     public final Descriptors.EnumValueDescriptor getValueDescriptor() { if (this == UNRECOGNIZED)
/*       */         throw new IllegalStateException("Can't get the descriptor of an unrecognized enum value.");  return getDescriptor().getValues().get(ordinal()); }
/*       */     public final Descriptors.EnumDescriptor getDescriptorForType() { return getDescriptor(); }
/*       */     public static final Descriptors.EnumDescriptor getDescriptor() { return DolphinConfig.getDescriptor().getEnumTypes().get(28); }
/*  6292 */     SerialBaudrate(int value) { this.value = value; }
/*       */   
/*       */   }
/*       */ 
/*       */ 
/*       */   
/*       */   public static interface ConfigOrBuilder
/*       */     extends MessageOrBuilder
/*       */   {
/*       */     int getSerialPortBaudrateValue();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.SerialBaudrate getSerialPortBaudrate();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean getDoNotResetDeviceOnProblems();
/*       */ 
/*       */ 
/*       */     
/*       */     String getPassword();
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getPasswordBytes();
/*       */ 
/*       */ 
/*       */     
/*       */     int getMovementValue();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.MovementSource getMovement();
/*       */ 
/*       */ 
/*       */     
/*       */     int getMovementSensorSensitivity();
/*       */ 
/*       */ 
/*       */     
/*       */     int getSleepValue();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.SleepMode getSleep();
/*       */ 
/*       */ 
/*       */     
/*       */     int getSleepTimeout();
/*       */ 
/*       */ 
/*       */     
/*       */     int getEngineOnValue();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.EngineMode getEngineOn();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean getEngineOnDIN1();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean getEngineOnDIN2();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean getEngineOnMovementSensor();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean getEngineOnPowerSupplyAvailable();
/*       */ 
/*       */ 
/*       */     
/*       */     int getEngineOnGpsSpeed();
/*       */ 
/*       */ 
/*       */     
/*       */     int getEngineOnCanRPM();
/*       */ 
/*       */ 
/*       */     
/*       */     int getEngineOnMinActiveStateDuration();
/*       */ 
/*       */ 
/*       */     
/*       */     int getEngineOnOperatorValue();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.ConditionOperator getEngineOnOperator();
/*       */ 
/*       */ 
/*       */     
/*       */     int getEngineOnMovementStartDelay();
/*       */ 
/*       */ 
/*       */     
/*       */     int getEngineOnMovementStopDelay();
/*       */ 
/*       */ 
/*       */     
/*       */     int getEngineOnExternalVoltage();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean getLedIndication();
/*       */ 
/*       */ 
/*       */     
/*       */     int getGNSSValue();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.GNSSMode getGNSS();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean getStaticNavigationEnabled();
/*       */ 
/*       */ 
/*       */     
/*       */     int getStaticNavigationSourceValue();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.StaticNavigationSource getStaticNavigationSource();
/*       */ 
/*       */ 
/*       */     
/*       */     int getRecordsSaveAndSendModeValue();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.RecordsMode getRecordsSaveAndSendMode();
/*       */ 
/*       */ 
/*       */     
/*       */     int getTimeSynchronizationValue();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.TimeSynchronization getTimeSynchronization();
/*       */ 
/*       */ 
/*       */     
/*       */     String getNTPServer();
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getNTPServerBytes();
/*       */ 
/*       */ 
/*       */     
/*       */     int getNTPInterval();
/*       */ 
/*       */ 
/*       */     
/*       */     int getSleepNoPowerTimeout();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean getSendPing();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean getTimetableMode();
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getTimetableData();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasService1();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.Service getService1();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.ServiceOrBuilder getService1OrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasService2();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.Service getService2();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.ServiceOrBuilder getService2OrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasService3();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.Service getService3();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.ServiceOrBuilder getService3OrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     int getAnalogInput1AverageTime();
/*       */ 
/*       */ 
/*       */     
/*       */     int getAnalogInput2AverageTime();
/*       */ 
/*       */ 
/*       */     
/*       */     int getAnalogInput3AverageTime();
/*       */ 
/*       */ 
/*       */     
/*       */     int getBluetoothRadioModeValue();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.BluetoothMode getBluetoothRadioMode();
/*       */ 
/*       */ 
/*       */     
/*       */     String getBluetoothName();
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getBluetoothNameBytes();
/*       */ 
/*       */ 
/*       */     
/*       */     String getBluetoothPIN();
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getBluetoothPINBytes();
/*       */ 
/*       */ 
/*       */     
/*       */     int getBluetoothSecurityModeValue();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.BluetoothSecurityMode getBluetoothSecurityMode();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean getBluetoothPowerDownOnSleep();
/*       */ 
/*       */ 
/*       */     
/*       */     int getBluetoothExternalConnectionModeValue();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.BluetoothExternalConnectionMode getBluetoothExternalConnectionMode();
/*       */ 
/*       */ 
/*       */     
/*       */     String getBluetoothExternalDeviceMAC();
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getBluetoothExternalDeviceMACBytes();
/*       */ 
/*       */ 
/*       */     
/*       */     String getBluetoothExternalDeviceName();
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getBluetoothExternalDeviceNameBytes();
/*       */ 
/*       */ 
/*       */     
/*       */     String getBluetoothExternalDevicePIN();
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getBluetoothExternalDevicePINBytes();
/*       */ 
/*       */ 
/*       */     
/*       */     String getBluetoothAuthorizedMAC1();
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getBluetoothAuthorizedMAC1Bytes();
/*       */ 
/*       */ 
/*       */     
/*       */     String getBluetoothAuthorizedMAC2();
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getBluetoothAuthorizedMAC2Bytes();
/*       */ 
/*       */ 
/*       */     
/*       */     String getBluetoothAuthorizedMAC3();
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getBluetoothAuthorizedMAC3Bytes();
/*       */ 
/*       */ 
/*       */     
/*       */     String getBluetoothAuthorizedMAC4();
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getBluetoothAuthorizedMAC4Bytes();
/*       */ 
/*       */ 
/*       */     
/*       */     String getBluetoothAuthorizedMAC5();
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getBluetoothAuthorizedMAC5Bytes();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean getGPRSContextEnabled();
/*       */ 
/*       */ 
/*       */     
/*       */     String getGPRSApnName();
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getGPRSApnNameBytes();
/*       */ 
/*       */ 
/*       */     
/*       */     String getGPRSApnUsername();
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getGPRSApnUsernameBytes();
/*       */ 
/*       */ 
/*       */     
/*       */     String getGPRSApnPassword();
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getGPRSApnPasswordBytes();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean getGPRSCHAPAuthentication();
/*       */ 
/*       */ 
/*       */     
/*       */     int getGPRSLinkTimeout();
/*       */ 
/*       */ 
/*       */     
/*       */     int getGPRSResponseTimeout();
/*       */ 
/*       */ 
/*       */     
/*       */     String getGPRSServerAddress();
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getGPRSServerAddressBytes();
/*       */ 
/*       */ 
/*       */     
/*       */     int getGPRSServerPort();
/*       */ 
/*       */ 
/*       */     
/*       */     int getGPRSServerProtocolValue();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.ServerProtocol getGPRSServerProtocol();
/*       */ 
/*       */ 
/*       */     
/*       */     String getGPRSBackupServerAddress();
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getGPRSBackupServerAddressBytes();
/*       */ 
/*       */ 
/*       */     
/*       */     int getGPRSBackupServerPort();
/*       */ 
/*       */ 
/*       */     
/*       */     int getGPRSBackupServerProtocolValue();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.ServerProtocol getGPRSBackupServerProtocol();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean getGPRSSSLClientAuthentication();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean getGPRSDataCompression();
/*       */ 
/*       */ 
/*       */     
/*       */     int getAuthenticationModeValue();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.AuthenticationMode getAuthenticationMode();
/*       */ 
/*       */ 
/*       */     
/*       */     String getAuthenticationCode();
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getAuthenticationCodeBytes();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean getFirmwareUpdateEnabled();
/*       */ 
/*       */ 
/*       */     
/*       */     String getFirmwareUpdateChannel();
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getFirmwareUpdateChannelBytes();
/*       */ 
/*       */ 
/*       */     
/*       */     int getFirmwareUpdateCheckInterval();
/*       */ 
/*       */ 
/*       */     
/*       */     String getFirmwareUpdateServerAddress();
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getFirmwareUpdateServerAddressBytes();
/*       */ 
/*       */ 
/*       */     
/*       */     int getFirmwareUpdateServerPort();
/*       */ 
/*       */ 
/*       */     
/*       */     int getFirmwareUpdateServerProtocolValue();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.ServerProtocol getFirmwareUpdateServerProtocol();
/*       */ 
/*       */ 
/*       */     
/*       */     int getFirmwareUpdateLinkTimeout();
/*       */ 
/*       */ 
/*       */     
/*       */     int getFirmwareUpdateResponseTimeout();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean getSMSDataSending();
/*       */ 
/*       */ 
/*       */     
/*       */     String getSMSDataSendNumber();
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getSMSDataSendNumberBytes();
/*       */ 
/*       */ 
/*       */     
/*       */     String getSMSPassword();
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getSMSPasswordBytes();
/*       */ 
/*       */ 
/*       */     
/*       */     int getSMSEventTimeZone();
/*       */ 
/*       */ 
/*       */     
/*       */     int getCallIncommingCallActionValue();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.CallAction getCallIncommingCallAction();
/*       */ 
/*       */ 
/*       */     
/*       */     int getCallDigitalInput1CallTo();
/*       */ 
/*       */ 
/*       */     
/*       */     int getCallDigitalInput2CallTo();
/*       */ 
/*       */ 
/*       */     
/*       */     int getCallDigitalInput3CallTo();
/*       */ 
/*       */ 
/*       */     
/*       */     String getAuthorizedNumber1();
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getAuthorizedNumber1Bytes();
/*       */ 
/*       */ 
/*       */     
/*       */     String getAuthorizedNumber2();
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getAuthorizedNumber2Bytes();
/*       */ 
/*       */ 
/*       */     
/*       */     String getAuthorizedNumber3();
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getAuthorizedNumber3Bytes();
/*       */ 
/*       */ 
/*       */     
/*       */     String getAuthorizedNumber4();
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getAuthorizedNumber4Bytes();
/*       */ 
/*       */ 
/*       */     
/*       */     String getAuthorizedNumber5();
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getAuthorizedNumber5Bytes();
/*       */ 
/*       */ 
/*       */     
/*       */     String getAuthorizedNumber6();
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getAuthorizedNumber6Bytes();
/*       */ 
/*       */ 
/*       */     
/*       */     String getAuthorizedNumber7();
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getAuthorizedNumber7Bytes();
/*       */ 
/*       */ 
/*       */     
/*       */     String getAuthorizedNumber8();
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getAuthorizedNumber8Bytes();
/*       */ 
/*       */ 
/*       */     
/*       */     String getAuthorizedNumber9();
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getAuthorizedNumber9Bytes();
/*       */ 
/*       */ 
/*       */     
/*       */     String getAuthorizedNumber10();
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getAuthorizedNumber10Bytes();
/*       */ 
/*       */ 
/*       */     
/*       */     String getGsmPredefinedNumber1();
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getGsmPredefinedNumber1Bytes();
/*       */ 
/*       */ 
/*       */     
/*       */     String getGsmPredefinedNumber2();
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getGsmPredefinedNumber2Bytes();
/*       */ 
/*       */ 
/*       */     
/*       */     String getGsmPredefinedNumber3();
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getGsmPredefinedNumber3Bytes();
/*       */ 
/*       */ 
/*       */     
/*       */     String getGsmPredefinedNumber4();
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getGsmPredefinedNumber4Bytes();
/*       */ 
/*       */ 
/*       */     
/*       */     String getGsmPredefinedNumber5();
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getGsmPredefinedNumber5Bytes();
/*       */ 
/*       */ 
/*       */     
/*       */     String getGsmPredefinedNumber6();
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getGsmPredefinedNumber6Bytes();
/*       */ 
/*       */ 
/*       */     
/*       */     String getGsmPredefinedNumber7();
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getGsmPredefinedNumber7Bytes();
/*       */ 
/*       */ 
/*       */     
/*       */     String getGsmPredefinedNumber8();
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getGsmPredefinedNumber8Bytes();
/*       */ 
/*       */ 
/*       */     
/*       */     String getGsmPredefinedNumber9();
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getGsmPredefinedNumber9Bytes();
/*       */ 
/*       */ 
/*       */     
/*       */     String getGsmPredefinedNumber10();
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getGsmPredefinedNumber10Bytes();
/*       */ 
/*       */ 
/*       */     
/*       */     String getRoamingOperator1();
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getRoamingOperator1Bytes();
/*       */ 
/*       */ 
/*       */     
/*       */     String getRoamingOperator2();
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getRoamingOperator2Bytes();
/*       */ 
/*       */ 
/*       */     
/*       */     String getRoamingOperator3();
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getRoamingOperator3Bytes();
/*       */ 
/*       */ 
/*       */     
/*       */     String getRoamingOperator4();
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getRoamingOperator4Bytes();
/*       */ 
/*       */ 
/*       */     
/*       */     String getRoamingOperator5();
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getRoamingOperator5Bytes();
/*       */ 
/*       */ 
/*       */     
/*       */     int getDAQStopHomeMinPeriod();
/*       */ 
/*       */ 
/*       */     
/*       */     int getDAQStopRoamingMinPeriod();
/*       */ 
/*       */ 
/*       */     
/*       */     int getDAQMovingHomeMinPeriod();
/*       */ 
/*       */ 
/*       */     
/*       */     int getDAQMovingHomeMinPathDeviation();
/*       */ 
/*       */ 
/*       */     
/*       */     int getDAQMovingRoamingMinPeriod();
/*       */ 
/*       */ 
/*       */     
/*       */     int getDAQMovingRoamingMinPathDeviation();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasGeoZone1();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.GeoZone getGeoZone1();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.GeoZoneOrBuilder getGeoZone1OrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasGeoZone2();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.GeoZone getGeoZone2();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.GeoZoneOrBuilder getGeoZone2OrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasGeoZone3();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.GeoZone getGeoZone3();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.GeoZoneOrBuilder getGeoZone3OrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasGeoZone4();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.GeoZone getGeoZone4();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.GeoZoneOrBuilder getGeoZone4OrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasGeoZone5();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.GeoZone getGeoZone5();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.GeoZoneOrBuilder getGeoZone5OrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasGeoZone6();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.GeoZone getGeoZone6();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.GeoZoneOrBuilder getGeoZone6OrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasGeoZone7();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.GeoZone getGeoZone7();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.GeoZoneOrBuilder getGeoZone7OrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasGeoZone8();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.GeoZone getGeoZone8();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.GeoZoneOrBuilder getGeoZone8OrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasGeoZone9();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.GeoZone getGeoZone9();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.GeoZoneOrBuilder getGeoZone9OrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasGeoZone10();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.GeoZone getGeoZone10();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.GeoZoneOrBuilder getGeoZone10OrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasGeoZone11();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.GeoZone getGeoZone11();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.GeoZoneOrBuilder getGeoZone11OrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasGeoZone12();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.GeoZone getGeoZone12();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.GeoZoneOrBuilder getGeoZone12OrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasGeoZone13();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.GeoZone getGeoZone13();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.GeoZoneOrBuilder getGeoZone13OrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasGeoZone14();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.GeoZone getGeoZone14();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.GeoZoneOrBuilder getGeoZone14OrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasGeoZone15();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.GeoZone getGeoZone15();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.GeoZoneOrBuilder getGeoZone15OrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasGeoZone16();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.GeoZone getGeoZone16();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.GeoZoneOrBuilder getGeoZone16OrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasGeoZone17();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.GeoZone getGeoZone17();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.GeoZoneOrBuilder getGeoZone17OrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasGeoZone18();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.GeoZone getGeoZone18();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.GeoZoneOrBuilder getGeoZone18OrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasGeoZone19();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.GeoZone getGeoZone19();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.GeoZoneOrBuilder getGeoZone19OrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasGeoZone20();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.GeoZone getGeoZone20();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.GeoZoneOrBuilder getGeoZone20OrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasGeoZone21();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.GeoZone getGeoZone21();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.GeoZoneOrBuilder getGeoZone21OrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasGeoZone22();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.GeoZone getGeoZone22();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.GeoZoneOrBuilder getGeoZone22OrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasGeoZone23();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.GeoZone getGeoZone23();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.GeoZoneOrBuilder getGeoZone23OrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasGeoZone24();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.GeoZone getGeoZone24();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.GeoZoneOrBuilder getGeoZone24OrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasGeoZone25();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.GeoZone getGeoZone25();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.GeoZoneOrBuilder getGeoZone25OrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasGeoZone26();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.GeoZone getGeoZone26();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.GeoZoneOrBuilder getGeoZone26OrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasGeoZone27();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.GeoZone getGeoZone27();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.GeoZoneOrBuilder getGeoZone27OrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasGeoZone28();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.GeoZone getGeoZone28();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.GeoZoneOrBuilder getGeoZone28OrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasGeoZone29();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.GeoZone getGeoZone29();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.GeoZoneOrBuilder getGeoZone29OrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasGeoZone30();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.GeoZone getGeoZone30();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.GeoZoneOrBuilder getGeoZone30OrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasGeoZone31();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.GeoZone getGeoZone31();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.GeoZoneOrBuilder getGeoZone31OrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasGeoZone32();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.GeoZone getGeoZone32();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.GeoZoneOrBuilder getGeoZone32OrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasGeoZone33();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.GeoZone getGeoZone33();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.GeoZoneOrBuilder getGeoZone33OrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasGeoZone34();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.GeoZone getGeoZone34();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.GeoZoneOrBuilder getGeoZone34OrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasGeoZone35();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.GeoZone getGeoZone35();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.GeoZoneOrBuilder getGeoZone35OrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasGeoZone36();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.GeoZone getGeoZone36();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.GeoZoneOrBuilder getGeoZone36OrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasGeoZone37();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.GeoZone getGeoZone37();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.GeoZoneOrBuilder getGeoZone37OrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasGeoZone38();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.GeoZone getGeoZone38();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.GeoZoneOrBuilder getGeoZone38OrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasGeoZone39();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.GeoZone getGeoZone39();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.GeoZoneOrBuilder getGeoZone39OrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasGeoZone40();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.GeoZone getGeoZone40();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.GeoZoneOrBuilder getGeoZone40OrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasGeoZone41();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.GeoZone getGeoZone41();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.GeoZoneOrBuilder getGeoZone41OrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasGeoZone42();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.GeoZone getGeoZone42();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.GeoZoneOrBuilder getGeoZone42OrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasGeoZone43();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.GeoZone getGeoZone43();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.GeoZoneOrBuilder getGeoZone43OrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasGeoZone44();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.GeoZone getGeoZone44();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.GeoZoneOrBuilder getGeoZone44OrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasGeoZone45();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.GeoZone getGeoZone45();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.GeoZoneOrBuilder getGeoZone45OrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasGeoZone46();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.GeoZone getGeoZone46();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.GeoZoneOrBuilder getGeoZone46OrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasGeoZone47();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.GeoZone getGeoZone47();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.GeoZoneOrBuilder getGeoZone47OrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasGeoZone48();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.GeoZone getGeoZone48();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.GeoZoneOrBuilder getGeoZone48OrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasGeoZone49();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.GeoZone getGeoZone49();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.GeoZoneOrBuilder getGeoZone49OrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasGeoZone50();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.GeoZone getGeoZone50();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.GeoZoneOrBuilder getGeoZone50OrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     int getTripStartSpeed();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean getTripUseIgnition();
/*       */ 
/*       */ 
/*       */     
/*       */     int getTripParkDetectionTimeout();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean getOverspeedingEnable();
/*       */ 
/*       */ 
/*       */     
/*       */     int getOverspeedingLimit();
/*       */ 
/*       */ 
/*       */     
/*       */     int getOverspeedingActivationSpeed();
/*       */ 
/*       */ 
/*       */     
/*       */     int getOverspeedingDeactivationModeValue();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.OverSpeedingDeactivationMode getOverspeedingDeactivationMode();
/*       */ 
/*       */ 
/*       */     
/*       */     int getOverspeedingDeactivationValue();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean getUSSDEnabled();
/*       */ 
/*       */ 
/*       */     
/*       */     int getUSSDID();
/*       */ 
/*       */ 
/*       */     
/*       */     int getUSSDInterval();
/*       */ 
/*       */ 
/*       */     
/*       */     String getUSSDCode();
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getUSSDCodeBytes();
/*       */ 
/*       */ 
/*       */     
/*       */     int getSpeedSensorKmPulseCount();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean getCrashDetectionEnabled();
/*       */ 
/*       */ 
/*       */     
/*       */     int getCrashDetectionLevel1Threshold();
/*       */ 
/*       */ 
/*       */     
/*       */     int getCrashDetectionLevel2Threshold();
/*       */ 
/*       */ 
/*       */     
/*       */     int getCrashDetectionLevel3Threshold();
/*       */ 
/*       */ 
/*       */     
/*       */     int getCrashDetectionTraceValue();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.CrashTraceType getCrashDetectionTrace();
/*       */ 
/*       */ 
/*       */     
/*       */     int getCrashDetectionDuration();
/*       */ 
/*       */ 
/*       */     
/*       */     int getCrashDetectionSendSMSTo();
/*       */ 
/*       */ 
/*       */     
/*       */     String getCrashDetectionSMSText();
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getCrashDetectionSMSTextBytes();
/*       */ 
/*       */ 
/*       */     
/*       */     int getCrashDetectionCallTo();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean getRolloverDetectionEnabled();
/*       */ 
/*       */ 
/*       */     
/*       */     int getDriverRegistrationModeValue();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.DriverRegistration_Mode getDriverRegistrationMode();
/*       */ 
/*       */ 
/*       */     
/*       */     int getDriverRegistrationAuthenticationValue();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.DriverRegistration_Authentication getDriverRegistrationAuthentication();
/*       */ 
/*       */ 
/*       */     
/*       */     int getDriverRegistrationDeregistrationTimeout();
/*       */ 
/*       */ 
/*       */     
/*       */     int getDriverRegistrationBuzzerDigitalOutputValue();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.DigitalOutputName getDriverRegistrationBuzzerDigitalOutput();
/*       */ 
/*       */ 
/*       */     
/*       */     int getDriverRegistrationImmobilizerDigitalOutputValue();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.DigitalOutputName getDriverRegistrationImmobilizerDigitalOutput();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean getDriverRegistrationImmobilizerActiveLow();
/*       */ 
/*       */ 
/*       */     
/*       */     long getDriverRegistrationAuthorizedID1();
/*       */ 
/*       */ 
/*       */     
/*       */     long getDriverRegistrationAuthorizedID2();
/*       */ 
/*       */ 
/*       */     
/*       */     long getDriverRegistrationAuthorizedID3();
/*       */ 
/*       */ 
/*       */     
/*       */     long getDriverRegistrationAuthorizedID4();
/*       */ 
/*       */ 
/*       */     
/*       */     long getDriverRegistrationAuthorizedID5();
/*       */ 
/*       */ 
/*       */     
/*       */     long getDriverRegistrationAuthorizedID6();
/*       */ 
/*       */ 
/*       */     
/*       */     long getDriverRegistrationAuthorizedID7();
/*       */ 
/*       */ 
/*       */     
/*       */     long getDriverRegistrationAuthorizedID8();
/*       */ 
/*       */ 
/*       */     
/*       */     long getDriverRegistrationAuthorizedID9();
/*       */ 
/*       */ 
/*       */     
/*       */     long getDriverRegistrationAuthorizedID10();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean getECODriveActive();
/*       */ 
/*       */ 
/*       */     
/*       */     int getECOOverSpeedingLimit();
/*       */ 
/*       */ 
/*       */     
/*       */     int getECORPMGreenBandLowLimit();
/*       */ 
/*       */ 
/*       */     
/*       */     int getECORPMGreenBandHighLimit();
/*       */ 
/*       */ 
/*       */     
/*       */     int getECOHarshBreakingLimit();
/*       */ 
/*       */ 
/*       */     
/*       */     int getECOExtremeBreakingLimit();
/*       */ 
/*       */ 
/*       */     
/*       */     int getECOHarshAccelerationLimit();
/*       */ 
/*       */ 
/*       */     
/*       */     int getECOCorneringLimit();
/*       */ 
/*       */ 
/*       */     
/*       */     int getECOIdlingDelay();
/*       */ 
/*       */ 
/*       */     
/*       */     int getECOIdlingSpeed();
/*       */ 
/*       */ 
/*       */     
/*       */     int getECOCruiseControlSpeed();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean getECOCalculateOnlyWhenEngineOn();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean getECOCustomEngineSource();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean getECOEngineOnDIN1();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean getECOEngineOnDIN2();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean getECOEngineOnMovementSensor();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean getECOEngineOnPowerSupplyAvailable();
/*       */ 
/*       */ 
/*       */     
/*       */     int getECOEngineOnCanRPMLow();
/*       */ 
/*       */ 
/*       */     
/*       */     int getECOEngineOnCanRPMHigh();
/*       */ 
/*       */ 
/*       */     
/*       */     int getECOEngineOnOperatorValue();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.ConditionOperator getECOEngineOnOperator();
/*       */ 
/*       */ 
/*       */     
/*       */     int getECOEngineOnExternalVoltage();
/*       */ 
/*       */ 
/*       */     
/*       */     int getECUInterfaceValue();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.ECUInterface getECUInterface();
/*       */ 
/*       */ 
/*       */     
/*       */     int getFuelConsumptionEnabledValue();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.FuelConsumption getFuelConsumptionEnabled();
/*       */ 
/*       */ 
/*       */     
/*       */     int getFuelConsumptionEngineDisplacement();
/*       */ 
/*       */ 
/*       */     
/*       */     int getFuelConsumptionCylinders();
/*       */ 
/*       */ 
/*       */     
/*       */     int getFuelConsumptionInjectorPerformance();
/*       */ 
/*       */ 
/*       */     
/*       */     int getFuelConsumptionVolumetricEfficiently();
/*       */ 
/*       */ 
/*       */     
/*       */     int getFaultCodesReadTime();
/*       */ 
/*       */ 
/*       */     
/*       */     int getSIPAADLinkTimeout();
/*       */ 
/*       */ 
/*       */     
/*       */     int getSIPAADResponseTimeout();
/*       */ 
/*       */ 
/*       */     
/*       */     String getSIPAADServerAddress();
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getSIPAADServerAddressBytes();
/*       */ 
/*       */ 
/*       */     
/*       */     int getSIPAADServerPort();
/*       */ 
/*       */ 
/*       */     
/*       */     int getSIPAADServerProtocolValue();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.ServerProtocol getSIPAADServerProtocol();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean getSIPAADSSLClientAuthentication();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOTime();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOTime();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOTimeOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOAngle();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOAngle();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOAngleOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOSpeed();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOSpeed();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOSpeedOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOSleepMode();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOSleepMode();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOSleepModeOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOIgnition();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOIgnition();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOIgnitionOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOMovement();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOMovement();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOMovementOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIODataMode();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIODataMode();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIODataModeOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOGnssStatus();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOGnssStatus();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOGnssStatusOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOGnssHDOP();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOGnssHDOP();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOGnssHDOPOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOGnssPDOP();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOGnssPDOP();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOGnssPDOPOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOGnssJammingStatus();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOGnssJammingStatus();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOGnssJammingStatusOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOGsmSignal();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOGsmSignal();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOGsmSignalOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOGsmCellId();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOGsmCellId();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOGsmCellIdOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOGsmAreaCode();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOGsmAreaCode();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOGsmAreaCodeOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOGsmOperator();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOGsmOperator();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOGsmOperatorOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOGsmTemperature();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOGsmTemperature();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOGsmTemperatureOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOGsmJammingStatus();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOGsmJammingStatus();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOGsmJammingStatusOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOExternalVoltage();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOExternalVoltage();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOExternalVoltageOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOBatteryVoltage();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOBatteryVoltage();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOBatteryVoltageOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOBatteryCurrent();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOBatteryCurrent();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOBatteryCurrentOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOTotalOdometer();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOTotalOdometer();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOTotalOdometerOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOOdometer();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOOdometer();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOOdometerOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOEngineOnTime();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOEngineOnTime();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOEngineOnTimeOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOEngineOnTimeDelta();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOEngineOnTimeDelta();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOEngineOnTimeDeltaOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOIdlingTime();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOIdlingTime();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOIdlingTimeOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOIdlingTimeDelta();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOIdlingTimeDelta();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOIdlingTimeDeltaOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOSpeedSensorSpeed();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOSpeedSensorSpeed();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOSpeedSensorSpeedOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOSpeedSensorDistance();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOSpeedSensorDistance();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOSpeedSensorDistanceOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOSpeedSensorTotalDistance();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOSpeedSensorTotalDistance();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOSpeedSensorTotalDistanceOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOSpeedSensorMaxSpeed();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOSpeedSensorMaxSpeed();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOSpeedSensorMaxSpeedOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOSpeedSensorGPSSpeedDiff();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOSpeedSensorGPSSpeedDiff();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOSpeedSensorGPSSpeedDiffOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIODigitalInput1();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIODigitalInput1();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIODigitalInput1OrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIODigitalInput2();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIODigitalInput2();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIODigitalInput2OrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOPowerSupply();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOPowerSupply();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOPowerSupplyOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIODigitalInput3();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIODigitalInput3();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIODigitalInput3OrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOVehicleConnection();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOVehicleConnection();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOVehicleConnectionOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIODigitalInput1Time();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIODigitalInput1Time();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIODigitalInput1TimeOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIODigitalInput1TimeDelta();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIODigitalInput1TimeDelta();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIODigitalInput1TimeDeltaOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIODigitalInput2Time();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIODigitalInput2Time();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIODigitalInput2TimeOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIODigitalInput2TimeDelta();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIODigitalInput2TimeDelta();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIODigitalInput2TimeDeltaOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOPowerSupplyTime();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOPowerSupplyTime();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOPowerSupplyTimeOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOPowerSupplyTimeDelta();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOPowerSupplyTimeDelta();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOPowerSupplyTimeDeltaOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIODigitalInput3Time();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIODigitalInput3Time();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIODigitalInput3TimeOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIODigitalInput3TimeDelta();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIODigitalInput3TimeDelta();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIODigitalInput3TimeDeltaOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIODigitalOutput1();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIODigitalOutput1();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIODigitalOutput1OrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIODigitalOutput2();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIODigitalOutput2();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIODigitalOutput2OrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOAnalogInput1();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOAnalogInput1();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOAnalogInput1OrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOAnalogInput2();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOAnalogInput2();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOAnalogInput2OrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOAnalogInput3();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOAnalogInput3();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOAnalogInput3OrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOAxisX();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOAxisX();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOAxisXOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOAxisY();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOAxisY();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOAxisYOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOAxisZ();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOAxisZ();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOAxisZOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOECOMaxSpeed();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOECOMaxSpeed();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOECOMaxSpeedOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOECONormalSpeedDistance();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOECONormalSpeedDistance();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOECONormalSpeedDistanceOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOECONormalSpeedTotalDistance();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOECONormalSpeedTotalDistance();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOECONormalSpeedTotalDistanceOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOECONormalSpeedTimer();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOECONormalSpeedTimer();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOECONormalSpeedTimerOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOECONormalSpeedTotalTimer();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOECONormalSpeedTotalTimer();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOECONormalSpeedTotalTimerOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOECOOverSpeedingDistance();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOECOOverSpeedingDistance();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOECOOverSpeedingDistanceOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOECOOverSpeedingTotalDistance();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOECOOverSpeedingTotalDistance();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOECOOverSpeedingTotalDistanceOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOECOOverSpeedingTimer();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOECOOverSpeedingTimer();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOECOOverSpeedingTimerOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOECOOverSpeedingTotalTimer();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOECOOverSpeedingTotalTimer();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOECOOverSpeedingTotalTimerOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOECOMaxRPM();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOECOMaxRPM();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOECOMaxRPMOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOECORPMGreenBandDistance();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOECORPMGreenBandDistance();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOECORPMGreenBandDistanceOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOECORPMGreenBandTotalDistance();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOECORPMGreenBandTotalDistance();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOECORPMGreenBandTotalDistanceOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOECORPMGreenBandTimer();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOECORPMGreenBandTimer();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOECORPMGreenBandTimerOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOECORPMGreenBandTotalTimer();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOECORPMGreenBandTotalTimer();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOECORPMGreenBandTotalTimerOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOECOOverRPMDistance();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOECOOverRPMDistance();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOECOOverRPMDistanceOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOECOOverRPMTotalDistance();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOECOOverRPMTotalDistance();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOECOOverRPMTotalDistanceOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOECOOverRPMTimer();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOECOOverRPMTimer();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOECOOverRPMTimerOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOECOOverRPMTotalTimer();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOECOOverRPMTotalTimer();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOECOOverRPMTotalTimerOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOECOIdlingEvent();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOECOIdlingEvent();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOECOIdlingEventOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOECOCruiseControlTimer();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOECOCruiseControlTimer();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOECOCruiseControlTimerOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOECOCruiseControlTotalTimer();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOECOCruiseControlTotalTimer();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOECOCruiseControlTotalTimerOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOECOCruiseControlDistance();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOECOCruiseControlDistance();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOECOCruiseControlDistanceOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOECOCruiseControlTotalDistance();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOECOCruiseControlTotalDistance();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOECOCruiseControlTotalDistanceOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOECOUnderRPMDistance();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOECOUnderRPMDistance();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOECOUnderRPMDistanceOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOECOUnderRPMTotalDistance();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOECOUnderRPMTotalDistance();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOECOUnderRPMTotalDistanceOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOECOUnderRPMTimer();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOECOUnderRPMTimer();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOECOUnderRPMTimerOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOECOUnderRPMTotalTimer();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOECOUnderRPMTotalTimer();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOECOUnderRPMTotalTimerOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOECOBreakCounter();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOECOBreakCounter();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOECOBreakCounterOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOECOHarshBreakCounter();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOECOHarshBreakCounter();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOECOHarshBreakCounterOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOECOExtremeBreakCounter();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOECOExtremeBreakCounter();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOECOExtremeBreakCounterOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOECOHarshAccelerationCounter();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOECOHarshAccelerationCounter();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOECOHarshAccelerationCounterOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOECOCorneringCounter();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOECOCorneringCounter();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOECOCorneringCounterOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOECOTotalBreak();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOECOTotalBreak();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOECOTotalBreakOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOECOTotalHarshBreak();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOECOTotalHarshBreak();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOECOTotalHarshBreakOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOECOTotalExtremeBreak();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOECOTotalExtremeBreak();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOECOTotalExtremeBreakOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOECOTotalHarshAcceleration();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOECOTotalHarshAcceleration();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOECOTotalHarshAccelerationOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOECOTotalCornering();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOECOTotalCornering();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOECOTotalCorneringOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOTrip();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOTrip();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOTripOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOTripTime();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOTripTime();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOTripTimeOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOTripDistance();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOTripDistance();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOTripDistanceOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIODriverID();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIODriverID();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIODriverIDOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOTemperatureSensor1();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOTemperatureSensor1();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOTemperatureSensor1OrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOTemperatureSensor1ID();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOTemperatureSensor1ID();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOTemperatureSensor1IDOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOTemperatureSensor2();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOTemperatureSensor2();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOTemperatureSensor2OrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOTemperatureSensor2ID();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOTemperatureSensor2ID();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOTemperatureSensor2IDOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOTemperatureSensor3();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOTemperatureSensor3();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOTemperatureSensor3OrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOTemperatureSensor3ID();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOTemperatureSensor3ID();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOTemperatureSensor3IDOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOHumiditySensor1();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOHumiditySensor1();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOHumiditySensor1OrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOTiltStatus();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOTiltStatus();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOTiltStatusOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOOBDEngineRPM();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOOBDEngineRPM();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOOBDEngineRPMOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOOBDBatteryVoltage();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOOBDBatteryVoltage();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOOBDBatteryVoltageOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOOBDEngineCoolantTemperature();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOOBDEngineCoolantTemperature();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOOBDEngineCoolantTemperatureOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOOBDVehicleSpeed();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOOBDVehicleSpeed();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOOBDVehicleSpeedOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOOBDTotalDistance();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOOBDTotalDistance();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOOBDTotalDistanceOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOOBDFuelRate();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOOBDFuelRate();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOOBDFuelRateOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOOBDTotalFuelUsed();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOOBDTotalFuelUsed();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOOBDTotalFuelUsedOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOOBDIntakeAirTemperature();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOOBDIntakeAirTemperature();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOOBDIntakeAirTemperatureOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOOBDIntakeManifoldAbsolutePressure();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOOBDIntakeManifoldAbsolutePressure();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOOBDIntakeManifoldAbsolutePressureOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOOBDMalfunctionIndicatorLamp();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOOBDMalfunctionIndicatorLamp();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOOBDMalfunctionIndicatorLampOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIODiagnosticTroubleCodesCount();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIODiagnosticTroubleCodesCount();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIODiagnosticTroubleCodesCountOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOOBDCalculatedEngineLoad();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOOBDCalculatedEngineLoad();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOOBDCalculatedEngineLoadOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOOBDMassAirFlowRate();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOOBDMassAirFlowRate();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOOBDMassAirFlowRateOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOOBDThrottlePosition();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOOBDThrottlePosition();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOOBDThrottlePositionOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOOBDRunTimeSinceEngineStart();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOOBDRunTimeSinceEngineStart();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOOBDRunTimeSinceEngineStartOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOOBDFuelTankLevelInput();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOOBDFuelTankLevelInput();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOOBDFuelTankLevelInputOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOOBDDistanceTraveledSinceCodesCleared();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOOBDDistanceTraveledSinceCodesCleared();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOOBDDistanceTraveledSinceCodesClearedOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOOBDAbsoluteThrottlePositionD();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOOBDAbsoluteThrottlePositionD();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOOBDAbsoluteThrottlePositionDOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOOBDTimeRunWithMILOn();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOOBDTimeRunWithMILOn();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOOBDTimeRunWithMILOnOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOOBDEngineOilTemperature();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOOBDEngineOilTemperature();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOOBDEngineOilTemperatureOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOOBDFuelSystem1Status();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOOBDFuelSystem1Status();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOOBDFuelSystem1StatusOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOOBDFuelSystem2Status();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOOBDFuelSystem2Status();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOOBDFuelSystem2StatusOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOOBDOxygenSensor1Voltage();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOOBDOxygenSensor1Voltage();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOOBDOxygenSensor1VoltageOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOOBDOxygenSensor1ShortTermFuelTrim();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOOBDOxygenSensor1ShortTermFuelTrim();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOOBDOxygenSensor1ShortTermFuelTrimOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOOBDOxygenSensor2Voltage();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOOBDOxygenSensor2Voltage();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOOBDOxygenSensor2VoltageOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOOBDOxygenSensor2ShortTermFuelTrim();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOOBDOxygenSensor2ShortTermFuelTrim();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOOBDOxygenSensor2ShortTermFuelTrimOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOOBDOxygenSensor3Voltage();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOOBDOxygenSensor3Voltage();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOOBDOxygenSensor3VoltageOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOOBDOxygenSensor3ShortTermFuelTrim();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOOBDOxygenSensor3ShortTermFuelTrim();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOOBDOxygenSensor3ShortTermFuelTrimOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOOBDOxygenSensor4Voltage();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOOBDOxygenSensor4Voltage();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOOBDOxygenSensor4VoltageOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOOBDOxygenSensor4ShortTermFuelTrim();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOOBDOxygenSensor4ShortTermFuelTrim();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOOBDOxygenSensor4ShortTermFuelTrimOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOCANBusTachograph1WorkingState1();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOCANBusTachograph1WorkingState1();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOCANBusTachograph1WorkingState1OrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOCANBusTachograph1WorkingState2();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOCANBusTachograph1WorkingState2();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOCANBusTachograph1WorkingState2OrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOCANBusTachograph1VehicleMotion();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOCANBusTachograph1VehicleMotion();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOCANBusTachograph1VehicleMotionOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOCANBusTachograph1Driv1TimeRelStates();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOCANBusTachograph1Driv1TimeRelStates();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOCANBusTachograph1Driv1TimeRelStatesOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOCANBusTachograph1Driver1Card();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOCANBusTachograph1Driver1Card();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOCANBusTachograph1Driver1CardOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOCANBusTachograph1VehicleOverspeed();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOCANBusTachograph1VehicleOverspeed();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOCANBusTachograph1VehicleOverspeedOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOCANBusTachograph1Driv2TimeRelStates();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOCANBusTachograph1Driv2TimeRelStates();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOCANBusTachograph1Driv2TimeRelStatesOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOCANBusTachograph1Driver2Card();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOCANBusTachograph1Driver2Card();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOCANBusTachograph1Driver2CardOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOCANBusTachograph1SystemEvent();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOCANBusTachograph1SystemEvent();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOCANBusTachograph1SystemEventOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOCANBusTachograph1HandlingInformation();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOCANBusTachograph1HandlingInformation();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOCANBusTachograph1HandlingInformationOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOCANBusTachograph1TachographPerformance();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOCANBusTachograph1TachographPerformance();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOCANBusTachograph1TachographPerformanceOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOCANBusTachograph1DirectionIndicator();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOCANBusTachograph1DirectionIndicator();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOCANBusTachograph1DirectionIndicatorOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOCANBusTachograph1VehicleSpeed();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOCANBusTachograph1VehicleSpeed();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOCANBusTachograph1VehicleSpeedOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOCANBusEngineTemperature1EngineCoolantTemperature();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOCANBusEngineTemperature1EngineCoolantTemperature();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOCANBusEngineTemperature1EngineCoolantTemperatureOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOCANBusElectronicEngineController1ActualEnginePercent();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOCANBusElectronicEngineController1ActualEnginePercent();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOCANBusElectronicEngineController1ActualEnginePercentOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOCANBusElectronicEngineController1EngineSpeed();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOCANBusElectronicEngineController1EngineSpeed();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOCANBusElectronicEngineController1EngineSpeedOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOCANBusEngineHoursEngineTotalHours();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOCANBusEngineHoursEngineTotalHours();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOCANBusEngineHoursEngineTotalHoursOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOCANBusVehicleDistanceTotalVehicleDistance();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOCANBusVehicleDistanceTotalVehicleDistance();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOCANBusVehicleDistanceTotalVehicleDistanceOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOCANBusHighResolutionFuelConsumptionTotalFuelUsed();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOCANBusHighResolutionFuelConsumptionTotalFuelUsed();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOCANBusHighResolutionFuelConsumptionTotalFuelUsedOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOCANBusDashDisplayFuelLevel1();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOCANBusDashDisplayFuelLevel1();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOCANBusDashDisplayFuelLevel1OrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOCANBusAmbientConditionsAmbientAirTemperature();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOCANBusAmbientConditionsAmbientAirTemperature();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOCANBusAmbientConditionsAmbientAirTemperatureOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOCANBusFuelEconomyFuelRate();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOCANBusFuelEconomyFuelRate();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOCANBusFuelEconomyFuelRateOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOCANBusFuelEconomyInstantaneousFuelEconomy();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOCANBusFuelEconomyInstantaneousFuelEconomy();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOCANBusFuelEconomyInstantaneousFuelEconomyOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit1();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit1();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit1OrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit2();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit2();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit2OrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOCANBusAftertreatmentDieselExhaustFluidTankInformationTank1Level();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOCANBusAftertreatmentDieselExhaustFluidTankInformationTank1Level();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOCANBusAftertreatmentDieselExhaustFluidTankInformationTank1LevelOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOCANBusTruckBusElectronicEngineController2AcceleratorPedalPosition1();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOCANBusTruckBusElectronicEngineController2AcceleratorPedalPosition1();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOCANBusTruckBusElectronicEngineController2AcceleratorPedalPosition1OrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOCANBusTruckBusElectronicEngineController2EnginePercentLoad();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOCANBusTruckBusElectronicEngineController2EnginePercentLoad();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOCANBusTruckBusElectronicEngineController2EnginePercentLoadOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOCANBusTruckVehicleWeightAxleWeight1();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOCANBusTruckVehicleWeightAxleWeight1();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOCANBusTruckVehicleWeightAxleWeight1OrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOCANBusTruckVehicleWeightAxleWeight2();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOCANBusTruckVehicleWeightAxleWeight2();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOCANBusTruckVehicleWeightAxleWeight2OrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOCANBusTruckVehicleWeightAxleWeight3();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOCANBusTruckVehicleWeightAxleWeight3();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOCANBusTruckVehicleWeightAxleWeight3OrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOCANBusTruckServiceInformationServiceDistance();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOCANBusTruckServiceInformationServiceDistance();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOCANBusTruckServiceInformationServiceDistanceOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOCANBusTruckPTODriveEngagementPTOEngageStat();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOCANBusTruckPTODriveEngagementPTOEngageStat();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOCANBusTruckPTODriveEngagementPTOEngageStatOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOCANBusTruckCombinationVehicleWeightGrossCombinationVehicleWeight();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOCANBusTruckCombinationVehicleWeightGrossCombinationVehicleWeight();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOCANBusTruckCombinationVehicleWeightGrossCombinationVehicleWeightOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOCANBusTruckBusElectronicRetarderController1RetarderTorqueMode();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOCANBusTruckBusElectronicRetarderController1RetarderTorqueMode();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOCANBusTruckBusElectronicRetarderController1RetarderTorqueModeOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOCANBusTruckBusElectronicRetarderController1RetarderSelection();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOCANBusTruckBusElectronicRetarderController1RetarderSelection();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOCANBusTruckBusElectronicRetarderController1RetarderSelectionOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOCANBusBusDoorControl1DoorPosition();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOCANBusBusDoorControl1DoorPosition();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOCANBusBusDoorControl1DoorPositionOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOCANBusBusDoorControl1RampWheelChairlift();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOCANBusBusDoorControl1RampWheelChairlift();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOCANBusBusDoorControl1RampWheelChairliftOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOCANBusBusDoorControl1DoorsStatus2();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOCANBusBusDoorControl1DoorsStatus2();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOCANBusBusDoorControl1DoorsStatus2OrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOCANBusBusDoorControl2();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOCANBusBusDoorControl2();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOCANBusBusDoorControl2OrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOCANBusBrakeLiningRemainingAxleFrontLeftWheel();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOCANBusBrakeLiningRemainingAxleFrontLeftWheel();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOCANBusBrakeLiningRemainingAxleFrontLeftWheelOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOCANBusBrakeLiningRemainingAxleFrontRightWheel();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOCANBusBrakeLiningRemainingAxleFrontRightWheel();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOCANBusBrakeLiningRemainingAxleFrontRightWheelOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOCANBusBrakeLiningRemainingAxleRear1LeftWheel();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOCANBusBrakeLiningRemainingAxleRear1LeftWheel();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOCANBusBrakeLiningRemainingAxleRear1LeftWheelOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOCANBusBrakeLiningRemainingAxleRear1RightWheel();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOCANBusBrakeLiningRemainingAxleRear1RightWheel();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOCANBusBrakeLiningRemainingAxleRear1RightWheelOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOCANBusBrakeLiningRemainingAxleRear2LeftWheel();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOCANBusBrakeLiningRemainingAxleRear2LeftWheel();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOCANBusBrakeLiningRemainingAxleRear2LeftWheelOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOCANBusBrakeLiningRemainingAxleRear2RightWheel();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOCANBusBrakeLiningRemainingAxleRear2RightWheel();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOCANBusBrakeLiningRemainingAxleRear2RightWheelOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOCANBusBrakeLiningRemainingAxleRear3LeftWheel();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOCANBusBrakeLiningRemainingAxleRear3LeftWheel();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOCANBusBrakeLiningRemainingAxleRear3LeftWheelOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOCANBusBrakeLiningRemainingAxleRear3RightWheel();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOCANBusBrakeLiningRemainingAxleRear3RightWheel();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOCANBusBrakeLiningRemainingAxleRear3RightWheelOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOCANBusTruckBusCruiseControl();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOCANBusTruckBusCruiseControl();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOCANBusTruckBusCruiseControlOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOCANBusBusAlternatorSpeedAlternatorStatus1();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOCANBusBusAlternatorSpeedAlternatorStatus1();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOCANBusBusAlternatorSpeedAlternatorStatus1OrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOCANBusBusAlternatorSpeedAlternatorStatus2();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOCANBusBusAlternatorSpeedAlternatorStatus2();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOCANBusBusAlternatorSpeedAlternatorStatus2OrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOCANBusBusAlternatorSpeedAlternatorStatus3();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOCANBusBusAlternatorSpeedAlternatorStatus3();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOCANBusBusAlternatorSpeedAlternatorStatus3OrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOCANBusBusAlternatorSpeedAlternatorStatus4();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOCANBusBusAlternatorSpeedAlternatorStatus4();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOCANBusBusAlternatorSpeedAlternatorStatus4OrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOCANBusBusElectronicTransmissionController2SelectedGear();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOCANBusBusElectronicTransmissionController2SelectedGear();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOCANBusBusElectronicTransmissionController2SelectedGearOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOCANBusBusElectronicTransmissionController2CurrentGear();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOCANBusBusElectronicTransmissionController2CurrentGear();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOCANBusBusElectronicTransmissionController2CurrentGearOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOCANBusBusAirSuspensionControl4FrontAxleLeft();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOCANBusBusAirSuspensionControl4FrontAxleLeft();
/*       */ 
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOCANBusBusAirSuspensionControl4FrontAxleLeftOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIOCANBusBusAirSuspensionControl4FrontAxleRight();
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOCANBusBusAirSuspensionControl4FrontAxleRight();
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOCANBusBusAirSuspensionControl4FrontAxleRightOrBuilder();
/*       */ 
/*       */     
/*       */     boolean hasIOCANBusBusAirSuspensionControl4RearAxleLeft();
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOCANBusBusAirSuspensionControl4RearAxleLeft();
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOCANBusBusAirSuspensionControl4RearAxleLeftOrBuilder();
/*       */ 
/*       */     
/*       */     boolean hasIOCANBusBusAirSuspensionControl4RearAxleright();
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOCANBusBusAirSuspensionControl4RearAxleright();
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOCANBusBusAirSuspensionControl4RearAxlerightOrBuilder();
/*       */ 
/*       */     
/*       */     boolean hasIOCANBusDashDisplayFuelLevel2();
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOCANBusDashDisplayFuelLevel2();
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOCANBusDashDisplayFuelLevel2OrBuilder();
/*       */ 
/*       */     
/*       */     boolean hasIOCANBusElectronicBrakeControllerBrakePedalPosition();
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOCANBusElectronicBrakeControllerBrakePedalPosition();
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOCANBusElectronicBrakeControllerBrakePedalPositionOrBuilder();
/*       */ 
/*       */     
/*       */     boolean hasIOCANBusFuelConsumptionGaseousTotalFuelUsed();
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOCANBusFuelConsumptionGaseousTotalFuelUsed();
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOCANBusFuelConsumptionGaseousTotalFuelUsedOrBuilder();
/*       */ 
/*       */     
/*       */     boolean hasIOCANBusTruckBusCruiseControlVehicleSpeedParkingBrakeSwitch();
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOCANBusTruckBusCruiseControlVehicleSpeedParkingBrakeSwitch();
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOCANBusTruckBusCruiseControlVehicleSpeedParkingBrakeSwitchOrBuilder();
/*       */ 
/*       */     
/*       */     boolean hasIOCANBusTruckBusCruiseControlVehicleSpeedWheelBasedSpeed();
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOCANBusTruckBusCruiseControlVehicleSpeedWheelBasedSpeed();
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOCANBusTruckBusCruiseControlVehicleSpeedWheelBasedSpeedOrBuilder();
/*       */ 
/*       */     
/*       */     boolean hasIOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlActive();
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlActive();
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlActiveOrBuilder();
/*       */ 
/*       */     
/*       */     boolean hasIOCANBusTruckBusCruiseControlVehicleSpeedBrakeSwitch();
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOCANBusTruckBusCruiseControlVehicleSpeedBrakeSwitch();
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOCANBusTruckBusCruiseControlVehicleSpeedBrakeSwitchOrBuilder();
/*       */ 
/*       */     
/*       */     boolean hasIOCANBusTruckBusCruiseControlVehicleSpeedClutchSwitch();
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOCANBusTruckBusCruiseControlVehicleSpeedClutchSwitch();
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOCANBusTruckBusCruiseControlVehicleSpeedClutchSwitchOrBuilder();
/*       */ 
/*       */     
/*       */     boolean hasIOCANBusTruckBusCruiseControlVehicleSpeedPtoState();
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOCANBusTruckBusCruiseControlVehicleSpeedPtoState();
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOCANBusTruckBusCruiseControlVehicleSpeedPtoStateOrBuilder();
/*       */ 
/*       */     
/*       */     boolean hasIOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlStates();
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlStates();
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlStatesOrBuilder();
/*       */ 
/*       */     
/*       */     boolean hasIOCANBusBusVehicleElectricalPowerHybridBatteryPackRemainingCharge();
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOCANBusBusVehicleElectricalPowerHybridBatteryPackRemainingCharge();
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOCANBusBusVehicleElectricalPowerHybridBatteryPackRemainingChargeOrBuilder();
/*       */ 
/*       */     
/*       */     boolean hasIOCANBusBusVehicleDynamicStabilityControl2SteeringWheelAngle();
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOCANBusBusVehicleDynamicStabilityControl2SteeringWheelAngle();
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOCANBusBusVehicleDynamicStabilityControl2SteeringWheelAngleOrBuilder();
/*       */ 
/*       */     
/*       */     boolean hasIOCANBusElectronicEngineController14FuelType();
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOCANBusElectronicEngineController14FuelType();
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOCANBusElectronicEngineController14FuelTypeOrBuilder();
/*       */ 
/*       */     
/*       */     boolean hasIOCANBusEngineFluidLevelPressureEngineOilLevel();
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOCANBusEngineFluidLevelPressureEngineOilLevel();
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOCANBusEngineFluidLevelPressureEngineOilLevelOrBuilder();
/*       */ 
/*       */     
/*       */     boolean hasIOCANBusEngineFluidLevelPressureEngineOilPressure();
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOCANBusEngineFluidLevelPressureEngineOilPressure();
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOCANBusEngineFluidLevelPressureEngineOilPressureOrBuilder();
/*       */ 
/*       */     
/*       */     boolean hasIOCANBusEngineFluidLevelPressureCoolantLevel();
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOCANBusEngineFluidLevelPressureCoolantLevel();
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOCANBusEngineFluidLevelPressureCoolantLevelOrBuilder();
/*       */ 
/*       */     
/*       */     boolean hasIOCANBusTellTaleStatus();
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOCANBusTellTaleStatus();
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOCANBusTellTaleStatusOrBuilder();
/*       */ 
/*       */     
/*       */     boolean hasIOCANBusFuelConsumptionEngineTotalFuelUsed();
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOCANBusFuelConsumptionEngineTotalFuelUsed();
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOCANBusFuelConsumptionEngineTotalFuelUsedOrBuilder();
/*       */ 
/*       */     
/*       */     boolean hasIOCANBusTruckVehicleWeightAxleWeight4();
/*       */ 
/*       */     
/*       */     DolphinConfig.IO getIOCANBusTruckVehicleWeightAxleWeight4();
/*       */ 
/*       */     
/*       */     DolphinConfig.IOOrBuilder getIOCANBusTruckVehicleWeightAxleWeight4OrBuilder();
/*       */   }
/*       */ 
/*       */   
/*       */   public static final class Config
/*       */     extends GeneratedMessageV3
/*       */     implements ConfigOrBuilder
/*       */   {
/*       */     private static final long serialVersionUID = 0L;
/*       */     
/*       */     public static final int SERIALPORT_BAUDRATE_FIELD_NUMBER = 80;
/*       */     
/*       */     private int serialPortBaudrate_;
/*       */     
/*       */     public static final int DONOTRESETDEVICEONPROBLEMS_FIELD_NUMBER = 90;
/*       */     
/*       */     private boolean doNotResetDeviceOnProblems_;
/*       */     
/*       */     public static final int PASSWORD_FIELD_NUMBER = 99;
/*       */     
/*       */     private volatile Object password_;
/*       */     
/*       */     public static final int MOVEMENT_FIELD_NUMBER = 100;
/*       */     
/*       */     private int movement_;
/*       */     
/*       */     public static final int MOVEMENTSENSORSENSITIVITY_FIELD_NUMBER = 101;
/*       */     
/*       */     private int movementSensorSensitivity_;
/*       */     
/*       */     public static final int SLEEP_FIELD_NUMBER = 102;
/*       */     
/*       */     private int sleep_;
/*       */     
/*       */     public static final int SLEEPTIMEOUT_FIELD_NUMBER = 103;
/*       */     
/*       */     private int sleepTimeout_;
/*       */     
/*       */     public static final int ENGINEON_FIELD_NUMBER = 104;
/*       */     
/*       */     private int engineOn_;
/*       */     
/*       */     public static final int ENGINEON_DIN1_FIELD_NUMBER = 105;
/*       */     
/*       */     private boolean engineOnDIN1_;
/*       */     
/*       */     public static final int ENGINEON_DIN2_FIELD_NUMBER = 106;
/*       */     
/*       */     private boolean engineOnDIN2_;
/*       */     
/*       */     public static final int ENGINEON_MOVEMENTSENSOR_FIELD_NUMBER = 107;
/*       */     
/*       */     private boolean engineOnMovementSensor_;
/*       */     
/*       */     public static final int ENGINEON_POWERSUPPLYAVAILABLE_FIELD_NUMBER = 108;
/*       */     
/*       */     private boolean engineOnPowerSupplyAvailable_;
/*       */     
/*       */     public static final int ENGINEON_GPSSPEED_FIELD_NUMBER = 109;
/*       */     
/*       */     private int engineOnGpsSpeed_;
/*       */     
/*       */     public static final int ENGINEON_CANRPM_FIELD_NUMBER = 110;
/*       */     
/*       */     private int engineOnCanRPM_;
/*       */     
/*       */     public static final int ENGINEON_MINACTIVESTATEDURATION_FIELD_NUMBER = 111;
/*       */     
/*       */     private int engineOnMinActiveStateDuration_;
/*       */     
/*       */     public static final int ENGINEON_OPERATOR_FIELD_NUMBER = 112;
/*       */     
/*       */     private int engineOnOperator_;
/*       */     
/*       */     public static final int ENGINEON_MOVEMENTSTARTDELAY_FIELD_NUMBER = 113;
/*       */     
/*       */     private int engineOnMovementStartDelay_;
/*       */     
/*       */     public static final int ENGINEON_MOVEMENTSTOPDELAY_FIELD_NUMBER = 114;
/*       */     
/*       */     private int engineOnMovementStopDelay_;
/*       */     
/*       */     public static final int ENGINEON_EXTERNALVOLTAGE_FIELD_NUMBER = 115;
/*       */     
/*       */     private int engineOnExternalVoltage_;
/*       */     
/*       */     public static final int LEDINDICATION_FIELD_NUMBER = 116;
/*       */     
/*       */     private boolean ledIndication_;
/*       */     
/*       */     public static final int GNSS_FIELD_NUMBER = 117;
/*       */     
/*       */     private int gNSS_;
/*       */     
/*       */     public static final int STATICNAVIGATION_ENABLED_FIELD_NUMBER = 118;
/*       */     
/*       */     private boolean staticNavigationEnabled_;
/*       */     
/*       */     public static final int STATICNAVIGATION_SOURCE_FIELD_NUMBER = 119;
/*       */     
/*       */     private int staticNavigationSource_;
/*       */     
/*       */     public static final int RECORDSSAVEANDSENDMODE_FIELD_NUMBER = 120;
/*       */     
/*       */     private int recordsSaveAndSendMode_;
/*       */     
/*       */     public static final int TIMESYNCHRONIZATION_FIELD_NUMBER = 121;
/*       */     
/*       */     private int timeSynchronization_;
/*       */     
/*       */     public static final int NTPSERVER_FIELD_NUMBER = 122;
/*       */     
/*       */     private volatile Object nTPServer_;
/*       */     
/*       */     public static final int NTPINTERVAL_FIELD_NUMBER = 123;
/*       */     
/*       */     private int nTPInterval_;
/*       */     
/*       */     public static final int SLEEP_NOPOWERTIMEOUT_FIELD_NUMBER = 125;
/*       */     
/*       */     private int sleepNoPowerTimeout_;
/*       */     
/*       */     public static final int SENDPING_FIELD_NUMBER = 130;
/*       */     
/*       */     private boolean sendPing_;
/*       */     
/*       */     public static final int TIMETABLEMODE_FIELD_NUMBER = 140;
/*       */     
/*       */     private boolean timetableMode_;
/*       */     
/*       */     public static final int TIMETABLEDATA_FIELD_NUMBER = 141;
/*       */     
/*       */     private ByteString timetableData_;
/*       */     
/*       */     public static final int SERVICE_1_FIELD_NUMBER = 200;
/*       */     
/*       */     private DolphinConfig.Service service1_;
/*       */     
/*       */     public static final int SERVICE_2_FIELD_NUMBER = 201;
/*       */     
/*       */     private DolphinConfig.Service service2_;
/*       */     
/*       */     public static final int SERVICE_3_FIELD_NUMBER = 202;
/*       */     
/*       */     private DolphinConfig.Service service3_;
/*       */     
/*       */     public static final int ANALOGINPUT1_AVERAGETIME_FIELD_NUMBER = 700;
/*       */     
/*       */     private int analogInput1AverageTime_;
/*       */     
/*       */     public static final int ANALOGINPUT2_AVERAGETIME_FIELD_NUMBER = 701;
/*       */     
/*       */     private int analogInput2AverageTime_;
/*       */     
/*       */     public static final int ANALOGINPUT3_AVERAGETIME_FIELD_NUMBER = 702;
/*       */     
/*       */     private int analogInput3AverageTime_;
/*       */     
/*       */     public static final int BLUETOOTH_RADIOMODE_FIELD_NUMBER = 800;
/*       */     
/*       */     private int bluetoothRadioMode_;
/*       */     
/*       */     public static final int BLUETOOTH_NAME_FIELD_NUMBER = 801;
/*       */     
/*       */     private volatile Object bluetoothName_;
/*       */     
/*       */     public static final int BLUETOOTH_PIN_FIELD_NUMBER = 802;
/*       */     
/*       */     private volatile Object bluetoothPIN_;
/*       */     
/*       */     public static final int BLUETOOTH_SECURITYMODE_FIELD_NUMBER = 803;
/*       */     
/*       */     private int bluetoothSecurityMode_;
/*       */     
/*       */     public static final int BLUETOOTH_POWERDOWNONSLEEP_FIELD_NUMBER = 804;
/*       */     
/*       */     private boolean bluetoothPowerDownOnSleep_;
/*       */     
/*       */     public static final int BLUETOOTH_EXTERNALCONNECTIONMODE_FIELD_NUMBER = 810;
/*       */     
/*       */     private int bluetoothExternalConnectionMode_;
/*       */     
/*       */     public static final int BLUETOOTH_EXTERNALDEVICE_MAC_FIELD_NUMBER = 811;
/*       */     
/*       */     private volatile Object bluetoothExternalDeviceMAC_;
/*       */     
/*       */     public static final int BLUETOOTH_EXTERNALDEVICE_NAME_FIELD_NUMBER = 812;
/*       */     
/*       */     private volatile Object bluetoothExternalDeviceName_;
/*       */     
/*       */     public static final int BLUETOOTH_EXTERNALDEVICE_PIN_FIELD_NUMBER = 813;
/*       */     
/*       */     private volatile Object bluetoothExternalDevicePIN_;
/*       */     
/*       */     public static final int BLUETOOTH_AUTHORIZEDMAC1_FIELD_NUMBER = 820;
/*       */     
/*       */     private volatile Object bluetoothAuthorizedMAC1_;
/*       */     
/*       */     public static final int BLUETOOTH_AUTHORIZEDMAC2_FIELD_NUMBER = 821;
/*       */     
/*       */     private volatile Object bluetoothAuthorizedMAC2_;
/*       */     
/*       */     public static final int BLUETOOTH_AUTHORIZEDMAC3_FIELD_NUMBER = 822;
/*       */     
/*       */     private volatile Object bluetoothAuthorizedMAC3_;
/*       */     
/*       */     public static final int BLUETOOTH_AUTHORIZEDMAC4_FIELD_NUMBER = 823;
/*       */     
/*       */     private volatile Object bluetoothAuthorizedMAC4_;
/*       */     
/*       */     public static final int BLUETOOTH_AUTHORIZEDMAC5_FIELD_NUMBER = 824;
/*       */     
/*       */     private volatile Object bluetoothAuthorizedMAC5_;
/*       */     
/*       */     public static final int GPRS_CONTEXTENABLED_FIELD_NUMBER = 2001;
/*       */     
/*       */     private boolean gPRSContextEnabled_;
/*       */     
/*       */     public static final int GPRS_APNNAME_FIELD_NUMBER = 2002;
/*       */     
/*       */     private volatile Object gPRSApnName_;
/*       */     
/*       */     public static final int GPRS_APNUSERNAME_FIELD_NUMBER = 2003;
/*       */     
/*       */     private volatile Object gPRSApnUsername_;
/*       */     
/*       */     public static final int GPRS_APNPASSWORD_FIELD_NUMBER = 2004;
/*       */     
/*       */     private volatile Object gPRSApnPassword_;
/*       */     
/*       */     public static final int GPRS_CHAPAUTHENTICATION_FIELD_NUMBER = 2005;
/*       */     
/*       */     private boolean gPRSCHAPAuthentication_;
/*       */     
/*       */     public static final int GPRS_LINKTIMEOUT_FIELD_NUMBER = 2006;
/*       */     
/*       */     private int gPRSLinkTimeout_;
/*       */     
/*       */     public static final int GPRS_RESPONSETIMEOUT_FIELD_NUMBER = 2007;
/*       */     
/*       */     private int gPRSResponseTimeout_;
/*       */     
/*       */     public static final int GPRS_SERVERADDRESS_FIELD_NUMBER = 2008;
/*       */     
/*       */     private volatile Object gPRSServerAddress_;
/*       */     
/*       */     public static final int GPRS_SERVERPORT_FIELD_NUMBER = 2009;
/*       */     
/*       */     private int gPRSServerPort_;
/*       */     
/*       */     public static final int GPRS_SERVERPROTOCOL_FIELD_NUMBER = 2010;
/*       */     
/*       */     private int gPRSServerProtocol_;
/*       */     
/*       */     public static final int GPRS_BACKUPSERVERADDRESS_FIELD_NUMBER = 2011;
/*       */     
/*       */     private volatile Object gPRSBackupServerAddress_;
/*       */     
/*       */     public static final int GPRS_BACKUPSERVERPORT_FIELD_NUMBER = 2012;
/*       */     
/*       */     private int gPRSBackupServerPort_;
/*       */     
/*       */     public static final int GPRS_BACKUPSERVERPROTOCOL_FIELD_NUMBER = 2013;
/*       */     
/*       */     private int gPRSBackupServerProtocol_;
/*       */     
/*       */     public static final int GPRS_SSL_CLIENTAUTHENTICATION_FIELD_NUMBER = 2020;
/*       */     
/*       */     private boolean gPRSSSLClientAuthentication_;
/*       */     
/*       */     public static final int GPRS_DATACOMPRESSION_FIELD_NUMBER = 2030;
/*       */     
/*       */     private boolean gPRSDataCompression_;
/*       */     
/*       */     public static final int AUTHENTICATION_MODE_FIELD_NUMBER = 2035;
/*       */     
/*       */     private int authenticationMode_;
/*       */     
/*       */     public static final int AUTHENTICATION_CODE_FIELD_NUMBER = 2036;
/*       */     
/*       */     private volatile Object authenticationCode_;
/*       */     
/*       */     public static final int FIRMWAREUPDATE_ENABLED_FIELD_NUMBER = 2040;
/*       */     
/*       */     private boolean firmwareUpdateEnabled_;
/*       */     
/*       */     public static final int FIRMWAREUPDATE_CHANNEL_FIELD_NUMBER = 2041;
/*       */     
/*       */     private volatile Object firmwareUpdateChannel_;
/*       */     
/*       */     public static final int FIRMWAREUPDATE_CHECKINTERVAL_FIELD_NUMBER = 2042;
/*       */     
/*       */     private int firmwareUpdateCheckInterval_;
/*       */     
/*       */     public static final int FIRMWAREUPDATE_SERVERADDRESS_FIELD_NUMBER = 2045;
/*       */     
/*       */     private volatile Object firmwareUpdateServerAddress_;
/*       */     
/*       */     public static final int FIRMWAREUPDATE_SERVERPORT_FIELD_NUMBER = 2046;
/*       */     
/*       */     private int firmwareUpdateServerPort_;
/*       */     
/*       */     public static final int FIRMWAREUPDATE_SERVERPROTOCOL_FIELD_NUMBER = 2047;
/*       */     
/*       */     private int firmwareUpdateServerProtocol_;
/*       */     
/*       */     public static final int FIRMWAREUPDATE_LINKTIMEOUT_FIELD_NUMBER = 2048;
/*       */     
/*       */     private int firmwareUpdateLinkTimeout_;
/*       */     
/*       */     public static final int FIRMWAREUPDATE_RESPONSETIMEOUT_FIELD_NUMBER = 2049;
/*       */     
/*       */     private int firmwareUpdateResponseTimeout_;
/*       */     
/*       */     public static final int SMS_DATASENDING_FIELD_NUMBER = 3000;
/*       */     
/*       */     private boolean sMSDataSending_;
/*       */     
/*       */     public static final int SMS_DATASENDNUMBER_FIELD_NUMBER = 3001;
/*       */     
/*       */     private volatile Object sMSDataSendNumber_;
/*       */     
/*       */     public static final int SMS_PASSWORD_FIELD_NUMBER = 3002;
/*       */     
/*       */     private volatile Object sMSPassword_;
/*       */     
/*       */     public static final int SMS_EVENTTIMEZONE_FIELD_NUMBER = 3003;
/*       */     
/*       */     private int sMSEventTimeZone_;
/*       */     
/*       */     public static final int CALL_INCOMMINGCALLACTION_FIELD_NUMBER = 3051;
/*       */     
/*       */     private int callIncommingCallAction_;
/*       */     
/*       */     public static final int CALL_DIGITALINPUT1_CALLTO_FIELD_NUMBER = 3055;
/*       */     
/*       */     private int callDigitalInput1CallTo_;
/*       */     
/*       */     public static final int CALL_DIGITALINPUT2_CALLTO_FIELD_NUMBER = 3056;
/*       */     
/*       */     private int callDigitalInput2CallTo_;
/*       */     
/*       */     public static final int CALL_DIGITALINPUT3_CALLTO_FIELD_NUMBER = 3057;
/*       */     
/*       */     private int callDigitalInput3CallTo_;
/*       */     
/*       */     public static final int AUTHORIZEDNUMBER1_FIELD_NUMBER = 3100;
/*       */     
/*       */     private volatile Object authorizedNumber1_;
/*       */     
/*       */     public static final int AUTHORIZEDNUMBER2_FIELD_NUMBER = 3101;
/*       */     
/*       */     private volatile Object authorizedNumber2_;
/*       */     
/*       */     public static final int AUTHORIZEDNUMBER3_FIELD_NUMBER = 3102;
/*       */     
/*       */     private volatile Object authorizedNumber3_;
/*       */     
/*       */     public static final int AUTHORIZEDNUMBER4_FIELD_NUMBER = 3103;
/*       */     
/*       */     private volatile Object authorizedNumber4_;
/*       */     
/*       */     public static final int AUTHORIZEDNUMBER5_FIELD_NUMBER = 3104;
/*       */     
/*       */     private volatile Object authorizedNumber5_;
/*       */     
/*       */     public static final int AUTHORIZEDNUMBER6_FIELD_NUMBER = 3105;
/*       */     
/*       */     private volatile Object authorizedNumber6_;
/*       */     
/*       */     public static final int AUTHORIZEDNUMBER7_FIELD_NUMBER = 3106;
/*       */     
/*       */     private volatile Object authorizedNumber7_;
/*       */     
/*       */     public static final int AUTHORIZEDNUMBER8_FIELD_NUMBER = 3107;
/*       */     
/*       */     private volatile Object authorizedNumber8_;
/*       */     
/*       */     public static final int AUTHORIZEDNUMBER9_FIELD_NUMBER = 3108;
/*       */     
/*       */     private volatile Object authorizedNumber9_;
/*       */     
/*       */     public static final int AUTHORIZEDNUMBER10_FIELD_NUMBER = 3109;
/*       */     
/*       */     private volatile Object authorizedNumber10_;
/*       */     
/*       */     public static final int GSMPREDEFINEDNUMBER1_FIELD_NUMBER = 3200;
/*       */     
/*       */     private volatile Object gsmPredefinedNumber1_;
/*       */     
/*       */     public static final int GSMPREDEFINEDNUMBER2_FIELD_NUMBER = 3201;
/*       */     
/*       */     private volatile Object gsmPredefinedNumber2_;
/*       */     
/*       */     public static final int GSMPREDEFINEDNUMBER3_FIELD_NUMBER = 3202;
/*       */     
/*       */     private volatile Object gsmPredefinedNumber3_;
/*       */     
/*       */     public static final int GSMPREDEFINEDNUMBER4_FIELD_NUMBER = 3203;
/*       */     
/*       */     private volatile Object gsmPredefinedNumber4_;
/*       */     
/*       */     public static final int GSMPREDEFINEDNUMBER5_FIELD_NUMBER = 3204;
/*       */     
/*       */     private volatile Object gsmPredefinedNumber5_;
/*       */     
/*       */     public static final int GSMPREDEFINEDNUMBER6_FIELD_NUMBER = 3205;
/*       */     
/*       */     private volatile Object gsmPredefinedNumber6_;
/*       */     
/*       */     public static final int GSMPREDEFINEDNUMBER7_FIELD_NUMBER = 3206;
/*       */     
/*       */     private volatile Object gsmPredefinedNumber7_;
/*       */     
/*       */     public static final int GSMPREDEFINEDNUMBER8_FIELD_NUMBER = 3207;
/*       */     
/*       */     private volatile Object gsmPredefinedNumber8_;
/*       */     
/*       */     public static final int GSMPREDEFINEDNUMBER9_FIELD_NUMBER = 3208;
/*       */     
/*       */     private volatile Object gsmPredefinedNumber9_;
/*       */     
/*       */     public static final int GSMPREDEFINEDNUMBER10_FIELD_NUMBER = 3209;
/*       */     
/*       */     private volatile Object gsmPredefinedNumber10_;
/*       */     
/*       */     public static final int ROAMINGOPERATOR1_FIELD_NUMBER = 5000;
/*       */     
/*       */     private volatile Object roamingOperator1_;
/*       */     
/*       */     public static final int ROAMINGOPERATOR2_FIELD_NUMBER = 5001;
/*       */     
/*       */     private volatile Object roamingOperator2_;
/*       */     
/*       */     public static final int ROAMINGOPERATOR3_FIELD_NUMBER = 5002;
/*       */     
/*       */     private volatile Object roamingOperator3_;
/*       */     
/*       */     public static final int ROAMINGOPERATOR4_FIELD_NUMBER = 5003;
/*       */     
/*       */     private volatile Object roamingOperator4_;
/*       */     
/*       */     public static final int ROAMINGOPERATOR5_FIELD_NUMBER = 5004;
/*       */     
/*       */     private volatile Object roamingOperator5_;
/*       */     
/*       */     public static final int DAQ_STOP_HOME_MINPERIOD_FIELD_NUMBER = 10000;
/*       */     
/*       */     private int dAQStopHomeMinPeriod_;
/*       */     
/*       */     public static final int DAQ_STOP_ROAMING_MINPERIOD_FIELD_NUMBER = 10100;
/*       */     
/*       */     private int dAQStopRoamingMinPeriod_;
/*       */     
/*       */     public static final int DAQ_MOVING_HOME_MINPERIOD_FIELD_NUMBER = 10050;
/*       */     
/*       */     private int dAQMovingHomeMinPeriod_;
/*       */     
/*       */     public static final int DAQ_MOVING_HOME_MINPATHDEVIATION_FIELD_NUMBER = 10051;
/*       */     
/*       */     private int dAQMovingHomeMinPathDeviation_;
/*       */     
/*       */     public static final int DAQ_MOVING_ROAMING_MINPERIOD_FIELD_NUMBER = 10150;
/*       */     
/*       */     private int dAQMovingRoamingMinPeriod_;
/*       */     
/*       */     public static final int DAQ_MOVING_ROAMING_MINPATHDEVIATION_FIELD_NUMBER = 10151;
/*       */     
/*       */     private int dAQMovingRoamingMinPathDeviation_;
/*       */     
/*       */     public static final int GEOZONE1_FIELD_NUMBER = 20000;
/*       */     
/*       */     private DolphinConfig.GeoZone geoZone1_;
/*       */     
/*       */     public static final int GEOZONE2_FIELD_NUMBER = 20020;
/*       */     
/*       */     private DolphinConfig.GeoZone geoZone2_;
/*       */     
/*       */     public static final int GEOZONE3_FIELD_NUMBER = 20040;
/*       */     
/*       */     private DolphinConfig.GeoZone geoZone3_;
/*       */     
/*       */     public static final int GEOZONE4_FIELD_NUMBER = 20060;
/*       */     
/*       */     private DolphinConfig.GeoZone geoZone4_;
/*       */     
/*       */     public static final int GEOZONE5_FIELD_NUMBER = 20080;
/*       */     
/*       */     private DolphinConfig.GeoZone geoZone5_;
/*       */     
/*       */     public static final int GEOZONE6_FIELD_NUMBER = 20100;
/*       */     
/*       */     private DolphinConfig.GeoZone geoZone6_;
/*       */     
/*       */     public static final int GEOZONE7_FIELD_NUMBER = 20120;
/*       */     
/*       */     private DolphinConfig.GeoZone geoZone7_;
/*       */     
/*       */     public static final int GEOZONE8_FIELD_NUMBER = 20140;
/*       */     
/*       */     private DolphinConfig.GeoZone geoZone8_;
/*       */     
/*       */     public static final int GEOZONE9_FIELD_NUMBER = 20160;
/*       */     
/*       */     private DolphinConfig.GeoZone geoZone9_;
/*       */     
/*       */     public static final int GEOZONE10_FIELD_NUMBER = 20180;
/*       */     
/*       */     private DolphinConfig.GeoZone geoZone10_;
/*       */     
/*       */     public static final int GEOZONE11_FIELD_NUMBER = 20200;
/*       */     
/*       */     private DolphinConfig.GeoZone geoZone11_;
/*       */     
/*       */     public static final int GEOZONE12_FIELD_NUMBER = 20220;
/*       */     
/*       */     private DolphinConfig.GeoZone geoZone12_;
/*       */     
/*       */     public static final int GEOZONE13_FIELD_NUMBER = 20240;
/*       */     
/*       */     private DolphinConfig.GeoZone geoZone13_;
/*       */     
/*       */     public static final int GEOZONE14_FIELD_NUMBER = 20260;
/*       */     
/*       */     private DolphinConfig.GeoZone geoZone14_;
/*       */     
/*       */     public static final int GEOZONE15_FIELD_NUMBER = 20280;
/*       */     
/*       */     private DolphinConfig.GeoZone geoZone15_;
/*       */     
/*       */     public static final int GEOZONE16_FIELD_NUMBER = 20300;
/*       */     
/*       */     private DolphinConfig.GeoZone geoZone16_;
/*       */     
/*       */     public static final int GEOZONE17_FIELD_NUMBER = 20320;
/*       */     
/*       */     private DolphinConfig.GeoZone geoZone17_;
/*       */     
/*       */     public static final int GEOZONE18_FIELD_NUMBER = 20340;
/*       */     
/*       */     private DolphinConfig.GeoZone geoZone18_;
/*       */     
/*       */     public static final int GEOZONE19_FIELD_NUMBER = 20360;
/*       */     
/*       */     private DolphinConfig.GeoZone geoZone19_;
/*       */     
/*       */     public static final int GEOZONE20_FIELD_NUMBER = 20380;
/*       */     
/*       */     private DolphinConfig.GeoZone geoZone20_;
/*       */     
/*       */     public static final int GEOZONE21_FIELD_NUMBER = 20400;
/*       */     
/*       */     private DolphinConfig.GeoZone geoZone21_;
/*       */     
/*       */     public static final int GEOZONE22_FIELD_NUMBER = 20420;
/*       */     
/*       */     private DolphinConfig.GeoZone geoZone22_;
/*       */     
/*       */     public static final int GEOZONE23_FIELD_NUMBER = 20440;
/*       */     
/*       */     private DolphinConfig.GeoZone geoZone23_;
/*       */     
/*       */     public static final int GEOZONE24_FIELD_NUMBER = 20460;
/*       */     
/*       */     private DolphinConfig.GeoZone geoZone24_;
/*       */     
/*       */     public static final int GEOZONE25_FIELD_NUMBER = 20480;
/*       */     
/*       */     private DolphinConfig.GeoZone geoZone25_;
/*       */     
/*       */     public static final int GEOZONE26_FIELD_NUMBER = 20500;
/*       */     
/*       */     private DolphinConfig.GeoZone geoZone26_;
/*       */     
/*       */     public static final int GEOZONE27_FIELD_NUMBER = 20520;
/*       */     
/*       */     private DolphinConfig.GeoZone geoZone27_;
/*       */     
/*       */     public static final int GEOZONE28_FIELD_NUMBER = 20540;
/*       */     
/*       */     private DolphinConfig.GeoZone geoZone28_;
/*       */     
/*       */     public static final int GEOZONE29_FIELD_NUMBER = 20560;
/*       */     
/*       */     private DolphinConfig.GeoZone geoZone29_;
/*       */     
/*       */     public static final int GEOZONE30_FIELD_NUMBER = 20580;
/*       */     
/*       */     private DolphinConfig.GeoZone geoZone30_;
/*       */     
/*       */     public static final int GEOZONE31_FIELD_NUMBER = 20600;
/*       */     
/*       */     private DolphinConfig.GeoZone geoZone31_;
/*       */     
/*       */     public static final int GEOZONE32_FIELD_NUMBER = 20620;
/*       */     
/*       */     private DolphinConfig.GeoZone geoZone32_;
/*       */     
/*       */     public static final int GEOZONE33_FIELD_NUMBER = 20640;
/*       */     
/*       */     private DolphinConfig.GeoZone geoZone33_;
/*       */     
/*       */     public static final int GEOZONE34_FIELD_NUMBER = 20660;
/*       */     
/*       */     private DolphinConfig.GeoZone geoZone34_;
/*       */     
/*       */     public static final int GEOZONE35_FIELD_NUMBER = 20680;
/*       */     
/*       */     private DolphinConfig.GeoZone geoZone35_;
/*       */     
/*       */     public static final int GEOZONE36_FIELD_NUMBER = 20700;
/*       */     
/*       */     private DolphinConfig.GeoZone geoZone36_;
/*       */     
/*       */     public static final int GEOZONE37_FIELD_NUMBER = 20720;
/*       */     
/*       */     private DolphinConfig.GeoZone geoZone37_;
/*       */     
/*       */     public static final int GEOZONE38_FIELD_NUMBER = 20740;
/*       */     
/*       */     private DolphinConfig.GeoZone geoZone38_;
/*       */     
/*       */     public static final int GEOZONE39_FIELD_NUMBER = 20760;
/*       */     
/*       */     private DolphinConfig.GeoZone geoZone39_;
/*       */     
/*       */     public static final int GEOZONE40_FIELD_NUMBER = 20780;
/*       */     
/*       */     private DolphinConfig.GeoZone geoZone40_;
/*       */     
/*       */     public static final int GEOZONE41_FIELD_NUMBER = 20800;
/*       */     
/*       */     private DolphinConfig.GeoZone geoZone41_;
/*       */     
/*       */     public static final int GEOZONE42_FIELD_NUMBER = 20820;
/*       */     
/*       */     private DolphinConfig.GeoZone geoZone42_;
/*       */     
/*       */     public static final int GEOZONE43_FIELD_NUMBER = 20840;
/*       */     
/*       */     private DolphinConfig.GeoZone geoZone43_;
/*       */     
/*       */     public static final int GEOZONE44_FIELD_NUMBER = 20860;
/*       */     
/*       */     private DolphinConfig.GeoZone geoZone44_;
/*       */     
/*       */     public static final int GEOZONE45_FIELD_NUMBER = 20880;
/*       */     
/*       */     private DolphinConfig.GeoZone geoZone45_;
/*       */     
/*       */     public static final int GEOZONE46_FIELD_NUMBER = 20900;
/*       */     
/*       */     private DolphinConfig.GeoZone geoZone46_;
/*       */     
/*       */     public static final int GEOZONE47_FIELD_NUMBER = 20920;
/*       */     
/*       */     private DolphinConfig.GeoZone geoZone47_;
/*       */     
/*       */     public static final int GEOZONE48_FIELD_NUMBER = 20940;
/*       */     
/*       */     private DolphinConfig.GeoZone geoZone48_;
/*       */     
/*       */     public static final int GEOZONE49_FIELD_NUMBER = 20960;
/*       */     
/*       */     private DolphinConfig.GeoZone geoZone49_;
/*       */     
/*       */     public static final int GEOZONE50_FIELD_NUMBER = 20980;
/*       */     
/*       */     private DolphinConfig.GeoZone geoZone50_;
/*       */     
/*       */     public static final int TRIP_STARTSPEED_FIELD_NUMBER = 28000;
/*       */     
/*       */     private int tripStartSpeed_;
/*       */     
/*       */     public static final int TRIP_USEIGNITION_FIELD_NUMBER = 28001;
/*       */     
/*       */     private boolean tripUseIgnition_;
/*       */     
/*       */     public static final int TRIP_PARKDETECTIONTIMEOUT_FIELD_NUMBER = 28002;
/*       */     
/*       */     private int tripParkDetectionTimeout_;
/*       */     
/*       */     public static final int OVERSPEEDING_ENABLE_FIELD_NUMBER = 28100;
/*       */     
/*       */     private boolean overspeedingEnable_;
/*       */     
/*       */     public static final int OVERSPEEDING_LIMIT_FIELD_NUMBER = 28101;
/*       */     
/*       */     private int overspeedingLimit_;
/*       */     
/*       */     public static final int OVERSPEEDING_ACTIVATIONSPEED_FIELD_NUMBER = 28102;
/*       */     
/*       */     private int overspeedingActivationSpeed_;
/*       */     
/*       */     public static final int OVERSPEEDING_DEACTIVATIONMODE_FIELD_NUMBER = 28103;
/*       */     
/*       */     private int overspeedingDeactivationMode_;
/*       */     
/*       */     public static final int OVERSPEEDING_DEACTIVATIONVALUE_FIELD_NUMBER = 28104;
/*       */     
/*       */     private int overspeedingDeactivationValue_;
/*       */     
/*       */     public static final int USSD_ENABLED_FIELD_NUMBER = 28140;
/*       */     
/*       */     private boolean uSSDEnabled_;
/*       */     
/*       */     public static final int USSD_ID_FIELD_NUMBER = 28141;
/*       */     
/*       */     private int uSSDID_;
/*       */     
/*       */     public static final int USSD_INTERVAL_FIELD_NUMBER = 28142;
/*       */     
/*       */     private int uSSDInterval_;
/*       */     
/*       */     public static final int USSD_CODE_FIELD_NUMBER = 28143;
/*       */     
/*       */     private volatile Object uSSDCode_;
/*       */     
/*       */     public static final int SPEEDSENSOR_KMPULSECOUNT_FIELD_NUMBER = 28150;
/*       */     
/*       */     private int speedSensorKmPulseCount_;
/*       */     
/*       */     public static final int CRASHDETECTION_ENABLED_FIELD_NUMBER = 28200;
/*       */     
/*       */     private boolean crashDetectionEnabled_;
/*       */     
/*       */     public static final int CRASHDETECTION_LEVEL1THRESHOLD_FIELD_NUMBER = 28201;
/*       */     
/*       */     private int crashDetectionLevel1Threshold_;
/*       */     
/*       */     public static final int CRASHDETECTION_LEVEL2THRESHOLD_FIELD_NUMBER = 28202;
/*       */     
/*       */     private int crashDetectionLevel2Threshold_;
/*       */     
/*       */     public static final int CRASHDETECTION_LEVEL3THRESHOLD_FIELD_NUMBER = 28203;
/*       */     
/*       */     private int crashDetectionLevel3Threshold_;
/*       */     
/*       */     public static final int CRASHDETECTION_TRACE_FIELD_NUMBER = 28205;
/*       */     
/*       */     private int crashDetectionTrace_;
/*       */     
/*       */     public static final int CRASHDETECTION_DURATION_FIELD_NUMBER = 28210;
/*       */     
/*       */     private int crashDetectionDuration_;
/*       */     
/*       */     public static final int CRASHDETECTION_SENDSMSTO_FIELD_NUMBER = 28220;
/*       */     
/*       */     private int crashDetectionSendSMSTo_;
/*       */     
/*       */     public static final int CRASHDETECTION_SMSTEXT_FIELD_NUMBER = 28221;
/*       */     
/*       */     private volatile Object crashDetectionSMSText_;
/*       */     
/*       */     public static final int CRASHDETECTION_CALLTO_FIELD_NUMBER = 28225;
/*       */     
/*       */     private int crashDetectionCallTo_;
/*       */     
/*       */     public static final int ROLLOVERDETECTION_ENABLED_FIELD_NUMBER = 28230;
/*       */     
/*       */     private boolean rolloverDetectionEnabled_;
/*       */     
/*       */     public static final int DRIVERREGISTRATION_MODE_FIELD_NUMBER = 29000;
/*       */     
/*       */     private int driverRegistrationMode_;
/*       */     
/*       */     public static final int DRIVERREGISTRATION_AUTHENTICATION_FIELD_NUMBER = 29001;
/*       */     
/*       */     private int driverRegistrationAuthentication_;
/*       */     
/*       */     public static final int DRIVERREGISTRATION_DEREGISTRATIONTIMEOUT_FIELD_NUMBER = 29002;
/*       */     
/*       */     private int driverRegistrationDeregistrationTimeout_;
/*       */     
/*       */     public static final int DRIVERREGISTRATION_BUZZERDIGITALOUTPUT_FIELD_NUMBER = 29010;
/*       */     
/*       */     private int driverRegistrationBuzzerDigitalOutput_;
/*       */     
/*       */     public static final int DRIVERREGISTRATION_IMMOBILIZERDIGITALOUTPUT_FIELD_NUMBER = 29011;
/*       */     
/*       */     private int driverRegistrationImmobilizerDigitalOutput_;
/*       */     
/*       */     public static final int DRIVERREGISTRATION_IMMOBILIZERACTIVELOW_FIELD_NUMBER = 29012;
/*       */     
/*       */     private boolean driverRegistrationImmobilizerActiveLow_;
/*       */     
/*       */     public static final int DRIVERREGISTRATION_AUTHORIZEDID1_FIELD_NUMBER = 29100;
/*       */     
/*       */     private long driverRegistrationAuthorizedID1_;
/*       */     
/*       */     public static final int DRIVERREGISTRATION_AUTHORIZEDID2_FIELD_NUMBER = 29101;
/*       */     
/*       */     private long driverRegistrationAuthorizedID2_;
/*       */     
/*       */     public static final int DRIVERREGISTRATION_AUTHORIZEDID3_FIELD_NUMBER = 29102;
/*       */     
/*       */     private long driverRegistrationAuthorizedID3_;
/*       */     
/*       */     public static final int DRIVERREGISTRATION_AUTHORIZEDID4_FIELD_NUMBER = 29103;
/*       */     
/*       */     private long driverRegistrationAuthorizedID4_;
/*       */     
/*       */     public static final int DRIVERREGISTRATION_AUTHORIZEDID5_FIELD_NUMBER = 29104;
/*       */     
/*       */     private long driverRegistrationAuthorizedID5_;
/*       */     
/*       */     public static final int DRIVERREGISTRATION_AUTHORIZEDID6_FIELD_NUMBER = 29105;
/*       */     
/*       */     private long driverRegistrationAuthorizedID6_;
/*       */     
/*       */     public static final int DRIVERREGISTRATION_AUTHORIZEDID7_FIELD_NUMBER = 29106;
/*       */     
/*       */     private long driverRegistrationAuthorizedID7_;
/*       */     
/*       */     public static final int DRIVERREGISTRATION_AUTHORIZEDID8_FIELD_NUMBER = 29107;
/*       */     
/*       */     private long driverRegistrationAuthorizedID8_;
/*       */     
/*       */     public static final int DRIVERREGISTRATION_AUTHORIZEDID9_FIELD_NUMBER = 29108;
/*       */     
/*       */     private long driverRegistrationAuthorizedID9_;
/*       */     
/*       */     public static final int DRIVERREGISTRATION_AUTHORIZEDID10_FIELD_NUMBER = 29109;
/*       */     
/*       */     private long driverRegistrationAuthorizedID10_;
/*       */     
/*       */     public static final int ECODRIVEACTIVE_FIELD_NUMBER = 30000;
/*       */     
/*       */     private boolean eCODriveActive_;
/*       */     
/*       */     public static final int ECO_OVERSPEEDINGLIMIT_FIELD_NUMBER = 30001;
/*       */     
/*       */     private int eCOOverSpeedingLimit_;
/*       */     
/*       */     public static final int ECO_RPM_GREENBANDLOWLIMIT_FIELD_NUMBER = 30002;
/*       */     
/*       */     private int eCORPMGreenBandLowLimit_;
/*       */     
/*       */     public static final int ECO_RPM_GREENBANDHIGHLIMIT_FIELD_NUMBER = 30003;
/*       */     
/*       */     private int eCORPMGreenBandHighLimit_;
/*       */     
/*       */     public static final int ECO_HARSHBREAKINGLIMIT_FIELD_NUMBER = 30004;
/*       */     
/*       */     private int eCOHarshBreakingLimit_;
/*       */     
/*       */     public static final int ECO_EXTREMEBREAKINGLIMIT_FIELD_NUMBER = 30005;
/*       */     
/*       */     private int eCOExtremeBreakingLimit_;
/*       */     
/*       */     public static final int ECO_HARSHACCELERATIONLIMIT_FIELD_NUMBER = 30006;
/*       */     
/*       */     private int eCOHarshAccelerationLimit_;
/*       */     
/*       */     public static final int ECO_CORNERINGLIMIT_FIELD_NUMBER = 30007;
/*       */     
/*       */     private int eCOCorneringLimit_;
/*       */     
/*       */     public static final int ECO_IDLINGDELAY_FIELD_NUMBER = 30008;
/*       */     
/*       */     private int eCOIdlingDelay_;
/*       */     
/*       */     public static final int ECO_IDLINGSPEED_FIELD_NUMBER = 30009;
/*       */     
/*       */     private int eCOIdlingSpeed_;
/*       */     
/*       */     public static final int ECO_CRUISECONTROLSPEED_FIELD_NUMBER = 30010;
/*       */     
/*       */     private int eCOCruiseControlSpeed_;
/*       */     
/*       */     public static final int ECO_CALCULATEONLYWHENENGINEON_FIELD_NUMBER = 30020;
/*       */     
/*       */     private boolean eCOCalculateOnlyWhenEngineOn_;
/*       */     
/*       */     public static final int ECO_CUSTOMENGINESOURCE_FIELD_NUMBER = 30021;
/*       */     
/*       */     private boolean eCOCustomEngineSource_;
/*       */     
/*       */     public static final int ECO_ENGINEON_DIN1_FIELD_NUMBER = 30022;
/*       */     
/*       */     private boolean eCOEngineOnDIN1_;
/*       */     
/*       */     public static final int ECO_ENGINEON_DIN2_FIELD_NUMBER = 30023;
/*       */     
/*       */     private boolean eCOEngineOnDIN2_;
/*       */     
/*       */     public static final int ECO_ENGINEON_MOVEMENTSENSOR_FIELD_NUMBER = 30024;
/*       */     
/*       */     private boolean eCOEngineOnMovementSensor_;
/*       */     
/*       */     public static final int ECO_ENGINEON_POWERSUPPLYAVAILABLE_FIELD_NUMBER = 30025;
/*       */     
/*       */     private boolean eCOEngineOnPowerSupplyAvailable_;
/*       */     
/*       */     public static final int ECO_ENGINEON_CANRPM_LOW_FIELD_NUMBER = 30026;
/*       */     
/*       */     private int eCOEngineOnCanRPMLow_;
/*       */     
/*       */     public static final int ECO_ENGINEON_CANRPM_HIGH_FIELD_NUMBER = 30027;
/*       */     
/*       */     private int eCOEngineOnCanRPMHigh_;
/*       */     
/*       */     public static final int ECO_ENGINEON_OPERATOR_FIELD_NUMBER = 30028;
/*       */     
/*       */     private int eCOEngineOnOperator_;
/*       */     
/*       */     public static final int ECO_ENGINEON_EXTERNALVOLTAGE_FIELD_NUMBER = 30029;
/*       */     
/*       */     private int eCOEngineOnExternalVoltage_;
/*       */     
/*       */     public static final int ECU_INTERFACE_FIELD_NUMBER = 30100;
/*       */     
/*       */     private int eCUInterface_;
/*       */     
/*       */     public static final int FUELCONSUMPTION_ENABLED_FIELD_NUMBER = 30150;
/*       */     
/*       */     private int fuelConsumptionEnabled_;
/*       */     
/*       */     public static final int FUELCONSUMPTION_ENGINEDISPLACEMENT_FIELD_NUMBER = 30151;
/*       */     
/*       */     private int fuelConsumptionEngineDisplacement_;
/*       */     
/*       */     public static final int FUELCONSUMPTION_CYLINDERS_FIELD_NUMBER = 30152;
/*       */     
/*       */     private int fuelConsumptionCylinders_;
/*       */     
/*       */     public static final int FUELCONSUMPTION_INJECTORPERFORMANCE_FIELD_NUMBER = 30153;
/*       */     
/*       */     private int fuelConsumptionInjectorPerformance_;
/*       */     
/*       */     public static final int FUELCONSUMPTION_VOLUMETRICEFFICIENTLY_FIELD_NUMBER = 30154;
/*       */     
/*       */     private int fuelConsumptionVolumetricEfficiently_;
/*       */     
/*       */     public static final int FAULTCODESREADTIME_FIELD_NUMBER = 30200;
/*       */     
/*       */     private int faultCodesReadTime_;
/*       */     
/*       */     public static final int SIPAAD_LINKTIMEOUT_FIELD_NUMBER = 30500;
/*       */     
/*       */     private int sIPAADLinkTimeout_;
/*       */     
/*       */     public static final int SIPAAD_RESPONSETIMEOUT_FIELD_NUMBER = 30501;
/*       */     
/*       */     private int sIPAADResponseTimeout_;
/*       */     
/*       */     public static final int SIPAAD_SERVERADDRESS_FIELD_NUMBER = 30502;
/*       */     
/*       */     private volatile Object sIPAADServerAddress_;
/*       */     
/*       */     public static final int SIPAAD_SERVERPORT_FIELD_NUMBER = 30503;
/*       */     
/*       */     private int sIPAADServerPort_;
/*       */     
/*       */     public static final int SIPAAD_SERVERPROTOCOL_FIELD_NUMBER = 30504;
/*       */     
/*       */     private int sIPAADServerProtocol_;
/*       */     
/*       */     public static final int SIPAAD_SSL_CLIENTAUTHENTICATION_FIELD_NUMBER = 30505;
/*       */     
/*       */     private boolean sIPAADSSLClientAuthentication_;
/*       */     
/*       */     public static final int IO_TIME_FIELD_NUMBER = 50003;
/*       */     
/*       */     private DolphinConfig.IO iOTime_;
/*       */     
/*       */     public static final int IO_ANGLE_FIELD_NUMBER = 50004;
/*       */     
/*       */     private DolphinConfig.IO iOAngle_;
/*       */     
/*       */     public static final int IO_SPEED_FIELD_NUMBER = 50005;
/*       */     
/*       */     private DolphinConfig.IO iOSpeed_;
/*       */     
/*       */     public static final int IO_SLEEPMODE_FIELD_NUMBER = 50008;
/*       */     
/*       */     private DolphinConfig.IO iOSleepMode_;
/*       */     
/*       */     public static final int IO_IGNITION_FIELD_NUMBER = 50010;
/*       */     
/*       */     private DolphinConfig.IO iOIgnition_;
/*       */     
/*       */     public static final int IO_MOVEMENT_FIELD_NUMBER = 50011;
/*       */     
/*       */     private DolphinConfig.IO iOMovement_;
/*       */     
/*       */     public static final int IO_DATAMODE_FIELD_NUMBER = 50012;
/*       */     
/*       */     private DolphinConfig.IO iODataMode_;
/*       */     
/*       */     public static final int IO_GNSSSTATUS_FIELD_NUMBER = 50020;
/*       */     
/*       */     private DolphinConfig.IO iOGnssStatus_;
/*       */     
/*       */     public static final int IO_GNSSHDOP_FIELD_NUMBER = 50021;
/*       */     
/*       */     private DolphinConfig.IO iOGnssHDOP_;
/*       */     
/*       */     public static final int IO_GNSSPDOP_FIELD_NUMBER = 50022;
/*       */     
/*       */     private DolphinConfig.IO iOGnssPDOP_;
/*       */     
/*       */     public static final int IO_GNSSJAMMINGSTATUS_FIELD_NUMBER = 50023;
/*       */     
/*       */     private DolphinConfig.IO iOGnssJammingStatus_;
/*       */     
/*       */     public static final int IO_GSMSIGNAL_FIELD_NUMBER = 50030;
/*       */     
/*       */     private DolphinConfig.IO iOGsmSignal_;
/*       */     
/*       */     public static final int IO_GSMCELLID_FIELD_NUMBER = 50031;
/*       */     
/*       */     private DolphinConfig.IO iOGsmCellId_;
/*       */     
/*       */     public static final int IO_GSMAREACODE_FIELD_NUMBER = 50032;
/*       */     
/*       */     private DolphinConfig.IO iOGsmAreaCode_;
/*       */     
/*       */     public static final int IO_GSMOPERATOR_FIELD_NUMBER = 50033;
/*       */     
/*       */     private DolphinConfig.IO iOGsmOperator_;
/*       */     
/*       */     public static final int IO_GSMTEMPERATURE_FIELD_NUMBER = 50034;
/*       */     
/*       */     private DolphinConfig.IO iOGsmTemperature_;
/*       */     
/*       */     public static final int IO_GSMJAMMINGSTATUS_FIELD_NUMBER = 50035;
/*       */     
/*       */     private DolphinConfig.IO iOGsmJammingStatus_;
/*       */     
/*       */     public static final int IO_EXTERNALVOLTAGE_FIELD_NUMBER = 50040;
/*       */     
/*       */     private DolphinConfig.IO iOExternalVoltage_;
/*       */     
/*       */     public static final int IO_BATTERYVOLTAGE_FIELD_NUMBER = 50041;
/*       */     
/*       */     private DolphinConfig.IO iOBatteryVoltage_;
/*       */     
/*       */     public static final int IO_BATTERYCURRENT_FIELD_NUMBER = 50042;
/*       */     
/*       */     private DolphinConfig.IO iOBatteryCurrent_;
/*       */     
/*       */     public static final int IO_TOTALODOMETER_FIELD_NUMBER = 50050;
/*       */     
/*       */     private DolphinConfig.IO iOTotalOdometer_;
/*       */     
/*       */     public static final int IO_ODOMETER_FIELD_NUMBER = 50051;
/*       */     
/*       */     private DolphinConfig.IO iOOdometer_;
/*       */     
/*       */     public static final int IO_ENGINEONTIME_FIELD_NUMBER = 50052;
/*       */     
/*       */     private DolphinConfig.IO iOEngineOnTime_;
/*       */     
/*       */     public static final int IO_ENGINEONTIMEDELTA_FIELD_NUMBER = 50053;
/*       */     
/*       */     private DolphinConfig.IO iOEngineOnTimeDelta_;
/*       */     
/*       */     public static final int IO_IDLINGTIME_FIELD_NUMBER = 50054;
/*       */     
/*       */     private DolphinConfig.IO iOIdlingTime_;
/*       */     
/*       */     public static final int IO_IDLINGTIMEDELTA_FIELD_NUMBER = 50055;
/*       */     
/*       */     private DolphinConfig.IO iOIdlingTimeDelta_;
/*       */     
/*       */     public static final int IO_SPEEDSENSOR_SPEED_FIELD_NUMBER = 50060;
/*       */     
/*       */     private DolphinConfig.IO iOSpeedSensorSpeed_;
/*       */     
/*       */     public static final int IO_SPEEDSENSOR_DISTANCE_FIELD_NUMBER = 50061;
/*       */     
/*       */     private DolphinConfig.IO iOSpeedSensorDistance_;
/*       */     
/*       */     public static final int IO_SPEEDSENSOR_TOTALDISTANCE_FIELD_NUMBER = 50062;
/*       */     
/*       */     private DolphinConfig.IO iOSpeedSensorTotalDistance_;
/*       */     
/*       */     public static final int IO_SPEEDSENSOR_MAXSPEED_FIELD_NUMBER = 50063;
/*       */     
/*       */     private DolphinConfig.IO iOSpeedSensorMaxSpeed_;
/*       */     
/*       */     public static final int IO_SPEEDSENSOR_GPSSPEEDDIFF_FIELD_NUMBER = 50064;
/*       */     
/*       */     private DolphinConfig.IO iOSpeedSensorGPSSpeedDiff_;
/*       */     
/*       */     public static final int IO_DIGITALINPUT1_FIELD_NUMBER = 50070;
/*       */     
/*       */     private DolphinConfig.IO iODigitalInput1_;
/*       */     
/*       */     public static final int IO_DIGITALINPUT2_FIELD_NUMBER = 50071;
/*       */     
/*       */     private DolphinConfig.IO iODigitalInput2_;
/*       */     
/*       */     public static final int IO_POWERSUPPLY_FIELD_NUMBER = 50072;
/*       */     
/*       */     private DolphinConfig.IO iOPowerSupply_;
/*       */     
/*       */     public static final int IO_DIGITALINPUT3_FIELD_NUMBER = 50073;
/*       */     
/*       */     private DolphinConfig.IO iODigitalInput3_;
/*       */     
/*       */     public static final int IO_VEHICLECONNECTION_FIELD_NUMBER = 50079;
/*       */     
/*       */     private DolphinConfig.IO iOVehicleConnection_;
/*       */     
/*       */     public static final int IO_DIGITALINPUT1TIME_FIELD_NUMBER = 50080;
/*       */     
/*       */     private DolphinConfig.IO iODigitalInput1Time_;
/*       */     
/*       */     public static final int IO_DIGITALINPUT1TIMEDELTA_FIELD_NUMBER = 50081;
/*       */     
/*       */     private DolphinConfig.IO iODigitalInput1TimeDelta_;
/*       */     
/*       */     public static final int IO_DIGITALINPUT2TIME_FIELD_NUMBER = 50082;
/*       */     
/*       */     private DolphinConfig.IO iODigitalInput2Time_;
/*       */     
/*       */     public static final int IO_DIGITALINPUT2TIMEDELTA_FIELD_NUMBER = 50083;
/*       */     
/*       */     private DolphinConfig.IO iODigitalInput2TimeDelta_;
/*       */     
/*       */     public static final int IO_POWERSUPPLYTIME_FIELD_NUMBER = 50084;
/*       */     
/*       */     private DolphinConfig.IO iOPowerSupplyTime_;
/*       */     
/*       */     public static final int IO_POWERSUPPLYTIMEDELTA_FIELD_NUMBER = 50085;
/*       */     
/*       */     private DolphinConfig.IO iOPowerSupplyTimeDelta_;
/*       */     
/*       */     public static final int IO_DIGITALINPUT3TIME_FIELD_NUMBER = 50086;
/*       */     
/*       */     private DolphinConfig.IO iODigitalInput3Time_;
/*       */     
/*       */     public static final int IO_DIGITALINPUT3TIMEDELTA_FIELD_NUMBER = 50087;
/*       */     
/*       */     private DolphinConfig.IO iODigitalInput3TimeDelta_;
/*       */     
/*       */     public static final int IO_DIGITALOUTPUT1_FIELD_NUMBER = 50090;
/*       */     
/*       */     private DolphinConfig.IO iODigitalOutput1_;
/*       */     
/*       */     public static final int IO_DIGITALOUTPUT2_FIELD_NUMBER = 50091;
/*       */     
/*       */     private DolphinConfig.IO iODigitalOutput2_;
/*       */     
/*       */     public static final int IO_ANALOGINPUT1_FIELD_NUMBER = 50100;
/*       */     
/*       */     private DolphinConfig.IO iOAnalogInput1_;
/*       */     
/*       */     public static final int IO_ANALOGINPUT2_FIELD_NUMBER = 50101;
/*       */     
/*       */     private DolphinConfig.IO iOAnalogInput2_;
/*       */     
/*       */     public static final int IO_ANALOGINPUT3_FIELD_NUMBER = 50102;
/*       */     
/*       */     private DolphinConfig.IO iOAnalogInput3_;
/*       */     
/*       */     public static final int IO_AXISX_FIELD_NUMBER = 50110;
/*       */     
/*       */     private DolphinConfig.IO iOAxisX_;
/*       */     
/*       */     public static final int IO_AXISY_FIELD_NUMBER = 50111;
/*       */     
/*       */     private DolphinConfig.IO iOAxisY_;
/*       */     
/*       */     public static final int IO_AXISZ_FIELD_NUMBER = 50112;
/*       */     
/*       */     private DolphinConfig.IO iOAxisZ_;
/*       */     
/*       */     public static final int IO_ECO_MAXSPEED_FIELD_NUMBER = 50150;
/*       */     
/*       */     private DolphinConfig.IO iOECOMaxSpeed_;
/*       */     
/*       */     public static final int IO_ECO_NORMALSPEEDDISTANCE_FIELD_NUMBER = 50151;
/*       */     
/*       */     private DolphinConfig.IO iOECONormalSpeedDistance_;
/*       */     
/*       */     public static final int IO_ECO_NORMALSPEEDTOTALDISTANCE_FIELD_NUMBER = 50152;
/*       */     
/*       */     private DolphinConfig.IO iOECONormalSpeedTotalDistance_;
/*       */     
/*       */     public static final int IO_ECO_NORMALSPEEDTIMER_FIELD_NUMBER = 50153;
/*       */     
/*       */     private DolphinConfig.IO iOECONormalSpeedTimer_;
/*       */     
/*       */     public static final int IO_ECO_NORMALSPEEDTOTALTIMER_FIELD_NUMBER = 50154;
/*       */     
/*       */     private DolphinConfig.IO iOECONormalSpeedTotalTimer_;
/*       */     
/*       */     public static final int IO_ECO_OVERSPEEDINGDISTANCE_FIELD_NUMBER = 50155;
/*       */     
/*       */     private DolphinConfig.IO iOECOOverSpeedingDistance_;
/*       */     
/*       */     public static final int IO_ECO_OVERSPEEDINGTOTALDISTANCE_FIELD_NUMBER = 50156;
/*       */     
/*       */     private DolphinConfig.IO iOECOOverSpeedingTotalDistance_;
/*       */     
/*       */     public static final int IO_ECO_OVERSPEEDINGTIMER_FIELD_NUMBER = 50157;
/*       */     
/*       */     private DolphinConfig.IO iOECOOverSpeedingTimer_;
/*       */     
/*       */     public static final int IO_ECO_OVERSPEEDINGTOTALTIMER_FIELD_NUMBER = 50158;
/*       */     
/*       */     private DolphinConfig.IO iOECOOverSpeedingTotalTimer_;
/*       */     
/*       */     public static final int IO_ECO_MAXRPM_FIELD_NUMBER = 50159;
/*       */     
/*       */     private DolphinConfig.IO iOECOMaxRPM_;
/*       */     
/*       */     public static final int IO_ECO_RPMGREENBANDDISTANCE_FIELD_NUMBER = 50160;
/*       */     
/*       */     private DolphinConfig.IO iOECORPMGreenBandDistance_;
/*       */     
/*       */     public static final int IO_ECO_RPMGREENBANDTOTALDISTANCE_FIELD_NUMBER = 50161;
/*       */     
/*       */     private DolphinConfig.IO iOECORPMGreenBandTotalDistance_;
/*       */     
/*       */     public static final int IO_ECO_RPMGREENBANDTIMER_FIELD_NUMBER = 50162;
/*       */     
/*       */     private DolphinConfig.IO iOECORPMGreenBandTimer_;
/*       */     
/*       */     public static final int IO_ECO_RPMGREENBANDTOTALTIMER_FIELD_NUMBER = 50163;
/*       */     
/*       */     private DolphinConfig.IO iOECORPMGreenBandTotalTimer_;
/*       */     
/*       */     public static final int IO_ECO_OVERRPMDISTANCE_FIELD_NUMBER = 50164;
/*       */     
/*       */     private DolphinConfig.IO iOECOOverRPMDistance_;
/*       */     
/*       */     public static final int IO_ECO_OVERRPMTOTALDISTANCE_FIELD_NUMBER = 50165;
/*       */     
/*       */     private DolphinConfig.IO iOECOOverRPMTotalDistance_;
/*       */     
/*       */     public static final int IO_ECO_OVERRPMTIMER_FIELD_NUMBER = 50166;
/*       */     
/*       */     private DolphinConfig.IO iOECOOverRPMTimer_;
/*       */     
/*       */     public static final int IO_ECO_OVERRPMTOTALTIMER_FIELD_NUMBER = 50167;
/*       */     
/*       */     private DolphinConfig.IO iOECOOverRPMTotalTimer_;
/*       */     
/*       */     public static final int IO_ECO_IDLINGEVENT_FIELD_NUMBER = 50170;
/*       */     
/*       */     private DolphinConfig.IO iOECOIdlingEvent_;
/*       */     
/*       */     public static final int IO_ECO_CRUISECONTROLTIMER_FIELD_NUMBER = 50171;
/*       */     
/*       */     private DolphinConfig.IO iOECOCruiseControlTimer_;
/*       */     
/*       */     public static final int IO_ECO_CRUISECONTROLTOTALTIMER_FIELD_NUMBER = 50172;
/*       */     
/*       */     private DolphinConfig.IO iOECOCruiseControlTotalTimer_;
/*       */     
/*       */     public static final int IO_ECO_CRUISECONTROLDISTANCE_FIELD_NUMBER = 50173;
/*       */     
/*       */     private DolphinConfig.IO iOECOCruiseControlDistance_;
/*       */     
/*       */     public static final int IO_ECO_CRUISECONTROLTOTALDISTANCE_FIELD_NUMBER = 50174;
/*       */     
/*       */     private DolphinConfig.IO iOECOCruiseControlTotalDistance_;
/*       */     
/*       */     public static final int IO_ECO_UNDERRPMDISTANCE_FIELD_NUMBER = 50175;
/*       */     
/*       */     private DolphinConfig.IO iOECOUnderRPMDistance_;
/*       */     
/*       */     public static final int IO_ECO_UNDERRPMTOTALDISTANCE_FIELD_NUMBER = 50176;
/*       */     
/*       */     private DolphinConfig.IO iOECOUnderRPMTotalDistance_;
/*       */     
/*       */     public static final int IO_ECO_UNDERRPMTIMER_FIELD_NUMBER = 50177;
/*       */     
/*       */     private DolphinConfig.IO iOECOUnderRPMTimer_;
/*       */     
/*       */     public static final int IO_ECO_UNDERRPMTOTALTIMER_FIELD_NUMBER = 50178;
/*       */     
/*       */     private DolphinConfig.IO iOECOUnderRPMTotalTimer_;
/*       */     
/*       */     public static final int IO_ECO_BREAKCOUNTER_FIELD_NUMBER = 50180;
/*       */     
/*       */     private DolphinConfig.IO iOECOBreakCounter_;
/*       */     
/*       */     public static final int IO_ECO_HARSHBREAKCOUNTER_FIELD_NUMBER = 50181;
/*       */     
/*       */     private DolphinConfig.IO iOECOHarshBreakCounter_;
/*       */     
/*       */     public static final int IO_ECO_EXTREMEBREAKCOUNTER_FIELD_NUMBER = 50182;
/*       */     
/*       */     private DolphinConfig.IO iOECOExtremeBreakCounter_;
/*       */     
/*       */     public static final int IO_ECO_HARSHACCELERATIONCOUNTER_FIELD_NUMBER = 50183;
/*       */     
/*       */     private DolphinConfig.IO iOECOHarshAccelerationCounter_;
/*       */     
/*       */     public static final int IO_ECO_CORNERINGCOUNTER_FIELD_NUMBER = 50184;
/*       */     
/*       */     private DolphinConfig.IO iOECOCorneringCounter_;
/*       */     
/*       */     public static final int IO_ECO_TOTALBREAK_FIELD_NUMBER = 50185;
/*       */     
/*       */     private DolphinConfig.IO iOECOTotalBreak_;
/*       */     
/*       */     public static final int IO_ECO_TOTALHARSHBREAK_FIELD_NUMBER = 50186;
/*       */     
/*       */     private DolphinConfig.IO iOECOTotalHarshBreak_;
/*       */     
/*       */     public static final int IO_ECO_TOTALEXTREMEBREAK_FIELD_NUMBER = 50187;
/*       */     
/*       */     private DolphinConfig.IO iOECOTotalExtremeBreak_;
/*       */     
/*       */     public static final int IO_ECO_TOTALHARSHACCELERATION_FIELD_NUMBER = 50188;
/*       */     
/*       */     private DolphinConfig.IO iOECOTotalHarshAcceleration_;
/*       */     
/*       */     public static final int IO_ECO_TOTALCORNERING_FIELD_NUMBER = 50189;
/*       */     
/*       */     private DolphinConfig.IO iOECOTotalCornering_;
/*       */     
/*       */     public static final int IO_TRIP_FIELD_NUMBER = 50300;
/*       */     
/*       */     private DolphinConfig.IO iOTrip_;
/*       */     
/*       */     public static final int IO_TRIP_TIME_FIELD_NUMBER = 50301;
/*       */     
/*       */     private DolphinConfig.IO iOTripTime_;
/*       */     
/*       */     public static final int IO_TRIP_DISTANCE_FIELD_NUMBER = 50302;
/*       */     
/*       */     private DolphinConfig.IO iOTripDistance_;
/*       */     
/*       */     public static final int IO_DRIVERID_FIELD_NUMBER = 50350;
/*       */     
/*       */     private DolphinConfig.IO iODriverID_;
/*       */     
/*       */     public static final int IO_TEMPERATURESENSOR1_FIELD_NUMBER = 50400;
/*       */     
/*       */     private DolphinConfig.IO iOTemperatureSensor1_;
/*       */     
/*       */     public static final int IO_TEMPERATURESENSOR1_ID_FIELD_NUMBER = 50401;
/*       */     
/*       */     private DolphinConfig.IO iOTemperatureSensor1ID_;
/*       */     
/*       */     public static final int IO_TEMPERATURESENSOR2_FIELD_NUMBER = 50402;
/*       */     
/*       */     private DolphinConfig.IO iOTemperatureSensor2_;
/*       */     
/*       */     public static final int IO_TEMPERATURESENSOR2_ID_FIELD_NUMBER = 50403;
/*       */     
/*       */     private DolphinConfig.IO iOTemperatureSensor2ID_;
/*       */     
/*       */     public static final int IO_TEMPERATURESENSOR3_FIELD_NUMBER = 50404;
/*       */     
/*       */     private DolphinConfig.IO iOTemperatureSensor3_;
/*       */     
/*       */     public static final int IO_TEMPERATURESENSOR3_ID_FIELD_NUMBER = 50405;
/*       */     
/*       */     private DolphinConfig.IO iOTemperatureSensor3ID_;
/*       */     
/*       */     public static final int IO_HUMIDITYSENSOR1_FIELD_NUMBER = 50410;
/*       */     
/*       */     private DolphinConfig.IO iOHumiditySensor1_;
/*       */     
/*       */     public static final int IO_TILTSTATUS_FIELD_NUMBER = 50490;
/*       */     
/*       */     private DolphinConfig.IO iOTiltStatus_;
/*       */     
/*       */     public static final int IO_OBD_ENGINERPM_FIELD_NUMBER = 50500;
/*       */     
/*       */     private DolphinConfig.IO iOOBDEngineRPM_;
/*       */     
/*       */     public static final int IO_OBD_BATTERYVOLTAGE_FIELD_NUMBER = 50501;
/*       */     
/*       */     private DolphinConfig.IO iOOBDBatteryVoltage_;
/*       */     
/*       */     public static final int IO_OBD_ENGINECOOLANTTEMPERATURE_FIELD_NUMBER = 50502;
/*       */     
/*       */     private DolphinConfig.IO iOOBDEngineCoolantTemperature_;
/*       */     
/*       */     public static final int IO_OBD_VEHICLESPEED_FIELD_NUMBER = 50503;
/*       */     
/*       */     private DolphinConfig.IO iOOBDVehicleSpeed_;
/*       */     
/*       */     public static final int IO_OBD_TOTALDISTANCE_FIELD_NUMBER = 50504;
/*       */     
/*       */     private DolphinConfig.IO iOOBDTotalDistance_;
/*       */     
/*       */     public static final int IO_OBD_FUELRATE_FIELD_NUMBER = 50505;
/*       */     
/*       */     private DolphinConfig.IO iOOBDFuelRate_;
/*       */     
/*       */     public static final int IO_OBD_TOTALFUELUSED_FIELD_NUMBER = 50506;
/*       */     
/*       */     private DolphinConfig.IO iOOBDTotalFuelUsed_;
/*       */     
/*       */     public static final int IO_OBD_INTAKEAIRTEMPERATURE_FIELD_NUMBER = 50507;
/*       */     
/*       */     private DolphinConfig.IO iOOBDIntakeAirTemperature_;
/*       */     
/*       */     public static final int IO_OBD_INTAKEMANIFOLDABSOLUTEPRESSURE_FIELD_NUMBER = 50508;
/*       */     
/*       */     private DolphinConfig.IO iOOBDIntakeManifoldAbsolutePressure_;
/*       */     
/*       */     public static final int IO_OBD_MALFUNCTIONINDICATORLAMP_FIELD_NUMBER = 50550;
/*       */     
/*       */     private DolphinConfig.IO iOOBDMalfunctionIndicatorLamp_;
/*       */     
/*       */     public static final int IO_DIAGNOSTICTROUBLECODESCOUNT_FIELD_NUMBER = 50551;
/*       */     
/*       */     private DolphinConfig.IO iODiagnosticTroubleCodesCount_;
/*       */     
/*       */     public static final int IO_OBD_CALCULATEDENGINELOAD_FIELD_NUMBER = 50552;
/*       */     
/*       */     private DolphinConfig.IO iOOBDCalculatedEngineLoad_;
/*       */     
/*       */     public static final int IO_OBD_MASSAIRFLOWRATE_FIELD_NUMBER = 50553;
/*       */     
/*       */     private DolphinConfig.IO iOOBDMassAirFlowRate_;
/*       */     
/*       */     public static final int IO_OBD_THROTTLEPOSITION_FIELD_NUMBER = 50554;
/*       */     
/*       */     private DolphinConfig.IO iOOBDThrottlePosition_;
/*       */     
/*       */     public static final int IO_OBD_RUNTIMESINCEENGINESTART_FIELD_NUMBER = 50555;
/*       */     
/*       */     private DolphinConfig.IO iOOBDRunTimeSinceEngineStart_;
/*       */     
/*       */     public static final int IO_OBD_FUELTANKLEVELINPUT_FIELD_NUMBER = 50556;
/*       */     
/*       */     private DolphinConfig.IO iOOBDFuelTankLevelInput_;
/*       */     
/*       */     public static final int IO_OBD_DISTANCETRAVELEDSINCECODESCLEARED_FIELD_NUMBER = 50557;
/*       */     
/*       */     private DolphinConfig.IO iOOBDDistanceTraveledSinceCodesCleared_;
/*       */     
/*       */     public static final int IO_OBD_ABSOLUTETHROTTLEPOSITIOND_FIELD_NUMBER = 50558;
/*       */     
/*       */     private DolphinConfig.IO iOOBDAbsoluteThrottlePositionD_;
/*       */     
/*       */     public static final int IO_OBD_TIMERUNWITHMILON_FIELD_NUMBER = 50559;
/*       */     
/*       */     private DolphinConfig.IO iOOBDTimeRunWithMILOn_;
/*       */     
/*       */     public static final int IO_OBD_ENGINEOILTEMPERATURE_FIELD_NUMBER = 50560;
/*       */     
/*       */     private DolphinConfig.IO iOOBDEngineOilTemperature_;
/*       */     
/*       */     public static final int IO_OBD_FUELSYSTEM1STATUS_FIELD_NUMBER = 50561;
/*       */     
/*       */     private DolphinConfig.IO iOOBDFuelSystem1Status_;
/*       */     
/*       */     public static final int IO_OBD_FUELSYSTEM2STATUS_FIELD_NUMBER = 50562;
/*       */     
/*       */     private DolphinConfig.IO iOOBDFuelSystem2Status_;
/*       */     
/*       */     public static final int IO_OBD_OXYGENSENSOR1VOLTAGE_FIELD_NUMBER = 50563;
/*       */     
/*       */     private DolphinConfig.IO iOOBDOxygenSensor1Voltage_;
/*       */     
/*       */     public static final int IO_OBD_OXYGENSENSOR1SHORTTERMFUELTRIM_FIELD_NUMBER = 50564;
/*       */     
/*       */     private DolphinConfig.IO iOOBDOxygenSensor1ShortTermFuelTrim_;
/*       */     
/*       */     public static final int IO_OBD_OXYGENSENSOR2VOLTAGE_FIELD_NUMBER = 50565;
/*       */     
/*       */     private DolphinConfig.IO iOOBDOxygenSensor2Voltage_;
/*       */     
/*       */     public static final int IO_OBD_OXYGENSENSOR2SHORTTERMFUELTRIM_FIELD_NUMBER = 50566;
/*       */     
/*       */     private DolphinConfig.IO iOOBDOxygenSensor2ShortTermFuelTrim_;
/*       */     
/*       */     public static final int IO_OBD_OXYGENSENSOR3VOLTAGE_FIELD_NUMBER = 50567;
/*       */     
/*       */     private DolphinConfig.IO iOOBDOxygenSensor3Voltage_;
/*       */     
/*       */     public static final int IO_OBD_OXYGENSENSOR3SHORTTERMFUELTRIM_FIELD_NUMBER = 50568;
/*       */     
/*       */     private DolphinConfig.IO iOOBDOxygenSensor3ShortTermFuelTrim_;
/*       */     
/*       */     public static final int IO_OBD_OXYGENSENSOR4VOLTAGE_FIELD_NUMBER = 50569;
/*       */     
/*       */     private DolphinConfig.IO iOOBDOxygenSensor4Voltage_;
/*       */     
/*       */     public static final int IO_OBD_OXYGENSENSOR4SHORTTERMFUELTRIM_FIELD_NUMBER = 50570;
/*       */     
/*       */     private DolphinConfig.IO iOOBDOxygenSensor4ShortTermFuelTrim_;
/*       */     
/*       */     public static final int IO_CANBUS_TACHOGRAPH1_WORKINGSTATE1_FIELD_NUMBER = 50700;
/*       */     
/*       */     private DolphinConfig.IO iOCANBusTachograph1WorkingState1_;
/*       */     
/*       */     public static final int IO_CANBUS_TACHOGRAPH1_WORKINGSTATE2_FIELD_NUMBER = 50701;
/*       */     
/*       */     private DolphinConfig.IO iOCANBusTachograph1WorkingState2_;
/*       */     
/*       */     public static final int IO_CANBUS_TACHOGRAPH1_VEHICLEMOTION_FIELD_NUMBER = 50702;
/*       */     
/*       */     private DolphinConfig.IO iOCANBusTachograph1VehicleMotion_;
/*       */     
/*       */     public static final int IO_CANBUS_TACHOGRAPH1_DRIV_1_TIME_REL_STATES_FIELD_NUMBER = 50703;
/*       */     
/*       */     private DolphinConfig.IO iOCANBusTachograph1Driv1TimeRelStates_;
/*       */     
/*       */     public static final int IO_CANBUS_TACHOGRAPH1_DRIVER1_CARD_FIELD_NUMBER = 50704;
/*       */     
/*       */     private DolphinConfig.IO iOCANBusTachograph1Driver1Card_;
/*       */     
/*       */     public static final int IO_CANBUS_TACHOGRAPH1_VEHICLEOVERSPEED_FIELD_NUMBER = 50705;
/*       */     
/*       */     private DolphinConfig.IO iOCANBusTachograph1VehicleOverspeed_;
/*       */     
/*       */     public static final int IO_CANBUS_TACHOGRAPH1_DRIV_2_TIME_REL_STATES_FIELD_NUMBER = 50706;
/*       */     
/*       */     private DolphinConfig.IO iOCANBusTachograph1Driv2TimeRelStates_;
/*       */     
/*       */     public static final int IO_CANBUS_TACHOGRAPH1_DRIVER2_CARD_FIELD_NUMBER = 50707;
/*       */     
/*       */     private DolphinConfig.IO iOCANBusTachograph1Driver2Card_;
/*       */     
/*       */     public static final int IO_CANBUS_TACHOGRAPH1_SYSTEMEVENT_FIELD_NUMBER = 50708;
/*       */     
/*       */     private DolphinConfig.IO iOCANBusTachograph1SystemEvent_;
/*       */     
/*       */     public static final int IO_CANBUS_TACHOGRAPH1_HANDLINGINFORMATION_FIELD_NUMBER = 50709;
/*       */     
/*       */     private DolphinConfig.IO iOCANBusTachograph1HandlingInformation_;
/*       */     
/*       */     public static final int IO_CANBUS_TACHOGRAPH1_TACHOGRAPHPERFORMANCE_FIELD_NUMBER = 50710;
/*       */     
/*       */     private DolphinConfig.IO iOCANBusTachograph1TachographPerformance_;
/*       */     
/*       */     public static final int IO_CANBUS_TACHOGRAPH1_DIRECTIONINDICATOR_FIELD_NUMBER = 50711;
/*       */     
/*       */     private DolphinConfig.IO iOCANBusTachograph1DirectionIndicator_;
/*       */     
/*       */     public static final int IO_CANBUS_TACHOGRAPH1_VEHICLESPEED_FIELD_NUMBER = 50712;
/*       */     
/*       */     private DolphinConfig.IO iOCANBusTachograph1VehicleSpeed_;
/*       */     
/*       */     public static final int IO_CANBUS_ENGINETEMPERATURE1_ENGINECOOLANTTEMPERATURE_FIELD_NUMBER = 50713;
/*       */     
/*       */     private DolphinConfig.IO iOCANBusEngineTemperature1EngineCoolantTemperature_;
/*       */     
/*       */     public static final int IO_CANBUS_ELECTRONICENGINECONTROLLER1_ACTUALENGINEPERCENT_FIELD_NUMBER = 50714;
/*       */     
/*       */     private DolphinConfig.IO iOCANBusElectronicEngineController1ActualEnginePercent_;
/*       */     
/*       */     public static final int IO_CANBUS_ELECTRONICENGINECONTROLLER1_ENGINESPEED_FIELD_NUMBER = 50715;
/*       */     
/*       */     private DolphinConfig.IO iOCANBusElectronicEngineController1EngineSpeed_;
/*       */     
/*       */     public static final int IO_CANBUS_ENGINEHOURS_ENGINETOTALHOURS_FIELD_NUMBER = 50716;
/*       */     
/*       */     private DolphinConfig.IO iOCANBusEngineHoursEngineTotalHours_;
/*       */     
/*       */     public static final int IO_CANBUS_VEHICLEDISTANCE_TOTALVEHICLEDISTANCE_FIELD_NUMBER = 50717;
/*       */     
/*       */     private DolphinConfig.IO iOCANBusVehicleDistanceTotalVehicleDistance_;
/*       */     
/*       */     public static final int IO_CANBUS_HIGHRESOLUTIONFUELCONSUMPTION_TOTALFUELUSED_FIELD_NUMBER = 50718;
/*       */     
/*       */     private DolphinConfig.IO iOCANBusHighResolutionFuelConsumptionTotalFuelUsed_;
/*       */     
/*       */     public static final int IO_CANBUS_DASHDISPLAY_FUELLEVEL1_FIELD_NUMBER = 50719;
/*       */     
/*       */     private DolphinConfig.IO iOCANBusDashDisplayFuelLevel1_;
/*       */     
/*       */     public static final int IO_CANBUS_AMBIENTCONDITIONS_AMBIENTAIRTEMPERATURE_FIELD_NUMBER = 50720;
/*       */     
/*       */     private DolphinConfig.IO iOCANBusAmbientConditionsAmbientAirTemperature_;
/*       */     
/*       */     public static final int IO_CANBUS_FUELECONOMY_FUELRATE_FIELD_NUMBER = 50721;
/*       */     
/*       */     private DolphinConfig.IO iOCANBusFuelEconomyFuelRate_;
/*       */     
/*       */     public static final int IO_CANBUS_FUELECONOMY_INSTANTANEOUSFUELECONOMY_FIELD_NUMBER = 50722;
/*       */     
/*       */     private DolphinConfig.IO iOCANBusFuelEconomyInstantaneousFuelEconomy_;
/*       */     
/*       */     public static final int IO_CANBUS_AIRSUPPLYPRESSURE_SERVICEBRAKEAIRPRESSURECIRCUIT_1_FIELD_NUMBER = 50723;
/*       */     
/*       */     private DolphinConfig.IO iOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit1_;
/*       */     
/*       */     public static final int IO_CANBUS_AIRSUPPLYPRESSURE_SERVICEBRAKEAIRPRESSURECIRCUIT_2_FIELD_NUMBER = 50724;
/*       */     
/*       */     private DolphinConfig.IO iOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit2_;
/*       */     
/*       */     public static final int IO_CANBUS_AFTERTREATMENTDIESELEXHAUSTFLUIDTANKINFORMATION_TANK1_LEVEL_FIELD_NUMBER = 50725;
/*       */     
/*       */     private DolphinConfig.IO iOCANBusAftertreatmentDieselExhaustFluidTankInformationTank1Level_;
/*       */     
/*       */     public static final int IO_CANBUS_TRUCKBUS_ELECTRONICENGINECONTROLLER2_ACCELERATORPEDALPOSITION_1_FIELD_NUMBER = 50742;
/*       */     
/*       */     private DolphinConfig.IO iOCANBusTruckBusElectronicEngineController2AcceleratorPedalPosition1_;
/*       */     
/*       */     public static final int IO_CANBUS_TRUCKBUS_ELECTRONICENGINECONTROLLER2_ENGINEPERCENTLOAD_FIELD_NUMBER = 50743;
/*       */     
/*       */     private DolphinConfig.IO iOCANBusTruckBusElectronicEngineController2EnginePercentLoad_;
/*       */     
/*       */     public static final int IO_CANBUS_TRUCK_VEHICLEWEIGHT_AXLEWEIGHT1_FIELD_NUMBER = 50744;
/*       */     
/*       */     private DolphinConfig.IO iOCANBusTruckVehicleWeightAxleWeight1_;
/*       */     
/*       */     public static final int IO_CANBUS_TRUCK_VEHICLEWEIGHT_AXLEWEIGHT2_FIELD_NUMBER = 50745;
/*       */     
/*       */     private DolphinConfig.IO iOCANBusTruckVehicleWeightAxleWeight2_;
/*       */     
/*       */     public static final int IO_CANBUS_TRUCK_VEHICLEWEIGHT_AXLEWEIGHT3_FIELD_NUMBER = 50746;
/*       */     
/*       */     private DolphinConfig.IO iOCANBusTruckVehicleWeightAxleWeight3_;
/*       */     
/*       */     public static final int IO_CANBUS_TRUCK_SERVICEINFORMATION_SERVICEDISTANCE_FIELD_NUMBER = 50747;
/*       */     
/*       */     private DolphinConfig.IO iOCANBusTruckServiceInformationServiceDistance_;
/*       */     
/*       */     public static final int IO_CANBUS_TRUCK_PTODRIVEENGAGEMENT_PTOENGAGESTAT_FIELD_NUMBER = 50748;
/*       */     
/*       */     private DolphinConfig.IO iOCANBusTruckPTODriveEngagementPTOEngageStat_;
/*       */     
/*       */     public static final int IO_CANBUS_TRUCK_COMBINATIONVEHICLEWEIGHT_GROSSCOMBINATIONVEHICLEWEIGHT_FIELD_NUMBER = 50749;
/*       */     
/*       */     private DolphinConfig.IO iOCANBusTruckCombinationVehicleWeightGrossCombinationVehicleWeight_;
/*       */     
/*       */     public static final int IO_CANBUS_TRUCKBUS_ELECTRONIC_RETARDER_CONTROLLER_1_RETARDERTORQUEMODE_FIELD_NUMBER = 50750;
/*       */     
/*       */     private DolphinConfig.IO iOCANBusTruckBusElectronicRetarderController1RetarderTorqueMode_;
/*       */     
/*       */     public static final int IO_CANBUS_TRUCKBUS_ELECTRONIC_RETARDER_CONTROLLER_1_RETARDERSELECTION_FIELD_NUMBER = 50751;
/*       */     
/*       */     private DolphinConfig.IO iOCANBusTruckBusElectronicRetarderController1RetarderSelection_;
/*       */     
/*       */     public static final int IO_CANBUS_BUS_DOORCONTROL1_DOORPOSITION_FIELD_NUMBER = 50752;
/*       */     
/*       */     private DolphinConfig.IO iOCANBusBusDoorControl1DoorPosition_;
/*       */     
/*       */     public static final int IO_CANBUS_BUS_DOORCONTROL1_RAMPWHEELCHAIRLIFT_FIELD_NUMBER = 50753;
/*       */     
/*       */     private DolphinConfig.IO iOCANBusBusDoorControl1RampWheelChairlift_;
/*       */     
/*       */     public static final int IO_CANBUS_BUS_DOORCONTROL1_DOORSSTATUS2_FIELD_NUMBER = 50754;
/*       */     
/*       */     private DolphinConfig.IO iOCANBusBusDoorControl1DoorsStatus2_;
/*       */     
/*       */     public static final int IO_CANBUS_BUS_DOORCONTROL2_FIELD_NUMBER = 50755;
/*       */     
/*       */     private DolphinConfig.IO iOCANBusBusDoorControl2_;
/*       */     
/*       */     public static final int IO_CANBUS_BRAKELININGREMAINING_AXLEFRONTLEFTWHEEL_FIELD_NUMBER = 50756;
/*       */     
/*       */     private DolphinConfig.IO iOCANBusBrakeLiningRemainingAxleFrontLeftWheel_;
/*       */     
/*       */     public static final int IO_CANBUS_BRAKELININGREMAINING_AXLEFRONTRIGHTWHEEL_FIELD_NUMBER = 50757;
/*       */     
/*       */     private DolphinConfig.IO iOCANBusBrakeLiningRemainingAxleFrontRightWheel_;
/*       */     
/*       */     public static final int IO_CANBUS_BRAKELININGREMAINING_AXLEREAR1LEFTWHEEL_FIELD_NUMBER = 50758;
/*       */     
/*       */     private DolphinConfig.IO iOCANBusBrakeLiningRemainingAxleRear1LeftWheel_;
/*       */     
/*       */     public static final int IO_CANBUS_BRAKELININGREMAINING_AXLEREAR1RIGHTWHEEL_FIELD_NUMBER = 50759;
/*       */     
/*       */     private DolphinConfig.IO iOCANBusBrakeLiningRemainingAxleRear1RightWheel_;
/*       */     
/*       */     public static final int IO_CANBUS_BRAKELININGREMAINING_AXLEREAR2LEFTWHEEL_FIELD_NUMBER = 50760;
/*       */     
/*       */     private DolphinConfig.IO iOCANBusBrakeLiningRemainingAxleRear2LeftWheel_;
/*       */     
/*       */     public static final int IO_CANBUS_BRAKELININGREMAINING_AXLEREAR2RIGHTWHEEL_FIELD_NUMBER = 50761;
/*       */     
/*       */     private DolphinConfig.IO iOCANBusBrakeLiningRemainingAxleRear2RightWheel_;
/*       */     
/*       */     public static final int IO_CANBUS_BRAKELININGREMAINING_AXLEREAR3LEFTWHEEL_FIELD_NUMBER = 50762;
/*       */     
/*       */     private DolphinConfig.IO iOCANBusBrakeLiningRemainingAxleRear3LeftWheel_;
/*       */     
/*       */     public static final int IO_CANBUS_BRAKELININGREMAINING_AXLEREAR3RIGHTWHEEL_FIELD_NUMBER = 50763;
/*       */     
/*       */     private DolphinConfig.IO iOCANBusBrakeLiningRemainingAxleRear3RightWheel_;
/*       */     
/*       */     public static final int IO_CANBUS_TRUCKBUS_CRUISECONTROL_FIELD_NUMBER = 50784;
/*       */     
/*       */     private DolphinConfig.IO iOCANBusTruckBusCruiseControl_;
/*       */     
/*       */     public static final int IO_CANBUS_BUS_ALTERNATORSPEED_ALTERNATORSTATUS1_FIELD_NUMBER = 50785;
/*       */     
/*       */     private DolphinConfig.IO iOCANBusBusAlternatorSpeedAlternatorStatus1_;
/*       */     
/*       */     public static final int IO_CANBUS_BUS_ALTERNATORSPEED_ALTERNATORSTATUS2_FIELD_NUMBER = 50786;
/*       */     
/*       */     private DolphinConfig.IO iOCANBusBusAlternatorSpeedAlternatorStatus2_;
/*       */     
/*       */     public static final int IO_CANBUS_BUS_ALTERNATORSPEED_ALTERNATORSTATUS3_FIELD_NUMBER = 50787;
/*       */     
/*       */     private DolphinConfig.IO iOCANBusBusAlternatorSpeedAlternatorStatus3_;
/*       */     
/*       */     public static final int IO_CANBUS_BUS_ALTERNATORSPEED_ALTERNATORSTATUS4_FIELD_NUMBER = 50788;
/*       */     
/*       */     private DolphinConfig.IO iOCANBusBusAlternatorSpeedAlternatorStatus4_;
/*       */     
/*       */     public static final int IO_CANBUS_BUS_ELECTRONICTRANSMISSIONCONTROLLER2_SELECTEDGEAR_FIELD_NUMBER = 50789;
/*       */     
/*       */     private DolphinConfig.IO iOCANBusBusElectronicTransmissionController2SelectedGear_;
/*       */     
/*       */     public static final int IO_CANBUS_BUS_ELECTRONICTRANSMISSIONCONTROLLER2_CURRENTGEAR_FIELD_NUMBER = 50790;
/*       */     
/*       */     private DolphinConfig.IO iOCANBusBusElectronicTransmissionController2CurrentGear_;
/*       */     
/*       */     public static final int IO_CANBUS_BUS_AIRSUSPENSIONCONTROL4_FRONTAXLELEFT_FIELD_NUMBER = 50791;
/*       */     
/*       */     private DolphinConfig.IO iOCANBusBusAirSuspensionControl4FrontAxleLeft_;
/*       */     
/*       */     public static final int IO_CANBUS_BUS_AIRSUSPENSIONCONTROL4_FRONTAXLERIGHT_FIELD_NUMBER = 50792;
/*       */     
/*       */     private DolphinConfig.IO iOCANBusBusAirSuspensionControl4FrontAxleRight_;
/*       */     
/*       */     public static final int IO_CANBUS_BUS_AIRSUSPENSIONCONTROL4_REARAXLELEFT_FIELD_NUMBER = 50793;
/*       */     
/*       */     private DolphinConfig.IO iOCANBusBusAirSuspensionControl4RearAxleLeft_;
/*       */     
/*       */     public static final int IO_CANBUS_BUS_AIRSUSPENSIONCONTROL4_REARAXLERIGHT_FIELD_NUMBER = 50794;
/*       */     
/*       */     private DolphinConfig.IO iOCANBusBusAirSuspensionControl4RearAxleright_;
/*       */     
/*       */     public static final int IO_CANBUS_DASHDISPLAY_FUELLEVEL2_FIELD_NUMBER = 50795;
/*       */     
/*       */     private DolphinConfig.IO iOCANBusDashDisplayFuelLevel2_;
/*       */     
/*       */     public static final int IO_CANBUS_ELECTRONICBRAKECONTROLLER_BRAKEPEDALPOSITION_FIELD_NUMBER = 50796;
/*       */     
/*       */     private DolphinConfig.IO iOCANBusElectronicBrakeControllerBrakePedalPosition_;
/*       */     
/*       */     public static final int IO_CANBUS_FUELCONSUMPTIONGASEOUS_TOTALFUELUSED_FIELD_NUMBER = 50797;
/*       */     
/*       */     private DolphinConfig.IO iOCANBusFuelConsumptionGaseousTotalFuelUsed_;
/*       */     
/*       */     public static final int IO_CANBUS_TRUCKBUS_CRUISECONTROLVEHICLESPEED_PARKINGBRAKESWITCH_FIELD_NUMBER = 50798;
/*       */     
/*       */     private DolphinConfig.IO iOCANBusTruckBusCruiseControlVehicleSpeedParkingBrakeSwitch_;
/*       */     
/*       */     public static final int IO_CANBUS_TRUCKBUS_CRUISECONTROLVEHICLESPEED_WHEELBASEDSPEED_FIELD_NUMBER = 50799;
/*       */     
/*       */     private DolphinConfig.IO iOCANBusTruckBusCruiseControlVehicleSpeedWheelBasedSpeed_;
/*       */     
/*       */     public static final int IO_CANBUS_TRUCKBUS_CRUISECONTROLVEHICLESPEED_CRUISECONTROLACTIVE_FIELD_NUMBER = 50800;
/*       */     
/*       */     private DolphinConfig.IO iOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlActive_;
/*       */     
/*       */     public static final int IO_CANBUS_TRUCKBUS_CRUISECONTROLVEHICLESPEED_BRAKESWITCH_FIELD_NUMBER = 50801;
/*       */     
/*       */     private DolphinConfig.IO iOCANBusTruckBusCruiseControlVehicleSpeedBrakeSwitch_;
/*       */     
/*       */     public static final int IO_CANBUS_TRUCKBUS_CRUISECONTROLVEHICLESPEED_CLUTCHSWITCH_FIELD_NUMBER = 50802;
/*       */     
/*       */     private DolphinConfig.IO iOCANBusTruckBusCruiseControlVehicleSpeedClutchSwitch_;
/*       */     
/*       */     public static final int IO_CANBUS_TRUCKBUS_CRUISECONTROLVEHICLESPEED_PTOSTATE_FIELD_NUMBER = 50803;
/*       */     
/*       */     private DolphinConfig.IO iOCANBusTruckBusCruiseControlVehicleSpeedPtoState_;
/*       */     
/*       */     public static final int IO_CANBUS_TRUCKBUS_CRUISECONTROLVEHICLESPEED_CRUISECONTROLSTATES_FIELD_NUMBER = 50804;
/*       */     
/*       */     private DolphinConfig.IO iOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlStates_;
/*       */     
/*       */     public static final int IO_CANBUS_BUS_VEHICLEELECTRICALPOWER_HYBRIDBATTERYPACKREMAININGCHARGE_FIELD_NUMBER = 50805;
/*       */     
/*       */     private DolphinConfig.IO iOCANBusBusVehicleElectricalPowerHybridBatteryPackRemainingCharge_;
/*       */     
/*       */     public static final int IO_CANBUS_BUS_VEHICLEDYNAMICSTABILITYCONTROL2_STEERINGWHEELANGLE_FIELD_NUMBER = 50806;
/*       */     
/*       */     private DolphinConfig.IO iOCANBusBusVehicleDynamicStabilityControl2SteeringWheelAngle_;
/*       */     
/*       */     public static final int IO_CANBUS_ELECTRONICENGINECONTROLLER14_FUELTYPE_FIELD_NUMBER = 50807;
/*       */     
/*       */     private DolphinConfig.IO iOCANBusElectronicEngineController14FuelType_;
/*       */     
/*       */     public static final int IO_CANBUS_ENGINEFLUIDLEVELPRESSURE_ENGINEOILLEVEL_FIELD_NUMBER = 50808;
/*       */     
/*       */     private DolphinConfig.IO iOCANBusEngineFluidLevelPressureEngineOilLevel_;
/*       */     
/*       */     public static final int IO_CANBUS_ENGINEFLUIDLEVELPRESSURE_ENGINEOILPRESSURE_FIELD_NUMBER = 50809;
/*       */     
/*       */     private DolphinConfig.IO iOCANBusEngineFluidLevelPressureEngineOilPressure_;
/*       */     
/*       */     public static final int IO_CANBUS_ENGINEFLUIDLEVELPRESSURE_COOLANTLEVEL_FIELD_NUMBER = 50810;
/*       */     
/*       */     private DolphinConfig.IO iOCANBusEngineFluidLevelPressureCoolantLevel_;
/*       */     
/*       */     public static final int IO_CANBUS_TELLTALESTATUS_FIELD_NUMBER = 50811;
/*       */     
/*       */     private DolphinConfig.IO iOCANBusTellTaleStatus_;
/*       */     
/*       */     public static final int IO_CANBUS_FUELCONSUMPTION_ENGINETOTALFUELUSED_FIELD_NUMBER = 50812;
/*       */     
/*       */     private DolphinConfig.IO iOCANBusFuelConsumptionEngineTotalFuelUsed_;
/*       */     
/*       */     public static final int IO_CANBUS_TRUCK_VEHICLEWEIGHT_AXLEWEIGHT4_FIELD_NUMBER = 50813;
/*       */     
/*       */     private DolphinConfig.IO iOCANBusTruckVehicleWeightAxleWeight4_;
/*       */     
/*       */     private byte memoizedIsInitialized;
/*       */     
/*       */     private static final Config DEFAULT_INSTANCE = new Config();
/*       */ 
/*       */     
/*       */     private static final Parser<Config> PARSER = (Parser<Config>)new AbstractParser<Config>()
/*       */       {
/*       */         public DolphinConfig.Config parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*       */           return new DolphinConfig.Config(input, extensionRegistry);
/*       */         }
/*       */       };
/*       */ 
/*       */     
/*       */     private Config(GeneratedMessageV3.Builder<?> builder)
/*       */     {
/* 12237 */       super(builder);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/* 27653 */       this.memoizedIsInitialized = -1; } private Config() { this.memoizedIsInitialized = -1; this.serialPortBaudrate_ = 0; this.password_ = ""; this.movement_ = 0; this.sleep_ = 0; this.engineOn_ = 0; this.engineOnOperator_ = 0; this.gNSS_ = 0; this.staticNavigationSource_ = 0; this.recordsSaveAndSendMode_ = 0; this.timeSynchronization_ = 0; this.nTPServer_ = ""; this.timetableData_ = ByteString.EMPTY; this.bluetoothRadioMode_ = 0; this.bluetoothName_ = ""; this.bluetoothPIN_ = ""; this.bluetoothSecurityMode_ = 0; this.bluetoothExternalConnectionMode_ = 0; this.bluetoothExternalDeviceMAC_ = ""; this.bluetoothExternalDeviceName_ = ""; this.bluetoothExternalDevicePIN_ = ""; this.bluetoothAuthorizedMAC1_ = ""; this.bluetoothAuthorizedMAC2_ = ""; this.bluetoothAuthorizedMAC3_ = ""; this.bluetoothAuthorizedMAC4_ = ""; this.bluetoothAuthorizedMAC5_ = ""; this.gPRSApnName_ = ""; this.gPRSApnUsername_ = ""; this.gPRSApnPassword_ = ""; this.gPRSServerAddress_ = ""; this.gPRSServerProtocol_ = 0; this.gPRSBackupServerAddress_ = ""; this.gPRSBackupServerProtocol_ = 0; this.authenticationMode_ = 0; this.authenticationCode_ = ""; this.firmwareUpdateChannel_ = ""; this.firmwareUpdateServerAddress_ = ""; this.firmwareUpdateServerProtocol_ = 0; this.sMSDataSendNumber_ = ""; this.sMSPassword_ = ""; this.callIncommingCallAction_ = 0; this.authorizedNumber1_ = ""; this.authorizedNumber2_ = ""; this.authorizedNumber3_ = ""; this.authorizedNumber4_ = ""; this.authorizedNumber5_ = ""; this.authorizedNumber6_ = ""; this.authorizedNumber7_ = ""; this.authorizedNumber8_ = ""; this.authorizedNumber9_ = ""; this.authorizedNumber10_ = ""; this.gsmPredefinedNumber1_ = ""; this.gsmPredefinedNumber2_ = ""; this.gsmPredefinedNumber3_ = ""; this.gsmPredefinedNumber4_ = ""; this.gsmPredefinedNumber5_ = ""; this.gsmPredefinedNumber6_ = ""; this.gsmPredefinedNumber7_ = ""; this.gsmPredefinedNumber8_ = ""; this.gsmPredefinedNumber9_ = ""; this.gsmPredefinedNumber10_ = ""; this.roamingOperator1_ = ""; this.roamingOperator2_ = ""; this.roamingOperator3_ = ""; this.roamingOperator4_ = ""; this.roamingOperator5_ = ""; this.overspeedingDeactivationMode_ = 0; this.uSSDCode_ = ""; this.crashDetectionTrace_ = 0; this.crashDetectionSMSText_ = ""; this.driverRegistrationMode_ = 0; this.driverRegistrationAuthentication_ = 0; this.driverRegistrationBuzzerDigitalOutput_ = 0; this.driverRegistrationImmobilizerDigitalOutput_ = 0; this.eCOEngineOnOperator_ = 0; this.eCUInterface_ = 0; this.fuelConsumptionEnabled_ = 0; this.sIPAADServerAddress_ = ""; this.sIPAADServerProtocol_ = 0; } protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) { return new Config(); } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private Config(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this(); if (extensionRegistry == null) throw new NullPointerException();  UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { int i6; String str10; int i5; String str9; DolphinConfig.Service.Builder builder1; int i4; String str8; int i3; String str7; int i2; String str6; int i1; String str5; int n; String str4; int m; String str3; DolphinConfig.GeoZone.Builder builder; int k; String str2; int j; String str1; int i; String s; int rawValue; DolphinConfig.IO.Builder subBuilder; int tag = input.readTag(); switch (tag) { case 0: done = true; continue;case 640: i6 = input.readEnum(); this.serialPortBaudrate_ = i6; continue;case 720: this.doNotResetDeviceOnProblems_ = input.readBool(); continue;case 794: str10 = input.readStringRequireUtf8(); this.password_ = str10; continue;case 800: i5 = input.readEnum(); this.movement_ = i5; continue;case 808: this.movementSensorSensitivity_ = input.readUInt32(); continue;case 816: i5 = input.readEnum(); this.sleep_ = i5; continue;case 824: this.sleepTimeout_ = input.readUInt32(); continue;case 832: i5 = input.readEnum(); this.engineOn_ = i5; continue;case 840: this.engineOnDIN1_ = input.readBool(); continue;case 848: this.engineOnDIN2_ = input.readBool(); continue;case 856: this.engineOnMovementSensor_ = input.readBool(); continue;case 864: this.engineOnPowerSupplyAvailable_ = input.readBool(); continue;case 872: this.engineOnGpsSpeed_ = input.readUInt32(); continue;case 880: this.engineOnCanRPM_ = input.readUInt32(); continue;case 888: this.engineOnMinActiveStateDuration_ = input.readUInt32(); continue;case 896: i5 = input.readEnum(); this.engineOnOperator_ = i5; continue;case 904: this.engineOnMovementStartDelay_ = input.readUInt32(); continue;case 912: this.engineOnMovementStopDelay_ = input.readUInt32(); continue;case 920: this.engineOnExternalVoltage_ = input.readUInt32(); continue;case 928: this.ledIndication_ = input.readBool(); continue;case 936: i5 = input.readEnum(); this.gNSS_ = i5; continue;case 944: this.staticNavigationEnabled_ = input.readBool(); continue;case 952: i5 = input.readEnum(); this.staticNavigationSource_ = i5; continue;case 960: i5 = input.readEnum(); this.recordsSaveAndSendMode_ = i5; continue;case 968: i5 = input.readEnum(); this.timeSynchronization_ = i5; continue;case 978: str9 = input.readStringRequireUtf8(); this.nTPServer_ = str9; continue;case 984: this.nTPInterval_ = input.readUInt32(); continue;case 1000: this.sleepNoPowerTimeout_ = input.readUInt32(); continue;case 1040: this.sendPing_ = input.readBool(); continue;case 1120: this.timetableMode_ = input.readBool(); continue;case 1130: this.timetableData_ = input.readBytes(); continue;case 1602: builder1 = null; if (this.service1_ != null) builder1 = this.service1_.toBuilder();  this.service1_ = (DolphinConfig.Service)input.readMessage(DolphinConfig.Service.parser(), extensionRegistry); if (builder1 != null) { builder1.mergeFrom(this.service1_); this.service1_ = builder1.buildPartial(); }  continue;case 1610: builder1 = null; if (this.service2_ != null) builder1 = this.service2_.toBuilder();  this.service2_ = (DolphinConfig.Service)input.readMessage(DolphinConfig.Service.parser(), extensionRegistry); if (builder1 != null) { builder1.mergeFrom(this.service2_); this.service2_ = builder1.buildPartial(); }  continue;case 1618: builder1 = null; if (this.service3_ != null) builder1 = this.service3_.toBuilder();  this.service3_ = (DolphinConfig.Service)input.readMessage(DolphinConfig.Service.parser(), extensionRegistry); if (builder1 != null) { builder1.mergeFrom(this.service3_); this.service3_ = builder1.buildPartial(); }  continue;case 5600: this.analogInput1AverageTime_ = input.readUInt32(); continue;case 5608: this.analogInput2AverageTime_ = input.readUInt32(); continue;case 5616: this.analogInput3AverageTime_ = input.readUInt32(); continue;case 6400: i4 = input.readEnum(); this.bluetoothRadioMode_ = i4; continue;case 6410: str8 = input.readStringRequireUtf8(); this.bluetoothName_ = str8; continue;case 6418: str8 = input.readStringRequireUtf8(); this.bluetoothPIN_ = str8; continue;case 6424: i3 = input.readEnum(); this.bluetoothSecurityMode_ = i3; continue;case 6432: this.bluetoothPowerDownOnSleep_ = input.readBool(); continue;case 6480: i3 = input.readEnum(); this.bluetoothExternalConnectionMode_ = i3; continue;case 6490: str7 = input.readStringRequireUtf8(); this.bluetoothExternalDeviceMAC_ = str7; continue;case 6498: str7 = input.readStringRequireUtf8(); this.bluetoothExternalDeviceName_ = str7; continue;case 6506: str7 = input.readStringRequireUtf8(); this.bluetoothExternalDevicePIN_ = str7; continue;case 6562: str7 = input.readStringRequireUtf8(); this.bluetoothAuthorizedMAC1_ = str7; continue;case 6570: str7 = input.readStringRequireUtf8(); this.bluetoothAuthorizedMAC2_ = str7; continue;case 6578: str7 = input.readStringRequireUtf8(); this.bluetoothAuthorizedMAC3_ = str7; continue;case 6586: str7 = input.readStringRequireUtf8(); this.bluetoothAuthorizedMAC4_ = str7; continue;case 6594: str7 = input.readStringRequireUtf8(); this.bluetoothAuthorizedMAC5_ = str7; continue;case 16008: this.gPRSContextEnabled_ = input.readBool(); continue;case 16018: str7 = input.readStringRequireUtf8(); this.gPRSApnName_ = str7; continue;case 16026: str7 = input.readStringRequireUtf8(); this.gPRSApnUsername_ = str7; continue;case 16034: str7 = input.readStringRequireUtf8(); this.gPRSApnPassword_ = str7; continue;case 16040: this.gPRSCHAPAuthentication_ = input.readBool(); continue;case 16048: this.gPRSLinkTimeout_ = input.readUInt32(); continue;case 16056: this.gPRSResponseTimeout_ = input.readUInt32(); continue;case 16066: str7 = input.readStringRequireUtf8(); this.gPRSServerAddress_ = str7; continue;case 16072: this.gPRSServerPort_ = input.readUInt32(); continue;case 16080: i2 = input.readEnum(); this.gPRSServerProtocol_ = i2; continue;case 16090: str6 = input.readStringRequireUtf8(); this.gPRSBackupServerAddress_ = str6; continue;case 16096: this.gPRSBackupServerPort_ = input.readUInt32(); continue;case 16104: i1 = input.readEnum(); this.gPRSBackupServerProtocol_ = i1; continue;case 16160: this.gPRSSSLClientAuthentication_ = input.readBool(); continue;case 16240: this.gPRSDataCompression_ = input.readBool(); continue;case 16280: i1 = input.readEnum(); this.authenticationMode_ = i1; continue;case 16290: str5 = input.readStringRequireUtf8(); this.authenticationCode_ = str5; continue;case 16320: this.firmwareUpdateEnabled_ = input.readBool(); continue;case 16330: str5 = input.readStringRequireUtf8(); this.firmwareUpdateChannel_ = str5; continue;case 16336: this.firmwareUpdateCheckInterval_ = input.readUInt32(); continue;case 16362: str5 = input.readStringRequireUtf8(); this.firmwareUpdateServerAddress_ = str5; continue;case 16368: this.firmwareUpdateServerPort_ = input.readUInt32(); continue;case 16376: n = input.readEnum(); this.firmwareUpdateServerProtocol_ = n; continue;case 16384: this.firmwareUpdateLinkTimeout_ = input.readUInt32(); continue;case 16392: this.firmwareUpdateResponseTimeout_ = input.readUInt32(); continue;case 24000: this.sMSDataSending_ = input.readBool(); continue;case 24010: str4 = input.readStringRequireUtf8(); this.sMSDataSendNumber_ = str4; continue;case 24018: str4 = input.readStringRequireUtf8(); this.sMSPassword_ = str4; continue;case 24024: this.sMSEventTimeZone_ = input.readInt32(); continue;case 24408: m = input.readEnum(); this.callIncommingCallAction_ = m; continue;case 24440: this.callDigitalInput1CallTo_ = input.readUInt32(); continue;case 24448: this.callDigitalInput2CallTo_ = input.readUInt32(); continue;case 24456: this.callDigitalInput3CallTo_ = input.readUInt32(); continue;case 24802: str3 = input.readStringRequireUtf8(); this.authorizedNumber1_ = str3; continue;case 24810: str3 = input.readStringRequireUtf8(); this.authorizedNumber2_ = str3; continue;case 24818: str3 = input.readStringRequireUtf8(); this.authorizedNumber3_ = str3; continue;case 24826: str3 = input.readStringRequireUtf8(); this.authorizedNumber4_ = str3; continue;case 24834: str3 = input.readStringRequireUtf8(); this.authorizedNumber5_ = str3; continue;case 24842: str3 = input.readStringRequireUtf8(); this.authorizedNumber6_ = str3; continue;case 24850: str3 = input.readStringRequireUtf8(); this.authorizedNumber7_ = str3; continue;case 24858: str3 = input.readStringRequireUtf8(); this.authorizedNumber8_ = str3; continue;case 24866: str3 = input.readStringRequireUtf8(); this.authorizedNumber9_ = str3; continue;case 24874: str3 = input.readStringRequireUtf8(); this.authorizedNumber10_ = str3; continue;case 25602: str3 = input.readStringRequireUtf8(); this.gsmPredefinedNumber1_ = str3; continue;case 25610: str3 = input.readStringRequireUtf8(); this.gsmPredefinedNumber2_ = str3; continue;case 25618: str3 = input.readStringRequireUtf8(); this.gsmPredefinedNumber3_ = str3; continue;case 25626: str3 = input.readStringRequireUtf8(); this.gsmPredefinedNumber4_ = str3; continue;case 25634: str3 = input.readStringRequireUtf8(); this.gsmPredefinedNumber5_ = str3; continue;case 25642: str3 = input.readStringRequireUtf8(); this.gsmPredefinedNumber6_ = str3; continue;case 25650: str3 = input.readStringRequireUtf8(); this.gsmPredefinedNumber7_ = str3; continue;case 25658: str3 = input.readStringRequireUtf8(); this.gsmPredefinedNumber8_ = str3; continue;case 25666: str3 = input.readStringRequireUtf8(); this.gsmPredefinedNumber9_ = str3; continue;case 25674: str3 = input.readStringRequireUtf8(); this.gsmPredefinedNumber10_ = str3; continue;case 40002: str3 = input.readStringRequireUtf8(); this.roamingOperator1_ = str3; continue;case 40010: str3 = input.readStringRequireUtf8(); this.roamingOperator2_ = str3; continue;case 40018: str3 = input.readStringRequireUtf8(); this.roamingOperator3_ = str3; continue;case 40026: str3 = input.readStringRequireUtf8(); this.roamingOperator4_ = str3; continue;case 40034: str3 = input.readStringRequireUtf8(); this.roamingOperator5_ = str3; continue;case 80000: this.dAQStopHomeMinPeriod_ = input.readUInt32(); continue;case 80400: this.dAQMovingHomeMinPeriod_ = input.readUInt32(); continue;case 80408: this.dAQMovingHomeMinPathDeviation_ = input.readUInt32(); continue;case 80800: this.dAQStopRoamingMinPeriod_ = input.readUInt32(); continue;case 81200: this.dAQMovingRoamingMinPeriod_ = input.readUInt32(); continue;case 81208: this.dAQMovingRoamingMinPathDeviation_ = input.readUInt32(); continue;case 160002: builder = null; if (this.geoZone1_ != null) builder = this.geoZone1_.toBuilder();  this.geoZone1_ = (DolphinConfig.GeoZone)input.readMessage(DolphinConfig.GeoZone.parser(), extensionRegistry); if (builder != null) { builder.mergeFrom(this.geoZone1_); this.geoZone1_ = builder.buildPartial(); }  continue;case 160162: builder = null; if (this.geoZone2_ != null) builder = this.geoZone2_.toBuilder();  this.geoZone2_ = (DolphinConfig.GeoZone)input.readMessage(DolphinConfig.GeoZone.parser(), extensionRegistry); if (builder != null) { builder.mergeFrom(this.geoZone2_); this.geoZone2_ = builder.buildPartial(); }  continue;case 160322: builder = null; if (this.geoZone3_ != null) builder = this.geoZone3_.toBuilder();  this.geoZone3_ = (DolphinConfig.GeoZone)input.readMessage(DolphinConfig.GeoZone.parser(), extensionRegistry); if (builder != null) { builder.mergeFrom(this.geoZone3_); this.geoZone3_ = builder.buildPartial(); }  continue;case 160482: builder = null; if (this.geoZone4_ != null) builder = this.geoZone4_.toBuilder();  this.geoZone4_ = (DolphinConfig.GeoZone)input.readMessage(DolphinConfig.GeoZone.parser(), extensionRegistry); if (builder != null) { builder.mergeFrom(this.geoZone4_); this.geoZone4_ = builder.buildPartial(); }  continue;case 160642: builder = null; if (this.geoZone5_ != null) builder = this.geoZone5_.toBuilder();  this.geoZone5_ = (DolphinConfig.GeoZone)input.readMessage(DolphinConfig.GeoZone.parser(), extensionRegistry); if (builder != null) { builder.mergeFrom(this.geoZone5_); this.geoZone5_ = builder.buildPartial(); }  continue;case 160802: builder = null; if (this.geoZone6_ != null) builder = this.geoZone6_.toBuilder();  this.geoZone6_ = (DolphinConfig.GeoZone)input.readMessage(DolphinConfig.GeoZone.parser(), extensionRegistry); if (builder != null) { builder.mergeFrom(this.geoZone6_); this.geoZone6_ = builder.buildPartial(); }  continue;case 160962: builder = null; if (this.geoZone7_ != null) builder = this.geoZone7_.toBuilder();  this.geoZone7_ = (DolphinConfig.GeoZone)input.readMessage(DolphinConfig.GeoZone.parser(), extensionRegistry); if (builder != null) { builder.mergeFrom(this.geoZone7_); this.geoZone7_ = builder.buildPartial(); }  continue;case 161122: builder = null; if (this.geoZone8_ != null) builder = this.geoZone8_.toBuilder();  this.geoZone8_ = (DolphinConfig.GeoZone)input.readMessage(DolphinConfig.GeoZone.parser(), extensionRegistry); if (builder != null) { builder.mergeFrom(this.geoZone8_); this.geoZone8_ = builder.buildPartial(); }  continue;case 161282: builder = null; if (this.geoZone9_ != null) builder = this.geoZone9_.toBuilder();  this.geoZone9_ = (DolphinConfig.GeoZone)input.readMessage(DolphinConfig.GeoZone.parser(), extensionRegistry); if (builder != null) { builder.mergeFrom(this.geoZone9_); this.geoZone9_ = builder.buildPartial(); }  continue;case 161442: builder = null; if (this.geoZone10_ != null) builder = this.geoZone10_.toBuilder();  this.geoZone10_ = (DolphinConfig.GeoZone)input.readMessage(DolphinConfig.GeoZone.parser(), extensionRegistry); if (builder != null) { builder.mergeFrom(this.geoZone10_); this.geoZone10_ = builder.buildPartial(); }  continue;case 161602: builder = null; if (this.geoZone11_ != null) builder = this.geoZone11_.toBuilder();  this.geoZone11_ = (DolphinConfig.GeoZone)input.readMessage(DolphinConfig.GeoZone.parser(), extensionRegistry); if (builder != null) { builder.mergeFrom(this.geoZone11_); this.geoZone11_ = builder.buildPartial(); }  continue;case 161762: builder = null; if (this.geoZone12_ != null) builder = this.geoZone12_.toBuilder();  this.geoZone12_ = (DolphinConfig.GeoZone)input.readMessage(DolphinConfig.GeoZone.parser(), extensionRegistry); if (builder != null) { builder.mergeFrom(this.geoZone12_); this.geoZone12_ = builder.buildPartial(); }  continue;case 161922: builder = null; if (this.geoZone13_ != null) builder = this.geoZone13_.toBuilder();  this.geoZone13_ = (DolphinConfig.GeoZone)input.readMessage(DolphinConfig.GeoZone.parser(), extensionRegistry); if (builder != null) { builder.mergeFrom(this.geoZone13_); this.geoZone13_ = builder.buildPartial(); }  continue;case 162082: builder = null; if (this.geoZone14_ != null) builder = this.geoZone14_.toBuilder();  this.geoZone14_ = (DolphinConfig.GeoZone)input.readMessage(DolphinConfig.GeoZone.parser(), extensionRegistry); if (builder != null) { builder.mergeFrom(this.geoZone14_); this.geoZone14_ = builder.buildPartial(); }  continue;case 162242: builder = null; if (this.geoZone15_ != null) builder = this.geoZone15_.toBuilder();  this.geoZone15_ = (DolphinConfig.GeoZone)input.readMessage(DolphinConfig.GeoZone.parser(), extensionRegistry); if (builder != null) { builder.mergeFrom(this.geoZone15_); this.geoZone15_ = builder.buildPartial(); }  continue;case 162402: builder = null; if (this.geoZone16_ != null) builder = this.geoZone16_.toBuilder();  this.geoZone16_ = (DolphinConfig.GeoZone)input.readMessage(DolphinConfig.GeoZone.parser(), extensionRegistry); if (builder != null) { builder.mergeFrom(this.geoZone16_); this.geoZone16_ = builder.buildPartial(); }  continue;case 162562: builder = null; if (this.geoZone17_ != null) builder = this.geoZone17_.toBuilder();  this.geoZone17_ = (DolphinConfig.GeoZone)input.readMessage(DolphinConfig.GeoZone.parser(), extensionRegistry); if (builder != null) { builder.mergeFrom(this.geoZone17_); this.geoZone17_ = builder.buildPartial(); }  continue;case 162722: builder = null; if (this.geoZone18_ != null) builder = this.geoZone18_.toBuilder();  this.geoZone18_ = (DolphinConfig.GeoZone)input.readMessage(DolphinConfig.GeoZone.parser(), extensionRegistry); if (builder != null) { builder.mergeFrom(this.geoZone18_); this.geoZone18_ = builder.buildPartial(); }  continue;case 162882: builder = null; if (this.geoZone19_ != null) builder = this.geoZone19_.toBuilder();  this.geoZone19_ = (DolphinConfig.GeoZone)input.readMessage(DolphinConfig.GeoZone.parser(), extensionRegistry); if (builder != null) { builder.mergeFrom(this.geoZone19_); this.geoZone19_ = builder.buildPartial(); }  continue;case 163042: builder = null; if (this.geoZone20_ != null) builder = this.geoZone20_.toBuilder();  this.geoZone20_ = (DolphinConfig.GeoZone)input.readMessage(DolphinConfig.GeoZone.parser(), extensionRegistry); if (builder != null) { builder.mergeFrom(this.geoZone20_); this.geoZone20_ = builder.buildPartial(); }  continue;case 163202: builder = null; if (this.geoZone21_ != null) builder = this.geoZone21_.toBuilder();  this.geoZone21_ = (DolphinConfig.GeoZone)input.readMessage(DolphinConfig.GeoZone.parser(), extensionRegistry); if (builder != null) { builder.mergeFrom(this.geoZone21_); this.geoZone21_ = builder.buildPartial(); }  continue;case 163362: builder = null; if (this.geoZone22_ != null) builder = this.geoZone22_.toBuilder();  this.geoZone22_ = (DolphinConfig.GeoZone)input.readMessage(DolphinConfig.GeoZone.parser(), extensionRegistry); if (builder != null) { builder.mergeFrom(this.geoZone22_); this.geoZone22_ = builder.buildPartial(); }  continue;case 163522: builder = null; if (this.geoZone23_ != null) builder = this.geoZone23_.toBuilder();  this.geoZone23_ = (DolphinConfig.GeoZone)input.readMessage(DolphinConfig.GeoZone.parser(), extensionRegistry); if (builder != null) { builder.mergeFrom(this.geoZone23_); this.geoZone23_ = builder.buildPartial(); }  continue;case 163682: builder = null; if (this.geoZone24_ != null) builder = this.geoZone24_.toBuilder();  this.geoZone24_ = (DolphinConfig.GeoZone)input.readMessage(DolphinConfig.GeoZone.parser(), extensionRegistry); if (builder != null) { builder.mergeFrom(this.geoZone24_); this.geoZone24_ = builder.buildPartial(); }  continue;case 163842: builder = null; if (this.geoZone25_ != null) builder = this.geoZone25_.toBuilder();  this.geoZone25_ = (DolphinConfig.GeoZone)input.readMessage(DolphinConfig.GeoZone.parser(), extensionRegistry); if (builder != null) { builder.mergeFrom(this.geoZone25_); this.geoZone25_ = builder.buildPartial(); }  continue;case 164002: builder = null; if (this.geoZone26_ != null) builder = this.geoZone26_.toBuilder();  this.geoZone26_ = (DolphinConfig.GeoZone)input.readMessage(DolphinConfig.GeoZone.parser(), extensionRegistry); if (builder != null) { builder.mergeFrom(this.geoZone26_); this.geoZone26_ = builder.buildPartial(); }  continue;case 164162: builder = null; if (this.geoZone27_ != null) builder = this.geoZone27_.toBuilder();  this.geoZone27_ = (DolphinConfig.GeoZone)input.readMessage(DolphinConfig.GeoZone.parser(), extensionRegistry); if (builder != null) { builder.mergeFrom(this.geoZone27_); this.geoZone27_ = builder.buildPartial(); }  continue;case 164322: builder = null; if (this.geoZone28_ != null) builder = this.geoZone28_.toBuilder();  this.geoZone28_ = (DolphinConfig.GeoZone)input.readMessage(DolphinConfig.GeoZone.parser(), extensionRegistry); if (builder != null) { builder.mergeFrom(this.geoZone28_); this.geoZone28_ = builder.buildPartial(); }  continue;case 164482: builder = null; if (this.geoZone29_ != null) builder = this.geoZone29_.toBuilder();  this.geoZone29_ = (DolphinConfig.GeoZone)input.readMessage(DolphinConfig.GeoZone.parser(), extensionRegistry); if (builder != null) { builder.mergeFrom(this.geoZone29_); this.geoZone29_ = builder.buildPartial(); }  continue;case 164642: builder = null; if (this.geoZone30_ != null) builder = this.geoZone30_.toBuilder();  this.geoZone30_ = (DolphinConfig.GeoZone)input.readMessage(DolphinConfig.GeoZone.parser(), extensionRegistry); if (builder != null) { builder.mergeFrom(this.geoZone30_); this.geoZone30_ = builder.buildPartial(); }  continue;case 164802: builder = null; if (this.geoZone31_ != null) builder = this.geoZone31_.toBuilder();  this.geoZone31_ = (DolphinConfig.GeoZone)input.readMessage(DolphinConfig.GeoZone.parser(), extensionRegistry); if (builder != null) { builder.mergeFrom(this.geoZone31_); this.geoZone31_ = builder.buildPartial(); }  continue;case 164962: builder = null; if (this.geoZone32_ != null) builder = this.geoZone32_.toBuilder();  this.geoZone32_ = (DolphinConfig.GeoZone)input.readMessage(DolphinConfig.GeoZone.parser(), extensionRegistry); if (builder != null) { builder.mergeFrom(this.geoZone32_); this.geoZone32_ = builder.buildPartial(); }  continue;case 165122: builder = null; if (this.geoZone33_ != null) builder = this.geoZone33_.toBuilder();  this.geoZone33_ = (DolphinConfig.GeoZone)input.readMessage(DolphinConfig.GeoZone.parser(), extensionRegistry); if (builder != null) { builder.mergeFrom(this.geoZone33_); this.geoZone33_ = builder.buildPartial(); }  continue;case 165282: builder = null; if (this.geoZone34_ != null) builder = this.geoZone34_.toBuilder();  this.geoZone34_ = (DolphinConfig.GeoZone)input.readMessage(DolphinConfig.GeoZone.parser(), extensionRegistry); if (builder != null) { builder.mergeFrom(this.geoZone34_); this.geoZone34_ = builder.buildPartial(); }  continue;case 165442: builder = null; if (this.geoZone35_ != null) builder = this.geoZone35_.toBuilder();  this.geoZone35_ = (DolphinConfig.GeoZone)input.readMessage(DolphinConfig.GeoZone.parser(), extensionRegistry); if (builder != null) { builder.mergeFrom(this.geoZone35_); this.geoZone35_ = builder.buildPartial(); }  continue;case 165602: builder = null; if (this.geoZone36_ != null) builder = this.geoZone36_.toBuilder();  this.geoZone36_ = (DolphinConfig.GeoZone)input.readMessage(DolphinConfig.GeoZone.parser(), extensionRegistry); if (builder != null) { builder.mergeFrom(this.geoZone36_); this.geoZone36_ = builder.buildPartial(); }  continue;case 165762: builder = null; if (this.geoZone37_ != null) builder = this.geoZone37_.toBuilder();  this.geoZone37_ = (DolphinConfig.GeoZone)input.readMessage(DolphinConfig.GeoZone.parser(), extensionRegistry); if (builder != null) { builder.mergeFrom(this.geoZone37_); this.geoZone37_ = builder.buildPartial(); }  continue;case 165922: builder = null; if (this.geoZone38_ != null) builder = this.geoZone38_.toBuilder();  this.geoZone38_ = (DolphinConfig.GeoZone)input.readMessage(DolphinConfig.GeoZone.parser(), extensionRegistry); if (builder != null) { builder.mergeFrom(this.geoZone38_); this.geoZone38_ = builder.buildPartial(); }  continue;case 166082: builder = null; if (this.geoZone39_ != null) builder = this.geoZone39_.toBuilder();  this.geoZone39_ = (DolphinConfig.GeoZone)input.readMessage(DolphinConfig.GeoZone.parser(), extensionRegistry); if (builder != null) { builder.mergeFrom(this.geoZone39_); this.geoZone39_ = builder.buildPartial(); }  continue;case 166242: builder = null; if (this.geoZone40_ != null) builder = this.geoZone40_.toBuilder();  this.geoZone40_ = (DolphinConfig.GeoZone)input.readMessage(DolphinConfig.GeoZone.parser(), extensionRegistry); if (builder != null) { builder.mergeFrom(this.geoZone40_); this.geoZone40_ = builder.buildPartial(); }  continue;case 166402: builder = null; if (this.geoZone41_ != null) builder = this.geoZone41_.toBuilder();  this.geoZone41_ = (DolphinConfig.GeoZone)input.readMessage(DolphinConfig.GeoZone.parser(), extensionRegistry); if (builder != null) { builder.mergeFrom(this.geoZone41_); this.geoZone41_ = builder.buildPartial(); }  continue;case 166562: builder = null; if (this.geoZone42_ != null) builder = this.geoZone42_.toBuilder();  this.geoZone42_ = (DolphinConfig.GeoZone)input.readMessage(DolphinConfig.GeoZone.parser(), extensionRegistry); if (builder != null) { builder.mergeFrom(this.geoZone42_); this.geoZone42_ = builder.buildPartial(); }  continue;case 166722: builder = null; if (this.geoZone43_ != null) builder = this.geoZone43_.toBuilder();  this.geoZone43_ = (DolphinConfig.GeoZone)input.readMessage(DolphinConfig.GeoZone.parser(), extensionRegistry); if (builder != null) { builder.mergeFrom(this.geoZone43_); this.geoZone43_ = builder.buildPartial(); }  continue;case 166882: builder = null; if (this.geoZone44_ != null) builder = this.geoZone44_.toBuilder();  this.geoZone44_ = (DolphinConfig.GeoZone)input.readMessage(DolphinConfig.GeoZone.parser(), extensionRegistry); if (builder != null) { builder.mergeFrom(this.geoZone44_); this.geoZone44_ = builder.buildPartial(); }  continue;case 167042: builder = null; if (this.geoZone45_ != null) builder = this.geoZone45_.toBuilder();  this.geoZone45_ = (DolphinConfig.GeoZone)input.readMessage(DolphinConfig.GeoZone.parser(), extensionRegistry); if (builder != null) { builder.mergeFrom(this.geoZone45_); this.geoZone45_ = builder.buildPartial(); }  continue;case 167202: builder = null; if (this.geoZone46_ != null) builder = this.geoZone46_.toBuilder();  this.geoZone46_ = (DolphinConfig.GeoZone)input.readMessage(DolphinConfig.GeoZone.parser(), extensionRegistry); if (builder != null) { builder.mergeFrom(this.geoZone46_); this.geoZone46_ = builder.buildPartial(); }  continue;case 167362: builder = null; if (this.geoZone47_ != null) builder = this.geoZone47_.toBuilder();  this.geoZone47_ = (DolphinConfig.GeoZone)input.readMessage(DolphinConfig.GeoZone.parser(), extensionRegistry); if (builder != null) { builder.mergeFrom(this.geoZone47_); this.geoZone47_ = builder.buildPartial(); }  continue;case 167522: builder = null; if (this.geoZone48_ != null) builder = this.geoZone48_.toBuilder();  this.geoZone48_ = (DolphinConfig.GeoZone)input.readMessage(DolphinConfig.GeoZone.parser(), extensionRegistry); if (builder != null) { builder.mergeFrom(this.geoZone48_); this.geoZone48_ = builder.buildPartial(); }  continue;case 167682: builder = null; if (this.geoZone49_ != null) builder = this.geoZone49_.toBuilder();  this.geoZone49_ = (DolphinConfig.GeoZone)input.readMessage(DolphinConfig.GeoZone.parser(), extensionRegistry); if (builder != null) { builder.mergeFrom(this.geoZone49_); this.geoZone49_ = builder.buildPartial(); }  continue;case 167842: builder = null; if (this.geoZone50_ != null) builder = this.geoZone50_.toBuilder();  this.geoZone50_ = (DolphinConfig.GeoZone)input.readMessage(DolphinConfig.GeoZone.parser(), extensionRegistry); if (builder != null) { builder.mergeFrom(this.geoZone50_); this.geoZone50_ = builder.buildPartial(); }  continue;case 224000: this.tripStartSpeed_ = input.readUInt32(); continue;case 224008: this.tripUseIgnition_ = input.readBool(); continue;case 224016: this.tripParkDetectionTimeout_ = input.readUInt32(); continue;case 224800: this.overspeedingEnable_ = input.readBool(); continue;case 224808: this.overspeedingLimit_ = input.readUInt32(); continue;case 224816: this.overspeedingActivationSpeed_ = input.readUInt32(); continue;case 224824: k = input.readEnum(); this.overspeedingDeactivationMode_ = k; continue;case 224832: this.overspeedingDeactivationValue_ = input.readUInt32(); continue;case 225120: this.uSSDEnabled_ = input.readBool(); continue;case 225128: this.uSSDID_ = input.readUInt32(); continue;case 225136: this.uSSDInterval_ = input.readUInt32(); continue;case 225146: str2 = input.readStringRequireUtf8(); this.uSSDCode_ = str2; continue;case 225200: this.speedSensorKmPulseCount_ = input.readUInt32(); continue;case 225600: this.crashDetectionEnabled_ = input.readBool(); continue;case 225608: this.crashDetectionLevel1Threshold_ = input.readUInt32(); continue;case 225616: this.crashDetectionLevel2Threshold_ = input.readUInt32(); continue;case 225624: this.crashDetectionLevel3Threshold_ = input.readUInt32(); continue;case 225640: j = input.readEnum(); this.crashDetectionTrace_ = j; continue;case 225680: this.crashDetectionDuration_ = input.readUInt32(); continue;case 225760: this.crashDetectionSendSMSTo_ = input.readUInt32(); continue;case 225770: str1 = input.readStringRequireUtf8(); this.crashDetectionSMSText_ = str1; continue;case 225800: this.crashDetectionCallTo_ = input.readUInt32(); continue;case 225840: this.rolloverDetectionEnabled_ = input.readBool(); continue;case 232000: i = input.readEnum(); this.driverRegistrationMode_ = i; continue;case 232008: i = input.readEnum(); this.driverRegistrationAuthentication_ = i; continue;case 232016: this.driverRegistrationDeregistrationTimeout_ = input.readUInt32(); continue;case 232080: i = input.readEnum(); this.driverRegistrationBuzzerDigitalOutput_ = i; continue;case 232088: i = input.readEnum(); this.driverRegistrationImmobilizerDigitalOutput_ = i; continue;case 232096: this.driverRegistrationImmobilizerActiveLow_ = input.readBool(); continue;case 232800: this.driverRegistrationAuthorizedID1_ = input.readUInt64(); continue;case 232808: this.driverRegistrationAuthorizedID2_ = input.readUInt64(); continue;case 232816: this.driverRegistrationAuthorizedID3_ = input.readUInt64(); continue;case 232824: this.driverRegistrationAuthorizedID4_ = input.readUInt64(); continue;case 232832: this.driverRegistrationAuthorizedID5_ = input.readUInt64(); continue;case 232840: this.driverRegistrationAuthorizedID6_ = input.readUInt64(); continue;case 232848: this.driverRegistrationAuthorizedID7_ = input.readUInt64(); continue;case 232856: this.driverRegistrationAuthorizedID8_ = input.readUInt64(); continue;case 232864: this.driverRegistrationAuthorizedID9_ = input.readUInt64(); continue;case 232872: this.driverRegistrationAuthorizedID10_ = input.readUInt64(); continue;case 240000: this.eCODriveActive_ = input.readBool(); continue;case 240008: this.eCOOverSpeedingLimit_ = input.readUInt32(); continue;case 240016: this.eCORPMGreenBandLowLimit_ = input.readUInt32(); continue;case 240024: this.eCORPMGreenBandHighLimit_ = input.readUInt32(); continue;case 240032: this.eCOHarshBreakingLimit_ = input.readUInt32(); continue;case 240040: this.eCOExtremeBreakingLimit_ = input.readUInt32(); continue;case 240048: this.eCOHarshAccelerationLimit_ = input.readUInt32(); continue;case 240056: this.eCOCorneringLimit_ = input.readUInt32(); continue;case 240064: this.eCOIdlingDelay_ = input.readUInt32(); continue;case 240072: this.eCOIdlingSpeed_ = input.readUInt32(); continue;case 240080: this.eCOCruiseControlSpeed_ = input.readUInt32(); continue;case 240160: this.eCOCalculateOnlyWhenEngineOn_ = input.readBool(); continue;case 240168: this.eCOCustomEngineSource_ = input.readBool(); continue;case 240176: this.eCOEngineOnDIN1_ = input.readBool(); continue;case 240184: this.eCOEngineOnDIN2_ = input.readBool(); continue;case 240192: this.eCOEngineOnMovementSensor_ = input.readBool(); continue;case 240200: this.eCOEngineOnPowerSupplyAvailable_ = input.readBool(); continue;case 240208: this.eCOEngineOnCanRPMLow_ = input.readUInt32(); continue;case 240216: this.eCOEngineOnCanRPMHigh_ = input.readUInt32(); continue;case 240224: i = input.readEnum(); this.eCOEngineOnOperator_ = i; continue;case 240232: this.eCOEngineOnExternalVoltage_ = input.readUInt32(); continue;case 240800: i = input.readEnum(); this.eCUInterface_ = i; continue;case 241200: i = input.readEnum(); this.fuelConsumptionEnabled_ = i; continue;case 241208: this.fuelConsumptionEngineDisplacement_ = input.readUInt32(); continue;case 241216: this.fuelConsumptionCylinders_ = input.readUInt32(); continue;case 241224: this.fuelConsumptionInjectorPerformance_ = input.readUInt32(); continue;case 241232: this.fuelConsumptionVolumetricEfficiently_ = input.readUInt32(); continue;case 241600: this.faultCodesReadTime_ = input.readUInt32(); continue;case 244000: this.sIPAADLinkTimeout_ = input.readUInt32(); continue;case 244008: this.sIPAADResponseTimeout_ = input.readUInt32(); continue;case 244018: s = input.readStringRequireUtf8(); this.sIPAADServerAddress_ = s; continue;case 244024: this.sIPAADServerPort_ = input.readUInt32(); continue;case 244032: rawValue = input.readEnum(); this.sIPAADServerProtocol_ = rawValue; continue;case 244040: this.sIPAADSSLClientAuthentication_ = input.readBool(); continue;case 400026: subBuilder = null; if (this.iOTime_ != null) subBuilder = this.iOTime_.toBuilder();  this.iOTime_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOTime_); this.iOTime_ = subBuilder.buildPartial(); }  continue;case 400034: subBuilder = null; if (this.iOAngle_ != null) subBuilder = this.iOAngle_.toBuilder();  this.iOAngle_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOAngle_); this.iOAngle_ = subBuilder.buildPartial(); }  continue;case 400042: subBuilder = null; if (this.iOSpeed_ != null) subBuilder = this.iOSpeed_.toBuilder();  this.iOSpeed_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOSpeed_); this.iOSpeed_ = subBuilder.buildPartial(); }  continue;case 400066: subBuilder = null; if (this.iOSleepMode_ != null) subBuilder = this.iOSleepMode_.toBuilder();  this.iOSleepMode_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOSleepMode_); this.iOSleepMode_ = subBuilder.buildPartial(); }  continue;case 400082: subBuilder = null; if (this.iOIgnition_ != null) subBuilder = this.iOIgnition_.toBuilder();  this.iOIgnition_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOIgnition_); this.iOIgnition_ = subBuilder.buildPartial(); }  continue;case 400090: subBuilder = null; if (this.iOMovement_ != null) subBuilder = this.iOMovement_.toBuilder();  this.iOMovement_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOMovement_); this.iOMovement_ = subBuilder.buildPartial(); }  continue;case 400098: subBuilder = null; if (this.iODataMode_ != null) subBuilder = this.iODataMode_.toBuilder();  this.iODataMode_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iODataMode_); this.iODataMode_ = subBuilder.buildPartial(); }  continue;case 400162: subBuilder = null; if (this.iOGnssStatus_ != null) subBuilder = this.iOGnssStatus_.toBuilder();  this.iOGnssStatus_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOGnssStatus_); this.iOGnssStatus_ = subBuilder.buildPartial(); }  continue;case 400170: subBuilder = null; if (this.iOGnssHDOP_ != null) subBuilder = this.iOGnssHDOP_.toBuilder();  this.iOGnssHDOP_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOGnssHDOP_); this.iOGnssHDOP_ = subBuilder.buildPartial(); }  continue;case 400178: subBuilder = null; if (this.iOGnssPDOP_ != null) subBuilder = this.iOGnssPDOP_.toBuilder();  this.iOGnssPDOP_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOGnssPDOP_); this.iOGnssPDOP_ = subBuilder.buildPartial(); }  continue;case 400186: subBuilder = null; if (this.iOGnssJammingStatus_ != null) subBuilder = this.iOGnssJammingStatus_.toBuilder();  this.iOGnssJammingStatus_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOGnssJammingStatus_); this.iOGnssJammingStatus_ = subBuilder.buildPartial(); }  continue;case 400242: subBuilder = null; if (this.iOGsmSignal_ != null) subBuilder = this.iOGsmSignal_.toBuilder();  this.iOGsmSignal_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOGsmSignal_); this.iOGsmSignal_ = subBuilder.buildPartial(); }  continue;case 400250: subBuilder = null; if (this.iOGsmCellId_ != null) subBuilder = this.iOGsmCellId_.toBuilder();  this.iOGsmCellId_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOGsmCellId_); this.iOGsmCellId_ = subBuilder.buildPartial(); }  continue;case 400258: subBuilder = null; if (this.iOGsmAreaCode_ != null) subBuilder = this.iOGsmAreaCode_.toBuilder();  this.iOGsmAreaCode_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOGsmAreaCode_); this.iOGsmAreaCode_ = subBuilder.buildPartial(); }  continue;case 400266: subBuilder = null; if (this.iOGsmOperator_ != null) subBuilder = this.iOGsmOperator_.toBuilder();  this.iOGsmOperator_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOGsmOperator_); this.iOGsmOperator_ = subBuilder.buildPartial(); }  continue;case 400274: subBuilder = null; if (this.iOGsmTemperature_ != null) subBuilder = this.iOGsmTemperature_.toBuilder();  this.iOGsmTemperature_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOGsmTemperature_); this.iOGsmTemperature_ = subBuilder.buildPartial(); }  continue;case 400282: subBuilder = null; if (this.iOGsmJammingStatus_ != null) subBuilder = this.iOGsmJammingStatus_.toBuilder();  this.iOGsmJammingStatus_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOGsmJammingStatus_); this.iOGsmJammingStatus_ = subBuilder.buildPartial(); }  continue;case 400322: subBuilder = null; if (this.iOExternalVoltage_ != null) subBuilder = this.iOExternalVoltage_.toBuilder();  this.iOExternalVoltage_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOExternalVoltage_); this.iOExternalVoltage_ = subBuilder.buildPartial(); }  continue;case 400330: subBuilder = null; if (this.iOBatteryVoltage_ != null) subBuilder = this.iOBatteryVoltage_.toBuilder();  this.iOBatteryVoltage_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOBatteryVoltage_); this.iOBatteryVoltage_ = subBuilder.buildPartial(); }  continue;case 400338: subBuilder = null; if (this.iOBatteryCurrent_ != null) subBuilder = this.iOBatteryCurrent_.toBuilder();  this.iOBatteryCurrent_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOBatteryCurrent_); this.iOBatteryCurrent_ = subBuilder.buildPartial(); }  continue;case 400402: subBuilder = null; if (this.iOTotalOdometer_ != null) subBuilder = this.iOTotalOdometer_.toBuilder();  this.iOTotalOdometer_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOTotalOdometer_); this.iOTotalOdometer_ = subBuilder.buildPartial(); }  continue;case 400410: subBuilder = null; if (this.iOOdometer_ != null) subBuilder = this.iOOdometer_.toBuilder();  this.iOOdometer_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOOdometer_); this.iOOdometer_ = subBuilder.buildPartial(); }  continue;case 400418: subBuilder = null; if (this.iOEngineOnTime_ != null) subBuilder = this.iOEngineOnTime_.toBuilder();  this.iOEngineOnTime_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOEngineOnTime_); this.iOEngineOnTime_ = subBuilder.buildPartial(); }  continue;case 400426: subBuilder = null; if (this.iOEngineOnTimeDelta_ != null) subBuilder = this.iOEngineOnTimeDelta_.toBuilder();  this.iOEngineOnTimeDelta_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOEngineOnTimeDelta_); this.iOEngineOnTimeDelta_ = subBuilder.buildPartial(); }  continue;case 400434: subBuilder = null; if (this.iOIdlingTime_ != null) subBuilder = this.iOIdlingTime_.toBuilder();  this.iOIdlingTime_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOIdlingTime_); this.iOIdlingTime_ = subBuilder.buildPartial(); }  continue;case 400442: subBuilder = null; if (this.iOIdlingTimeDelta_ != null) subBuilder = this.iOIdlingTimeDelta_.toBuilder();  this.iOIdlingTimeDelta_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOIdlingTimeDelta_); this.iOIdlingTimeDelta_ = subBuilder.buildPartial(); }  continue;case 400482: subBuilder = null; if (this.iOSpeedSensorSpeed_ != null) subBuilder = this.iOSpeedSensorSpeed_.toBuilder();  this.iOSpeedSensorSpeed_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOSpeedSensorSpeed_); this.iOSpeedSensorSpeed_ = subBuilder.buildPartial(); }  continue;case 400490: subBuilder = null; if (this.iOSpeedSensorDistance_ != null) subBuilder = this.iOSpeedSensorDistance_.toBuilder();  this.iOSpeedSensorDistance_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOSpeedSensorDistance_); this.iOSpeedSensorDistance_ = subBuilder.buildPartial(); }  continue;case 400498: subBuilder = null; if (this.iOSpeedSensorTotalDistance_ != null) subBuilder = this.iOSpeedSensorTotalDistance_.toBuilder();  this.iOSpeedSensorTotalDistance_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOSpeedSensorTotalDistance_); this.iOSpeedSensorTotalDistance_ = subBuilder.buildPartial(); }  continue;case 400506: subBuilder = null; if (this.iOSpeedSensorMaxSpeed_ != null) subBuilder = this.iOSpeedSensorMaxSpeed_.toBuilder();  this.iOSpeedSensorMaxSpeed_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOSpeedSensorMaxSpeed_); this.iOSpeedSensorMaxSpeed_ = subBuilder.buildPartial(); }  continue;case 400514: subBuilder = null; if (this.iOSpeedSensorGPSSpeedDiff_ != null) subBuilder = this.iOSpeedSensorGPSSpeedDiff_.toBuilder();  this.iOSpeedSensorGPSSpeedDiff_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOSpeedSensorGPSSpeedDiff_); this.iOSpeedSensorGPSSpeedDiff_ = subBuilder.buildPartial(); }  continue;case 400562: subBuilder = null; if (this.iODigitalInput1_ != null) subBuilder = this.iODigitalInput1_.toBuilder();  this.iODigitalInput1_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iODigitalInput1_); this.iODigitalInput1_ = subBuilder.buildPartial(); }  continue;case 400570: subBuilder = null; if (this.iODigitalInput2_ != null) subBuilder = this.iODigitalInput2_.toBuilder();  this.iODigitalInput2_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iODigitalInput2_); this.iODigitalInput2_ = subBuilder.buildPartial(); }  continue;case 400578: subBuilder = null; if (this.iOPowerSupply_ != null) subBuilder = this.iOPowerSupply_.toBuilder();  this.iOPowerSupply_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOPowerSupply_); this.iOPowerSupply_ = subBuilder.buildPartial(); }  continue;case 400586: subBuilder = null; if (this.iODigitalInput3_ != null) subBuilder = this.iODigitalInput3_.toBuilder();  this.iODigitalInput3_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iODigitalInput3_); this.iODigitalInput3_ = subBuilder.buildPartial(); }  continue;case 400634: subBuilder = null; if (this.iOVehicleConnection_ != null) subBuilder = this.iOVehicleConnection_.toBuilder();  this.iOVehicleConnection_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOVehicleConnection_); this.iOVehicleConnection_ = subBuilder.buildPartial(); }  continue;case 400642: subBuilder = null; if (this.iODigitalInput1Time_ != null) subBuilder = this.iODigitalInput1Time_.toBuilder();  this.iODigitalInput1Time_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iODigitalInput1Time_); this.iODigitalInput1Time_ = subBuilder.buildPartial(); }  continue;case 400650: subBuilder = null; if (this.iODigitalInput1TimeDelta_ != null) subBuilder = this.iODigitalInput1TimeDelta_.toBuilder();  this.iODigitalInput1TimeDelta_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iODigitalInput1TimeDelta_); this.iODigitalInput1TimeDelta_ = subBuilder.buildPartial(); }  continue;case 400658: subBuilder = null; if (this.iODigitalInput2Time_ != null) subBuilder = this.iODigitalInput2Time_.toBuilder();  this.iODigitalInput2Time_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iODigitalInput2Time_); this.iODigitalInput2Time_ = subBuilder.buildPartial(); }  continue;case 400666: subBuilder = null; if (this.iODigitalInput2TimeDelta_ != null) subBuilder = this.iODigitalInput2TimeDelta_.toBuilder();  this.iODigitalInput2TimeDelta_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iODigitalInput2TimeDelta_); this.iODigitalInput2TimeDelta_ = subBuilder.buildPartial(); }  continue;case 400674: subBuilder = null; if (this.iOPowerSupplyTime_ != null) subBuilder = this.iOPowerSupplyTime_.toBuilder();  this.iOPowerSupplyTime_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOPowerSupplyTime_); this.iOPowerSupplyTime_ = subBuilder.buildPartial(); }  continue;case 400682: subBuilder = null; if (this.iOPowerSupplyTimeDelta_ != null) subBuilder = this.iOPowerSupplyTimeDelta_.toBuilder();  this.iOPowerSupplyTimeDelta_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOPowerSupplyTimeDelta_); this.iOPowerSupplyTimeDelta_ = subBuilder.buildPartial(); }  continue;case 400690: subBuilder = null; if (this.iODigitalInput3Time_ != null) subBuilder = this.iODigitalInput3Time_.toBuilder();  this.iODigitalInput3Time_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iODigitalInput3Time_); this.iODigitalInput3Time_ = subBuilder.buildPartial(); }  continue;case 400698: subBuilder = null; if (this.iODigitalInput3TimeDelta_ != null) subBuilder = this.iODigitalInput3TimeDelta_.toBuilder();  this.iODigitalInput3TimeDelta_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iODigitalInput3TimeDelta_); this.iODigitalInput3TimeDelta_ = subBuilder.buildPartial(); }  continue;case 400722: subBuilder = null; if (this.iODigitalOutput1_ != null) subBuilder = this.iODigitalOutput1_.toBuilder();  this.iODigitalOutput1_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iODigitalOutput1_); this.iODigitalOutput1_ = subBuilder.buildPartial(); }  continue;case 400730: subBuilder = null; if (this.iODigitalOutput2_ != null) subBuilder = this.iODigitalOutput2_.toBuilder();  this.iODigitalOutput2_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iODigitalOutput2_); this.iODigitalOutput2_ = subBuilder.buildPartial(); }  continue;case 400802: subBuilder = null; if (this.iOAnalogInput1_ != null) subBuilder = this.iOAnalogInput1_.toBuilder();  this.iOAnalogInput1_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOAnalogInput1_); this.iOAnalogInput1_ = subBuilder.buildPartial(); }  continue;case 400810: subBuilder = null; if (this.iOAnalogInput2_ != null) subBuilder = this.iOAnalogInput2_.toBuilder();  this.iOAnalogInput2_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOAnalogInput2_); this.iOAnalogInput2_ = subBuilder.buildPartial(); }  continue;case 400818: subBuilder = null; if (this.iOAnalogInput3_ != null) subBuilder = this.iOAnalogInput3_.toBuilder();  this.iOAnalogInput3_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOAnalogInput3_); this.iOAnalogInput3_ = subBuilder.buildPartial(); }  continue;case 400882: subBuilder = null; if (this.iOAxisX_ != null) subBuilder = this.iOAxisX_.toBuilder();  this.iOAxisX_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOAxisX_); this.iOAxisX_ = subBuilder.buildPartial(); }  continue;case 400890: subBuilder = null; if (this.iOAxisY_ != null) subBuilder = this.iOAxisY_.toBuilder();  this.iOAxisY_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOAxisY_); this.iOAxisY_ = subBuilder.buildPartial(); }  continue;case 400898: subBuilder = null; if (this.iOAxisZ_ != null) subBuilder = this.iOAxisZ_.toBuilder();  this.iOAxisZ_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOAxisZ_); this.iOAxisZ_ = subBuilder.buildPartial(); }  continue;case 401202: subBuilder = null; if (this.iOECOMaxSpeed_ != null) subBuilder = this.iOECOMaxSpeed_.toBuilder();  this.iOECOMaxSpeed_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOECOMaxSpeed_); this.iOECOMaxSpeed_ = subBuilder.buildPartial(); }  continue;case 401210: subBuilder = null; if (this.iOECONormalSpeedDistance_ != null) subBuilder = this.iOECONormalSpeedDistance_.toBuilder();  this.iOECONormalSpeedDistance_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOECONormalSpeedDistance_); this.iOECONormalSpeedDistance_ = subBuilder.buildPartial(); }  continue;case 401218: subBuilder = null; if (this.iOECONormalSpeedTotalDistance_ != null) subBuilder = this.iOECONormalSpeedTotalDistance_.toBuilder();  this.iOECONormalSpeedTotalDistance_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOECONormalSpeedTotalDistance_); this.iOECONormalSpeedTotalDistance_ = subBuilder.buildPartial(); }  continue;case 401226: subBuilder = null; if (this.iOECONormalSpeedTimer_ != null) subBuilder = this.iOECONormalSpeedTimer_.toBuilder();  this.iOECONormalSpeedTimer_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOECONormalSpeedTimer_); this.iOECONormalSpeedTimer_ = subBuilder.buildPartial(); }  continue;case 401234: subBuilder = null; if (this.iOECONormalSpeedTotalTimer_ != null) subBuilder = this.iOECONormalSpeedTotalTimer_.toBuilder();  this.iOECONormalSpeedTotalTimer_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOECONormalSpeedTotalTimer_); this.iOECONormalSpeedTotalTimer_ = subBuilder.buildPartial(); }  continue;case 401242: subBuilder = null; if (this.iOECOOverSpeedingDistance_ != null) subBuilder = this.iOECOOverSpeedingDistance_.toBuilder();  this.iOECOOverSpeedingDistance_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOECOOverSpeedingDistance_); this.iOECOOverSpeedingDistance_ = subBuilder.buildPartial(); }  continue;case 401250: subBuilder = null; if (this.iOECOOverSpeedingTotalDistance_ != null) subBuilder = this.iOECOOverSpeedingTotalDistance_.toBuilder();  this.iOECOOverSpeedingTotalDistance_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOECOOverSpeedingTotalDistance_); this.iOECOOverSpeedingTotalDistance_ = subBuilder.buildPartial(); }  continue;case 401258: subBuilder = null; if (this.iOECOOverSpeedingTimer_ != null) subBuilder = this.iOECOOverSpeedingTimer_.toBuilder();  this.iOECOOverSpeedingTimer_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOECOOverSpeedingTimer_); this.iOECOOverSpeedingTimer_ = subBuilder.buildPartial(); }  continue;case 401266: subBuilder = null; if (this.iOECOOverSpeedingTotalTimer_ != null) subBuilder = this.iOECOOverSpeedingTotalTimer_.toBuilder();  this.iOECOOverSpeedingTotalTimer_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOECOOverSpeedingTotalTimer_); this.iOECOOverSpeedingTotalTimer_ = subBuilder.buildPartial(); }  continue;case 401274: subBuilder = null; if (this.iOECOMaxRPM_ != null) subBuilder = this.iOECOMaxRPM_.toBuilder();  this.iOECOMaxRPM_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOECOMaxRPM_); this.iOECOMaxRPM_ = subBuilder.buildPartial(); }  continue;case 401282: subBuilder = null; if (this.iOECORPMGreenBandDistance_ != null) subBuilder = this.iOECORPMGreenBandDistance_.toBuilder();  this.iOECORPMGreenBandDistance_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOECORPMGreenBandDistance_); this.iOECORPMGreenBandDistance_ = subBuilder.buildPartial(); }  continue;case 401290: subBuilder = null; if (this.iOECORPMGreenBandTotalDistance_ != null) subBuilder = this.iOECORPMGreenBandTotalDistance_.toBuilder();  this.iOECORPMGreenBandTotalDistance_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOECORPMGreenBandTotalDistance_); this.iOECORPMGreenBandTotalDistance_ = subBuilder.buildPartial(); }  continue;case 401298: subBuilder = null; if (this.iOECORPMGreenBandTimer_ != null) subBuilder = this.iOECORPMGreenBandTimer_.toBuilder();  this.iOECORPMGreenBandTimer_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOECORPMGreenBandTimer_); this.iOECORPMGreenBandTimer_ = subBuilder.buildPartial(); }  continue;case 401306: subBuilder = null; if (this.iOECORPMGreenBandTotalTimer_ != null) subBuilder = this.iOECORPMGreenBandTotalTimer_.toBuilder();  this.iOECORPMGreenBandTotalTimer_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOECORPMGreenBandTotalTimer_); this.iOECORPMGreenBandTotalTimer_ = subBuilder.buildPartial(); }  continue;case 401314: subBuilder = null; if (this.iOECOOverRPMDistance_ != null) subBuilder = this.iOECOOverRPMDistance_.toBuilder();  this.iOECOOverRPMDistance_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOECOOverRPMDistance_); this.iOECOOverRPMDistance_ = subBuilder.buildPartial(); }  continue;case 401322: subBuilder = null; if (this.iOECOOverRPMTotalDistance_ != null) subBuilder = this.iOECOOverRPMTotalDistance_.toBuilder();  this.iOECOOverRPMTotalDistance_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOECOOverRPMTotalDistance_); this.iOECOOverRPMTotalDistance_ = subBuilder.buildPartial(); }  continue;case 401330: subBuilder = null; if (this.iOECOOverRPMTimer_ != null) subBuilder = this.iOECOOverRPMTimer_.toBuilder();  this.iOECOOverRPMTimer_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOECOOverRPMTimer_); this.iOECOOverRPMTimer_ = subBuilder.buildPartial(); }  continue;case 401338: subBuilder = null; if (this.iOECOOverRPMTotalTimer_ != null) subBuilder = this.iOECOOverRPMTotalTimer_.toBuilder();  this.iOECOOverRPMTotalTimer_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOECOOverRPMTotalTimer_); this.iOECOOverRPMTotalTimer_ = subBuilder.buildPartial(); }  continue;case 401362: subBuilder = null; if (this.iOECOIdlingEvent_ != null) subBuilder = this.iOECOIdlingEvent_.toBuilder();  this.iOECOIdlingEvent_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOECOIdlingEvent_); this.iOECOIdlingEvent_ = subBuilder.buildPartial(); }  continue;case 401370: subBuilder = null; if (this.iOECOCruiseControlTimer_ != null) subBuilder = this.iOECOCruiseControlTimer_.toBuilder();  this.iOECOCruiseControlTimer_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOECOCruiseControlTimer_); this.iOECOCruiseControlTimer_ = subBuilder.buildPartial(); }  continue;case 401378: subBuilder = null; if (this.iOECOCruiseControlTotalTimer_ != null) subBuilder = this.iOECOCruiseControlTotalTimer_.toBuilder();  this.iOECOCruiseControlTotalTimer_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOECOCruiseControlTotalTimer_); this.iOECOCruiseControlTotalTimer_ = subBuilder.buildPartial(); }  continue;case 401386: subBuilder = null; if (this.iOECOCruiseControlDistance_ != null) subBuilder = this.iOECOCruiseControlDistance_.toBuilder();  this.iOECOCruiseControlDistance_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOECOCruiseControlDistance_); this.iOECOCruiseControlDistance_ = subBuilder.buildPartial(); }  continue;case 401394: subBuilder = null; if (this.iOECOCruiseControlTotalDistance_ != null) subBuilder = this.iOECOCruiseControlTotalDistance_.toBuilder();  this.iOECOCruiseControlTotalDistance_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOECOCruiseControlTotalDistance_); this.iOECOCruiseControlTotalDistance_ = subBuilder.buildPartial(); }  continue;case 401402: subBuilder = null; if (this.iOECOUnderRPMDistance_ != null) subBuilder = this.iOECOUnderRPMDistance_.toBuilder();  this.iOECOUnderRPMDistance_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOECOUnderRPMDistance_); this.iOECOUnderRPMDistance_ = subBuilder.buildPartial(); }  continue;case 401410: subBuilder = null; if (this.iOECOUnderRPMTotalDistance_ != null) subBuilder = this.iOECOUnderRPMTotalDistance_.toBuilder();  this.iOECOUnderRPMTotalDistance_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOECOUnderRPMTotalDistance_); this.iOECOUnderRPMTotalDistance_ = subBuilder.buildPartial(); }  continue;case 401418: subBuilder = null; if (this.iOECOUnderRPMTimer_ != null) subBuilder = this.iOECOUnderRPMTimer_.toBuilder();  this.iOECOUnderRPMTimer_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOECOUnderRPMTimer_); this.iOECOUnderRPMTimer_ = subBuilder.buildPartial(); }  continue;case 401426: subBuilder = null; if (this.iOECOUnderRPMTotalTimer_ != null) subBuilder = this.iOECOUnderRPMTotalTimer_.toBuilder();  this.iOECOUnderRPMTotalTimer_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOECOUnderRPMTotalTimer_); this.iOECOUnderRPMTotalTimer_ = subBuilder.buildPartial(); }  continue;case 401442: subBuilder = null; if (this.iOECOBreakCounter_ != null) subBuilder = this.iOECOBreakCounter_.toBuilder();  this.iOECOBreakCounter_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOECOBreakCounter_); this.iOECOBreakCounter_ = subBuilder.buildPartial(); }  continue;case 401450: subBuilder = null; if (this.iOECOHarshBreakCounter_ != null) subBuilder = this.iOECOHarshBreakCounter_.toBuilder();  this.iOECOHarshBreakCounter_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOECOHarshBreakCounter_); this.iOECOHarshBreakCounter_ = subBuilder.buildPartial(); }  continue;case 401458: subBuilder = null; if (this.iOECOExtremeBreakCounter_ != null) subBuilder = this.iOECOExtremeBreakCounter_.toBuilder();  this.iOECOExtremeBreakCounter_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOECOExtremeBreakCounter_); this.iOECOExtremeBreakCounter_ = subBuilder.buildPartial(); }  continue;case 401466: subBuilder = null; if (this.iOECOHarshAccelerationCounter_ != null) subBuilder = this.iOECOHarshAccelerationCounter_.toBuilder();  this.iOECOHarshAccelerationCounter_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOECOHarshAccelerationCounter_); this.iOECOHarshAccelerationCounter_ = subBuilder.buildPartial(); }  continue;case 401474: subBuilder = null; if (this.iOECOCorneringCounter_ != null) subBuilder = this.iOECOCorneringCounter_.toBuilder();  this.iOECOCorneringCounter_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOECOCorneringCounter_); this.iOECOCorneringCounter_ = subBuilder.buildPartial(); }  continue;case 401482: subBuilder = null; if (this.iOECOTotalBreak_ != null) subBuilder = this.iOECOTotalBreak_.toBuilder();  this.iOECOTotalBreak_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOECOTotalBreak_); this.iOECOTotalBreak_ = subBuilder.buildPartial(); }  continue;case 401490: subBuilder = null; if (this.iOECOTotalHarshBreak_ != null) subBuilder = this.iOECOTotalHarshBreak_.toBuilder();  this.iOECOTotalHarshBreak_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOECOTotalHarshBreak_); this.iOECOTotalHarshBreak_ = subBuilder.buildPartial(); }  continue;case 401498: subBuilder = null; if (this.iOECOTotalExtremeBreak_ != null) subBuilder = this.iOECOTotalExtremeBreak_.toBuilder();  this.iOECOTotalExtremeBreak_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOECOTotalExtremeBreak_); this.iOECOTotalExtremeBreak_ = subBuilder.buildPartial(); }  continue;case 401506: subBuilder = null; if (this.iOECOTotalHarshAcceleration_ != null) subBuilder = this.iOECOTotalHarshAcceleration_.toBuilder();  this.iOECOTotalHarshAcceleration_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOECOTotalHarshAcceleration_); this.iOECOTotalHarshAcceleration_ = subBuilder.buildPartial(); }  continue;case 401514: subBuilder = null; if (this.iOECOTotalCornering_ != null) subBuilder = this.iOECOTotalCornering_.toBuilder();  this.iOECOTotalCornering_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOECOTotalCornering_); this.iOECOTotalCornering_ = subBuilder.buildPartial(); }  continue;case 402402: subBuilder = null; if (this.iOTrip_ != null) subBuilder = this.iOTrip_.toBuilder();  this.iOTrip_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOTrip_); this.iOTrip_ = subBuilder.buildPartial(); }  continue;case 402410: subBuilder = null; if (this.iOTripTime_ != null) subBuilder = this.iOTripTime_.toBuilder();  this.iOTripTime_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOTripTime_); this.iOTripTime_ = subBuilder.buildPartial(); }  continue;case 402418: subBuilder = null; if (this.iOTripDistance_ != null) subBuilder = this.iOTripDistance_.toBuilder();  this.iOTripDistance_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOTripDistance_); this.iOTripDistance_ = subBuilder.buildPartial(); }  continue;case 402802: subBuilder = null; if (this.iODriverID_ != null) subBuilder = this.iODriverID_.toBuilder();  this.iODriverID_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iODriverID_); this.iODriverID_ = subBuilder.buildPartial(); }  continue;case 403202: subBuilder = null; if (this.iOTemperatureSensor1_ != null) subBuilder = this.iOTemperatureSensor1_.toBuilder();  this.iOTemperatureSensor1_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOTemperatureSensor1_); this.iOTemperatureSensor1_ = subBuilder.buildPartial(); }  continue;case 403210: subBuilder = null; if (this.iOTemperatureSensor1ID_ != null) subBuilder = this.iOTemperatureSensor1ID_.toBuilder();  this.iOTemperatureSensor1ID_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOTemperatureSensor1ID_); this.iOTemperatureSensor1ID_ = subBuilder.buildPartial(); }  continue;case 403218: subBuilder = null; if (this.iOTemperatureSensor2_ != null) subBuilder = this.iOTemperatureSensor2_.toBuilder();  this.iOTemperatureSensor2_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOTemperatureSensor2_); this.iOTemperatureSensor2_ = subBuilder.buildPartial(); }  continue;case 403226: subBuilder = null; if (this.iOTemperatureSensor2ID_ != null) subBuilder = this.iOTemperatureSensor2ID_.toBuilder();  this.iOTemperatureSensor2ID_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOTemperatureSensor2ID_); this.iOTemperatureSensor2ID_ = subBuilder.buildPartial(); }  continue;case 403234: subBuilder = null; if (this.iOTemperatureSensor3_ != null) subBuilder = this.iOTemperatureSensor3_.toBuilder();  this.iOTemperatureSensor3_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOTemperatureSensor3_); this.iOTemperatureSensor3_ = subBuilder.buildPartial(); }  continue;case 403242: subBuilder = null; if (this.iOTemperatureSensor3ID_ != null) subBuilder = this.iOTemperatureSensor3ID_.toBuilder();  this.iOTemperatureSensor3ID_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOTemperatureSensor3ID_); this.iOTemperatureSensor3ID_ = subBuilder.buildPartial(); }  continue;case 403282: subBuilder = null; if (this.iOHumiditySensor1_ != null) subBuilder = this.iOHumiditySensor1_.toBuilder();  this.iOHumiditySensor1_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOHumiditySensor1_); this.iOHumiditySensor1_ = subBuilder.buildPartial(); }  continue;case 403922: subBuilder = null; if (this.iOTiltStatus_ != null) subBuilder = this.iOTiltStatus_.toBuilder();  this.iOTiltStatus_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOTiltStatus_); this.iOTiltStatus_ = subBuilder.buildPartial(); }  continue;case 404002: subBuilder = null; if (this.iOOBDEngineRPM_ != null) subBuilder = this.iOOBDEngineRPM_.toBuilder();  this.iOOBDEngineRPM_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOOBDEngineRPM_); this.iOOBDEngineRPM_ = subBuilder.buildPartial(); }  continue;case 404010: subBuilder = null; if (this.iOOBDBatteryVoltage_ != null) subBuilder = this.iOOBDBatteryVoltage_.toBuilder();  this.iOOBDBatteryVoltage_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOOBDBatteryVoltage_); this.iOOBDBatteryVoltage_ = subBuilder.buildPartial(); }  continue;case 404018: subBuilder = null; if (this.iOOBDEngineCoolantTemperature_ != null) subBuilder = this.iOOBDEngineCoolantTemperature_.toBuilder();  this.iOOBDEngineCoolantTemperature_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOOBDEngineCoolantTemperature_); this.iOOBDEngineCoolantTemperature_ = subBuilder.buildPartial(); }  continue;case 404026: subBuilder = null; if (this.iOOBDVehicleSpeed_ != null) subBuilder = this.iOOBDVehicleSpeed_.toBuilder();  this.iOOBDVehicleSpeed_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOOBDVehicleSpeed_); this.iOOBDVehicleSpeed_ = subBuilder.buildPartial(); }  continue;case 404034: subBuilder = null; if (this.iOOBDTotalDistance_ != null) subBuilder = this.iOOBDTotalDistance_.toBuilder();  this.iOOBDTotalDistance_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOOBDTotalDistance_); this.iOOBDTotalDistance_ = subBuilder.buildPartial(); }  continue;case 404042: subBuilder = null; if (this.iOOBDFuelRate_ != null) subBuilder = this.iOOBDFuelRate_.toBuilder();  this.iOOBDFuelRate_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOOBDFuelRate_); this.iOOBDFuelRate_ = subBuilder.buildPartial(); }  continue;case 404050: subBuilder = null; if (this.iOOBDTotalFuelUsed_ != null) subBuilder = this.iOOBDTotalFuelUsed_.toBuilder();  this.iOOBDTotalFuelUsed_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOOBDTotalFuelUsed_); this.iOOBDTotalFuelUsed_ = subBuilder.buildPartial(); }  continue;case 404058: subBuilder = null; if (this.iOOBDIntakeAirTemperature_ != null) subBuilder = this.iOOBDIntakeAirTemperature_.toBuilder();  this.iOOBDIntakeAirTemperature_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOOBDIntakeAirTemperature_); this.iOOBDIntakeAirTemperature_ = subBuilder.buildPartial(); }  continue;case 404066: subBuilder = null; if (this.iOOBDIntakeManifoldAbsolutePressure_ != null) subBuilder = this.iOOBDIntakeManifoldAbsolutePressure_.toBuilder();  this.iOOBDIntakeManifoldAbsolutePressure_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOOBDIntakeManifoldAbsolutePressure_); this.iOOBDIntakeManifoldAbsolutePressure_ = subBuilder.buildPartial(); }  continue;case 404402: subBuilder = null; if (this.iOOBDMalfunctionIndicatorLamp_ != null) subBuilder = this.iOOBDMalfunctionIndicatorLamp_.toBuilder();  this.iOOBDMalfunctionIndicatorLamp_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOOBDMalfunctionIndicatorLamp_); this.iOOBDMalfunctionIndicatorLamp_ = subBuilder.buildPartial(); }  continue;case 404410: subBuilder = null; if (this.iODiagnosticTroubleCodesCount_ != null) subBuilder = this.iODiagnosticTroubleCodesCount_.toBuilder();  this.iODiagnosticTroubleCodesCount_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iODiagnosticTroubleCodesCount_); this.iODiagnosticTroubleCodesCount_ = subBuilder.buildPartial(); }  continue;case 404418: subBuilder = null; if (this.iOOBDCalculatedEngineLoad_ != null) subBuilder = this.iOOBDCalculatedEngineLoad_.toBuilder();  this.iOOBDCalculatedEngineLoad_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOOBDCalculatedEngineLoad_); this.iOOBDCalculatedEngineLoad_ = subBuilder.buildPartial(); }  continue;case 404426: subBuilder = null; if (this.iOOBDMassAirFlowRate_ != null) subBuilder = this.iOOBDMassAirFlowRate_.toBuilder();  this.iOOBDMassAirFlowRate_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOOBDMassAirFlowRate_); this.iOOBDMassAirFlowRate_ = subBuilder.buildPartial(); }  continue;case 404434: subBuilder = null; if (this.iOOBDThrottlePosition_ != null) subBuilder = this.iOOBDThrottlePosition_.toBuilder();  this.iOOBDThrottlePosition_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOOBDThrottlePosition_); this.iOOBDThrottlePosition_ = subBuilder.buildPartial(); }  continue;case 404442: subBuilder = null; if (this.iOOBDRunTimeSinceEngineStart_ != null) subBuilder = this.iOOBDRunTimeSinceEngineStart_.toBuilder();  this.iOOBDRunTimeSinceEngineStart_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOOBDRunTimeSinceEngineStart_); this.iOOBDRunTimeSinceEngineStart_ = subBuilder.buildPartial(); }  continue;case 404450: subBuilder = null; if (this.iOOBDFuelTankLevelInput_ != null) subBuilder = this.iOOBDFuelTankLevelInput_.toBuilder();  this.iOOBDFuelTankLevelInput_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOOBDFuelTankLevelInput_); this.iOOBDFuelTankLevelInput_ = subBuilder.buildPartial(); }  continue;case 404458: subBuilder = null; if (this.iOOBDDistanceTraveledSinceCodesCleared_ != null) subBuilder = this.iOOBDDistanceTraveledSinceCodesCleared_.toBuilder();  this.iOOBDDistanceTraveledSinceCodesCleared_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOOBDDistanceTraveledSinceCodesCleared_); this.iOOBDDistanceTraveledSinceCodesCleared_ = subBuilder.buildPartial(); }  continue;case 404466: subBuilder = null; if (this.iOOBDAbsoluteThrottlePositionD_ != null) subBuilder = this.iOOBDAbsoluteThrottlePositionD_.toBuilder();  this.iOOBDAbsoluteThrottlePositionD_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOOBDAbsoluteThrottlePositionD_); this.iOOBDAbsoluteThrottlePositionD_ = subBuilder.buildPartial(); }  continue;case 404474: subBuilder = null; if (this.iOOBDTimeRunWithMILOn_ != null) subBuilder = this.iOOBDTimeRunWithMILOn_.toBuilder();  this.iOOBDTimeRunWithMILOn_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOOBDTimeRunWithMILOn_); this.iOOBDTimeRunWithMILOn_ = subBuilder.buildPartial(); }  continue;case 404482: subBuilder = null; if (this.iOOBDEngineOilTemperature_ != null) subBuilder = this.iOOBDEngineOilTemperature_.toBuilder();  this.iOOBDEngineOilTemperature_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOOBDEngineOilTemperature_); this.iOOBDEngineOilTemperature_ = subBuilder.buildPartial(); }  continue;case 404490: subBuilder = null; if (this.iOOBDFuelSystem1Status_ != null) subBuilder = this.iOOBDFuelSystem1Status_.toBuilder();  this.iOOBDFuelSystem1Status_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOOBDFuelSystem1Status_); this.iOOBDFuelSystem1Status_ = subBuilder.buildPartial(); }  continue;case 404498: subBuilder = null; if (this.iOOBDFuelSystem2Status_ != null) subBuilder = this.iOOBDFuelSystem2Status_.toBuilder();  this.iOOBDFuelSystem2Status_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOOBDFuelSystem2Status_); this.iOOBDFuelSystem2Status_ = subBuilder.buildPartial(); }  continue;case 404506: subBuilder = null; if (this.iOOBDOxygenSensor1Voltage_ != null) subBuilder = this.iOOBDOxygenSensor1Voltage_.toBuilder();  this.iOOBDOxygenSensor1Voltage_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOOBDOxygenSensor1Voltage_); this.iOOBDOxygenSensor1Voltage_ = subBuilder.buildPartial(); }  continue;case 404514: subBuilder = null; if (this.iOOBDOxygenSensor1ShortTermFuelTrim_ != null) subBuilder = this.iOOBDOxygenSensor1ShortTermFuelTrim_.toBuilder();  this.iOOBDOxygenSensor1ShortTermFuelTrim_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOOBDOxygenSensor1ShortTermFuelTrim_); this.iOOBDOxygenSensor1ShortTermFuelTrim_ = subBuilder.buildPartial(); }  continue;case 404522: subBuilder = null; if (this.iOOBDOxygenSensor2Voltage_ != null) subBuilder = this.iOOBDOxygenSensor2Voltage_.toBuilder();  this.iOOBDOxygenSensor2Voltage_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOOBDOxygenSensor2Voltage_); this.iOOBDOxygenSensor2Voltage_ = subBuilder.buildPartial(); }  continue;case 404530: subBuilder = null; if (this.iOOBDOxygenSensor2ShortTermFuelTrim_ != null) subBuilder = this.iOOBDOxygenSensor2ShortTermFuelTrim_.toBuilder();  this.iOOBDOxygenSensor2ShortTermFuelTrim_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOOBDOxygenSensor2ShortTermFuelTrim_); this.iOOBDOxygenSensor2ShortTermFuelTrim_ = subBuilder.buildPartial(); }  continue;case 404538: subBuilder = null; if (this.iOOBDOxygenSensor3Voltage_ != null) subBuilder = this.iOOBDOxygenSensor3Voltage_.toBuilder();  this.iOOBDOxygenSensor3Voltage_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOOBDOxygenSensor3Voltage_); this.iOOBDOxygenSensor3Voltage_ = subBuilder.buildPartial(); }  continue;case 404546: subBuilder = null; if (this.iOOBDOxygenSensor3ShortTermFuelTrim_ != null) subBuilder = this.iOOBDOxygenSensor3ShortTermFuelTrim_.toBuilder();  this.iOOBDOxygenSensor3ShortTermFuelTrim_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOOBDOxygenSensor3ShortTermFuelTrim_); this.iOOBDOxygenSensor3ShortTermFuelTrim_ = subBuilder.buildPartial(); }  continue;case 404554: subBuilder = null; if (this.iOOBDOxygenSensor4Voltage_ != null) subBuilder = this.iOOBDOxygenSensor4Voltage_.toBuilder();  this.iOOBDOxygenSensor4Voltage_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOOBDOxygenSensor4Voltage_); this.iOOBDOxygenSensor4Voltage_ = subBuilder.buildPartial(); }  continue;case 404562: subBuilder = null; if (this.iOOBDOxygenSensor4ShortTermFuelTrim_ != null) subBuilder = this.iOOBDOxygenSensor4ShortTermFuelTrim_.toBuilder();  this.iOOBDOxygenSensor4ShortTermFuelTrim_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOOBDOxygenSensor4ShortTermFuelTrim_); this.iOOBDOxygenSensor4ShortTermFuelTrim_ = subBuilder.buildPartial(); }  continue;case 405602: subBuilder = null; if (this.iOCANBusTachograph1WorkingState1_ != null) subBuilder = this.iOCANBusTachograph1WorkingState1_.toBuilder();  this.iOCANBusTachograph1WorkingState1_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOCANBusTachograph1WorkingState1_); this.iOCANBusTachograph1WorkingState1_ = subBuilder.buildPartial(); }  continue;case 405610: subBuilder = null; if (this.iOCANBusTachograph1WorkingState2_ != null) subBuilder = this.iOCANBusTachograph1WorkingState2_.toBuilder();  this.iOCANBusTachograph1WorkingState2_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOCANBusTachograph1WorkingState2_); this.iOCANBusTachograph1WorkingState2_ = subBuilder.buildPartial(); }  continue;case 405618: subBuilder = null; if (this.iOCANBusTachograph1VehicleMotion_ != null) subBuilder = this.iOCANBusTachograph1VehicleMotion_.toBuilder();  this.iOCANBusTachograph1VehicleMotion_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOCANBusTachograph1VehicleMotion_); this.iOCANBusTachograph1VehicleMotion_ = subBuilder.buildPartial(); }  continue;case 405626: subBuilder = null; if (this.iOCANBusTachograph1Driv1TimeRelStates_ != null) subBuilder = this.iOCANBusTachograph1Driv1TimeRelStates_.toBuilder();  this.iOCANBusTachograph1Driv1TimeRelStates_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOCANBusTachograph1Driv1TimeRelStates_); this.iOCANBusTachograph1Driv1TimeRelStates_ = subBuilder.buildPartial(); }  continue;case 405634: subBuilder = null; if (this.iOCANBusTachograph1Driver1Card_ != null) subBuilder = this.iOCANBusTachograph1Driver1Card_.toBuilder();  this.iOCANBusTachograph1Driver1Card_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOCANBusTachograph1Driver1Card_); this.iOCANBusTachograph1Driver1Card_ = subBuilder.buildPartial(); }  continue;case 405642: subBuilder = null; if (this.iOCANBusTachograph1VehicleOverspeed_ != null) subBuilder = this.iOCANBusTachograph1VehicleOverspeed_.toBuilder();  this.iOCANBusTachograph1VehicleOverspeed_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOCANBusTachograph1VehicleOverspeed_); this.iOCANBusTachograph1VehicleOverspeed_ = subBuilder.buildPartial(); }  continue;case 405650: subBuilder = null; if (this.iOCANBusTachograph1Driv2TimeRelStates_ != null) subBuilder = this.iOCANBusTachograph1Driv2TimeRelStates_.toBuilder();  this.iOCANBusTachograph1Driv2TimeRelStates_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOCANBusTachograph1Driv2TimeRelStates_); this.iOCANBusTachograph1Driv2TimeRelStates_ = subBuilder.buildPartial(); }  continue;case 405658: subBuilder = null; if (this.iOCANBusTachograph1Driver2Card_ != null) subBuilder = this.iOCANBusTachograph1Driver2Card_.toBuilder();  this.iOCANBusTachograph1Driver2Card_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOCANBusTachograph1Driver2Card_); this.iOCANBusTachograph1Driver2Card_ = subBuilder.buildPartial(); }  continue;case 405666: subBuilder = null; if (this.iOCANBusTachograph1SystemEvent_ != null) subBuilder = this.iOCANBusTachograph1SystemEvent_.toBuilder();  this.iOCANBusTachograph1SystemEvent_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOCANBusTachograph1SystemEvent_); this.iOCANBusTachograph1SystemEvent_ = subBuilder.buildPartial(); }  continue;case 405674: subBuilder = null; if (this.iOCANBusTachograph1HandlingInformation_ != null) subBuilder = this.iOCANBusTachograph1HandlingInformation_.toBuilder();  this.iOCANBusTachograph1HandlingInformation_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOCANBusTachograph1HandlingInformation_); this.iOCANBusTachograph1HandlingInformation_ = subBuilder.buildPartial(); }  continue;case 405682: subBuilder = null; if (this.iOCANBusTachograph1TachographPerformance_ != null) subBuilder = this.iOCANBusTachograph1TachographPerformance_.toBuilder();  this.iOCANBusTachograph1TachographPerformance_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOCANBusTachograph1TachographPerformance_); this.iOCANBusTachograph1TachographPerformance_ = subBuilder.buildPartial(); }  continue;case 405690: subBuilder = null; if (this.iOCANBusTachograph1DirectionIndicator_ != null) subBuilder = this.iOCANBusTachograph1DirectionIndicator_.toBuilder();  this.iOCANBusTachograph1DirectionIndicator_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOCANBusTachograph1DirectionIndicator_); this.iOCANBusTachograph1DirectionIndicator_ = subBuilder.buildPartial(); }  continue;case 405698: subBuilder = null; if (this.iOCANBusTachograph1VehicleSpeed_ != null) subBuilder = this.iOCANBusTachograph1VehicleSpeed_.toBuilder();  this.iOCANBusTachograph1VehicleSpeed_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOCANBusTachograph1VehicleSpeed_); this.iOCANBusTachograph1VehicleSpeed_ = subBuilder.buildPartial(); }  continue;case 405706: subBuilder = null; if (this.iOCANBusEngineTemperature1EngineCoolantTemperature_ != null) subBuilder = this.iOCANBusEngineTemperature1EngineCoolantTemperature_.toBuilder();  this.iOCANBusEngineTemperature1EngineCoolantTemperature_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOCANBusEngineTemperature1EngineCoolantTemperature_); this.iOCANBusEngineTemperature1EngineCoolantTemperature_ = subBuilder.buildPartial(); }  continue;case 405714: subBuilder = null; if (this.iOCANBusElectronicEngineController1ActualEnginePercent_ != null) subBuilder = this.iOCANBusElectronicEngineController1ActualEnginePercent_.toBuilder();  this.iOCANBusElectronicEngineController1ActualEnginePercent_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOCANBusElectronicEngineController1ActualEnginePercent_); this.iOCANBusElectronicEngineController1ActualEnginePercent_ = subBuilder.buildPartial(); }  continue;case 405722: subBuilder = null; if (this.iOCANBusElectronicEngineController1EngineSpeed_ != null) subBuilder = this.iOCANBusElectronicEngineController1EngineSpeed_.toBuilder();  this.iOCANBusElectronicEngineController1EngineSpeed_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOCANBusElectronicEngineController1EngineSpeed_); this.iOCANBusElectronicEngineController1EngineSpeed_ = subBuilder.buildPartial(); }  continue;case 405730: subBuilder = null; if (this.iOCANBusEngineHoursEngineTotalHours_ != null) subBuilder = this.iOCANBusEngineHoursEngineTotalHours_.toBuilder();  this.iOCANBusEngineHoursEngineTotalHours_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOCANBusEngineHoursEngineTotalHours_); this.iOCANBusEngineHoursEngineTotalHours_ = subBuilder.buildPartial(); }  continue;case 405738: subBuilder = null; if (this.iOCANBusVehicleDistanceTotalVehicleDistance_ != null) subBuilder = this.iOCANBusVehicleDistanceTotalVehicleDistance_.toBuilder();  this.iOCANBusVehicleDistanceTotalVehicleDistance_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOCANBusVehicleDistanceTotalVehicleDistance_); this.iOCANBusVehicleDistanceTotalVehicleDistance_ = subBuilder.buildPartial(); }  continue;case 405746: subBuilder = null; if (this.iOCANBusHighResolutionFuelConsumptionTotalFuelUsed_ != null) subBuilder = this.iOCANBusHighResolutionFuelConsumptionTotalFuelUsed_.toBuilder();  this.iOCANBusHighResolutionFuelConsumptionTotalFuelUsed_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOCANBusHighResolutionFuelConsumptionTotalFuelUsed_); this.iOCANBusHighResolutionFuelConsumptionTotalFuelUsed_ = subBuilder.buildPartial(); }  continue;case 405754: subBuilder = null; if (this.iOCANBusDashDisplayFuelLevel1_ != null) subBuilder = this.iOCANBusDashDisplayFuelLevel1_.toBuilder();  this.iOCANBusDashDisplayFuelLevel1_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOCANBusDashDisplayFuelLevel1_); this.iOCANBusDashDisplayFuelLevel1_ = subBuilder.buildPartial(); }  continue;case 405762: subBuilder = null; if (this.iOCANBusAmbientConditionsAmbientAirTemperature_ != null) subBuilder = this.iOCANBusAmbientConditionsAmbientAirTemperature_.toBuilder();  this.iOCANBusAmbientConditionsAmbientAirTemperature_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOCANBusAmbientConditionsAmbientAirTemperature_); this.iOCANBusAmbientConditionsAmbientAirTemperature_ = subBuilder.buildPartial(); }  continue;case 405770: subBuilder = null; if (this.iOCANBusFuelEconomyFuelRate_ != null) subBuilder = this.iOCANBusFuelEconomyFuelRate_.toBuilder();  this.iOCANBusFuelEconomyFuelRate_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOCANBusFuelEconomyFuelRate_); this.iOCANBusFuelEconomyFuelRate_ = subBuilder.buildPartial(); }  continue;case 405778: subBuilder = null; if (this.iOCANBusFuelEconomyInstantaneousFuelEconomy_ != null) subBuilder = this.iOCANBusFuelEconomyInstantaneousFuelEconomy_.toBuilder();  this.iOCANBusFuelEconomyInstantaneousFuelEconomy_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOCANBusFuelEconomyInstantaneousFuelEconomy_); this.iOCANBusFuelEconomyInstantaneousFuelEconomy_ = subBuilder.buildPartial(); }  continue;case 405786: subBuilder = null; if (this.iOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit1_ != null) subBuilder = this.iOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit1_.toBuilder();  this.iOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit1_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit1_); this.iOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit1_ = subBuilder.buildPartial(); }  continue;case 405794: subBuilder = null; if (this.iOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit2_ != null) subBuilder = this.iOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit2_.toBuilder();  this.iOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit2_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit2_); this.iOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit2_ = subBuilder.buildPartial(); }  continue;case 405802: subBuilder = null; if (this.iOCANBusAftertreatmentDieselExhaustFluidTankInformationTank1Level_ != null) subBuilder = this.iOCANBusAftertreatmentDieselExhaustFluidTankInformationTank1Level_.toBuilder();  this.iOCANBusAftertreatmentDieselExhaustFluidTankInformationTank1Level_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOCANBusAftertreatmentDieselExhaustFluidTankInformationTank1Level_); this.iOCANBusAftertreatmentDieselExhaustFluidTankInformationTank1Level_ = subBuilder.buildPartial(); }  continue;case 405938: subBuilder = null; if (this.iOCANBusTruckBusElectronicEngineController2AcceleratorPedalPosition1_ != null) subBuilder = this.iOCANBusTruckBusElectronicEngineController2AcceleratorPedalPosition1_.toBuilder();  this.iOCANBusTruckBusElectronicEngineController2AcceleratorPedalPosition1_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOCANBusTruckBusElectronicEngineController2AcceleratorPedalPosition1_); this.iOCANBusTruckBusElectronicEngineController2AcceleratorPedalPosition1_ = subBuilder.buildPartial(); }  continue;case 405946: subBuilder = null; if (this.iOCANBusTruckBusElectronicEngineController2EnginePercentLoad_ != null) subBuilder = this.iOCANBusTruckBusElectronicEngineController2EnginePercentLoad_.toBuilder();  this.iOCANBusTruckBusElectronicEngineController2EnginePercentLoad_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOCANBusTruckBusElectronicEngineController2EnginePercentLoad_); this.iOCANBusTruckBusElectronicEngineController2EnginePercentLoad_ = subBuilder.buildPartial(); }  continue;case 405954: subBuilder = null; if (this.iOCANBusTruckVehicleWeightAxleWeight1_ != null) subBuilder = this.iOCANBusTruckVehicleWeightAxleWeight1_.toBuilder();  this.iOCANBusTruckVehicleWeightAxleWeight1_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOCANBusTruckVehicleWeightAxleWeight1_); this.iOCANBusTruckVehicleWeightAxleWeight1_ = subBuilder.buildPartial(); }  continue;case 405962: subBuilder = null; if (this.iOCANBusTruckVehicleWeightAxleWeight2_ != null) subBuilder = this.iOCANBusTruckVehicleWeightAxleWeight2_.toBuilder();  this.iOCANBusTruckVehicleWeightAxleWeight2_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOCANBusTruckVehicleWeightAxleWeight2_); this.iOCANBusTruckVehicleWeightAxleWeight2_ = subBuilder.buildPartial(); }  continue;case 405970: subBuilder = null; if (this.iOCANBusTruckVehicleWeightAxleWeight3_ != null) subBuilder = this.iOCANBusTruckVehicleWeightAxleWeight3_.toBuilder();  this.iOCANBusTruckVehicleWeightAxleWeight3_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOCANBusTruckVehicleWeightAxleWeight3_); this.iOCANBusTruckVehicleWeightAxleWeight3_ = subBuilder.buildPartial(); }  continue;case 405978: subBuilder = null; if (this.iOCANBusTruckServiceInformationServiceDistance_ != null) subBuilder = this.iOCANBusTruckServiceInformationServiceDistance_.toBuilder();  this.iOCANBusTruckServiceInformationServiceDistance_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOCANBusTruckServiceInformationServiceDistance_); this.iOCANBusTruckServiceInformationServiceDistance_ = subBuilder.buildPartial(); }  continue;case 405986: subBuilder = null; if (this.iOCANBusTruckPTODriveEngagementPTOEngageStat_ != null) subBuilder = this.iOCANBusTruckPTODriveEngagementPTOEngageStat_.toBuilder();  this.iOCANBusTruckPTODriveEngagementPTOEngageStat_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOCANBusTruckPTODriveEngagementPTOEngageStat_); this.iOCANBusTruckPTODriveEngagementPTOEngageStat_ = subBuilder.buildPartial(); }  continue;case 405994: subBuilder = null; if (this.iOCANBusTruckCombinationVehicleWeightGrossCombinationVehicleWeight_ != null) subBuilder = this.iOCANBusTruckCombinationVehicleWeightGrossCombinationVehicleWeight_.toBuilder();  this.iOCANBusTruckCombinationVehicleWeightGrossCombinationVehicleWeight_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOCANBusTruckCombinationVehicleWeightGrossCombinationVehicleWeight_); this.iOCANBusTruckCombinationVehicleWeightGrossCombinationVehicleWeight_ = subBuilder.buildPartial(); }  continue;case 406002: subBuilder = null; if (this.iOCANBusTruckBusElectronicRetarderController1RetarderTorqueMode_ != null) subBuilder = this.iOCANBusTruckBusElectronicRetarderController1RetarderTorqueMode_.toBuilder();  this.iOCANBusTruckBusElectronicRetarderController1RetarderTorqueMode_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOCANBusTruckBusElectronicRetarderController1RetarderTorqueMode_); this.iOCANBusTruckBusElectronicRetarderController1RetarderTorqueMode_ = subBuilder.buildPartial(); }  continue;case 406010: subBuilder = null; if (this.iOCANBusTruckBusElectronicRetarderController1RetarderSelection_ != null) subBuilder = this.iOCANBusTruckBusElectronicRetarderController1RetarderSelection_.toBuilder();  this.iOCANBusTruckBusElectronicRetarderController1RetarderSelection_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOCANBusTruckBusElectronicRetarderController1RetarderSelection_); this.iOCANBusTruckBusElectronicRetarderController1RetarderSelection_ = subBuilder.buildPartial(); }  continue;case 406018: subBuilder = null; if (this.iOCANBusBusDoorControl1DoorPosition_ != null) subBuilder = this.iOCANBusBusDoorControl1DoorPosition_.toBuilder();  this.iOCANBusBusDoorControl1DoorPosition_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOCANBusBusDoorControl1DoorPosition_); this.iOCANBusBusDoorControl1DoorPosition_ = subBuilder.buildPartial(); }  continue;case 406026: subBuilder = null; if (this.iOCANBusBusDoorControl1RampWheelChairlift_ != null) subBuilder = this.iOCANBusBusDoorControl1RampWheelChairlift_.toBuilder();  this.iOCANBusBusDoorControl1RampWheelChairlift_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOCANBusBusDoorControl1RampWheelChairlift_); this.iOCANBusBusDoorControl1RampWheelChairlift_ = subBuilder.buildPartial(); }  continue;case 406034: subBuilder = null; if (this.iOCANBusBusDoorControl1DoorsStatus2_ != null) subBuilder = this.iOCANBusBusDoorControl1DoorsStatus2_.toBuilder();  this.iOCANBusBusDoorControl1DoorsStatus2_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOCANBusBusDoorControl1DoorsStatus2_); this.iOCANBusBusDoorControl1DoorsStatus2_ = subBuilder.buildPartial(); }  continue;case 406042: subBuilder = null; if (this.iOCANBusBusDoorControl2_ != null) subBuilder = this.iOCANBusBusDoorControl2_.toBuilder();  this.iOCANBusBusDoorControl2_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOCANBusBusDoorControl2_); this.iOCANBusBusDoorControl2_ = subBuilder.buildPartial(); }  continue;case 406050: subBuilder = null; if (this.iOCANBusBrakeLiningRemainingAxleFrontLeftWheel_ != null) subBuilder = this.iOCANBusBrakeLiningRemainingAxleFrontLeftWheel_.toBuilder();  this.iOCANBusBrakeLiningRemainingAxleFrontLeftWheel_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOCANBusBrakeLiningRemainingAxleFrontLeftWheel_); this.iOCANBusBrakeLiningRemainingAxleFrontLeftWheel_ = subBuilder.buildPartial(); }  continue;case 406058: subBuilder = null; if (this.iOCANBusBrakeLiningRemainingAxleFrontRightWheel_ != null) subBuilder = this.iOCANBusBrakeLiningRemainingAxleFrontRightWheel_.toBuilder();  this.iOCANBusBrakeLiningRemainingAxleFrontRightWheel_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOCANBusBrakeLiningRemainingAxleFrontRightWheel_); this.iOCANBusBrakeLiningRemainingAxleFrontRightWheel_ = subBuilder.buildPartial(); }  continue;case 406066: subBuilder = null; if (this.iOCANBusBrakeLiningRemainingAxleRear1LeftWheel_ != null) subBuilder = this.iOCANBusBrakeLiningRemainingAxleRear1LeftWheel_.toBuilder();  this.iOCANBusBrakeLiningRemainingAxleRear1LeftWheel_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOCANBusBrakeLiningRemainingAxleRear1LeftWheel_); this.iOCANBusBrakeLiningRemainingAxleRear1LeftWheel_ = subBuilder.buildPartial(); }  continue;case 406074: subBuilder = null; if (this.iOCANBusBrakeLiningRemainingAxleRear1RightWheel_ != null) subBuilder = this.iOCANBusBrakeLiningRemainingAxleRear1RightWheel_.toBuilder();  this.iOCANBusBrakeLiningRemainingAxleRear1RightWheel_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOCANBusBrakeLiningRemainingAxleRear1RightWheel_); this.iOCANBusBrakeLiningRemainingAxleRear1RightWheel_ = subBuilder.buildPartial(); }  continue;case 406082: subBuilder = null; if (this.iOCANBusBrakeLiningRemainingAxleRear2LeftWheel_ != null) subBuilder = this.iOCANBusBrakeLiningRemainingAxleRear2LeftWheel_.toBuilder();  this.iOCANBusBrakeLiningRemainingAxleRear2LeftWheel_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOCANBusBrakeLiningRemainingAxleRear2LeftWheel_); this.iOCANBusBrakeLiningRemainingAxleRear2LeftWheel_ = subBuilder.buildPartial(); }  continue;case 406090: subBuilder = null; if (this.iOCANBusBrakeLiningRemainingAxleRear2RightWheel_ != null) subBuilder = this.iOCANBusBrakeLiningRemainingAxleRear2RightWheel_.toBuilder();  this.iOCANBusBrakeLiningRemainingAxleRear2RightWheel_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOCANBusBrakeLiningRemainingAxleRear2RightWheel_); this.iOCANBusBrakeLiningRemainingAxleRear2RightWheel_ = subBuilder.buildPartial(); }  continue;case 406098: subBuilder = null; if (this.iOCANBusBrakeLiningRemainingAxleRear3LeftWheel_ != null) subBuilder = this.iOCANBusBrakeLiningRemainingAxleRear3LeftWheel_.toBuilder();  this.iOCANBusBrakeLiningRemainingAxleRear3LeftWheel_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOCANBusBrakeLiningRemainingAxleRear3LeftWheel_); this.iOCANBusBrakeLiningRemainingAxleRear3LeftWheel_ = subBuilder.buildPartial(); }  continue;case 406106: subBuilder = null; if (this.iOCANBusBrakeLiningRemainingAxleRear3RightWheel_ != null) subBuilder = this.iOCANBusBrakeLiningRemainingAxleRear3RightWheel_.toBuilder();  this.iOCANBusBrakeLiningRemainingAxleRear3RightWheel_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOCANBusBrakeLiningRemainingAxleRear3RightWheel_); this.iOCANBusBrakeLiningRemainingAxleRear3RightWheel_ = subBuilder.buildPartial(); }  continue;case 406274: subBuilder = null; if (this.iOCANBusTruckBusCruiseControl_ != null) subBuilder = this.iOCANBusTruckBusCruiseControl_.toBuilder();  this.iOCANBusTruckBusCruiseControl_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOCANBusTruckBusCruiseControl_); this.iOCANBusTruckBusCruiseControl_ = subBuilder.buildPartial(); }  continue;case 406282: subBuilder = null; if (this.iOCANBusBusAlternatorSpeedAlternatorStatus1_ != null) subBuilder = this.iOCANBusBusAlternatorSpeedAlternatorStatus1_.toBuilder();  this.iOCANBusBusAlternatorSpeedAlternatorStatus1_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOCANBusBusAlternatorSpeedAlternatorStatus1_); this.iOCANBusBusAlternatorSpeedAlternatorStatus1_ = subBuilder.buildPartial(); }  continue;case 406290: subBuilder = null; if (this.iOCANBusBusAlternatorSpeedAlternatorStatus2_ != null) subBuilder = this.iOCANBusBusAlternatorSpeedAlternatorStatus2_.toBuilder();  this.iOCANBusBusAlternatorSpeedAlternatorStatus2_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOCANBusBusAlternatorSpeedAlternatorStatus2_); this.iOCANBusBusAlternatorSpeedAlternatorStatus2_ = subBuilder.buildPartial(); }  continue;case 406298: subBuilder = null; if (this.iOCANBusBusAlternatorSpeedAlternatorStatus3_ != null) subBuilder = this.iOCANBusBusAlternatorSpeedAlternatorStatus3_.toBuilder();  this.iOCANBusBusAlternatorSpeedAlternatorStatus3_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOCANBusBusAlternatorSpeedAlternatorStatus3_); this.iOCANBusBusAlternatorSpeedAlternatorStatus3_ = subBuilder.buildPartial(); }  continue;case 406306: subBuilder = null; if (this.iOCANBusBusAlternatorSpeedAlternatorStatus4_ != null) subBuilder = this.iOCANBusBusAlternatorSpeedAlternatorStatus4_.toBuilder();  this.iOCANBusBusAlternatorSpeedAlternatorStatus4_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOCANBusBusAlternatorSpeedAlternatorStatus4_); this.iOCANBusBusAlternatorSpeedAlternatorStatus4_ = subBuilder.buildPartial(); }  continue;case 406314: subBuilder = null; if (this.iOCANBusBusElectronicTransmissionController2SelectedGear_ != null) subBuilder = this.iOCANBusBusElectronicTransmissionController2SelectedGear_.toBuilder();  this.iOCANBusBusElectronicTransmissionController2SelectedGear_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOCANBusBusElectronicTransmissionController2SelectedGear_); this.iOCANBusBusElectronicTransmissionController2SelectedGear_ = subBuilder.buildPartial(); }  continue;case 406322: subBuilder = null; if (this.iOCANBusBusElectronicTransmissionController2CurrentGear_ != null) subBuilder = this.iOCANBusBusElectronicTransmissionController2CurrentGear_.toBuilder();  this.iOCANBusBusElectronicTransmissionController2CurrentGear_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOCANBusBusElectronicTransmissionController2CurrentGear_); this.iOCANBusBusElectronicTransmissionController2CurrentGear_ = subBuilder.buildPartial(); }  continue;case 406330: subBuilder = null; if (this.iOCANBusBusAirSuspensionControl4FrontAxleLeft_ != null) subBuilder = this.iOCANBusBusAirSuspensionControl4FrontAxleLeft_.toBuilder();  this.iOCANBusBusAirSuspensionControl4FrontAxleLeft_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOCANBusBusAirSuspensionControl4FrontAxleLeft_); this.iOCANBusBusAirSuspensionControl4FrontAxleLeft_ = subBuilder.buildPartial(); }  continue;case 406338: subBuilder = null; if (this.iOCANBusBusAirSuspensionControl4FrontAxleRight_ != null) subBuilder = this.iOCANBusBusAirSuspensionControl4FrontAxleRight_.toBuilder();  this.iOCANBusBusAirSuspensionControl4FrontAxleRight_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOCANBusBusAirSuspensionControl4FrontAxleRight_); this.iOCANBusBusAirSuspensionControl4FrontAxleRight_ = subBuilder.buildPartial(); }  continue;case 406346: subBuilder = null; if (this.iOCANBusBusAirSuspensionControl4RearAxleLeft_ != null) subBuilder = this.iOCANBusBusAirSuspensionControl4RearAxleLeft_.toBuilder();  this.iOCANBusBusAirSuspensionControl4RearAxleLeft_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOCANBusBusAirSuspensionControl4RearAxleLeft_); this.iOCANBusBusAirSuspensionControl4RearAxleLeft_ = subBuilder.buildPartial(); }  continue;case 406354: subBuilder = null; if (this.iOCANBusBusAirSuspensionControl4RearAxleright_ != null) subBuilder = this.iOCANBusBusAirSuspensionControl4RearAxleright_.toBuilder();  this.iOCANBusBusAirSuspensionControl4RearAxleright_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOCANBusBusAirSuspensionControl4RearAxleright_); this.iOCANBusBusAirSuspensionControl4RearAxleright_ = subBuilder.buildPartial(); }  continue;case 406362: subBuilder = null; if (this.iOCANBusDashDisplayFuelLevel2_ != null) subBuilder = this.iOCANBusDashDisplayFuelLevel2_.toBuilder();  this.iOCANBusDashDisplayFuelLevel2_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOCANBusDashDisplayFuelLevel2_); this.iOCANBusDashDisplayFuelLevel2_ = subBuilder.buildPartial(); }  continue;case 406370: subBuilder = null; if (this.iOCANBusElectronicBrakeControllerBrakePedalPosition_ != null) subBuilder = this.iOCANBusElectronicBrakeControllerBrakePedalPosition_.toBuilder();  this.iOCANBusElectronicBrakeControllerBrakePedalPosition_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOCANBusElectronicBrakeControllerBrakePedalPosition_); this.iOCANBusElectronicBrakeControllerBrakePedalPosition_ = subBuilder.buildPartial(); }  continue;case 406378: subBuilder = null; if (this.iOCANBusFuelConsumptionGaseousTotalFuelUsed_ != null) subBuilder = this.iOCANBusFuelConsumptionGaseousTotalFuelUsed_.toBuilder();  this.iOCANBusFuelConsumptionGaseousTotalFuelUsed_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOCANBusFuelConsumptionGaseousTotalFuelUsed_); this.iOCANBusFuelConsumptionGaseousTotalFuelUsed_ = subBuilder.buildPartial(); }  continue;case 406386: subBuilder = null; if (this.iOCANBusTruckBusCruiseControlVehicleSpeedParkingBrakeSwitch_ != null) subBuilder = this.iOCANBusTruckBusCruiseControlVehicleSpeedParkingBrakeSwitch_.toBuilder();  this.iOCANBusTruckBusCruiseControlVehicleSpeedParkingBrakeSwitch_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOCANBusTruckBusCruiseControlVehicleSpeedParkingBrakeSwitch_); this.iOCANBusTruckBusCruiseControlVehicleSpeedParkingBrakeSwitch_ = subBuilder.buildPartial(); }  continue;case 406394: subBuilder = null; if (this.iOCANBusTruckBusCruiseControlVehicleSpeedWheelBasedSpeed_ != null) subBuilder = this.iOCANBusTruckBusCruiseControlVehicleSpeedWheelBasedSpeed_.toBuilder();  this.iOCANBusTruckBusCruiseControlVehicleSpeedWheelBasedSpeed_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOCANBusTruckBusCruiseControlVehicleSpeedWheelBasedSpeed_); this.iOCANBusTruckBusCruiseControlVehicleSpeedWheelBasedSpeed_ = subBuilder.buildPartial(); }  continue;case 406402: subBuilder = null; if (this.iOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlActive_ != null) subBuilder = this.iOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlActive_.toBuilder();  this.iOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlActive_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlActive_); this.iOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlActive_ = subBuilder.buildPartial(); }  continue;case 406410: subBuilder = null; if (this.iOCANBusTruckBusCruiseControlVehicleSpeedBrakeSwitch_ != null) subBuilder = this.iOCANBusTruckBusCruiseControlVehicleSpeedBrakeSwitch_.toBuilder();  this.iOCANBusTruckBusCruiseControlVehicleSpeedBrakeSwitch_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOCANBusTruckBusCruiseControlVehicleSpeedBrakeSwitch_); this.iOCANBusTruckBusCruiseControlVehicleSpeedBrakeSwitch_ = subBuilder.buildPartial(); }  continue;case 406418: subBuilder = null; if (this.iOCANBusTruckBusCruiseControlVehicleSpeedClutchSwitch_ != null) subBuilder = this.iOCANBusTruckBusCruiseControlVehicleSpeedClutchSwitch_.toBuilder();  this.iOCANBusTruckBusCruiseControlVehicleSpeedClutchSwitch_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOCANBusTruckBusCruiseControlVehicleSpeedClutchSwitch_); this.iOCANBusTruckBusCruiseControlVehicleSpeedClutchSwitch_ = subBuilder.buildPartial(); }  continue;case 406426: subBuilder = null; if (this.iOCANBusTruckBusCruiseControlVehicleSpeedPtoState_ != null) subBuilder = this.iOCANBusTruckBusCruiseControlVehicleSpeedPtoState_.toBuilder();  this.iOCANBusTruckBusCruiseControlVehicleSpeedPtoState_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOCANBusTruckBusCruiseControlVehicleSpeedPtoState_); this.iOCANBusTruckBusCruiseControlVehicleSpeedPtoState_ = subBuilder.buildPartial(); }  continue;case 406434: subBuilder = null; if (this.iOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlStates_ != null) subBuilder = this.iOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlStates_.toBuilder();  this.iOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlStates_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlStates_); this.iOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlStates_ = subBuilder.buildPartial(); }  continue;case 406442: subBuilder = null; if (this.iOCANBusBusVehicleElectricalPowerHybridBatteryPackRemainingCharge_ != null) subBuilder = this.iOCANBusBusVehicleElectricalPowerHybridBatteryPackRemainingCharge_.toBuilder();  this.iOCANBusBusVehicleElectricalPowerHybridBatteryPackRemainingCharge_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOCANBusBusVehicleElectricalPowerHybridBatteryPackRemainingCharge_); this.iOCANBusBusVehicleElectricalPowerHybridBatteryPackRemainingCharge_ = subBuilder.buildPartial(); }  continue;case 406450: subBuilder = null; if (this.iOCANBusBusVehicleDynamicStabilityControl2SteeringWheelAngle_ != null) subBuilder = this.iOCANBusBusVehicleDynamicStabilityControl2SteeringWheelAngle_.toBuilder();  this.iOCANBusBusVehicleDynamicStabilityControl2SteeringWheelAngle_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOCANBusBusVehicleDynamicStabilityControl2SteeringWheelAngle_); this.iOCANBusBusVehicleDynamicStabilityControl2SteeringWheelAngle_ = subBuilder.buildPartial(); }  continue;case 406458: subBuilder = null; if (this.iOCANBusElectronicEngineController14FuelType_ != null) subBuilder = this.iOCANBusElectronicEngineController14FuelType_.toBuilder();  this.iOCANBusElectronicEngineController14FuelType_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOCANBusElectronicEngineController14FuelType_); this.iOCANBusElectronicEngineController14FuelType_ = subBuilder.buildPartial(); }  continue;case 406466: subBuilder = null; if (this.iOCANBusEngineFluidLevelPressureEngineOilLevel_ != null) subBuilder = this.iOCANBusEngineFluidLevelPressureEngineOilLevel_.toBuilder();  this.iOCANBusEngineFluidLevelPressureEngineOilLevel_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOCANBusEngineFluidLevelPressureEngineOilLevel_); this.iOCANBusEngineFluidLevelPressureEngineOilLevel_ = subBuilder.buildPartial(); }  continue;case 406474: subBuilder = null; if (this.iOCANBusEngineFluidLevelPressureEngineOilPressure_ != null) subBuilder = this.iOCANBusEngineFluidLevelPressureEngineOilPressure_.toBuilder();  this.iOCANBusEngineFluidLevelPressureEngineOilPressure_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOCANBusEngineFluidLevelPressureEngineOilPressure_); this.iOCANBusEngineFluidLevelPressureEngineOilPressure_ = subBuilder.buildPartial(); }  continue;case 406482: subBuilder = null; if (this.iOCANBusEngineFluidLevelPressureCoolantLevel_ != null) subBuilder = this.iOCANBusEngineFluidLevelPressureCoolantLevel_.toBuilder();  this.iOCANBusEngineFluidLevelPressureCoolantLevel_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOCANBusEngineFluidLevelPressureCoolantLevel_); this.iOCANBusEngineFluidLevelPressureCoolantLevel_ = subBuilder.buildPartial(); }  continue;case 406490: subBuilder = null; if (this.iOCANBusTellTaleStatus_ != null) subBuilder = this.iOCANBusTellTaleStatus_.toBuilder();  this.iOCANBusTellTaleStatus_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOCANBusTellTaleStatus_); this.iOCANBusTellTaleStatus_ = subBuilder.buildPartial(); }  continue;case 406498: subBuilder = null; if (this.iOCANBusFuelConsumptionEngineTotalFuelUsed_ != null) subBuilder = this.iOCANBusFuelConsumptionEngineTotalFuelUsed_.toBuilder();  this.iOCANBusFuelConsumptionEngineTotalFuelUsed_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOCANBusFuelConsumptionEngineTotalFuelUsed_); this.iOCANBusFuelConsumptionEngineTotalFuelUsed_ = subBuilder.buildPartial(); }  continue;case 406506: subBuilder = null; if (this.iOCANBusTruckVehicleWeightAxleWeight4_ != null) subBuilder = this.iOCANBusTruckVehicleWeightAxleWeight4_.toBuilder();  this.iOCANBusTruckVehicleWeightAxleWeight4_ = (DolphinConfig.IO)input.readMessage(DolphinConfig.IO.parser(), extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.iOCANBusTruckVehicleWeightAxleWeight4_); this.iOCANBusTruckVehicleWeightAxleWeight4_ = subBuilder.buildPartial(); }  continue; }  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this); } finally { this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return DolphinConfig.internal_static_org_traccar_protobuf_dolphin_Config_Config_descriptor; } protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() { return DolphinConfig.internal_static_org_traccar_protobuf_dolphin_Config_Config_fieldAccessorTable.ensureFieldAccessorsInitialized(Config.class, Builder.class); } public int getSerialPortBaudrateValue() { return this.serialPortBaudrate_; } public DolphinConfig.SerialBaudrate getSerialPortBaudrate() { DolphinConfig.SerialBaudrate result = DolphinConfig.SerialBaudrate.valueOf(this.serialPortBaudrate_); return (result == null) ? DolphinConfig.SerialBaudrate.UNRECOGNIZED : result; } public boolean getDoNotResetDeviceOnProblems() { return this.doNotResetDeviceOnProblems_; } public String getPassword() { Object ref = this.password_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.password_ = s; return s; } public ByteString getPasswordBytes() { Object ref = this.password_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.password_ = b; return b; }  return (ByteString)ref; } public int getMovementValue() { return this.movement_; } public DolphinConfig.MovementSource getMovement() { DolphinConfig.MovementSource result = DolphinConfig.MovementSource.valueOf(this.movement_); return (result == null) ? DolphinConfig.MovementSource.UNRECOGNIZED : result; } public int getMovementSensorSensitivity() { return this.movementSensorSensitivity_; } public int getSleepValue() { return this.sleep_; } public DolphinConfig.SleepMode getSleep() { DolphinConfig.SleepMode result = DolphinConfig.SleepMode.valueOf(this.sleep_); return (result == null) ? DolphinConfig.SleepMode.UNRECOGNIZED : result; } public int getSleepTimeout() { return this.sleepTimeout_; } public int getEngineOnValue() { return this.engineOn_; } public DolphinConfig.EngineMode getEngineOn() { DolphinConfig.EngineMode result = DolphinConfig.EngineMode.valueOf(this.engineOn_); return (result == null) ? DolphinConfig.EngineMode.UNRECOGNIZED : result; } public boolean getEngineOnDIN1() { return this.engineOnDIN1_; } public boolean getEngineOnDIN2() { return this.engineOnDIN2_; } public boolean getEngineOnMovementSensor() { return this.engineOnMovementSensor_; } public boolean getEngineOnPowerSupplyAvailable() { return this.engineOnPowerSupplyAvailable_; } public int getEngineOnGpsSpeed() { return this.engineOnGpsSpeed_; } public int getEngineOnCanRPM() { return this.engineOnCanRPM_; } public int getEngineOnMinActiveStateDuration() { return this.engineOnMinActiveStateDuration_; } public int getEngineOnOperatorValue() { return this.engineOnOperator_; } public DolphinConfig.ConditionOperator getEngineOnOperator() { DolphinConfig.ConditionOperator result = DolphinConfig.ConditionOperator.valueOf(this.engineOnOperator_); return (result == null) ? DolphinConfig.ConditionOperator.UNRECOGNIZED : result; } public int getEngineOnMovementStartDelay() { return this.engineOnMovementStartDelay_; } public int getEngineOnMovementStopDelay() { return this.engineOnMovementStopDelay_; } public int getEngineOnExternalVoltage() { return this.engineOnExternalVoltage_; } public boolean getLedIndication() { return this.ledIndication_; } public int getGNSSValue() { return this.gNSS_; } public DolphinConfig.GNSSMode getGNSS() { DolphinConfig.GNSSMode result = DolphinConfig.GNSSMode.valueOf(this.gNSS_); return (result == null) ? DolphinConfig.GNSSMode.UNRECOGNIZED : result; } public boolean getStaticNavigationEnabled() { return this.staticNavigationEnabled_; } public int getStaticNavigationSourceValue() { return this.staticNavigationSource_; } public DolphinConfig.StaticNavigationSource getStaticNavigationSource() { DolphinConfig.StaticNavigationSource result = DolphinConfig.StaticNavigationSource.valueOf(this.staticNavigationSource_); return (result == null) ? DolphinConfig.StaticNavigationSource.UNRECOGNIZED : result; } public int getRecordsSaveAndSendModeValue() { return this.recordsSaveAndSendMode_; } public DolphinConfig.RecordsMode getRecordsSaveAndSendMode() { DolphinConfig.RecordsMode result = DolphinConfig.RecordsMode.valueOf(this.recordsSaveAndSendMode_); return (result == null) ? DolphinConfig.RecordsMode.UNRECOGNIZED : result; } public int getTimeSynchronizationValue() { return this.timeSynchronization_; } public DolphinConfig.TimeSynchronization getTimeSynchronization() { DolphinConfig.TimeSynchronization result = DolphinConfig.TimeSynchronization.valueOf(this.timeSynchronization_); return (result == null) ? DolphinConfig.TimeSynchronization.UNRECOGNIZED : result; } public String getNTPServer() { Object ref = this.nTPServer_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.nTPServer_ = s; return s; } public ByteString getNTPServerBytes() { Object ref = this.nTPServer_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.nTPServer_ = b; return b; }  return (ByteString)ref; } public int getNTPInterval() { return this.nTPInterval_; } public int getSleepNoPowerTimeout() { return this.sleepNoPowerTimeout_; } public boolean getSendPing() { return this.sendPing_; } public boolean getTimetableMode() { return this.timetableMode_; } public ByteString getTimetableData() { return this.timetableData_; } public boolean hasService1() { return (this.service1_ != null); } public DolphinConfig.Service getService1() { return (this.service1_ == null) ? DolphinConfig.Service.getDefaultInstance() : this.service1_; } public DolphinConfig.ServiceOrBuilder getService1OrBuilder() { return getService1(); } public boolean hasService2() { return (this.service2_ != null); } public DolphinConfig.Service getService2() { return (this.service2_ == null) ? DolphinConfig.Service.getDefaultInstance() : this.service2_; } public DolphinConfig.ServiceOrBuilder getService2OrBuilder() { return getService2(); } public boolean hasService3() { return (this.service3_ != null); } public DolphinConfig.Service getService3() { return (this.service3_ == null) ? DolphinConfig.Service.getDefaultInstance() : this.service3_; } public DolphinConfig.ServiceOrBuilder getService3OrBuilder() { return getService3(); } public int getAnalogInput1AverageTime() { return this.analogInput1AverageTime_; } public int getAnalogInput2AverageTime() { return this.analogInput2AverageTime_; } public int getAnalogInput3AverageTime() { return this.analogInput3AverageTime_; } public int getBluetoothRadioModeValue() { return this.bluetoothRadioMode_; } public DolphinConfig.BluetoothMode getBluetoothRadioMode() { DolphinConfig.BluetoothMode result = DolphinConfig.BluetoothMode.valueOf(this.bluetoothRadioMode_); return (result == null) ? DolphinConfig.BluetoothMode.UNRECOGNIZED : result; } public String getBluetoothName() { Object ref = this.bluetoothName_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.bluetoothName_ = s; return s; } public ByteString getBluetoothNameBytes() { Object ref = this.bluetoothName_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.bluetoothName_ = b; return b; }  return (ByteString)ref; } public String getBluetoothPIN() { Object ref = this.bluetoothPIN_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.bluetoothPIN_ = s; return s; } public ByteString getBluetoothPINBytes() { Object ref = this.bluetoothPIN_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.bluetoothPIN_ = b; return b; }  return (ByteString)ref; } public int getBluetoothSecurityModeValue() { return this.bluetoothSecurityMode_; } public DolphinConfig.BluetoothSecurityMode getBluetoothSecurityMode() { DolphinConfig.BluetoothSecurityMode result = DolphinConfig.BluetoothSecurityMode.valueOf(this.bluetoothSecurityMode_); return (result == null) ? DolphinConfig.BluetoothSecurityMode.UNRECOGNIZED : result; } public boolean getBluetoothPowerDownOnSleep() { return this.bluetoothPowerDownOnSleep_; } public int getBluetoothExternalConnectionModeValue() { return this.bluetoothExternalConnectionMode_; } public DolphinConfig.BluetoothExternalConnectionMode getBluetoothExternalConnectionMode() { DolphinConfig.BluetoothExternalConnectionMode result = DolphinConfig.BluetoothExternalConnectionMode.valueOf(this.bluetoothExternalConnectionMode_); return (result == null) ? DolphinConfig.BluetoothExternalConnectionMode.UNRECOGNIZED : result; } public String getBluetoothExternalDeviceMAC() { Object ref = this.bluetoothExternalDeviceMAC_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.bluetoothExternalDeviceMAC_ = s; return s; } public ByteString getBluetoothExternalDeviceMACBytes() { Object ref = this.bluetoothExternalDeviceMAC_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.bluetoothExternalDeviceMAC_ = b; return b; }  return (ByteString)ref; } public String getBluetoothExternalDeviceName() { Object ref = this.bluetoothExternalDeviceName_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.bluetoothExternalDeviceName_ = s; return s; } public ByteString getBluetoothExternalDeviceNameBytes() { Object ref = this.bluetoothExternalDeviceName_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.bluetoothExternalDeviceName_ = b; return b; }  return (ByteString)ref; } public String getBluetoothExternalDevicePIN() { Object ref = this.bluetoothExternalDevicePIN_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.bluetoothExternalDevicePIN_ = s; return s; } public ByteString getBluetoothExternalDevicePINBytes() { Object ref = this.bluetoothExternalDevicePIN_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.bluetoothExternalDevicePIN_ = b; return b; }  return (ByteString)ref; } public String getBluetoothAuthorizedMAC1() { Object ref = this.bluetoothAuthorizedMAC1_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.bluetoothAuthorizedMAC1_ = s; return s; } public ByteString getBluetoothAuthorizedMAC1Bytes() { Object ref = this.bluetoothAuthorizedMAC1_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.bluetoothAuthorizedMAC1_ = b; return b; }  return (ByteString)ref; } public String getBluetoothAuthorizedMAC2() { Object ref = this.bluetoothAuthorizedMAC2_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.bluetoothAuthorizedMAC2_ = s; return s; } public ByteString getBluetoothAuthorizedMAC2Bytes() { Object ref = this.bluetoothAuthorizedMAC2_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.bluetoothAuthorizedMAC2_ = b; return b; }  return (ByteString)ref; } public String getBluetoothAuthorizedMAC3() { Object ref = this.bluetoothAuthorizedMAC3_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.bluetoothAuthorizedMAC3_ = s; return s; } public ByteString getBluetoothAuthorizedMAC3Bytes() { Object ref = this.bluetoothAuthorizedMAC3_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.bluetoothAuthorizedMAC3_ = b; return b; }  return (ByteString)ref; } public String getBluetoothAuthorizedMAC4() { Object ref = this.bluetoothAuthorizedMAC4_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.bluetoothAuthorizedMAC4_ = s; return s; } public ByteString getBluetoothAuthorizedMAC4Bytes() { Object ref = this.bluetoothAuthorizedMAC4_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.bluetoothAuthorizedMAC4_ = b; return b; }  return (ByteString)ref; } public String getBluetoothAuthorizedMAC5() { Object ref = this.bluetoothAuthorizedMAC5_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.bluetoothAuthorizedMAC5_ = s; return s; } public ByteString getBluetoothAuthorizedMAC5Bytes() { Object ref = this.bluetoothAuthorizedMAC5_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.bluetoothAuthorizedMAC5_ = b; return b; }  return (ByteString)ref; } public boolean getGPRSContextEnabled() { return this.gPRSContextEnabled_; } public String getGPRSApnName() { Object ref = this.gPRSApnName_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.gPRSApnName_ = s; return s; } public ByteString getGPRSApnNameBytes() { Object ref = this.gPRSApnName_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.gPRSApnName_ = b; return b; }  return (ByteString)ref; } public String getGPRSApnUsername() { Object ref = this.gPRSApnUsername_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.gPRSApnUsername_ = s; return s; } public ByteString getGPRSApnUsernameBytes() { Object ref = this.gPRSApnUsername_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.gPRSApnUsername_ = b; return b; }  return (ByteString)ref; } public String getGPRSApnPassword() { Object ref = this.gPRSApnPassword_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.gPRSApnPassword_ = s; return s; } public ByteString getGPRSApnPasswordBytes() { Object ref = this.gPRSApnPassword_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.gPRSApnPassword_ = b; return b; }  return (ByteString)ref; } public boolean getGPRSCHAPAuthentication() { return this.gPRSCHAPAuthentication_; } public int getGPRSLinkTimeout() { return this.gPRSLinkTimeout_; } public int getGPRSResponseTimeout() { return this.gPRSResponseTimeout_; } public String getGPRSServerAddress() { Object ref = this.gPRSServerAddress_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.gPRSServerAddress_ = s; return s; } public ByteString getGPRSServerAddressBytes() { Object ref = this.gPRSServerAddress_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.gPRSServerAddress_ = b; return b; }  return (ByteString)ref; } public int getGPRSServerPort() { return this.gPRSServerPort_; } public int getGPRSServerProtocolValue() { return this.gPRSServerProtocol_; } public DolphinConfig.ServerProtocol getGPRSServerProtocol() { DolphinConfig.ServerProtocol result = DolphinConfig.ServerProtocol.valueOf(this.gPRSServerProtocol_); return (result == null) ? DolphinConfig.ServerProtocol.UNRECOGNIZED : result; } public String getGPRSBackupServerAddress() { Object ref = this.gPRSBackupServerAddress_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.gPRSBackupServerAddress_ = s; return s; } public ByteString getGPRSBackupServerAddressBytes() { Object ref = this.gPRSBackupServerAddress_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.gPRSBackupServerAddress_ = b; return b; }  return (ByteString)ref; } public int getGPRSBackupServerPort() { return this.gPRSBackupServerPort_; } public int getGPRSBackupServerProtocolValue() { return this.gPRSBackupServerProtocol_; } public DolphinConfig.ServerProtocol getGPRSBackupServerProtocol() { DolphinConfig.ServerProtocol result = DolphinConfig.ServerProtocol.valueOf(this.gPRSBackupServerProtocol_); return (result == null) ? DolphinConfig.ServerProtocol.UNRECOGNIZED : result; } public boolean getGPRSSSLClientAuthentication() { return this.gPRSSSLClientAuthentication_; } public boolean getGPRSDataCompression() { return this.gPRSDataCompression_; } public int getAuthenticationModeValue() { return this.authenticationMode_; } public DolphinConfig.AuthenticationMode getAuthenticationMode() { DolphinConfig.AuthenticationMode result = DolphinConfig.AuthenticationMode.valueOf(this.authenticationMode_); return (result == null) ? DolphinConfig.AuthenticationMode.UNRECOGNIZED : result; } public String getAuthenticationCode() { Object ref = this.authenticationCode_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.authenticationCode_ = s; return s; } public ByteString getAuthenticationCodeBytes() { Object ref = this.authenticationCode_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.authenticationCode_ = b; return b; }  return (ByteString)ref; } public boolean getFirmwareUpdateEnabled() { return this.firmwareUpdateEnabled_; } public String getFirmwareUpdateChannel() { Object ref = this.firmwareUpdateChannel_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.firmwareUpdateChannel_ = s; return s; } public ByteString getFirmwareUpdateChannelBytes() { Object ref = this.firmwareUpdateChannel_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.firmwareUpdateChannel_ = b; return b; }  return (ByteString)ref; } public int getFirmwareUpdateCheckInterval() { return this.firmwareUpdateCheckInterval_; } public String getFirmwareUpdateServerAddress() { Object ref = this.firmwareUpdateServerAddress_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.firmwareUpdateServerAddress_ = s; return s; } public ByteString getFirmwareUpdateServerAddressBytes() { Object ref = this.firmwareUpdateServerAddress_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.firmwareUpdateServerAddress_ = b; return b; }  return (ByteString)ref; } public int getFirmwareUpdateServerPort() { return this.firmwareUpdateServerPort_; } public int getFirmwareUpdateServerProtocolValue() { return this.firmwareUpdateServerProtocol_; } public DolphinConfig.ServerProtocol getFirmwareUpdateServerProtocol() { DolphinConfig.ServerProtocol result = DolphinConfig.ServerProtocol.valueOf(this.firmwareUpdateServerProtocol_); return (result == null) ? DolphinConfig.ServerProtocol.UNRECOGNIZED : result; } public int getFirmwareUpdateLinkTimeout() { return this.firmwareUpdateLinkTimeout_; } public int getFirmwareUpdateResponseTimeout() { return this.firmwareUpdateResponseTimeout_; } public boolean getSMSDataSending() { return this.sMSDataSending_; } public String getSMSDataSendNumber() { Object ref = this.sMSDataSendNumber_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.sMSDataSendNumber_ = s; return s; } public ByteString getSMSDataSendNumberBytes() { Object ref = this.sMSDataSendNumber_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.sMSDataSendNumber_ = b; return b; }  return (ByteString)ref; } public String getSMSPassword() { Object ref = this.sMSPassword_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.sMSPassword_ = s; return s; } public ByteString getSMSPasswordBytes() { Object ref = this.sMSPassword_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.sMSPassword_ = b; return b; }  return (ByteString)ref; } public int getSMSEventTimeZone() { return this.sMSEventTimeZone_; } public int getCallIncommingCallActionValue() { return this.callIncommingCallAction_; } public DolphinConfig.CallAction getCallIncommingCallAction() { DolphinConfig.CallAction result = DolphinConfig.CallAction.valueOf(this.callIncommingCallAction_); return (result == null) ? DolphinConfig.CallAction.UNRECOGNIZED : result; } public int getCallDigitalInput1CallTo() { return this.callDigitalInput1CallTo_; } public int getCallDigitalInput2CallTo() { return this.callDigitalInput2CallTo_; } public int getCallDigitalInput3CallTo() { return this.callDigitalInput3CallTo_; } public String getAuthorizedNumber1() { Object ref = this.authorizedNumber1_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.authorizedNumber1_ = s; return s; } public ByteString getAuthorizedNumber1Bytes() { Object ref = this.authorizedNumber1_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.authorizedNumber1_ = b; return b; }  return (ByteString)ref; } public String getAuthorizedNumber2() { Object ref = this.authorizedNumber2_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.authorizedNumber2_ = s; return s; } public ByteString getAuthorizedNumber2Bytes() { Object ref = this.authorizedNumber2_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.authorizedNumber2_ = b; return b; }  return (ByteString)ref; } public String getAuthorizedNumber3() { Object ref = this.authorizedNumber3_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.authorizedNumber3_ = s; return s; } public ByteString getAuthorizedNumber3Bytes() { Object ref = this.authorizedNumber3_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.authorizedNumber3_ = b; return b; }  return (ByteString)ref; } public String getAuthorizedNumber4() { Object ref = this.authorizedNumber4_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.authorizedNumber4_ = s; return s; } public ByteString getAuthorizedNumber4Bytes() { Object ref = this.authorizedNumber4_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.authorizedNumber4_ = b; return b; }  return (ByteString)ref; } public String getAuthorizedNumber5() { Object ref = this.authorizedNumber5_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.authorizedNumber5_ = s; return s; } public ByteString getAuthorizedNumber5Bytes() { Object ref = this.authorizedNumber5_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.authorizedNumber5_ = b; return b; }  return (ByteString)ref; } public String getAuthorizedNumber6() { Object ref = this.authorizedNumber6_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.authorizedNumber6_ = s; return s; } public ByteString getAuthorizedNumber6Bytes() { Object ref = this.authorizedNumber6_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.authorizedNumber6_ = b; return b; }  return (ByteString)ref; } public String getAuthorizedNumber7() { Object ref = this.authorizedNumber7_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.authorizedNumber7_ = s; return s; } public ByteString getAuthorizedNumber7Bytes() { Object ref = this.authorizedNumber7_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.authorizedNumber7_ = b; return b; }  return (ByteString)ref; } public String getAuthorizedNumber8() { Object ref = this.authorizedNumber8_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.authorizedNumber8_ = s; return s; } public ByteString getAuthorizedNumber8Bytes() { Object ref = this.authorizedNumber8_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.authorizedNumber8_ = b; return b; }  return (ByteString)ref; } public String getAuthorizedNumber9() { Object ref = this.authorizedNumber9_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.authorizedNumber9_ = s; return s; } public ByteString getAuthorizedNumber9Bytes() { Object ref = this.authorizedNumber9_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.authorizedNumber9_ = b; return b; }  return (ByteString)ref; } public String getAuthorizedNumber10() { Object ref = this.authorizedNumber10_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.authorizedNumber10_ = s; return s; } public ByteString getAuthorizedNumber10Bytes() { Object ref = this.authorizedNumber10_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.authorizedNumber10_ = b; return b; }  return (ByteString)ref; } public String getGsmPredefinedNumber1() { Object ref = this.gsmPredefinedNumber1_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.gsmPredefinedNumber1_ = s; return s; } public ByteString getGsmPredefinedNumber1Bytes() { Object ref = this.gsmPredefinedNumber1_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.gsmPredefinedNumber1_ = b; return b; }  return (ByteString)ref; } public String getGsmPredefinedNumber2() { Object ref = this.gsmPredefinedNumber2_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.gsmPredefinedNumber2_ = s; return s; } public ByteString getGsmPredefinedNumber2Bytes() { Object ref = this.gsmPredefinedNumber2_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.gsmPredefinedNumber2_ = b; return b; }  return (ByteString)ref; } public String getGsmPredefinedNumber3() { Object ref = this.gsmPredefinedNumber3_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.gsmPredefinedNumber3_ = s; return s; } public ByteString getGsmPredefinedNumber3Bytes() { Object ref = this.gsmPredefinedNumber3_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.gsmPredefinedNumber3_ = b; return b; }  return (ByteString)ref; } public String getGsmPredefinedNumber4() { Object ref = this.gsmPredefinedNumber4_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.gsmPredefinedNumber4_ = s; return s; } public ByteString getGsmPredefinedNumber4Bytes() { Object ref = this.gsmPredefinedNumber4_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.gsmPredefinedNumber4_ = b; return b; }  return (ByteString)ref; } public String getGsmPredefinedNumber5() { Object ref = this.gsmPredefinedNumber5_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.gsmPredefinedNumber5_ = s; return s; } public ByteString getGsmPredefinedNumber5Bytes() { Object ref = this.gsmPredefinedNumber5_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.gsmPredefinedNumber5_ = b; return b; }  return (ByteString)ref; } public String getGsmPredefinedNumber6() { Object ref = this.gsmPredefinedNumber6_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.gsmPredefinedNumber6_ = s; return s; } public ByteString getGsmPredefinedNumber6Bytes() { Object ref = this.gsmPredefinedNumber6_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.gsmPredefinedNumber6_ = b; return b; }  return (ByteString)ref; } public String getGsmPredefinedNumber7() { Object ref = this.gsmPredefinedNumber7_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.gsmPredefinedNumber7_ = s; return s; } public ByteString getGsmPredefinedNumber7Bytes() { Object ref = this.gsmPredefinedNumber7_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.gsmPredefinedNumber7_ = b; return b; }  return (ByteString)ref; } public String getGsmPredefinedNumber8() { Object ref = this.gsmPredefinedNumber8_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.gsmPredefinedNumber8_ = s; return s; } public ByteString getGsmPredefinedNumber8Bytes() { Object ref = this.gsmPredefinedNumber8_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.gsmPredefinedNumber8_ = b; return b; }  return (ByteString)ref; } public String getGsmPredefinedNumber9() { Object ref = this.gsmPredefinedNumber9_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.gsmPredefinedNumber9_ = s; return s; } public ByteString getGsmPredefinedNumber9Bytes() { Object ref = this.gsmPredefinedNumber9_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.gsmPredefinedNumber9_ = b; return b; }  return (ByteString)ref; } public String getGsmPredefinedNumber10() { Object ref = this.gsmPredefinedNumber10_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.gsmPredefinedNumber10_ = s; return s; } public ByteString getGsmPredefinedNumber10Bytes() { Object ref = this.gsmPredefinedNumber10_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.gsmPredefinedNumber10_ = b; return b; }  return (ByteString)ref; } public String getRoamingOperator1() { Object ref = this.roamingOperator1_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.roamingOperator1_ = s; return s; } public ByteString getRoamingOperator1Bytes() { Object ref = this.roamingOperator1_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.roamingOperator1_ = b; return b; }  return (ByteString)ref; } public String getRoamingOperator2() { Object ref = this.roamingOperator2_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.roamingOperator2_ = s; return s; } public ByteString getRoamingOperator2Bytes() { Object ref = this.roamingOperator2_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.roamingOperator2_ = b; return b; }  return (ByteString)ref; } public String getRoamingOperator3() { Object ref = this.roamingOperator3_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.roamingOperator3_ = s; return s; } public ByteString getRoamingOperator3Bytes() { Object ref = this.roamingOperator3_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.roamingOperator3_ = b; return b; }  return (ByteString)ref; } public String getRoamingOperator4() { Object ref = this.roamingOperator4_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.roamingOperator4_ = s; return s; } public ByteString getRoamingOperator4Bytes() { Object ref = this.roamingOperator4_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.roamingOperator4_ = b; return b; }  return (ByteString)ref; } public String getRoamingOperator5() { Object ref = this.roamingOperator5_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.roamingOperator5_ = s; return s; } public ByteString getRoamingOperator5Bytes() { Object ref = this.roamingOperator5_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.roamingOperator5_ = b; return b; }  return (ByteString)ref; } public int getDAQStopHomeMinPeriod() { return this.dAQStopHomeMinPeriod_; } public int getDAQStopRoamingMinPeriod() { return this.dAQStopRoamingMinPeriod_; } public int getDAQMovingHomeMinPeriod() { return this.dAQMovingHomeMinPeriod_; } public int getDAQMovingHomeMinPathDeviation() { return this.dAQMovingHomeMinPathDeviation_; } public int getDAQMovingRoamingMinPeriod() { return this.dAQMovingRoamingMinPeriod_; } public int getDAQMovingRoamingMinPathDeviation() { return this.dAQMovingRoamingMinPathDeviation_; } public boolean hasGeoZone1() { return (this.geoZone1_ != null); } public DolphinConfig.GeoZone getGeoZone1() { return (this.geoZone1_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone1_; } public DolphinConfig.GeoZoneOrBuilder getGeoZone1OrBuilder() { return getGeoZone1(); } public boolean hasGeoZone2() { return (this.geoZone2_ != null); } public DolphinConfig.GeoZone getGeoZone2() { return (this.geoZone2_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone2_; } public DolphinConfig.GeoZoneOrBuilder getGeoZone2OrBuilder() { return getGeoZone2(); } public boolean hasGeoZone3() { return (this.geoZone3_ != null); } public DolphinConfig.GeoZone getGeoZone3() { return (this.geoZone3_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone3_; } public DolphinConfig.GeoZoneOrBuilder getGeoZone3OrBuilder() { return getGeoZone3(); } public boolean hasGeoZone4() { return (this.geoZone4_ != null); } public DolphinConfig.GeoZone getGeoZone4() { return (this.geoZone4_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone4_; } public DolphinConfig.GeoZoneOrBuilder getGeoZone4OrBuilder() { return getGeoZone4(); } public boolean hasGeoZone5() { return (this.geoZone5_ != null); } public DolphinConfig.GeoZone getGeoZone5() { return (this.geoZone5_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone5_; } public DolphinConfig.GeoZoneOrBuilder getGeoZone5OrBuilder() { return getGeoZone5(); } public boolean hasGeoZone6() { return (this.geoZone6_ != null); } public DolphinConfig.GeoZone getGeoZone6() { return (this.geoZone6_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone6_; } public DolphinConfig.GeoZoneOrBuilder getGeoZone6OrBuilder() { return getGeoZone6(); } public boolean hasGeoZone7() { return (this.geoZone7_ != null); } public DolphinConfig.GeoZone getGeoZone7() { return (this.geoZone7_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone7_; } public DolphinConfig.GeoZoneOrBuilder getGeoZone7OrBuilder() { return getGeoZone7(); } public boolean hasGeoZone8() { return (this.geoZone8_ != null); } public DolphinConfig.GeoZone getGeoZone8() { return (this.geoZone8_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone8_; } public DolphinConfig.GeoZoneOrBuilder getGeoZone8OrBuilder() { return getGeoZone8(); } public boolean hasGeoZone9() { return (this.geoZone9_ != null); } public DolphinConfig.GeoZone getGeoZone9() { return (this.geoZone9_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone9_; } public DolphinConfig.GeoZoneOrBuilder getGeoZone9OrBuilder() { return getGeoZone9(); } public boolean hasGeoZone10() { return (this.geoZone10_ != null); } public DolphinConfig.GeoZone getGeoZone10() { return (this.geoZone10_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone10_; } public DolphinConfig.GeoZoneOrBuilder getGeoZone10OrBuilder() { return getGeoZone10(); } public boolean hasGeoZone11() { return (this.geoZone11_ != null); } public DolphinConfig.GeoZone getGeoZone11() { return (this.geoZone11_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone11_; } public DolphinConfig.GeoZoneOrBuilder getGeoZone11OrBuilder() { return getGeoZone11(); } public boolean hasGeoZone12() { return (this.geoZone12_ != null); } public DolphinConfig.GeoZone getGeoZone12() { return (this.geoZone12_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone12_; } public DolphinConfig.GeoZoneOrBuilder getGeoZone12OrBuilder() { return getGeoZone12(); } public boolean hasGeoZone13() { return (this.geoZone13_ != null); } public DolphinConfig.GeoZone getGeoZone13() { return (this.geoZone13_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone13_; } public DolphinConfig.GeoZoneOrBuilder getGeoZone13OrBuilder() { return getGeoZone13(); } public boolean hasGeoZone14() { return (this.geoZone14_ != null); } public DolphinConfig.GeoZone getGeoZone14() { return (this.geoZone14_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone14_; } public DolphinConfig.GeoZoneOrBuilder getGeoZone14OrBuilder() { return getGeoZone14(); } public boolean hasGeoZone15() { return (this.geoZone15_ != null); } public DolphinConfig.GeoZone getGeoZone15() { return (this.geoZone15_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone15_; } public DolphinConfig.GeoZoneOrBuilder getGeoZone15OrBuilder() { return getGeoZone15(); } public boolean hasGeoZone16() { return (this.geoZone16_ != null); } public DolphinConfig.GeoZone getGeoZone16() { return (this.geoZone16_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone16_; } public DolphinConfig.GeoZoneOrBuilder getGeoZone16OrBuilder() { return getGeoZone16(); } public boolean hasGeoZone17() { return (this.geoZone17_ != null); } public DolphinConfig.GeoZone getGeoZone17() { return (this.geoZone17_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone17_; } public DolphinConfig.GeoZoneOrBuilder getGeoZone17OrBuilder() { return getGeoZone17(); } public boolean hasGeoZone18() { return (this.geoZone18_ != null); } public DolphinConfig.GeoZone getGeoZone18() { return (this.geoZone18_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone18_; } public DolphinConfig.GeoZoneOrBuilder getGeoZone18OrBuilder() { return getGeoZone18(); } public boolean hasGeoZone19() { return (this.geoZone19_ != null); } public DolphinConfig.GeoZone getGeoZone19() { return (this.geoZone19_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone19_; } public DolphinConfig.GeoZoneOrBuilder getGeoZone19OrBuilder() { return getGeoZone19(); } public boolean hasGeoZone20() { return (this.geoZone20_ != null); } public DolphinConfig.GeoZone getGeoZone20() { return (this.geoZone20_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone20_; } public DolphinConfig.GeoZoneOrBuilder getGeoZone20OrBuilder() { return getGeoZone20(); } public boolean hasGeoZone21() { return (this.geoZone21_ != null); } public DolphinConfig.GeoZone getGeoZone21() { return (this.geoZone21_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone21_; } public DolphinConfig.GeoZoneOrBuilder getGeoZone21OrBuilder() { return getGeoZone21(); } public boolean hasGeoZone22() { return (this.geoZone22_ != null); } public DolphinConfig.GeoZone getGeoZone22() { return (this.geoZone22_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone22_; } public DolphinConfig.GeoZoneOrBuilder getGeoZone22OrBuilder() { return getGeoZone22(); } public boolean hasGeoZone23() { return (this.geoZone23_ != null); } public DolphinConfig.GeoZone getGeoZone23() { return (this.geoZone23_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone23_; } public DolphinConfig.GeoZoneOrBuilder getGeoZone23OrBuilder() { return getGeoZone23(); } public boolean hasGeoZone24() { return (this.geoZone24_ != null); } public DolphinConfig.GeoZone getGeoZone24() { return (this.geoZone24_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone24_; } public DolphinConfig.GeoZoneOrBuilder getGeoZone24OrBuilder() { return getGeoZone24(); } public boolean hasGeoZone25() { return (this.geoZone25_ != null); } public DolphinConfig.GeoZone getGeoZone25() { return (this.geoZone25_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone25_; } public DolphinConfig.GeoZoneOrBuilder getGeoZone25OrBuilder() { return getGeoZone25(); } public boolean hasGeoZone26() { return (this.geoZone26_ != null); } public DolphinConfig.GeoZone getGeoZone26() { return (this.geoZone26_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone26_; } public DolphinConfig.GeoZoneOrBuilder getGeoZone26OrBuilder() { return getGeoZone26(); } public boolean hasGeoZone27() { return (this.geoZone27_ != null); } public DolphinConfig.GeoZone getGeoZone27() { return (this.geoZone27_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone27_; } public DolphinConfig.GeoZoneOrBuilder getGeoZone27OrBuilder() { return getGeoZone27(); } public boolean hasGeoZone28() { return (this.geoZone28_ != null); } public DolphinConfig.GeoZone getGeoZone28() { return (this.geoZone28_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone28_; } public DolphinConfig.GeoZoneOrBuilder getGeoZone28OrBuilder() { return getGeoZone28(); } public boolean hasGeoZone29() { return (this.geoZone29_ != null); } public DolphinConfig.GeoZone getGeoZone29() { return (this.geoZone29_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone29_; } public DolphinConfig.GeoZoneOrBuilder getGeoZone29OrBuilder() { return getGeoZone29(); } public boolean hasGeoZone30() { return (this.geoZone30_ != null); } public DolphinConfig.GeoZone getGeoZone30() { return (this.geoZone30_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone30_; } public DolphinConfig.GeoZoneOrBuilder getGeoZone30OrBuilder() { return getGeoZone30(); } public boolean hasGeoZone31() { return (this.geoZone31_ != null); } public DolphinConfig.GeoZone getGeoZone31() { return (this.geoZone31_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone31_; } public DolphinConfig.GeoZoneOrBuilder getGeoZone31OrBuilder() { return getGeoZone31(); } public boolean hasGeoZone32() { return (this.geoZone32_ != null); } public DolphinConfig.GeoZone getGeoZone32() { return (this.geoZone32_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone32_; } public DolphinConfig.GeoZoneOrBuilder getGeoZone32OrBuilder() { return getGeoZone32(); } public boolean hasGeoZone33() { return (this.geoZone33_ != null); } public DolphinConfig.GeoZone getGeoZone33() { return (this.geoZone33_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone33_; } public DolphinConfig.GeoZoneOrBuilder getGeoZone33OrBuilder() { return getGeoZone33(); } public boolean hasGeoZone34() { return (this.geoZone34_ != null); } public DolphinConfig.GeoZone getGeoZone34() { return (this.geoZone34_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone34_; } public DolphinConfig.GeoZoneOrBuilder getGeoZone34OrBuilder() { return getGeoZone34(); } public boolean hasGeoZone35() { return (this.geoZone35_ != null); } public DolphinConfig.GeoZone getGeoZone35() { return (this.geoZone35_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone35_; } public DolphinConfig.GeoZoneOrBuilder getGeoZone35OrBuilder() { return getGeoZone35(); } public boolean hasGeoZone36() { return (this.geoZone36_ != null); } public DolphinConfig.GeoZone getGeoZone36() { return (this.geoZone36_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone36_; } public DolphinConfig.GeoZoneOrBuilder getGeoZone36OrBuilder() { return getGeoZone36(); } public boolean hasGeoZone37() { return (this.geoZone37_ != null); } public DolphinConfig.GeoZone getGeoZone37() { return (this.geoZone37_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone37_; } public DolphinConfig.GeoZoneOrBuilder getGeoZone37OrBuilder() { return getGeoZone37(); } public boolean hasGeoZone38() { return (this.geoZone38_ != null); } public DolphinConfig.GeoZone getGeoZone38() { return (this.geoZone38_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone38_; } public DolphinConfig.GeoZoneOrBuilder getGeoZone38OrBuilder() { return getGeoZone38(); } public boolean hasGeoZone39() { return (this.geoZone39_ != null); } public DolphinConfig.GeoZone getGeoZone39() { return (this.geoZone39_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone39_; } public DolphinConfig.GeoZoneOrBuilder getGeoZone39OrBuilder() { return getGeoZone39(); } public boolean hasGeoZone40() { return (this.geoZone40_ != null); } public DolphinConfig.GeoZone getGeoZone40() { return (this.geoZone40_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone40_; } public DolphinConfig.GeoZoneOrBuilder getGeoZone40OrBuilder() { return getGeoZone40(); } public boolean hasGeoZone41() { return (this.geoZone41_ != null); } public DolphinConfig.GeoZone getGeoZone41() { return (this.geoZone41_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone41_; } public DolphinConfig.GeoZoneOrBuilder getGeoZone41OrBuilder() { return getGeoZone41(); } public boolean hasGeoZone42() { return (this.geoZone42_ != null); } public DolphinConfig.GeoZone getGeoZone42() { return (this.geoZone42_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone42_; } public DolphinConfig.GeoZoneOrBuilder getGeoZone42OrBuilder() { return getGeoZone42(); } public boolean hasGeoZone43() { return (this.geoZone43_ != null); } public DolphinConfig.GeoZone getGeoZone43() { return (this.geoZone43_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone43_; } public DolphinConfig.GeoZoneOrBuilder getGeoZone43OrBuilder() { return getGeoZone43(); } public boolean hasGeoZone44() { return (this.geoZone44_ != null); } public DolphinConfig.GeoZone getGeoZone44() { return (this.geoZone44_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone44_; } public DolphinConfig.GeoZoneOrBuilder getGeoZone44OrBuilder() { return getGeoZone44(); } public boolean hasGeoZone45() { return (this.geoZone45_ != null); } public DolphinConfig.GeoZone getGeoZone45() { return (this.geoZone45_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone45_; } public DolphinConfig.GeoZoneOrBuilder getGeoZone45OrBuilder() { return getGeoZone45(); } public boolean hasGeoZone46() { return (this.geoZone46_ != null); } public DolphinConfig.GeoZone getGeoZone46() { return (this.geoZone46_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone46_; } public DolphinConfig.GeoZoneOrBuilder getGeoZone46OrBuilder() { return getGeoZone46(); } public boolean hasGeoZone47() { return (this.geoZone47_ != null); } public DolphinConfig.GeoZone getGeoZone47() { return (this.geoZone47_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone47_; } public DolphinConfig.GeoZoneOrBuilder getGeoZone47OrBuilder() { return getGeoZone47(); } public boolean hasGeoZone48() { return (this.geoZone48_ != null); } public DolphinConfig.GeoZone getGeoZone48() { return (this.geoZone48_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone48_; } public DolphinConfig.GeoZoneOrBuilder getGeoZone48OrBuilder() { return getGeoZone48(); } public boolean hasGeoZone49() { return (this.geoZone49_ != null); } public DolphinConfig.GeoZone getGeoZone49() { return (this.geoZone49_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone49_; } public DolphinConfig.GeoZoneOrBuilder getGeoZone49OrBuilder() { return getGeoZone49(); } public boolean hasGeoZone50() { return (this.geoZone50_ != null); } public DolphinConfig.GeoZone getGeoZone50() { return (this.geoZone50_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone50_; } public DolphinConfig.GeoZoneOrBuilder getGeoZone50OrBuilder() { return getGeoZone50(); } public int getTripStartSpeed() { return this.tripStartSpeed_; } public boolean getTripUseIgnition() { return this.tripUseIgnition_; } public int getTripParkDetectionTimeout() { return this.tripParkDetectionTimeout_; } public boolean getOverspeedingEnable() { return this.overspeedingEnable_; } public int getOverspeedingLimit() { return this.overspeedingLimit_; } public int getOverspeedingActivationSpeed() { return this.overspeedingActivationSpeed_; } public int getOverspeedingDeactivationModeValue() { return this.overspeedingDeactivationMode_; } public DolphinConfig.OverSpeedingDeactivationMode getOverspeedingDeactivationMode() { DolphinConfig.OverSpeedingDeactivationMode result = DolphinConfig.OverSpeedingDeactivationMode.valueOf(this.overspeedingDeactivationMode_); return (result == null) ? DolphinConfig.OverSpeedingDeactivationMode.UNRECOGNIZED : result; } public int getOverspeedingDeactivationValue() { return this.overspeedingDeactivationValue_; } public boolean getUSSDEnabled() { return this.uSSDEnabled_; } public int getUSSDID() { return this.uSSDID_; } public int getUSSDInterval() { return this.uSSDInterval_; } public String getUSSDCode() { Object ref = this.uSSDCode_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.uSSDCode_ = s; return s; } public ByteString getUSSDCodeBytes() { Object ref = this.uSSDCode_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.uSSDCode_ = b; return b; }  return (ByteString)ref; } public int getSpeedSensorKmPulseCount() { return this.speedSensorKmPulseCount_; } public boolean getCrashDetectionEnabled() { return this.crashDetectionEnabled_; } public int getCrashDetectionLevel1Threshold() { return this.crashDetectionLevel1Threshold_; } public int getCrashDetectionLevel2Threshold() { return this.crashDetectionLevel2Threshold_; } public int getCrashDetectionLevel3Threshold() { return this.crashDetectionLevel3Threshold_; } public int getCrashDetectionTraceValue() { return this.crashDetectionTrace_; } public DolphinConfig.CrashTraceType getCrashDetectionTrace() { DolphinConfig.CrashTraceType result = DolphinConfig.CrashTraceType.valueOf(this.crashDetectionTrace_); return (result == null) ? DolphinConfig.CrashTraceType.UNRECOGNIZED : result; } public int getCrashDetectionDuration() { return this.crashDetectionDuration_; } public int getCrashDetectionSendSMSTo() { return this.crashDetectionSendSMSTo_; } public String getCrashDetectionSMSText() { Object ref = this.crashDetectionSMSText_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.crashDetectionSMSText_ = s; return s; } public ByteString getCrashDetectionSMSTextBytes() { Object ref = this.crashDetectionSMSText_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.crashDetectionSMSText_ = b; return b; }  return (ByteString)ref; } public int getCrashDetectionCallTo() { return this.crashDetectionCallTo_; } public boolean getRolloverDetectionEnabled() { return this.rolloverDetectionEnabled_; } public int getDriverRegistrationModeValue() { return this.driverRegistrationMode_; } public DolphinConfig.DriverRegistration_Mode getDriverRegistrationMode() { DolphinConfig.DriverRegistration_Mode result = DolphinConfig.DriverRegistration_Mode.valueOf(this.driverRegistrationMode_); return (result == null) ? DolphinConfig.DriverRegistration_Mode.UNRECOGNIZED : result; } public int getDriverRegistrationAuthenticationValue() { return this.driverRegistrationAuthentication_; } public DolphinConfig.DriverRegistration_Authentication getDriverRegistrationAuthentication() { DolphinConfig.DriverRegistration_Authentication result = DolphinConfig.DriverRegistration_Authentication.valueOf(this.driverRegistrationAuthentication_); return (result == null) ? DolphinConfig.DriverRegistration_Authentication.UNRECOGNIZED : result; } public int getDriverRegistrationDeregistrationTimeout() { return this.driverRegistrationDeregistrationTimeout_; } public int getDriverRegistrationBuzzerDigitalOutputValue() { return this.driverRegistrationBuzzerDigitalOutput_; } public DolphinConfig.DigitalOutputName getDriverRegistrationBuzzerDigitalOutput() { DolphinConfig.DigitalOutputName result = DolphinConfig.DigitalOutputName.valueOf(this.driverRegistrationBuzzerDigitalOutput_); return (result == null) ? DolphinConfig.DigitalOutputName.UNRECOGNIZED : result; } public int getDriverRegistrationImmobilizerDigitalOutputValue() { return this.driverRegistrationImmobilizerDigitalOutput_; } public DolphinConfig.DigitalOutputName getDriverRegistrationImmobilizerDigitalOutput() { DolphinConfig.DigitalOutputName result = DolphinConfig.DigitalOutputName.valueOf(this.driverRegistrationImmobilizerDigitalOutput_); return (result == null) ? DolphinConfig.DigitalOutputName.UNRECOGNIZED : result; } public boolean getDriverRegistrationImmobilizerActiveLow() { return this.driverRegistrationImmobilizerActiveLow_; } public long getDriverRegistrationAuthorizedID1() { return this.driverRegistrationAuthorizedID1_; } public long getDriverRegistrationAuthorizedID2() { return this.driverRegistrationAuthorizedID2_; } public long getDriverRegistrationAuthorizedID3() { return this.driverRegistrationAuthorizedID3_; } public long getDriverRegistrationAuthorizedID4() { return this.driverRegistrationAuthorizedID4_; } public long getDriverRegistrationAuthorizedID5() { return this.driverRegistrationAuthorizedID5_; } public long getDriverRegistrationAuthorizedID6() { return this.driverRegistrationAuthorizedID6_; } public long getDriverRegistrationAuthorizedID7() { return this.driverRegistrationAuthorizedID7_; } public long getDriverRegistrationAuthorizedID8() { return this.driverRegistrationAuthorizedID8_; } public long getDriverRegistrationAuthorizedID9() { return this.driverRegistrationAuthorizedID9_; } public long getDriverRegistrationAuthorizedID10() { return this.driverRegistrationAuthorizedID10_; } public boolean getECODriveActive() { return this.eCODriveActive_; } public int getECOOverSpeedingLimit() { return this.eCOOverSpeedingLimit_; } public int getECORPMGreenBandLowLimit() { return this.eCORPMGreenBandLowLimit_; } public int getECORPMGreenBandHighLimit() { return this.eCORPMGreenBandHighLimit_; } public int getECOHarshBreakingLimit() { return this.eCOHarshBreakingLimit_; } public int getECOExtremeBreakingLimit() { return this.eCOExtremeBreakingLimit_; } public int getECOHarshAccelerationLimit() { return this.eCOHarshAccelerationLimit_; } public int getECOCorneringLimit() { return this.eCOCorneringLimit_; } public int getECOIdlingDelay() { return this.eCOIdlingDelay_; } public int getECOIdlingSpeed() { return this.eCOIdlingSpeed_; } public int getECOCruiseControlSpeed() { return this.eCOCruiseControlSpeed_; } public boolean getECOCalculateOnlyWhenEngineOn() { return this.eCOCalculateOnlyWhenEngineOn_; } public boolean getECOCustomEngineSource() { return this.eCOCustomEngineSource_; } public boolean getECOEngineOnDIN1() { return this.eCOEngineOnDIN1_; } public boolean getECOEngineOnDIN2() { return this.eCOEngineOnDIN2_; } public boolean getECOEngineOnMovementSensor() { return this.eCOEngineOnMovementSensor_; } public boolean getECOEngineOnPowerSupplyAvailable() { return this.eCOEngineOnPowerSupplyAvailable_; } public int getECOEngineOnCanRPMLow() { return this.eCOEngineOnCanRPMLow_; } public int getECOEngineOnCanRPMHigh() { return this.eCOEngineOnCanRPMHigh_; } public int getECOEngineOnOperatorValue() { return this.eCOEngineOnOperator_; } public DolphinConfig.ConditionOperator getECOEngineOnOperator() { DolphinConfig.ConditionOperator result = DolphinConfig.ConditionOperator.valueOf(this.eCOEngineOnOperator_); return (result == null) ? DolphinConfig.ConditionOperator.UNRECOGNIZED : result; } public int getECOEngineOnExternalVoltage() { return this.eCOEngineOnExternalVoltage_; } public int getECUInterfaceValue() { return this.eCUInterface_; } public DolphinConfig.ECUInterface getECUInterface() { DolphinConfig.ECUInterface result = DolphinConfig.ECUInterface.valueOf(this.eCUInterface_); return (result == null) ? DolphinConfig.ECUInterface.UNRECOGNIZED : result; } public int getFuelConsumptionEnabledValue() { return this.fuelConsumptionEnabled_; } public DolphinConfig.FuelConsumption getFuelConsumptionEnabled() { DolphinConfig.FuelConsumption result = DolphinConfig.FuelConsumption.valueOf(this.fuelConsumptionEnabled_); return (result == null) ? DolphinConfig.FuelConsumption.UNRECOGNIZED : result; } public int getFuelConsumptionEngineDisplacement() { return this.fuelConsumptionEngineDisplacement_; } public int getFuelConsumptionCylinders() { return this.fuelConsumptionCylinders_; } public int getFuelConsumptionInjectorPerformance() { return this.fuelConsumptionInjectorPerformance_; } public int getFuelConsumptionVolumetricEfficiently() { return this.fuelConsumptionVolumetricEfficiently_; } public int getFaultCodesReadTime() { return this.faultCodesReadTime_; } public int getSIPAADLinkTimeout() { return this.sIPAADLinkTimeout_; } public int getSIPAADResponseTimeout() { return this.sIPAADResponseTimeout_; } public String getSIPAADServerAddress() { Object ref = this.sIPAADServerAddress_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.sIPAADServerAddress_ = s; return s; } public ByteString getSIPAADServerAddressBytes() { Object ref = this.sIPAADServerAddress_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.sIPAADServerAddress_ = b; return b; }  return (ByteString)ref; } public int getSIPAADServerPort() { return this.sIPAADServerPort_; } public int getSIPAADServerProtocolValue() { return this.sIPAADServerProtocol_; } public DolphinConfig.ServerProtocol getSIPAADServerProtocol() { DolphinConfig.ServerProtocol result = DolphinConfig.ServerProtocol.valueOf(this.sIPAADServerProtocol_); return (result == null) ? DolphinConfig.ServerProtocol.UNRECOGNIZED : result; } public boolean getSIPAADSSLClientAuthentication() { return this.sIPAADSSLClientAuthentication_; } public boolean hasIOTime() { return (this.iOTime_ != null); } public DolphinConfig.IO getIOTime() { return (this.iOTime_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOTime_; } public DolphinConfig.IOOrBuilder getIOTimeOrBuilder() { return getIOTime(); } public boolean hasIOAngle() { return (this.iOAngle_ != null); } public DolphinConfig.IO getIOAngle() { return (this.iOAngle_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOAngle_; } public DolphinConfig.IOOrBuilder getIOAngleOrBuilder() { return getIOAngle(); } public boolean hasIOSpeed() { return (this.iOSpeed_ != null); } public DolphinConfig.IO getIOSpeed() { return (this.iOSpeed_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOSpeed_; } public DolphinConfig.IOOrBuilder getIOSpeedOrBuilder() { return getIOSpeed(); } public boolean hasIOSleepMode() { return (this.iOSleepMode_ != null); } public DolphinConfig.IO getIOSleepMode() { return (this.iOSleepMode_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOSleepMode_; } public DolphinConfig.IOOrBuilder getIOSleepModeOrBuilder() { return getIOSleepMode(); } public boolean hasIOIgnition() { return (this.iOIgnition_ != null); } public DolphinConfig.IO getIOIgnition() { return (this.iOIgnition_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOIgnition_; } public DolphinConfig.IOOrBuilder getIOIgnitionOrBuilder() { return getIOIgnition(); } public boolean hasIOMovement() { return (this.iOMovement_ != null); } public DolphinConfig.IO getIOMovement() { return (this.iOMovement_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOMovement_; } public DolphinConfig.IOOrBuilder getIOMovementOrBuilder() { return getIOMovement(); } public boolean hasIODataMode() { return (this.iODataMode_ != null); } public DolphinConfig.IO getIODataMode() { return (this.iODataMode_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iODataMode_; } public DolphinConfig.IOOrBuilder getIODataModeOrBuilder() { return getIODataMode(); } public boolean hasIOGnssStatus() { return (this.iOGnssStatus_ != null); } public DolphinConfig.IO getIOGnssStatus() { return (this.iOGnssStatus_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOGnssStatus_; } public DolphinConfig.IOOrBuilder getIOGnssStatusOrBuilder() { return getIOGnssStatus(); } public boolean hasIOGnssHDOP() { return (this.iOGnssHDOP_ != null); } public DolphinConfig.IO getIOGnssHDOP() { return (this.iOGnssHDOP_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOGnssHDOP_; } public DolphinConfig.IOOrBuilder getIOGnssHDOPOrBuilder() { return getIOGnssHDOP(); } public boolean hasIOGnssPDOP() { return (this.iOGnssPDOP_ != null); } public DolphinConfig.IO getIOGnssPDOP() { return (this.iOGnssPDOP_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOGnssPDOP_; } public DolphinConfig.IOOrBuilder getIOGnssPDOPOrBuilder() { return getIOGnssPDOP(); } public boolean hasIOGnssJammingStatus() { return (this.iOGnssJammingStatus_ != null); } public DolphinConfig.IO getIOGnssJammingStatus() { return (this.iOGnssJammingStatus_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOGnssJammingStatus_; } public DolphinConfig.IOOrBuilder getIOGnssJammingStatusOrBuilder() { return getIOGnssJammingStatus(); } public boolean hasIOGsmSignal() { return (this.iOGsmSignal_ != null); } public DolphinConfig.IO getIOGsmSignal() { return (this.iOGsmSignal_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOGsmSignal_; } public DolphinConfig.IOOrBuilder getIOGsmSignalOrBuilder() { return getIOGsmSignal(); } public boolean hasIOGsmCellId() { return (this.iOGsmCellId_ != null); } public DolphinConfig.IO getIOGsmCellId() { return (this.iOGsmCellId_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOGsmCellId_; } public DolphinConfig.IOOrBuilder getIOGsmCellIdOrBuilder() { return getIOGsmCellId(); } public boolean hasIOGsmAreaCode() { return (this.iOGsmAreaCode_ != null); } public DolphinConfig.IO getIOGsmAreaCode() { return (this.iOGsmAreaCode_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOGsmAreaCode_; } public DolphinConfig.IOOrBuilder getIOGsmAreaCodeOrBuilder() { return getIOGsmAreaCode(); } public boolean hasIOGsmOperator() { return (this.iOGsmOperator_ != null); } public DolphinConfig.IO getIOGsmOperator() { return (this.iOGsmOperator_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOGsmOperator_; } public DolphinConfig.IOOrBuilder getIOGsmOperatorOrBuilder() { return getIOGsmOperator(); } public boolean hasIOGsmTemperature() { return (this.iOGsmTemperature_ != null); } public DolphinConfig.IO getIOGsmTemperature() { return (this.iOGsmTemperature_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOGsmTemperature_; } public DolphinConfig.IOOrBuilder getIOGsmTemperatureOrBuilder() { return getIOGsmTemperature(); } public boolean hasIOGsmJammingStatus() { return (this.iOGsmJammingStatus_ != null); } public DolphinConfig.IO getIOGsmJammingStatus() { return (this.iOGsmJammingStatus_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOGsmJammingStatus_; } public DolphinConfig.IOOrBuilder getIOGsmJammingStatusOrBuilder() { return getIOGsmJammingStatus(); } public boolean hasIOExternalVoltage() { return (this.iOExternalVoltage_ != null); } public DolphinConfig.IO getIOExternalVoltage() { return (this.iOExternalVoltage_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOExternalVoltage_; } public DolphinConfig.IOOrBuilder getIOExternalVoltageOrBuilder() { return getIOExternalVoltage(); } public boolean hasIOBatteryVoltage() { return (this.iOBatteryVoltage_ != null); } public DolphinConfig.IO getIOBatteryVoltage() { return (this.iOBatteryVoltage_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOBatteryVoltage_; } public DolphinConfig.IOOrBuilder getIOBatteryVoltageOrBuilder() { return getIOBatteryVoltage(); } public boolean hasIOBatteryCurrent() { return (this.iOBatteryCurrent_ != null); } public DolphinConfig.IO getIOBatteryCurrent() { return (this.iOBatteryCurrent_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOBatteryCurrent_; } public DolphinConfig.IOOrBuilder getIOBatteryCurrentOrBuilder() { return getIOBatteryCurrent(); } public boolean hasIOTotalOdometer() { return (this.iOTotalOdometer_ != null); } public DolphinConfig.IO getIOTotalOdometer() { return (this.iOTotalOdometer_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOTotalOdometer_; } public DolphinConfig.IOOrBuilder getIOTotalOdometerOrBuilder() { return getIOTotalOdometer(); } public boolean hasIOOdometer() { return (this.iOOdometer_ != null); } public DolphinConfig.IO getIOOdometer() { return (this.iOOdometer_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOOdometer_; } public DolphinConfig.IOOrBuilder getIOOdometerOrBuilder() { return getIOOdometer(); } public boolean hasIOEngineOnTime() { return (this.iOEngineOnTime_ != null); } public DolphinConfig.IO getIOEngineOnTime() { return (this.iOEngineOnTime_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOEngineOnTime_; } public DolphinConfig.IOOrBuilder getIOEngineOnTimeOrBuilder() { return getIOEngineOnTime(); } public boolean hasIOEngineOnTimeDelta() { return (this.iOEngineOnTimeDelta_ != null); } public DolphinConfig.IO getIOEngineOnTimeDelta() { return (this.iOEngineOnTimeDelta_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOEngineOnTimeDelta_; } public DolphinConfig.IOOrBuilder getIOEngineOnTimeDeltaOrBuilder() { return getIOEngineOnTimeDelta(); } public boolean hasIOIdlingTime() { return (this.iOIdlingTime_ != null); } public DolphinConfig.IO getIOIdlingTime() { return (this.iOIdlingTime_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOIdlingTime_; } public DolphinConfig.IOOrBuilder getIOIdlingTimeOrBuilder() { return getIOIdlingTime(); } public boolean hasIOIdlingTimeDelta() { return (this.iOIdlingTimeDelta_ != null); } public DolphinConfig.IO getIOIdlingTimeDelta() { return (this.iOIdlingTimeDelta_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOIdlingTimeDelta_; } public DolphinConfig.IOOrBuilder getIOIdlingTimeDeltaOrBuilder() { return getIOIdlingTimeDelta(); } public boolean hasIOSpeedSensorSpeed() { return (this.iOSpeedSensorSpeed_ != null); } public DolphinConfig.IO getIOSpeedSensorSpeed() { return (this.iOSpeedSensorSpeed_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOSpeedSensorSpeed_; } public DolphinConfig.IOOrBuilder getIOSpeedSensorSpeedOrBuilder() { return getIOSpeedSensorSpeed(); } public boolean hasIOSpeedSensorDistance() { return (this.iOSpeedSensorDistance_ != null); } public DolphinConfig.IO getIOSpeedSensorDistance() { return (this.iOSpeedSensorDistance_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOSpeedSensorDistance_; } public DolphinConfig.IOOrBuilder getIOSpeedSensorDistanceOrBuilder() { return getIOSpeedSensorDistance(); } public boolean hasIOSpeedSensorTotalDistance() { return (this.iOSpeedSensorTotalDistance_ != null); } public DolphinConfig.IO getIOSpeedSensorTotalDistance() { return (this.iOSpeedSensorTotalDistance_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOSpeedSensorTotalDistance_; } public DolphinConfig.IOOrBuilder getIOSpeedSensorTotalDistanceOrBuilder() { return getIOSpeedSensorTotalDistance(); } public boolean hasIOSpeedSensorMaxSpeed() { return (this.iOSpeedSensorMaxSpeed_ != null); } public DolphinConfig.IO getIOSpeedSensorMaxSpeed() { return (this.iOSpeedSensorMaxSpeed_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOSpeedSensorMaxSpeed_; } public DolphinConfig.IOOrBuilder getIOSpeedSensorMaxSpeedOrBuilder() { return getIOSpeedSensorMaxSpeed(); } public boolean hasIOSpeedSensorGPSSpeedDiff() { return (this.iOSpeedSensorGPSSpeedDiff_ != null); } public DolphinConfig.IO getIOSpeedSensorGPSSpeedDiff() { return (this.iOSpeedSensorGPSSpeedDiff_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOSpeedSensorGPSSpeedDiff_; } public DolphinConfig.IOOrBuilder getIOSpeedSensorGPSSpeedDiffOrBuilder() { return getIOSpeedSensorGPSSpeedDiff(); } public boolean hasIODigitalInput1() { return (this.iODigitalInput1_ != null); } public DolphinConfig.IO getIODigitalInput1() { return (this.iODigitalInput1_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iODigitalInput1_; } public DolphinConfig.IOOrBuilder getIODigitalInput1OrBuilder() { return getIODigitalInput1(); } public boolean hasIODigitalInput2() { return (this.iODigitalInput2_ != null); } public DolphinConfig.IO getIODigitalInput2() { return (this.iODigitalInput2_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iODigitalInput2_; } public DolphinConfig.IOOrBuilder getIODigitalInput2OrBuilder() { return getIODigitalInput2(); } public boolean hasIOPowerSupply() { return (this.iOPowerSupply_ != null); } public DolphinConfig.IO getIOPowerSupply() { return (this.iOPowerSupply_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOPowerSupply_; } public DolphinConfig.IOOrBuilder getIOPowerSupplyOrBuilder() { return getIOPowerSupply(); } public boolean hasIODigitalInput3() { return (this.iODigitalInput3_ != null); } public DolphinConfig.IO getIODigitalInput3() { return (this.iODigitalInput3_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iODigitalInput3_; } public DolphinConfig.IOOrBuilder getIODigitalInput3OrBuilder() { return getIODigitalInput3(); } public boolean hasIOVehicleConnection() { return (this.iOVehicleConnection_ != null); } public DolphinConfig.IO getIOVehicleConnection() { return (this.iOVehicleConnection_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOVehicleConnection_; } public DolphinConfig.IOOrBuilder getIOVehicleConnectionOrBuilder() { return getIOVehicleConnection(); } public boolean hasIODigitalInput1Time() { return (this.iODigitalInput1Time_ != null); } public DolphinConfig.IO getIODigitalInput1Time() { return (this.iODigitalInput1Time_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iODigitalInput1Time_; } public DolphinConfig.IOOrBuilder getIODigitalInput1TimeOrBuilder() { return getIODigitalInput1Time(); } public boolean hasIODigitalInput1TimeDelta() { return (this.iODigitalInput1TimeDelta_ != null); } public DolphinConfig.IO getIODigitalInput1TimeDelta() { return (this.iODigitalInput1TimeDelta_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iODigitalInput1TimeDelta_; } public DolphinConfig.IOOrBuilder getIODigitalInput1TimeDeltaOrBuilder() { return getIODigitalInput1TimeDelta(); } public boolean hasIODigitalInput2Time() { return (this.iODigitalInput2Time_ != null); } public DolphinConfig.IO getIODigitalInput2Time() { return (this.iODigitalInput2Time_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iODigitalInput2Time_; } public DolphinConfig.IOOrBuilder getIODigitalInput2TimeOrBuilder() { return getIODigitalInput2Time(); } public boolean hasIODigitalInput2TimeDelta() { return (this.iODigitalInput2TimeDelta_ != null); } public DolphinConfig.IO getIODigitalInput2TimeDelta() { return (this.iODigitalInput2TimeDelta_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iODigitalInput2TimeDelta_; } public DolphinConfig.IOOrBuilder getIODigitalInput2TimeDeltaOrBuilder() { return getIODigitalInput2TimeDelta(); } public boolean hasIOPowerSupplyTime() { return (this.iOPowerSupplyTime_ != null); } public DolphinConfig.IO getIOPowerSupplyTime() { return (this.iOPowerSupplyTime_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOPowerSupplyTime_; } public DolphinConfig.IOOrBuilder getIOPowerSupplyTimeOrBuilder() { return getIOPowerSupplyTime(); } public boolean hasIOPowerSupplyTimeDelta() { return (this.iOPowerSupplyTimeDelta_ != null); } public DolphinConfig.IO getIOPowerSupplyTimeDelta() { return (this.iOPowerSupplyTimeDelta_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOPowerSupplyTimeDelta_; } public DolphinConfig.IOOrBuilder getIOPowerSupplyTimeDeltaOrBuilder() { return getIOPowerSupplyTimeDelta(); } public boolean hasIODigitalInput3Time() { return (this.iODigitalInput3Time_ != null); } public DolphinConfig.IO getIODigitalInput3Time() { return (this.iODigitalInput3Time_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iODigitalInput3Time_; } public DolphinConfig.IOOrBuilder getIODigitalInput3TimeOrBuilder() { return getIODigitalInput3Time(); } public boolean hasIODigitalInput3TimeDelta() { return (this.iODigitalInput3TimeDelta_ != null); } public DolphinConfig.IO getIODigitalInput3TimeDelta() { return (this.iODigitalInput3TimeDelta_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iODigitalInput3TimeDelta_; } public DolphinConfig.IOOrBuilder getIODigitalInput3TimeDeltaOrBuilder() { return getIODigitalInput3TimeDelta(); } public boolean hasIODigitalOutput1() { return (this.iODigitalOutput1_ != null); } public DolphinConfig.IO getIODigitalOutput1() { return (this.iODigitalOutput1_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iODigitalOutput1_; } public DolphinConfig.IOOrBuilder getIODigitalOutput1OrBuilder() { return getIODigitalOutput1(); } public boolean hasIODigitalOutput2() { return (this.iODigitalOutput2_ != null); } public DolphinConfig.IO getIODigitalOutput2() { return (this.iODigitalOutput2_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iODigitalOutput2_; } public DolphinConfig.IOOrBuilder getIODigitalOutput2OrBuilder() { return getIODigitalOutput2(); } public boolean hasIOAnalogInput1() { return (this.iOAnalogInput1_ != null); } public DolphinConfig.IO getIOAnalogInput1() { return (this.iOAnalogInput1_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOAnalogInput1_; } public DolphinConfig.IOOrBuilder getIOAnalogInput1OrBuilder() { return getIOAnalogInput1(); } public boolean hasIOAnalogInput2() { return (this.iOAnalogInput2_ != null); } public DolphinConfig.IO getIOAnalogInput2() { return (this.iOAnalogInput2_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOAnalogInput2_; } public DolphinConfig.IOOrBuilder getIOAnalogInput2OrBuilder() { return getIOAnalogInput2(); } public boolean hasIOAnalogInput3() { return (this.iOAnalogInput3_ != null); } public DolphinConfig.IO getIOAnalogInput3() { return (this.iOAnalogInput3_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOAnalogInput3_; } public DolphinConfig.IOOrBuilder getIOAnalogInput3OrBuilder() { return getIOAnalogInput3(); } public boolean hasIOAxisX() { return (this.iOAxisX_ != null); } public DolphinConfig.IO getIOAxisX() { return (this.iOAxisX_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOAxisX_; } public DolphinConfig.IOOrBuilder getIOAxisXOrBuilder() { return getIOAxisX(); } public boolean hasIOAxisY() { return (this.iOAxisY_ != null); } public DolphinConfig.IO getIOAxisY() { return (this.iOAxisY_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOAxisY_; } public DolphinConfig.IOOrBuilder getIOAxisYOrBuilder() { return getIOAxisY(); } public boolean hasIOAxisZ() { return (this.iOAxisZ_ != null); } public DolphinConfig.IO getIOAxisZ() { return (this.iOAxisZ_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOAxisZ_; } public DolphinConfig.IOOrBuilder getIOAxisZOrBuilder() { return getIOAxisZ(); } public boolean hasIOECOMaxSpeed() { return (this.iOECOMaxSpeed_ != null); } public DolphinConfig.IO getIOECOMaxSpeed() { return (this.iOECOMaxSpeed_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOECOMaxSpeed_; } public DolphinConfig.IOOrBuilder getIOECOMaxSpeedOrBuilder() { return getIOECOMaxSpeed(); } public boolean hasIOECONormalSpeedDistance() { return (this.iOECONormalSpeedDistance_ != null); } public DolphinConfig.IO getIOECONormalSpeedDistance() { return (this.iOECONormalSpeedDistance_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOECONormalSpeedDistance_; } public DolphinConfig.IOOrBuilder getIOECONormalSpeedDistanceOrBuilder() { return getIOECONormalSpeedDistance(); } public boolean hasIOECONormalSpeedTotalDistance() { return (this.iOECONormalSpeedTotalDistance_ != null); } public DolphinConfig.IO getIOECONormalSpeedTotalDistance() { return (this.iOECONormalSpeedTotalDistance_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOECONormalSpeedTotalDistance_; } public DolphinConfig.IOOrBuilder getIOECONormalSpeedTotalDistanceOrBuilder() { return getIOECONormalSpeedTotalDistance(); } public boolean hasIOECONormalSpeedTimer() { return (this.iOECONormalSpeedTimer_ != null); } public DolphinConfig.IO getIOECONormalSpeedTimer() { return (this.iOECONormalSpeedTimer_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOECONormalSpeedTimer_; } public DolphinConfig.IOOrBuilder getIOECONormalSpeedTimerOrBuilder() { return getIOECONormalSpeedTimer(); } public boolean hasIOECONormalSpeedTotalTimer() { return (this.iOECONormalSpeedTotalTimer_ != null); } public DolphinConfig.IO getIOECONormalSpeedTotalTimer() { return (this.iOECONormalSpeedTotalTimer_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOECONormalSpeedTotalTimer_; } public DolphinConfig.IOOrBuilder getIOECONormalSpeedTotalTimerOrBuilder() { return getIOECONormalSpeedTotalTimer(); } public boolean hasIOECOOverSpeedingDistance() { return (this.iOECOOverSpeedingDistance_ != null); } public DolphinConfig.IO getIOECOOverSpeedingDistance() { return (this.iOECOOverSpeedingDistance_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOECOOverSpeedingDistance_; } public DolphinConfig.IOOrBuilder getIOECOOverSpeedingDistanceOrBuilder() { return getIOECOOverSpeedingDistance(); } public boolean hasIOECOOverSpeedingTotalDistance() { return (this.iOECOOverSpeedingTotalDistance_ != null); } public DolphinConfig.IO getIOECOOverSpeedingTotalDistance() { return (this.iOECOOverSpeedingTotalDistance_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOECOOverSpeedingTotalDistance_; } public DolphinConfig.IOOrBuilder getIOECOOverSpeedingTotalDistanceOrBuilder() { return getIOECOOverSpeedingTotalDistance(); } public boolean hasIOECOOverSpeedingTimer() { return (this.iOECOOverSpeedingTimer_ != null); } public DolphinConfig.IO getIOECOOverSpeedingTimer() { return (this.iOECOOverSpeedingTimer_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOECOOverSpeedingTimer_; } public DolphinConfig.IOOrBuilder getIOECOOverSpeedingTimerOrBuilder() { return getIOECOOverSpeedingTimer(); } public boolean hasIOECOOverSpeedingTotalTimer() { return (this.iOECOOverSpeedingTotalTimer_ != null); } public DolphinConfig.IO getIOECOOverSpeedingTotalTimer() { return (this.iOECOOverSpeedingTotalTimer_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOECOOverSpeedingTotalTimer_; } public DolphinConfig.IOOrBuilder getIOECOOverSpeedingTotalTimerOrBuilder() { return getIOECOOverSpeedingTotalTimer(); } public boolean hasIOECOMaxRPM() { return (this.iOECOMaxRPM_ != null); } public DolphinConfig.IO getIOECOMaxRPM() { return (this.iOECOMaxRPM_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOECOMaxRPM_; } public DolphinConfig.IOOrBuilder getIOECOMaxRPMOrBuilder() { return getIOECOMaxRPM(); } public boolean hasIOECORPMGreenBandDistance() { return (this.iOECORPMGreenBandDistance_ != null); } public DolphinConfig.IO getIOECORPMGreenBandDistance() { return (this.iOECORPMGreenBandDistance_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOECORPMGreenBandDistance_; } public DolphinConfig.IOOrBuilder getIOECORPMGreenBandDistanceOrBuilder() { return getIOECORPMGreenBandDistance(); } public boolean hasIOECORPMGreenBandTotalDistance() { return (this.iOECORPMGreenBandTotalDistance_ != null); } public DolphinConfig.IO getIOECORPMGreenBandTotalDistance() { return (this.iOECORPMGreenBandTotalDistance_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOECORPMGreenBandTotalDistance_; } public DolphinConfig.IOOrBuilder getIOECORPMGreenBandTotalDistanceOrBuilder() { return getIOECORPMGreenBandTotalDistance(); } public boolean hasIOECORPMGreenBandTimer() { return (this.iOECORPMGreenBandTimer_ != null); } public DolphinConfig.IO getIOECORPMGreenBandTimer() { return (this.iOECORPMGreenBandTimer_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOECORPMGreenBandTimer_; } public DolphinConfig.IOOrBuilder getIOECORPMGreenBandTimerOrBuilder() { return getIOECORPMGreenBandTimer(); } public boolean hasIOECORPMGreenBandTotalTimer() { return (this.iOECORPMGreenBandTotalTimer_ != null); } public DolphinConfig.IO getIOECORPMGreenBandTotalTimer() { return (this.iOECORPMGreenBandTotalTimer_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOECORPMGreenBandTotalTimer_; } public DolphinConfig.IOOrBuilder getIOECORPMGreenBandTotalTimerOrBuilder() { return getIOECORPMGreenBandTotalTimer(); } public boolean hasIOECOOverRPMDistance() { return (this.iOECOOverRPMDistance_ != null); } public DolphinConfig.IO getIOECOOverRPMDistance() { return (this.iOECOOverRPMDistance_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOECOOverRPMDistance_; } public DolphinConfig.IOOrBuilder getIOECOOverRPMDistanceOrBuilder() { return getIOECOOverRPMDistance(); } public boolean hasIOECOOverRPMTotalDistance() { return (this.iOECOOverRPMTotalDistance_ != null); } public DolphinConfig.IO getIOECOOverRPMTotalDistance() { return (this.iOECOOverRPMTotalDistance_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOECOOverRPMTotalDistance_; } public DolphinConfig.IOOrBuilder getIOECOOverRPMTotalDistanceOrBuilder() { return getIOECOOverRPMTotalDistance(); } public boolean hasIOECOOverRPMTimer() { return (this.iOECOOverRPMTimer_ != null); } public DolphinConfig.IO getIOECOOverRPMTimer() { return (this.iOECOOverRPMTimer_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOECOOverRPMTimer_; } public DolphinConfig.IOOrBuilder getIOECOOverRPMTimerOrBuilder() { return getIOECOOverRPMTimer(); } public boolean hasIOECOOverRPMTotalTimer() { return (this.iOECOOverRPMTotalTimer_ != null); } public DolphinConfig.IO getIOECOOverRPMTotalTimer() { return (this.iOECOOverRPMTotalTimer_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOECOOverRPMTotalTimer_; } public DolphinConfig.IOOrBuilder getIOECOOverRPMTotalTimerOrBuilder() { return getIOECOOverRPMTotalTimer(); } public boolean hasIOECOIdlingEvent() { return (this.iOECOIdlingEvent_ != null); } public DolphinConfig.IO getIOECOIdlingEvent() { return (this.iOECOIdlingEvent_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOECOIdlingEvent_; } public DolphinConfig.IOOrBuilder getIOECOIdlingEventOrBuilder() { return getIOECOIdlingEvent(); } public boolean hasIOECOCruiseControlTimer() { return (this.iOECOCruiseControlTimer_ != null); } public DolphinConfig.IO getIOECOCruiseControlTimer() { return (this.iOECOCruiseControlTimer_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOECOCruiseControlTimer_; } public DolphinConfig.IOOrBuilder getIOECOCruiseControlTimerOrBuilder() { return getIOECOCruiseControlTimer(); } public boolean hasIOECOCruiseControlTotalTimer() { return (this.iOECOCruiseControlTotalTimer_ != null); } public DolphinConfig.IO getIOECOCruiseControlTotalTimer() { return (this.iOECOCruiseControlTotalTimer_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOECOCruiseControlTotalTimer_; } public DolphinConfig.IOOrBuilder getIOECOCruiseControlTotalTimerOrBuilder() { return getIOECOCruiseControlTotalTimer(); } public boolean hasIOECOCruiseControlDistance() { return (this.iOECOCruiseControlDistance_ != null); } public DolphinConfig.IO getIOECOCruiseControlDistance() { return (this.iOECOCruiseControlDistance_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOECOCruiseControlDistance_; } public DolphinConfig.IOOrBuilder getIOECOCruiseControlDistanceOrBuilder() { return getIOECOCruiseControlDistance(); } public boolean hasIOECOCruiseControlTotalDistance() { return (this.iOECOCruiseControlTotalDistance_ != null); } public DolphinConfig.IO getIOECOCruiseControlTotalDistance() { return (this.iOECOCruiseControlTotalDistance_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOECOCruiseControlTotalDistance_; } public DolphinConfig.IOOrBuilder getIOECOCruiseControlTotalDistanceOrBuilder() { return getIOECOCruiseControlTotalDistance(); } public boolean hasIOECOUnderRPMDistance() { return (this.iOECOUnderRPMDistance_ != null); } public DolphinConfig.IO getIOECOUnderRPMDistance() { return (this.iOECOUnderRPMDistance_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOECOUnderRPMDistance_; } public DolphinConfig.IOOrBuilder getIOECOUnderRPMDistanceOrBuilder() { return getIOECOUnderRPMDistance(); } public boolean hasIOECOUnderRPMTotalDistance() { return (this.iOECOUnderRPMTotalDistance_ != null); } public DolphinConfig.IO getIOECOUnderRPMTotalDistance() { return (this.iOECOUnderRPMTotalDistance_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOECOUnderRPMTotalDistance_; } public DolphinConfig.IOOrBuilder getIOECOUnderRPMTotalDistanceOrBuilder() { return getIOECOUnderRPMTotalDistance(); } public boolean hasIOECOUnderRPMTimer() { return (this.iOECOUnderRPMTimer_ != null); } public DolphinConfig.IO getIOECOUnderRPMTimer() { return (this.iOECOUnderRPMTimer_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOECOUnderRPMTimer_; } public DolphinConfig.IOOrBuilder getIOECOUnderRPMTimerOrBuilder() { return getIOECOUnderRPMTimer(); } public boolean hasIOECOUnderRPMTotalTimer() { return (this.iOECOUnderRPMTotalTimer_ != null); } public DolphinConfig.IO getIOECOUnderRPMTotalTimer() { return (this.iOECOUnderRPMTotalTimer_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOECOUnderRPMTotalTimer_; } public DolphinConfig.IOOrBuilder getIOECOUnderRPMTotalTimerOrBuilder() { return getIOECOUnderRPMTotalTimer(); } public boolean hasIOECOBreakCounter() { return (this.iOECOBreakCounter_ != null); } public DolphinConfig.IO getIOECOBreakCounter() { return (this.iOECOBreakCounter_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOECOBreakCounter_; } public DolphinConfig.IOOrBuilder getIOECOBreakCounterOrBuilder() { return getIOECOBreakCounter(); } public boolean hasIOECOHarshBreakCounter() { return (this.iOECOHarshBreakCounter_ != null); } public DolphinConfig.IO getIOECOHarshBreakCounter() { return (this.iOECOHarshBreakCounter_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOECOHarshBreakCounter_; } public DolphinConfig.IOOrBuilder getIOECOHarshBreakCounterOrBuilder() { return getIOECOHarshBreakCounter(); } public boolean hasIOECOExtremeBreakCounter() { return (this.iOECOExtremeBreakCounter_ != null); } public DolphinConfig.IO getIOECOExtremeBreakCounter() { return (this.iOECOExtremeBreakCounter_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOECOExtremeBreakCounter_; } public DolphinConfig.IOOrBuilder getIOECOExtremeBreakCounterOrBuilder() { return getIOECOExtremeBreakCounter(); } public boolean hasIOECOHarshAccelerationCounter() { return (this.iOECOHarshAccelerationCounter_ != null); } public DolphinConfig.IO getIOECOHarshAccelerationCounter() { return (this.iOECOHarshAccelerationCounter_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOECOHarshAccelerationCounter_; } public DolphinConfig.IOOrBuilder getIOECOHarshAccelerationCounterOrBuilder() { return getIOECOHarshAccelerationCounter(); } public boolean hasIOECOCorneringCounter() { return (this.iOECOCorneringCounter_ != null); } public DolphinConfig.IO getIOECOCorneringCounter() { return (this.iOECOCorneringCounter_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOECOCorneringCounter_; } public DolphinConfig.IOOrBuilder getIOECOCorneringCounterOrBuilder() { return getIOECOCorneringCounter(); } public boolean hasIOECOTotalBreak() { return (this.iOECOTotalBreak_ != null); } public DolphinConfig.IO getIOECOTotalBreak() { return (this.iOECOTotalBreak_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOECOTotalBreak_; } public DolphinConfig.IOOrBuilder getIOECOTotalBreakOrBuilder() { return getIOECOTotalBreak(); } public boolean hasIOECOTotalHarshBreak() { return (this.iOECOTotalHarshBreak_ != null); } public DolphinConfig.IO getIOECOTotalHarshBreak() { return (this.iOECOTotalHarshBreak_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOECOTotalHarshBreak_; } public DolphinConfig.IOOrBuilder getIOECOTotalHarshBreakOrBuilder() { return getIOECOTotalHarshBreak(); } public boolean hasIOECOTotalExtremeBreak() { return (this.iOECOTotalExtremeBreak_ != null); } public DolphinConfig.IO getIOECOTotalExtremeBreak() { return (this.iOECOTotalExtremeBreak_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOECOTotalExtremeBreak_; } public DolphinConfig.IOOrBuilder getIOECOTotalExtremeBreakOrBuilder() { return getIOECOTotalExtremeBreak(); } public boolean hasIOECOTotalHarshAcceleration() { return (this.iOECOTotalHarshAcceleration_ != null); } public DolphinConfig.IO getIOECOTotalHarshAcceleration() { return (this.iOECOTotalHarshAcceleration_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOECOTotalHarshAcceleration_; } public DolphinConfig.IOOrBuilder getIOECOTotalHarshAccelerationOrBuilder() { return getIOECOTotalHarshAcceleration(); } public boolean hasIOECOTotalCornering() { return (this.iOECOTotalCornering_ != null); } public DolphinConfig.IO getIOECOTotalCornering() { return (this.iOECOTotalCornering_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOECOTotalCornering_; } public DolphinConfig.IOOrBuilder getIOECOTotalCorneringOrBuilder() { return getIOECOTotalCornering(); } public boolean hasIOTrip() { return (this.iOTrip_ != null); } public DolphinConfig.IO getIOTrip() { return (this.iOTrip_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOTrip_; } public DolphinConfig.IOOrBuilder getIOTripOrBuilder() { return getIOTrip(); } public boolean hasIOTripTime() { return (this.iOTripTime_ != null); } public DolphinConfig.IO getIOTripTime() { return (this.iOTripTime_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOTripTime_; } public DolphinConfig.IOOrBuilder getIOTripTimeOrBuilder() { return getIOTripTime(); } public boolean hasIOTripDistance() { return (this.iOTripDistance_ != null); } public DolphinConfig.IO getIOTripDistance() { return (this.iOTripDistance_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOTripDistance_; } public DolphinConfig.IOOrBuilder getIOTripDistanceOrBuilder() { return getIOTripDistance(); } public boolean hasIODriverID() { return (this.iODriverID_ != null); } public DolphinConfig.IO getIODriverID() { return (this.iODriverID_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iODriverID_; } public DolphinConfig.IOOrBuilder getIODriverIDOrBuilder() { return getIODriverID(); } public boolean hasIOTemperatureSensor1() { return (this.iOTemperatureSensor1_ != null); } public DolphinConfig.IO getIOTemperatureSensor1() { return (this.iOTemperatureSensor1_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOTemperatureSensor1_; } public DolphinConfig.IOOrBuilder getIOTemperatureSensor1OrBuilder() { return getIOTemperatureSensor1(); } public boolean hasIOTemperatureSensor1ID() { return (this.iOTemperatureSensor1ID_ != null); } public DolphinConfig.IO getIOTemperatureSensor1ID() { return (this.iOTemperatureSensor1ID_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOTemperatureSensor1ID_; } public DolphinConfig.IOOrBuilder getIOTemperatureSensor1IDOrBuilder() { return getIOTemperatureSensor1ID(); } public boolean hasIOTemperatureSensor2() { return (this.iOTemperatureSensor2_ != null); } public DolphinConfig.IO getIOTemperatureSensor2() { return (this.iOTemperatureSensor2_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOTemperatureSensor2_; } public DolphinConfig.IOOrBuilder getIOTemperatureSensor2OrBuilder() { return getIOTemperatureSensor2(); } public boolean hasIOTemperatureSensor2ID() { return (this.iOTemperatureSensor2ID_ != null); } public DolphinConfig.IO getIOTemperatureSensor2ID() { return (this.iOTemperatureSensor2ID_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOTemperatureSensor2ID_; } public DolphinConfig.IOOrBuilder getIOTemperatureSensor2IDOrBuilder() { return getIOTemperatureSensor2ID(); } public boolean hasIOTemperatureSensor3() { return (this.iOTemperatureSensor3_ != null); } public DolphinConfig.IO getIOTemperatureSensor3() { return (this.iOTemperatureSensor3_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOTemperatureSensor3_; } public DolphinConfig.IOOrBuilder getIOTemperatureSensor3OrBuilder() { return getIOTemperatureSensor3(); } public boolean hasIOTemperatureSensor3ID() { return (this.iOTemperatureSensor3ID_ != null); } public DolphinConfig.IO getIOTemperatureSensor3ID() { return (this.iOTemperatureSensor3ID_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOTemperatureSensor3ID_; } public DolphinConfig.IOOrBuilder getIOTemperatureSensor3IDOrBuilder() { return getIOTemperatureSensor3ID(); } public boolean hasIOHumiditySensor1() { return (this.iOHumiditySensor1_ != null); } public DolphinConfig.IO getIOHumiditySensor1() { return (this.iOHumiditySensor1_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOHumiditySensor1_; } public DolphinConfig.IOOrBuilder getIOHumiditySensor1OrBuilder() { return getIOHumiditySensor1(); } public boolean hasIOTiltStatus() { return (this.iOTiltStatus_ != null); } public DolphinConfig.IO getIOTiltStatus() { return (this.iOTiltStatus_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOTiltStatus_; } public DolphinConfig.IOOrBuilder getIOTiltStatusOrBuilder() { return getIOTiltStatus(); } public boolean hasIOOBDEngineRPM() { return (this.iOOBDEngineRPM_ != null); } public DolphinConfig.IO getIOOBDEngineRPM() { return (this.iOOBDEngineRPM_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOOBDEngineRPM_; } public DolphinConfig.IOOrBuilder getIOOBDEngineRPMOrBuilder() { return getIOOBDEngineRPM(); } public boolean hasIOOBDBatteryVoltage() { return (this.iOOBDBatteryVoltage_ != null); } public DolphinConfig.IO getIOOBDBatteryVoltage() { return (this.iOOBDBatteryVoltage_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOOBDBatteryVoltage_; } public DolphinConfig.IOOrBuilder getIOOBDBatteryVoltageOrBuilder() { return getIOOBDBatteryVoltage(); } public boolean hasIOOBDEngineCoolantTemperature() { return (this.iOOBDEngineCoolantTemperature_ != null); } public DolphinConfig.IO getIOOBDEngineCoolantTemperature() { return (this.iOOBDEngineCoolantTemperature_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOOBDEngineCoolantTemperature_; } public DolphinConfig.IOOrBuilder getIOOBDEngineCoolantTemperatureOrBuilder() { return getIOOBDEngineCoolantTemperature(); } public boolean hasIOOBDVehicleSpeed() { return (this.iOOBDVehicleSpeed_ != null); } public DolphinConfig.IO getIOOBDVehicleSpeed() { return (this.iOOBDVehicleSpeed_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOOBDVehicleSpeed_; } public DolphinConfig.IOOrBuilder getIOOBDVehicleSpeedOrBuilder() { return getIOOBDVehicleSpeed(); } public boolean hasIOOBDTotalDistance() { return (this.iOOBDTotalDistance_ != null); } public DolphinConfig.IO getIOOBDTotalDistance() { return (this.iOOBDTotalDistance_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOOBDTotalDistance_; } public DolphinConfig.IOOrBuilder getIOOBDTotalDistanceOrBuilder() { return getIOOBDTotalDistance(); } public boolean hasIOOBDFuelRate() { return (this.iOOBDFuelRate_ != null); } public DolphinConfig.IO getIOOBDFuelRate() { return (this.iOOBDFuelRate_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOOBDFuelRate_; } public DolphinConfig.IOOrBuilder getIOOBDFuelRateOrBuilder() { return getIOOBDFuelRate(); } public boolean hasIOOBDTotalFuelUsed() { return (this.iOOBDTotalFuelUsed_ != null); } public DolphinConfig.IO getIOOBDTotalFuelUsed() { return (this.iOOBDTotalFuelUsed_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOOBDTotalFuelUsed_; } public DolphinConfig.IOOrBuilder getIOOBDTotalFuelUsedOrBuilder() { return getIOOBDTotalFuelUsed(); } public boolean hasIOOBDIntakeAirTemperature() { return (this.iOOBDIntakeAirTemperature_ != null); } public DolphinConfig.IO getIOOBDIntakeAirTemperature() { return (this.iOOBDIntakeAirTemperature_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOOBDIntakeAirTemperature_; } public DolphinConfig.IOOrBuilder getIOOBDIntakeAirTemperatureOrBuilder() { return getIOOBDIntakeAirTemperature(); } public boolean hasIOOBDIntakeManifoldAbsolutePressure() { return (this.iOOBDIntakeManifoldAbsolutePressure_ != null); } public DolphinConfig.IO getIOOBDIntakeManifoldAbsolutePressure() { return (this.iOOBDIntakeManifoldAbsolutePressure_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOOBDIntakeManifoldAbsolutePressure_; } public DolphinConfig.IOOrBuilder getIOOBDIntakeManifoldAbsolutePressureOrBuilder() { return getIOOBDIntakeManifoldAbsolutePressure(); } public boolean hasIOOBDMalfunctionIndicatorLamp() { return (this.iOOBDMalfunctionIndicatorLamp_ != null); } public DolphinConfig.IO getIOOBDMalfunctionIndicatorLamp() { return (this.iOOBDMalfunctionIndicatorLamp_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOOBDMalfunctionIndicatorLamp_; } public DolphinConfig.IOOrBuilder getIOOBDMalfunctionIndicatorLampOrBuilder() { return getIOOBDMalfunctionIndicatorLamp(); } public boolean hasIODiagnosticTroubleCodesCount() { return (this.iODiagnosticTroubleCodesCount_ != null); } public DolphinConfig.IO getIODiagnosticTroubleCodesCount() { return (this.iODiagnosticTroubleCodesCount_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iODiagnosticTroubleCodesCount_; } public DolphinConfig.IOOrBuilder getIODiagnosticTroubleCodesCountOrBuilder() { return getIODiagnosticTroubleCodesCount(); } public boolean hasIOOBDCalculatedEngineLoad() { return (this.iOOBDCalculatedEngineLoad_ != null); } public DolphinConfig.IO getIOOBDCalculatedEngineLoad() { return (this.iOOBDCalculatedEngineLoad_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOOBDCalculatedEngineLoad_; } public DolphinConfig.IOOrBuilder getIOOBDCalculatedEngineLoadOrBuilder() { return getIOOBDCalculatedEngineLoad(); } public boolean hasIOOBDMassAirFlowRate() { return (this.iOOBDMassAirFlowRate_ != null); } public DolphinConfig.IO getIOOBDMassAirFlowRate() { return (this.iOOBDMassAirFlowRate_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOOBDMassAirFlowRate_; } public DolphinConfig.IOOrBuilder getIOOBDMassAirFlowRateOrBuilder() { return getIOOBDMassAirFlowRate(); } public boolean hasIOOBDThrottlePosition() { return (this.iOOBDThrottlePosition_ != null); } public DolphinConfig.IO getIOOBDThrottlePosition() { return (this.iOOBDThrottlePosition_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOOBDThrottlePosition_; } public DolphinConfig.IOOrBuilder getIOOBDThrottlePositionOrBuilder() { return getIOOBDThrottlePosition(); } public boolean hasIOOBDRunTimeSinceEngineStart() { return (this.iOOBDRunTimeSinceEngineStart_ != null); } public DolphinConfig.IO getIOOBDRunTimeSinceEngineStart() { return (this.iOOBDRunTimeSinceEngineStart_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOOBDRunTimeSinceEngineStart_; } public DolphinConfig.IOOrBuilder getIOOBDRunTimeSinceEngineStartOrBuilder() { return getIOOBDRunTimeSinceEngineStart(); } public boolean hasIOOBDFuelTankLevelInput() { return (this.iOOBDFuelTankLevelInput_ != null); } public DolphinConfig.IO getIOOBDFuelTankLevelInput() { return (this.iOOBDFuelTankLevelInput_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOOBDFuelTankLevelInput_; } public DolphinConfig.IOOrBuilder getIOOBDFuelTankLevelInputOrBuilder() { return getIOOBDFuelTankLevelInput(); } public boolean hasIOOBDDistanceTraveledSinceCodesCleared() { return (this.iOOBDDistanceTraveledSinceCodesCleared_ != null); } public DolphinConfig.IO getIOOBDDistanceTraveledSinceCodesCleared() { return (this.iOOBDDistanceTraveledSinceCodesCleared_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOOBDDistanceTraveledSinceCodesCleared_; } public DolphinConfig.IOOrBuilder getIOOBDDistanceTraveledSinceCodesClearedOrBuilder() { return getIOOBDDistanceTraveledSinceCodesCleared(); } public boolean hasIOOBDAbsoluteThrottlePositionD() { return (this.iOOBDAbsoluteThrottlePositionD_ != null); } public DolphinConfig.IO getIOOBDAbsoluteThrottlePositionD() { return (this.iOOBDAbsoluteThrottlePositionD_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOOBDAbsoluteThrottlePositionD_; } public DolphinConfig.IOOrBuilder getIOOBDAbsoluteThrottlePositionDOrBuilder() { return getIOOBDAbsoluteThrottlePositionD(); } public boolean hasIOOBDTimeRunWithMILOn() { return (this.iOOBDTimeRunWithMILOn_ != null); } public DolphinConfig.IO getIOOBDTimeRunWithMILOn() { return (this.iOOBDTimeRunWithMILOn_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOOBDTimeRunWithMILOn_; } public DolphinConfig.IOOrBuilder getIOOBDTimeRunWithMILOnOrBuilder() { return getIOOBDTimeRunWithMILOn(); } public boolean hasIOOBDEngineOilTemperature() { return (this.iOOBDEngineOilTemperature_ != null); } public DolphinConfig.IO getIOOBDEngineOilTemperature() { return (this.iOOBDEngineOilTemperature_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOOBDEngineOilTemperature_; } public DolphinConfig.IOOrBuilder getIOOBDEngineOilTemperatureOrBuilder() { return getIOOBDEngineOilTemperature(); } public boolean hasIOOBDFuelSystem1Status() { return (this.iOOBDFuelSystem1Status_ != null); } public DolphinConfig.IO getIOOBDFuelSystem1Status() { return (this.iOOBDFuelSystem1Status_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOOBDFuelSystem1Status_; } public DolphinConfig.IOOrBuilder getIOOBDFuelSystem1StatusOrBuilder() { return getIOOBDFuelSystem1Status(); } public boolean hasIOOBDFuelSystem2Status() { return (this.iOOBDFuelSystem2Status_ != null); } public DolphinConfig.IO getIOOBDFuelSystem2Status() { return (this.iOOBDFuelSystem2Status_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOOBDFuelSystem2Status_; } public DolphinConfig.IOOrBuilder getIOOBDFuelSystem2StatusOrBuilder() { return getIOOBDFuelSystem2Status(); } public boolean hasIOOBDOxygenSensor1Voltage() { return (this.iOOBDOxygenSensor1Voltage_ != null); } public DolphinConfig.IO getIOOBDOxygenSensor1Voltage() { return (this.iOOBDOxygenSensor1Voltage_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOOBDOxygenSensor1Voltage_; } public DolphinConfig.IOOrBuilder getIOOBDOxygenSensor1VoltageOrBuilder() { return getIOOBDOxygenSensor1Voltage(); } public boolean hasIOOBDOxygenSensor1ShortTermFuelTrim() { return (this.iOOBDOxygenSensor1ShortTermFuelTrim_ != null); } public DolphinConfig.IO getIOOBDOxygenSensor1ShortTermFuelTrim() { return (this.iOOBDOxygenSensor1ShortTermFuelTrim_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOOBDOxygenSensor1ShortTermFuelTrim_; } public DolphinConfig.IOOrBuilder getIOOBDOxygenSensor1ShortTermFuelTrimOrBuilder() { return getIOOBDOxygenSensor1ShortTermFuelTrim(); } public boolean hasIOOBDOxygenSensor2Voltage() { return (this.iOOBDOxygenSensor2Voltage_ != null); } public DolphinConfig.IO getIOOBDOxygenSensor2Voltage() { return (this.iOOBDOxygenSensor2Voltage_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOOBDOxygenSensor2Voltage_; } public DolphinConfig.IOOrBuilder getIOOBDOxygenSensor2VoltageOrBuilder() { return getIOOBDOxygenSensor2Voltage(); } public boolean hasIOOBDOxygenSensor2ShortTermFuelTrim() { return (this.iOOBDOxygenSensor2ShortTermFuelTrim_ != null); } public DolphinConfig.IO getIOOBDOxygenSensor2ShortTermFuelTrim() { return (this.iOOBDOxygenSensor2ShortTermFuelTrim_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOOBDOxygenSensor2ShortTermFuelTrim_; } public DolphinConfig.IOOrBuilder getIOOBDOxygenSensor2ShortTermFuelTrimOrBuilder() { return getIOOBDOxygenSensor2ShortTermFuelTrim(); } public boolean hasIOOBDOxygenSensor3Voltage() { return (this.iOOBDOxygenSensor3Voltage_ != null); } public DolphinConfig.IO getIOOBDOxygenSensor3Voltage() { return (this.iOOBDOxygenSensor3Voltage_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOOBDOxygenSensor3Voltage_; } public DolphinConfig.IOOrBuilder getIOOBDOxygenSensor3VoltageOrBuilder() { return getIOOBDOxygenSensor3Voltage(); } public boolean hasIOOBDOxygenSensor3ShortTermFuelTrim() { return (this.iOOBDOxygenSensor3ShortTermFuelTrim_ != null); } public DolphinConfig.IO getIOOBDOxygenSensor3ShortTermFuelTrim() { return (this.iOOBDOxygenSensor3ShortTermFuelTrim_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOOBDOxygenSensor3ShortTermFuelTrim_; } public DolphinConfig.IOOrBuilder getIOOBDOxygenSensor3ShortTermFuelTrimOrBuilder() { return getIOOBDOxygenSensor3ShortTermFuelTrim(); } public boolean hasIOOBDOxygenSensor4Voltage() { return (this.iOOBDOxygenSensor4Voltage_ != null); } public DolphinConfig.IO getIOOBDOxygenSensor4Voltage() { return (this.iOOBDOxygenSensor4Voltage_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOOBDOxygenSensor4Voltage_; } public DolphinConfig.IOOrBuilder getIOOBDOxygenSensor4VoltageOrBuilder() { return getIOOBDOxygenSensor4Voltage(); } public boolean hasIOOBDOxygenSensor4ShortTermFuelTrim() { return (this.iOOBDOxygenSensor4ShortTermFuelTrim_ != null); } public DolphinConfig.IO getIOOBDOxygenSensor4ShortTermFuelTrim() { return (this.iOOBDOxygenSensor4ShortTermFuelTrim_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOOBDOxygenSensor4ShortTermFuelTrim_; } public DolphinConfig.IOOrBuilder getIOOBDOxygenSensor4ShortTermFuelTrimOrBuilder() { return getIOOBDOxygenSensor4ShortTermFuelTrim(); } public boolean hasIOCANBusTachograph1WorkingState1() { return (this.iOCANBusTachograph1WorkingState1_ != null); } public DolphinConfig.IO getIOCANBusTachograph1WorkingState1() { return (this.iOCANBusTachograph1WorkingState1_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusTachograph1WorkingState1_; } public DolphinConfig.IOOrBuilder getIOCANBusTachograph1WorkingState1OrBuilder() { return getIOCANBusTachograph1WorkingState1(); } public boolean hasIOCANBusTachograph1WorkingState2() { return (this.iOCANBusTachograph1WorkingState2_ != null); } public DolphinConfig.IO getIOCANBusTachograph1WorkingState2() { return (this.iOCANBusTachograph1WorkingState2_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusTachograph1WorkingState2_; } public DolphinConfig.IOOrBuilder getIOCANBusTachograph1WorkingState2OrBuilder() { return getIOCANBusTachograph1WorkingState2(); } public boolean hasIOCANBusTachograph1VehicleMotion() { return (this.iOCANBusTachograph1VehicleMotion_ != null); } public DolphinConfig.IO getIOCANBusTachograph1VehicleMotion() { return (this.iOCANBusTachograph1VehicleMotion_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusTachograph1VehicleMotion_; } public DolphinConfig.IOOrBuilder getIOCANBusTachograph1VehicleMotionOrBuilder() { return getIOCANBusTachograph1VehicleMotion(); } public boolean hasIOCANBusTachograph1Driv1TimeRelStates() { return (this.iOCANBusTachograph1Driv1TimeRelStates_ != null); } public DolphinConfig.IO getIOCANBusTachograph1Driv1TimeRelStates() { return (this.iOCANBusTachograph1Driv1TimeRelStates_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusTachograph1Driv1TimeRelStates_; } public DolphinConfig.IOOrBuilder getIOCANBusTachograph1Driv1TimeRelStatesOrBuilder() { return getIOCANBusTachograph1Driv1TimeRelStates(); } public boolean hasIOCANBusTachograph1Driver1Card() { return (this.iOCANBusTachograph1Driver1Card_ != null); } public DolphinConfig.IO getIOCANBusTachograph1Driver1Card() { return (this.iOCANBusTachograph1Driver1Card_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusTachograph1Driver1Card_; } public DolphinConfig.IOOrBuilder getIOCANBusTachograph1Driver1CardOrBuilder() { return getIOCANBusTachograph1Driver1Card(); } public boolean hasIOCANBusTachograph1VehicleOverspeed() { return (this.iOCANBusTachograph1VehicleOverspeed_ != null); } public DolphinConfig.IO getIOCANBusTachograph1VehicleOverspeed() { return (this.iOCANBusTachograph1VehicleOverspeed_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusTachograph1VehicleOverspeed_; } public DolphinConfig.IOOrBuilder getIOCANBusTachograph1VehicleOverspeedOrBuilder() { return getIOCANBusTachograph1VehicleOverspeed(); } public boolean hasIOCANBusTachograph1Driv2TimeRelStates() { return (this.iOCANBusTachograph1Driv2TimeRelStates_ != null); } public DolphinConfig.IO getIOCANBusTachograph1Driv2TimeRelStates() { return (this.iOCANBusTachograph1Driv2TimeRelStates_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusTachograph1Driv2TimeRelStates_; } public DolphinConfig.IOOrBuilder getIOCANBusTachograph1Driv2TimeRelStatesOrBuilder() { return getIOCANBusTachograph1Driv2TimeRelStates(); } public boolean hasIOCANBusTachograph1Driver2Card() { return (this.iOCANBusTachograph1Driver2Card_ != null); } public DolphinConfig.IO getIOCANBusTachograph1Driver2Card() { return (this.iOCANBusTachograph1Driver2Card_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusTachograph1Driver2Card_; } public DolphinConfig.IOOrBuilder getIOCANBusTachograph1Driver2CardOrBuilder() { return getIOCANBusTachograph1Driver2Card(); } public boolean hasIOCANBusTachograph1SystemEvent() { return (this.iOCANBusTachograph1SystemEvent_ != null); } public DolphinConfig.IO getIOCANBusTachograph1SystemEvent() { return (this.iOCANBusTachograph1SystemEvent_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusTachograph1SystemEvent_; } public DolphinConfig.IOOrBuilder getIOCANBusTachograph1SystemEventOrBuilder() { return getIOCANBusTachograph1SystemEvent(); } public boolean hasIOCANBusTachograph1HandlingInformation() { return (this.iOCANBusTachograph1HandlingInformation_ != null); } public DolphinConfig.IO getIOCANBusTachograph1HandlingInformation() { return (this.iOCANBusTachograph1HandlingInformation_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusTachograph1HandlingInformation_; } public DolphinConfig.IOOrBuilder getIOCANBusTachograph1HandlingInformationOrBuilder() { return getIOCANBusTachograph1HandlingInformation(); } public boolean hasIOCANBusTachograph1TachographPerformance() { return (this.iOCANBusTachograph1TachographPerformance_ != null); } public DolphinConfig.IO getIOCANBusTachograph1TachographPerformance() { return (this.iOCANBusTachograph1TachographPerformance_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusTachograph1TachographPerformance_; } public DolphinConfig.IOOrBuilder getIOCANBusTachograph1TachographPerformanceOrBuilder() { return getIOCANBusTachograph1TachographPerformance(); } public boolean hasIOCANBusTachograph1DirectionIndicator() { return (this.iOCANBusTachograph1DirectionIndicator_ != null); } public DolphinConfig.IO getIOCANBusTachograph1DirectionIndicator() { return (this.iOCANBusTachograph1DirectionIndicator_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusTachograph1DirectionIndicator_; } public DolphinConfig.IOOrBuilder getIOCANBusTachograph1DirectionIndicatorOrBuilder() { return getIOCANBusTachograph1DirectionIndicator(); } public boolean hasIOCANBusTachograph1VehicleSpeed() { return (this.iOCANBusTachograph1VehicleSpeed_ != null); } public DolphinConfig.IO getIOCANBusTachograph1VehicleSpeed() { return (this.iOCANBusTachograph1VehicleSpeed_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusTachograph1VehicleSpeed_; } public DolphinConfig.IOOrBuilder getIOCANBusTachograph1VehicleSpeedOrBuilder() { return getIOCANBusTachograph1VehicleSpeed(); } public boolean hasIOCANBusEngineTemperature1EngineCoolantTemperature() { return (this.iOCANBusEngineTemperature1EngineCoolantTemperature_ != null); } public DolphinConfig.IO getIOCANBusEngineTemperature1EngineCoolantTemperature() { return (this.iOCANBusEngineTemperature1EngineCoolantTemperature_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusEngineTemperature1EngineCoolantTemperature_; } public DolphinConfig.IOOrBuilder getIOCANBusEngineTemperature1EngineCoolantTemperatureOrBuilder() { return getIOCANBusEngineTemperature1EngineCoolantTemperature(); } public boolean hasIOCANBusElectronicEngineController1ActualEnginePercent() { return (this.iOCANBusElectronicEngineController1ActualEnginePercent_ != null); } public DolphinConfig.IO getIOCANBusElectronicEngineController1ActualEnginePercent() { return (this.iOCANBusElectronicEngineController1ActualEnginePercent_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusElectronicEngineController1ActualEnginePercent_; } public DolphinConfig.IOOrBuilder getIOCANBusElectronicEngineController1ActualEnginePercentOrBuilder() { return getIOCANBusElectronicEngineController1ActualEnginePercent(); } public boolean hasIOCANBusElectronicEngineController1EngineSpeed() { return (this.iOCANBusElectronicEngineController1EngineSpeed_ != null); } public DolphinConfig.IO getIOCANBusElectronicEngineController1EngineSpeed() { return (this.iOCANBusElectronicEngineController1EngineSpeed_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusElectronicEngineController1EngineSpeed_; } public DolphinConfig.IOOrBuilder getIOCANBusElectronicEngineController1EngineSpeedOrBuilder() { return getIOCANBusElectronicEngineController1EngineSpeed(); } public boolean hasIOCANBusEngineHoursEngineTotalHours() { return (this.iOCANBusEngineHoursEngineTotalHours_ != null); } public DolphinConfig.IO getIOCANBusEngineHoursEngineTotalHours() { return (this.iOCANBusEngineHoursEngineTotalHours_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusEngineHoursEngineTotalHours_; } public DolphinConfig.IOOrBuilder getIOCANBusEngineHoursEngineTotalHoursOrBuilder() { return getIOCANBusEngineHoursEngineTotalHours(); } public boolean hasIOCANBusVehicleDistanceTotalVehicleDistance() { return (this.iOCANBusVehicleDistanceTotalVehicleDistance_ != null); } public DolphinConfig.IO getIOCANBusVehicleDistanceTotalVehicleDistance() { return (this.iOCANBusVehicleDistanceTotalVehicleDistance_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusVehicleDistanceTotalVehicleDistance_; } public DolphinConfig.IOOrBuilder getIOCANBusVehicleDistanceTotalVehicleDistanceOrBuilder() { return getIOCANBusVehicleDistanceTotalVehicleDistance(); } public boolean hasIOCANBusHighResolutionFuelConsumptionTotalFuelUsed() { return (this.iOCANBusHighResolutionFuelConsumptionTotalFuelUsed_ != null); } public DolphinConfig.IO getIOCANBusHighResolutionFuelConsumptionTotalFuelUsed() { return (this.iOCANBusHighResolutionFuelConsumptionTotalFuelUsed_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusHighResolutionFuelConsumptionTotalFuelUsed_; } public DolphinConfig.IOOrBuilder getIOCANBusHighResolutionFuelConsumptionTotalFuelUsedOrBuilder() { return getIOCANBusHighResolutionFuelConsumptionTotalFuelUsed(); } public boolean hasIOCANBusDashDisplayFuelLevel1() { return (this.iOCANBusDashDisplayFuelLevel1_ != null); } public DolphinConfig.IO getIOCANBusDashDisplayFuelLevel1() { return (this.iOCANBusDashDisplayFuelLevel1_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusDashDisplayFuelLevel1_; } public DolphinConfig.IOOrBuilder getIOCANBusDashDisplayFuelLevel1OrBuilder() { return getIOCANBusDashDisplayFuelLevel1(); } public boolean hasIOCANBusAmbientConditionsAmbientAirTemperature() { return (this.iOCANBusAmbientConditionsAmbientAirTemperature_ != null); } public DolphinConfig.IO getIOCANBusAmbientConditionsAmbientAirTemperature() { return (this.iOCANBusAmbientConditionsAmbientAirTemperature_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusAmbientConditionsAmbientAirTemperature_; } public DolphinConfig.IOOrBuilder getIOCANBusAmbientConditionsAmbientAirTemperatureOrBuilder() { return getIOCANBusAmbientConditionsAmbientAirTemperature(); } public boolean hasIOCANBusFuelEconomyFuelRate() { return (this.iOCANBusFuelEconomyFuelRate_ != null); } public DolphinConfig.IO getIOCANBusFuelEconomyFuelRate() { return (this.iOCANBusFuelEconomyFuelRate_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusFuelEconomyFuelRate_; } public DolphinConfig.IOOrBuilder getIOCANBusFuelEconomyFuelRateOrBuilder() { return getIOCANBusFuelEconomyFuelRate(); } public boolean hasIOCANBusFuelEconomyInstantaneousFuelEconomy() { return (this.iOCANBusFuelEconomyInstantaneousFuelEconomy_ != null); } public DolphinConfig.IO getIOCANBusFuelEconomyInstantaneousFuelEconomy() { return (this.iOCANBusFuelEconomyInstantaneousFuelEconomy_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusFuelEconomyInstantaneousFuelEconomy_; } public DolphinConfig.IOOrBuilder getIOCANBusFuelEconomyInstantaneousFuelEconomyOrBuilder() { return getIOCANBusFuelEconomyInstantaneousFuelEconomy(); } public boolean hasIOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit1() { return (this.iOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit1_ != null); } public DolphinConfig.IO getIOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit1() { return (this.iOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit1_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit1_; } public DolphinConfig.IOOrBuilder getIOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit1OrBuilder() { return getIOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit1(); } public boolean hasIOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit2() { return (this.iOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit2_ != null); } public DolphinConfig.IO getIOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit2() { return (this.iOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit2_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit2_; } public DolphinConfig.IOOrBuilder getIOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit2OrBuilder() { return getIOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit2(); } public boolean hasIOCANBusAftertreatmentDieselExhaustFluidTankInformationTank1Level() { return (this.iOCANBusAftertreatmentDieselExhaustFluidTankInformationTank1Level_ != null); } public DolphinConfig.IO getIOCANBusAftertreatmentDieselExhaustFluidTankInformationTank1Level() { return (this.iOCANBusAftertreatmentDieselExhaustFluidTankInformationTank1Level_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusAftertreatmentDieselExhaustFluidTankInformationTank1Level_; } public DolphinConfig.IOOrBuilder getIOCANBusAftertreatmentDieselExhaustFluidTankInformationTank1LevelOrBuilder() { return getIOCANBusAftertreatmentDieselExhaustFluidTankInformationTank1Level(); } public boolean hasIOCANBusTruckBusElectronicEngineController2AcceleratorPedalPosition1() { return (this.iOCANBusTruckBusElectronicEngineController2AcceleratorPedalPosition1_ != null); } public DolphinConfig.IO getIOCANBusTruckBusElectronicEngineController2AcceleratorPedalPosition1() { return (this.iOCANBusTruckBusElectronicEngineController2AcceleratorPedalPosition1_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusTruckBusElectronicEngineController2AcceleratorPedalPosition1_; } public DolphinConfig.IOOrBuilder getIOCANBusTruckBusElectronicEngineController2AcceleratorPedalPosition1OrBuilder() { return getIOCANBusTruckBusElectronicEngineController2AcceleratorPedalPosition1(); } public boolean hasIOCANBusTruckBusElectronicEngineController2EnginePercentLoad() { return (this.iOCANBusTruckBusElectronicEngineController2EnginePercentLoad_ != null); } public DolphinConfig.IO getIOCANBusTruckBusElectronicEngineController2EnginePercentLoad() { return (this.iOCANBusTruckBusElectronicEngineController2EnginePercentLoad_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusTruckBusElectronicEngineController2EnginePercentLoad_; } public DolphinConfig.IOOrBuilder getIOCANBusTruckBusElectronicEngineController2EnginePercentLoadOrBuilder() { return getIOCANBusTruckBusElectronicEngineController2EnginePercentLoad(); } public boolean hasIOCANBusTruckVehicleWeightAxleWeight1() { return (this.iOCANBusTruckVehicleWeightAxleWeight1_ != null); } public DolphinConfig.IO getIOCANBusTruckVehicleWeightAxleWeight1() { return (this.iOCANBusTruckVehicleWeightAxleWeight1_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusTruckVehicleWeightAxleWeight1_; } public DolphinConfig.IOOrBuilder getIOCANBusTruckVehicleWeightAxleWeight1OrBuilder() { return getIOCANBusTruckVehicleWeightAxleWeight1(); } public boolean hasIOCANBusTruckVehicleWeightAxleWeight2() { return (this.iOCANBusTruckVehicleWeightAxleWeight2_ != null); } public DolphinConfig.IO getIOCANBusTruckVehicleWeightAxleWeight2() { return (this.iOCANBusTruckVehicleWeightAxleWeight2_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusTruckVehicleWeightAxleWeight2_; } public DolphinConfig.IOOrBuilder getIOCANBusTruckVehicleWeightAxleWeight2OrBuilder() { return getIOCANBusTruckVehicleWeightAxleWeight2(); } public boolean hasIOCANBusTruckVehicleWeightAxleWeight3() { return (this.iOCANBusTruckVehicleWeightAxleWeight3_ != null); } public DolphinConfig.IO getIOCANBusTruckVehicleWeightAxleWeight3() { return (this.iOCANBusTruckVehicleWeightAxleWeight3_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusTruckVehicleWeightAxleWeight3_; } public DolphinConfig.IOOrBuilder getIOCANBusTruckVehicleWeightAxleWeight3OrBuilder() { return getIOCANBusTruckVehicleWeightAxleWeight3(); } public boolean hasIOCANBusTruckServiceInformationServiceDistance() { return (this.iOCANBusTruckServiceInformationServiceDistance_ != null); } public DolphinConfig.IO getIOCANBusTruckServiceInformationServiceDistance() { return (this.iOCANBusTruckServiceInformationServiceDistance_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusTruckServiceInformationServiceDistance_; } public DolphinConfig.IOOrBuilder getIOCANBusTruckServiceInformationServiceDistanceOrBuilder() { return getIOCANBusTruckServiceInformationServiceDistance(); } public boolean hasIOCANBusTruckPTODriveEngagementPTOEngageStat() { return (this.iOCANBusTruckPTODriveEngagementPTOEngageStat_ != null); } public DolphinConfig.IO getIOCANBusTruckPTODriveEngagementPTOEngageStat() { return (this.iOCANBusTruckPTODriveEngagementPTOEngageStat_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusTruckPTODriveEngagementPTOEngageStat_; } public DolphinConfig.IOOrBuilder getIOCANBusTruckPTODriveEngagementPTOEngageStatOrBuilder() { return getIOCANBusTruckPTODriveEngagementPTOEngageStat(); } public boolean hasIOCANBusTruckCombinationVehicleWeightGrossCombinationVehicleWeight() { return (this.iOCANBusTruckCombinationVehicleWeightGrossCombinationVehicleWeight_ != null); } public DolphinConfig.IO getIOCANBusTruckCombinationVehicleWeightGrossCombinationVehicleWeight() { return (this.iOCANBusTruckCombinationVehicleWeightGrossCombinationVehicleWeight_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusTruckCombinationVehicleWeightGrossCombinationVehicleWeight_; } public DolphinConfig.IOOrBuilder getIOCANBusTruckCombinationVehicleWeightGrossCombinationVehicleWeightOrBuilder() { return getIOCANBusTruckCombinationVehicleWeightGrossCombinationVehicleWeight(); } public boolean hasIOCANBusTruckBusElectronicRetarderController1RetarderTorqueMode() { return (this.iOCANBusTruckBusElectronicRetarderController1RetarderTorqueMode_ != null); } public DolphinConfig.IO getIOCANBusTruckBusElectronicRetarderController1RetarderTorqueMode() { return (this.iOCANBusTruckBusElectronicRetarderController1RetarderTorqueMode_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusTruckBusElectronicRetarderController1RetarderTorqueMode_; } public DolphinConfig.IOOrBuilder getIOCANBusTruckBusElectronicRetarderController1RetarderTorqueModeOrBuilder() { return getIOCANBusTruckBusElectronicRetarderController1RetarderTorqueMode(); } public boolean hasIOCANBusTruckBusElectronicRetarderController1RetarderSelection() { return (this.iOCANBusTruckBusElectronicRetarderController1RetarderSelection_ != null); } public DolphinConfig.IO getIOCANBusTruckBusElectronicRetarderController1RetarderSelection() { return (this.iOCANBusTruckBusElectronicRetarderController1RetarderSelection_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusTruckBusElectronicRetarderController1RetarderSelection_; } public DolphinConfig.IOOrBuilder getIOCANBusTruckBusElectronicRetarderController1RetarderSelectionOrBuilder() { return getIOCANBusTruckBusElectronicRetarderController1RetarderSelection(); } public boolean hasIOCANBusBusDoorControl1DoorPosition() { return (this.iOCANBusBusDoorControl1DoorPosition_ != null); } public DolphinConfig.IO getIOCANBusBusDoorControl1DoorPosition() { return (this.iOCANBusBusDoorControl1DoorPosition_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusBusDoorControl1DoorPosition_; } public DolphinConfig.IOOrBuilder getIOCANBusBusDoorControl1DoorPositionOrBuilder() { return getIOCANBusBusDoorControl1DoorPosition(); } public boolean hasIOCANBusBusDoorControl1RampWheelChairlift() { return (this.iOCANBusBusDoorControl1RampWheelChairlift_ != null); } public DolphinConfig.IO getIOCANBusBusDoorControl1RampWheelChairlift() { return (this.iOCANBusBusDoorControl1RampWheelChairlift_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusBusDoorControl1RampWheelChairlift_; } public DolphinConfig.IOOrBuilder getIOCANBusBusDoorControl1RampWheelChairliftOrBuilder() { return getIOCANBusBusDoorControl1RampWheelChairlift(); } public boolean hasIOCANBusBusDoorControl1DoorsStatus2() { return (this.iOCANBusBusDoorControl1DoorsStatus2_ != null); } public DolphinConfig.IO getIOCANBusBusDoorControl1DoorsStatus2() { return (this.iOCANBusBusDoorControl1DoorsStatus2_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusBusDoorControl1DoorsStatus2_; } public DolphinConfig.IOOrBuilder getIOCANBusBusDoorControl1DoorsStatus2OrBuilder() { return getIOCANBusBusDoorControl1DoorsStatus2(); } public boolean hasIOCANBusBusDoorControl2() { return (this.iOCANBusBusDoorControl2_ != null); } public DolphinConfig.IO getIOCANBusBusDoorControl2() { return (this.iOCANBusBusDoorControl2_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusBusDoorControl2_; } public DolphinConfig.IOOrBuilder getIOCANBusBusDoorControl2OrBuilder() { return getIOCANBusBusDoorControl2(); } public boolean hasIOCANBusBrakeLiningRemainingAxleFrontLeftWheel() { return (this.iOCANBusBrakeLiningRemainingAxleFrontLeftWheel_ != null); } public DolphinConfig.IO getIOCANBusBrakeLiningRemainingAxleFrontLeftWheel() { return (this.iOCANBusBrakeLiningRemainingAxleFrontLeftWheel_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusBrakeLiningRemainingAxleFrontLeftWheel_; } public DolphinConfig.IOOrBuilder getIOCANBusBrakeLiningRemainingAxleFrontLeftWheelOrBuilder() { return getIOCANBusBrakeLiningRemainingAxleFrontLeftWheel(); } public boolean hasIOCANBusBrakeLiningRemainingAxleFrontRightWheel() { return (this.iOCANBusBrakeLiningRemainingAxleFrontRightWheel_ != null); } public DolphinConfig.IO getIOCANBusBrakeLiningRemainingAxleFrontRightWheel() { return (this.iOCANBusBrakeLiningRemainingAxleFrontRightWheel_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusBrakeLiningRemainingAxleFrontRightWheel_; } public DolphinConfig.IOOrBuilder getIOCANBusBrakeLiningRemainingAxleFrontRightWheelOrBuilder() { return getIOCANBusBrakeLiningRemainingAxleFrontRightWheel(); } public boolean hasIOCANBusBrakeLiningRemainingAxleRear1LeftWheel() { return (this.iOCANBusBrakeLiningRemainingAxleRear1LeftWheel_ != null); } public DolphinConfig.IO getIOCANBusBrakeLiningRemainingAxleRear1LeftWheel() { return (this.iOCANBusBrakeLiningRemainingAxleRear1LeftWheel_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusBrakeLiningRemainingAxleRear1LeftWheel_; } public DolphinConfig.IOOrBuilder getIOCANBusBrakeLiningRemainingAxleRear1LeftWheelOrBuilder() { return getIOCANBusBrakeLiningRemainingAxleRear1LeftWheel(); } public boolean hasIOCANBusBrakeLiningRemainingAxleRear1RightWheel() { return (this.iOCANBusBrakeLiningRemainingAxleRear1RightWheel_ != null); } public DolphinConfig.IO getIOCANBusBrakeLiningRemainingAxleRear1RightWheel() { return (this.iOCANBusBrakeLiningRemainingAxleRear1RightWheel_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusBrakeLiningRemainingAxleRear1RightWheel_; } public DolphinConfig.IOOrBuilder getIOCANBusBrakeLiningRemainingAxleRear1RightWheelOrBuilder() { return getIOCANBusBrakeLiningRemainingAxleRear1RightWheel(); } public boolean hasIOCANBusBrakeLiningRemainingAxleRear2LeftWheel() { return (this.iOCANBusBrakeLiningRemainingAxleRear2LeftWheel_ != null); } public DolphinConfig.IO getIOCANBusBrakeLiningRemainingAxleRear2LeftWheel() { return (this.iOCANBusBrakeLiningRemainingAxleRear2LeftWheel_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusBrakeLiningRemainingAxleRear2LeftWheel_; } public DolphinConfig.IOOrBuilder getIOCANBusBrakeLiningRemainingAxleRear2LeftWheelOrBuilder() { return getIOCANBusBrakeLiningRemainingAxleRear2LeftWheel(); } public boolean hasIOCANBusBrakeLiningRemainingAxleRear2RightWheel() { return (this.iOCANBusBrakeLiningRemainingAxleRear2RightWheel_ != null); } public DolphinConfig.IO getIOCANBusBrakeLiningRemainingAxleRear2RightWheel() { return (this.iOCANBusBrakeLiningRemainingAxleRear2RightWheel_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusBrakeLiningRemainingAxleRear2RightWheel_; } public DolphinConfig.IOOrBuilder getIOCANBusBrakeLiningRemainingAxleRear2RightWheelOrBuilder() { return getIOCANBusBrakeLiningRemainingAxleRear2RightWheel(); } public boolean hasIOCANBusBrakeLiningRemainingAxleRear3LeftWheel() { return (this.iOCANBusBrakeLiningRemainingAxleRear3LeftWheel_ != null); } public DolphinConfig.IO getIOCANBusBrakeLiningRemainingAxleRear3LeftWheel() { return (this.iOCANBusBrakeLiningRemainingAxleRear3LeftWheel_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusBrakeLiningRemainingAxleRear3LeftWheel_; } public DolphinConfig.IOOrBuilder getIOCANBusBrakeLiningRemainingAxleRear3LeftWheelOrBuilder() { return getIOCANBusBrakeLiningRemainingAxleRear3LeftWheel(); } public boolean hasIOCANBusBrakeLiningRemainingAxleRear3RightWheel() { return (this.iOCANBusBrakeLiningRemainingAxleRear3RightWheel_ != null); } public DolphinConfig.IO getIOCANBusBrakeLiningRemainingAxleRear3RightWheel() { return (this.iOCANBusBrakeLiningRemainingAxleRear3RightWheel_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusBrakeLiningRemainingAxleRear3RightWheel_; } public DolphinConfig.IOOrBuilder getIOCANBusBrakeLiningRemainingAxleRear3RightWheelOrBuilder() { return getIOCANBusBrakeLiningRemainingAxleRear3RightWheel(); } public boolean hasIOCANBusTruckBusCruiseControl() { return (this.iOCANBusTruckBusCruiseControl_ != null); } public DolphinConfig.IO getIOCANBusTruckBusCruiseControl() { return (this.iOCANBusTruckBusCruiseControl_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusTruckBusCruiseControl_; } public DolphinConfig.IOOrBuilder getIOCANBusTruckBusCruiseControlOrBuilder() { return getIOCANBusTruckBusCruiseControl(); } public boolean hasIOCANBusBusAlternatorSpeedAlternatorStatus1() { return (this.iOCANBusBusAlternatorSpeedAlternatorStatus1_ != null); } public DolphinConfig.IO getIOCANBusBusAlternatorSpeedAlternatorStatus1() { return (this.iOCANBusBusAlternatorSpeedAlternatorStatus1_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusBusAlternatorSpeedAlternatorStatus1_; } public DolphinConfig.IOOrBuilder getIOCANBusBusAlternatorSpeedAlternatorStatus1OrBuilder() { return getIOCANBusBusAlternatorSpeedAlternatorStatus1(); } public boolean hasIOCANBusBusAlternatorSpeedAlternatorStatus2() { return (this.iOCANBusBusAlternatorSpeedAlternatorStatus2_ != null); } public DolphinConfig.IO getIOCANBusBusAlternatorSpeedAlternatorStatus2() { return (this.iOCANBusBusAlternatorSpeedAlternatorStatus2_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusBusAlternatorSpeedAlternatorStatus2_; } public DolphinConfig.IOOrBuilder getIOCANBusBusAlternatorSpeedAlternatorStatus2OrBuilder() { return getIOCANBusBusAlternatorSpeedAlternatorStatus2(); } public boolean hasIOCANBusBusAlternatorSpeedAlternatorStatus3() { return (this.iOCANBusBusAlternatorSpeedAlternatorStatus3_ != null); } public DolphinConfig.IO getIOCANBusBusAlternatorSpeedAlternatorStatus3() { return (this.iOCANBusBusAlternatorSpeedAlternatorStatus3_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusBusAlternatorSpeedAlternatorStatus3_; } public DolphinConfig.IOOrBuilder getIOCANBusBusAlternatorSpeedAlternatorStatus3OrBuilder() { return getIOCANBusBusAlternatorSpeedAlternatorStatus3(); } public boolean hasIOCANBusBusAlternatorSpeedAlternatorStatus4() { return (this.iOCANBusBusAlternatorSpeedAlternatorStatus4_ != null); } public DolphinConfig.IO getIOCANBusBusAlternatorSpeedAlternatorStatus4() { return (this.iOCANBusBusAlternatorSpeedAlternatorStatus4_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusBusAlternatorSpeedAlternatorStatus4_; } public DolphinConfig.IOOrBuilder getIOCANBusBusAlternatorSpeedAlternatorStatus4OrBuilder() { return getIOCANBusBusAlternatorSpeedAlternatorStatus4(); } public boolean hasIOCANBusBusElectronicTransmissionController2SelectedGear() { return (this.iOCANBusBusElectronicTransmissionController2SelectedGear_ != null); } public DolphinConfig.IO getIOCANBusBusElectronicTransmissionController2SelectedGear() { return (this.iOCANBusBusElectronicTransmissionController2SelectedGear_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusBusElectronicTransmissionController2SelectedGear_; } public DolphinConfig.IOOrBuilder getIOCANBusBusElectronicTransmissionController2SelectedGearOrBuilder() { return getIOCANBusBusElectronicTransmissionController2SelectedGear(); } public boolean hasIOCANBusBusElectronicTransmissionController2CurrentGear() { return (this.iOCANBusBusElectronicTransmissionController2CurrentGear_ != null); } public DolphinConfig.IO getIOCANBusBusElectronicTransmissionController2CurrentGear() { return (this.iOCANBusBusElectronicTransmissionController2CurrentGear_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusBusElectronicTransmissionController2CurrentGear_; } public DolphinConfig.IOOrBuilder getIOCANBusBusElectronicTransmissionController2CurrentGearOrBuilder() { return getIOCANBusBusElectronicTransmissionController2CurrentGear(); } public boolean hasIOCANBusBusAirSuspensionControl4FrontAxleLeft() { return (this.iOCANBusBusAirSuspensionControl4FrontAxleLeft_ != null); } public DolphinConfig.IO getIOCANBusBusAirSuspensionControl4FrontAxleLeft() { return (this.iOCANBusBusAirSuspensionControl4FrontAxleLeft_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusBusAirSuspensionControl4FrontAxleLeft_; } public DolphinConfig.IOOrBuilder getIOCANBusBusAirSuspensionControl4FrontAxleLeftOrBuilder() { return getIOCANBusBusAirSuspensionControl4FrontAxleLeft(); } public boolean hasIOCANBusBusAirSuspensionControl4FrontAxleRight() { return (this.iOCANBusBusAirSuspensionControl4FrontAxleRight_ != null); } public DolphinConfig.IO getIOCANBusBusAirSuspensionControl4FrontAxleRight() { return (this.iOCANBusBusAirSuspensionControl4FrontAxleRight_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusBusAirSuspensionControl4FrontAxleRight_; } public DolphinConfig.IOOrBuilder getIOCANBusBusAirSuspensionControl4FrontAxleRightOrBuilder() { return getIOCANBusBusAirSuspensionControl4FrontAxleRight(); } public boolean hasIOCANBusBusAirSuspensionControl4RearAxleLeft() { return (this.iOCANBusBusAirSuspensionControl4RearAxleLeft_ != null); } public DolphinConfig.IO getIOCANBusBusAirSuspensionControl4RearAxleLeft() { return (this.iOCANBusBusAirSuspensionControl4RearAxleLeft_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusBusAirSuspensionControl4RearAxleLeft_; } public DolphinConfig.IOOrBuilder getIOCANBusBusAirSuspensionControl4RearAxleLeftOrBuilder() { return getIOCANBusBusAirSuspensionControl4RearAxleLeft(); } public boolean hasIOCANBusBusAirSuspensionControl4RearAxleright() { return (this.iOCANBusBusAirSuspensionControl4RearAxleright_ != null); } public DolphinConfig.IO getIOCANBusBusAirSuspensionControl4RearAxleright() { return (this.iOCANBusBusAirSuspensionControl4RearAxleright_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusBusAirSuspensionControl4RearAxleright_; } public DolphinConfig.IOOrBuilder getIOCANBusBusAirSuspensionControl4RearAxlerightOrBuilder() { return getIOCANBusBusAirSuspensionControl4RearAxleright(); } public boolean hasIOCANBusDashDisplayFuelLevel2() { return (this.iOCANBusDashDisplayFuelLevel2_ != null); } public DolphinConfig.IO getIOCANBusDashDisplayFuelLevel2() { return (this.iOCANBusDashDisplayFuelLevel2_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusDashDisplayFuelLevel2_; } public DolphinConfig.IOOrBuilder getIOCANBusDashDisplayFuelLevel2OrBuilder() { return getIOCANBusDashDisplayFuelLevel2(); } public boolean hasIOCANBusElectronicBrakeControllerBrakePedalPosition() { return (this.iOCANBusElectronicBrakeControllerBrakePedalPosition_ != null); } public DolphinConfig.IO getIOCANBusElectronicBrakeControllerBrakePedalPosition() { return (this.iOCANBusElectronicBrakeControllerBrakePedalPosition_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusElectronicBrakeControllerBrakePedalPosition_; } public DolphinConfig.IOOrBuilder getIOCANBusElectronicBrakeControllerBrakePedalPositionOrBuilder() { return getIOCANBusElectronicBrakeControllerBrakePedalPosition(); } public boolean hasIOCANBusFuelConsumptionGaseousTotalFuelUsed() { return (this.iOCANBusFuelConsumptionGaseousTotalFuelUsed_ != null); } public DolphinConfig.IO getIOCANBusFuelConsumptionGaseousTotalFuelUsed() { return (this.iOCANBusFuelConsumptionGaseousTotalFuelUsed_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusFuelConsumptionGaseousTotalFuelUsed_; } public DolphinConfig.IOOrBuilder getIOCANBusFuelConsumptionGaseousTotalFuelUsedOrBuilder() { return getIOCANBusFuelConsumptionGaseousTotalFuelUsed(); } public boolean hasIOCANBusTruckBusCruiseControlVehicleSpeedParkingBrakeSwitch() { return (this.iOCANBusTruckBusCruiseControlVehicleSpeedParkingBrakeSwitch_ != null); } public DolphinConfig.IO getIOCANBusTruckBusCruiseControlVehicleSpeedParkingBrakeSwitch() { return (this.iOCANBusTruckBusCruiseControlVehicleSpeedParkingBrakeSwitch_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusTruckBusCruiseControlVehicleSpeedParkingBrakeSwitch_; } public DolphinConfig.IOOrBuilder getIOCANBusTruckBusCruiseControlVehicleSpeedParkingBrakeSwitchOrBuilder() { return getIOCANBusTruckBusCruiseControlVehicleSpeedParkingBrakeSwitch(); } public boolean hasIOCANBusTruckBusCruiseControlVehicleSpeedWheelBasedSpeed() { return (this.iOCANBusTruckBusCruiseControlVehicleSpeedWheelBasedSpeed_ != null); } public DolphinConfig.IO getIOCANBusTruckBusCruiseControlVehicleSpeedWheelBasedSpeed() { return (this.iOCANBusTruckBusCruiseControlVehicleSpeedWheelBasedSpeed_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusTruckBusCruiseControlVehicleSpeedWheelBasedSpeed_; } public DolphinConfig.IOOrBuilder getIOCANBusTruckBusCruiseControlVehicleSpeedWheelBasedSpeedOrBuilder() { return getIOCANBusTruckBusCruiseControlVehicleSpeedWheelBasedSpeed(); } public boolean hasIOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlActive() { return (this.iOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlActive_ != null); } public DolphinConfig.IO getIOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlActive() { return (this.iOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlActive_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlActive_; } public DolphinConfig.IOOrBuilder getIOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlActiveOrBuilder() { return getIOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlActive(); } public boolean hasIOCANBusTruckBusCruiseControlVehicleSpeedBrakeSwitch() { return (this.iOCANBusTruckBusCruiseControlVehicleSpeedBrakeSwitch_ != null); } public DolphinConfig.IO getIOCANBusTruckBusCruiseControlVehicleSpeedBrakeSwitch() { return (this.iOCANBusTruckBusCruiseControlVehicleSpeedBrakeSwitch_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusTruckBusCruiseControlVehicleSpeedBrakeSwitch_; } public DolphinConfig.IOOrBuilder getIOCANBusTruckBusCruiseControlVehicleSpeedBrakeSwitchOrBuilder() { return getIOCANBusTruckBusCruiseControlVehicleSpeedBrakeSwitch(); } public boolean hasIOCANBusTruckBusCruiseControlVehicleSpeedClutchSwitch() { return (this.iOCANBusTruckBusCruiseControlVehicleSpeedClutchSwitch_ != null); } public DolphinConfig.IO getIOCANBusTruckBusCruiseControlVehicleSpeedClutchSwitch() { return (this.iOCANBusTruckBusCruiseControlVehicleSpeedClutchSwitch_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusTruckBusCruiseControlVehicleSpeedClutchSwitch_; } public DolphinConfig.IOOrBuilder getIOCANBusTruckBusCruiseControlVehicleSpeedClutchSwitchOrBuilder() { return getIOCANBusTruckBusCruiseControlVehicleSpeedClutchSwitch(); } public boolean hasIOCANBusTruckBusCruiseControlVehicleSpeedPtoState() { return (this.iOCANBusTruckBusCruiseControlVehicleSpeedPtoState_ != null); } public DolphinConfig.IO getIOCANBusTruckBusCruiseControlVehicleSpeedPtoState() { return (this.iOCANBusTruckBusCruiseControlVehicleSpeedPtoState_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusTruckBusCruiseControlVehicleSpeedPtoState_; } public DolphinConfig.IOOrBuilder getIOCANBusTruckBusCruiseControlVehicleSpeedPtoStateOrBuilder() { return getIOCANBusTruckBusCruiseControlVehicleSpeedPtoState(); } public boolean hasIOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlStates() { return (this.iOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlStates_ != null); } public DolphinConfig.IO getIOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlStates() { return (this.iOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlStates_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlStates_; } public DolphinConfig.IOOrBuilder getIOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlStatesOrBuilder() { return getIOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlStates(); } public boolean hasIOCANBusBusVehicleElectricalPowerHybridBatteryPackRemainingCharge() { return (this.iOCANBusBusVehicleElectricalPowerHybridBatteryPackRemainingCharge_ != null); } public DolphinConfig.IO getIOCANBusBusVehicleElectricalPowerHybridBatteryPackRemainingCharge() { return (this.iOCANBusBusVehicleElectricalPowerHybridBatteryPackRemainingCharge_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusBusVehicleElectricalPowerHybridBatteryPackRemainingCharge_; } public DolphinConfig.IOOrBuilder getIOCANBusBusVehicleElectricalPowerHybridBatteryPackRemainingChargeOrBuilder() { return getIOCANBusBusVehicleElectricalPowerHybridBatteryPackRemainingCharge(); } public boolean hasIOCANBusBusVehicleDynamicStabilityControl2SteeringWheelAngle() { return (this.iOCANBusBusVehicleDynamicStabilityControl2SteeringWheelAngle_ != null); } public DolphinConfig.IO getIOCANBusBusVehicleDynamicStabilityControl2SteeringWheelAngle() { return (this.iOCANBusBusVehicleDynamicStabilityControl2SteeringWheelAngle_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusBusVehicleDynamicStabilityControl2SteeringWheelAngle_; } public DolphinConfig.IOOrBuilder getIOCANBusBusVehicleDynamicStabilityControl2SteeringWheelAngleOrBuilder() { return getIOCANBusBusVehicleDynamicStabilityControl2SteeringWheelAngle(); } public boolean hasIOCANBusElectronicEngineController14FuelType() { return (this.iOCANBusElectronicEngineController14FuelType_ != null); } public DolphinConfig.IO getIOCANBusElectronicEngineController14FuelType() { return (this.iOCANBusElectronicEngineController14FuelType_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusElectronicEngineController14FuelType_; } public DolphinConfig.IOOrBuilder getIOCANBusElectronicEngineController14FuelTypeOrBuilder() { return getIOCANBusElectronicEngineController14FuelType(); } public boolean hasIOCANBusEngineFluidLevelPressureEngineOilLevel() { return (this.iOCANBusEngineFluidLevelPressureEngineOilLevel_ != null); } public DolphinConfig.IO getIOCANBusEngineFluidLevelPressureEngineOilLevel() { return (this.iOCANBusEngineFluidLevelPressureEngineOilLevel_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusEngineFluidLevelPressureEngineOilLevel_; } public DolphinConfig.IOOrBuilder getIOCANBusEngineFluidLevelPressureEngineOilLevelOrBuilder() { return getIOCANBusEngineFluidLevelPressureEngineOilLevel(); } public boolean hasIOCANBusEngineFluidLevelPressureEngineOilPressure() { return (this.iOCANBusEngineFluidLevelPressureEngineOilPressure_ != null); } public DolphinConfig.IO getIOCANBusEngineFluidLevelPressureEngineOilPressure() { return (this.iOCANBusEngineFluidLevelPressureEngineOilPressure_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusEngineFluidLevelPressureEngineOilPressure_; } public DolphinConfig.IOOrBuilder getIOCANBusEngineFluidLevelPressureEngineOilPressureOrBuilder() { return getIOCANBusEngineFluidLevelPressureEngineOilPressure(); } public boolean hasIOCANBusEngineFluidLevelPressureCoolantLevel() { return (this.iOCANBusEngineFluidLevelPressureCoolantLevel_ != null); } public DolphinConfig.IO getIOCANBusEngineFluidLevelPressureCoolantLevel() { return (this.iOCANBusEngineFluidLevelPressureCoolantLevel_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusEngineFluidLevelPressureCoolantLevel_; } public DolphinConfig.IOOrBuilder getIOCANBusEngineFluidLevelPressureCoolantLevelOrBuilder() { return getIOCANBusEngineFluidLevelPressureCoolantLevel(); } public boolean hasIOCANBusTellTaleStatus() { return (this.iOCANBusTellTaleStatus_ != null); } public DolphinConfig.IO getIOCANBusTellTaleStatus() { return (this.iOCANBusTellTaleStatus_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusTellTaleStatus_; } public DolphinConfig.IOOrBuilder getIOCANBusTellTaleStatusOrBuilder() { return getIOCANBusTellTaleStatus(); } public boolean hasIOCANBusFuelConsumptionEngineTotalFuelUsed() { return (this.iOCANBusFuelConsumptionEngineTotalFuelUsed_ != null); } public DolphinConfig.IO getIOCANBusFuelConsumptionEngineTotalFuelUsed() { return (this.iOCANBusFuelConsumptionEngineTotalFuelUsed_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusFuelConsumptionEngineTotalFuelUsed_; } public DolphinConfig.IOOrBuilder getIOCANBusFuelConsumptionEngineTotalFuelUsedOrBuilder() { return getIOCANBusFuelConsumptionEngineTotalFuelUsed(); } public boolean hasIOCANBusTruckVehicleWeightAxleWeight4() { return (this.iOCANBusTruckVehicleWeightAxleWeight4_ != null); }
/*       */     public DolphinConfig.IO getIOCANBusTruckVehicleWeightAxleWeight4() { return (this.iOCANBusTruckVehicleWeightAxleWeight4_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusTruckVehicleWeightAxleWeight4_; }
/*       */     public DolphinConfig.IOOrBuilder getIOCANBusTruckVehicleWeightAxleWeight4OrBuilder() { return getIOCANBusTruckVehicleWeightAxleWeight4(); }
/* 27656 */     public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized;
/* 27657 */       if (isInitialized == 1) return true; 
/* 27658 */       if (isInitialized == 0) return false;
/*       */       
/* 27660 */       this.memoizedIsInitialized = 1;
/* 27661 */       return true; }
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/* 27667 */       if (this.serialPortBaudrate_ != DolphinConfig.SerialBaudrate.SBaud_115200.getNumber()) {
/* 27668 */         output.writeEnum(80, this.serialPortBaudrate_);
/*       */       }
/* 27670 */       if (this.doNotResetDeviceOnProblems_) {
/* 27671 */         output.writeBool(90, this.doNotResetDeviceOnProblems_);
/*       */       }
/* 27673 */       if (!getPasswordBytes().isEmpty()) {
/* 27674 */         GeneratedMessageV3.writeString(output, 99, this.password_);
/*       */       }
/* 27676 */       if (this.movement_ != DolphinConfig.MovementSource.MS_Ignition.getNumber()) {
/* 27677 */         output.writeEnum(100, this.movement_);
/*       */       }
/* 27679 */       if (this.movementSensorSensitivity_ != 0) {
/* 27680 */         output.writeUInt32(101, this.movementSensorSensitivity_);
/*       */       }
/* 27682 */       if (this.sleep_ != DolphinConfig.SleepMode.SleepDisabled.getNumber()) {
/* 27683 */         output.writeEnum(102, this.sleep_);
/*       */       }
/* 27685 */       if (this.sleepTimeout_ != 0) {
/* 27686 */         output.writeUInt32(103, this.sleepTimeout_);
/*       */       }
/* 27688 */       if (this.engineOn_ != DolphinConfig.EngineMode.EM_AlwaysOn.getNumber()) {
/* 27689 */         output.writeEnum(104, this.engineOn_);
/*       */       }
/* 27691 */       if (this.engineOnDIN1_) {
/* 27692 */         output.writeBool(105, this.engineOnDIN1_);
/*       */       }
/* 27694 */       if (this.engineOnDIN2_) {
/* 27695 */         output.writeBool(106, this.engineOnDIN2_);
/*       */       }
/* 27697 */       if (this.engineOnMovementSensor_) {
/* 27698 */         output.writeBool(107, this.engineOnMovementSensor_);
/*       */       }
/* 27700 */       if (this.engineOnPowerSupplyAvailable_) {
/* 27701 */         output.writeBool(108, this.engineOnPowerSupplyAvailable_);
/*       */       }
/* 27703 */       if (this.engineOnGpsSpeed_ != 0) {
/* 27704 */         output.writeUInt32(109, this.engineOnGpsSpeed_);
/*       */       }
/* 27706 */       if (this.engineOnCanRPM_ != 0) {
/* 27707 */         output.writeUInt32(110, this.engineOnCanRPM_);
/*       */       }
/* 27709 */       if (this.engineOnMinActiveStateDuration_ != 0) {
/* 27710 */         output.writeUInt32(111, this.engineOnMinActiveStateDuration_);
/*       */       }
/* 27712 */       if (this.engineOnOperator_ != DolphinConfig.ConditionOperator.AND.getNumber()) {
/* 27713 */         output.writeEnum(112, this.engineOnOperator_);
/*       */       }
/* 27715 */       if (this.engineOnMovementStartDelay_ != 0) {
/* 27716 */         output.writeUInt32(113, this.engineOnMovementStartDelay_);
/*       */       }
/* 27718 */       if (this.engineOnMovementStopDelay_ != 0) {
/* 27719 */         output.writeUInt32(114, this.engineOnMovementStopDelay_);
/*       */       }
/* 27721 */       if (this.engineOnExternalVoltage_ != 0) {
/* 27722 */         output.writeUInt32(115, this.engineOnExternalVoltage_);
/*       */       }
/* 27724 */       if (this.ledIndication_) {
/* 27725 */         output.writeBool(116, this.ledIndication_);
/*       */       }
/* 27727 */       if (this.gNSS_ != DolphinConfig.GNSSMode.All.getNumber()) {
/* 27728 */         output.writeEnum(117, this.gNSS_);
/*       */       }
/* 27730 */       if (this.staticNavigationEnabled_) {
/* 27731 */         output.writeBool(118, this.staticNavigationEnabled_);
/*       */       }
/* 27733 */       if (this.staticNavigationSource_ != DolphinConfig.StaticNavigationSource.SN_Movement.getNumber()) {
/* 27734 */         output.writeEnum(119, this.staticNavigationSource_);
/*       */       }
/* 27736 */       if (this.recordsSaveAndSendMode_ != DolphinConfig.RecordsMode.PositionFix.getNumber()) {
/* 27737 */         output.writeEnum(120, this.recordsSaveAndSendMode_);
/*       */       }
/* 27739 */       if (this.timeSynchronization_ != DolphinConfig.TimeSynchronization.TS_None.getNumber()) {
/* 27740 */         output.writeEnum(121, this.timeSynchronization_);
/*       */       }
/* 27742 */       if (!getNTPServerBytes().isEmpty()) {
/* 27743 */         GeneratedMessageV3.writeString(output, 122, this.nTPServer_);
/*       */       }
/* 27745 */       if (this.nTPInterval_ != 0) {
/* 27746 */         output.writeUInt32(123, this.nTPInterval_);
/*       */       }
/* 27748 */       if (this.sleepNoPowerTimeout_ != 0) {
/* 27749 */         output.writeUInt32(125, this.sleepNoPowerTimeout_);
/*       */       }
/* 27751 */       if (this.sendPing_) {
/* 27752 */         output.writeBool(130, this.sendPing_);
/*       */       }
/* 27754 */       if (this.timetableMode_) {
/* 27755 */         output.writeBool(140, this.timetableMode_);
/*       */       }
/* 27757 */       if (!this.timetableData_.isEmpty()) {
/* 27758 */         output.writeBytes(141, this.timetableData_);
/*       */       }
/* 27760 */       if (this.service1_ != null) {
/* 27761 */         output.writeMessage(200, (MessageLite)getService1());
/*       */       }
/* 27763 */       if (this.service2_ != null) {
/* 27764 */         output.writeMessage(201, (MessageLite)getService2());
/*       */       }
/* 27766 */       if (this.service3_ != null) {
/* 27767 */         output.writeMessage(202, (MessageLite)getService3());
/*       */       }
/* 27769 */       if (this.analogInput1AverageTime_ != 0) {
/* 27770 */         output.writeUInt32(700, this.analogInput1AverageTime_);
/*       */       }
/* 27772 */       if (this.analogInput2AverageTime_ != 0) {
/* 27773 */         output.writeUInt32(701, this.analogInput2AverageTime_);
/*       */       }
/* 27775 */       if (this.analogInput3AverageTime_ != 0) {
/* 27776 */         output.writeUInt32(702, this.analogInput3AverageTime_);
/*       */       }
/* 27778 */       if (this.bluetoothRadioMode_ != DolphinConfig.BluetoothMode.BM_Disabled.getNumber()) {
/* 27779 */         output.writeEnum(800, this.bluetoothRadioMode_);
/*       */       }
/* 27781 */       if (!getBluetoothNameBytes().isEmpty()) {
/* 27782 */         GeneratedMessageV3.writeString(output, 801, this.bluetoothName_);
/*       */       }
/* 27784 */       if (!getBluetoothPINBytes().isEmpty()) {
/* 27785 */         GeneratedMessageV3.writeString(output, 802, this.bluetoothPIN_);
/*       */       }
/* 27787 */       if (this.bluetoothSecurityMode_ != DolphinConfig.BluetoothSecurityMode.BSMode_PINOnly.getNumber()) {
/* 27788 */         output.writeEnum(803, this.bluetoothSecurityMode_);
/*       */       }
/* 27790 */       if (this.bluetoothPowerDownOnSleep_) {
/* 27791 */         output.writeBool(804, this.bluetoothPowerDownOnSleep_);
/*       */       }
/* 27793 */       if (this.bluetoothExternalConnectionMode_ != DolphinConfig.BluetoothExternalConnectionMode.BECMode_None.getNumber()) {
/* 27794 */         output.writeEnum(810, this.bluetoothExternalConnectionMode_);
/*       */       }
/* 27796 */       if (!getBluetoothExternalDeviceMACBytes().isEmpty()) {
/* 27797 */         GeneratedMessageV3.writeString(output, 811, this.bluetoothExternalDeviceMAC_);
/*       */       }
/* 27799 */       if (!getBluetoothExternalDeviceNameBytes().isEmpty()) {
/* 27800 */         GeneratedMessageV3.writeString(output, 812, this.bluetoothExternalDeviceName_);
/*       */       }
/* 27802 */       if (!getBluetoothExternalDevicePINBytes().isEmpty()) {
/* 27803 */         GeneratedMessageV3.writeString(output, 813, this.bluetoothExternalDevicePIN_);
/*       */       }
/* 27805 */       if (!getBluetoothAuthorizedMAC1Bytes().isEmpty()) {
/* 27806 */         GeneratedMessageV3.writeString(output, 820, this.bluetoothAuthorizedMAC1_);
/*       */       }
/* 27808 */       if (!getBluetoothAuthorizedMAC2Bytes().isEmpty()) {
/* 27809 */         GeneratedMessageV3.writeString(output, 821, this.bluetoothAuthorizedMAC2_);
/*       */       }
/* 27811 */       if (!getBluetoothAuthorizedMAC3Bytes().isEmpty()) {
/* 27812 */         GeneratedMessageV3.writeString(output, 822, this.bluetoothAuthorizedMAC3_);
/*       */       }
/* 27814 */       if (!getBluetoothAuthorizedMAC4Bytes().isEmpty()) {
/* 27815 */         GeneratedMessageV3.writeString(output, 823, this.bluetoothAuthorizedMAC4_);
/*       */       }
/* 27817 */       if (!getBluetoothAuthorizedMAC5Bytes().isEmpty()) {
/* 27818 */         GeneratedMessageV3.writeString(output, 824, this.bluetoothAuthorizedMAC5_);
/*       */       }
/* 27820 */       if (this.gPRSContextEnabled_) {
/* 27821 */         output.writeBool(2001, this.gPRSContextEnabled_);
/*       */       }
/* 27823 */       if (!getGPRSApnNameBytes().isEmpty()) {
/* 27824 */         GeneratedMessageV3.writeString(output, 2002, this.gPRSApnName_);
/*       */       }
/* 27826 */       if (!getGPRSApnUsernameBytes().isEmpty()) {
/* 27827 */         GeneratedMessageV3.writeString(output, 2003, this.gPRSApnUsername_);
/*       */       }
/* 27829 */       if (!getGPRSApnPasswordBytes().isEmpty()) {
/* 27830 */         GeneratedMessageV3.writeString(output, 2004, this.gPRSApnPassword_);
/*       */       }
/* 27832 */       if (this.gPRSCHAPAuthentication_) {
/* 27833 */         output.writeBool(2005, this.gPRSCHAPAuthentication_);
/*       */       }
/* 27835 */       if (this.gPRSLinkTimeout_ != 0) {
/* 27836 */         output.writeUInt32(2006, this.gPRSLinkTimeout_);
/*       */       }
/* 27838 */       if (this.gPRSResponseTimeout_ != 0) {
/* 27839 */         output.writeUInt32(2007, this.gPRSResponseTimeout_);
/*       */       }
/* 27841 */       if (!getGPRSServerAddressBytes().isEmpty()) {
/* 27842 */         GeneratedMessageV3.writeString(output, 2008, this.gPRSServerAddress_);
/*       */       }
/* 27844 */       if (this.gPRSServerPort_ != 0) {
/* 27845 */         output.writeUInt32(2009, this.gPRSServerPort_);
/*       */       }
/* 27847 */       if (this.gPRSServerProtocol_ != DolphinConfig.ServerProtocol.TCP.getNumber()) {
/* 27848 */         output.writeEnum(2010, this.gPRSServerProtocol_);
/*       */       }
/* 27850 */       if (!getGPRSBackupServerAddressBytes().isEmpty()) {
/* 27851 */         GeneratedMessageV3.writeString(output, 2011, this.gPRSBackupServerAddress_);
/*       */       }
/* 27853 */       if (this.gPRSBackupServerPort_ != 0) {
/* 27854 */         output.writeUInt32(2012, this.gPRSBackupServerPort_);
/*       */       }
/* 27856 */       if (this.gPRSBackupServerProtocol_ != DolphinConfig.ServerProtocol.TCP.getNumber()) {
/* 27857 */         output.writeEnum(2013, this.gPRSBackupServerProtocol_);
/*       */       }
/* 27859 */       if (this.gPRSSSLClientAuthentication_) {
/* 27860 */         output.writeBool(2020, this.gPRSSSLClientAuthentication_);
/*       */       }
/* 27862 */       if (this.gPRSDataCompression_) {
/* 27863 */         output.writeBool(2030, this.gPRSDataCompression_);
/*       */       }
/* 27865 */       if (this.authenticationMode_ != DolphinConfig.AuthenticationMode.Authentication_IMEI.getNumber()) {
/* 27866 */         output.writeEnum(2035, this.authenticationMode_);
/*       */       }
/* 27868 */       if (!getAuthenticationCodeBytes().isEmpty()) {
/* 27869 */         GeneratedMessageV3.writeString(output, 2036, this.authenticationCode_);
/*       */       }
/* 27871 */       if (this.firmwareUpdateEnabled_) {
/* 27872 */         output.writeBool(2040, this.firmwareUpdateEnabled_);
/*       */       }
/* 27874 */       if (!getFirmwareUpdateChannelBytes().isEmpty()) {
/* 27875 */         GeneratedMessageV3.writeString(output, 2041, this.firmwareUpdateChannel_);
/*       */       }
/* 27877 */       if (this.firmwareUpdateCheckInterval_ != 0) {
/* 27878 */         output.writeUInt32(2042, this.firmwareUpdateCheckInterval_);
/*       */       }
/* 27880 */       if (!getFirmwareUpdateServerAddressBytes().isEmpty()) {
/* 27881 */         GeneratedMessageV3.writeString(output, 2045, this.firmwareUpdateServerAddress_);
/*       */       }
/* 27883 */       if (this.firmwareUpdateServerPort_ != 0) {
/* 27884 */         output.writeUInt32(2046, this.firmwareUpdateServerPort_);
/*       */       }
/* 27886 */       if (this.firmwareUpdateServerProtocol_ != DolphinConfig.ServerProtocol.TCP.getNumber()) {
/* 27887 */         output.writeEnum(2047, this.firmwareUpdateServerProtocol_);
/*       */       }
/* 27889 */       if (this.firmwareUpdateLinkTimeout_ != 0) {
/* 27890 */         output.writeUInt32(2048, this.firmwareUpdateLinkTimeout_);
/*       */       }
/* 27892 */       if (this.firmwareUpdateResponseTimeout_ != 0) {
/* 27893 */         output.writeUInt32(2049, this.firmwareUpdateResponseTimeout_);
/*       */       }
/* 27895 */       if (this.sMSDataSending_) {
/* 27896 */         output.writeBool(3000, this.sMSDataSending_);
/*       */       }
/* 27898 */       if (!getSMSDataSendNumberBytes().isEmpty()) {
/* 27899 */         GeneratedMessageV3.writeString(output, 3001, this.sMSDataSendNumber_);
/*       */       }
/* 27901 */       if (!getSMSPasswordBytes().isEmpty()) {
/* 27902 */         GeneratedMessageV3.writeString(output, 3002, this.sMSPassword_);
/*       */       }
/* 27904 */       if (this.sMSEventTimeZone_ != 0) {
/* 27905 */         output.writeInt32(3003, this.sMSEventTimeZone_);
/*       */       }
/* 27907 */       if (this.callIncommingCallAction_ != DolphinConfig.CallAction.Nothing.getNumber()) {
/* 27908 */         output.writeEnum(3051, this.callIncommingCallAction_);
/*       */       }
/* 27910 */       if (this.callDigitalInput1CallTo_ != 0) {
/* 27911 */         output.writeUInt32(3055, this.callDigitalInput1CallTo_);
/*       */       }
/* 27913 */       if (this.callDigitalInput2CallTo_ != 0) {
/* 27914 */         output.writeUInt32(3056, this.callDigitalInput2CallTo_);
/*       */       }
/* 27916 */       if (this.callDigitalInput3CallTo_ != 0) {
/* 27917 */         output.writeUInt32(3057, this.callDigitalInput3CallTo_);
/*       */       }
/* 27919 */       if (!getAuthorizedNumber1Bytes().isEmpty()) {
/* 27920 */         GeneratedMessageV3.writeString(output, 3100, this.authorizedNumber1_);
/*       */       }
/* 27922 */       if (!getAuthorizedNumber2Bytes().isEmpty()) {
/* 27923 */         GeneratedMessageV3.writeString(output, 3101, this.authorizedNumber2_);
/*       */       }
/* 27925 */       if (!getAuthorizedNumber3Bytes().isEmpty()) {
/* 27926 */         GeneratedMessageV3.writeString(output, 3102, this.authorizedNumber3_);
/*       */       }
/* 27928 */       if (!getAuthorizedNumber4Bytes().isEmpty()) {
/* 27929 */         GeneratedMessageV3.writeString(output, 3103, this.authorizedNumber4_);
/*       */       }
/* 27931 */       if (!getAuthorizedNumber5Bytes().isEmpty()) {
/* 27932 */         GeneratedMessageV3.writeString(output, 3104, this.authorizedNumber5_);
/*       */       }
/* 27934 */       if (!getAuthorizedNumber6Bytes().isEmpty()) {
/* 27935 */         GeneratedMessageV3.writeString(output, 3105, this.authorizedNumber6_);
/*       */       }
/* 27937 */       if (!getAuthorizedNumber7Bytes().isEmpty()) {
/* 27938 */         GeneratedMessageV3.writeString(output, 3106, this.authorizedNumber7_);
/*       */       }
/* 27940 */       if (!getAuthorizedNumber8Bytes().isEmpty()) {
/* 27941 */         GeneratedMessageV3.writeString(output, 3107, this.authorizedNumber8_);
/*       */       }
/* 27943 */       if (!getAuthorizedNumber9Bytes().isEmpty()) {
/* 27944 */         GeneratedMessageV3.writeString(output, 3108, this.authorizedNumber9_);
/*       */       }
/* 27946 */       if (!getAuthorizedNumber10Bytes().isEmpty()) {
/* 27947 */         GeneratedMessageV3.writeString(output, 3109, this.authorizedNumber10_);
/*       */       }
/* 27949 */       if (!getGsmPredefinedNumber1Bytes().isEmpty()) {
/* 27950 */         GeneratedMessageV3.writeString(output, 3200, this.gsmPredefinedNumber1_);
/*       */       }
/* 27952 */       if (!getGsmPredefinedNumber2Bytes().isEmpty()) {
/* 27953 */         GeneratedMessageV3.writeString(output, 3201, this.gsmPredefinedNumber2_);
/*       */       }
/* 27955 */       if (!getGsmPredefinedNumber3Bytes().isEmpty()) {
/* 27956 */         GeneratedMessageV3.writeString(output, 3202, this.gsmPredefinedNumber3_);
/*       */       }
/* 27958 */       if (!getGsmPredefinedNumber4Bytes().isEmpty()) {
/* 27959 */         GeneratedMessageV3.writeString(output, 3203, this.gsmPredefinedNumber4_);
/*       */       }
/* 27961 */       if (!getGsmPredefinedNumber5Bytes().isEmpty()) {
/* 27962 */         GeneratedMessageV3.writeString(output, 3204, this.gsmPredefinedNumber5_);
/*       */       }
/* 27964 */       if (!getGsmPredefinedNumber6Bytes().isEmpty()) {
/* 27965 */         GeneratedMessageV3.writeString(output, 3205, this.gsmPredefinedNumber6_);
/*       */       }
/* 27967 */       if (!getGsmPredefinedNumber7Bytes().isEmpty()) {
/* 27968 */         GeneratedMessageV3.writeString(output, 3206, this.gsmPredefinedNumber7_);
/*       */       }
/* 27970 */       if (!getGsmPredefinedNumber8Bytes().isEmpty()) {
/* 27971 */         GeneratedMessageV3.writeString(output, 3207, this.gsmPredefinedNumber8_);
/*       */       }
/* 27973 */       if (!getGsmPredefinedNumber9Bytes().isEmpty()) {
/* 27974 */         GeneratedMessageV3.writeString(output, 3208, this.gsmPredefinedNumber9_);
/*       */       }
/* 27976 */       if (!getGsmPredefinedNumber10Bytes().isEmpty()) {
/* 27977 */         GeneratedMessageV3.writeString(output, 3209, this.gsmPredefinedNumber10_);
/*       */       }
/* 27979 */       if (!getRoamingOperator1Bytes().isEmpty()) {
/* 27980 */         GeneratedMessageV3.writeString(output, 5000, this.roamingOperator1_);
/*       */       }
/* 27982 */       if (!getRoamingOperator2Bytes().isEmpty()) {
/* 27983 */         GeneratedMessageV3.writeString(output, 5001, this.roamingOperator2_);
/*       */       }
/* 27985 */       if (!getRoamingOperator3Bytes().isEmpty()) {
/* 27986 */         GeneratedMessageV3.writeString(output, 5002, this.roamingOperator3_);
/*       */       }
/* 27988 */       if (!getRoamingOperator4Bytes().isEmpty()) {
/* 27989 */         GeneratedMessageV3.writeString(output, 5003, this.roamingOperator4_);
/*       */       }
/* 27991 */       if (!getRoamingOperator5Bytes().isEmpty()) {
/* 27992 */         GeneratedMessageV3.writeString(output, 5004, this.roamingOperator5_);
/*       */       }
/* 27994 */       if (this.dAQStopHomeMinPeriod_ != 0) {
/* 27995 */         output.writeUInt32(10000, this.dAQStopHomeMinPeriod_);
/*       */       }
/* 27997 */       if (this.dAQMovingHomeMinPeriod_ != 0) {
/* 27998 */         output.writeUInt32(10050, this.dAQMovingHomeMinPeriod_);
/*       */       }
/* 28000 */       if (this.dAQMovingHomeMinPathDeviation_ != 0) {
/* 28001 */         output.writeUInt32(10051, this.dAQMovingHomeMinPathDeviation_);
/*       */       }
/* 28003 */       if (this.dAQStopRoamingMinPeriod_ != 0) {
/* 28004 */         output.writeUInt32(10100, this.dAQStopRoamingMinPeriod_);
/*       */       }
/* 28006 */       if (this.dAQMovingRoamingMinPeriod_ != 0) {
/* 28007 */         output.writeUInt32(10150, this.dAQMovingRoamingMinPeriod_);
/*       */       }
/* 28009 */       if (this.dAQMovingRoamingMinPathDeviation_ != 0) {
/* 28010 */         output.writeUInt32(10151, this.dAQMovingRoamingMinPathDeviation_);
/*       */       }
/* 28012 */       if (this.geoZone1_ != null) {
/* 28013 */         output.writeMessage(20000, (MessageLite)getGeoZone1());
/*       */       }
/* 28015 */       if (this.geoZone2_ != null) {
/* 28016 */         output.writeMessage(20020, (MessageLite)getGeoZone2());
/*       */       }
/* 28018 */       if (this.geoZone3_ != null) {
/* 28019 */         output.writeMessage(20040, (MessageLite)getGeoZone3());
/*       */       }
/* 28021 */       if (this.geoZone4_ != null) {
/* 28022 */         output.writeMessage(20060, (MessageLite)getGeoZone4());
/*       */       }
/* 28024 */       if (this.geoZone5_ != null) {
/* 28025 */         output.writeMessage(20080, (MessageLite)getGeoZone5());
/*       */       }
/* 28027 */       if (this.geoZone6_ != null) {
/* 28028 */         output.writeMessage(20100, (MessageLite)getGeoZone6());
/*       */       }
/* 28030 */       if (this.geoZone7_ != null) {
/* 28031 */         output.writeMessage(20120, (MessageLite)getGeoZone7());
/*       */       }
/* 28033 */       if (this.geoZone8_ != null) {
/* 28034 */         output.writeMessage(20140, (MessageLite)getGeoZone8());
/*       */       }
/* 28036 */       if (this.geoZone9_ != null) {
/* 28037 */         output.writeMessage(20160, (MessageLite)getGeoZone9());
/*       */       }
/* 28039 */       if (this.geoZone10_ != null) {
/* 28040 */         output.writeMessage(20180, (MessageLite)getGeoZone10());
/*       */       }
/* 28042 */       if (this.geoZone11_ != null) {
/* 28043 */         output.writeMessage(20200, (MessageLite)getGeoZone11());
/*       */       }
/* 28045 */       if (this.geoZone12_ != null) {
/* 28046 */         output.writeMessage(20220, (MessageLite)getGeoZone12());
/*       */       }
/* 28048 */       if (this.geoZone13_ != null) {
/* 28049 */         output.writeMessage(20240, (MessageLite)getGeoZone13());
/*       */       }
/* 28051 */       if (this.geoZone14_ != null) {
/* 28052 */         output.writeMessage(20260, (MessageLite)getGeoZone14());
/*       */       }
/* 28054 */       if (this.geoZone15_ != null) {
/* 28055 */         output.writeMessage(20280, (MessageLite)getGeoZone15());
/*       */       }
/* 28057 */       if (this.geoZone16_ != null) {
/* 28058 */         output.writeMessage(20300, (MessageLite)getGeoZone16());
/*       */       }
/* 28060 */       if (this.geoZone17_ != null) {
/* 28061 */         output.writeMessage(20320, (MessageLite)getGeoZone17());
/*       */       }
/* 28063 */       if (this.geoZone18_ != null) {
/* 28064 */         output.writeMessage(20340, (MessageLite)getGeoZone18());
/*       */       }
/* 28066 */       if (this.geoZone19_ != null) {
/* 28067 */         output.writeMessage(20360, (MessageLite)getGeoZone19());
/*       */       }
/* 28069 */       if (this.geoZone20_ != null) {
/* 28070 */         output.writeMessage(20380, (MessageLite)getGeoZone20());
/*       */       }
/* 28072 */       if (this.geoZone21_ != null) {
/* 28073 */         output.writeMessage(20400, (MessageLite)getGeoZone21());
/*       */       }
/* 28075 */       if (this.geoZone22_ != null) {
/* 28076 */         output.writeMessage(20420, (MessageLite)getGeoZone22());
/*       */       }
/* 28078 */       if (this.geoZone23_ != null) {
/* 28079 */         output.writeMessage(20440, (MessageLite)getGeoZone23());
/*       */       }
/* 28081 */       if (this.geoZone24_ != null) {
/* 28082 */         output.writeMessage(20460, (MessageLite)getGeoZone24());
/*       */       }
/* 28084 */       if (this.geoZone25_ != null) {
/* 28085 */         output.writeMessage(20480, (MessageLite)getGeoZone25());
/*       */       }
/* 28087 */       if (this.geoZone26_ != null) {
/* 28088 */         output.writeMessage(20500, (MessageLite)getGeoZone26());
/*       */       }
/* 28090 */       if (this.geoZone27_ != null) {
/* 28091 */         output.writeMessage(20520, (MessageLite)getGeoZone27());
/*       */       }
/* 28093 */       if (this.geoZone28_ != null) {
/* 28094 */         output.writeMessage(20540, (MessageLite)getGeoZone28());
/*       */       }
/* 28096 */       if (this.geoZone29_ != null) {
/* 28097 */         output.writeMessage(20560, (MessageLite)getGeoZone29());
/*       */       }
/* 28099 */       if (this.geoZone30_ != null) {
/* 28100 */         output.writeMessage(20580, (MessageLite)getGeoZone30());
/*       */       }
/* 28102 */       if (this.geoZone31_ != null) {
/* 28103 */         output.writeMessage(20600, (MessageLite)getGeoZone31());
/*       */       }
/* 28105 */       if (this.geoZone32_ != null) {
/* 28106 */         output.writeMessage(20620, (MessageLite)getGeoZone32());
/*       */       }
/* 28108 */       if (this.geoZone33_ != null) {
/* 28109 */         output.writeMessage(20640, (MessageLite)getGeoZone33());
/*       */       }
/* 28111 */       if (this.geoZone34_ != null) {
/* 28112 */         output.writeMessage(20660, (MessageLite)getGeoZone34());
/*       */       }
/* 28114 */       if (this.geoZone35_ != null) {
/* 28115 */         output.writeMessage(20680, (MessageLite)getGeoZone35());
/*       */       }
/* 28117 */       if (this.geoZone36_ != null) {
/* 28118 */         output.writeMessage(20700, (MessageLite)getGeoZone36());
/*       */       }
/* 28120 */       if (this.geoZone37_ != null) {
/* 28121 */         output.writeMessage(20720, (MessageLite)getGeoZone37());
/*       */       }
/* 28123 */       if (this.geoZone38_ != null) {
/* 28124 */         output.writeMessage(20740, (MessageLite)getGeoZone38());
/*       */       }
/* 28126 */       if (this.geoZone39_ != null) {
/* 28127 */         output.writeMessage(20760, (MessageLite)getGeoZone39());
/*       */       }
/* 28129 */       if (this.geoZone40_ != null) {
/* 28130 */         output.writeMessage(20780, (MessageLite)getGeoZone40());
/*       */       }
/* 28132 */       if (this.geoZone41_ != null) {
/* 28133 */         output.writeMessage(20800, (MessageLite)getGeoZone41());
/*       */       }
/* 28135 */       if (this.geoZone42_ != null) {
/* 28136 */         output.writeMessage(20820, (MessageLite)getGeoZone42());
/*       */       }
/* 28138 */       if (this.geoZone43_ != null) {
/* 28139 */         output.writeMessage(20840, (MessageLite)getGeoZone43());
/*       */       }
/* 28141 */       if (this.geoZone44_ != null) {
/* 28142 */         output.writeMessage(20860, (MessageLite)getGeoZone44());
/*       */       }
/* 28144 */       if (this.geoZone45_ != null) {
/* 28145 */         output.writeMessage(20880, (MessageLite)getGeoZone45());
/*       */       }
/* 28147 */       if (this.geoZone46_ != null) {
/* 28148 */         output.writeMessage(20900, (MessageLite)getGeoZone46());
/*       */       }
/* 28150 */       if (this.geoZone47_ != null) {
/* 28151 */         output.writeMessage(20920, (MessageLite)getGeoZone47());
/*       */       }
/* 28153 */       if (this.geoZone48_ != null) {
/* 28154 */         output.writeMessage(20940, (MessageLite)getGeoZone48());
/*       */       }
/* 28156 */       if (this.geoZone49_ != null) {
/* 28157 */         output.writeMessage(20960, (MessageLite)getGeoZone49());
/*       */       }
/* 28159 */       if (this.geoZone50_ != null) {
/* 28160 */         output.writeMessage(20980, (MessageLite)getGeoZone50());
/*       */       }
/* 28162 */       if (this.tripStartSpeed_ != 0) {
/* 28163 */         output.writeUInt32(28000, this.tripStartSpeed_);
/*       */       }
/* 28165 */       if (this.tripUseIgnition_) {
/* 28166 */         output.writeBool(28001, this.tripUseIgnition_);
/*       */       }
/* 28168 */       if (this.tripParkDetectionTimeout_ != 0) {
/* 28169 */         output.writeUInt32(28002, this.tripParkDetectionTimeout_);
/*       */       }
/* 28171 */       if (this.overspeedingEnable_) {
/* 28172 */         output.writeBool(28100, this.overspeedingEnable_);
/*       */       }
/* 28174 */       if (this.overspeedingLimit_ != 0) {
/* 28175 */         output.writeUInt32(28101, this.overspeedingLimit_);
/*       */       }
/* 28177 */       if (this.overspeedingActivationSpeed_ != 0) {
/* 28178 */         output.writeUInt32(28102, this.overspeedingActivationSpeed_);
/*       */       }
/* 28180 */       if (this.overspeedingDeactivationMode_ != DolphinConfig.OverSpeedingDeactivationMode.OverSpeedingDeactivationMode_Timeout.getNumber()) {
/* 28181 */         output.writeEnum(28103, this.overspeedingDeactivationMode_);
/*       */       }
/* 28183 */       if (this.overspeedingDeactivationValue_ != 0) {
/* 28184 */         output.writeUInt32(28104, this.overspeedingDeactivationValue_);
/*       */       }
/* 28186 */       if (this.uSSDEnabled_) {
/* 28187 */         output.writeBool(28140, this.uSSDEnabled_);
/*       */       }
/* 28189 */       if (this.uSSDID_ != 0) {
/* 28190 */         output.writeUInt32(28141, this.uSSDID_);
/*       */       }
/* 28192 */       if (this.uSSDInterval_ != 0) {
/* 28193 */         output.writeUInt32(28142, this.uSSDInterval_);
/*       */       }
/* 28195 */       if (!getUSSDCodeBytes().isEmpty()) {
/* 28196 */         GeneratedMessageV3.writeString(output, 28143, this.uSSDCode_);
/*       */       }
/* 28198 */       if (this.speedSensorKmPulseCount_ != 0) {
/* 28199 */         output.writeUInt32(28150, this.speedSensorKmPulseCount_);
/*       */       }
/* 28201 */       if (this.crashDetectionEnabled_) {
/* 28202 */         output.writeBool(28200, this.crashDetectionEnabled_);
/*       */       }
/* 28204 */       if (this.crashDetectionLevel1Threshold_ != 0) {
/* 28205 */         output.writeUInt32(28201, this.crashDetectionLevel1Threshold_);
/*       */       }
/* 28207 */       if (this.crashDetectionLevel2Threshold_ != 0) {
/* 28208 */         output.writeUInt32(28202, this.crashDetectionLevel2Threshold_);
/*       */       }
/* 28210 */       if (this.crashDetectionLevel3Threshold_ != 0) {
/* 28211 */         output.writeUInt32(28203, this.crashDetectionLevel3Threshold_);
/*       */       }
/* 28213 */       if (this.crashDetectionTrace_ != DolphinConfig.CrashTraceType.Trace_Disabled.getNumber()) {
/* 28214 */         output.writeEnum(28205, this.crashDetectionTrace_);
/*       */       }
/* 28216 */       if (this.crashDetectionDuration_ != 0) {
/* 28217 */         output.writeUInt32(28210, this.crashDetectionDuration_);
/*       */       }
/* 28219 */       if (this.crashDetectionSendSMSTo_ != 0) {
/* 28220 */         output.writeUInt32(28220, this.crashDetectionSendSMSTo_);
/*       */       }
/* 28222 */       if (!getCrashDetectionSMSTextBytes().isEmpty()) {
/* 28223 */         GeneratedMessageV3.writeString(output, 28221, this.crashDetectionSMSText_);
/*       */       }
/* 28225 */       if (this.crashDetectionCallTo_ != 0) {
/* 28226 */         output.writeUInt32(28225, this.crashDetectionCallTo_);
/*       */       }
/* 28228 */       if (this.rolloverDetectionEnabled_) {
/* 28229 */         output.writeBool(28230, this.rolloverDetectionEnabled_);
/*       */       }
/* 28231 */       if (this.driverRegistrationMode_ != DolphinConfig.DriverRegistration_Mode.DRMode_Disabled.getNumber()) {
/* 28232 */         output.writeEnum(29000, this.driverRegistrationMode_);
/*       */       }
/* 28234 */       if (this.driverRegistrationAuthentication_ != DolphinConfig.DriverRegistration_Authentication.DRAuth_UnAuthorized.getNumber()) {
/* 28235 */         output.writeEnum(29001, this.driverRegistrationAuthentication_);
/*       */       }
/* 28237 */       if (this.driverRegistrationDeregistrationTimeout_ != 0) {
/* 28238 */         output.writeUInt32(29002, this.driverRegistrationDeregistrationTimeout_);
/*       */       }
/* 28240 */       if (this.driverRegistrationBuzzerDigitalOutput_ != DolphinConfig.DigitalOutputName.DigitalOutput_None.getNumber()) {
/* 28241 */         output.writeEnum(29010, this.driverRegistrationBuzzerDigitalOutput_);
/*       */       }
/* 28243 */       if (this.driverRegistrationImmobilizerDigitalOutput_ != DolphinConfig.DigitalOutputName.DigitalOutput_None.getNumber()) {
/* 28244 */         output.writeEnum(29011, this.driverRegistrationImmobilizerDigitalOutput_);
/*       */       }
/* 28246 */       if (this.driverRegistrationImmobilizerActiveLow_) {
/* 28247 */         output.writeBool(29012, this.driverRegistrationImmobilizerActiveLow_);
/*       */       }
/* 28249 */       if (this.driverRegistrationAuthorizedID1_ != 0L) {
/* 28250 */         output.writeUInt64(29100, this.driverRegistrationAuthorizedID1_);
/*       */       }
/* 28252 */       if (this.driverRegistrationAuthorizedID2_ != 0L) {
/* 28253 */         output.writeUInt64(29101, this.driverRegistrationAuthorizedID2_);
/*       */       }
/* 28255 */       if (this.driverRegistrationAuthorizedID3_ != 0L) {
/* 28256 */         output.writeUInt64(29102, this.driverRegistrationAuthorizedID3_);
/*       */       }
/* 28258 */       if (this.driverRegistrationAuthorizedID4_ != 0L) {
/* 28259 */         output.writeUInt64(29103, this.driverRegistrationAuthorizedID4_);
/*       */       }
/* 28261 */       if (this.driverRegistrationAuthorizedID5_ != 0L) {
/* 28262 */         output.writeUInt64(29104, this.driverRegistrationAuthorizedID5_);
/*       */       }
/* 28264 */       if (this.driverRegistrationAuthorizedID6_ != 0L) {
/* 28265 */         output.writeUInt64(29105, this.driverRegistrationAuthorizedID6_);
/*       */       }
/* 28267 */       if (this.driverRegistrationAuthorizedID7_ != 0L) {
/* 28268 */         output.writeUInt64(29106, this.driverRegistrationAuthorizedID7_);
/*       */       }
/* 28270 */       if (this.driverRegistrationAuthorizedID8_ != 0L) {
/* 28271 */         output.writeUInt64(29107, this.driverRegistrationAuthorizedID8_);
/*       */       }
/* 28273 */       if (this.driverRegistrationAuthorizedID9_ != 0L) {
/* 28274 */         output.writeUInt64(29108, this.driverRegistrationAuthorizedID9_);
/*       */       }
/* 28276 */       if (this.driverRegistrationAuthorizedID10_ != 0L) {
/* 28277 */         output.writeUInt64(29109, this.driverRegistrationAuthorizedID10_);
/*       */       }
/* 28279 */       if (this.eCODriveActive_) {
/* 28280 */         output.writeBool(30000, this.eCODriveActive_);
/*       */       }
/* 28282 */       if (this.eCOOverSpeedingLimit_ != 0) {
/* 28283 */         output.writeUInt32(30001, this.eCOOverSpeedingLimit_);
/*       */       }
/* 28285 */       if (this.eCORPMGreenBandLowLimit_ != 0) {
/* 28286 */         output.writeUInt32(30002, this.eCORPMGreenBandLowLimit_);
/*       */       }
/* 28288 */       if (this.eCORPMGreenBandHighLimit_ != 0) {
/* 28289 */         output.writeUInt32(30003, this.eCORPMGreenBandHighLimit_);
/*       */       }
/* 28291 */       if (this.eCOHarshBreakingLimit_ != 0) {
/* 28292 */         output.writeUInt32(30004, this.eCOHarshBreakingLimit_);
/*       */       }
/* 28294 */       if (this.eCOExtremeBreakingLimit_ != 0) {
/* 28295 */         output.writeUInt32(30005, this.eCOExtremeBreakingLimit_);
/*       */       }
/* 28297 */       if (this.eCOHarshAccelerationLimit_ != 0) {
/* 28298 */         output.writeUInt32(30006, this.eCOHarshAccelerationLimit_);
/*       */       }
/* 28300 */       if (this.eCOCorneringLimit_ != 0) {
/* 28301 */         output.writeUInt32(30007, this.eCOCorneringLimit_);
/*       */       }
/* 28303 */       if (this.eCOIdlingDelay_ != 0) {
/* 28304 */         output.writeUInt32(30008, this.eCOIdlingDelay_);
/*       */       }
/* 28306 */       if (this.eCOIdlingSpeed_ != 0) {
/* 28307 */         output.writeUInt32(30009, this.eCOIdlingSpeed_);
/*       */       }
/* 28309 */       if (this.eCOCruiseControlSpeed_ != 0) {
/* 28310 */         output.writeUInt32(30010, this.eCOCruiseControlSpeed_);
/*       */       }
/* 28312 */       if (this.eCOCalculateOnlyWhenEngineOn_) {
/* 28313 */         output.writeBool(30020, this.eCOCalculateOnlyWhenEngineOn_);
/*       */       }
/* 28315 */       if (this.eCOCustomEngineSource_) {
/* 28316 */         output.writeBool(30021, this.eCOCustomEngineSource_);
/*       */       }
/* 28318 */       if (this.eCOEngineOnDIN1_) {
/* 28319 */         output.writeBool(30022, this.eCOEngineOnDIN1_);
/*       */       }
/* 28321 */       if (this.eCOEngineOnDIN2_) {
/* 28322 */         output.writeBool(30023, this.eCOEngineOnDIN2_);
/*       */       }
/* 28324 */       if (this.eCOEngineOnMovementSensor_) {
/* 28325 */         output.writeBool(30024, this.eCOEngineOnMovementSensor_);
/*       */       }
/* 28327 */       if (this.eCOEngineOnPowerSupplyAvailable_) {
/* 28328 */         output.writeBool(30025, this.eCOEngineOnPowerSupplyAvailable_);
/*       */       }
/* 28330 */       if (this.eCOEngineOnCanRPMLow_ != 0) {
/* 28331 */         output.writeUInt32(30026, this.eCOEngineOnCanRPMLow_);
/*       */       }
/* 28333 */       if (this.eCOEngineOnCanRPMHigh_ != 0) {
/* 28334 */         output.writeUInt32(30027, this.eCOEngineOnCanRPMHigh_);
/*       */       }
/* 28336 */       if (this.eCOEngineOnOperator_ != DolphinConfig.ConditionOperator.AND.getNumber()) {
/* 28337 */         output.writeEnum(30028, this.eCOEngineOnOperator_);
/*       */       }
/* 28339 */       if (this.eCOEngineOnExternalVoltage_ != 0) {
/* 28340 */         output.writeUInt32(30029, this.eCOEngineOnExternalVoltage_);
/*       */       }
/* 28342 */       if (this.eCUInterface_ != DolphinConfig.ECUInterface.ECU_Disabled.getNumber()) {
/* 28343 */         output.writeEnum(30100, this.eCUInterface_);
/*       */       }
/* 28345 */       if (this.fuelConsumptionEnabled_ != DolphinConfig.FuelConsumption.FC_Disabled.getNumber()) {
/* 28346 */         output.writeEnum(30150, this.fuelConsumptionEnabled_);
/*       */       }
/* 28348 */       if (this.fuelConsumptionEngineDisplacement_ != 0) {
/* 28349 */         output.writeUInt32(30151, this.fuelConsumptionEngineDisplacement_);
/*       */       }
/* 28351 */       if (this.fuelConsumptionCylinders_ != 0) {
/* 28352 */         output.writeUInt32(30152, this.fuelConsumptionCylinders_);
/*       */       }
/* 28354 */       if (this.fuelConsumptionInjectorPerformance_ != 0) {
/* 28355 */         output.writeUInt32(30153, this.fuelConsumptionInjectorPerformance_);
/*       */       }
/* 28357 */       if (this.fuelConsumptionVolumetricEfficiently_ != 0) {
/* 28358 */         output.writeUInt32(30154, this.fuelConsumptionVolumetricEfficiently_);
/*       */       }
/* 28360 */       if (this.faultCodesReadTime_ != 0) {
/* 28361 */         output.writeUInt32(30200, this.faultCodesReadTime_);
/*       */       }
/* 28363 */       if (this.sIPAADLinkTimeout_ != 0) {
/* 28364 */         output.writeUInt32(30500, this.sIPAADLinkTimeout_);
/*       */       }
/* 28366 */       if (this.sIPAADResponseTimeout_ != 0) {
/* 28367 */         output.writeUInt32(30501, this.sIPAADResponseTimeout_);
/*       */       }
/* 28369 */       if (!getSIPAADServerAddressBytes().isEmpty()) {
/* 28370 */         GeneratedMessageV3.writeString(output, 30502, this.sIPAADServerAddress_);
/*       */       }
/* 28372 */       if (this.sIPAADServerPort_ != 0) {
/* 28373 */         output.writeUInt32(30503, this.sIPAADServerPort_);
/*       */       }
/* 28375 */       if (this.sIPAADServerProtocol_ != DolphinConfig.ServerProtocol.TCP.getNumber()) {
/* 28376 */         output.writeEnum(30504, this.sIPAADServerProtocol_);
/*       */       }
/* 28378 */       if (this.sIPAADSSLClientAuthentication_) {
/* 28379 */         output.writeBool(30505, this.sIPAADSSLClientAuthentication_);
/*       */       }
/* 28381 */       if (this.iOTime_ != null) {
/* 28382 */         output.writeMessage(50003, (MessageLite)getIOTime());
/*       */       }
/* 28384 */       if (this.iOAngle_ != null) {
/* 28385 */         output.writeMessage(50004, (MessageLite)getIOAngle());
/*       */       }
/* 28387 */       if (this.iOSpeed_ != null) {
/* 28388 */         output.writeMessage(50005, (MessageLite)getIOSpeed());
/*       */       }
/* 28390 */       if (this.iOSleepMode_ != null) {
/* 28391 */         output.writeMessage(50008, (MessageLite)getIOSleepMode());
/*       */       }
/* 28393 */       if (this.iOIgnition_ != null) {
/* 28394 */         output.writeMessage(50010, (MessageLite)getIOIgnition());
/*       */       }
/* 28396 */       if (this.iOMovement_ != null) {
/* 28397 */         output.writeMessage(50011, (MessageLite)getIOMovement());
/*       */       }
/* 28399 */       if (this.iODataMode_ != null) {
/* 28400 */         output.writeMessage(50012, (MessageLite)getIODataMode());
/*       */       }
/* 28402 */       if (this.iOGnssStatus_ != null) {
/* 28403 */         output.writeMessage(50020, (MessageLite)getIOGnssStatus());
/*       */       }
/* 28405 */       if (this.iOGnssHDOP_ != null) {
/* 28406 */         output.writeMessage(50021, (MessageLite)getIOGnssHDOP());
/*       */       }
/* 28408 */       if (this.iOGnssPDOP_ != null) {
/* 28409 */         output.writeMessage(50022, (MessageLite)getIOGnssPDOP());
/*       */       }
/* 28411 */       if (this.iOGnssJammingStatus_ != null) {
/* 28412 */         output.writeMessage(50023, (MessageLite)getIOGnssJammingStatus());
/*       */       }
/* 28414 */       if (this.iOGsmSignal_ != null) {
/* 28415 */         output.writeMessage(50030, (MessageLite)getIOGsmSignal());
/*       */       }
/* 28417 */       if (this.iOGsmCellId_ != null) {
/* 28418 */         output.writeMessage(50031, (MessageLite)getIOGsmCellId());
/*       */       }
/* 28420 */       if (this.iOGsmAreaCode_ != null) {
/* 28421 */         output.writeMessage(50032, (MessageLite)getIOGsmAreaCode());
/*       */       }
/* 28423 */       if (this.iOGsmOperator_ != null) {
/* 28424 */         output.writeMessage(50033, (MessageLite)getIOGsmOperator());
/*       */       }
/* 28426 */       if (this.iOGsmTemperature_ != null) {
/* 28427 */         output.writeMessage(50034, (MessageLite)getIOGsmTemperature());
/*       */       }
/* 28429 */       if (this.iOGsmJammingStatus_ != null) {
/* 28430 */         output.writeMessage(50035, (MessageLite)getIOGsmJammingStatus());
/*       */       }
/* 28432 */       if (this.iOExternalVoltage_ != null) {
/* 28433 */         output.writeMessage(50040, (MessageLite)getIOExternalVoltage());
/*       */       }
/* 28435 */       if (this.iOBatteryVoltage_ != null) {
/* 28436 */         output.writeMessage(50041, (MessageLite)getIOBatteryVoltage());
/*       */       }
/* 28438 */       if (this.iOBatteryCurrent_ != null) {
/* 28439 */         output.writeMessage(50042, (MessageLite)getIOBatteryCurrent());
/*       */       }
/* 28441 */       if (this.iOTotalOdometer_ != null) {
/* 28442 */         output.writeMessage(50050, (MessageLite)getIOTotalOdometer());
/*       */       }
/* 28444 */       if (this.iOOdometer_ != null) {
/* 28445 */         output.writeMessage(50051, (MessageLite)getIOOdometer());
/*       */       }
/* 28447 */       if (this.iOEngineOnTime_ != null) {
/* 28448 */         output.writeMessage(50052, (MessageLite)getIOEngineOnTime());
/*       */       }
/* 28450 */       if (this.iOEngineOnTimeDelta_ != null) {
/* 28451 */         output.writeMessage(50053, (MessageLite)getIOEngineOnTimeDelta());
/*       */       }
/* 28453 */       if (this.iOIdlingTime_ != null) {
/* 28454 */         output.writeMessage(50054, (MessageLite)getIOIdlingTime());
/*       */       }
/* 28456 */       if (this.iOIdlingTimeDelta_ != null) {
/* 28457 */         output.writeMessage(50055, (MessageLite)getIOIdlingTimeDelta());
/*       */       }
/* 28459 */       if (this.iOSpeedSensorSpeed_ != null) {
/* 28460 */         output.writeMessage(50060, (MessageLite)getIOSpeedSensorSpeed());
/*       */       }
/* 28462 */       if (this.iOSpeedSensorDistance_ != null) {
/* 28463 */         output.writeMessage(50061, (MessageLite)getIOSpeedSensorDistance());
/*       */       }
/* 28465 */       if (this.iOSpeedSensorTotalDistance_ != null) {
/* 28466 */         output.writeMessage(50062, (MessageLite)getIOSpeedSensorTotalDistance());
/*       */       }
/* 28468 */       if (this.iOSpeedSensorMaxSpeed_ != null) {
/* 28469 */         output.writeMessage(50063, (MessageLite)getIOSpeedSensorMaxSpeed());
/*       */       }
/* 28471 */       if (this.iOSpeedSensorGPSSpeedDiff_ != null) {
/* 28472 */         output.writeMessage(50064, (MessageLite)getIOSpeedSensorGPSSpeedDiff());
/*       */       }
/* 28474 */       if (this.iODigitalInput1_ != null) {
/* 28475 */         output.writeMessage(50070, (MessageLite)getIODigitalInput1());
/*       */       }
/* 28477 */       if (this.iODigitalInput2_ != null) {
/* 28478 */         output.writeMessage(50071, (MessageLite)getIODigitalInput2());
/*       */       }
/* 28480 */       if (this.iOPowerSupply_ != null) {
/* 28481 */         output.writeMessage(50072, (MessageLite)getIOPowerSupply());
/*       */       }
/* 28483 */       if (this.iODigitalInput3_ != null) {
/* 28484 */         output.writeMessage(50073, (MessageLite)getIODigitalInput3());
/*       */       }
/* 28486 */       if (this.iOVehicleConnection_ != null) {
/* 28487 */         output.writeMessage(50079, (MessageLite)getIOVehicleConnection());
/*       */       }
/* 28489 */       if (this.iODigitalInput1Time_ != null) {
/* 28490 */         output.writeMessage(50080, (MessageLite)getIODigitalInput1Time());
/*       */       }
/* 28492 */       if (this.iODigitalInput1TimeDelta_ != null) {
/* 28493 */         output.writeMessage(50081, (MessageLite)getIODigitalInput1TimeDelta());
/*       */       }
/* 28495 */       if (this.iODigitalInput2Time_ != null) {
/* 28496 */         output.writeMessage(50082, (MessageLite)getIODigitalInput2Time());
/*       */       }
/* 28498 */       if (this.iODigitalInput2TimeDelta_ != null) {
/* 28499 */         output.writeMessage(50083, (MessageLite)getIODigitalInput2TimeDelta());
/*       */       }
/* 28501 */       if (this.iOPowerSupplyTime_ != null) {
/* 28502 */         output.writeMessage(50084, (MessageLite)getIOPowerSupplyTime());
/*       */       }
/* 28504 */       if (this.iOPowerSupplyTimeDelta_ != null) {
/* 28505 */         output.writeMessage(50085, (MessageLite)getIOPowerSupplyTimeDelta());
/*       */       }
/* 28507 */       if (this.iODigitalInput3Time_ != null) {
/* 28508 */         output.writeMessage(50086, (MessageLite)getIODigitalInput3Time());
/*       */       }
/* 28510 */       if (this.iODigitalInput3TimeDelta_ != null) {
/* 28511 */         output.writeMessage(50087, (MessageLite)getIODigitalInput3TimeDelta());
/*       */       }
/* 28513 */       if (this.iODigitalOutput1_ != null) {
/* 28514 */         output.writeMessage(50090, (MessageLite)getIODigitalOutput1());
/*       */       }
/* 28516 */       if (this.iODigitalOutput2_ != null) {
/* 28517 */         output.writeMessage(50091, (MessageLite)getIODigitalOutput2());
/*       */       }
/* 28519 */       if (this.iOAnalogInput1_ != null) {
/* 28520 */         output.writeMessage(50100, (MessageLite)getIOAnalogInput1());
/*       */       }
/* 28522 */       if (this.iOAnalogInput2_ != null) {
/* 28523 */         output.writeMessage(50101, (MessageLite)getIOAnalogInput2());
/*       */       }
/* 28525 */       if (this.iOAnalogInput3_ != null) {
/* 28526 */         output.writeMessage(50102, (MessageLite)getIOAnalogInput3());
/*       */       }
/* 28528 */       if (this.iOAxisX_ != null) {
/* 28529 */         output.writeMessage(50110, (MessageLite)getIOAxisX());
/*       */       }
/* 28531 */       if (this.iOAxisY_ != null) {
/* 28532 */         output.writeMessage(50111, (MessageLite)getIOAxisY());
/*       */       }
/* 28534 */       if (this.iOAxisZ_ != null) {
/* 28535 */         output.writeMessage(50112, (MessageLite)getIOAxisZ());
/*       */       }
/* 28537 */       if (this.iOECOMaxSpeed_ != null) {
/* 28538 */         output.writeMessage(50150, (MessageLite)getIOECOMaxSpeed());
/*       */       }
/* 28540 */       if (this.iOECONormalSpeedDistance_ != null) {
/* 28541 */         output.writeMessage(50151, (MessageLite)getIOECONormalSpeedDistance());
/*       */       }
/* 28543 */       if (this.iOECONormalSpeedTotalDistance_ != null) {
/* 28544 */         output.writeMessage(50152, (MessageLite)getIOECONormalSpeedTotalDistance());
/*       */       }
/* 28546 */       if (this.iOECONormalSpeedTimer_ != null) {
/* 28547 */         output.writeMessage(50153, (MessageLite)getIOECONormalSpeedTimer());
/*       */       }
/* 28549 */       if (this.iOECONormalSpeedTotalTimer_ != null) {
/* 28550 */         output.writeMessage(50154, (MessageLite)getIOECONormalSpeedTotalTimer());
/*       */       }
/* 28552 */       if (this.iOECOOverSpeedingDistance_ != null) {
/* 28553 */         output.writeMessage(50155, (MessageLite)getIOECOOverSpeedingDistance());
/*       */       }
/* 28555 */       if (this.iOECOOverSpeedingTotalDistance_ != null) {
/* 28556 */         output.writeMessage(50156, (MessageLite)getIOECOOverSpeedingTotalDistance());
/*       */       }
/* 28558 */       if (this.iOECOOverSpeedingTimer_ != null) {
/* 28559 */         output.writeMessage(50157, (MessageLite)getIOECOOverSpeedingTimer());
/*       */       }
/* 28561 */       if (this.iOECOOverSpeedingTotalTimer_ != null) {
/* 28562 */         output.writeMessage(50158, (MessageLite)getIOECOOverSpeedingTotalTimer());
/*       */       }
/* 28564 */       if (this.iOECOMaxRPM_ != null) {
/* 28565 */         output.writeMessage(50159, (MessageLite)getIOECOMaxRPM());
/*       */       }
/* 28567 */       if (this.iOECORPMGreenBandDistance_ != null) {
/* 28568 */         output.writeMessage(50160, (MessageLite)getIOECORPMGreenBandDistance());
/*       */       }
/* 28570 */       if (this.iOECORPMGreenBandTotalDistance_ != null) {
/* 28571 */         output.writeMessage(50161, (MessageLite)getIOECORPMGreenBandTotalDistance());
/*       */       }
/* 28573 */       if (this.iOECORPMGreenBandTimer_ != null) {
/* 28574 */         output.writeMessage(50162, (MessageLite)getIOECORPMGreenBandTimer());
/*       */       }
/* 28576 */       if (this.iOECORPMGreenBandTotalTimer_ != null) {
/* 28577 */         output.writeMessage(50163, (MessageLite)getIOECORPMGreenBandTotalTimer());
/*       */       }
/* 28579 */       if (this.iOECOOverRPMDistance_ != null) {
/* 28580 */         output.writeMessage(50164, (MessageLite)getIOECOOverRPMDistance());
/*       */       }
/* 28582 */       if (this.iOECOOverRPMTotalDistance_ != null) {
/* 28583 */         output.writeMessage(50165, (MessageLite)getIOECOOverRPMTotalDistance());
/*       */       }
/* 28585 */       if (this.iOECOOverRPMTimer_ != null) {
/* 28586 */         output.writeMessage(50166, (MessageLite)getIOECOOverRPMTimer());
/*       */       }
/* 28588 */       if (this.iOECOOverRPMTotalTimer_ != null) {
/* 28589 */         output.writeMessage(50167, (MessageLite)getIOECOOverRPMTotalTimer());
/*       */       }
/* 28591 */       if (this.iOECOIdlingEvent_ != null) {
/* 28592 */         output.writeMessage(50170, (MessageLite)getIOECOIdlingEvent());
/*       */       }
/* 28594 */       if (this.iOECOCruiseControlTimer_ != null) {
/* 28595 */         output.writeMessage(50171, (MessageLite)getIOECOCruiseControlTimer());
/*       */       }
/* 28597 */       if (this.iOECOCruiseControlTotalTimer_ != null) {
/* 28598 */         output.writeMessage(50172, (MessageLite)getIOECOCruiseControlTotalTimer());
/*       */       }
/* 28600 */       if (this.iOECOCruiseControlDistance_ != null) {
/* 28601 */         output.writeMessage(50173, (MessageLite)getIOECOCruiseControlDistance());
/*       */       }
/* 28603 */       if (this.iOECOCruiseControlTotalDistance_ != null) {
/* 28604 */         output.writeMessage(50174, (MessageLite)getIOECOCruiseControlTotalDistance());
/*       */       }
/* 28606 */       if (this.iOECOUnderRPMDistance_ != null) {
/* 28607 */         output.writeMessage(50175, (MessageLite)getIOECOUnderRPMDistance());
/*       */       }
/* 28609 */       if (this.iOECOUnderRPMTotalDistance_ != null) {
/* 28610 */         output.writeMessage(50176, (MessageLite)getIOECOUnderRPMTotalDistance());
/*       */       }
/* 28612 */       if (this.iOECOUnderRPMTimer_ != null) {
/* 28613 */         output.writeMessage(50177, (MessageLite)getIOECOUnderRPMTimer());
/*       */       }
/* 28615 */       if (this.iOECOUnderRPMTotalTimer_ != null) {
/* 28616 */         output.writeMessage(50178, (MessageLite)getIOECOUnderRPMTotalTimer());
/*       */       }
/* 28618 */       if (this.iOECOBreakCounter_ != null) {
/* 28619 */         output.writeMessage(50180, (MessageLite)getIOECOBreakCounter());
/*       */       }
/* 28621 */       if (this.iOECOHarshBreakCounter_ != null) {
/* 28622 */         output.writeMessage(50181, (MessageLite)getIOECOHarshBreakCounter());
/*       */       }
/* 28624 */       if (this.iOECOExtremeBreakCounter_ != null) {
/* 28625 */         output.writeMessage(50182, (MessageLite)getIOECOExtremeBreakCounter());
/*       */       }
/* 28627 */       if (this.iOECOHarshAccelerationCounter_ != null) {
/* 28628 */         output.writeMessage(50183, (MessageLite)getIOECOHarshAccelerationCounter());
/*       */       }
/* 28630 */       if (this.iOECOCorneringCounter_ != null) {
/* 28631 */         output.writeMessage(50184, (MessageLite)getIOECOCorneringCounter());
/*       */       }
/* 28633 */       if (this.iOECOTotalBreak_ != null) {
/* 28634 */         output.writeMessage(50185, (MessageLite)getIOECOTotalBreak());
/*       */       }
/* 28636 */       if (this.iOECOTotalHarshBreak_ != null) {
/* 28637 */         output.writeMessage(50186, (MessageLite)getIOECOTotalHarshBreak());
/*       */       }
/* 28639 */       if (this.iOECOTotalExtremeBreak_ != null) {
/* 28640 */         output.writeMessage(50187, (MessageLite)getIOECOTotalExtremeBreak());
/*       */       }
/* 28642 */       if (this.iOECOTotalHarshAcceleration_ != null) {
/* 28643 */         output.writeMessage(50188, (MessageLite)getIOECOTotalHarshAcceleration());
/*       */       }
/* 28645 */       if (this.iOECOTotalCornering_ != null) {
/* 28646 */         output.writeMessage(50189, (MessageLite)getIOECOTotalCornering());
/*       */       }
/* 28648 */       if (this.iOTrip_ != null) {
/* 28649 */         output.writeMessage(50300, (MessageLite)getIOTrip());
/*       */       }
/* 28651 */       if (this.iOTripTime_ != null) {
/* 28652 */         output.writeMessage(50301, (MessageLite)getIOTripTime());
/*       */       }
/* 28654 */       if (this.iOTripDistance_ != null) {
/* 28655 */         output.writeMessage(50302, (MessageLite)getIOTripDistance());
/*       */       }
/* 28657 */       if (this.iODriverID_ != null) {
/* 28658 */         output.writeMessage(50350, (MessageLite)getIODriverID());
/*       */       }
/* 28660 */       if (this.iOTemperatureSensor1_ != null) {
/* 28661 */         output.writeMessage(50400, (MessageLite)getIOTemperatureSensor1());
/*       */       }
/* 28663 */       if (this.iOTemperatureSensor1ID_ != null) {
/* 28664 */         output.writeMessage(50401, (MessageLite)getIOTemperatureSensor1ID());
/*       */       }
/* 28666 */       if (this.iOTemperatureSensor2_ != null) {
/* 28667 */         output.writeMessage(50402, (MessageLite)getIOTemperatureSensor2());
/*       */       }
/* 28669 */       if (this.iOTemperatureSensor2ID_ != null) {
/* 28670 */         output.writeMessage(50403, (MessageLite)getIOTemperatureSensor2ID());
/*       */       }
/* 28672 */       if (this.iOTemperatureSensor3_ != null) {
/* 28673 */         output.writeMessage(50404, (MessageLite)getIOTemperatureSensor3());
/*       */       }
/* 28675 */       if (this.iOTemperatureSensor3ID_ != null) {
/* 28676 */         output.writeMessage(50405, (MessageLite)getIOTemperatureSensor3ID());
/*       */       }
/* 28678 */       if (this.iOHumiditySensor1_ != null) {
/* 28679 */         output.writeMessage(50410, (MessageLite)getIOHumiditySensor1());
/*       */       }
/* 28681 */       if (this.iOTiltStatus_ != null) {
/* 28682 */         output.writeMessage(50490, (MessageLite)getIOTiltStatus());
/*       */       }
/* 28684 */       if (this.iOOBDEngineRPM_ != null) {
/* 28685 */         output.writeMessage(50500, (MessageLite)getIOOBDEngineRPM());
/*       */       }
/* 28687 */       if (this.iOOBDBatteryVoltage_ != null) {
/* 28688 */         output.writeMessage(50501, (MessageLite)getIOOBDBatteryVoltage());
/*       */       }
/* 28690 */       if (this.iOOBDEngineCoolantTemperature_ != null) {
/* 28691 */         output.writeMessage(50502, (MessageLite)getIOOBDEngineCoolantTemperature());
/*       */       }
/* 28693 */       if (this.iOOBDVehicleSpeed_ != null) {
/* 28694 */         output.writeMessage(50503, (MessageLite)getIOOBDVehicleSpeed());
/*       */       }
/* 28696 */       if (this.iOOBDTotalDistance_ != null) {
/* 28697 */         output.writeMessage(50504, (MessageLite)getIOOBDTotalDistance());
/*       */       }
/* 28699 */       if (this.iOOBDFuelRate_ != null) {
/* 28700 */         output.writeMessage(50505, (MessageLite)getIOOBDFuelRate());
/*       */       }
/* 28702 */       if (this.iOOBDTotalFuelUsed_ != null) {
/* 28703 */         output.writeMessage(50506, (MessageLite)getIOOBDTotalFuelUsed());
/*       */       }
/* 28705 */       if (this.iOOBDIntakeAirTemperature_ != null) {
/* 28706 */         output.writeMessage(50507, (MessageLite)getIOOBDIntakeAirTemperature());
/*       */       }
/* 28708 */       if (this.iOOBDIntakeManifoldAbsolutePressure_ != null) {
/* 28709 */         output.writeMessage(50508, (MessageLite)getIOOBDIntakeManifoldAbsolutePressure());
/*       */       }
/* 28711 */       if (this.iOOBDMalfunctionIndicatorLamp_ != null) {
/* 28712 */         output.writeMessage(50550, (MessageLite)getIOOBDMalfunctionIndicatorLamp());
/*       */       }
/* 28714 */       if (this.iODiagnosticTroubleCodesCount_ != null) {
/* 28715 */         output.writeMessage(50551, (MessageLite)getIODiagnosticTroubleCodesCount());
/*       */       }
/* 28717 */       if (this.iOOBDCalculatedEngineLoad_ != null) {
/* 28718 */         output.writeMessage(50552, (MessageLite)getIOOBDCalculatedEngineLoad());
/*       */       }
/* 28720 */       if (this.iOOBDMassAirFlowRate_ != null) {
/* 28721 */         output.writeMessage(50553, (MessageLite)getIOOBDMassAirFlowRate());
/*       */       }
/* 28723 */       if (this.iOOBDThrottlePosition_ != null) {
/* 28724 */         output.writeMessage(50554, (MessageLite)getIOOBDThrottlePosition());
/*       */       }
/* 28726 */       if (this.iOOBDRunTimeSinceEngineStart_ != null) {
/* 28727 */         output.writeMessage(50555, (MessageLite)getIOOBDRunTimeSinceEngineStart());
/*       */       }
/* 28729 */       if (this.iOOBDFuelTankLevelInput_ != null) {
/* 28730 */         output.writeMessage(50556, (MessageLite)getIOOBDFuelTankLevelInput());
/*       */       }
/* 28732 */       if (this.iOOBDDistanceTraveledSinceCodesCleared_ != null) {
/* 28733 */         output.writeMessage(50557, (MessageLite)getIOOBDDistanceTraveledSinceCodesCleared());
/*       */       }
/* 28735 */       if (this.iOOBDAbsoluteThrottlePositionD_ != null) {
/* 28736 */         output.writeMessage(50558, (MessageLite)getIOOBDAbsoluteThrottlePositionD());
/*       */       }
/* 28738 */       if (this.iOOBDTimeRunWithMILOn_ != null) {
/* 28739 */         output.writeMessage(50559, (MessageLite)getIOOBDTimeRunWithMILOn());
/*       */       }
/* 28741 */       if (this.iOOBDEngineOilTemperature_ != null) {
/* 28742 */         output.writeMessage(50560, (MessageLite)getIOOBDEngineOilTemperature());
/*       */       }
/* 28744 */       if (this.iOOBDFuelSystem1Status_ != null) {
/* 28745 */         output.writeMessage(50561, (MessageLite)getIOOBDFuelSystem1Status());
/*       */       }
/* 28747 */       if (this.iOOBDFuelSystem2Status_ != null) {
/* 28748 */         output.writeMessage(50562, (MessageLite)getIOOBDFuelSystem2Status());
/*       */       }
/* 28750 */       if (this.iOOBDOxygenSensor1Voltage_ != null) {
/* 28751 */         output.writeMessage(50563, (MessageLite)getIOOBDOxygenSensor1Voltage());
/*       */       }
/* 28753 */       if (this.iOOBDOxygenSensor1ShortTermFuelTrim_ != null) {
/* 28754 */         output.writeMessage(50564, (MessageLite)getIOOBDOxygenSensor1ShortTermFuelTrim());
/*       */       }
/* 28756 */       if (this.iOOBDOxygenSensor2Voltage_ != null) {
/* 28757 */         output.writeMessage(50565, (MessageLite)getIOOBDOxygenSensor2Voltage());
/*       */       }
/* 28759 */       if (this.iOOBDOxygenSensor2ShortTermFuelTrim_ != null) {
/* 28760 */         output.writeMessage(50566, (MessageLite)getIOOBDOxygenSensor2ShortTermFuelTrim());
/*       */       }
/* 28762 */       if (this.iOOBDOxygenSensor3Voltage_ != null) {
/* 28763 */         output.writeMessage(50567, (MessageLite)getIOOBDOxygenSensor3Voltage());
/*       */       }
/* 28765 */       if (this.iOOBDOxygenSensor3ShortTermFuelTrim_ != null) {
/* 28766 */         output.writeMessage(50568, (MessageLite)getIOOBDOxygenSensor3ShortTermFuelTrim());
/*       */       }
/* 28768 */       if (this.iOOBDOxygenSensor4Voltage_ != null) {
/* 28769 */         output.writeMessage(50569, (MessageLite)getIOOBDOxygenSensor4Voltage());
/*       */       }
/* 28771 */       if (this.iOOBDOxygenSensor4ShortTermFuelTrim_ != null) {
/* 28772 */         output.writeMessage(50570, (MessageLite)getIOOBDOxygenSensor4ShortTermFuelTrim());
/*       */       }
/* 28774 */       if (this.iOCANBusTachograph1WorkingState1_ != null) {
/* 28775 */         output.writeMessage(50700, (MessageLite)getIOCANBusTachograph1WorkingState1());
/*       */       }
/* 28777 */       if (this.iOCANBusTachograph1WorkingState2_ != null) {
/* 28778 */         output.writeMessage(50701, (MessageLite)getIOCANBusTachograph1WorkingState2());
/*       */       }
/* 28780 */       if (this.iOCANBusTachograph1VehicleMotion_ != null) {
/* 28781 */         output.writeMessage(50702, (MessageLite)getIOCANBusTachograph1VehicleMotion());
/*       */       }
/* 28783 */       if (this.iOCANBusTachograph1Driv1TimeRelStates_ != null) {
/* 28784 */         output.writeMessage(50703, (MessageLite)getIOCANBusTachograph1Driv1TimeRelStates());
/*       */       }
/* 28786 */       if (this.iOCANBusTachograph1Driver1Card_ != null) {
/* 28787 */         output.writeMessage(50704, (MessageLite)getIOCANBusTachograph1Driver1Card());
/*       */       }
/* 28789 */       if (this.iOCANBusTachograph1VehicleOverspeed_ != null) {
/* 28790 */         output.writeMessage(50705, (MessageLite)getIOCANBusTachograph1VehicleOverspeed());
/*       */       }
/* 28792 */       if (this.iOCANBusTachograph1Driv2TimeRelStates_ != null) {
/* 28793 */         output.writeMessage(50706, (MessageLite)getIOCANBusTachograph1Driv2TimeRelStates());
/*       */       }
/* 28795 */       if (this.iOCANBusTachograph1Driver2Card_ != null) {
/* 28796 */         output.writeMessage(50707, (MessageLite)getIOCANBusTachograph1Driver2Card());
/*       */       }
/* 28798 */       if (this.iOCANBusTachograph1SystemEvent_ != null) {
/* 28799 */         output.writeMessage(50708, (MessageLite)getIOCANBusTachograph1SystemEvent());
/*       */       }
/* 28801 */       if (this.iOCANBusTachograph1HandlingInformation_ != null) {
/* 28802 */         output.writeMessage(50709, (MessageLite)getIOCANBusTachograph1HandlingInformation());
/*       */       }
/* 28804 */       if (this.iOCANBusTachograph1TachographPerformance_ != null) {
/* 28805 */         output.writeMessage(50710, (MessageLite)getIOCANBusTachograph1TachographPerformance());
/*       */       }
/* 28807 */       if (this.iOCANBusTachograph1DirectionIndicator_ != null) {
/* 28808 */         output.writeMessage(50711, (MessageLite)getIOCANBusTachograph1DirectionIndicator());
/*       */       }
/* 28810 */       if (this.iOCANBusTachograph1VehicleSpeed_ != null) {
/* 28811 */         output.writeMessage(50712, (MessageLite)getIOCANBusTachograph1VehicleSpeed());
/*       */       }
/* 28813 */       if (this.iOCANBusEngineTemperature1EngineCoolantTemperature_ != null) {
/* 28814 */         output.writeMessage(50713, (MessageLite)getIOCANBusEngineTemperature1EngineCoolantTemperature());
/*       */       }
/* 28816 */       if (this.iOCANBusElectronicEngineController1ActualEnginePercent_ != null) {
/* 28817 */         output.writeMessage(50714, (MessageLite)getIOCANBusElectronicEngineController1ActualEnginePercent());
/*       */       }
/* 28819 */       if (this.iOCANBusElectronicEngineController1EngineSpeed_ != null) {
/* 28820 */         output.writeMessage(50715, (MessageLite)getIOCANBusElectronicEngineController1EngineSpeed());
/*       */       }
/* 28822 */       if (this.iOCANBusEngineHoursEngineTotalHours_ != null) {
/* 28823 */         output.writeMessage(50716, (MessageLite)getIOCANBusEngineHoursEngineTotalHours());
/*       */       }
/* 28825 */       if (this.iOCANBusVehicleDistanceTotalVehicleDistance_ != null) {
/* 28826 */         output.writeMessage(50717, (MessageLite)getIOCANBusVehicleDistanceTotalVehicleDistance());
/*       */       }
/* 28828 */       if (this.iOCANBusHighResolutionFuelConsumptionTotalFuelUsed_ != null) {
/* 28829 */         output.writeMessage(50718, (MessageLite)getIOCANBusHighResolutionFuelConsumptionTotalFuelUsed());
/*       */       }
/* 28831 */       if (this.iOCANBusDashDisplayFuelLevel1_ != null) {
/* 28832 */         output.writeMessage(50719, (MessageLite)getIOCANBusDashDisplayFuelLevel1());
/*       */       }
/* 28834 */       if (this.iOCANBusAmbientConditionsAmbientAirTemperature_ != null) {
/* 28835 */         output.writeMessage(50720, (MessageLite)getIOCANBusAmbientConditionsAmbientAirTemperature());
/*       */       }
/* 28837 */       if (this.iOCANBusFuelEconomyFuelRate_ != null) {
/* 28838 */         output.writeMessage(50721, (MessageLite)getIOCANBusFuelEconomyFuelRate());
/*       */       }
/* 28840 */       if (this.iOCANBusFuelEconomyInstantaneousFuelEconomy_ != null) {
/* 28841 */         output.writeMessage(50722, (MessageLite)getIOCANBusFuelEconomyInstantaneousFuelEconomy());
/*       */       }
/* 28843 */       if (this.iOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit1_ != null) {
/* 28844 */         output.writeMessage(50723, (MessageLite)getIOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit1());
/*       */       }
/* 28846 */       if (this.iOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit2_ != null) {
/* 28847 */         output.writeMessage(50724, (MessageLite)getIOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit2());
/*       */       }
/* 28849 */       if (this.iOCANBusAftertreatmentDieselExhaustFluidTankInformationTank1Level_ != null) {
/* 28850 */         output.writeMessage(50725, (MessageLite)getIOCANBusAftertreatmentDieselExhaustFluidTankInformationTank1Level());
/*       */       }
/* 28852 */       if (this.iOCANBusTruckBusElectronicEngineController2AcceleratorPedalPosition1_ != null) {
/* 28853 */         output.writeMessage(50742, (MessageLite)getIOCANBusTruckBusElectronicEngineController2AcceleratorPedalPosition1());
/*       */       }
/* 28855 */       if (this.iOCANBusTruckBusElectronicEngineController2EnginePercentLoad_ != null) {
/* 28856 */         output.writeMessage(50743, (MessageLite)getIOCANBusTruckBusElectronicEngineController2EnginePercentLoad());
/*       */       }
/* 28858 */       if (this.iOCANBusTruckVehicleWeightAxleWeight1_ != null) {
/* 28859 */         output.writeMessage(50744, (MessageLite)getIOCANBusTruckVehicleWeightAxleWeight1());
/*       */       }
/* 28861 */       if (this.iOCANBusTruckVehicleWeightAxleWeight2_ != null) {
/* 28862 */         output.writeMessage(50745, (MessageLite)getIOCANBusTruckVehicleWeightAxleWeight2());
/*       */       }
/* 28864 */       if (this.iOCANBusTruckVehicleWeightAxleWeight3_ != null) {
/* 28865 */         output.writeMessage(50746, (MessageLite)getIOCANBusTruckVehicleWeightAxleWeight3());
/*       */       }
/* 28867 */       if (this.iOCANBusTruckServiceInformationServiceDistance_ != null) {
/* 28868 */         output.writeMessage(50747, (MessageLite)getIOCANBusTruckServiceInformationServiceDistance());
/*       */       }
/* 28870 */       if (this.iOCANBusTruckPTODriveEngagementPTOEngageStat_ != null) {
/* 28871 */         output.writeMessage(50748, (MessageLite)getIOCANBusTruckPTODriveEngagementPTOEngageStat());
/*       */       }
/* 28873 */       if (this.iOCANBusTruckCombinationVehicleWeightGrossCombinationVehicleWeight_ != null) {
/* 28874 */         output.writeMessage(50749, (MessageLite)getIOCANBusTruckCombinationVehicleWeightGrossCombinationVehicleWeight());
/*       */       }
/* 28876 */       if (this.iOCANBusTruckBusElectronicRetarderController1RetarderTorqueMode_ != null) {
/* 28877 */         output.writeMessage(50750, (MessageLite)getIOCANBusTruckBusElectronicRetarderController1RetarderTorqueMode());
/*       */       }
/* 28879 */       if (this.iOCANBusTruckBusElectronicRetarderController1RetarderSelection_ != null) {
/* 28880 */         output.writeMessage(50751, (MessageLite)getIOCANBusTruckBusElectronicRetarderController1RetarderSelection());
/*       */       }
/* 28882 */       if (this.iOCANBusBusDoorControl1DoorPosition_ != null) {
/* 28883 */         output.writeMessage(50752, (MessageLite)getIOCANBusBusDoorControl1DoorPosition());
/*       */       }
/* 28885 */       if (this.iOCANBusBusDoorControl1RampWheelChairlift_ != null) {
/* 28886 */         output.writeMessage(50753, (MessageLite)getIOCANBusBusDoorControl1RampWheelChairlift());
/*       */       }
/* 28888 */       if (this.iOCANBusBusDoorControl1DoorsStatus2_ != null) {
/* 28889 */         output.writeMessage(50754, (MessageLite)getIOCANBusBusDoorControl1DoorsStatus2());
/*       */       }
/* 28891 */       if (this.iOCANBusBusDoorControl2_ != null) {
/* 28892 */         output.writeMessage(50755, (MessageLite)getIOCANBusBusDoorControl2());
/*       */       }
/* 28894 */       if (this.iOCANBusBrakeLiningRemainingAxleFrontLeftWheel_ != null) {
/* 28895 */         output.writeMessage(50756, (MessageLite)getIOCANBusBrakeLiningRemainingAxleFrontLeftWheel());
/*       */       }
/* 28897 */       if (this.iOCANBusBrakeLiningRemainingAxleFrontRightWheel_ != null) {
/* 28898 */         output.writeMessage(50757, (MessageLite)getIOCANBusBrakeLiningRemainingAxleFrontRightWheel());
/*       */       }
/* 28900 */       if (this.iOCANBusBrakeLiningRemainingAxleRear1LeftWheel_ != null) {
/* 28901 */         output.writeMessage(50758, (MessageLite)getIOCANBusBrakeLiningRemainingAxleRear1LeftWheel());
/*       */       }
/* 28903 */       if (this.iOCANBusBrakeLiningRemainingAxleRear1RightWheel_ != null) {
/* 28904 */         output.writeMessage(50759, (MessageLite)getIOCANBusBrakeLiningRemainingAxleRear1RightWheel());
/*       */       }
/* 28906 */       if (this.iOCANBusBrakeLiningRemainingAxleRear2LeftWheel_ != null) {
/* 28907 */         output.writeMessage(50760, (MessageLite)getIOCANBusBrakeLiningRemainingAxleRear2LeftWheel());
/*       */       }
/* 28909 */       if (this.iOCANBusBrakeLiningRemainingAxleRear2RightWheel_ != null) {
/* 28910 */         output.writeMessage(50761, (MessageLite)getIOCANBusBrakeLiningRemainingAxleRear2RightWheel());
/*       */       }
/* 28912 */       if (this.iOCANBusBrakeLiningRemainingAxleRear3LeftWheel_ != null) {
/* 28913 */         output.writeMessage(50762, (MessageLite)getIOCANBusBrakeLiningRemainingAxleRear3LeftWheel());
/*       */       }
/* 28915 */       if (this.iOCANBusBrakeLiningRemainingAxleRear3RightWheel_ != null) {
/* 28916 */         output.writeMessage(50763, (MessageLite)getIOCANBusBrakeLiningRemainingAxleRear3RightWheel());
/*       */       }
/* 28918 */       if (this.iOCANBusTruckBusCruiseControl_ != null) {
/* 28919 */         output.writeMessage(50784, (MessageLite)getIOCANBusTruckBusCruiseControl());
/*       */       }
/* 28921 */       if (this.iOCANBusBusAlternatorSpeedAlternatorStatus1_ != null) {
/* 28922 */         output.writeMessage(50785, (MessageLite)getIOCANBusBusAlternatorSpeedAlternatorStatus1());
/*       */       }
/* 28924 */       if (this.iOCANBusBusAlternatorSpeedAlternatorStatus2_ != null) {
/* 28925 */         output.writeMessage(50786, (MessageLite)getIOCANBusBusAlternatorSpeedAlternatorStatus2());
/*       */       }
/* 28927 */       if (this.iOCANBusBusAlternatorSpeedAlternatorStatus3_ != null) {
/* 28928 */         output.writeMessage(50787, (MessageLite)getIOCANBusBusAlternatorSpeedAlternatorStatus3());
/*       */       }
/* 28930 */       if (this.iOCANBusBusAlternatorSpeedAlternatorStatus4_ != null) {
/* 28931 */         output.writeMessage(50788, (MessageLite)getIOCANBusBusAlternatorSpeedAlternatorStatus4());
/*       */       }
/* 28933 */       if (this.iOCANBusBusElectronicTransmissionController2SelectedGear_ != null) {
/* 28934 */         output.writeMessage(50789, (MessageLite)getIOCANBusBusElectronicTransmissionController2SelectedGear());
/*       */       }
/* 28936 */       if (this.iOCANBusBusElectronicTransmissionController2CurrentGear_ != null) {
/* 28937 */         output.writeMessage(50790, (MessageLite)getIOCANBusBusElectronicTransmissionController2CurrentGear());
/*       */       }
/* 28939 */       if (this.iOCANBusBusAirSuspensionControl4FrontAxleLeft_ != null) {
/* 28940 */         output.writeMessage(50791, (MessageLite)getIOCANBusBusAirSuspensionControl4FrontAxleLeft());
/*       */       }
/* 28942 */       if (this.iOCANBusBusAirSuspensionControl4FrontAxleRight_ != null) {
/* 28943 */         output.writeMessage(50792, (MessageLite)getIOCANBusBusAirSuspensionControl4FrontAxleRight());
/*       */       }
/* 28945 */       if (this.iOCANBusBusAirSuspensionControl4RearAxleLeft_ != null) {
/* 28946 */         output.writeMessage(50793, (MessageLite)getIOCANBusBusAirSuspensionControl4RearAxleLeft());
/*       */       }
/* 28948 */       if (this.iOCANBusBusAirSuspensionControl4RearAxleright_ != null) {
/* 28949 */         output.writeMessage(50794, (MessageLite)getIOCANBusBusAirSuspensionControl4RearAxleright());
/*       */       }
/* 28951 */       if (this.iOCANBusDashDisplayFuelLevel2_ != null) {
/* 28952 */         output.writeMessage(50795, (MessageLite)getIOCANBusDashDisplayFuelLevel2());
/*       */       }
/* 28954 */       if (this.iOCANBusElectronicBrakeControllerBrakePedalPosition_ != null) {
/* 28955 */         output.writeMessage(50796, (MessageLite)getIOCANBusElectronicBrakeControllerBrakePedalPosition());
/*       */       }
/* 28957 */       if (this.iOCANBusFuelConsumptionGaseousTotalFuelUsed_ != null) {
/* 28958 */         output.writeMessage(50797, (MessageLite)getIOCANBusFuelConsumptionGaseousTotalFuelUsed());
/*       */       }
/* 28960 */       if (this.iOCANBusTruckBusCruiseControlVehicleSpeedParkingBrakeSwitch_ != null) {
/* 28961 */         output.writeMessage(50798, (MessageLite)getIOCANBusTruckBusCruiseControlVehicleSpeedParkingBrakeSwitch());
/*       */       }
/* 28963 */       if (this.iOCANBusTruckBusCruiseControlVehicleSpeedWheelBasedSpeed_ != null) {
/* 28964 */         output.writeMessage(50799, (MessageLite)getIOCANBusTruckBusCruiseControlVehicleSpeedWheelBasedSpeed());
/*       */       }
/* 28966 */       if (this.iOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlActive_ != null) {
/* 28967 */         output.writeMessage(50800, (MessageLite)getIOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlActive());
/*       */       }
/* 28969 */       if (this.iOCANBusTruckBusCruiseControlVehicleSpeedBrakeSwitch_ != null) {
/* 28970 */         output.writeMessage(50801, (MessageLite)getIOCANBusTruckBusCruiseControlVehicleSpeedBrakeSwitch());
/*       */       }
/* 28972 */       if (this.iOCANBusTruckBusCruiseControlVehicleSpeedClutchSwitch_ != null) {
/* 28973 */         output.writeMessage(50802, (MessageLite)getIOCANBusTruckBusCruiseControlVehicleSpeedClutchSwitch());
/*       */       }
/* 28975 */       if (this.iOCANBusTruckBusCruiseControlVehicleSpeedPtoState_ != null) {
/* 28976 */         output.writeMessage(50803, (MessageLite)getIOCANBusTruckBusCruiseControlVehicleSpeedPtoState());
/*       */       }
/* 28978 */       if (this.iOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlStates_ != null) {
/* 28979 */         output.writeMessage(50804, (MessageLite)getIOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlStates());
/*       */       }
/* 28981 */       if (this.iOCANBusBusVehicleElectricalPowerHybridBatteryPackRemainingCharge_ != null) {
/* 28982 */         output.writeMessage(50805, (MessageLite)getIOCANBusBusVehicleElectricalPowerHybridBatteryPackRemainingCharge());
/*       */       }
/* 28984 */       if (this.iOCANBusBusVehicleDynamicStabilityControl2SteeringWheelAngle_ != null) {
/* 28985 */         output.writeMessage(50806, (MessageLite)getIOCANBusBusVehicleDynamicStabilityControl2SteeringWheelAngle());
/*       */       }
/* 28987 */       if (this.iOCANBusElectronicEngineController14FuelType_ != null) {
/* 28988 */         output.writeMessage(50807, (MessageLite)getIOCANBusElectronicEngineController14FuelType());
/*       */       }
/* 28990 */       if (this.iOCANBusEngineFluidLevelPressureEngineOilLevel_ != null) {
/* 28991 */         output.writeMessage(50808, (MessageLite)getIOCANBusEngineFluidLevelPressureEngineOilLevel());
/*       */       }
/* 28993 */       if (this.iOCANBusEngineFluidLevelPressureEngineOilPressure_ != null) {
/* 28994 */         output.writeMessage(50809, (MessageLite)getIOCANBusEngineFluidLevelPressureEngineOilPressure());
/*       */       }
/* 28996 */       if (this.iOCANBusEngineFluidLevelPressureCoolantLevel_ != null) {
/* 28997 */         output.writeMessage(50810, (MessageLite)getIOCANBusEngineFluidLevelPressureCoolantLevel());
/*       */       }
/* 28999 */       if (this.iOCANBusTellTaleStatus_ != null) {
/* 29000 */         output.writeMessage(50811, (MessageLite)getIOCANBusTellTaleStatus());
/*       */       }
/* 29002 */       if (this.iOCANBusFuelConsumptionEngineTotalFuelUsed_ != null) {
/* 29003 */         output.writeMessage(50812, (MessageLite)getIOCANBusFuelConsumptionEngineTotalFuelUsed());
/*       */       }
/* 29005 */       if (this.iOCANBusTruckVehicleWeightAxleWeight4_ != null) {
/* 29006 */         output.writeMessage(50813, (MessageLite)getIOCANBusTruckVehicleWeightAxleWeight4());
/*       */       }
/* 29008 */       this.unknownFields.writeTo(output);
/*       */     }
/*       */ 
/*       */     
/*       */     public int getSerializedSize() {
/* 29013 */       int size = this.memoizedSize;
/* 29014 */       if (size != -1) return size;
/*       */       
/* 29016 */       size = 0;
/* 29017 */       if (this.serialPortBaudrate_ != DolphinConfig.SerialBaudrate.SBaud_115200.getNumber()) {
/* 29018 */         size += 
/* 29019 */           CodedOutputStream.computeEnumSize(80, this.serialPortBaudrate_);
/*       */       }
/* 29021 */       if (this.doNotResetDeviceOnProblems_) {
/* 29022 */         size += 
/* 29023 */           CodedOutputStream.computeBoolSize(90, this.doNotResetDeviceOnProblems_);
/*       */       }
/* 29025 */       if (!getPasswordBytes().isEmpty()) {
/* 29026 */         size += GeneratedMessageV3.computeStringSize(99, this.password_);
/*       */       }
/* 29028 */       if (this.movement_ != DolphinConfig.MovementSource.MS_Ignition.getNumber()) {
/* 29029 */         size += 
/* 29030 */           CodedOutputStream.computeEnumSize(100, this.movement_);
/*       */       }
/* 29032 */       if (this.movementSensorSensitivity_ != 0) {
/* 29033 */         size += 
/* 29034 */           CodedOutputStream.computeUInt32Size(101, this.movementSensorSensitivity_);
/*       */       }
/* 29036 */       if (this.sleep_ != DolphinConfig.SleepMode.SleepDisabled.getNumber()) {
/* 29037 */         size += 
/* 29038 */           CodedOutputStream.computeEnumSize(102, this.sleep_);
/*       */       }
/* 29040 */       if (this.sleepTimeout_ != 0) {
/* 29041 */         size += 
/* 29042 */           CodedOutputStream.computeUInt32Size(103, this.sleepTimeout_);
/*       */       }
/* 29044 */       if (this.engineOn_ != DolphinConfig.EngineMode.EM_AlwaysOn.getNumber()) {
/* 29045 */         size += 
/* 29046 */           CodedOutputStream.computeEnumSize(104, this.engineOn_);
/*       */       }
/* 29048 */       if (this.engineOnDIN1_) {
/* 29049 */         size += 
/* 29050 */           CodedOutputStream.computeBoolSize(105, this.engineOnDIN1_);
/*       */       }
/* 29052 */       if (this.engineOnDIN2_) {
/* 29053 */         size += 
/* 29054 */           CodedOutputStream.computeBoolSize(106, this.engineOnDIN2_);
/*       */       }
/* 29056 */       if (this.engineOnMovementSensor_) {
/* 29057 */         size += 
/* 29058 */           CodedOutputStream.computeBoolSize(107, this.engineOnMovementSensor_);
/*       */       }
/* 29060 */       if (this.engineOnPowerSupplyAvailable_) {
/* 29061 */         size += 
/* 29062 */           CodedOutputStream.computeBoolSize(108, this.engineOnPowerSupplyAvailable_);
/*       */       }
/* 29064 */       if (this.engineOnGpsSpeed_ != 0) {
/* 29065 */         size += 
/* 29066 */           CodedOutputStream.computeUInt32Size(109, this.engineOnGpsSpeed_);
/*       */       }
/* 29068 */       if (this.engineOnCanRPM_ != 0) {
/* 29069 */         size += 
/* 29070 */           CodedOutputStream.computeUInt32Size(110, this.engineOnCanRPM_);
/*       */       }
/* 29072 */       if (this.engineOnMinActiveStateDuration_ != 0) {
/* 29073 */         size += 
/* 29074 */           CodedOutputStream.computeUInt32Size(111, this.engineOnMinActiveStateDuration_);
/*       */       }
/* 29076 */       if (this.engineOnOperator_ != DolphinConfig.ConditionOperator.AND.getNumber()) {
/* 29077 */         size += 
/* 29078 */           CodedOutputStream.computeEnumSize(112, this.engineOnOperator_);
/*       */       }
/* 29080 */       if (this.engineOnMovementStartDelay_ != 0) {
/* 29081 */         size += 
/* 29082 */           CodedOutputStream.computeUInt32Size(113, this.engineOnMovementStartDelay_);
/*       */       }
/* 29084 */       if (this.engineOnMovementStopDelay_ != 0) {
/* 29085 */         size += 
/* 29086 */           CodedOutputStream.computeUInt32Size(114, this.engineOnMovementStopDelay_);
/*       */       }
/* 29088 */       if (this.engineOnExternalVoltage_ != 0) {
/* 29089 */         size += 
/* 29090 */           CodedOutputStream.computeUInt32Size(115, this.engineOnExternalVoltage_);
/*       */       }
/* 29092 */       if (this.ledIndication_) {
/* 29093 */         size += 
/* 29094 */           CodedOutputStream.computeBoolSize(116, this.ledIndication_);
/*       */       }
/* 29096 */       if (this.gNSS_ != DolphinConfig.GNSSMode.All.getNumber()) {
/* 29097 */         size += 
/* 29098 */           CodedOutputStream.computeEnumSize(117, this.gNSS_);
/*       */       }
/* 29100 */       if (this.staticNavigationEnabled_) {
/* 29101 */         size += 
/* 29102 */           CodedOutputStream.computeBoolSize(118, this.staticNavigationEnabled_);
/*       */       }
/* 29104 */       if (this.staticNavigationSource_ != DolphinConfig.StaticNavigationSource.SN_Movement.getNumber()) {
/* 29105 */         size += 
/* 29106 */           CodedOutputStream.computeEnumSize(119, this.staticNavigationSource_);
/*       */       }
/* 29108 */       if (this.recordsSaveAndSendMode_ != DolphinConfig.RecordsMode.PositionFix.getNumber()) {
/* 29109 */         size += 
/* 29110 */           CodedOutputStream.computeEnumSize(120, this.recordsSaveAndSendMode_);
/*       */       }
/* 29112 */       if (this.timeSynchronization_ != DolphinConfig.TimeSynchronization.TS_None.getNumber()) {
/* 29113 */         size += 
/* 29114 */           CodedOutputStream.computeEnumSize(121, this.timeSynchronization_);
/*       */       }
/* 29116 */       if (!getNTPServerBytes().isEmpty()) {
/* 29117 */         size += GeneratedMessageV3.computeStringSize(122, this.nTPServer_);
/*       */       }
/* 29119 */       if (this.nTPInterval_ != 0) {
/* 29120 */         size += 
/* 29121 */           CodedOutputStream.computeUInt32Size(123, this.nTPInterval_);
/*       */       }
/* 29123 */       if (this.sleepNoPowerTimeout_ != 0) {
/* 29124 */         size += 
/* 29125 */           CodedOutputStream.computeUInt32Size(125, this.sleepNoPowerTimeout_);
/*       */       }
/* 29127 */       if (this.sendPing_) {
/* 29128 */         size += 
/* 29129 */           CodedOutputStream.computeBoolSize(130, this.sendPing_);
/*       */       }
/* 29131 */       if (this.timetableMode_) {
/* 29132 */         size += 
/* 29133 */           CodedOutputStream.computeBoolSize(140, this.timetableMode_);
/*       */       }
/* 29135 */       if (!this.timetableData_.isEmpty()) {
/* 29136 */         size += 
/* 29137 */           CodedOutputStream.computeBytesSize(141, this.timetableData_);
/*       */       }
/* 29139 */       if (this.service1_ != null) {
/* 29140 */         size += 
/* 29141 */           CodedOutputStream.computeMessageSize(200, (MessageLite)getService1());
/*       */       }
/* 29143 */       if (this.service2_ != null) {
/* 29144 */         size += 
/* 29145 */           CodedOutputStream.computeMessageSize(201, (MessageLite)getService2());
/*       */       }
/* 29147 */       if (this.service3_ != null) {
/* 29148 */         size += 
/* 29149 */           CodedOutputStream.computeMessageSize(202, (MessageLite)getService3());
/*       */       }
/* 29151 */       if (this.analogInput1AverageTime_ != 0) {
/* 29152 */         size += 
/* 29153 */           CodedOutputStream.computeUInt32Size(700, this.analogInput1AverageTime_);
/*       */       }
/* 29155 */       if (this.analogInput2AverageTime_ != 0) {
/* 29156 */         size += 
/* 29157 */           CodedOutputStream.computeUInt32Size(701, this.analogInput2AverageTime_);
/*       */       }
/* 29159 */       if (this.analogInput3AverageTime_ != 0) {
/* 29160 */         size += 
/* 29161 */           CodedOutputStream.computeUInt32Size(702, this.analogInput3AverageTime_);
/*       */       }
/* 29163 */       if (this.bluetoothRadioMode_ != DolphinConfig.BluetoothMode.BM_Disabled.getNumber()) {
/* 29164 */         size += 
/* 29165 */           CodedOutputStream.computeEnumSize(800, this.bluetoothRadioMode_);
/*       */       }
/* 29167 */       if (!getBluetoothNameBytes().isEmpty()) {
/* 29168 */         size += GeneratedMessageV3.computeStringSize(801, this.bluetoothName_);
/*       */       }
/* 29170 */       if (!getBluetoothPINBytes().isEmpty()) {
/* 29171 */         size += GeneratedMessageV3.computeStringSize(802, this.bluetoothPIN_);
/*       */       }
/* 29173 */       if (this.bluetoothSecurityMode_ != DolphinConfig.BluetoothSecurityMode.BSMode_PINOnly.getNumber()) {
/* 29174 */         size += 
/* 29175 */           CodedOutputStream.computeEnumSize(803, this.bluetoothSecurityMode_);
/*       */       }
/* 29177 */       if (this.bluetoothPowerDownOnSleep_) {
/* 29178 */         size += 
/* 29179 */           CodedOutputStream.computeBoolSize(804, this.bluetoothPowerDownOnSleep_);
/*       */       }
/* 29181 */       if (this.bluetoothExternalConnectionMode_ != DolphinConfig.BluetoothExternalConnectionMode.BECMode_None.getNumber()) {
/* 29182 */         size += 
/* 29183 */           CodedOutputStream.computeEnumSize(810, this.bluetoothExternalConnectionMode_);
/*       */       }
/* 29185 */       if (!getBluetoothExternalDeviceMACBytes().isEmpty()) {
/* 29186 */         size += GeneratedMessageV3.computeStringSize(811, this.bluetoothExternalDeviceMAC_);
/*       */       }
/* 29188 */       if (!getBluetoothExternalDeviceNameBytes().isEmpty()) {
/* 29189 */         size += GeneratedMessageV3.computeStringSize(812, this.bluetoothExternalDeviceName_);
/*       */       }
/* 29191 */       if (!getBluetoothExternalDevicePINBytes().isEmpty()) {
/* 29192 */         size += GeneratedMessageV3.computeStringSize(813, this.bluetoothExternalDevicePIN_);
/*       */       }
/* 29194 */       if (!getBluetoothAuthorizedMAC1Bytes().isEmpty()) {
/* 29195 */         size += GeneratedMessageV3.computeStringSize(820, this.bluetoothAuthorizedMAC1_);
/*       */       }
/* 29197 */       if (!getBluetoothAuthorizedMAC2Bytes().isEmpty()) {
/* 29198 */         size += GeneratedMessageV3.computeStringSize(821, this.bluetoothAuthorizedMAC2_);
/*       */       }
/* 29200 */       if (!getBluetoothAuthorizedMAC3Bytes().isEmpty()) {
/* 29201 */         size += GeneratedMessageV3.computeStringSize(822, this.bluetoothAuthorizedMAC3_);
/*       */       }
/* 29203 */       if (!getBluetoothAuthorizedMAC4Bytes().isEmpty()) {
/* 29204 */         size += GeneratedMessageV3.computeStringSize(823, this.bluetoothAuthorizedMAC4_);
/*       */       }
/* 29206 */       if (!getBluetoothAuthorizedMAC5Bytes().isEmpty()) {
/* 29207 */         size += GeneratedMessageV3.computeStringSize(824, this.bluetoothAuthorizedMAC5_);
/*       */       }
/* 29209 */       if (this.gPRSContextEnabled_) {
/* 29210 */         size += 
/* 29211 */           CodedOutputStream.computeBoolSize(2001, this.gPRSContextEnabled_);
/*       */       }
/* 29213 */       if (!getGPRSApnNameBytes().isEmpty()) {
/* 29214 */         size += GeneratedMessageV3.computeStringSize(2002, this.gPRSApnName_);
/*       */       }
/* 29216 */       if (!getGPRSApnUsernameBytes().isEmpty()) {
/* 29217 */         size += GeneratedMessageV3.computeStringSize(2003, this.gPRSApnUsername_);
/*       */       }
/* 29219 */       if (!getGPRSApnPasswordBytes().isEmpty()) {
/* 29220 */         size += GeneratedMessageV3.computeStringSize(2004, this.gPRSApnPassword_);
/*       */       }
/* 29222 */       if (this.gPRSCHAPAuthentication_) {
/* 29223 */         size += 
/* 29224 */           CodedOutputStream.computeBoolSize(2005, this.gPRSCHAPAuthentication_);
/*       */       }
/* 29226 */       if (this.gPRSLinkTimeout_ != 0) {
/* 29227 */         size += 
/* 29228 */           CodedOutputStream.computeUInt32Size(2006, this.gPRSLinkTimeout_);
/*       */       }
/* 29230 */       if (this.gPRSResponseTimeout_ != 0) {
/* 29231 */         size += 
/* 29232 */           CodedOutputStream.computeUInt32Size(2007, this.gPRSResponseTimeout_);
/*       */       }
/* 29234 */       if (!getGPRSServerAddressBytes().isEmpty()) {
/* 29235 */         size += GeneratedMessageV3.computeStringSize(2008, this.gPRSServerAddress_);
/*       */       }
/* 29237 */       if (this.gPRSServerPort_ != 0) {
/* 29238 */         size += 
/* 29239 */           CodedOutputStream.computeUInt32Size(2009, this.gPRSServerPort_);
/*       */       }
/* 29241 */       if (this.gPRSServerProtocol_ != DolphinConfig.ServerProtocol.TCP.getNumber()) {
/* 29242 */         size += 
/* 29243 */           CodedOutputStream.computeEnumSize(2010, this.gPRSServerProtocol_);
/*       */       }
/* 29245 */       if (!getGPRSBackupServerAddressBytes().isEmpty()) {
/* 29246 */         size += GeneratedMessageV3.computeStringSize(2011, this.gPRSBackupServerAddress_);
/*       */       }
/* 29248 */       if (this.gPRSBackupServerPort_ != 0) {
/* 29249 */         size += 
/* 29250 */           CodedOutputStream.computeUInt32Size(2012, this.gPRSBackupServerPort_);
/*       */       }
/* 29252 */       if (this.gPRSBackupServerProtocol_ != DolphinConfig.ServerProtocol.TCP.getNumber()) {
/* 29253 */         size += 
/* 29254 */           CodedOutputStream.computeEnumSize(2013, this.gPRSBackupServerProtocol_);
/*       */       }
/* 29256 */       if (this.gPRSSSLClientAuthentication_) {
/* 29257 */         size += 
/* 29258 */           CodedOutputStream.computeBoolSize(2020, this.gPRSSSLClientAuthentication_);
/*       */       }
/* 29260 */       if (this.gPRSDataCompression_) {
/* 29261 */         size += 
/* 29262 */           CodedOutputStream.computeBoolSize(2030, this.gPRSDataCompression_);
/*       */       }
/* 29264 */       if (this.authenticationMode_ != DolphinConfig.AuthenticationMode.Authentication_IMEI.getNumber()) {
/* 29265 */         size += 
/* 29266 */           CodedOutputStream.computeEnumSize(2035, this.authenticationMode_);
/*       */       }
/* 29268 */       if (!getAuthenticationCodeBytes().isEmpty()) {
/* 29269 */         size += GeneratedMessageV3.computeStringSize(2036, this.authenticationCode_);
/*       */       }
/* 29271 */       if (this.firmwareUpdateEnabled_) {
/* 29272 */         size += 
/* 29273 */           CodedOutputStream.computeBoolSize(2040, this.firmwareUpdateEnabled_);
/*       */       }
/* 29275 */       if (!getFirmwareUpdateChannelBytes().isEmpty()) {
/* 29276 */         size += GeneratedMessageV3.computeStringSize(2041, this.firmwareUpdateChannel_);
/*       */       }
/* 29278 */       if (this.firmwareUpdateCheckInterval_ != 0) {
/* 29279 */         size += 
/* 29280 */           CodedOutputStream.computeUInt32Size(2042, this.firmwareUpdateCheckInterval_);
/*       */       }
/* 29282 */       if (!getFirmwareUpdateServerAddressBytes().isEmpty()) {
/* 29283 */         size += GeneratedMessageV3.computeStringSize(2045, this.firmwareUpdateServerAddress_);
/*       */       }
/* 29285 */       if (this.firmwareUpdateServerPort_ != 0) {
/* 29286 */         size += 
/* 29287 */           CodedOutputStream.computeUInt32Size(2046, this.firmwareUpdateServerPort_);
/*       */       }
/* 29289 */       if (this.firmwareUpdateServerProtocol_ != DolphinConfig.ServerProtocol.TCP.getNumber()) {
/* 29290 */         size += 
/* 29291 */           CodedOutputStream.computeEnumSize(2047, this.firmwareUpdateServerProtocol_);
/*       */       }
/* 29293 */       if (this.firmwareUpdateLinkTimeout_ != 0) {
/* 29294 */         size += 
/* 29295 */           CodedOutputStream.computeUInt32Size(2048, this.firmwareUpdateLinkTimeout_);
/*       */       }
/* 29297 */       if (this.firmwareUpdateResponseTimeout_ != 0) {
/* 29298 */         size += 
/* 29299 */           CodedOutputStream.computeUInt32Size(2049, this.firmwareUpdateResponseTimeout_);
/*       */       }
/* 29301 */       if (this.sMSDataSending_) {
/* 29302 */         size += 
/* 29303 */           CodedOutputStream.computeBoolSize(3000, this.sMSDataSending_);
/*       */       }
/* 29305 */       if (!getSMSDataSendNumberBytes().isEmpty()) {
/* 29306 */         size += GeneratedMessageV3.computeStringSize(3001, this.sMSDataSendNumber_);
/*       */       }
/* 29308 */       if (!getSMSPasswordBytes().isEmpty()) {
/* 29309 */         size += GeneratedMessageV3.computeStringSize(3002, this.sMSPassword_);
/*       */       }
/* 29311 */       if (this.sMSEventTimeZone_ != 0) {
/* 29312 */         size += 
/* 29313 */           CodedOutputStream.computeInt32Size(3003, this.sMSEventTimeZone_);
/*       */       }
/* 29315 */       if (this.callIncommingCallAction_ != DolphinConfig.CallAction.Nothing.getNumber()) {
/* 29316 */         size += 
/* 29317 */           CodedOutputStream.computeEnumSize(3051, this.callIncommingCallAction_);
/*       */       }
/* 29319 */       if (this.callDigitalInput1CallTo_ != 0) {
/* 29320 */         size += 
/* 29321 */           CodedOutputStream.computeUInt32Size(3055, this.callDigitalInput1CallTo_);
/*       */       }
/* 29323 */       if (this.callDigitalInput2CallTo_ != 0) {
/* 29324 */         size += 
/* 29325 */           CodedOutputStream.computeUInt32Size(3056, this.callDigitalInput2CallTo_);
/*       */       }
/* 29327 */       if (this.callDigitalInput3CallTo_ != 0) {
/* 29328 */         size += 
/* 29329 */           CodedOutputStream.computeUInt32Size(3057, this.callDigitalInput3CallTo_);
/*       */       }
/* 29331 */       if (!getAuthorizedNumber1Bytes().isEmpty()) {
/* 29332 */         size += GeneratedMessageV3.computeStringSize(3100, this.authorizedNumber1_);
/*       */       }
/* 29334 */       if (!getAuthorizedNumber2Bytes().isEmpty()) {
/* 29335 */         size += GeneratedMessageV3.computeStringSize(3101, this.authorizedNumber2_);
/*       */       }
/* 29337 */       if (!getAuthorizedNumber3Bytes().isEmpty()) {
/* 29338 */         size += GeneratedMessageV3.computeStringSize(3102, this.authorizedNumber3_);
/*       */       }
/* 29340 */       if (!getAuthorizedNumber4Bytes().isEmpty()) {
/* 29341 */         size += GeneratedMessageV3.computeStringSize(3103, this.authorizedNumber4_);
/*       */       }
/* 29343 */       if (!getAuthorizedNumber5Bytes().isEmpty()) {
/* 29344 */         size += GeneratedMessageV3.computeStringSize(3104, this.authorizedNumber5_);
/*       */       }
/* 29346 */       if (!getAuthorizedNumber6Bytes().isEmpty()) {
/* 29347 */         size += GeneratedMessageV3.computeStringSize(3105, this.authorizedNumber6_);
/*       */       }
/* 29349 */       if (!getAuthorizedNumber7Bytes().isEmpty()) {
/* 29350 */         size += GeneratedMessageV3.computeStringSize(3106, this.authorizedNumber7_);
/*       */       }
/* 29352 */       if (!getAuthorizedNumber8Bytes().isEmpty()) {
/* 29353 */         size += GeneratedMessageV3.computeStringSize(3107, this.authorizedNumber8_);
/*       */       }
/* 29355 */       if (!getAuthorizedNumber9Bytes().isEmpty()) {
/* 29356 */         size += GeneratedMessageV3.computeStringSize(3108, this.authorizedNumber9_);
/*       */       }
/* 29358 */       if (!getAuthorizedNumber10Bytes().isEmpty()) {
/* 29359 */         size += GeneratedMessageV3.computeStringSize(3109, this.authorizedNumber10_);
/*       */       }
/* 29361 */       if (!getGsmPredefinedNumber1Bytes().isEmpty()) {
/* 29362 */         size += GeneratedMessageV3.computeStringSize(3200, this.gsmPredefinedNumber1_);
/*       */       }
/* 29364 */       if (!getGsmPredefinedNumber2Bytes().isEmpty()) {
/* 29365 */         size += GeneratedMessageV3.computeStringSize(3201, this.gsmPredefinedNumber2_);
/*       */       }
/* 29367 */       if (!getGsmPredefinedNumber3Bytes().isEmpty()) {
/* 29368 */         size += GeneratedMessageV3.computeStringSize(3202, this.gsmPredefinedNumber3_);
/*       */       }
/* 29370 */       if (!getGsmPredefinedNumber4Bytes().isEmpty()) {
/* 29371 */         size += GeneratedMessageV3.computeStringSize(3203, this.gsmPredefinedNumber4_);
/*       */       }
/* 29373 */       if (!getGsmPredefinedNumber5Bytes().isEmpty()) {
/* 29374 */         size += GeneratedMessageV3.computeStringSize(3204, this.gsmPredefinedNumber5_);
/*       */       }
/* 29376 */       if (!getGsmPredefinedNumber6Bytes().isEmpty()) {
/* 29377 */         size += GeneratedMessageV3.computeStringSize(3205, this.gsmPredefinedNumber6_);
/*       */       }
/* 29379 */       if (!getGsmPredefinedNumber7Bytes().isEmpty()) {
/* 29380 */         size += GeneratedMessageV3.computeStringSize(3206, this.gsmPredefinedNumber7_);
/*       */       }
/* 29382 */       if (!getGsmPredefinedNumber8Bytes().isEmpty()) {
/* 29383 */         size += GeneratedMessageV3.computeStringSize(3207, this.gsmPredefinedNumber8_);
/*       */       }
/* 29385 */       if (!getGsmPredefinedNumber9Bytes().isEmpty()) {
/* 29386 */         size += GeneratedMessageV3.computeStringSize(3208, this.gsmPredefinedNumber9_);
/*       */       }
/* 29388 */       if (!getGsmPredefinedNumber10Bytes().isEmpty()) {
/* 29389 */         size += GeneratedMessageV3.computeStringSize(3209, this.gsmPredefinedNumber10_);
/*       */       }
/* 29391 */       if (!getRoamingOperator1Bytes().isEmpty()) {
/* 29392 */         size += GeneratedMessageV3.computeStringSize(5000, this.roamingOperator1_);
/*       */       }
/* 29394 */       if (!getRoamingOperator2Bytes().isEmpty()) {
/* 29395 */         size += GeneratedMessageV3.computeStringSize(5001, this.roamingOperator2_);
/*       */       }
/* 29397 */       if (!getRoamingOperator3Bytes().isEmpty()) {
/* 29398 */         size += GeneratedMessageV3.computeStringSize(5002, this.roamingOperator3_);
/*       */       }
/* 29400 */       if (!getRoamingOperator4Bytes().isEmpty()) {
/* 29401 */         size += GeneratedMessageV3.computeStringSize(5003, this.roamingOperator4_);
/*       */       }
/* 29403 */       if (!getRoamingOperator5Bytes().isEmpty()) {
/* 29404 */         size += GeneratedMessageV3.computeStringSize(5004, this.roamingOperator5_);
/*       */       }
/* 29406 */       if (this.dAQStopHomeMinPeriod_ != 0) {
/* 29407 */         size += 
/* 29408 */           CodedOutputStream.computeUInt32Size(10000, this.dAQStopHomeMinPeriod_);
/*       */       }
/* 29410 */       if (this.dAQMovingHomeMinPeriod_ != 0) {
/* 29411 */         size += 
/* 29412 */           CodedOutputStream.computeUInt32Size(10050, this.dAQMovingHomeMinPeriod_);
/*       */       }
/* 29414 */       if (this.dAQMovingHomeMinPathDeviation_ != 0) {
/* 29415 */         size += 
/* 29416 */           CodedOutputStream.computeUInt32Size(10051, this.dAQMovingHomeMinPathDeviation_);
/*       */       }
/* 29418 */       if (this.dAQStopRoamingMinPeriod_ != 0) {
/* 29419 */         size += 
/* 29420 */           CodedOutputStream.computeUInt32Size(10100, this.dAQStopRoamingMinPeriod_);
/*       */       }
/* 29422 */       if (this.dAQMovingRoamingMinPeriod_ != 0) {
/* 29423 */         size += 
/* 29424 */           CodedOutputStream.computeUInt32Size(10150, this.dAQMovingRoamingMinPeriod_);
/*       */       }
/* 29426 */       if (this.dAQMovingRoamingMinPathDeviation_ != 0) {
/* 29427 */         size += 
/* 29428 */           CodedOutputStream.computeUInt32Size(10151, this.dAQMovingRoamingMinPathDeviation_);
/*       */       }
/* 29430 */       if (this.geoZone1_ != null) {
/* 29431 */         size += 
/* 29432 */           CodedOutputStream.computeMessageSize(20000, (MessageLite)getGeoZone1());
/*       */       }
/* 29434 */       if (this.geoZone2_ != null) {
/* 29435 */         size += 
/* 29436 */           CodedOutputStream.computeMessageSize(20020, (MessageLite)getGeoZone2());
/*       */       }
/* 29438 */       if (this.geoZone3_ != null) {
/* 29439 */         size += 
/* 29440 */           CodedOutputStream.computeMessageSize(20040, (MessageLite)getGeoZone3());
/*       */       }
/* 29442 */       if (this.geoZone4_ != null) {
/* 29443 */         size += 
/* 29444 */           CodedOutputStream.computeMessageSize(20060, (MessageLite)getGeoZone4());
/*       */       }
/* 29446 */       if (this.geoZone5_ != null) {
/* 29447 */         size += 
/* 29448 */           CodedOutputStream.computeMessageSize(20080, (MessageLite)getGeoZone5());
/*       */       }
/* 29450 */       if (this.geoZone6_ != null) {
/* 29451 */         size += 
/* 29452 */           CodedOutputStream.computeMessageSize(20100, (MessageLite)getGeoZone6());
/*       */       }
/* 29454 */       if (this.geoZone7_ != null) {
/* 29455 */         size += 
/* 29456 */           CodedOutputStream.computeMessageSize(20120, (MessageLite)getGeoZone7());
/*       */       }
/* 29458 */       if (this.geoZone8_ != null) {
/* 29459 */         size += 
/* 29460 */           CodedOutputStream.computeMessageSize(20140, (MessageLite)getGeoZone8());
/*       */       }
/* 29462 */       if (this.geoZone9_ != null) {
/* 29463 */         size += 
/* 29464 */           CodedOutputStream.computeMessageSize(20160, (MessageLite)getGeoZone9());
/*       */       }
/* 29466 */       if (this.geoZone10_ != null) {
/* 29467 */         size += 
/* 29468 */           CodedOutputStream.computeMessageSize(20180, (MessageLite)getGeoZone10());
/*       */       }
/* 29470 */       if (this.geoZone11_ != null) {
/* 29471 */         size += 
/* 29472 */           CodedOutputStream.computeMessageSize(20200, (MessageLite)getGeoZone11());
/*       */       }
/* 29474 */       if (this.geoZone12_ != null) {
/* 29475 */         size += 
/* 29476 */           CodedOutputStream.computeMessageSize(20220, (MessageLite)getGeoZone12());
/*       */       }
/* 29478 */       if (this.geoZone13_ != null) {
/* 29479 */         size += 
/* 29480 */           CodedOutputStream.computeMessageSize(20240, (MessageLite)getGeoZone13());
/*       */       }
/* 29482 */       if (this.geoZone14_ != null) {
/* 29483 */         size += 
/* 29484 */           CodedOutputStream.computeMessageSize(20260, (MessageLite)getGeoZone14());
/*       */       }
/* 29486 */       if (this.geoZone15_ != null) {
/* 29487 */         size += 
/* 29488 */           CodedOutputStream.computeMessageSize(20280, (MessageLite)getGeoZone15());
/*       */       }
/* 29490 */       if (this.geoZone16_ != null) {
/* 29491 */         size += 
/* 29492 */           CodedOutputStream.computeMessageSize(20300, (MessageLite)getGeoZone16());
/*       */       }
/* 29494 */       if (this.geoZone17_ != null) {
/* 29495 */         size += 
/* 29496 */           CodedOutputStream.computeMessageSize(20320, (MessageLite)getGeoZone17());
/*       */       }
/* 29498 */       if (this.geoZone18_ != null) {
/* 29499 */         size += 
/* 29500 */           CodedOutputStream.computeMessageSize(20340, (MessageLite)getGeoZone18());
/*       */       }
/* 29502 */       if (this.geoZone19_ != null) {
/* 29503 */         size += 
/* 29504 */           CodedOutputStream.computeMessageSize(20360, (MessageLite)getGeoZone19());
/*       */       }
/* 29506 */       if (this.geoZone20_ != null) {
/* 29507 */         size += 
/* 29508 */           CodedOutputStream.computeMessageSize(20380, (MessageLite)getGeoZone20());
/*       */       }
/* 29510 */       if (this.geoZone21_ != null) {
/* 29511 */         size += 
/* 29512 */           CodedOutputStream.computeMessageSize(20400, (MessageLite)getGeoZone21());
/*       */       }
/* 29514 */       if (this.geoZone22_ != null) {
/* 29515 */         size += 
/* 29516 */           CodedOutputStream.computeMessageSize(20420, (MessageLite)getGeoZone22());
/*       */       }
/* 29518 */       if (this.geoZone23_ != null) {
/* 29519 */         size += 
/* 29520 */           CodedOutputStream.computeMessageSize(20440, (MessageLite)getGeoZone23());
/*       */       }
/* 29522 */       if (this.geoZone24_ != null) {
/* 29523 */         size += 
/* 29524 */           CodedOutputStream.computeMessageSize(20460, (MessageLite)getGeoZone24());
/*       */       }
/* 29526 */       if (this.geoZone25_ != null) {
/* 29527 */         size += 
/* 29528 */           CodedOutputStream.computeMessageSize(20480, (MessageLite)getGeoZone25());
/*       */       }
/* 29530 */       if (this.geoZone26_ != null) {
/* 29531 */         size += 
/* 29532 */           CodedOutputStream.computeMessageSize(20500, (MessageLite)getGeoZone26());
/*       */       }
/* 29534 */       if (this.geoZone27_ != null) {
/* 29535 */         size += 
/* 29536 */           CodedOutputStream.computeMessageSize(20520, (MessageLite)getGeoZone27());
/*       */       }
/* 29538 */       if (this.geoZone28_ != null) {
/* 29539 */         size += 
/* 29540 */           CodedOutputStream.computeMessageSize(20540, (MessageLite)getGeoZone28());
/*       */       }
/* 29542 */       if (this.geoZone29_ != null) {
/* 29543 */         size += 
/* 29544 */           CodedOutputStream.computeMessageSize(20560, (MessageLite)getGeoZone29());
/*       */       }
/* 29546 */       if (this.geoZone30_ != null) {
/* 29547 */         size += 
/* 29548 */           CodedOutputStream.computeMessageSize(20580, (MessageLite)getGeoZone30());
/*       */       }
/* 29550 */       if (this.geoZone31_ != null) {
/* 29551 */         size += 
/* 29552 */           CodedOutputStream.computeMessageSize(20600, (MessageLite)getGeoZone31());
/*       */       }
/* 29554 */       if (this.geoZone32_ != null) {
/* 29555 */         size += 
/* 29556 */           CodedOutputStream.computeMessageSize(20620, (MessageLite)getGeoZone32());
/*       */       }
/* 29558 */       if (this.geoZone33_ != null) {
/* 29559 */         size += 
/* 29560 */           CodedOutputStream.computeMessageSize(20640, (MessageLite)getGeoZone33());
/*       */       }
/* 29562 */       if (this.geoZone34_ != null) {
/* 29563 */         size += 
/* 29564 */           CodedOutputStream.computeMessageSize(20660, (MessageLite)getGeoZone34());
/*       */       }
/* 29566 */       if (this.geoZone35_ != null) {
/* 29567 */         size += 
/* 29568 */           CodedOutputStream.computeMessageSize(20680, (MessageLite)getGeoZone35());
/*       */       }
/* 29570 */       if (this.geoZone36_ != null) {
/* 29571 */         size += 
/* 29572 */           CodedOutputStream.computeMessageSize(20700, (MessageLite)getGeoZone36());
/*       */       }
/* 29574 */       if (this.geoZone37_ != null) {
/* 29575 */         size += 
/* 29576 */           CodedOutputStream.computeMessageSize(20720, (MessageLite)getGeoZone37());
/*       */       }
/* 29578 */       if (this.geoZone38_ != null) {
/* 29579 */         size += 
/* 29580 */           CodedOutputStream.computeMessageSize(20740, (MessageLite)getGeoZone38());
/*       */       }
/* 29582 */       if (this.geoZone39_ != null) {
/* 29583 */         size += 
/* 29584 */           CodedOutputStream.computeMessageSize(20760, (MessageLite)getGeoZone39());
/*       */       }
/* 29586 */       if (this.geoZone40_ != null) {
/* 29587 */         size += 
/* 29588 */           CodedOutputStream.computeMessageSize(20780, (MessageLite)getGeoZone40());
/*       */       }
/* 29590 */       if (this.geoZone41_ != null) {
/* 29591 */         size += 
/* 29592 */           CodedOutputStream.computeMessageSize(20800, (MessageLite)getGeoZone41());
/*       */       }
/* 29594 */       if (this.geoZone42_ != null) {
/* 29595 */         size += 
/* 29596 */           CodedOutputStream.computeMessageSize(20820, (MessageLite)getGeoZone42());
/*       */       }
/* 29598 */       if (this.geoZone43_ != null) {
/* 29599 */         size += 
/* 29600 */           CodedOutputStream.computeMessageSize(20840, (MessageLite)getGeoZone43());
/*       */       }
/* 29602 */       if (this.geoZone44_ != null) {
/* 29603 */         size += 
/* 29604 */           CodedOutputStream.computeMessageSize(20860, (MessageLite)getGeoZone44());
/*       */       }
/* 29606 */       if (this.geoZone45_ != null) {
/* 29607 */         size += 
/* 29608 */           CodedOutputStream.computeMessageSize(20880, (MessageLite)getGeoZone45());
/*       */       }
/* 29610 */       if (this.geoZone46_ != null) {
/* 29611 */         size += 
/* 29612 */           CodedOutputStream.computeMessageSize(20900, (MessageLite)getGeoZone46());
/*       */       }
/* 29614 */       if (this.geoZone47_ != null) {
/* 29615 */         size += 
/* 29616 */           CodedOutputStream.computeMessageSize(20920, (MessageLite)getGeoZone47());
/*       */       }
/* 29618 */       if (this.geoZone48_ != null) {
/* 29619 */         size += 
/* 29620 */           CodedOutputStream.computeMessageSize(20940, (MessageLite)getGeoZone48());
/*       */       }
/* 29622 */       if (this.geoZone49_ != null) {
/* 29623 */         size += 
/* 29624 */           CodedOutputStream.computeMessageSize(20960, (MessageLite)getGeoZone49());
/*       */       }
/* 29626 */       if (this.geoZone50_ != null) {
/* 29627 */         size += 
/* 29628 */           CodedOutputStream.computeMessageSize(20980, (MessageLite)getGeoZone50());
/*       */       }
/* 29630 */       if (this.tripStartSpeed_ != 0) {
/* 29631 */         size += 
/* 29632 */           CodedOutputStream.computeUInt32Size(28000, this.tripStartSpeed_);
/*       */       }
/* 29634 */       if (this.tripUseIgnition_) {
/* 29635 */         size += 
/* 29636 */           CodedOutputStream.computeBoolSize(28001, this.tripUseIgnition_);
/*       */       }
/* 29638 */       if (this.tripParkDetectionTimeout_ != 0) {
/* 29639 */         size += 
/* 29640 */           CodedOutputStream.computeUInt32Size(28002, this.tripParkDetectionTimeout_);
/*       */       }
/* 29642 */       if (this.overspeedingEnable_) {
/* 29643 */         size += 
/* 29644 */           CodedOutputStream.computeBoolSize(28100, this.overspeedingEnable_);
/*       */       }
/* 29646 */       if (this.overspeedingLimit_ != 0) {
/* 29647 */         size += 
/* 29648 */           CodedOutputStream.computeUInt32Size(28101, this.overspeedingLimit_);
/*       */       }
/* 29650 */       if (this.overspeedingActivationSpeed_ != 0) {
/* 29651 */         size += 
/* 29652 */           CodedOutputStream.computeUInt32Size(28102, this.overspeedingActivationSpeed_);
/*       */       }
/* 29654 */       if (this.overspeedingDeactivationMode_ != DolphinConfig.OverSpeedingDeactivationMode.OverSpeedingDeactivationMode_Timeout.getNumber()) {
/* 29655 */         size += 
/* 29656 */           CodedOutputStream.computeEnumSize(28103, this.overspeedingDeactivationMode_);
/*       */       }
/* 29658 */       if (this.overspeedingDeactivationValue_ != 0) {
/* 29659 */         size += 
/* 29660 */           CodedOutputStream.computeUInt32Size(28104, this.overspeedingDeactivationValue_);
/*       */       }
/* 29662 */       if (this.uSSDEnabled_) {
/* 29663 */         size += 
/* 29664 */           CodedOutputStream.computeBoolSize(28140, this.uSSDEnabled_);
/*       */       }
/* 29666 */       if (this.uSSDID_ != 0) {
/* 29667 */         size += 
/* 29668 */           CodedOutputStream.computeUInt32Size(28141, this.uSSDID_);
/*       */       }
/* 29670 */       if (this.uSSDInterval_ != 0) {
/* 29671 */         size += 
/* 29672 */           CodedOutputStream.computeUInt32Size(28142, this.uSSDInterval_);
/*       */       }
/* 29674 */       if (!getUSSDCodeBytes().isEmpty()) {
/* 29675 */         size += GeneratedMessageV3.computeStringSize(28143, this.uSSDCode_);
/*       */       }
/* 29677 */       if (this.speedSensorKmPulseCount_ != 0) {
/* 29678 */         size += 
/* 29679 */           CodedOutputStream.computeUInt32Size(28150, this.speedSensorKmPulseCount_);
/*       */       }
/* 29681 */       if (this.crashDetectionEnabled_) {
/* 29682 */         size += 
/* 29683 */           CodedOutputStream.computeBoolSize(28200, this.crashDetectionEnabled_);
/*       */       }
/* 29685 */       if (this.crashDetectionLevel1Threshold_ != 0) {
/* 29686 */         size += 
/* 29687 */           CodedOutputStream.computeUInt32Size(28201, this.crashDetectionLevel1Threshold_);
/*       */       }
/* 29689 */       if (this.crashDetectionLevel2Threshold_ != 0) {
/* 29690 */         size += 
/* 29691 */           CodedOutputStream.computeUInt32Size(28202, this.crashDetectionLevel2Threshold_);
/*       */       }
/* 29693 */       if (this.crashDetectionLevel3Threshold_ != 0) {
/* 29694 */         size += 
/* 29695 */           CodedOutputStream.computeUInt32Size(28203, this.crashDetectionLevel3Threshold_);
/*       */       }
/* 29697 */       if (this.crashDetectionTrace_ != DolphinConfig.CrashTraceType.Trace_Disabled.getNumber()) {
/* 29698 */         size += 
/* 29699 */           CodedOutputStream.computeEnumSize(28205, this.crashDetectionTrace_);
/*       */       }
/* 29701 */       if (this.crashDetectionDuration_ != 0) {
/* 29702 */         size += 
/* 29703 */           CodedOutputStream.computeUInt32Size(28210, this.crashDetectionDuration_);
/*       */       }
/* 29705 */       if (this.crashDetectionSendSMSTo_ != 0) {
/* 29706 */         size += 
/* 29707 */           CodedOutputStream.computeUInt32Size(28220, this.crashDetectionSendSMSTo_);
/*       */       }
/* 29709 */       if (!getCrashDetectionSMSTextBytes().isEmpty()) {
/* 29710 */         size += GeneratedMessageV3.computeStringSize(28221, this.crashDetectionSMSText_);
/*       */       }
/* 29712 */       if (this.crashDetectionCallTo_ != 0) {
/* 29713 */         size += 
/* 29714 */           CodedOutputStream.computeUInt32Size(28225, this.crashDetectionCallTo_);
/*       */       }
/* 29716 */       if (this.rolloverDetectionEnabled_) {
/* 29717 */         size += 
/* 29718 */           CodedOutputStream.computeBoolSize(28230, this.rolloverDetectionEnabled_);
/*       */       }
/* 29720 */       if (this.driverRegistrationMode_ != DolphinConfig.DriverRegistration_Mode.DRMode_Disabled.getNumber()) {
/* 29721 */         size += 
/* 29722 */           CodedOutputStream.computeEnumSize(29000, this.driverRegistrationMode_);
/*       */       }
/* 29724 */       if (this.driverRegistrationAuthentication_ != DolphinConfig.DriverRegistration_Authentication.DRAuth_UnAuthorized.getNumber()) {
/* 29725 */         size += 
/* 29726 */           CodedOutputStream.computeEnumSize(29001, this.driverRegistrationAuthentication_);
/*       */       }
/* 29728 */       if (this.driverRegistrationDeregistrationTimeout_ != 0) {
/* 29729 */         size += 
/* 29730 */           CodedOutputStream.computeUInt32Size(29002, this.driverRegistrationDeregistrationTimeout_);
/*       */       }
/* 29732 */       if (this.driverRegistrationBuzzerDigitalOutput_ != DolphinConfig.DigitalOutputName.DigitalOutput_None.getNumber()) {
/* 29733 */         size += 
/* 29734 */           CodedOutputStream.computeEnumSize(29010, this.driverRegistrationBuzzerDigitalOutput_);
/*       */       }
/* 29736 */       if (this.driverRegistrationImmobilizerDigitalOutput_ != DolphinConfig.DigitalOutputName.DigitalOutput_None.getNumber()) {
/* 29737 */         size += 
/* 29738 */           CodedOutputStream.computeEnumSize(29011, this.driverRegistrationImmobilizerDigitalOutput_);
/*       */       }
/* 29740 */       if (this.driverRegistrationImmobilizerActiveLow_) {
/* 29741 */         size += 
/* 29742 */           CodedOutputStream.computeBoolSize(29012, this.driverRegistrationImmobilizerActiveLow_);
/*       */       }
/* 29744 */       if (this.driverRegistrationAuthorizedID1_ != 0L) {
/* 29745 */         size += 
/* 29746 */           CodedOutputStream.computeUInt64Size(29100, this.driverRegistrationAuthorizedID1_);
/*       */       }
/* 29748 */       if (this.driverRegistrationAuthorizedID2_ != 0L) {
/* 29749 */         size += 
/* 29750 */           CodedOutputStream.computeUInt64Size(29101, this.driverRegistrationAuthorizedID2_);
/*       */       }
/* 29752 */       if (this.driverRegistrationAuthorizedID3_ != 0L) {
/* 29753 */         size += 
/* 29754 */           CodedOutputStream.computeUInt64Size(29102, this.driverRegistrationAuthorizedID3_);
/*       */       }
/* 29756 */       if (this.driverRegistrationAuthorizedID4_ != 0L) {
/* 29757 */         size += 
/* 29758 */           CodedOutputStream.computeUInt64Size(29103, this.driverRegistrationAuthorizedID4_);
/*       */       }
/* 29760 */       if (this.driverRegistrationAuthorizedID5_ != 0L) {
/* 29761 */         size += 
/* 29762 */           CodedOutputStream.computeUInt64Size(29104, this.driverRegistrationAuthorizedID5_);
/*       */       }
/* 29764 */       if (this.driverRegistrationAuthorizedID6_ != 0L) {
/* 29765 */         size += 
/* 29766 */           CodedOutputStream.computeUInt64Size(29105, this.driverRegistrationAuthorizedID6_);
/*       */       }
/* 29768 */       if (this.driverRegistrationAuthorizedID7_ != 0L) {
/* 29769 */         size += 
/* 29770 */           CodedOutputStream.computeUInt64Size(29106, this.driverRegistrationAuthorizedID7_);
/*       */       }
/* 29772 */       if (this.driverRegistrationAuthorizedID8_ != 0L) {
/* 29773 */         size += 
/* 29774 */           CodedOutputStream.computeUInt64Size(29107, this.driverRegistrationAuthorizedID8_);
/*       */       }
/* 29776 */       if (this.driverRegistrationAuthorizedID9_ != 0L) {
/* 29777 */         size += 
/* 29778 */           CodedOutputStream.computeUInt64Size(29108, this.driverRegistrationAuthorizedID9_);
/*       */       }
/* 29780 */       if (this.driverRegistrationAuthorizedID10_ != 0L) {
/* 29781 */         size += 
/* 29782 */           CodedOutputStream.computeUInt64Size(29109, this.driverRegistrationAuthorizedID10_);
/*       */       }
/* 29784 */       if (this.eCODriveActive_) {
/* 29785 */         size += 
/* 29786 */           CodedOutputStream.computeBoolSize(30000, this.eCODriveActive_);
/*       */       }
/* 29788 */       if (this.eCOOverSpeedingLimit_ != 0) {
/* 29789 */         size += 
/* 29790 */           CodedOutputStream.computeUInt32Size(30001, this.eCOOverSpeedingLimit_);
/*       */       }
/* 29792 */       if (this.eCORPMGreenBandLowLimit_ != 0) {
/* 29793 */         size += 
/* 29794 */           CodedOutputStream.computeUInt32Size(30002, this.eCORPMGreenBandLowLimit_);
/*       */       }
/* 29796 */       if (this.eCORPMGreenBandHighLimit_ != 0) {
/* 29797 */         size += 
/* 29798 */           CodedOutputStream.computeUInt32Size(30003, this.eCORPMGreenBandHighLimit_);
/*       */       }
/* 29800 */       if (this.eCOHarshBreakingLimit_ != 0) {
/* 29801 */         size += 
/* 29802 */           CodedOutputStream.computeUInt32Size(30004, this.eCOHarshBreakingLimit_);
/*       */       }
/* 29804 */       if (this.eCOExtremeBreakingLimit_ != 0) {
/* 29805 */         size += 
/* 29806 */           CodedOutputStream.computeUInt32Size(30005, this.eCOExtremeBreakingLimit_);
/*       */       }
/* 29808 */       if (this.eCOHarshAccelerationLimit_ != 0) {
/* 29809 */         size += 
/* 29810 */           CodedOutputStream.computeUInt32Size(30006, this.eCOHarshAccelerationLimit_);
/*       */       }
/* 29812 */       if (this.eCOCorneringLimit_ != 0) {
/* 29813 */         size += 
/* 29814 */           CodedOutputStream.computeUInt32Size(30007, this.eCOCorneringLimit_);
/*       */       }
/* 29816 */       if (this.eCOIdlingDelay_ != 0) {
/* 29817 */         size += 
/* 29818 */           CodedOutputStream.computeUInt32Size(30008, this.eCOIdlingDelay_);
/*       */       }
/* 29820 */       if (this.eCOIdlingSpeed_ != 0) {
/* 29821 */         size += 
/* 29822 */           CodedOutputStream.computeUInt32Size(30009, this.eCOIdlingSpeed_);
/*       */       }
/* 29824 */       if (this.eCOCruiseControlSpeed_ != 0) {
/* 29825 */         size += 
/* 29826 */           CodedOutputStream.computeUInt32Size(30010, this.eCOCruiseControlSpeed_);
/*       */       }
/* 29828 */       if (this.eCOCalculateOnlyWhenEngineOn_) {
/* 29829 */         size += 
/* 29830 */           CodedOutputStream.computeBoolSize(30020, this.eCOCalculateOnlyWhenEngineOn_);
/*       */       }
/* 29832 */       if (this.eCOCustomEngineSource_) {
/* 29833 */         size += 
/* 29834 */           CodedOutputStream.computeBoolSize(30021, this.eCOCustomEngineSource_);
/*       */       }
/* 29836 */       if (this.eCOEngineOnDIN1_) {
/* 29837 */         size += 
/* 29838 */           CodedOutputStream.computeBoolSize(30022, this.eCOEngineOnDIN1_);
/*       */       }
/* 29840 */       if (this.eCOEngineOnDIN2_) {
/* 29841 */         size += 
/* 29842 */           CodedOutputStream.computeBoolSize(30023, this.eCOEngineOnDIN2_);
/*       */       }
/* 29844 */       if (this.eCOEngineOnMovementSensor_) {
/* 29845 */         size += 
/* 29846 */           CodedOutputStream.computeBoolSize(30024, this.eCOEngineOnMovementSensor_);
/*       */       }
/* 29848 */       if (this.eCOEngineOnPowerSupplyAvailable_) {
/* 29849 */         size += 
/* 29850 */           CodedOutputStream.computeBoolSize(30025, this.eCOEngineOnPowerSupplyAvailable_);
/*       */       }
/* 29852 */       if (this.eCOEngineOnCanRPMLow_ != 0) {
/* 29853 */         size += 
/* 29854 */           CodedOutputStream.computeUInt32Size(30026, this.eCOEngineOnCanRPMLow_);
/*       */       }
/* 29856 */       if (this.eCOEngineOnCanRPMHigh_ != 0) {
/* 29857 */         size += 
/* 29858 */           CodedOutputStream.computeUInt32Size(30027, this.eCOEngineOnCanRPMHigh_);
/*       */       }
/* 29860 */       if (this.eCOEngineOnOperator_ != DolphinConfig.ConditionOperator.AND.getNumber()) {
/* 29861 */         size += 
/* 29862 */           CodedOutputStream.computeEnumSize(30028, this.eCOEngineOnOperator_);
/*       */       }
/* 29864 */       if (this.eCOEngineOnExternalVoltage_ != 0) {
/* 29865 */         size += 
/* 29866 */           CodedOutputStream.computeUInt32Size(30029, this.eCOEngineOnExternalVoltage_);
/*       */       }
/* 29868 */       if (this.eCUInterface_ != DolphinConfig.ECUInterface.ECU_Disabled.getNumber()) {
/* 29869 */         size += 
/* 29870 */           CodedOutputStream.computeEnumSize(30100, this.eCUInterface_);
/*       */       }
/* 29872 */       if (this.fuelConsumptionEnabled_ != DolphinConfig.FuelConsumption.FC_Disabled.getNumber()) {
/* 29873 */         size += 
/* 29874 */           CodedOutputStream.computeEnumSize(30150, this.fuelConsumptionEnabled_);
/*       */       }
/* 29876 */       if (this.fuelConsumptionEngineDisplacement_ != 0) {
/* 29877 */         size += 
/* 29878 */           CodedOutputStream.computeUInt32Size(30151, this.fuelConsumptionEngineDisplacement_);
/*       */       }
/* 29880 */       if (this.fuelConsumptionCylinders_ != 0) {
/* 29881 */         size += 
/* 29882 */           CodedOutputStream.computeUInt32Size(30152, this.fuelConsumptionCylinders_);
/*       */       }
/* 29884 */       if (this.fuelConsumptionInjectorPerformance_ != 0) {
/* 29885 */         size += 
/* 29886 */           CodedOutputStream.computeUInt32Size(30153, this.fuelConsumptionInjectorPerformance_);
/*       */       }
/* 29888 */       if (this.fuelConsumptionVolumetricEfficiently_ != 0) {
/* 29889 */         size += 
/* 29890 */           CodedOutputStream.computeUInt32Size(30154, this.fuelConsumptionVolumetricEfficiently_);
/*       */       }
/* 29892 */       if (this.faultCodesReadTime_ != 0) {
/* 29893 */         size += 
/* 29894 */           CodedOutputStream.computeUInt32Size(30200, this.faultCodesReadTime_);
/*       */       }
/* 29896 */       if (this.sIPAADLinkTimeout_ != 0) {
/* 29897 */         size += 
/* 29898 */           CodedOutputStream.computeUInt32Size(30500, this.sIPAADLinkTimeout_);
/*       */       }
/* 29900 */       if (this.sIPAADResponseTimeout_ != 0) {
/* 29901 */         size += 
/* 29902 */           CodedOutputStream.computeUInt32Size(30501, this.sIPAADResponseTimeout_);
/*       */       }
/* 29904 */       if (!getSIPAADServerAddressBytes().isEmpty()) {
/* 29905 */         size += GeneratedMessageV3.computeStringSize(30502, this.sIPAADServerAddress_);
/*       */       }
/* 29907 */       if (this.sIPAADServerPort_ != 0) {
/* 29908 */         size += 
/* 29909 */           CodedOutputStream.computeUInt32Size(30503, this.sIPAADServerPort_);
/*       */       }
/* 29911 */       if (this.sIPAADServerProtocol_ != DolphinConfig.ServerProtocol.TCP.getNumber()) {
/* 29912 */         size += 
/* 29913 */           CodedOutputStream.computeEnumSize(30504, this.sIPAADServerProtocol_);
/*       */       }
/* 29915 */       if (this.sIPAADSSLClientAuthentication_) {
/* 29916 */         size += 
/* 29917 */           CodedOutputStream.computeBoolSize(30505, this.sIPAADSSLClientAuthentication_);
/*       */       }
/* 29919 */       if (this.iOTime_ != null) {
/* 29920 */         size += 
/* 29921 */           CodedOutputStream.computeMessageSize(50003, (MessageLite)getIOTime());
/*       */       }
/* 29923 */       if (this.iOAngle_ != null) {
/* 29924 */         size += 
/* 29925 */           CodedOutputStream.computeMessageSize(50004, (MessageLite)getIOAngle());
/*       */       }
/* 29927 */       if (this.iOSpeed_ != null) {
/* 29928 */         size += 
/* 29929 */           CodedOutputStream.computeMessageSize(50005, (MessageLite)getIOSpeed());
/*       */       }
/* 29931 */       if (this.iOSleepMode_ != null) {
/* 29932 */         size += 
/* 29933 */           CodedOutputStream.computeMessageSize(50008, (MessageLite)getIOSleepMode());
/*       */       }
/* 29935 */       if (this.iOIgnition_ != null) {
/* 29936 */         size += 
/* 29937 */           CodedOutputStream.computeMessageSize(50010, (MessageLite)getIOIgnition());
/*       */       }
/* 29939 */       if (this.iOMovement_ != null) {
/* 29940 */         size += 
/* 29941 */           CodedOutputStream.computeMessageSize(50011, (MessageLite)getIOMovement());
/*       */       }
/* 29943 */       if (this.iODataMode_ != null) {
/* 29944 */         size += 
/* 29945 */           CodedOutputStream.computeMessageSize(50012, (MessageLite)getIODataMode());
/*       */       }
/* 29947 */       if (this.iOGnssStatus_ != null) {
/* 29948 */         size += 
/* 29949 */           CodedOutputStream.computeMessageSize(50020, (MessageLite)getIOGnssStatus());
/*       */       }
/* 29951 */       if (this.iOGnssHDOP_ != null) {
/* 29952 */         size += 
/* 29953 */           CodedOutputStream.computeMessageSize(50021, (MessageLite)getIOGnssHDOP());
/*       */       }
/* 29955 */       if (this.iOGnssPDOP_ != null) {
/* 29956 */         size += 
/* 29957 */           CodedOutputStream.computeMessageSize(50022, (MessageLite)getIOGnssPDOP());
/*       */       }
/* 29959 */       if (this.iOGnssJammingStatus_ != null) {
/* 29960 */         size += 
/* 29961 */           CodedOutputStream.computeMessageSize(50023, (MessageLite)getIOGnssJammingStatus());
/*       */       }
/* 29963 */       if (this.iOGsmSignal_ != null) {
/* 29964 */         size += 
/* 29965 */           CodedOutputStream.computeMessageSize(50030, (MessageLite)getIOGsmSignal());
/*       */       }
/* 29967 */       if (this.iOGsmCellId_ != null) {
/* 29968 */         size += 
/* 29969 */           CodedOutputStream.computeMessageSize(50031, (MessageLite)getIOGsmCellId());
/*       */       }
/* 29971 */       if (this.iOGsmAreaCode_ != null) {
/* 29972 */         size += 
/* 29973 */           CodedOutputStream.computeMessageSize(50032, (MessageLite)getIOGsmAreaCode());
/*       */       }
/* 29975 */       if (this.iOGsmOperator_ != null) {
/* 29976 */         size += 
/* 29977 */           CodedOutputStream.computeMessageSize(50033, (MessageLite)getIOGsmOperator());
/*       */       }
/* 29979 */       if (this.iOGsmTemperature_ != null) {
/* 29980 */         size += 
/* 29981 */           CodedOutputStream.computeMessageSize(50034, (MessageLite)getIOGsmTemperature());
/*       */       }
/* 29983 */       if (this.iOGsmJammingStatus_ != null) {
/* 29984 */         size += 
/* 29985 */           CodedOutputStream.computeMessageSize(50035, (MessageLite)getIOGsmJammingStatus());
/*       */       }
/* 29987 */       if (this.iOExternalVoltage_ != null) {
/* 29988 */         size += 
/* 29989 */           CodedOutputStream.computeMessageSize(50040, (MessageLite)getIOExternalVoltage());
/*       */       }
/* 29991 */       if (this.iOBatteryVoltage_ != null) {
/* 29992 */         size += 
/* 29993 */           CodedOutputStream.computeMessageSize(50041, (MessageLite)getIOBatteryVoltage());
/*       */       }
/* 29995 */       if (this.iOBatteryCurrent_ != null) {
/* 29996 */         size += 
/* 29997 */           CodedOutputStream.computeMessageSize(50042, (MessageLite)getIOBatteryCurrent());
/*       */       }
/* 29999 */       if (this.iOTotalOdometer_ != null) {
/* 30000 */         size += 
/* 30001 */           CodedOutputStream.computeMessageSize(50050, (MessageLite)getIOTotalOdometer());
/*       */       }
/* 30003 */       if (this.iOOdometer_ != null) {
/* 30004 */         size += 
/* 30005 */           CodedOutputStream.computeMessageSize(50051, (MessageLite)getIOOdometer());
/*       */       }
/* 30007 */       if (this.iOEngineOnTime_ != null) {
/* 30008 */         size += 
/* 30009 */           CodedOutputStream.computeMessageSize(50052, (MessageLite)getIOEngineOnTime());
/*       */       }
/* 30011 */       if (this.iOEngineOnTimeDelta_ != null) {
/* 30012 */         size += 
/* 30013 */           CodedOutputStream.computeMessageSize(50053, (MessageLite)getIOEngineOnTimeDelta());
/*       */       }
/* 30015 */       if (this.iOIdlingTime_ != null) {
/* 30016 */         size += 
/* 30017 */           CodedOutputStream.computeMessageSize(50054, (MessageLite)getIOIdlingTime());
/*       */       }
/* 30019 */       if (this.iOIdlingTimeDelta_ != null) {
/* 30020 */         size += 
/* 30021 */           CodedOutputStream.computeMessageSize(50055, (MessageLite)getIOIdlingTimeDelta());
/*       */       }
/* 30023 */       if (this.iOSpeedSensorSpeed_ != null) {
/* 30024 */         size += 
/* 30025 */           CodedOutputStream.computeMessageSize(50060, (MessageLite)getIOSpeedSensorSpeed());
/*       */       }
/* 30027 */       if (this.iOSpeedSensorDistance_ != null) {
/* 30028 */         size += 
/* 30029 */           CodedOutputStream.computeMessageSize(50061, (MessageLite)getIOSpeedSensorDistance());
/*       */       }
/* 30031 */       if (this.iOSpeedSensorTotalDistance_ != null) {
/* 30032 */         size += 
/* 30033 */           CodedOutputStream.computeMessageSize(50062, (MessageLite)getIOSpeedSensorTotalDistance());
/*       */       }
/* 30035 */       if (this.iOSpeedSensorMaxSpeed_ != null) {
/* 30036 */         size += 
/* 30037 */           CodedOutputStream.computeMessageSize(50063, (MessageLite)getIOSpeedSensorMaxSpeed());
/*       */       }
/* 30039 */       if (this.iOSpeedSensorGPSSpeedDiff_ != null) {
/* 30040 */         size += 
/* 30041 */           CodedOutputStream.computeMessageSize(50064, (MessageLite)getIOSpeedSensorGPSSpeedDiff());
/*       */       }
/* 30043 */       if (this.iODigitalInput1_ != null) {
/* 30044 */         size += 
/* 30045 */           CodedOutputStream.computeMessageSize(50070, (MessageLite)getIODigitalInput1());
/*       */       }
/* 30047 */       if (this.iODigitalInput2_ != null) {
/* 30048 */         size += 
/* 30049 */           CodedOutputStream.computeMessageSize(50071, (MessageLite)getIODigitalInput2());
/*       */       }
/* 30051 */       if (this.iOPowerSupply_ != null) {
/* 30052 */         size += 
/* 30053 */           CodedOutputStream.computeMessageSize(50072, (MessageLite)getIOPowerSupply());
/*       */       }
/* 30055 */       if (this.iODigitalInput3_ != null) {
/* 30056 */         size += 
/* 30057 */           CodedOutputStream.computeMessageSize(50073, (MessageLite)getIODigitalInput3());
/*       */       }
/* 30059 */       if (this.iOVehicleConnection_ != null) {
/* 30060 */         size += 
/* 30061 */           CodedOutputStream.computeMessageSize(50079, (MessageLite)getIOVehicleConnection());
/*       */       }
/* 30063 */       if (this.iODigitalInput1Time_ != null) {
/* 30064 */         size += 
/* 30065 */           CodedOutputStream.computeMessageSize(50080, (MessageLite)getIODigitalInput1Time());
/*       */       }
/* 30067 */       if (this.iODigitalInput1TimeDelta_ != null) {
/* 30068 */         size += 
/* 30069 */           CodedOutputStream.computeMessageSize(50081, (MessageLite)getIODigitalInput1TimeDelta());
/*       */       }
/* 30071 */       if (this.iODigitalInput2Time_ != null) {
/* 30072 */         size += 
/* 30073 */           CodedOutputStream.computeMessageSize(50082, (MessageLite)getIODigitalInput2Time());
/*       */       }
/* 30075 */       if (this.iODigitalInput2TimeDelta_ != null) {
/* 30076 */         size += 
/* 30077 */           CodedOutputStream.computeMessageSize(50083, (MessageLite)getIODigitalInput2TimeDelta());
/*       */       }
/* 30079 */       if (this.iOPowerSupplyTime_ != null) {
/* 30080 */         size += 
/* 30081 */           CodedOutputStream.computeMessageSize(50084, (MessageLite)getIOPowerSupplyTime());
/*       */       }
/* 30083 */       if (this.iOPowerSupplyTimeDelta_ != null) {
/* 30084 */         size += 
/* 30085 */           CodedOutputStream.computeMessageSize(50085, (MessageLite)getIOPowerSupplyTimeDelta());
/*       */       }
/* 30087 */       if (this.iODigitalInput3Time_ != null) {
/* 30088 */         size += 
/* 30089 */           CodedOutputStream.computeMessageSize(50086, (MessageLite)getIODigitalInput3Time());
/*       */       }
/* 30091 */       if (this.iODigitalInput3TimeDelta_ != null) {
/* 30092 */         size += 
/* 30093 */           CodedOutputStream.computeMessageSize(50087, (MessageLite)getIODigitalInput3TimeDelta());
/*       */       }
/* 30095 */       if (this.iODigitalOutput1_ != null) {
/* 30096 */         size += 
/* 30097 */           CodedOutputStream.computeMessageSize(50090, (MessageLite)getIODigitalOutput1());
/*       */       }
/* 30099 */       if (this.iODigitalOutput2_ != null) {
/* 30100 */         size += 
/* 30101 */           CodedOutputStream.computeMessageSize(50091, (MessageLite)getIODigitalOutput2());
/*       */       }
/* 30103 */       if (this.iOAnalogInput1_ != null) {
/* 30104 */         size += 
/* 30105 */           CodedOutputStream.computeMessageSize(50100, (MessageLite)getIOAnalogInput1());
/*       */       }
/* 30107 */       if (this.iOAnalogInput2_ != null) {
/* 30108 */         size += 
/* 30109 */           CodedOutputStream.computeMessageSize(50101, (MessageLite)getIOAnalogInput2());
/*       */       }
/* 30111 */       if (this.iOAnalogInput3_ != null) {
/* 30112 */         size += 
/* 30113 */           CodedOutputStream.computeMessageSize(50102, (MessageLite)getIOAnalogInput3());
/*       */       }
/* 30115 */       if (this.iOAxisX_ != null) {
/* 30116 */         size += 
/* 30117 */           CodedOutputStream.computeMessageSize(50110, (MessageLite)getIOAxisX());
/*       */       }
/* 30119 */       if (this.iOAxisY_ != null) {
/* 30120 */         size += 
/* 30121 */           CodedOutputStream.computeMessageSize(50111, (MessageLite)getIOAxisY());
/*       */       }
/* 30123 */       if (this.iOAxisZ_ != null) {
/* 30124 */         size += 
/* 30125 */           CodedOutputStream.computeMessageSize(50112, (MessageLite)getIOAxisZ());
/*       */       }
/* 30127 */       if (this.iOECOMaxSpeed_ != null) {
/* 30128 */         size += 
/* 30129 */           CodedOutputStream.computeMessageSize(50150, (MessageLite)getIOECOMaxSpeed());
/*       */       }
/* 30131 */       if (this.iOECONormalSpeedDistance_ != null) {
/* 30132 */         size += 
/* 30133 */           CodedOutputStream.computeMessageSize(50151, (MessageLite)getIOECONormalSpeedDistance());
/*       */       }
/* 30135 */       if (this.iOECONormalSpeedTotalDistance_ != null) {
/* 30136 */         size += 
/* 30137 */           CodedOutputStream.computeMessageSize(50152, (MessageLite)getIOECONormalSpeedTotalDistance());
/*       */       }
/* 30139 */       if (this.iOECONormalSpeedTimer_ != null) {
/* 30140 */         size += 
/* 30141 */           CodedOutputStream.computeMessageSize(50153, (MessageLite)getIOECONormalSpeedTimer());
/*       */       }
/* 30143 */       if (this.iOECONormalSpeedTotalTimer_ != null) {
/* 30144 */         size += 
/* 30145 */           CodedOutputStream.computeMessageSize(50154, (MessageLite)getIOECONormalSpeedTotalTimer());
/*       */       }
/* 30147 */       if (this.iOECOOverSpeedingDistance_ != null) {
/* 30148 */         size += 
/* 30149 */           CodedOutputStream.computeMessageSize(50155, (MessageLite)getIOECOOverSpeedingDistance());
/*       */       }
/* 30151 */       if (this.iOECOOverSpeedingTotalDistance_ != null) {
/* 30152 */         size += 
/* 30153 */           CodedOutputStream.computeMessageSize(50156, (MessageLite)getIOECOOverSpeedingTotalDistance());
/*       */       }
/* 30155 */       if (this.iOECOOverSpeedingTimer_ != null) {
/* 30156 */         size += 
/* 30157 */           CodedOutputStream.computeMessageSize(50157, (MessageLite)getIOECOOverSpeedingTimer());
/*       */       }
/* 30159 */       if (this.iOECOOverSpeedingTotalTimer_ != null) {
/* 30160 */         size += 
/* 30161 */           CodedOutputStream.computeMessageSize(50158, (MessageLite)getIOECOOverSpeedingTotalTimer());
/*       */       }
/* 30163 */       if (this.iOECOMaxRPM_ != null) {
/* 30164 */         size += 
/* 30165 */           CodedOutputStream.computeMessageSize(50159, (MessageLite)getIOECOMaxRPM());
/*       */       }
/* 30167 */       if (this.iOECORPMGreenBandDistance_ != null) {
/* 30168 */         size += 
/* 30169 */           CodedOutputStream.computeMessageSize(50160, (MessageLite)getIOECORPMGreenBandDistance());
/*       */       }
/* 30171 */       if (this.iOECORPMGreenBandTotalDistance_ != null) {
/* 30172 */         size += 
/* 30173 */           CodedOutputStream.computeMessageSize(50161, (MessageLite)getIOECORPMGreenBandTotalDistance());
/*       */       }
/* 30175 */       if (this.iOECORPMGreenBandTimer_ != null) {
/* 30176 */         size += 
/* 30177 */           CodedOutputStream.computeMessageSize(50162, (MessageLite)getIOECORPMGreenBandTimer());
/*       */       }
/* 30179 */       if (this.iOECORPMGreenBandTotalTimer_ != null) {
/* 30180 */         size += 
/* 30181 */           CodedOutputStream.computeMessageSize(50163, (MessageLite)getIOECORPMGreenBandTotalTimer());
/*       */       }
/* 30183 */       if (this.iOECOOverRPMDistance_ != null) {
/* 30184 */         size += 
/* 30185 */           CodedOutputStream.computeMessageSize(50164, (MessageLite)getIOECOOverRPMDistance());
/*       */       }
/* 30187 */       if (this.iOECOOverRPMTotalDistance_ != null) {
/* 30188 */         size += 
/* 30189 */           CodedOutputStream.computeMessageSize(50165, (MessageLite)getIOECOOverRPMTotalDistance());
/*       */       }
/* 30191 */       if (this.iOECOOverRPMTimer_ != null) {
/* 30192 */         size += 
/* 30193 */           CodedOutputStream.computeMessageSize(50166, (MessageLite)getIOECOOverRPMTimer());
/*       */       }
/* 30195 */       if (this.iOECOOverRPMTotalTimer_ != null) {
/* 30196 */         size += 
/* 30197 */           CodedOutputStream.computeMessageSize(50167, (MessageLite)getIOECOOverRPMTotalTimer());
/*       */       }
/* 30199 */       if (this.iOECOIdlingEvent_ != null) {
/* 30200 */         size += 
/* 30201 */           CodedOutputStream.computeMessageSize(50170, (MessageLite)getIOECOIdlingEvent());
/*       */       }
/* 30203 */       if (this.iOECOCruiseControlTimer_ != null) {
/* 30204 */         size += 
/* 30205 */           CodedOutputStream.computeMessageSize(50171, (MessageLite)getIOECOCruiseControlTimer());
/*       */       }
/* 30207 */       if (this.iOECOCruiseControlTotalTimer_ != null) {
/* 30208 */         size += 
/* 30209 */           CodedOutputStream.computeMessageSize(50172, (MessageLite)getIOECOCruiseControlTotalTimer());
/*       */       }
/* 30211 */       if (this.iOECOCruiseControlDistance_ != null) {
/* 30212 */         size += 
/* 30213 */           CodedOutputStream.computeMessageSize(50173, (MessageLite)getIOECOCruiseControlDistance());
/*       */       }
/* 30215 */       if (this.iOECOCruiseControlTotalDistance_ != null) {
/* 30216 */         size += 
/* 30217 */           CodedOutputStream.computeMessageSize(50174, (MessageLite)getIOECOCruiseControlTotalDistance());
/*       */       }
/* 30219 */       if (this.iOECOUnderRPMDistance_ != null) {
/* 30220 */         size += 
/* 30221 */           CodedOutputStream.computeMessageSize(50175, (MessageLite)getIOECOUnderRPMDistance());
/*       */       }
/* 30223 */       if (this.iOECOUnderRPMTotalDistance_ != null) {
/* 30224 */         size += 
/* 30225 */           CodedOutputStream.computeMessageSize(50176, (MessageLite)getIOECOUnderRPMTotalDistance());
/*       */       }
/* 30227 */       if (this.iOECOUnderRPMTimer_ != null) {
/* 30228 */         size += 
/* 30229 */           CodedOutputStream.computeMessageSize(50177, (MessageLite)getIOECOUnderRPMTimer());
/*       */       }
/* 30231 */       if (this.iOECOUnderRPMTotalTimer_ != null) {
/* 30232 */         size += 
/* 30233 */           CodedOutputStream.computeMessageSize(50178, (MessageLite)getIOECOUnderRPMTotalTimer());
/*       */       }
/* 30235 */       if (this.iOECOBreakCounter_ != null) {
/* 30236 */         size += 
/* 30237 */           CodedOutputStream.computeMessageSize(50180, (MessageLite)getIOECOBreakCounter());
/*       */       }
/* 30239 */       if (this.iOECOHarshBreakCounter_ != null) {
/* 30240 */         size += 
/* 30241 */           CodedOutputStream.computeMessageSize(50181, (MessageLite)getIOECOHarshBreakCounter());
/*       */       }
/* 30243 */       if (this.iOECOExtremeBreakCounter_ != null) {
/* 30244 */         size += 
/* 30245 */           CodedOutputStream.computeMessageSize(50182, (MessageLite)getIOECOExtremeBreakCounter());
/*       */       }
/* 30247 */       if (this.iOECOHarshAccelerationCounter_ != null) {
/* 30248 */         size += 
/* 30249 */           CodedOutputStream.computeMessageSize(50183, (MessageLite)getIOECOHarshAccelerationCounter());
/*       */       }
/* 30251 */       if (this.iOECOCorneringCounter_ != null) {
/* 30252 */         size += 
/* 30253 */           CodedOutputStream.computeMessageSize(50184, (MessageLite)getIOECOCorneringCounter());
/*       */       }
/* 30255 */       if (this.iOECOTotalBreak_ != null) {
/* 30256 */         size += 
/* 30257 */           CodedOutputStream.computeMessageSize(50185, (MessageLite)getIOECOTotalBreak());
/*       */       }
/* 30259 */       if (this.iOECOTotalHarshBreak_ != null) {
/* 30260 */         size += 
/* 30261 */           CodedOutputStream.computeMessageSize(50186, (MessageLite)getIOECOTotalHarshBreak());
/*       */       }
/* 30263 */       if (this.iOECOTotalExtremeBreak_ != null) {
/* 30264 */         size += 
/* 30265 */           CodedOutputStream.computeMessageSize(50187, (MessageLite)getIOECOTotalExtremeBreak());
/*       */       }
/* 30267 */       if (this.iOECOTotalHarshAcceleration_ != null) {
/* 30268 */         size += 
/* 30269 */           CodedOutputStream.computeMessageSize(50188, (MessageLite)getIOECOTotalHarshAcceleration());
/*       */       }
/* 30271 */       if (this.iOECOTotalCornering_ != null) {
/* 30272 */         size += 
/* 30273 */           CodedOutputStream.computeMessageSize(50189, (MessageLite)getIOECOTotalCornering());
/*       */       }
/* 30275 */       if (this.iOTrip_ != null) {
/* 30276 */         size += 
/* 30277 */           CodedOutputStream.computeMessageSize(50300, (MessageLite)getIOTrip());
/*       */       }
/* 30279 */       if (this.iOTripTime_ != null) {
/* 30280 */         size += 
/* 30281 */           CodedOutputStream.computeMessageSize(50301, (MessageLite)getIOTripTime());
/*       */       }
/* 30283 */       if (this.iOTripDistance_ != null) {
/* 30284 */         size += 
/* 30285 */           CodedOutputStream.computeMessageSize(50302, (MessageLite)getIOTripDistance());
/*       */       }
/* 30287 */       if (this.iODriverID_ != null) {
/* 30288 */         size += 
/* 30289 */           CodedOutputStream.computeMessageSize(50350, (MessageLite)getIODriverID());
/*       */       }
/* 30291 */       if (this.iOTemperatureSensor1_ != null) {
/* 30292 */         size += 
/* 30293 */           CodedOutputStream.computeMessageSize(50400, (MessageLite)getIOTemperatureSensor1());
/*       */       }
/* 30295 */       if (this.iOTemperatureSensor1ID_ != null) {
/* 30296 */         size += 
/* 30297 */           CodedOutputStream.computeMessageSize(50401, (MessageLite)getIOTemperatureSensor1ID());
/*       */       }
/* 30299 */       if (this.iOTemperatureSensor2_ != null) {
/* 30300 */         size += 
/* 30301 */           CodedOutputStream.computeMessageSize(50402, (MessageLite)getIOTemperatureSensor2());
/*       */       }
/* 30303 */       if (this.iOTemperatureSensor2ID_ != null) {
/* 30304 */         size += 
/* 30305 */           CodedOutputStream.computeMessageSize(50403, (MessageLite)getIOTemperatureSensor2ID());
/*       */       }
/* 30307 */       if (this.iOTemperatureSensor3_ != null) {
/* 30308 */         size += 
/* 30309 */           CodedOutputStream.computeMessageSize(50404, (MessageLite)getIOTemperatureSensor3());
/*       */       }
/* 30311 */       if (this.iOTemperatureSensor3ID_ != null) {
/* 30312 */         size += 
/* 30313 */           CodedOutputStream.computeMessageSize(50405, (MessageLite)getIOTemperatureSensor3ID());
/*       */       }
/* 30315 */       if (this.iOHumiditySensor1_ != null) {
/* 30316 */         size += 
/* 30317 */           CodedOutputStream.computeMessageSize(50410, (MessageLite)getIOHumiditySensor1());
/*       */       }
/* 30319 */       if (this.iOTiltStatus_ != null) {
/* 30320 */         size += 
/* 30321 */           CodedOutputStream.computeMessageSize(50490, (MessageLite)getIOTiltStatus());
/*       */       }
/* 30323 */       if (this.iOOBDEngineRPM_ != null) {
/* 30324 */         size += 
/* 30325 */           CodedOutputStream.computeMessageSize(50500, (MessageLite)getIOOBDEngineRPM());
/*       */       }
/* 30327 */       if (this.iOOBDBatteryVoltage_ != null) {
/* 30328 */         size += 
/* 30329 */           CodedOutputStream.computeMessageSize(50501, (MessageLite)getIOOBDBatteryVoltage());
/*       */       }
/* 30331 */       if (this.iOOBDEngineCoolantTemperature_ != null) {
/* 30332 */         size += 
/* 30333 */           CodedOutputStream.computeMessageSize(50502, (MessageLite)getIOOBDEngineCoolantTemperature());
/*       */       }
/* 30335 */       if (this.iOOBDVehicleSpeed_ != null) {
/* 30336 */         size += 
/* 30337 */           CodedOutputStream.computeMessageSize(50503, (MessageLite)getIOOBDVehicleSpeed());
/*       */       }
/* 30339 */       if (this.iOOBDTotalDistance_ != null) {
/* 30340 */         size += 
/* 30341 */           CodedOutputStream.computeMessageSize(50504, (MessageLite)getIOOBDTotalDistance());
/*       */       }
/* 30343 */       if (this.iOOBDFuelRate_ != null) {
/* 30344 */         size += 
/* 30345 */           CodedOutputStream.computeMessageSize(50505, (MessageLite)getIOOBDFuelRate());
/*       */       }
/* 30347 */       if (this.iOOBDTotalFuelUsed_ != null) {
/* 30348 */         size += 
/* 30349 */           CodedOutputStream.computeMessageSize(50506, (MessageLite)getIOOBDTotalFuelUsed());
/*       */       }
/* 30351 */       if (this.iOOBDIntakeAirTemperature_ != null) {
/* 30352 */         size += 
/* 30353 */           CodedOutputStream.computeMessageSize(50507, (MessageLite)getIOOBDIntakeAirTemperature());
/*       */       }
/* 30355 */       if (this.iOOBDIntakeManifoldAbsolutePressure_ != null) {
/* 30356 */         size += 
/* 30357 */           CodedOutputStream.computeMessageSize(50508, (MessageLite)getIOOBDIntakeManifoldAbsolutePressure());
/*       */       }
/* 30359 */       if (this.iOOBDMalfunctionIndicatorLamp_ != null) {
/* 30360 */         size += 
/* 30361 */           CodedOutputStream.computeMessageSize(50550, (MessageLite)getIOOBDMalfunctionIndicatorLamp());
/*       */       }
/* 30363 */       if (this.iODiagnosticTroubleCodesCount_ != null) {
/* 30364 */         size += 
/* 30365 */           CodedOutputStream.computeMessageSize(50551, (MessageLite)getIODiagnosticTroubleCodesCount());
/*       */       }
/* 30367 */       if (this.iOOBDCalculatedEngineLoad_ != null) {
/* 30368 */         size += 
/* 30369 */           CodedOutputStream.computeMessageSize(50552, (MessageLite)getIOOBDCalculatedEngineLoad());
/*       */       }
/* 30371 */       if (this.iOOBDMassAirFlowRate_ != null) {
/* 30372 */         size += 
/* 30373 */           CodedOutputStream.computeMessageSize(50553, (MessageLite)getIOOBDMassAirFlowRate());
/*       */       }
/* 30375 */       if (this.iOOBDThrottlePosition_ != null) {
/* 30376 */         size += 
/* 30377 */           CodedOutputStream.computeMessageSize(50554, (MessageLite)getIOOBDThrottlePosition());
/*       */       }
/* 30379 */       if (this.iOOBDRunTimeSinceEngineStart_ != null) {
/* 30380 */         size += 
/* 30381 */           CodedOutputStream.computeMessageSize(50555, (MessageLite)getIOOBDRunTimeSinceEngineStart());
/*       */       }
/* 30383 */       if (this.iOOBDFuelTankLevelInput_ != null) {
/* 30384 */         size += 
/* 30385 */           CodedOutputStream.computeMessageSize(50556, (MessageLite)getIOOBDFuelTankLevelInput());
/*       */       }
/* 30387 */       if (this.iOOBDDistanceTraveledSinceCodesCleared_ != null) {
/* 30388 */         size += 
/* 30389 */           CodedOutputStream.computeMessageSize(50557, (MessageLite)getIOOBDDistanceTraveledSinceCodesCleared());
/*       */       }
/* 30391 */       if (this.iOOBDAbsoluteThrottlePositionD_ != null) {
/* 30392 */         size += 
/* 30393 */           CodedOutputStream.computeMessageSize(50558, (MessageLite)getIOOBDAbsoluteThrottlePositionD());
/*       */       }
/* 30395 */       if (this.iOOBDTimeRunWithMILOn_ != null) {
/* 30396 */         size += 
/* 30397 */           CodedOutputStream.computeMessageSize(50559, (MessageLite)getIOOBDTimeRunWithMILOn());
/*       */       }
/* 30399 */       if (this.iOOBDEngineOilTemperature_ != null) {
/* 30400 */         size += 
/* 30401 */           CodedOutputStream.computeMessageSize(50560, (MessageLite)getIOOBDEngineOilTemperature());
/*       */       }
/* 30403 */       if (this.iOOBDFuelSystem1Status_ != null) {
/* 30404 */         size += 
/* 30405 */           CodedOutputStream.computeMessageSize(50561, (MessageLite)getIOOBDFuelSystem1Status());
/*       */       }
/* 30407 */       if (this.iOOBDFuelSystem2Status_ != null) {
/* 30408 */         size += 
/* 30409 */           CodedOutputStream.computeMessageSize(50562, (MessageLite)getIOOBDFuelSystem2Status());
/*       */       }
/* 30411 */       if (this.iOOBDOxygenSensor1Voltage_ != null) {
/* 30412 */         size += 
/* 30413 */           CodedOutputStream.computeMessageSize(50563, (MessageLite)getIOOBDOxygenSensor1Voltage());
/*       */       }
/* 30415 */       if (this.iOOBDOxygenSensor1ShortTermFuelTrim_ != null) {
/* 30416 */         size += 
/* 30417 */           CodedOutputStream.computeMessageSize(50564, (MessageLite)getIOOBDOxygenSensor1ShortTermFuelTrim());
/*       */       }
/* 30419 */       if (this.iOOBDOxygenSensor2Voltage_ != null) {
/* 30420 */         size += 
/* 30421 */           CodedOutputStream.computeMessageSize(50565, (MessageLite)getIOOBDOxygenSensor2Voltage());
/*       */       }
/* 30423 */       if (this.iOOBDOxygenSensor2ShortTermFuelTrim_ != null) {
/* 30424 */         size += 
/* 30425 */           CodedOutputStream.computeMessageSize(50566, (MessageLite)getIOOBDOxygenSensor2ShortTermFuelTrim());
/*       */       }
/* 30427 */       if (this.iOOBDOxygenSensor3Voltage_ != null) {
/* 30428 */         size += 
/* 30429 */           CodedOutputStream.computeMessageSize(50567, (MessageLite)getIOOBDOxygenSensor3Voltage());
/*       */       }
/* 30431 */       if (this.iOOBDOxygenSensor3ShortTermFuelTrim_ != null) {
/* 30432 */         size += 
/* 30433 */           CodedOutputStream.computeMessageSize(50568, (MessageLite)getIOOBDOxygenSensor3ShortTermFuelTrim());
/*       */       }
/* 30435 */       if (this.iOOBDOxygenSensor4Voltage_ != null) {
/* 30436 */         size += 
/* 30437 */           CodedOutputStream.computeMessageSize(50569, (MessageLite)getIOOBDOxygenSensor4Voltage());
/*       */       }
/* 30439 */       if (this.iOOBDOxygenSensor4ShortTermFuelTrim_ != null) {
/* 30440 */         size += 
/* 30441 */           CodedOutputStream.computeMessageSize(50570, (MessageLite)getIOOBDOxygenSensor4ShortTermFuelTrim());
/*       */       }
/* 30443 */       if (this.iOCANBusTachograph1WorkingState1_ != null) {
/* 30444 */         size += 
/* 30445 */           CodedOutputStream.computeMessageSize(50700, (MessageLite)getIOCANBusTachograph1WorkingState1());
/*       */       }
/* 30447 */       if (this.iOCANBusTachograph1WorkingState2_ != null) {
/* 30448 */         size += 
/* 30449 */           CodedOutputStream.computeMessageSize(50701, (MessageLite)getIOCANBusTachograph1WorkingState2());
/*       */       }
/* 30451 */       if (this.iOCANBusTachograph1VehicleMotion_ != null) {
/* 30452 */         size += 
/* 30453 */           CodedOutputStream.computeMessageSize(50702, (MessageLite)getIOCANBusTachograph1VehicleMotion());
/*       */       }
/* 30455 */       if (this.iOCANBusTachograph1Driv1TimeRelStates_ != null) {
/* 30456 */         size += 
/* 30457 */           CodedOutputStream.computeMessageSize(50703, (MessageLite)getIOCANBusTachograph1Driv1TimeRelStates());
/*       */       }
/* 30459 */       if (this.iOCANBusTachograph1Driver1Card_ != null) {
/* 30460 */         size += 
/* 30461 */           CodedOutputStream.computeMessageSize(50704, (MessageLite)getIOCANBusTachograph1Driver1Card());
/*       */       }
/* 30463 */       if (this.iOCANBusTachograph1VehicleOverspeed_ != null) {
/* 30464 */         size += 
/* 30465 */           CodedOutputStream.computeMessageSize(50705, (MessageLite)getIOCANBusTachograph1VehicleOverspeed());
/*       */       }
/* 30467 */       if (this.iOCANBusTachograph1Driv2TimeRelStates_ != null) {
/* 30468 */         size += 
/* 30469 */           CodedOutputStream.computeMessageSize(50706, (MessageLite)getIOCANBusTachograph1Driv2TimeRelStates());
/*       */       }
/* 30471 */       if (this.iOCANBusTachograph1Driver2Card_ != null) {
/* 30472 */         size += 
/* 30473 */           CodedOutputStream.computeMessageSize(50707, (MessageLite)getIOCANBusTachograph1Driver2Card());
/*       */       }
/* 30475 */       if (this.iOCANBusTachograph1SystemEvent_ != null) {
/* 30476 */         size += 
/* 30477 */           CodedOutputStream.computeMessageSize(50708, (MessageLite)getIOCANBusTachograph1SystemEvent());
/*       */       }
/* 30479 */       if (this.iOCANBusTachograph1HandlingInformation_ != null) {
/* 30480 */         size += 
/* 30481 */           CodedOutputStream.computeMessageSize(50709, (MessageLite)getIOCANBusTachograph1HandlingInformation());
/*       */       }
/* 30483 */       if (this.iOCANBusTachograph1TachographPerformance_ != null) {
/* 30484 */         size += 
/* 30485 */           CodedOutputStream.computeMessageSize(50710, (MessageLite)getIOCANBusTachograph1TachographPerformance());
/*       */       }
/* 30487 */       if (this.iOCANBusTachograph1DirectionIndicator_ != null) {
/* 30488 */         size += 
/* 30489 */           CodedOutputStream.computeMessageSize(50711, (MessageLite)getIOCANBusTachograph1DirectionIndicator());
/*       */       }
/* 30491 */       if (this.iOCANBusTachograph1VehicleSpeed_ != null) {
/* 30492 */         size += 
/* 30493 */           CodedOutputStream.computeMessageSize(50712, (MessageLite)getIOCANBusTachograph1VehicleSpeed());
/*       */       }
/* 30495 */       if (this.iOCANBusEngineTemperature1EngineCoolantTemperature_ != null) {
/* 30496 */         size += 
/* 30497 */           CodedOutputStream.computeMessageSize(50713, (MessageLite)getIOCANBusEngineTemperature1EngineCoolantTemperature());
/*       */       }
/* 30499 */       if (this.iOCANBusElectronicEngineController1ActualEnginePercent_ != null) {
/* 30500 */         size += 
/* 30501 */           CodedOutputStream.computeMessageSize(50714, (MessageLite)getIOCANBusElectronicEngineController1ActualEnginePercent());
/*       */       }
/* 30503 */       if (this.iOCANBusElectronicEngineController1EngineSpeed_ != null) {
/* 30504 */         size += 
/* 30505 */           CodedOutputStream.computeMessageSize(50715, (MessageLite)getIOCANBusElectronicEngineController1EngineSpeed());
/*       */       }
/* 30507 */       if (this.iOCANBusEngineHoursEngineTotalHours_ != null) {
/* 30508 */         size += 
/* 30509 */           CodedOutputStream.computeMessageSize(50716, (MessageLite)getIOCANBusEngineHoursEngineTotalHours());
/*       */       }
/* 30511 */       if (this.iOCANBusVehicleDistanceTotalVehicleDistance_ != null) {
/* 30512 */         size += 
/* 30513 */           CodedOutputStream.computeMessageSize(50717, (MessageLite)getIOCANBusVehicleDistanceTotalVehicleDistance());
/*       */       }
/* 30515 */       if (this.iOCANBusHighResolutionFuelConsumptionTotalFuelUsed_ != null) {
/* 30516 */         size += 
/* 30517 */           CodedOutputStream.computeMessageSize(50718, (MessageLite)getIOCANBusHighResolutionFuelConsumptionTotalFuelUsed());
/*       */       }
/* 30519 */       if (this.iOCANBusDashDisplayFuelLevel1_ != null) {
/* 30520 */         size += 
/* 30521 */           CodedOutputStream.computeMessageSize(50719, (MessageLite)getIOCANBusDashDisplayFuelLevel1());
/*       */       }
/* 30523 */       if (this.iOCANBusAmbientConditionsAmbientAirTemperature_ != null) {
/* 30524 */         size += 
/* 30525 */           CodedOutputStream.computeMessageSize(50720, (MessageLite)getIOCANBusAmbientConditionsAmbientAirTemperature());
/*       */       }
/* 30527 */       if (this.iOCANBusFuelEconomyFuelRate_ != null) {
/* 30528 */         size += 
/* 30529 */           CodedOutputStream.computeMessageSize(50721, (MessageLite)getIOCANBusFuelEconomyFuelRate());
/*       */       }
/* 30531 */       if (this.iOCANBusFuelEconomyInstantaneousFuelEconomy_ != null) {
/* 30532 */         size += 
/* 30533 */           CodedOutputStream.computeMessageSize(50722, (MessageLite)getIOCANBusFuelEconomyInstantaneousFuelEconomy());
/*       */       }
/* 30535 */       if (this.iOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit1_ != null) {
/* 30536 */         size += 
/* 30537 */           CodedOutputStream.computeMessageSize(50723, (MessageLite)getIOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit1());
/*       */       }
/* 30539 */       if (this.iOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit2_ != null) {
/* 30540 */         size += 
/* 30541 */           CodedOutputStream.computeMessageSize(50724, (MessageLite)getIOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit2());
/*       */       }
/* 30543 */       if (this.iOCANBusAftertreatmentDieselExhaustFluidTankInformationTank1Level_ != null) {
/* 30544 */         size += 
/* 30545 */           CodedOutputStream.computeMessageSize(50725, (MessageLite)getIOCANBusAftertreatmentDieselExhaustFluidTankInformationTank1Level());
/*       */       }
/* 30547 */       if (this.iOCANBusTruckBusElectronicEngineController2AcceleratorPedalPosition1_ != null) {
/* 30548 */         size += 
/* 30549 */           CodedOutputStream.computeMessageSize(50742, (MessageLite)getIOCANBusTruckBusElectronicEngineController2AcceleratorPedalPosition1());
/*       */       }
/* 30551 */       if (this.iOCANBusTruckBusElectronicEngineController2EnginePercentLoad_ != null) {
/* 30552 */         size += 
/* 30553 */           CodedOutputStream.computeMessageSize(50743, (MessageLite)getIOCANBusTruckBusElectronicEngineController2EnginePercentLoad());
/*       */       }
/* 30555 */       if (this.iOCANBusTruckVehicleWeightAxleWeight1_ != null) {
/* 30556 */         size += 
/* 30557 */           CodedOutputStream.computeMessageSize(50744, (MessageLite)getIOCANBusTruckVehicleWeightAxleWeight1());
/*       */       }
/* 30559 */       if (this.iOCANBusTruckVehicleWeightAxleWeight2_ != null) {
/* 30560 */         size += 
/* 30561 */           CodedOutputStream.computeMessageSize(50745, (MessageLite)getIOCANBusTruckVehicleWeightAxleWeight2());
/*       */       }
/* 30563 */       if (this.iOCANBusTruckVehicleWeightAxleWeight3_ != null) {
/* 30564 */         size += 
/* 30565 */           CodedOutputStream.computeMessageSize(50746, (MessageLite)getIOCANBusTruckVehicleWeightAxleWeight3());
/*       */       }
/* 30567 */       if (this.iOCANBusTruckServiceInformationServiceDistance_ != null) {
/* 30568 */         size += 
/* 30569 */           CodedOutputStream.computeMessageSize(50747, (MessageLite)getIOCANBusTruckServiceInformationServiceDistance());
/*       */       }
/* 30571 */       if (this.iOCANBusTruckPTODriveEngagementPTOEngageStat_ != null) {
/* 30572 */         size += 
/* 30573 */           CodedOutputStream.computeMessageSize(50748, (MessageLite)getIOCANBusTruckPTODriveEngagementPTOEngageStat());
/*       */       }
/* 30575 */       if (this.iOCANBusTruckCombinationVehicleWeightGrossCombinationVehicleWeight_ != null) {
/* 30576 */         size += 
/* 30577 */           CodedOutputStream.computeMessageSize(50749, (MessageLite)getIOCANBusTruckCombinationVehicleWeightGrossCombinationVehicleWeight());
/*       */       }
/* 30579 */       if (this.iOCANBusTruckBusElectronicRetarderController1RetarderTorqueMode_ != null) {
/* 30580 */         size += 
/* 30581 */           CodedOutputStream.computeMessageSize(50750, (MessageLite)getIOCANBusTruckBusElectronicRetarderController1RetarderTorqueMode());
/*       */       }
/* 30583 */       if (this.iOCANBusTruckBusElectronicRetarderController1RetarderSelection_ != null) {
/* 30584 */         size += 
/* 30585 */           CodedOutputStream.computeMessageSize(50751, (MessageLite)getIOCANBusTruckBusElectronicRetarderController1RetarderSelection());
/*       */       }
/* 30587 */       if (this.iOCANBusBusDoorControl1DoorPosition_ != null) {
/* 30588 */         size += 
/* 30589 */           CodedOutputStream.computeMessageSize(50752, (MessageLite)getIOCANBusBusDoorControl1DoorPosition());
/*       */       }
/* 30591 */       if (this.iOCANBusBusDoorControl1RampWheelChairlift_ != null) {
/* 30592 */         size += 
/* 30593 */           CodedOutputStream.computeMessageSize(50753, (MessageLite)getIOCANBusBusDoorControl1RampWheelChairlift());
/*       */       }
/* 30595 */       if (this.iOCANBusBusDoorControl1DoorsStatus2_ != null) {
/* 30596 */         size += 
/* 30597 */           CodedOutputStream.computeMessageSize(50754, (MessageLite)getIOCANBusBusDoorControl1DoorsStatus2());
/*       */       }
/* 30599 */       if (this.iOCANBusBusDoorControl2_ != null) {
/* 30600 */         size += 
/* 30601 */           CodedOutputStream.computeMessageSize(50755, (MessageLite)getIOCANBusBusDoorControl2());
/*       */       }
/* 30603 */       if (this.iOCANBusBrakeLiningRemainingAxleFrontLeftWheel_ != null) {
/* 30604 */         size += 
/* 30605 */           CodedOutputStream.computeMessageSize(50756, (MessageLite)getIOCANBusBrakeLiningRemainingAxleFrontLeftWheel());
/*       */       }
/* 30607 */       if (this.iOCANBusBrakeLiningRemainingAxleFrontRightWheel_ != null) {
/* 30608 */         size += 
/* 30609 */           CodedOutputStream.computeMessageSize(50757, (MessageLite)getIOCANBusBrakeLiningRemainingAxleFrontRightWheel());
/*       */       }
/* 30611 */       if (this.iOCANBusBrakeLiningRemainingAxleRear1LeftWheel_ != null) {
/* 30612 */         size += 
/* 30613 */           CodedOutputStream.computeMessageSize(50758, (MessageLite)getIOCANBusBrakeLiningRemainingAxleRear1LeftWheel());
/*       */       }
/* 30615 */       if (this.iOCANBusBrakeLiningRemainingAxleRear1RightWheel_ != null) {
/* 30616 */         size += 
/* 30617 */           CodedOutputStream.computeMessageSize(50759, (MessageLite)getIOCANBusBrakeLiningRemainingAxleRear1RightWheel());
/*       */       }
/* 30619 */       if (this.iOCANBusBrakeLiningRemainingAxleRear2LeftWheel_ != null) {
/* 30620 */         size += 
/* 30621 */           CodedOutputStream.computeMessageSize(50760, (MessageLite)getIOCANBusBrakeLiningRemainingAxleRear2LeftWheel());
/*       */       }
/* 30623 */       if (this.iOCANBusBrakeLiningRemainingAxleRear2RightWheel_ != null) {
/* 30624 */         size += 
/* 30625 */           CodedOutputStream.computeMessageSize(50761, (MessageLite)getIOCANBusBrakeLiningRemainingAxleRear2RightWheel());
/*       */       }
/* 30627 */       if (this.iOCANBusBrakeLiningRemainingAxleRear3LeftWheel_ != null) {
/* 30628 */         size += 
/* 30629 */           CodedOutputStream.computeMessageSize(50762, (MessageLite)getIOCANBusBrakeLiningRemainingAxleRear3LeftWheel());
/*       */       }
/* 30631 */       if (this.iOCANBusBrakeLiningRemainingAxleRear3RightWheel_ != null) {
/* 30632 */         size += 
/* 30633 */           CodedOutputStream.computeMessageSize(50763, (MessageLite)getIOCANBusBrakeLiningRemainingAxleRear3RightWheel());
/*       */       }
/* 30635 */       if (this.iOCANBusTruckBusCruiseControl_ != null) {
/* 30636 */         size += 
/* 30637 */           CodedOutputStream.computeMessageSize(50784, (MessageLite)getIOCANBusTruckBusCruiseControl());
/*       */       }
/* 30639 */       if (this.iOCANBusBusAlternatorSpeedAlternatorStatus1_ != null) {
/* 30640 */         size += 
/* 30641 */           CodedOutputStream.computeMessageSize(50785, (MessageLite)getIOCANBusBusAlternatorSpeedAlternatorStatus1());
/*       */       }
/* 30643 */       if (this.iOCANBusBusAlternatorSpeedAlternatorStatus2_ != null) {
/* 30644 */         size += 
/* 30645 */           CodedOutputStream.computeMessageSize(50786, (MessageLite)getIOCANBusBusAlternatorSpeedAlternatorStatus2());
/*       */       }
/* 30647 */       if (this.iOCANBusBusAlternatorSpeedAlternatorStatus3_ != null) {
/* 30648 */         size += 
/* 30649 */           CodedOutputStream.computeMessageSize(50787, (MessageLite)getIOCANBusBusAlternatorSpeedAlternatorStatus3());
/*       */       }
/* 30651 */       if (this.iOCANBusBusAlternatorSpeedAlternatorStatus4_ != null) {
/* 30652 */         size += 
/* 30653 */           CodedOutputStream.computeMessageSize(50788, (MessageLite)getIOCANBusBusAlternatorSpeedAlternatorStatus4());
/*       */       }
/* 30655 */       if (this.iOCANBusBusElectronicTransmissionController2SelectedGear_ != null) {
/* 30656 */         size += 
/* 30657 */           CodedOutputStream.computeMessageSize(50789, (MessageLite)getIOCANBusBusElectronicTransmissionController2SelectedGear());
/*       */       }
/* 30659 */       if (this.iOCANBusBusElectronicTransmissionController2CurrentGear_ != null) {
/* 30660 */         size += 
/* 30661 */           CodedOutputStream.computeMessageSize(50790, (MessageLite)getIOCANBusBusElectronicTransmissionController2CurrentGear());
/*       */       }
/* 30663 */       if (this.iOCANBusBusAirSuspensionControl4FrontAxleLeft_ != null) {
/* 30664 */         size += 
/* 30665 */           CodedOutputStream.computeMessageSize(50791, (MessageLite)getIOCANBusBusAirSuspensionControl4FrontAxleLeft());
/*       */       }
/* 30667 */       if (this.iOCANBusBusAirSuspensionControl4FrontAxleRight_ != null) {
/* 30668 */         size += 
/* 30669 */           CodedOutputStream.computeMessageSize(50792, (MessageLite)getIOCANBusBusAirSuspensionControl4FrontAxleRight());
/*       */       }
/* 30671 */       if (this.iOCANBusBusAirSuspensionControl4RearAxleLeft_ != null) {
/* 30672 */         size += 
/* 30673 */           CodedOutputStream.computeMessageSize(50793, (MessageLite)getIOCANBusBusAirSuspensionControl4RearAxleLeft());
/*       */       }
/* 30675 */       if (this.iOCANBusBusAirSuspensionControl4RearAxleright_ != null) {
/* 30676 */         size += 
/* 30677 */           CodedOutputStream.computeMessageSize(50794, (MessageLite)getIOCANBusBusAirSuspensionControl4RearAxleright());
/*       */       }
/* 30679 */       if (this.iOCANBusDashDisplayFuelLevel2_ != null) {
/* 30680 */         size += 
/* 30681 */           CodedOutputStream.computeMessageSize(50795, (MessageLite)getIOCANBusDashDisplayFuelLevel2());
/*       */       }
/* 30683 */       if (this.iOCANBusElectronicBrakeControllerBrakePedalPosition_ != null) {
/* 30684 */         size += 
/* 30685 */           CodedOutputStream.computeMessageSize(50796, (MessageLite)getIOCANBusElectronicBrakeControllerBrakePedalPosition());
/*       */       }
/* 30687 */       if (this.iOCANBusFuelConsumptionGaseousTotalFuelUsed_ != null) {
/* 30688 */         size += 
/* 30689 */           CodedOutputStream.computeMessageSize(50797, (MessageLite)getIOCANBusFuelConsumptionGaseousTotalFuelUsed());
/*       */       }
/* 30691 */       if (this.iOCANBusTruckBusCruiseControlVehicleSpeedParkingBrakeSwitch_ != null) {
/* 30692 */         size += 
/* 30693 */           CodedOutputStream.computeMessageSize(50798, (MessageLite)getIOCANBusTruckBusCruiseControlVehicleSpeedParkingBrakeSwitch());
/*       */       }
/* 30695 */       if (this.iOCANBusTruckBusCruiseControlVehicleSpeedWheelBasedSpeed_ != null) {
/* 30696 */         size += 
/* 30697 */           CodedOutputStream.computeMessageSize(50799, (MessageLite)getIOCANBusTruckBusCruiseControlVehicleSpeedWheelBasedSpeed());
/*       */       }
/* 30699 */       if (this.iOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlActive_ != null) {
/* 30700 */         size += 
/* 30701 */           CodedOutputStream.computeMessageSize(50800, (MessageLite)getIOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlActive());
/*       */       }
/* 30703 */       if (this.iOCANBusTruckBusCruiseControlVehicleSpeedBrakeSwitch_ != null) {
/* 30704 */         size += 
/* 30705 */           CodedOutputStream.computeMessageSize(50801, (MessageLite)getIOCANBusTruckBusCruiseControlVehicleSpeedBrakeSwitch());
/*       */       }
/* 30707 */       if (this.iOCANBusTruckBusCruiseControlVehicleSpeedClutchSwitch_ != null) {
/* 30708 */         size += 
/* 30709 */           CodedOutputStream.computeMessageSize(50802, (MessageLite)getIOCANBusTruckBusCruiseControlVehicleSpeedClutchSwitch());
/*       */       }
/* 30711 */       if (this.iOCANBusTruckBusCruiseControlVehicleSpeedPtoState_ != null) {
/* 30712 */         size += 
/* 30713 */           CodedOutputStream.computeMessageSize(50803, (MessageLite)getIOCANBusTruckBusCruiseControlVehicleSpeedPtoState());
/*       */       }
/* 30715 */       if (this.iOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlStates_ != null) {
/* 30716 */         size += 
/* 30717 */           CodedOutputStream.computeMessageSize(50804, (MessageLite)getIOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlStates());
/*       */       }
/* 30719 */       if (this.iOCANBusBusVehicleElectricalPowerHybridBatteryPackRemainingCharge_ != null) {
/* 30720 */         size += 
/* 30721 */           CodedOutputStream.computeMessageSize(50805, (MessageLite)getIOCANBusBusVehicleElectricalPowerHybridBatteryPackRemainingCharge());
/*       */       }
/* 30723 */       if (this.iOCANBusBusVehicleDynamicStabilityControl2SteeringWheelAngle_ != null) {
/* 30724 */         size += 
/* 30725 */           CodedOutputStream.computeMessageSize(50806, (MessageLite)getIOCANBusBusVehicleDynamicStabilityControl2SteeringWheelAngle());
/*       */       }
/* 30727 */       if (this.iOCANBusElectronicEngineController14FuelType_ != null) {
/* 30728 */         size += 
/* 30729 */           CodedOutputStream.computeMessageSize(50807, (MessageLite)getIOCANBusElectronicEngineController14FuelType());
/*       */       }
/* 30731 */       if (this.iOCANBusEngineFluidLevelPressureEngineOilLevel_ != null) {
/* 30732 */         size += 
/* 30733 */           CodedOutputStream.computeMessageSize(50808, (MessageLite)getIOCANBusEngineFluidLevelPressureEngineOilLevel());
/*       */       }
/* 30735 */       if (this.iOCANBusEngineFluidLevelPressureEngineOilPressure_ != null) {
/* 30736 */         size += 
/* 30737 */           CodedOutputStream.computeMessageSize(50809, (MessageLite)getIOCANBusEngineFluidLevelPressureEngineOilPressure());
/*       */       }
/* 30739 */       if (this.iOCANBusEngineFluidLevelPressureCoolantLevel_ != null) {
/* 30740 */         size += 
/* 30741 */           CodedOutputStream.computeMessageSize(50810, (MessageLite)getIOCANBusEngineFluidLevelPressureCoolantLevel());
/*       */       }
/* 30743 */       if (this.iOCANBusTellTaleStatus_ != null) {
/* 30744 */         size += 
/* 30745 */           CodedOutputStream.computeMessageSize(50811, (MessageLite)getIOCANBusTellTaleStatus());
/*       */       }
/* 30747 */       if (this.iOCANBusFuelConsumptionEngineTotalFuelUsed_ != null) {
/* 30748 */         size += 
/* 30749 */           CodedOutputStream.computeMessageSize(50812, (MessageLite)getIOCANBusFuelConsumptionEngineTotalFuelUsed());
/*       */       }
/* 30751 */       if (this.iOCANBusTruckVehicleWeightAxleWeight4_ != null) {
/* 30752 */         size += 
/* 30753 */           CodedOutputStream.computeMessageSize(50813, (MessageLite)getIOCANBusTruckVehicleWeightAxleWeight4());
/*       */       }
/* 30755 */       size += this.unknownFields.getSerializedSize();
/* 30756 */       this.memoizedSize = size;
/* 30757 */       return size;
/*       */     }
/*       */ 
/*       */     
/*       */     public boolean equals(Object obj) {
/* 30762 */       if (obj == this) {
/* 30763 */         return true;
/*       */       }
/* 30765 */       if (!(obj instanceof Config)) {
/* 30766 */         return super.equals(obj);
/*       */       }
/* 30768 */       Config other = (Config)obj;
/*       */       
/* 30770 */       if (this.serialPortBaudrate_ != other.serialPortBaudrate_) return false; 
/* 30771 */       if (getDoNotResetDeviceOnProblems() != other
/* 30772 */         .getDoNotResetDeviceOnProblems()) return false;
/*       */       
/* 30774 */       if (!getPassword().equals(other.getPassword())) return false; 
/* 30775 */       if (this.movement_ != other.movement_) return false; 
/* 30776 */       if (getMovementSensorSensitivity() != other
/* 30777 */         .getMovementSensorSensitivity()) return false; 
/* 30778 */       if (this.sleep_ != other.sleep_) return false; 
/* 30779 */       if (getSleepTimeout() != other
/* 30780 */         .getSleepTimeout()) return false; 
/* 30781 */       if (this.engineOn_ != other.engineOn_) return false; 
/* 30782 */       if (getEngineOnDIN1() != other
/* 30783 */         .getEngineOnDIN1()) return false; 
/* 30784 */       if (getEngineOnDIN2() != other
/* 30785 */         .getEngineOnDIN2()) return false; 
/* 30786 */       if (getEngineOnMovementSensor() != other
/* 30787 */         .getEngineOnMovementSensor()) return false; 
/* 30788 */       if (getEngineOnPowerSupplyAvailable() != other
/* 30789 */         .getEngineOnPowerSupplyAvailable()) return false; 
/* 30790 */       if (getEngineOnGpsSpeed() != other
/* 30791 */         .getEngineOnGpsSpeed()) return false; 
/* 30792 */       if (getEngineOnCanRPM() != other
/* 30793 */         .getEngineOnCanRPM()) return false; 
/* 30794 */       if (getEngineOnMinActiveStateDuration() != other
/* 30795 */         .getEngineOnMinActiveStateDuration()) return false; 
/* 30796 */       if (this.engineOnOperator_ != other.engineOnOperator_) return false; 
/* 30797 */       if (getEngineOnMovementStartDelay() != other
/* 30798 */         .getEngineOnMovementStartDelay()) return false; 
/* 30799 */       if (getEngineOnMovementStopDelay() != other
/* 30800 */         .getEngineOnMovementStopDelay()) return false; 
/* 30801 */       if (getEngineOnExternalVoltage() != other
/* 30802 */         .getEngineOnExternalVoltage()) return false; 
/* 30803 */       if (getLedIndication() != other
/* 30804 */         .getLedIndication()) return false; 
/* 30805 */       if (this.gNSS_ != other.gNSS_) return false; 
/* 30806 */       if (getStaticNavigationEnabled() != other
/* 30807 */         .getStaticNavigationEnabled()) return false; 
/* 30808 */       if (this.staticNavigationSource_ != other.staticNavigationSource_) return false; 
/* 30809 */       if (this.recordsSaveAndSendMode_ != other.recordsSaveAndSendMode_) return false; 
/* 30810 */       if (this.timeSynchronization_ != other.timeSynchronization_) return false;
/*       */       
/* 30812 */       if (!getNTPServer().equals(other.getNTPServer())) return false; 
/* 30813 */       if (getNTPInterval() != other
/* 30814 */         .getNTPInterval()) return false; 
/* 30815 */       if (getSleepNoPowerTimeout() != other
/* 30816 */         .getSleepNoPowerTimeout()) return false; 
/* 30817 */       if (getSendPing() != other
/* 30818 */         .getSendPing()) return false; 
/* 30819 */       if (getTimetableMode() != other
/* 30820 */         .getTimetableMode()) return false;
/*       */       
/* 30822 */       if (!getTimetableData().equals(other.getTimetableData())) return false; 
/* 30823 */       if (hasService1() != other.hasService1()) return false; 
/* 30824 */       if (hasService1() && 
/*       */         
/* 30826 */         !getService1().equals(other.getService1())) return false;
/*       */       
/* 30828 */       if (hasService2() != other.hasService2()) return false; 
/* 30829 */       if (hasService2() && 
/*       */         
/* 30831 */         !getService2().equals(other.getService2())) return false;
/*       */       
/* 30833 */       if (hasService3() != other.hasService3()) return false; 
/* 30834 */       if (hasService3() && 
/*       */         
/* 30836 */         !getService3().equals(other.getService3())) return false;
/*       */       
/* 30838 */       if (getAnalogInput1AverageTime() != other
/* 30839 */         .getAnalogInput1AverageTime()) return false; 
/* 30840 */       if (getAnalogInput2AverageTime() != other
/* 30841 */         .getAnalogInput2AverageTime()) return false; 
/* 30842 */       if (getAnalogInput3AverageTime() != other
/* 30843 */         .getAnalogInput3AverageTime()) return false; 
/* 30844 */       if (this.bluetoothRadioMode_ != other.bluetoothRadioMode_) return false;
/*       */       
/* 30846 */       if (!getBluetoothName().equals(other.getBluetoothName())) return false;
/*       */       
/* 30848 */       if (!getBluetoothPIN().equals(other.getBluetoothPIN())) return false; 
/* 30849 */       if (this.bluetoothSecurityMode_ != other.bluetoothSecurityMode_) return false; 
/* 30850 */       if (getBluetoothPowerDownOnSleep() != other
/* 30851 */         .getBluetoothPowerDownOnSleep()) return false; 
/* 30852 */       if (this.bluetoothExternalConnectionMode_ != other.bluetoothExternalConnectionMode_) return false;
/*       */       
/* 30854 */       if (!getBluetoothExternalDeviceMAC().equals(other.getBluetoothExternalDeviceMAC())) return false;
/*       */       
/* 30856 */       if (!getBluetoothExternalDeviceName().equals(other.getBluetoothExternalDeviceName())) return false;
/*       */       
/* 30858 */       if (!getBluetoothExternalDevicePIN().equals(other.getBluetoothExternalDevicePIN())) return false;
/*       */       
/* 30860 */       if (!getBluetoothAuthorizedMAC1().equals(other.getBluetoothAuthorizedMAC1())) return false;
/*       */       
/* 30862 */       if (!getBluetoothAuthorizedMAC2().equals(other.getBluetoothAuthorizedMAC2())) return false;
/*       */       
/* 30864 */       if (!getBluetoothAuthorizedMAC3().equals(other.getBluetoothAuthorizedMAC3())) return false;
/*       */       
/* 30866 */       if (!getBluetoothAuthorizedMAC4().equals(other.getBluetoothAuthorizedMAC4())) return false;
/*       */       
/* 30868 */       if (!getBluetoothAuthorizedMAC5().equals(other.getBluetoothAuthorizedMAC5())) return false; 
/* 30869 */       if (getGPRSContextEnabled() != other
/* 30870 */         .getGPRSContextEnabled()) return false;
/*       */       
/* 30872 */       if (!getGPRSApnName().equals(other.getGPRSApnName())) return false;
/*       */       
/* 30874 */       if (!getGPRSApnUsername().equals(other.getGPRSApnUsername())) return false;
/*       */       
/* 30876 */       if (!getGPRSApnPassword().equals(other.getGPRSApnPassword())) return false; 
/* 30877 */       if (getGPRSCHAPAuthentication() != other
/* 30878 */         .getGPRSCHAPAuthentication()) return false; 
/* 30879 */       if (getGPRSLinkTimeout() != other
/* 30880 */         .getGPRSLinkTimeout()) return false; 
/* 30881 */       if (getGPRSResponseTimeout() != other
/* 30882 */         .getGPRSResponseTimeout()) return false;
/*       */       
/* 30884 */       if (!getGPRSServerAddress().equals(other.getGPRSServerAddress())) return false; 
/* 30885 */       if (getGPRSServerPort() != other
/* 30886 */         .getGPRSServerPort()) return false; 
/* 30887 */       if (this.gPRSServerProtocol_ != other.gPRSServerProtocol_) return false;
/*       */       
/* 30889 */       if (!getGPRSBackupServerAddress().equals(other.getGPRSBackupServerAddress())) return false; 
/* 30890 */       if (getGPRSBackupServerPort() != other
/* 30891 */         .getGPRSBackupServerPort()) return false; 
/* 30892 */       if (this.gPRSBackupServerProtocol_ != other.gPRSBackupServerProtocol_) return false; 
/* 30893 */       if (getGPRSSSLClientAuthentication() != other
/* 30894 */         .getGPRSSSLClientAuthentication()) return false; 
/* 30895 */       if (getGPRSDataCompression() != other
/* 30896 */         .getGPRSDataCompression()) return false; 
/* 30897 */       if (this.authenticationMode_ != other.authenticationMode_) return false;
/*       */       
/* 30899 */       if (!getAuthenticationCode().equals(other.getAuthenticationCode())) return false; 
/* 30900 */       if (getFirmwareUpdateEnabled() != other
/* 30901 */         .getFirmwareUpdateEnabled()) return false;
/*       */       
/* 30903 */       if (!getFirmwareUpdateChannel().equals(other.getFirmwareUpdateChannel())) return false; 
/* 30904 */       if (getFirmwareUpdateCheckInterval() != other
/* 30905 */         .getFirmwareUpdateCheckInterval()) return false;
/*       */       
/* 30907 */       if (!getFirmwareUpdateServerAddress().equals(other.getFirmwareUpdateServerAddress())) return false; 
/* 30908 */       if (getFirmwareUpdateServerPort() != other
/* 30909 */         .getFirmwareUpdateServerPort()) return false; 
/* 30910 */       if (this.firmwareUpdateServerProtocol_ != other.firmwareUpdateServerProtocol_) return false; 
/* 30911 */       if (getFirmwareUpdateLinkTimeout() != other
/* 30912 */         .getFirmwareUpdateLinkTimeout()) return false; 
/* 30913 */       if (getFirmwareUpdateResponseTimeout() != other
/* 30914 */         .getFirmwareUpdateResponseTimeout()) return false; 
/* 30915 */       if (getSMSDataSending() != other
/* 30916 */         .getSMSDataSending()) return false;
/*       */       
/* 30918 */       if (!getSMSDataSendNumber().equals(other.getSMSDataSendNumber())) return false;
/*       */       
/* 30920 */       if (!getSMSPassword().equals(other.getSMSPassword())) return false; 
/* 30921 */       if (getSMSEventTimeZone() != other
/* 30922 */         .getSMSEventTimeZone()) return false; 
/* 30923 */       if (this.callIncommingCallAction_ != other.callIncommingCallAction_) return false; 
/* 30924 */       if (getCallDigitalInput1CallTo() != other
/* 30925 */         .getCallDigitalInput1CallTo()) return false; 
/* 30926 */       if (getCallDigitalInput2CallTo() != other
/* 30927 */         .getCallDigitalInput2CallTo()) return false; 
/* 30928 */       if (getCallDigitalInput3CallTo() != other
/* 30929 */         .getCallDigitalInput3CallTo()) return false;
/*       */       
/* 30931 */       if (!getAuthorizedNumber1().equals(other.getAuthorizedNumber1())) return false;
/*       */       
/* 30933 */       if (!getAuthorizedNumber2().equals(other.getAuthorizedNumber2())) return false;
/*       */       
/* 30935 */       if (!getAuthorizedNumber3().equals(other.getAuthorizedNumber3())) return false;
/*       */       
/* 30937 */       if (!getAuthorizedNumber4().equals(other.getAuthorizedNumber4())) return false;
/*       */       
/* 30939 */       if (!getAuthorizedNumber5().equals(other.getAuthorizedNumber5())) return false;
/*       */       
/* 30941 */       if (!getAuthorizedNumber6().equals(other.getAuthorizedNumber6())) return false;
/*       */       
/* 30943 */       if (!getAuthorizedNumber7().equals(other.getAuthorizedNumber7())) return false;
/*       */       
/* 30945 */       if (!getAuthorizedNumber8().equals(other.getAuthorizedNumber8())) return false;
/*       */       
/* 30947 */       if (!getAuthorizedNumber9().equals(other.getAuthorizedNumber9())) return false;
/*       */       
/* 30949 */       if (!getAuthorizedNumber10().equals(other.getAuthorizedNumber10())) return false;
/*       */       
/* 30951 */       if (!getGsmPredefinedNumber1().equals(other.getGsmPredefinedNumber1())) return false;
/*       */       
/* 30953 */       if (!getGsmPredefinedNumber2().equals(other.getGsmPredefinedNumber2())) return false;
/*       */       
/* 30955 */       if (!getGsmPredefinedNumber3().equals(other.getGsmPredefinedNumber3())) return false;
/*       */       
/* 30957 */       if (!getGsmPredefinedNumber4().equals(other.getGsmPredefinedNumber4())) return false;
/*       */       
/* 30959 */       if (!getGsmPredefinedNumber5().equals(other.getGsmPredefinedNumber5())) return false;
/*       */       
/* 30961 */       if (!getGsmPredefinedNumber6().equals(other.getGsmPredefinedNumber6())) return false;
/*       */       
/* 30963 */       if (!getGsmPredefinedNumber7().equals(other.getGsmPredefinedNumber7())) return false;
/*       */       
/* 30965 */       if (!getGsmPredefinedNumber8().equals(other.getGsmPredefinedNumber8())) return false;
/*       */       
/* 30967 */       if (!getGsmPredefinedNumber9().equals(other.getGsmPredefinedNumber9())) return false;
/*       */       
/* 30969 */       if (!getGsmPredefinedNumber10().equals(other.getGsmPredefinedNumber10())) return false;
/*       */       
/* 30971 */       if (!getRoamingOperator1().equals(other.getRoamingOperator1())) return false;
/*       */       
/* 30973 */       if (!getRoamingOperator2().equals(other.getRoamingOperator2())) return false;
/*       */       
/* 30975 */       if (!getRoamingOperator3().equals(other.getRoamingOperator3())) return false;
/*       */       
/* 30977 */       if (!getRoamingOperator4().equals(other.getRoamingOperator4())) return false;
/*       */       
/* 30979 */       if (!getRoamingOperator5().equals(other.getRoamingOperator5())) return false; 
/* 30980 */       if (getDAQStopHomeMinPeriod() != other
/* 30981 */         .getDAQStopHomeMinPeriod()) return false; 
/* 30982 */       if (getDAQStopRoamingMinPeriod() != other
/* 30983 */         .getDAQStopRoamingMinPeriod()) return false; 
/* 30984 */       if (getDAQMovingHomeMinPeriod() != other
/* 30985 */         .getDAQMovingHomeMinPeriod()) return false; 
/* 30986 */       if (getDAQMovingHomeMinPathDeviation() != other
/* 30987 */         .getDAQMovingHomeMinPathDeviation()) return false; 
/* 30988 */       if (getDAQMovingRoamingMinPeriod() != other
/* 30989 */         .getDAQMovingRoamingMinPeriod()) return false; 
/* 30990 */       if (getDAQMovingRoamingMinPathDeviation() != other
/* 30991 */         .getDAQMovingRoamingMinPathDeviation()) return false; 
/* 30992 */       if (hasGeoZone1() != other.hasGeoZone1()) return false; 
/* 30993 */       if (hasGeoZone1() && 
/*       */         
/* 30995 */         !getGeoZone1().equals(other.getGeoZone1())) return false;
/*       */       
/* 30997 */       if (hasGeoZone2() != other.hasGeoZone2()) return false; 
/* 30998 */       if (hasGeoZone2() && 
/*       */         
/* 31000 */         !getGeoZone2().equals(other.getGeoZone2())) return false;
/*       */       
/* 31002 */       if (hasGeoZone3() != other.hasGeoZone3()) return false; 
/* 31003 */       if (hasGeoZone3() && 
/*       */         
/* 31005 */         !getGeoZone3().equals(other.getGeoZone3())) return false;
/*       */       
/* 31007 */       if (hasGeoZone4() != other.hasGeoZone4()) return false; 
/* 31008 */       if (hasGeoZone4() && 
/*       */         
/* 31010 */         !getGeoZone4().equals(other.getGeoZone4())) return false;
/*       */       
/* 31012 */       if (hasGeoZone5() != other.hasGeoZone5()) return false; 
/* 31013 */       if (hasGeoZone5() && 
/*       */         
/* 31015 */         !getGeoZone5().equals(other.getGeoZone5())) return false;
/*       */       
/* 31017 */       if (hasGeoZone6() != other.hasGeoZone6()) return false; 
/* 31018 */       if (hasGeoZone6() && 
/*       */         
/* 31020 */         !getGeoZone6().equals(other.getGeoZone6())) return false;
/*       */       
/* 31022 */       if (hasGeoZone7() != other.hasGeoZone7()) return false; 
/* 31023 */       if (hasGeoZone7() && 
/*       */         
/* 31025 */         !getGeoZone7().equals(other.getGeoZone7())) return false;
/*       */       
/* 31027 */       if (hasGeoZone8() != other.hasGeoZone8()) return false; 
/* 31028 */       if (hasGeoZone8() && 
/*       */         
/* 31030 */         !getGeoZone8().equals(other.getGeoZone8())) return false;
/*       */       
/* 31032 */       if (hasGeoZone9() != other.hasGeoZone9()) return false; 
/* 31033 */       if (hasGeoZone9() && 
/*       */         
/* 31035 */         !getGeoZone9().equals(other.getGeoZone9())) return false;
/*       */       
/* 31037 */       if (hasGeoZone10() != other.hasGeoZone10()) return false; 
/* 31038 */       if (hasGeoZone10() && 
/*       */         
/* 31040 */         !getGeoZone10().equals(other.getGeoZone10())) return false;
/*       */       
/* 31042 */       if (hasGeoZone11() != other.hasGeoZone11()) return false; 
/* 31043 */       if (hasGeoZone11() && 
/*       */         
/* 31045 */         !getGeoZone11().equals(other.getGeoZone11())) return false;
/*       */       
/* 31047 */       if (hasGeoZone12() != other.hasGeoZone12()) return false; 
/* 31048 */       if (hasGeoZone12() && 
/*       */         
/* 31050 */         !getGeoZone12().equals(other.getGeoZone12())) return false;
/*       */       
/* 31052 */       if (hasGeoZone13() != other.hasGeoZone13()) return false; 
/* 31053 */       if (hasGeoZone13() && 
/*       */         
/* 31055 */         !getGeoZone13().equals(other.getGeoZone13())) return false;
/*       */       
/* 31057 */       if (hasGeoZone14() != other.hasGeoZone14()) return false; 
/* 31058 */       if (hasGeoZone14() && 
/*       */         
/* 31060 */         !getGeoZone14().equals(other.getGeoZone14())) return false;
/*       */       
/* 31062 */       if (hasGeoZone15() != other.hasGeoZone15()) return false; 
/* 31063 */       if (hasGeoZone15() && 
/*       */         
/* 31065 */         !getGeoZone15().equals(other.getGeoZone15())) return false;
/*       */       
/* 31067 */       if (hasGeoZone16() != other.hasGeoZone16()) return false; 
/* 31068 */       if (hasGeoZone16() && 
/*       */         
/* 31070 */         !getGeoZone16().equals(other.getGeoZone16())) return false;
/*       */       
/* 31072 */       if (hasGeoZone17() != other.hasGeoZone17()) return false; 
/* 31073 */       if (hasGeoZone17() && 
/*       */         
/* 31075 */         !getGeoZone17().equals(other.getGeoZone17())) return false;
/*       */       
/* 31077 */       if (hasGeoZone18() != other.hasGeoZone18()) return false; 
/* 31078 */       if (hasGeoZone18() && 
/*       */         
/* 31080 */         !getGeoZone18().equals(other.getGeoZone18())) return false;
/*       */       
/* 31082 */       if (hasGeoZone19() != other.hasGeoZone19()) return false; 
/* 31083 */       if (hasGeoZone19() && 
/*       */         
/* 31085 */         !getGeoZone19().equals(other.getGeoZone19())) return false;
/*       */       
/* 31087 */       if (hasGeoZone20() != other.hasGeoZone20()) return false; 
/* 31088 */       if (hasGeoZone20() && 
/*       */         
/* 31090 */         !getGeoZone20().equals(other.getGeoZone20())) return false;
/*       */       
/* 31092 */       if (hasGeoZone21() != other.hasGeoZone21()) return false; 
/* 31093 */       if (hasGeoZone21() && 
/*       */         
/* 31095 */         !getGeoZone21().equals(other.getGeoZone21())) return false;
/*       */       
/* 31097 */       if (hasGeoZone22() != other.hasGeoZone22()) return false; 
/* 31098 */       if (hasGeoZone22() && 
/*       */         
/* 31100 */         !getGeoZone22().equals(other.getGeoZone22())) return false;
/*       */       
/* 31102 */       if (hasGeoZone23() != other.hasGeoZone23()) return false; 
/* 31103 */       if (hasGeoZone23() && 
/*       */         
/* 31105 */         !getGeoZone23().equals(other.getGeoZone23())) return false;
/*       */       
/* 31107 */       if (hasGeoZone24() != other.hasGeoZone24()) return false; 
/* 31108 */       if (hasGeoZone24() && 
/*       */         
/* 31110 */         !getGeoZone24().equals(other.getGeoZone24())) return false;
/*       */       
/* 31112 */       if (hasGeoZone25() != other.hasGeoZone25()) return false; 
/* 31113 */       if (hasGeoZone25() && 
/*       */         
/* 31115 */         !getGeoZone25().equals(other.getGeoZone25())) return false;
/*       */       
/* 31117 */       if (hasGeoZone26() != other.hasGeoZone26()) return false; 
/* 31118 */       if (hasGeoZone26() && 
/*       */         
/* 31120 */         !getGeoZone26().equals(other.getGeoZone26())) return false;
/*       */       
/* 31122 */       if (hasGeoZone27() != other.hasGeoZone27()) return false; 
/* 31123 */       if (hasGeoZone27() && 
/*       */         
/* 31125 */         !getGeoZone27().equals(other.getGeoZone27())) return false;
/*       */       
/* 31127 */       if (hasGeoZone28() != other.hasGeoZone28()) return false; 
/* 31128 */       if (hasGeoZone28() && 
/*       */         
/* 31130 */         !getGeoZone28().equals(other.getGeoZone28())) return false;
/*       */       
/* 31132 */       if (hasGeoZone29() != other.hasGeoZone29()) return false; 
/* 31133 */       if (hasGeoZone29() && 
/*       */         
/* 31135 */         !getGeoZone29().equals(other.getGeoZone29())) return false;
/*       */       
/* 31137 */       if (hasGeoZone30() != other.hasGeoZone30()) return false; 
/* 31138 */       if (hasGeoZone30() && 
/*       */         
/* 31140 */         !getGeoZone30().equals(other.getGeoZone30())) return false;
/*       */       
/* 31142 */       if (hasGeoZone31() != other.hasGeoZone31()) return false; 
/* 31143 */       if (hasGeoZone31() && 
/*       */         
/* 31145 */         !getGeoZone31().equals(other.getGeoZone31())) return false;
/*       */       
/* 31147 */       if (hasGeoZone32() != other.hasGeoZone32()) return false; 
/* 31148 */       if (hasGeoZone32() && 
/*       */         
/* 31150 */         !getGeoZone32().equals(other.getGeoZone32())) return false;
/*       */       
/* 31152 */       if (hasGeoZone33() != other.hasGeoZone33()) return false; 
/* 31153 */       if (hasGeoZone33() && 
/*       */         
/* 31155 */         !getGeoZone33().equals(other.getGeoZone33())) return false;
/*       */       
/* 31157 */       if (hasGeoZone34() != other.hasGeoZone34()) return false; 
/* 31158 */       if (hasGeoZone34() && 
/*       */         
/* 31160 */         !getGeoZone34().equals(other.getGeoZone34())) return false;
/*       */       
/* 31162 */       if (hasGeoZone35() != other.hasGeoZone35()) return false; 
/* 31163 */       if (hasGeoZone35() && 
/*       */         
/* 31165 */         !getGeoZone35().equals(other.getGeoZone35())) return false;
/*       */       
/* 31167 */       if (hasGeoZone36() != other.hasGeoZone36()) return false; 
/* 31168 */       if (hasGeoZone36() && 
/*       */         
/* 31170 */         !getGeoZone36().equals(other.getGeoZone36())) return false;
/*       */       
/* 31172 */       if (hasGeoZone37() != other.hasGeoZone37()) return false; 
/* 31173 */       if (hasGeoZone37() && 
/*       */         
/* 31175 */         !getGeoZone37().equals(other.getGeoZone37())) return false;
/*       */       
/* 31177 */       if (hasGeoZone38() != other.hasGeoZone38()) return false; 
/* 31178 */       if (hasGeoZone38() && 
/*       */         
/* 31180 */         !getGeoZone38().equals(other.getGeoZone38())) return false;
/*       */       
/* 31182 */       if (hasGeoZone39() != other.hasGeoZone39()) return false; 
/* 31183 */       if (hasGeoZone39() && 
/*       */         
/* 31185 */         !getGeoZone39().equals(other.getGeoZone39())) return false;
/*       */       
/* 31187 */       if (hasGeoZone40() != other.hasGeoZone40()) return false; 
/* 31188 */       if (hasGeoZone40() && 
/*       */         
/* 31190 */         !getGeoZone40().equals(other.getGeoZone40())) return false;
/*       */       
/* 31192 */       if (hasGeoZone41() != other.hasGeoZone41()) return false; 
/* 31193 */       if (hasGeoZone41() && 
/*       */         
/* 31195 */         !getGeoZone41().equals(other.getGeoZone41())) return false;
/*       */       
/* 31197 */       if (hasGeoZone42() != other.hasGeoZone42()) return false; 
/* 31198 */       if (hasGeoZone42() && 
/*       */         
/* 31200 */         !getGeoZone42().equals(other.getGeoZone42())) return false;
/*       */       
/* 31202 */       if (hasGeoZone43() != other.hasGeoZone43()) return false; 
/* 31203 */       if (hasGeoZone43() && 
/*       */         
/* 31205 */         !getGeoZone43().equals(other.getGeoZone43())) return false;
/*       */       
/* 31207 */       if (hasGeoZone44() != other.hasGeoZone44()) return false; 
/* 31208 */       if (hasGeoZone44() && 
/*       */         
/* 31210 */         !getGeoZone44().equals(other.getGeoZone44())) return false;
/*       */       
/* 31212 */       if (hasGeoZone45() != other.hasGeoZone45()) return false; 
/* 31213 */       if (hasGeoZone45() && 
/*       */         
/* 31215 */         !getGeoZone45().equals(other.getGeoZone45())) return false;
/*       */       
/* 31217 */       if (hasGeoZone46() != other.hasGeoZone46()) return false; 
/* 31218 */       if (hasGeoZone46() && 
/*       */         
/* 31220 */         !getGeoZone46().equals(other.getGeoZone46())) return false;
/*       */       
/* 31222 */       if (hasGeoZone47() != other.hasGeoZone47()) return false; 
/* 31223 */       if (hasGeoZone47() && 
/*       */         
/* 31225 */         !getGeoZone47().equals(other.getGeoZone47())) return false;
/*       */       
/* 31227 */       if (hasGeoZone48() != other.hasGeoZone48()) return false; 
/* 31228 */       if (hasGeoZone48() && 
/*       */         
/* 31230 */         !getGeoZone48().equals(other.getGeoZone48())) return false;
/*       */       
/* 31232 */       if (hasGeoZone49() != other.hasGeoZone49()) return false; 
/* 31233 */       if (hasGeoZone49() && 
/*       */         
/* 31235 */         !getGeoZone49().equals(other.getGeoZone49())) return false;
/*       */       
/* 31237 */       if (hasGeoZone50() != other.hasGeoZone50()) return false; 
/* 31238 */       if (hasGeoZone50() && 
/*       */         
/* 31240 */         !getGeoZone50().equals(other.getGeoZone50())) return false;
/*       */       
/* 31242 */       if (getTripStartSpeed() != other
/* 31243 */         .getTripStartSpeed()) return false; 
/* 31244 */       if (getTripUseIgnition() != other
/* 31245 */         .getTripUseIgnition()) return false; 
/* 31246 */       if (getTripParkDetectionTimeout() != other
/* 31247 */         .getTripParkDetectionTimeout()) return false; 
/* 31248 */       if (getOverspeedingEnable() != other
/* 31249 */         .getOverspeedingEnable()) return false; 
/* 31250 */       if (getOverspeedingLimit() != other
/* 31251 */         .getOverspeedingLimit()) return false; 
/* 31252 */       if (getOverspeedingActivationSpeed() != other
/* 31253 */         .getOverspeedingActivationSpeed()) return false; 
/* 31254 */       if (this.overspeedingDeactivationMode_ != other.overspeedingDeactivationMode_) return false; 
/* 31255 */       if (getOverspeedingDeactivationValue() != other
/* 31256 */         .getOverspeedingDeactivationValue()) return false; 
/* 31257 */       if (getUSSDEnabled() != other
/* 31258 */         .getUSSDEnabled()) return false; 
/* 31259 */       if (getUSSDID() != other
/* 31260 */         .getUSSDID()) return false; 
/* 31261 */       if (getUSSDInterval() != other
/* 31262 */         .getUSSDInterval()) return false;
/*       */       
/* 31264 */       if (!getUSSDCode().equals(other.getUSSDCode())) return false; 
/* 31265 */       if (getSpeedSensorKmPulseCount() != other
/* 31266 */         .getSpeedSensorKmPulseCount()) return false; 
/* 31267 */       if (getCrashDetectionEnabled() != other
/* 31268 */         .getCrashDetectionEnabled()) return false; 
/* 31269 */       if (getCrashDetectionLevel1Threshold() != other
/* 31270 */         .getCrashDetectionLevel1Threshold()) return false; 
/* 31271 */       if (getCrashDetectionLevel2Threshold() != other
/* 31272 */         .getCrashDetectionLevel2Threshold()) return false; 
/* 31273 */       if (getCrashDetectionLevel3Threshold() != other
/* 31274 */         .getCrashDetectionLevel3Threshold()) return false; 
/* 31275 */       if (this.crashDetectionTrace_ != other.crashDetectionTrace_) return false; 
/* 31276 */       if (getCrashDetectionDuration() != other
/* 31277 */         .getCrashDetectionDuration()) return false; 
/* 31278 */       if (getCrashDetectionSendSMSTo() != other
/* 31279 */         .getCrashDetectionSendSMSTo()) return false;
/*       */       
/* 31281 */       if (!getCrashDetectionSMSText().equals(other.getCrashDetectionSMSText())) return false; 
/* 31282 */       if (getCrashDetectionCallTo() != other
/* 31283 */         .getCrashDetectionCallTo()) return false; 
/* 31284 */       if (getRolloverDetectionEnabled() != other
/* 31285 */         .getRolloverDetectionEnabled()) return false; 
/* 31286 */       if (this.driverRegistrationMode_ != other.driverRegistrationMode_) return false; 
/* 31287 */       if (this.driverRegistrationAuthentication_ != other.driverRegistrationAuthentication_) return false; 
/* 31288 */       if (getDriverRegistrationDeregistrationTimeout() != other
/* 31289 */         .getDriverRegistrationDeregistrationTimeout()) return false; 
/* 31290 */       if (this.driverRegistrationBuzzerDigitalOutput_ != other.driverRegistrationBuzzerDigitalOutput_) return false; 
/* 31291 */       if (this.driverRegistrationImmobilizerDigitalOutput_ != other.driverRegistrationImmobilizerDigitalOutput_) return false; 
/* 31292 */       if (getDriverRegistrationImmobilizerActiveLow() != other
/* 31293 */         .getDriverRegistrationImmobilizerActiveLow()) return false; 
/* 31294 */       if (getDriverRegistrationAuthorizedID1() != other
/* 31295 */         .getDriverRegistrationAuthorizedID1()) return false; 
/* 31296 */       if (getDriverRegistrationAuthorizedID2() != other
/* 31297 */         .getDriverRegistrationAuthorizedID2()) return false; 
/* 31298 */       if (getDriverRegistrationAuthorizedID3() != other
/* 31299 */         .getDriverRegistrationAuthorizedID3()) return false; 
/* 31300 */       if (getDriverRegistrationAuthorizedID4() != other
/* 31301 */         .getDriverRegistrationAuthorizedID4()) return false; 
/* 31302 */       if (getDriverRegistrationAuthorizedID5() != other
/* 31303 */         .getDriverRegistrationAuthorizedID5()) return false; 
/* 31304 */       if (getDriverRegistrationAuthorizedID6() != other
/* 31305 */         .getDriverRegistrationAuthorizedID6()) return false; 
/* 31306 */       if (getDriverRegistrationAuthorizedID7() != other
/* 31307 */         .getDriverRegistrationAuthorizedID7()) return false; 
/* 31308 */       if (getDriverRegistrationAuthorizedID8() != other
/* 31309 */         .getDriverRegistrationAuthorizedID8()) return false; 
/* 31310 */       if (getDriverRegistrationAuthorizedID9() != other
/* 31311 */         .getDriverRegistrationAuthorizedID9()) return false; 
/* 31312 */       if (getDriverRegistrationAuthorizedID10() != other
/* 31313 */         .getDriverRegistrationAuthorizedID10()) return false; 
/* 31314 */       if (getECODriveActive() != other
/* 31315 */         .getECODriveActive()) return false; 
/* 31316 */       if (getECOOverSpeedingLimit() != other
/* 31317 */         .getECOOverSpeedingLimit()) return false; 
/* 31318 */       if (getECORPMGreenBandLowLimit() != other
/* 31319 */         .getECORPMGreenBandLowLimit()) return false; 
/* 31320 */       if (getECORPMGreenBandHighLimit() != other
/* 31321 */         .getECORPMGreenBandHighLimit()) return false; 
/* 31322 */       if (getECOHarshBreakingLimit() != other
/* 31323 */         .getECOHarshBreakingLimit()) return false; 
/* 31324 */       if (getECOExtremeBreakingLimit() != other
/* 31325 */         .getECOExtremeBreakingLimit()) return false; 
/* 31326 */       if (getECOHarshAccelerationLimit() != other
/* 31327 */         .getECOHarshAccelerationLimit()) return false; 
/* 31328 */       if (getECOCorneringLimit() != other
/* 31329 */         .getECOCorneringLimit()) return false; 
/* 31330 */       if (getECOIdlingDelay() != other
/* 31331 */         .getECOIdlingDelay()) return false; 
/* 31332 */       if (getECOIdlingSpeed() != other
/* 31333 */         .getECOIdlingSpeed()) return false; 
/* 31334 */       if (getECOCruiseControlSpeed() != other
/* 31335 */         .getECOCruiseControlSpeed()) return false; 
/* 31336 */       if (getECOCalculateOnlyWhenEngineOn() != other
/* 31337 */         .getECOCalculateOnlyWhenEngineOn()) return false; 
/* 31338 */       if (getECOCustomEngineSource() != other
/* 31339 */         .getECOCustomEngineSource()) return false; 
/* 31340 */       if (getECOEngineOnDIN1() != other
/* 31341 */         .getECOEngineOnDIN1()) return false; 
/* 31342 */       if (getECOEngineOnDIN2() != other
/* 31343 */         .getECOEngineOnDIN2()) return false; 
/* 31344 */       if (getECOEngineOnMovementSensor() != other
/* 31345 */         .getECOEngineOnMovementSensor()) return false; 
/* 31346 */       if (getECOEngineOnPowerSupplyAvailable() != other
/* 31347 */         .getECOEngineOnPowerSupplyAvailable()) return false; 
/* 31348 */       if (getECOEngineOnCanRPMLow() != other
/* 31349 */         .getECOEngineOnCanRPMLow()) return false; 
/* 31350 */       if (getECOEngineOnCanRPMHigh() != other
/* 31351 */         .getECOEngineOnCanRPMHigh()) return false; 
/* 31352 */       if (this.eCOEngineOnOperator_ != other.eCOEngineOnOperator_) return false; 
/* 31353 */       if (getECOEngineOnExternalVoltage() != other
/* 31354 */         .getECOEngineOnExternalVoltage()) return false; 
/* 31355 */       if (this.eCUInterface_ != other.eCUInterface_) return false; 
/* 31356 */       if (this.fuelConsumptionEnabled_ != other.fuelConsumptionEnabled_) return false; 
/* 31357 */       if (getFuelConsumptionEngineDisplacement() != other
/* 31358 */         .getFuelConsumptionEngineDisplacement()) return false; 
/* 31359 */       if (getFuelConsumptionCylinders() != other
/* 31360 */         .getFuelConsumptionCylinders()) return false; 
/* 31361 */       if (getFuelConsumptionInjectorPerformance() != other
/* 31362 */         .getFuelConsumptionInjectorPerformance()) return false; 
/* 31363 */       if (getFuelConsumptionVolumetricEfficiently() != other
/* 31364 */         .getFuelConsumptionVolumetricEfficiently()) return false; 
/* 31365 */       if (getFaultCodesReadTime() != other
/* 31366 */         .getFaultCodesReadTime()) return false; 
/* 31367 */       if (getSIPAADLinkTimeout() != other
/* 31368 */         .getSIPAADLinkTimeout()) return false; 
/* 31369 */       if (getSIPAADResponseTimeout() != other
/* 31370 */         .getSIPAADResponseTimeout()) return false;
/*       */       
/* 31372 */       if (!getSIPAADServerAddress().equals(other.getSIPAADServerAddress())) return false; 
/* 31373 */       if (getSIPAADServerPort() != other
/* 31374 */         .getSIPAADServerPort()) return false; 
/* 31375 */       if (this.sIPAADServerProtocol_ != other.sIPAADServerProtocol_) return false; 
/* 31376 */       if (getSIPAADSSLClientAuthentication() != other
/* 31377 */         .getSIPAADSSLClientAuthentication()) return false; 
/* 31378 */       if (hasIOTime() != other.hasIOTime()) return false; 
/* 31379 */       if (hasIOTime() && 
/*       */         
/* 31381 */         !getIOTime().equals(other.getIOTime())) return false;
/*       */       
/* 31383 */       if (hasIOAngle() != other.hasIOAngle()) return false; 
/* 31384 */       if (hasIOAngle() && 
/*       */         
/* 31386 */         !getIOAngle().equals(other.getIOAngle())) return false;
/*       */       
/* 31388 */       if (hasIOSpeed() != other.hasIOSpeed()) return false; 
/* 31389 */       if (hasIOSpeed() && 
/*       */         
/* 31391 */         !getIOSpeed().equals(other.getIOSpeed())) return false;
/*       */       
/* 31393 */       if (hasIOSleepMode() != other.hasIOSleepMode()) return false; 
/* 31394 */       if (hasIOSleepMode() && 
/*       */         
/* 31396 */         !getIOSleepMode().equals(other.getIOSleepMode())) return false;
/*       */       
/* 31398 */       if (hasIOIgnition() != other.hasIOIgnition()) return false; 
/* 31399 */       if (hasIOIgnition() && 
/*       */         
/* 31401 */         !getIOIgnition().equals(other.getIOIgnition())) return false;
/*       */       
/* 31403 */       if (hasIOMovement() != other.hasIOMovement()) return false; 
/* 31404 */       if (hasIOMovement() && 
/*       */         
/* 31406 */         !getIOMovement().equals(other.getIOMovement())) return false;
/*       */       
/* 31408 */       if (hasIODataMode() != other.hasIODataMode()) return false; 
/* 31409 */       if (hasIODataMode() && 
/*       */         
/* 31411 */         !getIODataMode().equals(other.getIODataMode())) return false;
/*       */       
/* 31413 */       if (hasIOGnssStatus() != other.hasIOGnssStatus()) return false; 
/* 31414 */       if (hasIOGnssStatus() && 
/*       */         
/* 31416 */         !getIOGnssStatus().equals(other.getIOGnssStatus())) return false;
/*       */       
/* 31418 */       if (hasIOGnssHDOP() != other.hasIOGnssHDOP()) return false; 
/* 31419 */       if (hasIOGnssHDOP() && 
/*       */         
/* 31421 */         !getIOGnssHDOP().equals(other.getIOGnssHDOP())) return false;
/*       */       
/* 31423 */       if (hasIOGnssPDOP() != other.hasIOGnssPDOP()) return false; 
/* 31424 */       if (hasIOGnssPDOP() && 
/*       */         
/* 31426 */         !getIOGnssPDOP().equals(other.getIOGnssPDOP())) return false;
/*       */       
/* 31428 */       if (hasIOGnssJammingStatus() != other.hasIOGnssJammingStatus()) return false; 
/* 31429 */       if (hasIOGnssJammingStatus() && 
/*       */         
/* 31431 */         !getIOGnssJammingStatus().equals(other.getIOGnssJammingStatus())) return false;
/*       */       
/* 31433 */       if (hasIOGsmSignal() != other.hasIOGsmSignal()) return false; 
/* 31434 */       if (hasIOGsmSignal() && 
/*       */         
/* 31436 */         !getIOGsmSignal().equals(other.getIOGsmSignal())) return false;
/*       */       
/* 31438 */       if (hasIOGsmCellId() != other.hasIOGsmCellId()) return false; 
/* 31439 */       if (hasIOGsmCellId() && 
/*       */         
/* 31441 */         !getIOGsmCellId().equals(other.getIOGsmCellId())) return false;
/*       */       
/* 31443 */       if (hasIOGsmAreaCode() != other.hasIOGsmAreaCode()) return false; 
/* 31444 */       if (hasIOGsmAreaCode() && 
/*       */         
/* 31446 */         !getIOGsmAreaCode().equals(other.getIOGsmAreaCode())) return false;
/*       */       
/* 31448 */       if (hasIOGsmOperator() != other.hasIOGsmOperator()) return false; 
/* 31449 */       if (hasIOGsmOperator() && 
/*       */         
/* 31451 */         !getIOGsmOperator().equals(other.getIOGsmOperator())) return false;
/*       */       
/* 31453 */       if (hasIOGsmTemperature() != other.hasIOGsmTemperature()) return false; 
/* 31454 */       if (hasIOGsmTemperature() && 
/*       */         
/* 31456 */         !getIOGsmTemperature().equals(other.getIOGsmTemperature())) return false;
/*       */       
/* 31458 */       if (hasIOGsmJammingStatus() != other.hasIOGsmJammingStatus()) return false; 
/* 31459 */       if (hasIOGsmJammingStatus() && 
/*       */         
/* 31461 */         !getIOGsmJammingStatus().equals(other.getIOGsmJammingStatus())) return false;
/*       */       
/* 31463 */       if (hasIOExternalVoltage() != other.hasIOExternalVoltage()) return false; 
/* 31464 */       if (hasIOExternalVoltage() && 
/*       */         
/* 31466 */         !getIOExternalVoltage().equals(other.getIOExternalVoltage())) return false;
/*       */       
/* 31468 */       if (hasIOBatteryVoltage() != other.hasIOBatteryVoltage()) return false; 
/* 31469 */       if (hasIOBatteryVoltage() && 
/*       */         
/* 31471 */         !getIOBatteryVoltage().equals(other.getIOBatteryVoltage())) return false;
/*       */       
/* 31473 */       if (hasIOBatteryCurrent() != other.hasIOBatteryCurrent()) return false; 
/* 31474 */       if (hasIOBatteryCurrent() && 
/*       */         
/* 31476 */         !getIOBatteryCurrent().equals(other.getIOBatteryCurrent())) return false;
/*       */       
/* 31478 */       if (hasIOTotalOdometer() != other.hasIOTotalOdometer()) return false; 
/* 31479 */       if (hasIOTotalOdometer() && 
/*       */         
/* 31481 */         !getIOTotalOdometer().equals(other.getIOTotalOdometer())) return false;
/*       */       
/* 31483 */       if (hasIOOdometer() != other.hasIOOdometer()) return false; 
/* 31484 */       if (hasIOOdometer() && 
/*       */         
/* 31486 */         !getIOOdometer().equals(other.getIOOdometer())) return false;
/*       */       
/* 31488 */       if (hasIOEngineOnTime() != other.hasIOEngineOnTime()) return false; 
/* 31489 */       if (hasIOEngineOnTime() && 
/*       */         
/* 31491 */         !getIOEngineOnTime().equals(other.getIOEngineOnTime())) return false;
/*       */       
/* 31493 */       if (hasIOEngineOnTimeDelta() != other.hasIOEngineOnTimeDelta()) return false; 
/* 31494 */       if (hasIOEngineOnTimeDelta() && 
/*       */         
/* 31496 */         !getIOEngineOnTimeDelta().equals(other.getIOEngineOnTimeDelta())) return false;
/*       */       
/* 31498 */       if (hasIOIdlingTime() != other.hasIOIdlingTime()) return false; 
/* 31499 */       if (hasIOIdlingTime() && 
/*       */         
/* 31501 */         !getIOIdlingTime().equals(other.getIOIdlingTime())) return false;
/*       */       
/* 31503 */       if (hasIOIdlingTimeDelta() != other.hasIOIdlingTimeDelta()) return false; 
/* 31504 */       if (hasIOIdlingTimeDelta() && 
/*       */         
/* 31506 */         !getIOIdlingTimeDelta().equals(other.getIOIdlingTimeDelta())) return false;
/*       */       
/* 31508 */       if (hasIOSpeedSensorSpeed() != other.hasIOSpeedSensorSpeed()) return false; 
/* 31509 */       if (hasIOSpeedSensorSpeed() && 
/*       */         
/* 31511 */         !getIOSpeedSensorSpeed().equals(other.getIOSpeedSensorSpeed())) return false;
/*       */       
/* 31513 */       if (hasIOSpeedSensorDistance() != other.hasIOSpeedSensorDistance()) return false; 
/* 31514 */       if (hasIOSpeedSensorDistance() && 
/*       */         
/* 31516 */         !getIOSpeedSensorDistance().equals(other.getIOSpeedSensorDistance())) return false;
/*       */       
/* 31518 */       if (hasIOSpeedSensorTotalDistance() != other.hasIOSpeedSensorTotalDistance()) return false; 
/* 31519 */       if (hasIOSpeedSensorTotalDistance() && 
/*       */         
/* 31521 */         !getIOSpeedSensorTotalDistance().equals(other.getIOSpeedSensorTotalDistance())) return false;
/*       */       
/* 31523 */       if (hasIOSpeedSensorMaxSpeed() != other.hasIOSpeedSensorMaxSpeed()) return false; 
/* 31524 */       if (hasIOSpeedSensorMaxSpeed() && 
/*       */         
/* 31526 */         !getIOSpeedSensorMaxSpeed().equals(other.getIOSpeedSensorMaxSpeed())) return false;
/*       */       
/* 31528 */       if (hasIOSpeedSensorGPSSpeedDiff() != other.hasIOSpeedSensorGPSSpeedDiff()) return false; 
/* 31529 */       if (hasIOSpeedSensorGPSSpeedDiff() && 
/*       */         
/* 31531 */         !getIOSpeedSensorGPSSpeedDiff().equals(other.getIOSpeedSensorGPSSpeedDiff())) return false;
/*       */       
/* 31533 */       if (hasIODigitalInput1() != other.hasIODigitalInput1()) return false; 
/* 31534 */       if (hasIODigitalInput1() && 
/*       */         
/* 31536 */         !getIODigitalInput1().equals(other.getIODigitalInput1())) return false;
/*       */       
/* 31538 */       if (hasIODigitalInput2() != other.hasIODigitalInput2()) return false; 
/* 31539 */       if (hasIODigitalInput2() && 
/*       */         
/* 31541 */         !getIODigitalInput2().equals(other.getIODigitalInput2())) return false;
/*       */       
/* 31543 */       if (hasIOPowerSupply() != other.hasIOPowerSupply()) return false; 
/* 31544 */       if (hasIOPowerSupply() && 
/*       */         
/* 31546 */         !getIOPowerSupply().equals(other.getIOPowerSupply())) return false;
/*       */       
/* 31548 */       if (hasIODigitalInput3() != other.hasIODigitalInput3()) return false; 
/* 31549 */       if (hasIODigitalInput3() && 
/*       */         
/* 31551 */         !getIODigitalInput3().equals(other.getIODigitalInput3())) return false;
/*       */       
/* 31553 */       if (hasIOVehicleConnection() != other.hasIOVehicleConnection()) return false; 
/* 31554 */       if (hasIOVehicleConnection() && 
/*       */         
/* 31556 */         !getIOVehicleConnection().equals(other.getIOVehicleConnection())) return false;
/*       */       
/* 31558 */       if (hasIODigitalInput1Time() != other.hasIODigitalInput1Time()) return false; 
/* 31559 */       if (hasIODigitalInput1Time() && 
/*       */         
/* 31561 */         !getIODigitalInput1Time().equals(other.getIODigitalInput1Time())) return false;
/*       */       
/* 31563 */       if (hasIODigitalInput1TimeDelta() != other.hasIODigitalInput1TimeDelta()) return false; 
/* 31564 */       if (hasIODigitalInput1TimeDelta() && 
/*       */         
/* 31566 */         !getIODigitalInput1TimeDelta().equals(other.getIODigitalInput1TimeDelta())) return false;
/*       */       
/* 31568 */       if (hasIODigitalInput2Time() != other.hasIODigitalInput2Time()) return false; 
/* 31569 */       if (hasIODigitalInput2Time() && 
/*       */         
/* 31571 */         !getIODigitalInput2Time().equals(other.getIODigitalInput2Time())) return false;
/*       */       
/* 31573 */       if (hasIODigitalInput2TimeDelta() != other.hasIODigitalInput2TimeDelta()) return false; 
/* 31574 */       if (hasIODigitalInput2TimeDelta() && 
/*       */         
/* 31576 */         !getIODigitalInput2TimeDelta().equals(other.getIODigitalInput2TimeDelta())) return false;
/*       */       
/* 31578 */       if (hasIOPowerSupplyTime() != other.hasIOPowerSupplyTime()) return false; 
/* 31579 */       if (hasIOPowerSupplyTime() && 
/*       */         
/* 31581 */         !getIOPowerSupplyTime().equals(other.getIOPowerSupplyTime())) return false;
/*       */       
/* 31583 */       if (hasIOPowerSupplyTimeDelta() != other.hasIOPowerSupplyTimeDelta()) return false; 
/* 31584 */       if (hasIOPowerSupplyTimeDelta() && 
/*       */         
/* 31586 */         !getIOPowerSupplyTimeDelta().equals(other.getIOPowerSupplyTimeDelta())) return false;
/*       */       
/* 31588 */       if (hasIODigitalInput3Time() != other.hasIODigitalInput3Time()) return false; 
/* 31589 */       if (hasIODigitalInput3Time() && 
/*       */         
/* 31591 */         !getIODigitalInput3Time().equals(other.getIODigitalInput3Time())) return false;
/*       */       
/* 31593 */       if (hasIODigitalInput3TimeDelta() != other.hasIODigitalInput3TimeDelta()) return false; 
/* 31594 */       if (hasIODigitalInput3TimeDelta() && 
/*       */         
/* 31596 */         !getIODigitalInput3TimeDelta().equals(other.getIODigitalInput3TimeDelta())) return false;
/*       */       
/* 31598 */       if (hasIODigitalOutput1() != other.hasIODigitalOutput1()) return false; 
/* 31599 */       if (hasIODigitalOutput1() && 
/*       */         
/* 31601 */         !getIODigitalOutput1().equals(other.getIODigitalOutput1())) return false;
/*       */       
/* 31603 */       if (hasIODigitalOutput2() != other.hasIODigitalOutput2()) return false; 
/* 31604 */       if (hasIODigitalOutput2() && 
/*       */         
/* 31606 */         !getIODigitalOutput2().equals(other.getIODigitalOutput2())) return false;
/*       */       
/* 31608 */       if (hasIOAnalogInput1() != other.hasIOAnalogInput1()) return false; 
/* 31609 */       if (hasIOAnalogInput1() && 
/*       */         
/* 31611 */         !getIOAnalogInput1().equals(other.getIOAnalogInput1())) return false;
/*       */       
/* 31613 */       if (hasIOAnalogInput2() != other.hasIOAnalogInput2()) return false; 
/* 31614 */       if (hasIOAnalogInput2() && 
/*       */         
/* 31616 */         !getIOAnalogInput2().equals(other.getIOAnalogInput2())) return false;
/*       */       
/* 31618 */       if (hasIOAnalogInput3() != other.hasIOAnalogInput3()) return false; 
/* 31619 */       if (hasIOAnalogInput3() && 
/*       */         
/* 31621 */         !getIOAnalogInput3().equals(other.getIOAnalogInput3())) return false;
/*       */       
/* 31623 */       if (hasIOAxisX() != other.hasIOAxisX()) return false; 
/* 31624 */       if (hasIOAxisX() && 
/*       */         
/* 31626 */         !getIOAxisX().equals(other.getIOAxisX())) return false;
/*       */       
/* 31628 */       if (hasIOAxisY() != other.hasIOAxisY()) return false; 
/* 31629 */       if (hasIOAxisY() && 
/*       */         
/* 31631 */         !getIOAxisY().equals(other.getIOAxisY())) return false;
/*       */       
/* 31633 */       if (hasIOAxisZ() != other.hasIOAxisZ()) return false; 
/* 31634 */       if (hasIOAxisZ() && 
/*       */         
/* 31636 */         !getIOAxisZ().equals(other.getIOAxisZ())) return false;
/*       */       
/* 31638 */       if (hasIOECOMaxSpeed() != other.hasIOECOMaxSpeed()) return false; 
/* 31639 */       if (hasIOECOMaxSpeed() && 
/*       */         
/* 31641 */         !getIOECOMaxSpeed().equals(other.getIOECOMaxSpeed())) return false;
/*       */       
/* 31643 */       if (hasIOECONormalSpeedDistance() != other.hasIOECONormalSpeedDistance()) return false; 
/* 31644 */       if (hasIOECONormalSpeedDistance() && 
/*       */         
/* 31646 */         !getIOECONormalSpeedDistance().equals(other.getIOECONormalSpeedDistance())) return false;
/*       */       
/* 31648 */       if (hasIOECONormalSpeedTotalDistance() != other.hasIOECONormalSpeedTotalDistance()) return false; 
/* 31649 */       if (hasIOECONormalSpeedTotalDistance() && 
/*       */         
/* 31651 */         !getIOECONormalSpeedTotalDistance().equals(other.getIOECONormalSpeedTotalDistance())) return false;
/*       */       
/* 31653 */       if (hasIOECONormalSpeedTimer() != other.hasIOECONormalSpeedTimer()) return false; 
/* 31654 */       if (hasIOECONormalSpeedTimer() && 
/*       */         
/* 31656 */         !getIOECONormalSpeedTimer().equals(other.getIOECONormalSpeedTimer())) return false;
/*       */       
/* 31658 */       if (hasIOECONormalSpeedTotalTimer() != other.hasIOECONormalSpeedTotalTimer()) return false; 
/* 31659 */       if (hasIOECONormalSpeedTotalTimer() && 
/*       */         
/* 31661 */         !getIOECONormalSpeedTotalTimer().equals(other.getIOECONormalSpeedTotalTimer())) return false;
/*       */       
/* 31663 */       if (hasIOECOOverSpeedingDistance() != other.hasIOECOOverSpeedingDistance()) return false; 
/* 31664 */       if (hasIOECOOverSpeedingDistance() && 
/*       */         
/* 31666 */         !getIOECOOverSpeedingDistance().equals(other.getIOECOOverSpeedingDistance())) return false;
/*       */       
/* 31668 */       if (hasIOECOOverSpeedingTotalDistance() != other.hasIOECOOverSpeedingTotalDistance()) return false; 
/* 31669 */       if (hasIOECOOverSpeedingTotalDistance() && 
/*       */         
/* 31671 */         !getIOECOOverSpeedingTotalDistance().equals(other.getIOECOOverSpeedingTotalDistance())) return false;
/*       */       
/* 31673 */       if (hasIOECOOverSpeedingTimer() != other.hasIOECOOverSpeedingTimer()) return false; 
/* 31674 */       if (hasIOECOOverSpeedingTimer() && 
/*       */         
/* 31676 */         !getIOECOOverSpeedingTimer().equals(other.getIOECOOverSpeedingTimer())) return false;
/*       */       
/* 31678 */       if (hasIOECOOverSpeedingTotalTimer() != other.hasIOECOOverSpeedingTotalTimer()) return false; 
/* 31679 */       if (hasIOECOOverSpeedingTotalTimer() && 
/*       */         
/* 31681 */         !getIOECOOverSpeedingTotalTimer().equals(other.getIOECOOverSpeedingTotalTimer())) return false;
/*       */       
/* 31683 */       if (hasIOECOMaxRPM() != other.hasIOECOMaxRPM()) return false; 
/* 31684 */       if (hasIOECOMaxRPM() && 
/*       */         
/* 31686 */         !getIOECOMaxRPM().equals(other.getIOECOMaxRPM())) return false;
/*       */       
/* 31688 */       if (hasIOECORPMGreenBandDistance() != other.hasIOECORPMGreenBandDistance()) return false; 
/* 31689 */       if (hasIOECORPMGreenBandDistance() && 
/*       */         
/* 31691 */         !getIOECORPMGreenBandDistance().equals(other.getIOECORPMGreenBandDistance())) return false;
/*       */       
/* 31693 */       if (hasIOECORPMGreenBandTotalDistance() != other.hasIOECORPMGreenBandTotalDistance()) return false; 
/* 31694 */       if (hasIOECORPMGreenBandTotalDistance() && 
/*       */         
/* 31696 */         !getIOECORPMGreenBandTotalDistance().equals(other.getIOECORPMGreenBandTotalDistance())) return false;
/*       */       
/* 31698 */       if (hasIOECORPMGreenBandTimer() != other.hasIOECORPMGreenBandTimer()) return false; 
/* 31699 */       if (hasIOECORPMGreenBandTimer() && 
/*       */         
/* 31701 */         !getIOECORPMGreenBandTimer().equals(other.getIOECORPMGreenBandTimer())) return false;
/*       */       
/* 31703 */       if (hasIOECORPMGreenBandTotalTimer() != other.hasIOECORPMGreenBandTotalTimer()) return false; 
/* 31704 */       if (hasIOECORPMGreenBandTotalTimer() && 
/*       */         
/* 31706 */         !getIOECORPMGreenBandTotalTimer().equals(other.getIOECORPMGreenBandTotalTimer())) return false;
/*       */       
/* 31708 */       if (hasIOECOOverRPMDistance() != other.hasIOECOOverRPMDistance()) return false; 
/* 31709 */       if (hasIOECOOverRPMDistance() && 
/*       */         
/* 31711 */         !getIOECOOverRPMDistance().equals(other.getIOECOOverRPMDistance())) return false;
/*       */       
/* 31713 */       if (hasIOECOOverRPMTotalDistance() != other.hasIOECOOverRPMTotalDistance()) return false; 
/* 31714 */       if (hasIOECOOverRPMTotalDistance() && 
/*       */         
/* 31716 */         !getIOECOOverRPMTotalDistance().equals(other.getIOECOOverRPMTotalDistance())) return false;
/*       */       
/* 31718 */       if (hasIOECOOverRPMTimer() != other.hasIOECOOverRPMTimer()) return false; 
/* 31719 */       if (hasIOECOOverRPMTimer() && 
/*       */         
/* 31721 */         !getIOECOOverRPMTimer().equals(other.getIOECOOverRPMTimer())) return false;
/*       */       
/* 31723 */       if (hasIOECOOverRPMTotalTimer() != other.hasIOECOOverRPMTotalTimer()) return false; 
/* 31724 */       if (hasIOECOOverRPMTotalTimer() && 
/*       */         
/* 31726 */         !getIOECOOverRPMTotalTimer().equals(other.getIOECOOverRPMTotalTimer())) return false;
/*       */       
/* 31728 */       if (hasIOECOIdlingEvent() != other.hasIOECOIdlingEvent()) return false; 
/* 31729 */       if (hasIOECOIdlingEvent() && 
/*       */         
/* 31731 */         !getIOECOIdlingEvent().equals(other.getIOECOIdlingEvent())) return false;
/*       */       
/* 31733 */       if (hasIOECOCruiseControlTimer() != other.hasIOECOCruiseControlTimer()) return false; 
/* 31734 */       if (hasIOECOCruiseControlTimer() && 
/*       */         
/* 31736 */         !getIOECOCruiseControlTimer().equals(other.getIOECOCruiseControlTimer())) return false;
/*       */       
/* 31738 */       if (hasIOECOCruiseControlTotalTimer() != other.hasIOECOCruiseControlTotalTimer()) return false; 
/* 31739 */       if (hasIOECOCruiseControlTotalTimer() && 
/*       */         
/* 31741 */         !getIOECOCruiseControlTotalTimer().equals(other.getIOECOCruiseControlTotalTimer())) return false;
/*       */       
/* 31743 */       if (hasIOECOCruiseControlDistance() != other.hasIOECOCruiseControlDistance()) return false; 
/* 31744 */       if (hasIOECOCruiseControlDistance() && 
/*       */         
/* 31746 */         !getIOECOCruiseControlDistance().equals(other.getIOECOCruiseControlDistance())) return false;
/*       */       
/* 31748 */       if (hasIOECOCruiseControlTotalDistance() != other.hasIOECOCruiseControlTotalDistance()) return false; 
/* 31749 */       if (hasIOECOCruiseControlTotalDistance() && 
/*       */         
/* 31751 */         !getIOECOCruiseControlTotalDistance().equals(other.getIOECOCruiseControlTotalDistance())) return false;
/*       */       
/* 31753 */       if (hasIOECOUnderRPMDistance() != other.hasIOECOUnderRPMDistance()) return false; 
/* 31754 */       if (hasIOECOUnderRPMDistance() && 
/*       */         
/* 31756 */         !getIOECOUnderRPMDistance().equals(other.getIOECOUnderRPMDistance())) return false;
/*       */       
/* 31758 */       if (hasIOECOUnderRPMTotalDistance() != other.hasIOECOUnderRPMTotalDistance()) return false; 
/* 31759 */       if (hasIOECOUnderRPMTotalDistance() && 
/*       */         
/* 31761 */         !getIOECOUnderRPMTotalDistance().equals(other.getIOECOUnderRPMTotalDistance())) return false;
/*       */       
/* 31763 */       if (hasIOECOUnderRPMTimer() != other.hasIOECOUnderRPMTimer()) return false; 
/* 31764 */       if (hasIOECOUnderRPMTimer() && 
/*       */         
/* 31766 */         !getIOECOUnderRPMTimer().equals(other.getIOECOUnderRPMTimer())) return false;
/*       */       
/* 31768 */       if (hasIOECOUnderRPMTotalTimer() != other.hasIOECOUnderRPMTotalTimer()) return false; 
/* 31769 */       if (hasIOECOUnderRPMTotalTimer() && 
/*       */         
/* 31771 */         !getIOECOUnderRPMTotalTimer().equals(other.getIOECOUnderRPMTotalTimer())) return false;
/*       */       
/* 31773 */       if (hasIOECOBreakCounter() != other.hasIOECOBreakCounter()) return false; 
/* 31774 */       if (hasIOECOBreakCounter() && 
/*       */         
/* 31776 */         !getIOECOBreakCounter().equals(other.getIOECOBreakCounter())) return false;
/*       */       
/* 31778 */       if (hasIOECOHarshBreakCounter() != other.hasIOECOHarshBreakCounter()) return false; 
/* 31779 */       if (hasIOECOHarshBreakCounter() && 
/*       */         
/* 31781 */         !getIOECOHarshBreakCounter().equals(other.getIOECOHarshBreakCounter())) return false;
/*       */       
/* 31783 */       if (hasIOECOExtremeBreakCounter() != other.hasIOECOExtremeBreakCounter()) return false; 
/* 31784 */       if (hasIOECOExtremeBreakCounter() && 
/*       */         
/* 31786 */         !getIOECOExtremeBreakCounter().equals(other.getIOECOExtremeBreakCounter())) return false;
/*       */       
/* 31788 */       if (hasIOECOHarshAccelerationCounter() != other.hasIOECOHarshAccelerationCounter()) return false; 
/* 31789 */       if (hasIOECOHarshAccelerationCounter() && 
/*       */         
/* 31791 */         !getIOECOHarshAccelerationCounter().equals(other.getIOECOHarshAccelerationCounter())) return false;
/*       */       
/* 31793 */       if (hasIOECOCorneringCounter() != other.hasIOECOCorneringCounter()) return false; 
/* 31794 */       if (hasIOECOCorneringCounter() && 
/*       */         
/* 31796 */         !getIOECOCorneringCounter().equals(other.getIOECOCorneringCounter())) return false;
/*       */       
/* 31798 */       if (hasIOECOTotalBreak() != other.hasIOECOTotalBreak()) return false; 
/* 31799 */       if (hasIOECOTotalBreak() && 
/*       */         
/* 31801 */         !getIOECOTotalBreak().equals(other.getIOECOTotalBreak())) return false;
/*       */       
/* 31803 */       if (hasIOECOTotalHarshBreak() != other.hasIOECOTotalHarshBreak()) return false; 
/* 31804 */       if (hasIOECOTotalHarshBreak() && 
/*       */         
/* 31806 */         !getIOECOTotalHarshBreak().equals(other.getIOECOTotalHarshBreak())) return false;
/*       */       
/* 31808 */       if (hasIOECOTotalExtremeBreak() != other.hasIOECOTotalExtremeBreak()) return false; 
/* 31809 */       if (hasIOECOTotalExtremeBreak() && 
/*       */         
/* 31811 */         !getIOECOTotalExtremeBreak().equals(other.getIOECOTotalExtremeBreak())) return false;
/*       */       
/* 31813 */       if (hasIOECOTotalHarshAcceleration() != other.hasIOECOTotalHarshAcceleration()) return false; 
/* 31814 */       if (hasIOECOTotalHarshAcceleration() && 
/*       */         
/* 31816 */         !getIOECOTotalHarshAcceleration().equals(other.getIOECOTotalHarshAcceleration())) return false;
/*       */       
/* 31818 */       if (hasIOECOTotalCornering() != other.hasIOECOTotalCornering()) return false; 
/* 31819 */       if (hasIOECOTotalCornering() && 
/*       */         
/* 31821 */         !getIOECOTotalCornering().equals(other.getIOECOTotalCornering())) return false;
/*       */       
/* 31823 */       if (hasIOTrip() != other.hasIOTrip()) return false; 
/* 31824 */       if (hasIOTrip() && 
/*       */         
/* 31826 */         !getIOTrip().equals(other.getIOTrip())) return false;
/*       */       
/* 31828 */       if (hasIOTripTime() != other.hasIOTripTime()) return false; 
/* 31829 */       if (hasIOTripTime() && 
/*       */         
/* 31831 */         !getIOTripTime().equals(other.getIOTripTime())) return false;
/*       */       
/* 31833 */       if (hasIOTripDistance() != other.hasIOTripDistance()) return false; 
/* 31834 */       if (hasIOTripDistance() && 
/*       */         
/* 31836 */         !getIOTripDistance().equals(other.getIOTripDistance())) return false;
/*       */       
/* 31838 */       if (hasIODriverID() != other.hasIODriverID()) return false; 
/* 31839 */       if (hasIODriverID() && 
/*       */         
/* 31841 */         !getIODriverID().equals(other.getIODriverID())) return false;
/*       */       
/* 31843 */       if (hasIOTemperatureSensor1() != other.hasIOTemperatureSensor1()) return false; 
/* 31844 */       if (hasIOTemperatureSensor1() && 
/*       */         
/* 31846 */         !getIOTemperatureSensor1().equals(other.getIOTemperatureSensor1())) return false;
/*       */       
/* 31848 */       if (hasIOTemperatureSensor1ID() != other.hasIOTemperatureSensor1ID()) return false; 
/* 31849 */       if (hasIOTemperatureSensor1ID() && 
/*       */         
/* 31851 */         !getIOTemperatureSensor1ID().equals(other.getIOTemperatureSensor1ID())) return false;
/*       */       
/* 31853 */       if (hasIOTemperatureSensor2() != other.hasIOTemperatureSensor2()) return false; 
/* 31854 */       if (hasIOTemperatureSensor2() && 
/*       */         
/* 31856 */         !getIOTemperatureSensor2().equals(other.getIOTemperatureSensor2())) return false;
/*       */       
/* 31858 */       if (hasIOTemperatureSensor2ID() != other.hasIOTemperatureSensor2ID()) return false; 
/* 31859 */       if (hasIOTemperatureSensor2ID() && 
/*       */         
/* 31861 */         !getIOTemperatureSensor2ID().equals(other.getIOTemperatureSensor2ID())) return false;
/*       */       
/* 31863 */       if (hasIOTemperatureSensor3() != other.hasIOTemperatureSensor3()) return false; 
/* 31864 */       if (hasIOTemperatureSensor3() && 
/*       */         
/* 31866 */         !getIOTemperatureSensor3().equals(other.getIOTemperatureSensor3())) return false;
/*       */       
/* 31868 */       if (hasIOTemperatureSensor3ID() != other.hasIOTemperatureSensor3ID()) return false; 
/* 31869 */       if (hasIOTemperatureSensor3ID() && 
/*       */         
/* 31871 */         !getIOTemperatureSensor3ID().equals(other.getIOTemperatureSensor3ID())) return false;
/*       */       
/* 31873 */       if (hasIOHumiditySensor1() != other.hasIOHumiditySensor1()) return false; 
/* 31874 */       if (hasIOHumiditySensor1() && 
/*       */         
/* 31876 */         !getIOHumiditySensor1().equals(other.getIOHumiditySensor1())) return false;
/*       */       
/* 31878 */       if (hasIOTiltStatus() != other.hasIOTiltStatus()) return false; 
/* 31879 */       if (hasIOTiltStatus() && 
/*       */         
/* 31881 */         !getIOTiltStatus().equals(other.getIOTiltStatus())) return false;
/*       */       
/* 31883 */       if (hasIOOBDEngineRPM() != other.hasIOOBDEngineRPM()) return false; 
/* 31884 */       if (hasIOOBDEngineRPM() && 
/*       */         
/* 31886 */         !getIOOBDEngineRPM().equals(other.getIOOBDEngineRPM())) return false;
/*       */       
/* 31888 */       if (hasIOOBDBatteryVoltage() != other.hasIOOBDBatteryVoltage()) return false; 
/* 31889 */       if (hasIOOBDBatteryVoltage() && 
/*       */         
/* 31891 */         !getIOOBDBatteryVoltage().equals(other.getIOOBDBatteryVoltage())) return false;
/*       */       
/* 31893 */       if (hasIOOBDEngineCoolantTemperature() != other.hasIOOBDEngineCoolantTemperature()) return false; 
/* 31894 */       if (hasIOOBDEngineCoolantTemperature() && 
/*       */         
/* 31896 */         !getIOOBDEngineCoolantTemperature().equals(other.getIOOBDEngineCoolantTemperature())) return false;
/*       */       
/* 31898 */       if (hasIOOBDVehicleSpeed() != other.hasIOOBDVehicleSpeed()) return false; 
/* 31899 */       if (hasIOOBDVehicleSpeed() && 
/*       */         
/* 31901 */         !getIOOBDVehicleSpeed().equals(other.getIOOBDVehicleSpeed())) return false;
/*       */       
/* 31903 */       if (hasIOOBDTotalDistance() != other.hasIOOBDTotalDistance()) return false; 
/* 31904 */       if (hasIOOBDTotalDistance() && 
/*       */         
/* 31906 */         !getIOOBDTotalDistance().equals(other.getIOOBDTotalDistance())) return false;
/*       */       
/* 31908 */       if (hasIOOBDFuelRate() != other.hasIOOBDFuelRate()) return false; 
/* 31909 */       if (hasIOOBDFuelRate() && 
/*       */         
/* 31911 */         !getIOOBDFuelRate().equals(other.getIOOBDFuelRate())) return false;
/*       */       
/* 31913 */       if (hasIOOBDTotalFuelUsed() != other.hasIOOBDTotalFuelUsed()) return false; 
/* 31914 */       if (hasIOOBDTotalFuelUsed() && 
/*       */         
/* 31916 */         !getIOOBDTotalFuelUsed().equals(other.getIOOBDTotalFuelUsed())) return false;
/*       */       
/* 31918 */       if (hasIOOBDIntakeAirTemperature() != other.hasIOOBDIntakeAirTemperature()) return false; 
/* 31919 */       if (hasIOOBDIntakeAirTemperature() && 
/*       */         
/* 31921 */         !getIOOBDIntakeAirTemperature().equals(other.getIOOBDIntakeAirTemperature())) return false;
/*       */       
/* 31923 */       if (hasIOOBDIntakeManifoldAbsolutePressure() != other.hasIOOBDIntakeManifoldAbsolutePressure()) return false; 
/* 31924 */       if (hasIOOBDIntakeManifoldAbsolutePressure() && 
/*       */         
/* 31926 */         !getIOOBDIntakeManifoldAbsolutePressure().equals(other.getIOOBDIntakeManifoldAbsolutePressure())) return false;
/*       */       
/* 31928 */       if (hasIOOBDMalfunctionIndicatorLamp() != other.hasIOOBDMalfunctionIndicatorLamp()) return false; 
/* 31929 */       if (hasIOOBDMalfunctionIndicatorLamp() && 
/*       */         
/* 31931 */         !getIOOBDMalfunctionIndicatorLamp().equals(other.getIOOBDMalfunctionIndicatorLamp())) return false;
/*       */       
/* 31933 */       if (hasIODiagnosticTroubleCodesCount() != other.hasIODiagnosticTroubleCodesCount()) return false; 
/* 31934 */       if (hasIODiagnosticTroubleCodesCount() && 
/*       */         
/* 31936 */         !getIODiagnosticTroubleCodesCount().equals(other.getIODiagnosticTroubleCodesCount())) return false;
/*       */       
/* 31938 */       if (hasIOOBDCalculatedEngineLoad() != other.hasIOOBDCalculatedEngineLoad()) return false; 
/* 31939 */       if (hasIOOBDCalculatedEngineLoad() && 
/*       */         
/* 31941 */         !getIOOBDCalculatedEngineLoad().equals(other.getIOOBDCalculatedEngineLoad())) return false;
/*       */       
/* 31943 */       if (hasIOOBDMassAirFlowRate() != other.hasIOOBDMassAirFlowRate()) return false; 
/* 31944 */       if (hasIOOBDMassAirFlowRate() && 
/*       */         
/* 31946 */         !getIOOBDMassAirFlowRate().equals(other.getIOOBDMassAirFlowRate())) return false;
/*       */       
/* 31948 */       if (hasIOOBDThrottlePosition() != other.hasIOOBDThrottlePosition()) return false; 
/* 31949 */       if (hasIOOBDThrottlePosition() && 
/*       */         
/* 31951 */         !getIOOBDThrottlePosition().equals(other.getIOOBDThrottlePosition())) return false;
/*       */       
/* 31953 */       if (hasIOOBDRunTimeSinceEngineStart() != other.hasIOOBDRunTimeSinceEngineStart()) return false; 
/* 31954 */       if (hasIOOBDRunTimeSinceEngineStart() && 
/*       */         
/* 31956 */         !getIOOBDRunTimeSinceEngineStart().equals(other.getIOOBDRunTimeSinceEngineStart())) return false;
/*       */       
/* 31958 */       if (hasIOOBDFuelTankLevelInput() != other.hasIOOBDFuelTankLevelInput()) return false; 
/* 31959 */       if (hasIOOBDFuelTankLevelInput() && 
/*       */         
/* 31961 */         !getIOOBDFuelTankLevelInput().equals(other.getIOOBDFuelTankLevelInput())) return false;
/*       */       
/* 31963 */       if (hasIOOBDDistanceTraveledSinceCodesCleared() != other.hasIOOBDDistanceTraveledSinceCodesCleared()) return false; 
/* 31964 */       if (hasIOOBDDistanceTraveledSinceCodesCleared() && 
/*       */         
/* 31966 */         !getIOOBDDistanceTraveledSinceCodesCleared().equals(other.getIOOBDDistanceTraveledSinceCodesCleared())) return false;
/*       */       
/* 31968 */       if (hasIOOBDAbsoluteThrottlePositionD() != other.hasIOOBDAbsoluteThrottlePositionD()) return false; 
/* 31969 */       if (hasIOOBDAbsoluteThrottlePositionD() && 
/*       */         
/* 31971 */         !getIOOBDAbsoluteThrottlePositionD().equals(other.getIOOBDAbsoluteThrottlePositionD())) return false;
/*       */       
/* 31973 */       if (hasIOOBDTimeRunWithMILOn() != other.hasIOOBDTimeRunWithMILOn()) return false; 
/* 31974 */       if (hasIOOBDTimeRunWithMILOn() && 
/*       */         
/* 31976 */         !getIOOBDTimeRunWithMILOn().equals(other.getIOOBDTimeRunWithMILOn())) return false;
/*       */       
/* 31978 */       if (hasIOOBDEngineOilTemperature() != other.hasIOOBDEngineOilTemperature()) return false; 
/* 31979 */       if (hasIOOBDEngineOilTemperature() && 
/*       */         
/* 31981 */         !getIOOBDEngineOilTemperature().equals(other.getIOOBDEngineOilTemperature())) return false;
/*       */       
/* 31983 */       if (hasIOOBDFuelSystem1Status() != other.hasIOOBDFuelSystem1Status()) return false; 
/* 31984 */       if (hasIOOBDFuelSystem1Status() && 
/*       */         
/* 31986 */         !getIOOBDFuelSystem1Status().equals(other.getIOOBDFuelSystem1Status())) return false;
/*       */       
/* 31988 */       if (hasIOOBDFuelSystem2Status() != other.hasIOOBDFuelSystem2Status()) return false; 
/* 31989 */       if (hasIOOBDFuelSystem2Status() && 
/*       */         
/* 31991 */         !getIOOBDFuelSystem2Status().equals(other.getIOOBDFuelSystem2Status())) return false;
/*       */       
/* 31993 */       if (hasIOOBDOxygenSensor1Voltage() != other.hasIOOBDOxygenSensor1Voltage()) return false; 
/* 31994 */       if (hasIOOBDOxygenSensor1Voltage() && 
/*       */         
/* 31996 */         !getIOOBDOxygenSensor1Voltage().equals(other.getIOOBDOxygenSensor1Voltage())) return false;
/*       */       
/* 31998 */       if (hasIOOBDOxygenSensor1ShortTermFuelTrim() != other.hasIOOBDOxygenSensor1ShortTermFuelTrim()) return false; 
/* 31999 */       if (hasIOOBDOxygenSensor1ShortTermFuelTrim() && 
/*       */         
/* 32001 */         !getIOOBDOxygenSensor1ShortTermFuelTrim().equals(other.getIOOBDOxygenSensor1ShortTermFuelTrim())) return false;
/*       */       
/* 32003 */       if (hasIOOBDOxygenSensor2Voltage() != other.hasIOOBDOxygenSensor2Voltage()) return false; 
/* 32004 */       if (hasIOOBDOxygenSensor2Voltage() && 
/*       */         
/* 32006 */         !getIOOBDOxygenSensor2Voltage().equals(other.getIOOBDOxygenSensor2Voltage())) return false;
/*       */       
/* 32008 */       if (hasIOOBDOxygenSensor2ShortTermFuelTrim() != other.hasIOOBDOxygenSensor2ShortTermFuelTrim()) return false; 
/* 32009 */       if (hasIOOBDOxygenSensor2ShortTermFuelTrim() && 
/*       */         
/* 32011 */         !getIOOBDOxygenSensor2ShortTermFuelTrim().equals(other.getIOOBDOxygenSensor2ShortTermFuelTrim())) return false;
/*       */       
/* 32013 */       if (hasIOOBDOxygenSensor3Voltage() != other.hasIOOBDOxygenSensor3Voltage()) return false; 
/* 32014 */       if (hasIOOBDOxygenSensor3Voltage() && 
/*       */         
/* 32016 */         !getIOOBDOxygenSensor3Voltage().equals(other.getIOOBDOxygenSensor3Voltage())) return false;
/*       */       
/* 32018 */       if (hasIOOBDOxygenSensor3ShortTermFuelTrim() != other.hasIOOBDOxygenSensor3ShortTermFuelTrim()) return false; 
/* 32019 */       if (hasIOOBDOxygenSensor3ShortTermFuelTrim() && 
/*       */         
/* 32021 */         !getIOOBDOxygenSensor3ShortTermFuelTrim().equals(other.getIOOBDOxygenSensor3ShortTermFuelTrim())) return false;
/*       */       
/* 32023 */       if (hasIOOBDOxygenSensor4Voltage() != other.hasIOOBDOxygenSensor4Voltage()) return false; 
/* 32024 */       if (hasIOOBDOxygenSensor4Voltage() && 
/*       */         
/* 32026 */         !getIOOBDOxygenSensor4Voltage().equals(other.getIOOBDOxygenSensor4Voltage())) return false;
/*       */       
/* 32028 */       if (hasIOOBDOxygenSensor4ShortTermFuelTrim() != other.hasIOOBDOxygenSensor4ShortTermFuelTrim()) return false; 
/* 32029 */       if (hasIOOBDOxygenSensor4ShortTermFuelTrim() && 
/*       */         
/* 32031 */         !getIOOBDOxygenSensor4ShortTermFuelTrim().equals(other.getIOOBDOxygenSensor4ShortTermFuelTrim())) return false;
/*       */       
/* 32033 */       if (hasIOCANBusTachograph1WorkingState1() != other.hasIOCANBusTachograph1WorkingState1()) return false; 
/* 32034 */       if (hasIOCANBusTachograph1WorkingState1() && 
/*       */         
/* 32036 */         !getIOCANBusTachograph1WorkingState1().equals(other.getIOCANBusTachograph1WorkingState1())) return false;
/*       */       
/* 32038 */       if (hasIOCANBusTachograph1WorkingState2() != other.hasIOCANBusTachograph1WorkingState2()) return false; 
/* 32039 */       if (hasIOCANBusTachograph1WorkingState2() && 
/*       */         
/* 32041 */         !getIOCANBusTachograph1WorkingState2().equals(other.getIOCANBusTachograph1WorkingState2())) return false;
/*       */       
/* 32043 */       if (hasIOCANBusTachograph1VehicleMotion() != other.hasIOCANBusTachograph1VehicleMotion()) return false; 
/* 32044 */       if (hasIOCANBusTachograph1VehicleMotion() && 
/*       */         
/* 32046 */         !getIOCANBusTachograph1VehicleMotion().equals(other.getIOCANBusTachograph1VehicleMotion())) return false;
/*       */       
/* 32048 */       if (hasIOCANBusTachograph1Driv1TimeRelStates() != other.hasIOCANBusTachograph1Driv1TimeRelStates()) return false; 
/* 32049 */       if (hasIOCANBusTachograph1Driv1TimeRelStates() && 
/*       */         
/* 32051 */         !getIOCANBusTachograph1Driv1TimeRelStates().equals(other.getIOCANBusTachograph1Driv1TimeRelStates())) return false;
/*       */       
/* 32053 */       if (hasIOCANBusTachograph1Driver1Card() != other.hasIOCANBusTachograph1Driver1Card()) return false; 
/* 32054 */       if (hasIOCANBusTachograph1Driver1Card() && 
/*       */         
/* 32056 */         !getIOCANBusTachograph1Driver1Card().equals(other.getIOCANBusTachograph1Driver1Card())) return false;
/*       */       
/* 32058 */       if (hasIOCANBusTachograph1VehicleOverspeed() != other.hasIOCANBusTachograph1VehicleOverspeed()) return false; 
/* 32059 */       if (hasIOCANBusTachograph1VehicleOverspeed() && 
/*       */         
/* 32061 */         !getIOCANBusTachograph1VehicleOverspeed().equals(other.getIOCANBusTachograph1VehicleOverspeed())) return false;
/*       */       
/* 32063 */       if (hasIOCANBusTachograph1Driv2TimeRelStates() != other.hasIOCANBusTachograph1Driv2TimeRelStates()) return false; 
/* 32064 */       if (hasIOCANBusTachograph1Driv2TimeRelStates() && 
/*       */         
/* 32066 */         !getIOCANBusTachograph1Driv2TimeRelStates().equals(other.getIOCANBusTachograph1Driv2TimeRelStates())) return false;
/*       */       
/* 32068 */       if (hasIOCANBusTachograph1Driver2Card() != other.hasIOCANBusTachograph1Driver2Card()) return false; 
/* 32069 */       if (hasIOCANBusTachograph1Driver2Card() && 
/*       */         
/* 32071 */         !getIOCANBusTachograph1Driver2Card().equals(other.getIOCANBusTachograph1Driver2Card())) return false;
/*       */       
/* 32073 */       if (hasIOCANBusTachograph1SystemEvent() != other.hasIOCANBusTachograph1SystemEvent()) return false; 
/* 32074 */       if (hasIOCANBusTachograph1SystemEvent() && 
/*       */         
/* 32076 */         !getIOCANBusTachograph1SystemEvent().equals(other.getIOCANBusTachograph1SystemEvent())) return false;
/*       */       
/* 32078 */       if (hasIOCANBusTachograph1HandlingInformation() != other.hasIOCANBusTachograph1HandlingInformation()) return false; 
/* 32079 */       if (hasIOCANBusTachograph1HandlingInformation() && 
/*       */         
/* 32081 */         !getIOCANBusTachograph1HandlingInformation().equals(other.getIOCANBusTachograph1HandlingInformation())) return false;
/*       */       
/* 32083 */       if (hasIOCANBusTachograph1TachographPerformance() != other.hasIOCANBusTachograph1TachographPerformance()) return false; 
/* 32084 */       if (hasIOCANBusTachograph1TachographPerformance() && 
/*       */         
/* 32086 */         !getIOCANBusTachograph1TachographPerformance().equals(other.getIOCANBusTachograph1TachographPerformance())) return false;
/*       */       
/* 32088 */       if (hasIOCANBusTachograph1DirectionIndicator() != other.hasIOCANBusTachograph1DirectionIndicator()) return false; 
/* 32089 */       if (hasIOCANBusTachograph1DirectionIndicator() && 
/*       */         
/* 32091 */         !getIOCANBusTachograph1DirectionIndicator().equals(other.getIOCANBusTachograph1DirectionIndicator())) return false;
/*       */       
/* 32093 */       if (hasIOCANBusTachograph1VehicleSpeed() != other.hasIOCANBusTachograph1VehicleSpeed()) return false; 
/* 32094 */       if (hasIOCANBusTachograph1VehicleSpeed() && 
/*       */         
/* 32096 */         !getIOCANBusTachograph1VehicleSpeed().equals(other.getIOCANBusTachograph1VehicleSpeed())) return false;
/*       */       
/* 32098 */       if (hasIOCANBusEngineTemperature1EngineCoolantTemperature() != other.hasIOCANBusEngineTemperature1EngineCoolantTemperature()) return false; 
/* 32099 */       if (hasIOCANBusEngineTemperature1EngineCoolantTemperature() && 
/*       */         
/* 32101 */         !getIOCANBusEngineTemperature1EngineCoolantTemperature().equals(other.getIOCANBusEngineTemperature1EngineCoolantTemperature())) return false;
/*       */       
/* 32103 */       if (hasIOCANBusElectronicEngineController1ActualEnginePercent() != other.hasIOCANBusElectronicEngineController1ActualEnginePercent()) return false; 
/* 32104 */       if (hasIOCANBusElectronicEngineController1ActualEnginePercent() && 
/*       */         
/* 32106 */         !getIOCANBusElectronicEngineController1ActualEnginePercent().equals(other.getIOCANBusElectronicEngineController1ActualEnginePercent())) return false;
/*       */       
/* 32108 */       if (hasIOCANBusElectronicEngineController1EngineSpeed() != other.hasIOCANBusElectronicEngineController1EngineSpeed()) return false; 
/* 32109 */       if (hasIOCANBusElectronicEngineController1EngineSpeed() && 
/*       */         
/* 32111 */         !getIOCANBusElectronicEngineController1EngineSpeed().equals(other.getIOCANBusElectronicEngineController1EngineSpeed())) return false;
/*       */       
/* 32113 */       if (hasIOCANBusEngineHoursEngineTotalHours() != other.hasIOCANBusEngineHoursEngineTotalHours()) return false; 
/* 32114 */       if (hasIOCANBusEngineHoursEngineTotalHours() && 
/*       */         
/* 32116 */         !getIOCANBusEngineHoursEngineTotalHours().equals(other.getIOCANBusEngineHoursEngineTotalHours())) return false;
/*       */       
/* 32118 */       if (hasIOCANBusVehicleDistanceTotalVehicleDistance() != other.hasIOCANBusVehicleDistanceTotalVehicleDistance()) return false; 
/* 32119 */       if (hasIOCANBusVehicleDistanceTotalVehicleDistance() && 
/*       */         
/* 32121 */         !getIOCANBusVehicleDistanceTotalVehicleDistance().equals(other.getIOCANBusVehicleDistanceTotalVehicleDistance())) return false;
/*       */       
/* 32123 */       if (hasIOCANBusHighResolutionFuelConsumptionTotalFuelUsed() != other.hasIOCANBusHighResolutionFuelConsumptionTotalFuelUsed()) return false; 
/* 32124 */       if (hasIOCANBusHighResolutionFuelConsumptionTotalFuelUsed() && 
/*       */         
/* 32126 */         !getIOCANBusHighResolutionFuelConsumptionTotalFuelUsed().equals(other.getIOCANBusHighResolutionFuelConsumptionTotalFuelUsed())) return false;
/*       */       
/* 32128 */       if (hasIOCANBusDashDisplayFuelLevel1() != other.hasIOCANBusDashDisplayFuelLevel1()) return false; 
/* 32129 */       if (hasIOCANBusDashDisplayFuelLevel1() && 
/*       */         
/* 32131 */         !getIOCANBusDashDisplayFuelLevel1().equals(other.getIOCANBusDashDisplayFuelLevel1())) return false;
/*       */       
/* 32133 */       if (hasIOCANBusAmbientConditionsAmbientAirTemperature() != other.hasIOCANBusAmbientConditionsAmbientAirTemperature()) return false; 
/* 32134 */       if (hasIOCANBusAmbientConditionsAmbientAirTemperature() && 
/*       */         
/* 32136 */         !getIOCANBusAmbientConditionsAmbientAirTemperature().equals(other.getIOCANBusAmbientConditionsAmbientAirTemperature())) return false;
/*       */       
/* 32138 */       if (hasIOCANBusFuelEconomyFuelRate() != other.hasIOCANBusFuelEconomyFuelRate()) return false; 
/* 32139 */       if (hasIOCANBusFuelEconomyFuelRate() && 
/*       */         
/* 32141 */         !getIOCANBusFuelEconomyFuelRate().equals(other.getIOCANBusFuelEconomyFuelRate())) return false;
/*       */       
/* 32143 */       if (hasIOCANBusFuelEconomyInstantaneousFuelEconomy() != other.hasIOCANBusFuelEconomyInstantaneousFuelEconomy()) return false; 
/* 32144 */       if (hasIOCANBusFuelEconomyInstantaneousFuelEconomy() && 
/*       */         
/* 32146 */         !getIOCANBusFuelEconomyInstantaneousFuelEconomy().equals(other.getIOCANBusFuelEconomyInstantaneousFuelEconomy())) return false;
/*       */       
/* 32148 */       if (hasIOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit1() != other.hasIOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit1()) return false; 
/* 32149 */       if (hasIOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit1() && 
/*       */         
/* 32151 */         !getIOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit1().equals(other.getIOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit1())) return false;
/*       */       
/* 32153 */       if (hasIOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit2() != other.hasIOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit2()) return false; 
/* 32154 */       if (hasIOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit2() && 
/*       */         
/* 32156 */         !getIOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit2().equals(other.getIOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit2())) return false;
/*       */       
/* 32158 */       if (hasIOCANBusAftertreatmentDieselExhaustFluidTankInformationTank1Level() != other.hasIOCANBusAftertreatmentDieselExhaustFluidTankInformationTank1Level()) return false; 
/* 32159 */       if (hasIOCANBusAftertreatmentDieselExhaustFluidTankInformationTank1Level() && 
/*       */         
/* 32161 */         !getIOCANBusAftertreatmentDieselExhaustFluidTankInformationTank1Level().equals(other.getIOCANBusAftertreatmentDieselExhaustFluidTankInformationTank1Level())) return false;
/*       */       
/* 32163 */       if (hasIOCANBusTruckBusElectronicEngineController2AcceleratorPedalPosition1() != other.hasIOCANBusTruckBusElectronicEngineController2AcceleratorPedalPosition1()) return false; 
/* 32164 */       if (hasIOCANBusTruckBusElectronicEngineController2AcceleratorPedalPosition1() && 
/*       */         
/* 32166 */         !getIOCANBusTruckBusElectronicEngineController2AcceleratorPedalPosition1().equals(other.getIOCANBusTruckBusElectronicEngineController2AcceleratorPedalPosition1())) return false;
/*       */       
/* 32168 */       if (hasIOCANBusTruckBusElectronicEngineController2EnginePercentLoad() != other.hasIOCANBusTruckBusElectronicEngineController2EnginePercentLoad()) return false; 
/* 32169 */       if (hasIOCANBusTruckBusElectronicEngineController2EnginePercentLoad() && 
/*       */         
/* 32171 */         !getIOCANBusTruckBusElectronicEngineController2EnginePercentLoad().equals(other.getIOCANBusTruckBusElectronicEngineController2EnginePercentLoad())) return false;
/*       */       
/* 32173 */       if (hasIOCANBusTruckVehicleWeightAxleWeight1() != other.hasIOCANBusTruckVehicleWeightAxleWeight1()) return false; 
/* 32174 */       if (hasIOCANBusTruckVehicleWeightAxleWeight1() && 
/*       */         
/* 32176 */         !getIOCANBusTruckVehicleWeightAxleWeight1().equals(other.getIOCANBusTruckVehicleWeightAxleWeight1())) return false;
/*       */       
/* 32178 */       if (hasIOCANBusTruckVehicleWeightAxleWeight2() != other.hasIOCANBusTruckVehicleWeightAxleWeight2()) return false; 
/* 32179 */       if (hasIOCANBusTruckVehicleWeightAxleWeight2() && 
/*       */         
/* 32181 */         !getIOCANBusTruckVehicleWeightAxleWeight2().equals(other.getIOCANBusTruckVehicleWeightAxleWeight2())) return false;
/*       */       
/* 32183 */       if (hasIOCANBusTruckVehicleWeightAxleWeight3() != other.hasIOCANBusTruckVehicleWeightAxleWeight3()) return false; 
/* 32184 */       if (hasIOCANBusTruckVehicleWeightAxleWeight3() && 
/*       */         
/* 32186 */         !getIOCANBusTruckVehicleWeightAxleWeight3().equals(other.getIOCANBusTruckVehicleWeightAxleWeight3())) return false;
/*       */       
/* 32188 */       if (hasIOCANBusTruckServiceInformationServiceDistance() != other.hasIOCANBusTruckServiceInformationServiceDistance()) return false; 
/* 32189 */       if (hasIOCANBusTruckServiceInformationServiceDistance() && 
/*       */         
/* 32191 */         !getIOCANBusTruckServiceInformationServiceDistance().equals(other.getIOCANBusTruckServiceInformationServiceDistance())) return false;
/*       */       
/* 32193 */       if (hasIOCANBusTruckPTODriveEngagementPTOEngageStat() != other.hasIOCANBusTruckPTODriveEngagementPTOEngageStat()) return false; 
/* 32194 */       if (hasIOCANBusTruckPTODriveEngagementPTOEngageStat() && 
/*       */         
/* 32196 */         !getIOCANBusTruckPTODriveEngagementPTOEngageStat().equals(other.getIOCANBusTruckPTODriveEngagementPTOEngageStat())) return false;
/*       */       
/* 32198 */       if (hasIOCANBusTruckCombinationVehicleWeightGrossCombinationVehicleWeight() != other.hasIOCANBusTruckCombinationVehicleWeightGrossCombinationVehicleWeight()) return false; 
/* 32199 */       if (hasIOCANBusTruckCombinationVehicleWeightGrossCombinationVehicleWeight() && 
/*       */         
/* 32201 */         !getIOCANBusTruckCombinationVehicleWeightGrossCombinationVehicleWeight().equals(other.getIOCANBusTruckCombinationVehicleWeightGrossCombinationVehicleWeight())) return false;
/*       */       
/* 32203 */       if (hasIOCANBusTruckBusElectronicRetarderController1RetarderTorqueMode() != other.hasIOCANBusTruckBusElectronicRetarderController1RetarderTorqueMode()) return false; 
/* 32204 */       if (hasIOCANBusTruckBusElectronicRetarderController1RetarderTorqueMode() && 
/*       */         
/* 32206 */         !getIOCANBusTruckBusElectronicRetarderController1RetarderTorqueMode().equals(other.getIOCANBusTruckBusElectronicRetarderController1RetarderTorqueMode())) return false;
/*       */       
/* 32208 */       if (hasIOCANBusTruckBusElectronicRetarderController1RetarderSelection() != other.hasIOCANBusTruckBusElectronicRetarderController1RetarderSelection()) return false; 
/* 32209 */       if (hasIOCANBusTruckBusElectronicRetarderController1RetarderSelection() && 
/*       */         
/* 32211 */         !getIOCANBusTruckBusElectronicRetarderController1RetarderSelection().equals(other.getIOCANBusTruckBusElectronicRetarderController1RetarderSelection())) return false;
/*       */       
/* 32213 */       if (hasIOCANBusBusDoorControl1DoorPosition() != other.hasIOCANBusBusDoorControl1DoorPosition()) return false; 
/* 32214 */       if (hasIOCANBusBusDoorControl1DoorPosition() && 
/*       */         
/* 32216 */         !getIOCANBusBusDoorControl1DoorPosition().equals(other.getIOCANBusBusDoorControl1DoorPosition())) return false;
/*       */       
/* 32218 */       if (hasIOCANBusBusDoorControl1RampWheelChairlift() != other.hasIOCANBusBusDoorControl1RampWheelChairlift()) return false; 
/* 32219 */       if (hasIOCANBusBusDoorControl1RampWheelChairlift() && 
/*       */         
/* 32221 */         !getIOCANBusBusDoorControl1RampWheelChairlift().equals(other.getIOCANBusBusDoorControl1RampWheelChairlift())) return false;
/*       */       
/* 32223 */       if (hasIOCANBusBusDoorControl1DoorsStatus2() != other.hasIOCANBusBusDoorControl1DoorsStatus2()) return false; 
/* 32224 */       if (hasIOCANBusBusDoorControl1DoorsStatus2() && 
/*       */         
/* 32226 */         !getIOCANBusBusDoorControl1DoorsStatus2().equals(other.getIOCANBusBusDoorControl1DoorsStatus2())) return false;
/*       */       
/* 32228 */       if (hasIOCANBusBusDoorControl2() != other.hasIOCANBusBusDoorControl2()) return false; 
/* 32229 */       if (hasIOCANBusBusDoorControl2() && 
/*       */         
/* 32231 */         !getIOCANBusBusDoorControl2().equals(other.getIOCANBusBusDoorControl2())) return false;
/*       */       
/* 32233 */       if (hasIOCANBusBrakeLiningRemainingAxleFrontLeftWheel() != other.hasIOCANBusBrakeLiningRemainingAxleFrontLeftWheel()) return false; 
/* 32234 */       if (hasIOCANBusBrakeLiningRemainingAxleFrontLeftWheel() && 
/*       */         
/* 32236 */         !getIOCANBusBrakeLiningRemainingAxleFrontLeftWheel().equals(other.getIOCANBusBrakeLiningRemainingAxleFrontLeftWheel())) return false;
/*       */       
/* 32238 */       if (hasIOCANBusBrakeLiningRemainingAxleFrontRightWheel() != other.hasIOCANBusBrakeLiningRemainingAxleFrontRightWheel()) return false; 
/* 32239 */       if (hasIOCANBusBrakeLiningRemainingAxleFrontRightWheel() && 
/*       */         
/* 32241 */         !getIOCANBusBrakeLiningRemainingAxleFrontRightWheel().equals(other.getIOCANBusBrakeLiningRemainingAxleFrontRightWheel())) return false;
/*       */       
/* 32243 */       if (hasIOCANBusBrakeLiningRemainingAxleRear1LeftWheel() != other.hasIOCANBusBrakeLiningRemainingAxleRear1LeftWheel()) return false; 
/* 32244 */       if (hasIOCANBusBrakeLiningRemainingAxleRear1LeftWheel() && 
/*       */         
/* 32246 */         !getIOCANBusBrakeLiningRemainingAxleRear1LeftWheel().equals(other.getIOCANBusBrakeLiningRemainingAxleRear1LeftWheel())) return false;
/*       */       
/* 32248 */       if (hasIOCANBusBrakeLiningRemainingAxleRear1RightWheel() != other.hasIOCANBusBrakeLiningRemainingAxleRear1RightWheel()) return false; 
/* 32249 */       if (hasIOCANBusBrakeLiningRemainingAxleRear1RightWheel() && 
/*       */         
/* 32251 */         !getIOCANBusBrakeLiningRemainingAxleRear1RightWheel().equals(other.getIOCANBusBrakeLiningRemainingAxleRear1RightWheel())) return false;
/*       */       
/* 32253 */       if (hasIOCANBusBrakeLiningRemainingAxleRear2LeftWheel() != other.hasIOCANBusBrakeLiningRemainingAxleRear2LeftWheel()) return false; 
/* 32254 */       if (hasIOCANBusBrakeLiningRemainingAxleRear2LeftWheel() && 
/*       */         
/* 32256 */         !getIOCANBusBrakeLiningRemainingAxleRear2LeftWheel().equals(other.getIOCANBusBrakeLiningRemainingAxleRear2LeftWheel())) return false;
/*       */       
/* 32258 */       if (hasIOCANBusBrakeLiningRemainingAxleRear2RightWheel() != other.hasIOCANBusBrakeLiningRemainingAxleRear2RightWheel()) return false; 
/* 32259 */       if (hasIOCANBusBrakeLiningRemainingAxleRear2RightWheel() && 
/*       */         
/* 32261 */         !getIOCANBusBrakeLiningRemainingAxleRear2RightWheel().equals(other.getIOCANBusBrakeLiningRemainingAxleRear2RightWheel())) return false;
/*       */       
/* 32263 */       if (hasIOCANBusBrakeLiningRemainingAxleRear3LeftWheel() != other.hasIOCANBusBrakeLiningRemainingAxleRear3LeftWheel()) return false; 
/* 32264 */       if (hasIOCANBusBrakeLiningRemainingAxleRear3LeftWheel() && 
/*       */         
/* 32266 */         !getIOCANBusBrakeLiningRemainingAxleRear3LeftWheel().equals(other.getIOCANBusBrakeLiningRemainingAxleRear3LeftWheel())) return false;
/*       */       
/* 32268 */       if (hasIOCANBusBrakeLiningRemainingAxleRear3RightWheel() != other.hasIOCANBusBrakeLiningRemainingAxleRear3RightWheel()) return false; 
/* 32269 */       if (hasIOCANBusBrakeLiningRemainingAxleRear3RightWheel() && 
/*       */         
/* 32271 */         !getIOCANBusBrakeLiningRemainingAxleRear3RightWheel().equals(other.getIOCANBusBrakeLiningRemainingAxleRear3RightWheel())) return false;
/*       */       
/* 32273 */       if (hasIOCANBusTruckBusCruiseControl() != other.hasIOCANBusTruckBusCruiseControl()) return false; 
/* 32274 */       if (hasIOCANBusTruckBusCruiseControl() && 
/*       */         
/* 32276 */         !getIOCANBusTruckBusCruiseControl().equals(other.getIOCANBusTruckBusCruiseControl())) return false;
/*       */       
/* 32278 */       if (hasIOCANBusBusAlternatorSpeedAlternatorStatus1() != other.hasIOCANBusBusAlternatorSpeedAlternatorStatus1()) return false; 
/* 32279 */       if (hasIOCANBusBusAlternatorSpeedAlternatorStatus1() && 
/*       */         
/* 32281 */         !getIOCANBusBusAlternatorSpeedAlternatorStatus1().equals(other.getIOCANBusBusAlternatorSpeedAlternatorStatus1())) return false;
/*       */       
/* 32283 */       if (hasIOCANBusBusAlternatorSpeedAlternatorStatus2() != other.hasIOCANBusBusAlternatorSpeedAlternatorStatus2()) return false; 
/* 32284 */       if (hasIOCANBusBusAlternatorSpeedAlternatorStatus2() && 
/*       */         
/* 32286 */         !getIOCANBusBusAlternatorSpeedAlternatorStatus2().equals(other.getIOCANBusBusAlternatorSpeedAlternatorStatus2())) return false;
/*       */       
/* 32288 */       if (hasIOCANBusBusAlternatorSpeedAlternatorStatus3() != other.hasIOCANBusBusAlternatorSpeedAlternatorStatus3()) return false; 
/* 32289 */       if (hasIOCANBusBusAlternatorSpeedAlternatorStatus3() && 
/*       */         
/* 32291 */         !getIOCANBusBusAlternatorSpeedAlternatorStatus3().equals(other.getIOCANBusBusAlternatorSpeedAlternatorStatus3())) return false;
/*       */       
/* 32293 */       if (hasIOCANBusBusAlternatorSpeedAlternatorStatus4() != other.hasIOCANBusBusAlternatorSpeedAlternatorStatus4()) return false; 
/* 32294 */       if (hasIOCANBusBusAlternatorSpeedAlternatorStatus4() && 
/*       */         
/* 32296 */         !getIOCANBusBusAlternatorSpeedAlternatorStatus4().equals(other.getIOCANBusBusAlternatorSpeedAlternatorStatus4())) return false;
/*       */       
/* 32298 */       if (hasIOCANBusBusElectronicTransmissionController2SelectedGear() != other.hasIOCANBusBusElectronicTransmissionController2SelectedGear()) return false; 
/* 32299 */       if (hasIOCANBusBusElectronicTransmissionController2SelectedGear() && 
/*       */         
/* 32301 */         !getIOCANBusBusElectronicTransmissionController2SelectedGear().equals(other.getIOCANBusBusElectronicTransmissionController2SelectedGear())) return false;
/*       */       
/* 32303 */       if (hasIOCANBusBusElectronicTransmissionController2CurrentGear() != other.hasIOCANBusBusElectronicTransmissionController2CurrentGear()) return false; 
/* 32304 */       if (hasIOCANBusBusElectronicTransmissionController2CurrentGear() && 
/*       */         
/* 32306 */         !getIOCANBusBusElectronicTransmissionController2CurrentGear().equals(other.getIOCANBusBusElectronicTransmissionController2CurrentGear())) return false;
/*       */       
/* 32308 */       if (hasIOCANBusBusAirSuspensionControl4FrontAxleLeft() != other.hasIOCANBusBusAirSuspensionControl4FrontAxleLeft()) return false; 
/* 32309 */       if (hasIOCANBusBusAirSuspensionControl4FrontAxleLeft() && 
/*       */         
/* 32311 */         !getIOCANBusBusAirSuspensionControl4FrontAxleLeft().equals(other.getIOCANBusBusAirSuspensionControl4FrontAxleLeft())) return false;
/*       */       
/* 32313 */       if (hasIOCANBusBusAirSuspensionControl4FrontAxleRight() != other.hasIOCANBusBusAirSuspensionControl4FrontAxleRight()) return false; 
/* 32314 */       if (hasIOCANBusBusAirSuspensionControl4FrontAxleRight() && 
/*       */         
/* 32316 */         !getIOCANBusBusAirSuspensionControl4FrontAxleRight().equals(other.getIOCANBusBusAirSuspensionControl4FrontAxleRight())) return false;
/*       */       
/* 32318 */       if (hasIOCANBusBusAirSuspensionControl4RearAxleLeft() != other.hasIOCANBusBusAirSuspensionControl4RearAxleLeft()) return false; 
/* 32319 */       if (hasIOCANBusBusAirSuspensionControl4RearAxleLeft() && 
/*       */         
/* 32321 */         !getIOCANBusBusAirSuspensionControl4RearAxleLeft().equals(other.getIOCANBusBusAirSuspensionControl4RearAxleLeft())) return false;
/*       */       
/* 32323 */       if (hasIOCANBusBusAirSuspensionControl4RearAxleright() != other.hasIOCANBusBusAirSuspensionControl4RearAxleright()) return false; 
/* 32324 */       if (hasIOCANBusBusAirSuspensionControl4RearAxleright() && 
/*       */         
/* 32326 */         !getIOCANBusBusAirSuspensionControl4RearAxleright().equals(other.getIOCANBusBusAirSuspensionControl4RearAxleright())) return false;
/*       */       
/* 32328 */       if (hasIOCANBusDashDisplayFuelLevel2() != other.hasIOCANBusDashDisplayFuelLevel2()) return false; 
/* 32329 */       if (hasIOCANBusDashDisplayFuelLevel2() && 
/*       */         
/* 32331 */         !getIOCANBusDashDisplayFuelLevel2().equals(other.getIOCANBusDashDisplayFuelLevel2())) return false;
/*       */       
/* 32333 */       if (hasIOCANBusElectronicBrakeControllerBrakePedalPosition() != other.hasIOCANBusElectronicBrakeControllerBrakePedalPosition()) return false; 
/* 32334 */       if (hasIOCANBusElectronicBrakeControllerBrakePedalPosition() && 
/*       */         
/* 32336 */         !getIOCANBusElectronicBrakeControllerBrakePedalPosition().equals(other.getIOCANBusElectronicBrakeControllerBrakePedalPosition())) return false;
/*       */       
/* 32338 */       if (hasIOCANBusFuelConsumptionGaseousTotalFuelUsed() != other.hasIOCANBusFuelConsumptionGaseousTotalFuelUsed()) return false; 
/* 32339 */       if (hasIOCANBusFuelConsumptionGaseousTotalFuelUsed() && 
/*       */         
/* 32341 */         !getIOCANBusFuelConsumptionGaseousTotalFuelUsed().equals(other.getIOCANBusFuelConsumptionGaseousTotalFuelUsed())) return false;
/*       */       
/* 32343 */       if (hasIOCANBusTruckBusCruiseControlVehicleSpeedParkingBrakeSwitch() != other.hasIOCANBusTruckBusCruiseControlVehicleSpeedParkingBrakeSwitch()) return false; 
/* 32344 */       if (hasIOCANBusTruckBusCruiseControlVehicleSpeedParkingBrakeSwitch() && 
/*       */         
/* 32346 */         !getIOCANBusTruckBusCruiseControlVehicleSpeedParkingBrakeSwitch().equals(other.getIOCANBusTruckBusCruiseControlVehicleSpeedParkingBrakeSwitch())) return false;
/*       */       
/* 32348 */       if (hasIOCANBusTruckBusCruiseControlVehicleSpeedWheelBasedSpeed() != other.hasIOCANBusTruckBusCruiseControlVehicleSpeedWheelBasedSpeed()) return false; 
/* 32349 */       if (hasIOCANBusTruckBusCruiseControlVehicleSpeedWheelBasedSpeed() && 
/*       */         
/* 32351 */         !getIOCANBusTruckBusCruiseControlVehicleSpeedWheelBasedSpeed().equals(other.getIOCANBusTruckBusCruiseControlVehicleSpeedWheelBasedSpeed())) return false;
/*       */       
/* 32353 */       if (hasIOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlActive() != other.hasIOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlActive()) return false; 
/* 32354 */       if (hasIOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlActive() && 
/*       */         
/* 32356 */         !getIOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlActive().equals(other.getIOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlActive())) return false;
/*       */       
/* 32358 */       if (hasIOCANBusTruckBusCruiseControlVehicleSpeedBrakeSwitch() != other.hasIOCANBusTruckBusCruiseControlVehicleSpeedBrakeSwitch()) return false; 
/* 32359 */       if (hasIOCANBusTruckBusCruiseControlVehicleSpeedBrakeSwitch() && 
/*       */         
/* 32361 */         !getIOCANBusTruckBusCruiseControlVehicleSpeedBrakeSwitch().equals(other.getIOCANBusTruckBusCruiseControlVehicleSpeedBrakeSwitch())) return false;
/*       */       
/* 32363 */       if (hasIOCANBusTruckBusCruiseControlVehicleSpeedClutchSwitch() != other.hasIOCANBusTruckBusCruiseControlVehicleSpeedClutchSwitch()) return false; 
/* 32364 */       if (hasIOCANBusTruckBusCruiseControlVehicleSpeedClutchSwitch() && 
/*       */         
/* 32366 */         !getIOCANBusTruckBusCruiseControlVehicleSpeedClutchSwitch().equals(other.getIOCANBusTruckBusCruiseControlVehicleSpeedClutchSwitch())) return false;
/*       */       
/* 32368 */       if (hasIOCANBusTruckBusCruiseControlVehicleSpeedPtoState() != other.hasIOCANBusTruckBusCruiseControlVehicleSpeedPtoState()) return false; 
/* 32369 */       if (hasIOCANBusTruckBusCruiseControlVehicleSpeedPtoState() && 
/*       */         
/* 32371 */         !getIOCANBusTruckBusCruiseControlVehicleSpeedPtoState().equals(other.getIOCANBusTruckBusCruiseControlVehicleSpeedPtoState())) return false;
/*       */       
/* 32373 */       if (hasIOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlStates() != other.hasIOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlStates()) return false; 
/* 32374 */       if (hasIOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlStates() && 
/*       */         
/* 32376 */         !getIOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlStates().equals(other.getIOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlStates())) return false;
/*       */       
/* 32378 */       if (hasIOCANBusBusVehicleElectricalPowerHybridBatteryPackRemainingCharge() != other.hasIOCANBusBusVehicleElectricalPowerHybridBatteryPackRemainingCharge()) return false; 
/* 32379 */       if (hasIOCANBusBusVehicleElectricalPowerHybridBatteryPackRemainingCharge() && 
/*       */         
/* 32381 */         !getIOCANBusBusVehicleElectricalPowerHybridBatteryPackRemainingCharge().equals(other.getIOCANBusBusVehicleElectricalPowerHybridBatteryPackRemainingCharge())) return false;
/*       */       
/* 32383 */       if (hasIOCANBusBusVehicleDynamicStabilityControl2SteeringWheelAngle() != other.hasIOCANBusBusVehicleDynamicStabilityControl2SteeringWheelAngle()) return false; 
/* 32384 */       if (hasIOCANBusBusVehicleDynamicStabilityControl2SteeringWheelAngle() && 
/*       */         
/* 32386 */         !getIOCANBusBusVehicleDynamicStabilityControl2SteeringWheelAngle().equals(other.getIOCANBusBusVehicleDynamicStabilityControl2SteeringWheelAngle())) return false;
/*       */       
/* 32388 */       if (hasIOCANBusElectronicEngineController14FuelType() != other.hasIOCANBusElectronicEngineController14FuelType()) return false; 
/* 32389 */       if (hasIOCANBusElectronicEngineController14FuelType() && 
/*       */         
/* 32391 */         !getIOCANBusElectronicEngineController14FuelType().equals(other.getIOCANBusElectronicEngineController14FuelType())) return false;
/*       */       
/* 32393 */       if (hasIOCANBusEngineFluidLevelPressureEngineOilLevel() != other.hasIOCANBusEngineFluidLevelPressureEngineOilLevel()) return false; 
/* 32394 */       if (hasIOCANBusEngineFluidLevelPressureEngineOilLevel() && 
/*       */         
/* 32396 */         !getIOCANBusEngineFluidLevelPressureEngineOilLevel().equals(other.getIOCANBusEngineFluidLevelPressureEngineOilLevel())) return false;
/*       */       
/* 32398 */       if (hasIOCANBusEngineFluidLevelPressureEngineOilPressure() != other.hasIOCANBusEngineFluidLevelPressureEngineOilPressure()) return false; 
/* 32399 */       if (hasIOCANBusEngineFluidLevelPressureEngineOilPressure() && 
/*       */         
/* 32401 */         !getIOCANBusEngineFluidLevelPressureEngineOilPressure().equals(other.getIOCANBusEngineFluidLevelPressureEngineOilPressure())) return false;
/*       */       
/* 32403 */       if (hasIOCANBusEngineFluidLevelPressureCoolantLevel() != other.hasIOCANBusEngineFluidLevelPressureCoolantLevel()) return false; 
/* 32404 */       if (hasIOCANBusEngineFluidLevelPressureCoolantLevel() && 
/*       */         
/* 32406 */         !getIOCANBusEngineFluidLevelPressureCoolantLevel().equals(other.getIOCANBusEngineFluidLevelPressureCoolantLevel())) return false;
/*       */       
/* 32408 */       if (hasIOCANBusTellTaleStatus() != other.hasIOCANBusTellTaleStatus()) return false; 
/* 32409 */       if (hasIOCANBusTellTaleStatus() && 
/*       */         
/* 32411 */         !getIOCANBusTellTaleStatus().equals(other.getIOCANBusTellTaleStatus())) return false;
/*       */       
/* 32413 */       if (hasIOCANBusFuelConsumptionEngineTotalFuelUsed() != other.hasIOCANBusFuelConsumptionEngineTotalFuelUsed()) return false; 
/* 32414 */       if (hasIOCANBusFuelConsumptionEngineTotalFuelUsed() && 
/*       */         
/* 32416 */         !getIOCANBusFuelConsumptionEngineTotalFuelUsed().equals(other.getIOCANBusFuelConsumptionEngineTotalFuelUsed())) return false;
/*       */       
/* 32418 */       if (hasIOCANBusTruckVehicleWeightAxleWeight4() != other.hasIOCANBusTruckVehicleWeightAxleWeight4()) return false; 
/* 32419 */       if (hasIOCANBusTruckVehicleWeightAxleWeight4() && 
/*       */         
/* 32421 */         !getIOCANBusTruckVehicleWeightAxleWeight4().equals(other.getIOCANBusTruckVehicleWeightAxleWeight4())) return false;
/*       */       
/* 32423 */       if (!this.unknownFields.equals(other.unknownFields)) return false; 
/* 32424 */       return true;
/*       */     }
/*       */ 
/*       */     
/*       */     public int hashCode() {
/* 32429 */       if (this.memoizedHashCode != 0) {
/* 32430 */         return this.memoizedHashCode;
/*       */       }
/* 32432 */       int hash = 41;
/* 32433 */       hash = 19 * hash + getDescriptor().hashCode();
/* 32434 */       hash = 37 * hash + 80;
/* 32435 */       hash = 53 * hash + this.serialPortBaudrate_;
/* 32436 */       hash = 37 * hash + 90;
/* 32437 */       hash = 53 * hash + Internal.hashBoolean(
/* 32438 */           getDoNotResetDeviceOnProblems());
/* 32439 */       hash = 37 * hash + 99;
/* 32440 */       hash = 53 * hash + getPassword().hashCode();
/* 32441 */       hash = 37 * hash + 100;
/* 32442 */       hash = 53 * hash + this.movement_;
/* 32443 */       hash = 37 * hash + 101;
/* 32444 */       hash = 53 * hash + getMovementSensorSensitivity();
/* 32445 */       hash = 37 * hash + 102;
/* 32446 */       hash = 53 * hash + this.sleep_;
/* 32447 */       hash = 37 * hash + 103;
/* 32448 */       hash = 53 * hash + getSleepTimeout();
/* 32449 */       hash = 37 * hash + 104;
/* 32450 */       hash = 53 * hash + this.engineOn_;
/* 32451 */       hash = 37 * hash + 105;
/* 32452 */       hash = 53 * hash + Internal.hashBoolean(
/* 32453 */           getEngineOnDIN1());
/* 32454 */       hash = 37 * hash + 106;
/* 32455 */       hash = 53 * hash + Internal.hashBoolean(
/* 32456 */           getEngineOnDIN2());
/* 32457 */       hash = 37 * hash + 107;
/* 32458 */       hash = 53 * hash + Internal.hashBoolean(
/* 32459 */           getEngineOnMovementSensor());
/* 32460 */       hash = 37 * hash + 108;
/* 32461 */       hash = 53 * hash + Internal.hashBoolean(
/* 32462 */           getEngineOnPowerSupplyAvailable());
/* 32463 */       hash = 37 * hash + 109;
/* 32464 */       hash = 53 * hash + getEngineOnGpsSpeed();
/* 32465 */       hash = 37 * hash + 110;
/* 32466 */       hash = 53 * hash + getEngineOnCanRPM();
/* 32467 */       hash = 37 * hash + 111;
/* 32468 */       hash = 53 * hash + getEngineOnMinActiveStateDuration();
/* 32469 */       hash = 37 * hash + 112;
/* 32470 */       hash = 53 * hash + this.engineOnOperator_;
/* 32471 */       hash = 37 * hash + 113;
/* 32472 */       hash = 53 * hash + getEngineOnMovementStartDelay();
/* 32473 */       hash = 37 * hash + 114;
/* 32474 */       hash = 53 * hash + getEngineOnMovementStopDelay();
/* 32475 */       hash = 37 * hash + 115;
/* 32476 */       hash = 53 * hash + getEngineOnExternalVoltage();
/* 32477 */       hash = 37 * hash + 116;
/* 32478 */       hash = 53 * hash + Internal.hashBoolean(
/* 32479 */           getLedIndication());
/* 32480 */       hash = 37 * hash + 117;
/* 32481 */       hash = 53 * hash + this.gNSS_;
/* 32482 */       hash = 37 * hash + 118;
/* 32483 */       hash = 53 * hash + Internal.hashBoolean(
/* 32484 */           getStaticNavigationEnabled());
/* 32485 */       hash = 37 * hash + 119;
/* 32486 */       hash = 53 * hash + this.staticNavigationSource_;
/* 32487 */       hash = 37 * hash + 120;
/* 32488 */       hash = 53 * hash + this.recordsSaveAndSendMode_;
/* 32489 */       hash = 37 * hash + 121;
/* 32490 */       hash = 53 * hash + this.timeSynchronization_;
/* 32491 */       hash = 37 * hash + 122;
/* 32492 */       hash = 53 * hash + getNTPServer().hashCode();
/* 32493 */       hash = 37 * hash + 123;
/* 32494 */       hash = 53 * hash + getNTPInterval();
/* 32495 */       hash = 37 * hash + 125;
/* 32496 */       hash = 53 * hash + getSleepNoPowerTimeout();
/* 32497 */       hash = 37 * hash + 130;
/* 32498 */       hash = 53 * hash + Internal.hashBoolean(
/* 32499 */           getSendPing());
/* 32500 */       hash = 37 * hash + 140;
/* 32501 */       hash = 53 * hash + Internal.hashBoolean(
/* 32502 */           getTimetableMode());
/* 32503 */       hash = 37 * hash + 141;
/* 32504 */       hash = 53 * hash + getTimetableData().hashCode();
/* 32505 */       if (hasService1()) {
/* 32506 */         hash = 37 * hash + 200;
/* 32507 */         hash = 53 * hash + getService1().hashCode();
/*       */       } 
/* 32509 */       if (hasService2()) {
/* 32510 */         hash = 37 * hash + 201;
/* 32511 */         hash = 53 * hash + getService2().hashCode();
/*       */       } 
/* 32513 */       if (hasService3()) {
/* 32514 */         hash = 37 * hash + 202;
/* 32515 */         hash = 53 * hash + getService3().hashCode();
/*       */       } 
/* 32517 */       hash = 37 * hash + 700;
/* 32518 */       hash = 53 * hash + getAnalogInput1AverageTime();
/* 32519 */       hash = 37 * hash + 701;
/* 32520 */       hash = 53 * hash + getAnalogInput2AverageTime();
/* 32521 */       hash = 37 * hash + 702;
/* 32522 */       hash = 53 * hash + getAnalogInput3AverageTime();
/* 32523 */       hash = 37 * hash + 800;
/* 32524 */       hash = 53 * hash + this.bluetoothRadioMode_;
/* 32525 */       hash = 37 * hash + 801;
/* 32526 */       hash = 53 * hash + getBluetoothName().hashCode();
/* 32527 */       hash = 37 * hash + 802;
/* 32528 */       hash = 53 * hash + getBluetoothPIN().hashCode();
/* 32529 */       hash = 37 * hash + 803;
/* 32530 */       hash = 53 * hash + this.bluetoothSecurityMode_;
/* 32531 */       hash = 37 * hash + 804;
/* 32532 */       hash = 53 * hash + Internal.hashBoolean(
/* 32533 */           getBluetoothPowerDownOnSleep());
/* 32534 */       hash = 37 * hash + 810;
/* 32535 */       hash = 53 * hash + this.bluetoothExternalConnectionMode_;
/* 32536 */       hash = 37 * hash + 811;
/* 32537 */       hash = 53 * hash + getBluetoothExternalDeviceMAC().hashCode();
/* 32538 */       hash = 37 * hash + 812;
/* 32539 */       hash = 53 * hash + getBluetoothExternalDeviceName().hashCode();
/* 32540 */       hash = 37 * hash + 813;
/* 32541 */       hash = 53 * hash + getBluetoothExternalDevicePIN().hashCode();
/* 32542 */       hash = 37 * hash + 820;
/* 32543 */       hash = 53 * hash + getBluetoothAuthorizedMAC1().hashCode();
/* 32544 */       hash = 37 * hash + 821;
/* 32545 */       hash = 53 * hash + getBluetoothAuthorizedMAC2().hashCode();
/* 32546 */       hash = 37 * hash + 822;
/* 32547 */       hash = 53 * hash + getBluetoothAuthorizedMAC3().hashCode();
/* 32548 */       hash = 37 * hash + 823;
/* 32549 */       hash = 53 * hash + getBluetoothAuthorizedMAC4().hashCode();
/* 32550 */       hash = 37 * hash + 824;
/* 32551 */       hash = 53 * hash + getBluetoothAuthorizedMAC5().hashCode();
/* 32552 */       hash = 37 * hash + 2001;
/* 32553 */       hash = 53 * hash + Internal.hashBoolean(
/* 32554 */           getGPRSContextEnabled());
/* 32555 */       hash = 37 * hash + 2002;
/* 32556 */       hash = 53 * hash + getGPRSApnName().hashCode();
/* 32557 */       hash = 37 * hash + 2003;
/* 32558 */       hash = 53 * hash + getGPRSApnUsername().hashCode();
/* 32559 */       hash = 37 * hash + 2004;
/* 32560 */       hash = 53 * hash + getGPRSApnPassword().hashCode();
/* 32561 */       hash = 37 * hash + 2005;
/* 32562 */       hash = 53 * hash + Internal.hashBoolean(
/* 32563 */           getGPRSCHAPAuthentication());
/* 32564 */       hash = 37 * hash + 2006;
/* 32565 */       hash = 53 * hash + getGPRSLinkTimeout();
/* 32566 */       hash = 37 * hash + 2007;
/* 32567 */       hash = 53 * hash + getGPRSResponseTimeout();
/* 32568 */       hash = 37 * hash + 2008;
/* 32569 */       hash = 53 * hash + getGPRSServerAddress().hashCode();
/* 32570 */       hash = 37 * hash + 2009;
/* 32571 */       hash = 53 * hash + getGPRSServerPort();
/* 32572 */       hash = 37 * hash + 2010;
/* 32573 */       hash = 53 * hash + this.gPRSServerProtocol_;
/* 32574 */       hash = 37 * hash + 2011;
/* 32575 */       hash = 53 * hash + getGPRSBackupServerAddress().hashCode();
/* 32576 */       hash = 37 * hash + 2012;
/* 32577 */       hash = 53 * hash + getGPRSBackupServerPort();
/* 32578 */       hash = 37 * hash + 2013;
/* 32579 */       hash = 53 * hash + this.gPRSBackupServerProtocol_;
/* 32580 */       hash = 37 * hash + 2020;
/* 32581 */       hash = 53 * hash + Internal.hashBoolean(
/* 32582 */           getGPRSSSLClientAuthentication());
/* 32583 */       hash = 37 * hash + 2030;
/* 32584 */       hash = 53 * hash + Internal.hashBoolean(
/* 32585 */           getGPRSDataCompression());
/* 32586 */       hash = 37 * hash + 2035;
/* 32587 */       hash = 53 * hash + this.authenticationMode_;
/* 32588 */       hash = 37 * hash + 2036;
/* 32589 */       hash = 53 * hash + getAuthenticationCode().hashCode();
/* 32590 */       hash = 37 * hash + 2040;
/* 32591 */       hash = 53 * hash + Internal.hashBoolean(
/* 32592 */           getFirmwareUpdateEnabled());
/* 32593 */       hash = 37 * hash + 2041;
/* 32594 */       hash = 53 * hash + getFirmwareUpdateChannel().hashCode();
/* 32595 */       hash = 37 * hash + 2042;
/* 32596 */       hash = 53 * hash + getFirmwareUpdateCheckInterval();
/* 32597 */       hash = 37 * hash + 2045;
/* 32598 */       hash = 53 * hash + getFirmwareUpdateServerAddress().hashCode();
/* 32599 */       hash = 37 * hash + 2046;
/* 32600 */       hash = 53 * hash + getFirmwareUpdateServerPort();
/* 32601 */       hash = 37 * hash + 2047;
/* 32602 */       hash = 53 * hash + this.firmwareUpdateServerProtocol_;
/* 32603 */       hash = 37 * hash + 2048;
/* 32604 */       hash = 53 * hash + getFirmwareUpdateLinkTimeout();
/* 32605 */       hash = 37 * hash + 2049;
/* 32606 */       hash = 53 * hash + getFirmwareUpdateResponseTimeout();
/* 32607 */       hash = 37 * hash + 3000;
/* 32608 */       hash = 53 * hash + Internal.hashBoolean(
/* 32609 */           getSMSDataSending());
/* 32610 */       hash = 37 * hash + 3001;
/* 32611 */       hash = 53 * hash + getSMSDataSendNumber().hashCode();
/* 32612 */       hash = 37 * hash + 3002;
/* 32613 */       hash = 53 * hash + getSMSPassword().hashCode();
/* 32614 */       hash = 37 * hash + 3003;
/* 32615 */       hash = 53 * hash + getSMSEventTimeZone();
/* 32616 */       hash = 37 * hash + 3051;
/* 32617 */       hash = 53 * hash + this.callIncommingCallAction_;
/* 32618 */       hash = 37 * hash + 3055;
/* 32619 */       hash = 53 * hash + getCallDigitalInput1CallTo();
/* 32620 */       hash = 37 * hash + 3056;
/* 32621 */       hash = 53 * hash + getCallDigitalInput2CallTo();
/* 32622 */       hash = 37 * hash + 3057;
/* 32623 */       hash = 53 * hash + getCallDigitalInput3CallTo();
/* 32624 */       hash = 37 * hash + 3100;
/* 32625 */       hash = 53 * hash + getAuthorizedNumber1().hashCode();
/* 32626 */       hash = 37 * hash + 3101;
/* 32627 */       hash = 53 * hash + getAuthorizedNumber2().hashCode();
/* 32628 */       hash = 37 * hash + 3102;
/* 32629 */       hash = 53 * hash + getAuthorizedNumber3().hashCode();
/* 32630 */       hash = 37 * hash + 3103;
/* 32631 */       hash = 53 * hash + getAuthorizedNumber4().hashCode();
/* 32632 */       hash = 37 * hash + 3104;
/* 32633 */       hash = 53 * hash + getAuthorizedNumber5().hashCode();
/* 32634 */       hash = 37 * hash + 3105;
/* 32635 */       hash = 53 * hash + getAuthorizedNumber6().hashCode();
/* 32636 */       hash = 37 * hash + 3106;
/* 32637 */       hash = 53 * hash + getAuthorizedNumber7().hashCode();
/* 32638 */       hash = 37 * hash + 3107;
/* 32639 */       hash = 53 * hash + getAuthorizedNumber8().hashCode();
/* 32640 */       hash = 37 * hash + 3108;
/* 32641 */       hash = 53 * hash + getAuthorizedNumber9().hashCode();
/* 32642 */       hash = 37 * hash + 3109;
/* 32643 */       hash = 53 * hash + getAuthorizedNumber10().hashCode();
/* 32644 */       hash = 37 * hash + 3200;
/* 32645 */       hash = 53 * hash + getGsmPredefinedNumber1().hashCode();
/* 32646 */       hash = 37 * hash + 3201;
/* 32647 */       hash = 53 * hash + getGsmPredefinedNumber2().hashCode();
/* 32648 */       hash = 37 * hash + 3202;
/* 32649 */       hash = 53 * hash + getGsmPredefinedNumber3().hashCode();
/* 32650 */       hash = 37 * hash + 3203;
/* 32651 */       hash = 53 * hash + getGsmPredefinedNumber4().hashCode();
/* 32652 */       hash = 37 * hash + 3204;
/* 32653 */       hash = 53 * hash + getGsmPredefinedNumber5().hashCode();
/* 32654 */       hash = 37 * hash + 3205;
/* 32655 */       hash = 53 * hash + getGsmPredefinedNumber6().hashCode();
/* 32656 */       hash = 37 * hash + 3206;
/* 32657 */       hash = 53 * hash + getGsmPredefinedNumber7().hashCode();
/* 32658 */       hash = 37 * hash + 3207;
/* 32659 */       hash = 53 * hash + getGsmPredefinedNumber8().hashCode();
/* 32660 */       hash = 37 * hash + 3208;
/* 32661 */       hash = 53 * hash + getGsmPredefinedNumber9().hashCode();
/* 32662 */       hash = 37 * hash + 3209;
/* 32663 */       hash = 53 * hash + getGsmPredefinedNumber10().hashCode();
/* 32664 */       hash = 37 * hash + 5000;
/* 32665 */       hash = 53 * hash + getRoamingOperator1().hashCode();
/* 32666 */       hash = 37 * hash + 5001;
/* 32667 */       hash = 53 * hash + getRoamingOperator2().hashCode();
/* 32668 */       hash = 37 * hash + 5002;
/* 32669 */       hash = 53 * hash + getRoamingOperator3().hashCode();
/* 32670 */       hash = 37 * hash + 5003;
/* 32671 */       hash = 53 * hash + getRoamingOperator4().hashCode();
/* 32672 */       hash = 37 * hash + 5004;
/* 32673 */       hash = 53 * hash + getRoamingOperator5().hashCode();
/* 32674 */       hash = 37 * hash + 10000;
/* 32675 */       hash = 53 * hash + getDAQStopHomeMinPeriod();
/* 32676 */       hash = 37 * hash + 10100;
/* 32677 */       hash = 53 * hash + getDAQStopRoamingMinPeriod();
/* 32678 */       hash = 37 * hash + 10050;
/* 32679 */       hash = 53 * hash + getDAQMovingHomeMinPeriod();
/* 32680 */       hash = 37 * hash + 10051;
/* 32681 */       hash = 53 * hash + getDAQMovingHomeMinPathDeviation();
/* 32682 */       hash = 37 * hash + 10150;
/* 32683 */       hash = 53 * hash + getDAQMovingRoamingMinPeriod();
/* 32684 */       hash = 37 * hash + 10151;
/* 32685 */       hash = 53 * hash + getDAQMovingRoamingMinPathDeviation();
/* 32686 */       if (hasGeoZone1()) {
/* 32687 */         hash = 37 * hash + 20000;
/* 32688 */         hash = 53 * hash + getGeoZone1().hashCode();
/*       */       } 
/* 32690 */       if (hasGeoZone2()) {
/* 32691 */         hash = 37 * hash + 20020;
/* 32692 */         hash = 53 * hash + getGeoZone2().hashCode();
/*       */       } 
/* 32694 */       if (hasGeoZone3()) {
/* 32695 */         hash = 37 * hash + 20040;
/* 32696 */         hash = 53 * hash + getGeoZone3().hashCode();
/*       */       } 
/* 32698 */       if (hasGeoZone4()) {
/* 32699 */         hash = 37 * hash + 20060;
/* 32700 */         hash = 53 * hash + getGeoZone4().hashCode();
/*       */       } 
/* 32702 */       if (hasGeoZone5()) {
/* 32703 */         hash = 37 * hash + 20080;
/* 32704 */         hash = 53 * hash + getGeoZone5().hashCode();
/*       */       } 
/* 32706 */       if (hasGeoZone6()) {
/* 32707 */         hash = 37 * hash + 20100;
/* 32708 */         hash = 53 * hash + getGeoZone6().hashCode();
/*       */       } 
/* 32710 */       if (hasGeoZone7()) {
/* 32711 */         hash = 37 * hash + 20120;
/* 32712 */         hash = 53 * hash + getGeoZone7().hashCode();
/*       */       } 
/* 32714 */       if (hasGeoZone8()) {
/* 32715 */         hash = 37 * hash + 20140;
/* 32716 */         hash = 53 * hash + getGeoZone8().hashCode();
/*       */       } 
/* 32718 */       if (hasGeoZone9()) {
/* 32719 */         hash = 37 * hash + 20160;
/* 32720 */         hash = 53 * hash + getGeoZone9().hashCode();
/*       */       } 
/* 32722 */       if (hasGeoZone10()) {
/* 32723 */         hash = 37 * hash + 20180;
/* 32724 */         hash = 53 * hash + getGeoZone10().hashCode();
/*       */       } 
/* 32726 */       if (hasGeoZone11()) {
/* 32727 */         hash = 37 * hash + 20200;
/* 32728 */         hash = 53 * hash + getGeoZone11().hashCode();
/*       */       } 
/* 32730 */       if (hasGeoZone12()) {
/* 32731 */         hash = 37 * hash + 20220;
/* 32732 */         hash = 53 * hash + getGeoZone12().hashCode();
/*       */       } 
/* 32734 */       if (hasGeoZone13()) {
/* 32735 */         hash = 37 * hash + 20240;
/* 32736 */         hash = 53 * hash + getGeoZone13().hashCode();
/*       */       } 
/* 32738 */       if (hasGeoZone14()) {
/* 32739 */         hash = 37 * hash + 20260;
/* 32740 */         hash = 53 * hash + getGeoZone14().hashCode();
/*       */       } 
/* 32742 */       if (hasGeoZone15()) {
/* 32743 */         hash = 37 * hash + 20280;
/* 32744 */         hash = 53 * hash + getGeoZone15().hashCode();
/*       */       } 
/* 32746 */       if (hasGeoZone16()) {
/* 32747 */         hash = 37 * hash + 20300;
/* 32748 */         hash = 53 * hash + getGeoZone16().hashCode();
/*       */       } 
/* 32750 */       if (hasGeoZone17()) {
/* 32751 */         hash = 37 * hash + 20320;
/* 32752 */         hash = 53 * hash + getGeoZone17().hashCode();
/*       */       } 
/* 32754 */       if (hasGeoZone18()) {
/* 32755 */         hash = 37 * hash + 20340;
/* 32756 */         hash = 53 * hash + getGeoZone18().hashCode();
/*       */       } 
/* 32758 */       if (hasGeoZone19()) {
/* 32759 */         hash = 37 * hash + 20360;
/* 32760 */         hash = 53 * hash + getGeoZone19().hashCode();
/*       */       } 
/* 32762 */       if (hasGeoZone20()) {
/* 32763 */         hash = 37 * hash + 20380;
/* 32764 */         hash = 53 * hash + getGeoZone20().hashCode();
/*       */       } 
/* 32766 */       if (hasGeoZone21()) {
/* 32767 */         hash = 37 * hash + 20400;
/* 32768 */         hash = 53 * hash + getGeoZone21().hashCode();
/*       */       } 
/* 32770 */       if (hasGeoZone22()) {
/* 32771 */         hash = 37 * hash + 20420;
/* 32772 */         hash = 53 * hash + getGeoZone22().hashCode();
/*       */       } 
/* 32774 */       if (hasGeoZone23()) {
/* 32775 */         hash = 37 * hash + 20440;
/* 32776 */         hash = 53 * hash + getGeoZone23().hashCode();
/*       */       } 
/* 32778 */       if (hasGeoZone24()) {
/* 32779 */         hash = 37 * hash + 20460;
/* 32780 */         hash = 53 * hash + getGeoZone24().hashCode();
/*       */       } 
/* 32782 */       if (hasGeoZone25()) {
/* 32783 */         hash = 37 * hash + 20480;
/* 32784 */         hash = 53 * hash + getGeoZone25().hashCode();
/*       */       } 
/* 32786 */       if (hasGeoZone26()) {
/* 32787 */         hash = 37 * hash + 20500;
/* 32788 */         hash = 53 * hash + getGeoZone26().hashCode();
/*       */       } 
/* 32790 */       if (hasGeoZone27()) {
/* 32791 */         hash = 37 * hash + 20520;
/* 32792 */         hash = 53 * hash + getGeoZone27().hashCode();
/*       */       } 
/* 32794 */       if (hasGeoZone28()) {
/* 32795 */         hash = 37 * hash + 20540;
/* 32796 */         hash = 53 * hash + getGeoZone28().hashCode();
/*       */       } 
/* 32798 */       if (hasGeoZone29()) {
/* 32799 */         hash = 37 * hash + 20560;
/* 32800 */         hash = 53 * hash + getGeoZone29().hashCode();
/*       */       } 
/* 32802 */       if (hasGeoZone30()) {
/* 32803 */         hash = 37 * hash + 20580;
/* 32804 */         hash = 53 * hash + getGeoZone30().hashCode();
/*       */       } 
/* 32806 */       if (hasGeoZone31()) {
/* 32807 */         hash = 37 * hash + 20600;
/* 32808 */         hash = 53 * hash + getGeoZone31().hashCode();
/*       */       } 
/* 32810 */       if (hasGeoZone32()) {
/* 32811 */         hash = 37 * hash + 20620;
/* 32812 */         hash = 53 * hash + getGeoZone32().hashCode();
/*       */       } 
/* 32814 */       if (hasGeoZone33()) {
/* 32815 */         hash = 37 * hash + 20640;
/* 32816 */         hash = 53 * hash + getGeoZone33().hashCode();
/*       */       } 
/* 32818 */       if (hasGeoZone34()) {
/* 32819 */         hash = 37 * hash + 20660;
/* 32820 */         hash = 53 * hash + getGeoZone34().hashCode();
/*       */       } 
/* 32822 */       if (hasGeoZone35()) {
/* 32823 */         hash = 37 * hash + 20680;
/* 32824 */         hash = 53 * hash + getGeoZone35().hashCode();
/*       */       } 
/* 32826 */       if (hasGeoZone36()) {
/* 32827 */         hash = 37 * hash + 20700;
/* 32828 */         hash = 53 * hash + getGeoZone36().hashCode();
/*       */       } 
/* 32830 */       if (hasGeoZone37()) {
/* 32831 */         hash = 37 * hash + 20720;
/* 32832 */         hash = 53 * hash + getGeoZone37().hashCode();
/*       */       } 
/* 32834 */       if (hasGeoZone38()) {
/* 32835 */         hash = 37 * hash + 20740;
/* 32836 */         hash = 53 * hash + getGeoZone38().hashCode();
/*       */       } 
/* 32838 */       if (hasGeoZone39()) {
/* 32839 */         hash = 37 * hash + 20760;
/* 32840 */         hash = 53 * hash + getGeoZone39().hashCode();
/*       */       } 
/* 32842 */       if (hasGeoZone40()) {
/* 32843 */         hash = 37 * hash + 20780;
/* 32844 */         hash = 53 * hash + getGeoZone40().hashCode();
/*       */       } 
/* 32846 */       if (hasGeoZone41()) {
/* 32847 */         hash = 37 * hash + 20800;
/* 32848 */         hash = 53 * hash + getGeoZone41().hashCode();
/*       */       } 
/* 32850 */       if (hasGeoZone42()) {
/* 32851 */         hash = 37 * hash + 20820;
/* 32852 */         hash = 53 * hash + getGeoZone42().hashCode();
/*       */       } 
/* 32854 */       if (hasGeoZone43()) {
/* 32855 */         hash = 37 * hash + 20840;
/* 32856 */         hash = 53 * hash + getGeoZone43().hashCode();
/*       */       } 
/* 32858 */       if (hasGeoZone44()) {
/* 32859 */         hash = 37 * hash + 20860;
/* 32860 */         hash = 53 * hash + getGeoZone44().hashCode();
/*       */       } 
/* 32862 */       if (hasGeoZone45()) {
/* 32863 */         hash = 37 * hash + 20880;
/* 32864 */         hash = 53 * hash + getGeoZone45().hashCode();
/*       */       } 
/* 32866 */       if (hasGeoZone46()) {
/* 32867 */         hash = 37 * hash + 20900;
/* 32868 */         hash = 53 * hash + getGeoZone46().hashCode();
/*       */       } 
/* 32870 */       if (hasGeoZone47()) {
/* 32871 */         hash = 37 * hash + 20920;
/* 32872 */         hash = 53 * hash + getGeoZone47().hashCode();
/*       */       } 
/* 32874 */       if (hasGeoZone48()) {
/* 32875 */         hash = 37 * hash + 20940;
/* 32876 */         hash = 53 * hash + getGeoZone48().hashCode();
/*       */       } 
/* 32878 */       if (hasGeoZone49()) {
/* 32879 */         hash = 37 * hash + 20960;
/* 32880 */         hash = 53 * hash + getGeoZone49().hashCode();
/*       */       } 
/* 32882 */       if (hasGeoZone50()) {
/* 32883 */         hash = 37 * hash + 20980;
/* 32884 */         hash = 53 * hash + getGeoZone50().hashCode();
/*       */       } 
/* 32886 */       hash = 37 * hash + 28000;
/* 32887 */       hash = 53 * hash + getTripStartSpeed();
/* 32888 */       hash = 37 * hash + 28001;
/* 32889 */       hash = 53 * hash + Internal.hashBoolean(
/* 32890 */           getTripUseIgnition());
/* 32891 */       hash = 37 * hash + 28002;
/* 32892 */       hash = 53 * hash + getTripParkDetectionTimeout();
/* 32893 */       hash = 37 * hash + 28100;
/* 32894 */       hash = 53 * hash + Internal.hashBoolean(
/* 32895 */           getOverspeedingEnable());
/* 32896 */       hash = 37 * hash + 28101;
/* 32897 */       hash = 53 * hash + getOverspeedingLimit();
/* 32898 */       hash = 37 * hash + 28102;
/* 32899 */       hash = 53 * hash + getOverspeedingActivationSpeed();
/* 32900 */       hash = 37 * hash + 28103;
/* 32901 */       hash = 53 * hash + this.overspeedingDeactivationMode_;
/* 32902 */       hash = 37 * hash + 28104;
/* 32903 */       hash = 53 * hash + getOverspeedingDeactivationValue();
/* 32904 */       hash = 37 * hash + 28140;
/* 32905 */       hash = 53 * hash + Internal.hashBoolean(
/* 32906 */           getUSSDEnabled());
/* 32907 */       hash = 37 * hash + 28141;
/* 32908 */       hash = 53 * hash + getUSSDID();
/* 32909 */       hash = 37 * hash + 28142;
/* 32910 */       hash = 53 * hash + getUSSDInterval();
/* 32911 */       hash = 37 * hash + 28143;
/* 32912 */       hash = 53 * hash + getUSSDCode().hashCode();
/* 32913 */       hash = 37 * hash + 28150;
/* 32914 */       hash = 53 * hash + getSpeedSensorKmPulseCount();
/* 32915 */       hash = 37 * hash + 28200;
/* 32916 */       hash = 53 * hash + Internal.hashBoolean(
/* 32917 */           getCrashDetectionEnabled());
/* 32918 */       hash = 37 * hash + 28201;
/* 32919 */       hash = 53 * hash + getCrashDetectionLevel1Threshold();
/* 32920 */       hash = 37 * hash + 28202;
/* 32921 */       hash = 53 * hash + getCrashDetectionLevel2Threshold();
/* 32922 */       hash = 37 * hash + 28203;
/* 32923 */       hash = 53 * hash + getCrashDetectionLevel3Threshold();
/* 32924 */       hash = 37 * hash + 28205;
/* 32925 */       hash = 53 * hash + this.crashDetectionTrace_;
/* 32926 */       hash = 37 * hash + 28210;
/* 32927 */       hash = 53 * hash + getCrashDetectionDuration();
/* 32928 */       hash = 37 * hash + 28220;
/* 32929 */       hash = 53 * hash + getCrashDetectionSendSMSTo();
/* 32930 */       hash = 37 * hash + 28221;
/* 32931 */       hash = 53 * hash + getCrashDetectionSMSText().hashCode();
/* 32932 */       hash = 37 * hash + 28225;
/* 32933 */       hash = 53 * hash + getCrashDetectionCallTo();
/* 32934 */       hash = 37 * hash + 28230;
/* 32935 */       hash = 53 * hash + Internal.hashBoolean(
/* 32936 */           getRolloverDetectionEnabled());
/* 32937 */       hash = 37 * hash + 29000;
/* 32938 */       hash = 53 * hash + this.driverRegistrationMode_;
/* 32939 */       hash = 37 * hash + 29001;
/* 32940 */       hash = 53 * hash + this.driverRegistrationAuthentication_;
/* 32941 */       hash = 37 * hash + 29002;
/* 32942 */       hash = 53 * hash + getDriverRegistrationDeregistrationTimeout();
/* 32943 */       hash = 37 * hash + 29010;
/* 32944 */       hash = 53 * hash + this.driverRegistrationBuzzerDigitalOutput_;
/* 32945 */       hash = 37 * hash + 29011;
/* 32946 */       hash = 53 * hash + this.driverRegistrationImmobilizerDigitalOutput_;
/* 32947 */       hash = 37 * hash + 29012;
/* 32948 */       hash = 53 * hash + Internal.hashBoolean(
/* 32949 */           getDriverRegistrationImmobilizerActiveLow());
/* 32950 */       hash = 37 * hash + 29100;
/* 32951 */       hash = 53 * hash + Internal.hashLong(
/* 32952 */           getDriverRegistrationAuthorizedID1());
/* 32953 */       hash = 37 * hash + 29101;
/* 32954 */       hash = 53 * hash + Internal.hashLong(
/* 32955 */           getDriverRegistrationAuthorizedID2());
/* 32956 */       hash = 37 * hash + 29102;
/* 32957 */       hash = 53 * hash + Internal.hashLong(
/* 32958 */           getDriverRegistrationAuthorizedID3());
/* 32959 */       hash = 37 * hash + 29103;
/* 32960 */       hash = 53 * hash + Internal.hashLong(
/* 32961 */           getDriverRegistrationAuthorizedID4());
/* 32962 */       hash = 37 * hash + 29104;
/* 32963 */       hash = 53 * hash + Internal.hashLong(
/* 32964 */           getDriverRegistrationAuthorizedID5());
/* 32965 */       hash = 37 * hash + 29105;
/* 32966 */       hash = 53 * hash + Internal.hashLong(
/* 32967 */           getDriverRegistrationAuthorizedID6());
/* 32968 */       hash = 37 * hash + 29106;
/* 32969 */       hash = 53 * hash + Internal.hashLong(
/* 32970 */           getDriverRegistrationAuthorizedID7());
/* 32971 */       hash = 37 * hash + 29107;
/* 32972 */       hash = 53 * hash + Internal.hashLong(
/* 32973 */           getDriverRegistrationAuthorizedID8());
/* 32974 */       hash = 37 * hash + 29108;
/* 32975 */       hash = 53 * hash + Internal.hashLong(
/* 32976 */           getDriverRegistrationAuthorizedID9());
/* 32977 */       hash = 37 * hash + 29109;
/* 32978 */       hash = 53 * hash + Internal.hashLong(
/* 32979 */           getDriverRegistrationAuthorizedID10());
/* 32980 */       hash = 37 * hash + 30000;
/* 32981 */       hash = 53 * hash + Internal.hashBoolean(
/* 32982 */           getECODriveActive());
/* 32983 */       hash = 37 * hash + 30001;
/* 32984 */       hash = 53 * hash + getECOOverSpeedingLimit();
/* 32985 */       hash = 37 * hash + 30002;
/* 32986 */       hash = 53 * hash + getECORPMGreenBandLowLimit();
/* 32987 */       hash = 37 * hash + 30003;
/* 32988 */       hash = 53 * hash + getECORPMGreenBandHighLimit();
/* 32989 */       hash = 37 * hash + 30004;
/* 32990 */       hash = 53 * hash + getECOHarshBreakingLimit();
/* 32991 */       hash = 37 * hash + 30005;
/* 32992 */       hash = 53 * hash + getECOExtremeBreakingLimit();
/* 32993 */       hash = 37 * hash + 30006;
/* 32994 */       hash = 53 * hash + getECOHarshAccelerationLimit();
/* 32995 */       hash = 37 * hash + 30007;
/* 32996 */       hash = 53 * hash + getECOCorneringLimit();
/* 32997 */       hash = 37 * hash + 30008;
/* 32998 */       hash = 53 * hash + getECOIdlingDelay();
/* 32999 */       hash = 37 * hash + 30009;
/* 33000 */       hash = 53 * hash + getECOIdlingSpeed();
/* 33001 */       hash = 37 * hash + 30010;
/* 33002 */       hash = 53 * hash + getECOCruiseControlSpeed();
/* 33003 */       hash = 37 * hash + 30020;
/* 33004 */       hash = 53 * hash + Internal.hashBoolean(
/* 33005 */           getECOCalculateOnlyWhenEngineOn());
/* 33006 */       hash = 37 * hash + 30021;
/* 33007 */       hash = 53 * hash + Internal.hashBoolean(
/* 33008 */           getECOCustomEngineSource());
/* 33009 */       hash = 37 * hash + 30022;
/* 33010 */       hash = 53 * hash + Internal.hashBoolean(
/* 33011 */           getECOEngineOnDIN1());
/* 33012 */       hash = 37 * hash + 30023;
/* 33013 */       hash = 53 * hash + Internal.hashBoolean(
/* 33014 */           getECOEngineOnDIN2());
/* 33015 */       hash = 37 * hash + 30024;
/* 33016 */       hash = 53 * hash + Internal.hashBoolean(
/* 33017 */           getECOEngineOnMovementSensor());
/* 33018 */       hash = 37 * hash + 30025;
/* 33019 */       hash = 53 * hash + Internal.hashBoolean(
/* 33020 */           getECOEngineOnPowerSupplyAvailable());
/* 33021 */       hash = 37 * hash + 30026;
/* 33022 */       hash = 53 * hash + getECOEngineOnCanRPMLow();
/* 33023 */       hash = 37 * hash + 30027;
/* 33024 */       hash = 53 * hash + getECOEngineOnCanRPMHigh();
/* 33025 */       hash = 37 * hash + 30028;
/* 33026 */       hash = 53 * hash + this.eCOEngineOnOperator_;
/* 33027 */       hash = 37 * hash + 30029;
/* 33028 */       hash = 53 * hash + getECOEngineOnExternalVoltage();
/* 33029 */       hash = 37 * hash + 30100;
/* 33030 */       hash = 53 * hash + this.eCUInterface_;
/* 33031 */       hash = 37 * hash + 30150;
/* 33032 */       hash = 53 * hash + this.fuelConsumptionEnabled_;
/* 33033 */       hash = 37 * hash + 30151;
/* 33034 */       hash = 53 * hash + getFuelConsumptionEngineDisplacement();
/* 33035 */       hash = 37 * hash + 30152;
/* 33036 */       hash = 53 * hash + getFuelConsumptionCylinders();
/* 33037 */       hash = 37 * hash + 30153;
/* 33038 */       hash = 53 * hash + getFuelConsumptionInjectorPerformance();
/* 33039 */       hash = 37 * hash + 30154;
/* 33040 */       hash = 53 * hash + getFuelConsumptionVolumetricEfficiently();
/* 33041 */       hash = 37 * hash + 30200;
/* 33042 */       hash = 53 * hash + getFaultCodesReadTime();
/* 33043 */       hash = 37 * hash + 30500;
/* 33044 */       hash = 53 * hash + getSIPAADLinkTimeout();
/* 33045 */       hash = 37 * hash + 30501;
/* 33046 */       hash = 53 * hash + getSIPAADResponseTimeout();
/* 33047 */       hash = 37 * hash + 30502;
/* 33048 */       hash = 53 * hash + getSIPAADServerAddress().hashCode();
/* 33049 */       hash = 37 * hash + 30503;
/* 33050 */       hash = 53 * hash + getSIPAADServerPort();
/* 33051 */       hash = 37 * hash + 30504;
/* 33052 */       hash = 53 * hash + this.sIPAADServerProtocol_;
/* 33053 */       hash = 37 * hash + 30505;
/* 33054 */       hash = 53 * hash + Internal.hashBoolean(
/* 33055 */           getSIPAADSSLClientAuthentication());
/* 33056 */       if (hasIOTime()) {
/* 33057 */         hash = 37 * hash + 50003;
/* 33058 */         hash = 53 * hash + getIOTime().hashCode();
/*       */       } 
/* 33060 */       if (hasIOAngle()) {
/* 33061 */         hash = 37 * hash + 50004;
/* 33062 */         hash = 53 * hash + getIOAngle().hashCode();
/*       */       } 
/* 33064 */       if (hasIOSpeed()) {
/* 33065 */         hash = 37 * hash + 50005;
/* 33066 */         hash = 53 * hash + getIOSpeed().hashCode();
/*       */       } 
/* 33068 */       if (hasIOSleepMode()) {
/* 33069 */         hash = 37 * hash + 50008;
/* 33070 */         hash = 53 * hash + getIOSleepMode().hashCode();
/*       */       } 
/* 33072 */       if (hasIOIgnition()) {
/* 33073 */         hash = 37 * hash + 50010;
/* 33074 */         hash = 53 * hash + getIOIgnition().hashCode();
/*       */       } 
/* 33076 */       if (hasIOMovement()) {
/* 33077 */         hash = 37 * hash + 50011;
/* 33078 */         hash = 53 * hash + getIOMovement().hashCode();
/*       */       } 
/* 33080 */       if (hasIODataMode()) {
/* 33081 */         hash = 37 * hash + 50012;
/* 33082 */         hash = 53 * hash + getIODataMode().hashCode();
/*       */       } 
/* 33084 */       if (hasIOGnssStatus()) {
/* 33085 */         hash = 37 * hash + 50020;
/* 33086 */         hash = 53 * hash + getIOGnssStatus().hashCode();
/*       */       } 
/* 33088 */       if (hasIOGnssHDOP()) {
/* 33089 */         hash = 37 * hash + 50021;
/* 33090 */         hash = 53 * hash + getIOGnssHDOP().hashCode();
/*       */       } 
/* 33092 */       if (hasIOGnssPDOP()) {
/* 33093 */         hash = 37 * hash + 50022;
/* 33094 */         hash = 53 * hash + getIOGnssPDOP().hashCode();
/*       */       } 
/* 33096 */       if (hasIOGnssJammingStatus()) {
/* 33097 */         hash = 37 * hash + 50023;
/* 33098 */         hash = 53 * hash + getIOGnssJammingStatus().hashCode();
/*       */       } 
/* 33100 */       if (hasIOGsmSignal()) {
/* 33101 */         hash = 37 * hash + 50030;
/* 33102 */         hash = 53 * hash + getIOGsmSignal().hashCode();
/*       */       } 
/* 33104 */       if (hasIOGsmCellId()) {
/* 33105 */         hash = 37 * hash + 50031;
/* 33106 */         hash = 53 * hash + getIOGsmCellId().hashCode();
/*       */       } 
/* 33108 */       if (hasIOGsmAreaCode()) {
/* 33109 */         hash = 37 * hash + 50032;
/* 33110 */         hash = 53 * hash + getIOGsmAreaCode().hashCode();
/*       */       } 
/* 33112 */       if (hasIOGsmOperator()) {
/* 33113 */         hash = 37 * hash + 50033;
/* 33114 */         hash = 53 * hash + getIOGsmOperator().hashCode();
/*       */       } 
/* 33116 */       if (hasIOGsmTemperature()) {
/* 33117 */         hash = 37 * hash + 50034;
/* 33118 */         hash = 53 * hash + getIOGsmTemperature().hashCode();
/*       */       } 
/* 33120 */       if (hasIOGsmJammingStatus()) {
/* 33121 */         hash = 37 * hash + 50035;
/* 33122 */         hash = 53 * hash + getIOGsmJammingStatus().hashCode();
/*       */       } 
/* 33124 */       if (hasIOExternalVoltage()) {
/* 33125 */         hash = 37 * hash + 50040;
/* 33126 */         hash = 53 * hash + getIOExternalVoltage().hashCode();
/*       */       } 
/* 33128 */       if (hasIOBatteryVoltage()) {
/* 33129 */         hash = 37 * hash + 50041;
/* 33130 */         hash = 53 * hash + getIOBatteryVoltage().hashCode();
/*       */       } 
/* 33132 */       if (hasIOBatteryCurrent()) {
/* 33133 */         hash = 37 * hash + 50042;
/* 33134 */         hash = 53 * hash + getIOBatteryCurrent().hashCode();
/*       */       } 
/* 33136 */       if (hasIOTotalOdometer()) {
/* 33137 */         hash = 37 * hash + 50050;
/* 33138 */         hash = 53 * hash + getIOTotalOdometer().hashCode();
/*       */       } 
/* 33140 */       if (hasIOOdometer()) {
/* 33141 */         hash = 37 * hash + 50051;
/* 33142 */         hash = 53 * hash + getIOOdometer().hashCode();
/*       */       } 
/* 33144 */       if (hasIOEngineOnTime()) {
/* 33145 */         hash = 37 * hash + 50052;
/* 33146 */         hash = 53 * hash + getIOEngineOnTime().hashCode();
/*       */       } 
/* 33148 */       if (hasIOEngineOnTimeDelta()) {
/* 33149 */         hash = 37 * hash + 50053;
/* 33150 */         hash = 53 * hash + getIOEngineOnTimeDelta().hashCode();
/*       */       } 
/* 33152 */       if (hasIOIdlingTime()) {
/* 33153 */         hash = 37 * hash + 50054;
/* 33154 */         hash = 53 * hash + getIOIdlingTime().hashCode();
/*       */       } 
/* 33156 */       if (hasIOIdlingTimeDelta()) {
/* 33157 */         hash = 37 * hash + 50055;
/* 33158 */         hash = 53 * hash + getIOIdlingTimeDelta().hashCode();
/*       */       } 
/* 33160 */       if (hasIOSpeedSensorSpeed()) {
/* 33161 */         hash = 37 * hash + 50060;
/* 33162 */         hash = 53 * hash + getIOSpeedSensorSpeed().hashCode();
/*       */       } 
/* 33164 */       if (hasIOSpeedSensorDistance()) {
/* 33165 */         hash = 37 * hash + 50061;
/* 33166 */         hash = 53 * hash + getIOSpeedSensorDistance().hashCode();
/*       */       } 
/* 33168 */       if (hasIOSpeedSensorTotalDistance()) {
/* 33169 */         hash = 37 * hash + 50062;
/* 33170 */         hash = 53 * hash + getIOSpeedSensorTotalDistance().hashCode();
/*       */       } 
/* 33172 */       if (hasIOSpeedSensorMaxSpeed()) {
/* 33173 */         hash = 37 * hash + 50063;
/* 33174 */         hash = 53 * hash + getIOSpeedSensorMaxSpeed().hashCode();
/*       */       } 
/* 33176 */       if (hasIOSpeedSensorGPSSpeedDiff()) {
/* 33177 */         hash = 37 * hash + 50064;
/* 33178 */         hash = 53 * hash + getIOSpeedSensorGPSSpeedDiff().hashCode();
/*       */       } 
/* 33180 */       if (hasIODigitalInput1()) {
/* 33181 */         hash = 37 * hash + 50070;
/* 33182 */         hash = 53 * hash + getIODigitalInput1().hashCode();
/*       */       } 
/* 33184 */       if (hasIODigitalInput2()) {
/* 33185 */         hash = 37 * hash + 50071;
/* 33186 */         hash = 53 * hash + getIODigitalInput2().hashCode();
/*       */       } 
/* 33188 */       if (hasIOPowerSupply()) {
/* 33189 */         hash = 37 * hash + 50072;
/* 33190 */         hash = 53 * hash + getIOPowerSupply().hashCode();
/*       */       } 
/* 33192 */       if (hasIODigitalInput3()) {
/* 33193 */         hash = 37 * hash + 50073;
/* 33194 */         hash = 53 * hash + getIODigitalInput3().hashCode();
/*       */       } 
/* 33196 */       if (hasIOVehicleConnection()) {
/* 33197 */         hash = 37 * hash + 50079;
/* 33198 */         hash = 53 * hash + getIOVehicleConnection().hashCode();
/*       */       } 
/* 33200 */       if (hasIODigitalInput1Time()) {
/* 33201 */         hash = 37 * hash + 50080;
/* 33202 */         hash = 53 * hash + getIODigitalInput1Time().hashCode();
/*       */       } 
/* 33204 */       if (hasIODigitalInput1TimeDelta()) {
/* 33205 */         hash = 37 * hash + 50081;
/* 33206 */         hash = 53 * hash + getIODigitalInput1TimeDelta().hashCode();
/*       */       } 
/* 33208 */       if (hasIODigitalInput2Time()) {
/* 33209 */         hash = 37 * hash + 50082;
/* 33210 */         hash = 53 * hash + getIODigitalInput2Time().hashCode();
/*       */       } 
/* 33212 */       if (hasIODigitalInput2TimeDelta()) {
/* 33213 */         hash = 37 * hash + 50083;
/* 33214 */         hash = 53 * hash + getIODigitalInput2TimeDelta().hashCode();
/*       */       } 
/* 33216 */       if (hasIOPowerSupplyTime()) {
/* 33217 */         hash = 37 * hash + 50084;
/* 33218 */         hash = 53 * hash + getIOPowerSupplyTime().hashCode();
/*       */       } 
/* 33220 */       if (hasIOPowerSupplyTimeDelta()) {
/* 33221 */         hash = 37 * hash + 50085;
/* 33222 */         hash = 53 * hash + getIOPowerSupplyTimeDelta().hashCode();
/*       */       } 
/* 33224 */       if (hasIODigitalInput3Time()) {
/* 33225 */         hash = 37 * hash + 50086;
/* 33226 */         hash = 53 * hash + getIODigitalInput3Time().hashCode();
/*       */       } 
/* 33228 */       if (hasIODigitalInput3TimeDelta()) {
/* 33229 */         hash = 37 * hash + 50087;
/* 33230 */         hash = 53 * hash + getIODigitalInput3TimeDelta().hashCode();
/*       */       } 
/* 33232 */       if (hasIODigitalOutput1()) {
/* 33233 */         hash = 37 * hash + 50090;
/* 33234 */         hash = 53 * hash + getIODigitalOutput1().hashCode();
/*       */       } 
/* 33236 */       if (hasIODigitalOutput2()) {
/* 33237 */         hash = 37 * hash + 50091;
/* 33238 */         hash = 53 * hash + getIODigitalOutput2().hashCode();
/*       */       } 
/* 33240 */       if (hasIOAnalogInput1()) {
/* 33241 */         hash = 37 * hash + 50100;
/* 33242 */         hash = 53 * hash + getIOAnalogInput1().hashCode();
/*       */       } 
/* 33244 */       if (hasIOAnalogInput2()) {
/* 33245 */         hash = 37 * hash + 50101;
/* 33246 */         hash = 53 * hash + getIOAnalogInput2().hashCode();
/*       */       } 
/* 33248 */       if (hasIOAnalogInput3()) {
/* 33249 */         hash = 37 * hash + 50102;
/* 33250 */         hash = 53 * hash + getIOAnalogInput3().hashCode();
/*       */       } 
/* 33252 */       if (hasIOAxisX()) {
/* 33253 */         hash = 37 * hash + 50110;
/* 33254 */         hash = 53 * hash + getIOAxisX().hashCode();
/*       */       } 
/* 33256 */       if (hasIOAxisY()) {
/* 33257 */         hash = 37 * hash + 50111;
/* 33258 */         hash = 53 * hash + getIOAxisY().hashCode();
/*       */       } 
/* 33260 */       if (hasIOAxisZ()) {
/* 33261 */         hash = 37 * hash + 50112;
/* 33262 */         hash = 53 * hash + getIOAxisZ().hashCode();
/*       */       } 
/* 33264 */       if (hasIOECOMaxSpeed()) {
/* 33265 */         hash = 37 * hash + 50150;
/* 33266 */         hash = 53 * hash + getIOECOMaxSpeed().hashCode();
/*       */       } 
/* 33268 */       if (hasIOECONormalSpeedDistance()) {
/* 33269 */         hash = 37 * hash + 50151;
/* 33270 */         hash = 53 * hash + getIOECONormalSpeedDistance().hashCode();
/*       */       } 
/* 33272 */       if (hasIOECONormalSpeedTotalDistance()) {
/* 33273 */         hash = 37 * hash + 50152;
/* 33274 */         hash = 53 * hash + getIOECONormalSpeedTotalDistance().hashCode();
/*       */       } 
/* 33276 */       if (hasIOECONormalSpeedTimer()) {
/* 33277 */         hash = 37 * hash + 50153;
/* 33278 */         hash = 53 * hash + getIOECONormalSpeedTimer().hashCode();
/*       */       } 
/* 33280 */       if (hasIOECONormalSpeedTotalTimer()) {
/* 33281 */         hash = 37 * hash + 50154;
/* 33282 */         hash = 53 * hash + getIOECONormalSpeedTotalTimer().hashCode();
/*       */       } 
/* 33284 */       if (hasIOECOOverSpeedingDistance()) {
/* 33285 */         hash = 37 * hash + 50155;
/* 33286 */         hash = 53 * hash + getIOECOOverSpeedingDistance().hashCode();
/*       */       } 
/* 33288 */       if (hasIOECOOverSpeedingTotalDistance()) {
/* 33289 */         hash = 37 * hash + 50156;
/* 33290 */         hash = 53 * hash + getIOECOOverSpeedingTotalDistance().hashCode();
/*       */       } 
/* 33292 */       if (hasIOECOOverSpeedingTimer()) {
/* 33293 */         hash = 37 * hash + 50157;
/* 33294 */         hash = 53 * hash + getIOECOOverSpeedingTimer().hashCode();
/*       */       } 
/* 33296 */       if (hasIOECOOverSpeedingTotalTimer()) {
/* 33297 */         hash = 37 * hash + 50158;
/* 33298 */         hash = 53 * hash + getIOECOOverSpeedingTotalTimer().hashCode();
/*       */       } 
/* 33300 */       if (hasIOECOMaxRPM()) {
/* 33301 */         hash = 37 * hash + 50159;
/* 33302 */         hash = 53 * hash + getIOECOMaxRPM().hashCode();
/*       */       } 
/* 33304 */       if (hasIOECORPMGreenBandDistance()) {
/* 33305 */         hash = 37 * hash + 50160;
/* 33306 */         hash = 53 * hash + getIOECORPMGreenBandDistance().hashCode();
/*       */       } 
/* 33308 */       if (hasIOECORPMGreenBandTotalDistance()) {
/* 33309 */         hash = 37 * hash + 50161;
/* 33310 */         hash = 53 * hash + getIOECORPMGreenBandTotalDistance().hashCode();
/*       */       } 
/* 33312 */       if (hasIOECORPMGreenBandTimer()) {
/* 33313 */         hash = 37 * hash + 50162;
/* 33314 */         hash = 53 * hash + getIOECORPMGreenBandTimer().hashCode();
/*       */       } 
/* 33316 */       if (hasIOECORPMGreenBandTotalTimer()) {
/* 33317 */         hash = 37 * hash + 50163;
/* 33318 */         hash = 53 * hash + getIOECORPMGreenBandTotalTimer().hashCode();
/*       */       } 
/* 33320 */       if (hasIOECOOverRPMDistance()) {
/* 33321 */         hash = 37 * hash + 50164;
/* 33322 */         hash = 53 * hash + getIOECOOverRPMDistance().hashCode();
/*       */       } 
/* 33324 */       if (hasIOECOOverRPMTotalDistance()) {
/* 33325 */         hash = 37 * hash + 50165;
/* 33326 */         hash = 53 * hash + getIOECOOverRPMTotalDistance().hashCode();
/*       */       } 
/* 33328 */       if (hasIOECOOverRPMTimer()) {
/* 33329 */         hash = 37 * hash + 50166;
/* 33330 */         hash = 53 * hash + getIOECOOverRPMTimer().hashCode();
/*       */       } 
/* 33332 */       if (hasIOECOOverRPMTotalTimer()) {
/* 33333 */         hash = 37 * hash + 50167;
/* 33334 */         hash = 53 * hash + getIOECOOverRPMTotalTimer().hashCode();
/*       */       } 
/* 33336 */       if (hasIOECOIdlingEvent()) {
/* 33337 */         hash = 37 * hash + 50170;
/* 33338 */         hash = 53 * hash + getIOECOIdlingEvent().hashCode();
/*       */       } 
/* 33340 */       if (hasIOECOCruiseControlTimer()) {
/* 33341 */         hash = 37 * hash + 50171;
/* 33342 */         hash = 53 * hash + getIOECOCruiseControlTimer().hashCode();
/*       */       } 
/* 33344 */       if (hasIOECOCruiseControlTotalTimer()) {
/* 33345 */         hash = 37 * hash + 50172;
/* 33346 */         hash = 53 * hash + getIOECOCruiseControlTotalTimer().hashCode();
/*       */       } 
/* 33348 */       if (hasIOECOCruiseControlDistance()) {
/* 33349 */         hash = 37 * hash + 50173;
/* 33350 */         hash = 53 * hash + getIOECOCruiseControlDistance().hashCode();
/*       */       } 
/* 33352 */       if (hasIOECOCruiseControlTotalDistance()) {
/* 33353 */         hash = 37 * hash + 50174;
/* 33354 */         hash = 53 * hash + getIOECOCruiseControlTotalDistance().hashCode();
/*       */       } 
/* 33356 */       if (hasIOECOUnderRPMDistance()) {
/* 33357 */         hash = 37 * hash + 50175;
/* 33358 */         hash = 53 * hash + getIOECOUnderRPMDistance().hashCode();
/*       */       } 
/* 33360 */       if (hasIOECOUnderRPMTotalDistance()) {
/* 33361 */         hash = 37 * hash + 50176;
/* 33362 */         hash = 53 * hash + getIOECOUnderRPMTotalDistance().hashCode();
/*       */       } 
/* 33364 */       if (hasIOECOUnderRPMTimer()) {
/* 33365 */         hash = 37 * hash + 50177;
/* 33366 */         hash = 53 * hash + getIOECOUnderRPMTimer().hashCode();
/*       */       } 
/* 33368 */       if (hasIOECOUnderRPMTotalTimer()) {
/* 33369 */         hash = 37 * hash + 50178;
/* 33370 */         hash = 53 * hash + getIOECOUnderRPMTotalTimer().hashCode();
/*       */       } 
/* 33372 */       if (hasIOECOBreakCounter()) {
/* 33373 */         hash = 37 * hash + 50180;
/* 33374 */         hash = 53 * hash + getIOECOBreakCounter().hashCode();
/*       */       } 
/* 33376 */       if (hasIOECOHarshBreakCounter()) {
/* 33377 */         hash = 37 * hash + 50181;
/* 33378 */         hash = 53 * hash + getIOECOHarshBreakCounter().hashCode();
/*       */       } 
/* 33380 */       if (hasIOECOExtremeBreakCounter()) {
/* 33381 */         hash = 37 * hash + 50182;
/* 33382 */         hash = 53 * hash + getIOECOExtremeBreakCounter().hashCode();
/*       */       } 
/* 33384 */       if (hasIOECOHarshAccelerationCounter()) {
/* 33385 */         hash = 37 * hash + 50183;
/* 33386 */         hash = 53 * hash + getIOECOHarshAccelerationCounter().hashCode();
/*       */       } 
/* 33388 */       if (hasIOECOCorneringCounter()) {
/* 33389 */         hash = 37 * hash + 50184;
/* 33390 */         hash = 53 * hash + getIOECOCorneringCounter().hashCode();
/*       */       } 
/* 33392 */       if (hasIOECOTotalBreak()) {
/* 33393 */         hash = 37 * hash + 50185;
/* 33394 */         hash = 53 * hash + getIOECOTotalBreak().hashCode();
/*       */       } 
/* 33396 */       if (hasIOECOTotalHarshBreak()) {
/* 33397 */         hash = 37 * hash + 50186;
/* 33398 */         hash = 53 * hash + getIOECOTotalHarshBreak().hashCode();
/*       */       } 
/* 33400 */       if (hasIOECOTotalExtremeBreak()) {
/* 33401 */         hash = 37 * hash + 50187;
/* 33402 */         hash = 53 * hash + getIOECOTotalExtremeBreak().hashCode();
/*       */       } 
/* 33404 */       if (hasIOECOTotalHarshAcceleration()) {
/* 33405 */         hash = 37 * hash + 50188;
/* 33406 */         hash = 53 * hash + getIOECOTotalHarshAcceleration().hashCode();
/*       */       } 
/* 33408 */       if (hasIOECOTotalCornering()) {
/* 33409 */         hash = 37 * hash + 50189;
/* 33410 */         hash = 53 * hash + getIOECOTotalCornering().hashCode();
/*       */       } 
/* 33412 */       if (hasIOTrip()) {
/* 33413 */         hash = 37 * hash + 50300;
/* 33414 */         hash = 53 * hash + getIOTrip().hashCode();
/*       */       } 
/* 33416 */       if (hasIOTripTime()) {
/* 33417 */         hash = 37 * hash + 50301;
/* 33418 */         hash = 53 * hash + getIOTripTime().hashCode();
/*       */       } 
/* 33420 */       if (hasIOTripDistance()) {
/* 33421 */         hash = 37 * hash + 50302;
/* 33422 */         hash = 53 * hash + getIOTripDistance().hashCode();
/*       */       } 
/* 33424 */       if (hasIODriverID()) {
/* 33425 */         hash = 37 * hash + 50350;
/* 33426 */         hash = 53 * hash + getIODriverID().hashCode();
/*       */       } 
/* 33428 */       if (hasIOTemperatureSensor1()) {
/* 33429 */         hash = 37 * hash + 50400;
/* 33430 */         hash = 53 * hash + getIOTemperatureSensor1().hashCode();
/*       */       } 
/* 33432 */       if (hasIOTemperatureSensor1ID()) {
/* 33433 */         hash = 37 * hash + 50401;
/* 33434 */         hash = 53 * hash + getIOTemperatureSensor1ID().hashCode();
/*       */       } 
/* 33436 */       if (hasIOTemperatureSensor2()) {
/* 33437 */         hash = 37 * hash + 50402;
/* 33438 */         hash = 53 * hash + getIOTemperatureSensor2().hashCode();
/*       */       } 
/* 33440 */       if (hasIOTemperatureSensor2ID()) {
/* 33441 */         hash = 37 * hash + 50403;
/* 33442 */         hash = 53 * hash + getIOTemperatureSensor2ID().hashCode();
/*       */       } 
/* 33444 */       if (hasIOTemperatureSensor3()) {
/* 33445 */         hash = 37 * hash + 50404;
/* 33446 */         hash = 53 * hash + getIOTemperatureSensor3().hashCode();
/*       */       } 
/* 33448 */       if (hasIOTemperatureSensor3ID()) {
/* 33449 */         hash = 37 * hash + 50405;
/* 33450 */         hash = 53 * hash + getIOTemperatureSensor3ID().hashCode();
/*       */       } 
/* 33452 */       if (hasIOHumiditySensor1()) {
/* 33453 */         hash = 37 * hash + 50410;
/* 33454 */         hash = 53 * hash + getIOHumiditySensor1().hashCode();
/*       */       } 
/* 33456 */       if (hasIOTiltStatus()) {
/* 33457 */         hash = 37 * hash + 50490;
/* 33458 */         hash = 53 * hash + getIOTiltStatus().hashCode();
/*       */       } 
/* 33460 */       if (hasIOOBDEngineRPM()) {
/* 33461 */         hash = 37 * hash + 50500;
/* 33462 */         hash = 53 * hash + getIOOBDEngineRPM().hashCode();
/*       */       } 
/* 33464 */       if (hasIOOBDBatteryVoltage()) {
/* 33465 */         hash = 37 * hash + 50501;
/* 33466 */         hash = 53 * hash + getIOOBDBatteryVoltage().hashCode();
/*       */       } 
/* 33468 */       if (hasIOOBDEngineCoolantTemperature()) {
/* 33469 */         hash = 37 * hash + 50502;
/* 33470 */         hash = 53 * hash + getIOOBDEngineCoolantTemperature().hashCode();
/*       */       } 
/* 33472 */       if (hasIOOBDVehicleSpeed()) {
/* 33473 */         hash = 37 * hash + 50503;
/* 33474 */         hash = 53 * hash + getIOOBDVehicleSpeed().hashCode();
/*       */       } 
/* 33476 */       if (hasIOOBDTotalDistance()) {
/* 33477 */         hash = 37 * hash + 50504;
/* 33478 */         hash = 53 * hash + getIOOBDTotalDistance().hashCode();
/*       */       } 
/* 33480 */       if (hasIOOBDFuelRate()) {
/* 33481 */         hash = 37 * hash + 50505;
/* 33482 */         hash = 53 * hash + getIOOBDFuelRate().hashCode();
/*       */       } 
/* 33484 */       if (hasIOOBDTotalFuelUsed()) {
/* 33485 */         hash = 37 * hash + 50506;
/* 33486 */         hash = 53 * hash + getIOOBDTotalFuelUsed().hashCode();
/*       */       } 
/* 33488 */       if (hasIOOBDIntakeAirTemperature()) {
/* 33489 */         hash = 37 * hash + 50507;
/* 33490 */         hash = 53 * hash + getIOOBDIntakeAirTemperature().hashCode();
/*       */       } 
/* 33492 */       if (hasIOOBDIntakeManifoldAbsolutePressure()) {
/* 33493 */         hash = 37 * hash + 50508;
/* 33494 */         hash = 53 * hash + getIOOBDIntakeManifoldAbsolutePressure().hashCode();
/*       */       } 
/* 33496 */       if (hasIOOBDMalfunctionIndicatorLamp()) {
/* 33497 */         hash = 37 * hash + 50550;
/* 33498 */         hash = 53 * hash + getIOOBDMalfunctionIndicatorLamp().hashCode();
/*       */       } 
/* 33500 */       if (hasIODiagnosticTroubleCodesCount()) {
/* 33501 */         hash = 37 * hash + 50551;
/* 33502 */         hash = 53 * hash + getIODiagnosticTroubleCodesCount().hashCode();
/*       */       } 
/* 33504 */       if (hasIOOBDCalculatedEngineLoad()) {
/* 33505 */         hash = 37 * hash + 50552;
/* 33506 */         hash = 53 * hash + getIOOBDCalculatedEngineLoad().hashCode();
/*       */       } 
/* 33508 */       if (hasIOOBDMassAirFlowRate()) {
/* 33509 */         hash = 37 * hash + 50553;
/* 33510 */         hash = 53 * hash + getIOOBDMassAirFlowRate().hashCode();
/*       */       } 
/* 33512 */       if (hasIOOBDThrottlePosition()) {
/* 33513 */         hash = 37 * hash + 50554;
/* 33514 */         hash = 53 * hash + getIOOBDThrottlePosition().hashCode();
/*       */       } 
/* 33516 */       if (hasIOOBDRunTimeSinceEngineStart()) {
/* 33517 */         hash = 37 * hash + 50555;
/* 33518 */         hash = 53 * hash + getIOOBDRunTimeSinceEngineStart().hashCode();
/*       */       } 
/* 33520 */       if (hasIOOBDFuelTankLevelInput()) {
/* 33521 */         hash = 37 * hash + 50556;
/* 33522 */         hash = 53 * hash + getIOOBDFuelTankLevelInput().hashCode();
/*       */       } 
/* 33524 */       if (hasIOOBDDistanceTraveledSinceCodesCleared()) {
/* 33525 */         hash = 37 * hash + 50557;
/* 33526 */         hash = 53 * hash + getIOOBDDistanceTraveledSinceCodesCleared().hashCode();
/*       */       } 
/* 33528 */       if (hasIOOBDAbsoluteThrottlePositionD()) {
/* 33529 */         hash = 37 * hash + 50558;
/* 33530 */         hash = 53 * hash + getIOOBDAbsoluteThrottlePositionD().hashCode();
/*       */       } 
/* 33532 */       if (hasIOOBDTimeRunWithMILOn()) {
/* 33533 */         hash = 37 * hash + 50559;
/* 33534 */         hash = 53 * hash + getIOOBDTimeRunWithMILOn().hashCode();
/*       */       } 
/* 33536 */       if (hasIOOBDEngineOilTemperature()) {
/* 33537 */         hash = 37 * hash + 50560;
/* 33538 */         hash = 53 * hash + getIOOBDEngineOilTemperature().hashCode();
/*       */       } 
/* 33540 */       if (hasIOOBDFuelSystem1Status()) {
/* 33541 */         hash = 37 * hash + 50561;
/* 33542 */         hash = 53 * hash + getIOOBDFuelSystem1Status().hashCode();
/*       */       } 
/* 33544 */       if (hasIOOBDFuelSystem2Status()) {
/* 33545 */         hash = 37 * hash + 50562;
/* 33546 */         hash = 53 * hash + getIOOBDFuelSystem2Status().hashCode();
/*       */       } 
/* 33548 */       if (hasIOOBDOxygenSensor1Voltage()) {
/* 33549 */         hash = 37 * hash + 50563;
/* 33550 */         hash = 53 * hash + getIOOBDOxygenSensor1Voltage().hashCode();
/*       */       } 
/* 33552 */       if (hasIOOBDOxygenSensor1ShortTermFuelTrim()) {
/* 33553 */         hash = 37 * hash + 50564;
/* 33554 */         hash = 53 * hash + getIOOBDOxygenSensor1ShortTermFuelTrim().hashCode();
/*       */       } 
/* 33556 */       if (hasIOOBDOxygenSensor2Voltage()) {
/* 33557 */         hash = 37 * hash + 50565;
/* 33558 */         hash = 53 * hash + getIOOBDOxygenSensor2Voltage().hashCode();
/*       */       } 
/* 33560 */       if (hasIOOBDOxygenSensor2ShortTermFuelTrim()) {
/* 33561 */         hash = 37 * hash + 50566;
/* 33562 */         hash = 53 * hash + getIOOBDOxygenSensor2ShortTermFuelTrim().hashCode();
/*       */       } 
/* 33564 */       if (hasIOOBDOxygenSensor3Voltage()) {
/* 33565 */         hash = 37 * hash + 50567;
/* 33566 */         hash = 53 * hash + getIOOBDOxygenSensor3Voltage().hashCode();
/*       */       } 
/* 33568 */       if (hasIOOBDOxygenSensor3ShortTermFuelTrim()) {
/* 33569 */         hash = 37 * hash + 50568;
/* 33570 */         hash = 53 * hash + getIOOBDOxygenSensor3ShortTermFuelTrim().hashCode();
/*       */       } 
/* 33572 */       if (hasIOOBDOxygenSensor4Voltage()) {
/* 33573 */         hash = 37 * hash + 50569;
/* 33574 */         hash = 53 * hash + getIOOBDOxygenSensor4Voltage().hashCode();
/*       */       } 
/* 33576 */       if (hasIOOBDOxygenSensor4ShortTermFuelTrim()) {
/* 33577 */         hash = 37 * hash + 50570;
/* 33578 */         hash = 53 * hash + getIOOBDOxygenSensor4ShortTermFuelTrim().hashCode();
/*       */       } 
/* 33580 */       if (hasIOCANBusTachograph1WorkingState1()) {
/* 33581 */         hash = 37 * hash + 50700;
/* 33582 */         hash = 53 * hash + getIOCANBusTachograph1WorkingState1().hashCode();
/*       */       } 
/* 33584 */       if (hasIOCANBusTachograph1WorkingState2()) {
/* 33585 */         hash = 37 * hash + 50701;
/* 33586 */         hash = 53 * hash + getIOCANBusTachograph1WorkingState2().hashCode();
/*       */       } 
/* 33588 */       if (hasIOCANBusTachograph1VehicleMotion()) {
/* 33589 */         hash = 37 * hash + 50702;
/* 33590 */         hash = 53 * hash + getIOCANBusTachograph1VehicleMotion().hashCode();
/*       */       } 
/* 33592 */       if (hasIOCANBusTachograph1Driv1TimeRelStates()) {
/* 33593 */         hash = 37 * hash + 50703;
/* 33594 */         hash = 53 * hash + getIOCANBusTachograph1Driv1TimeRelStates().hashCode();
/*       */       } 
/* 33596 */       if (hasIOCANBusTachograph1Driver1Card()) {
/* 33597 */         hash = 37 * hash + 50704;
/* 33598 */         hash = 53 * hash + getIOCANBusTachograph1Driver1Card().hashCode();
/*       */       } 
/* 33600 */       if (hasIOCANBusTachograph1VehicleOverspeed()) {
/* 33601 */         hash = 37 * hash + 50705;
/* 33602 */         hash = 53 * hash + getIOCANBusTachograph1VehicleOverspeed().hashCode();
/*       */       } 
/* 33604 */       if (hasIOCANBusTachograph1Driv2TimeRelStates()) {
/* 33605 */         hash = 37 * hash + 50706;
/* 33606 */         hash = 53 * hash + getIOCANBusTachograph1Driv2TimeRelStates().hashCode();
/*       */       } 
/* 33608 */       if (hasIOCANBusTachograph1Driver2Card()) {
/* 33609 */         hash = 37 * hash + 50707;
/* 33610 */         hash = 53 * hash + getIOCANBusTachograph1Driver2Card().hashCode();
/*       */       } 
/* 33612 */       if (hasIOCANBusTachograph1SystemEvent()) {
/* 33613 */         hash = 37 * hash + 50708;
/* 33614 */         hash = 53 * hash + getIOCANBusTachograph1SystemEvent().hashCode();
/*       */       } 
/* 33616 */       if (hasIOCANBusTachograph1HandlingInformation()) {
/* 33617 */         hash = 37 * hash + 50709;
/* 33618 */         hash = 53 * hash + getIOCANBusTachograph1HandlingInformation().hashCode();
/*       */       } 
/* 33620 */       if (hasIOCANBusTachograph1TachographPerformance()) {
/* 33621 */         hash = 37 * hash + 50710;
/* 33622 */         hash = 53 * hash + getIOCANBusTachograph1TachographPerformance().hashCode();
/*       */       } 
/* 33624 */       if (hasIOCANBusTachograph1DirectionIndicator()) {
/* 33625 */         hash = 37 * hash + 50711;
/* 33626 */         hash = 53 * hash + getIOCANBusTachograph1DirectionIndicator().hashCode();
/*       */       } 
/* 33628 */       if (hasIOCANBusTachograph1VehicleSpeed()) {
/* 33629 */         hash = 37 * hash + 50712;
/* 33630 */         hash = 53 * hash + getIOCANBusTachograph1VehicleSpeed().hashCode();
/*       */       } 
/* 33632 */       if (hasIOCANBusEngineTemperature1EngineCoolantTemperature()) {
/* 33633 */         hash = 37 * hash + 50713;
/* 33634 */         hash = 53 * hash + getIOCANBusEngineTemperature1EngineCoolantTemperature().hashCode();
/*       */       } 
/* 33636 */       if (hasIOCANBusElectronicEngineController1ActualEnginePercent()) {
/* 33637 */         hash = 37 * hash + 50714;
/* 33638 */         hash = 53 * hash + getIOCANBusElectronicEngineController1ActualEnginePercent().hashCode();
/*       */       } 
/* 33640 */       if (hasIOCANBusElectronicEngineController1EngineSpeed()) {
/* 33641 */         hash = 37 * hash + 50715;
/* 33642 */         hash = 53 * hash + getIOCANBusElectronicEngineController1EngineSpeed().hashCode();
/*       */       } 
/* 33644 */       if (hasIOCANBusEngineHoursEngineTotalHours()) {
/* 33645 */         hash = 37 * hash + 50716;
/* 33646 */         hash = 53 * hash + getIOCANBusEngineHoursEngineTotalHours().hashCode();
/*       */       } 
/* 33648 */       if (hasIOCANBusVehicleDistanceTotalVehicleDistance()) {
/* 33649 */         hash = 37 * hash + 50717;
/* 33650 */         hash = 53 * hash + getIOCANBusVehicleDistanceTotalVehicleDistance().hashCode();
/*       */       } 
/* 33652 */       if (hasIOCANBusHighResolutionFuelConsumptionTotalFuelUsed()) {
/* 33653 */         hash = 37 * hash + 50718;
/* 33654 */         hash = 53 * hash + getIOCANBusHighResolutionFuelConsumptionTotalFuelUsed().hashCode();
/*       */       } 
/* 33656 */       if (hasIOCANBusDashDisplayFuelLevel1()) {
/* 33657 */         hash = 37 * hash + 50719;
/* 33658 */         hash = 53 * hash + getIOCANBusDashDisplayFuelLevel1().hashCode();
/*       */       } 
/* 33660 */       if (hasIOCANBusAmbientConditionsAmbientAirTemperature()) {
/* 33661 */         hash = 37 * hash + 50720;
/* 33662 */         hash = 53 * hash + getIOCANBusAmbientConditionsAmbientAirTemperature().hashCode();
/*       */       } 
/* 33664 */       if (hasIOCANBusFuelEconomyFuelRate()) {
/* 33665 */         hash = 37 * hash + 50721;
/* 33666 */         hash = 53 * hash + getIOCANBusFuelEconomyFuelRate().hashCode();
/*       */       } 
/* 33668 */       if (hasIOCANBusFuelEconomyInstantaneousFuelEconomy()) {
/* 33669 */         hash = 37 * hash + 50722;
/* 33670 */         hash = 53 * hash + getIOCANBusFuelEconomyInstantaneousFuelEconomy().hashCode();
/*       */       } 
/* 33672 */       if (hasIOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit1()) {
/* 33673 */         hash = 37 * hash + 50723;
/* 33674 */         hash = 53 * hash + getIOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit1().hashCode();
/*       */       } 
/* 33676 */       if (hasIOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit2()) {
/* 33677 */         hash = 37 * hash + 50724;
/* 33678 */         hash = 53 * hash + getIOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit2().hashCode();
/*       */       } 
/* 33680 */       if (hasIOCANBusAftertreatmentDieselExhaustFluidTankInformationTank1Level()) {
/* 33681 */         hash = 37 * hash + 50725;
/* 33682 */         hash = 53 * hash + getIOCANBusAftertreatmentDieselExhaustFluidTankInformationTank1Level().hashCode();
/*       */       } 
/* 33684 */       if (hasIOCANBusTruckBusElectronicEngineController2AcceleratorPedalPosition1()) {
/* 33685 */         hash = 37 * hash + 50742;
/* 33686 */         hash = 53 * hash + getIOCANBusTruckBusElectronicEngineController2AcceleratorPedalPosition1().hashCode();
/*       */       } 
/* 33688 */       if (hasIOCANBusTruckBusElectronicEngineController2EnginePercentLoad()) {
/* 33689 */         hash = 37 * hash + 50743;
/* 33690 */         hash = 53 * hash + getIOCANBusTruckBusElectronicEngineController2EnginePercentLoad().hashCode();
/*       */       } 
/* 33692 */       if (hasIOCANBusTruckVehicleWeightAxleWeight1()) {
/* 33693 */         hash = 37 * hash + 50744;
/* 33694 */         hash = 53 * hash + getIOCANBusTruckVehicleWeightAxleWeight1().hashCode();
/*       */       } 
/* 33696 */       if (hasIOCANBusTruckVehicleWeightAxleWeight2()) {
/* 33697 */         hash = 37 * hash + 50745;
/* 33698 */         hash = 53 * hash + getIOCANBusTruckVehicleWeightAxleWeight2().hashCode();
/*       */       } 
/* 33700 */       if (hasIOCANBusTruckVehicleWeightAxleWeight3()) {
/* 33701 */         hash = 37 * hash + 50746;
/* 33702 */         hash = 53 * hash + getIOCANBusTruckVehicleWeightAxleWeight3().hashCode();
/*       */       } 
/* 33704 */       if (hasIOCANBusTruckServiceInformationServiceDistance()) {
/* 33705 */         hash = 37 * hash + 50747;
/* 33706 */         hash = 53 * hash + getIOCANBusTruckServiceInformationServiceDistance().hashCode();
/*       */       } 
/* 33708 */       if (hasIOCANBusTruckPTODriveEngagementPTOEngageStat()) {
/* 33709 */         hash = 37 * hash + 50748;
/* 33710 */         hash = 53 * hash + getIOCANBusTruckPTODriveEngagementPTOEngageStat().hashCode();
/*       */       } 
/* 33712 */       if (hasIOCANBusTruckCombinationVehicleWeightGrossCombinationVehicleWeight()) {
/* 33713 */         hash = 37 * hash + 50749;
/* 33714 */         hash = 53 * hash + getIOCANBusTruckCombinationVehicleWeightGrossCombinationVehicleWeight().hashCode();
/*       */       } 
/* 33716 */       if (hasIOCANBusTruckBusElectronicRetarderController1RetarderTorqueMode()) {
/* 33717 */         hash = 37 * hash + 50750;
/* 33718 */         hash = 53 * hash + getIOCANBusTruckBusElectronicRetarderController1RetarderTorqueMode().hashCode();
/*       */       } 
/* 33720 */       if (hasIOCANBusTruckBusElectronicRetarderController1RetarderSelection()) {
/* 33721 */         hash = 37 * hash + 50751;
/* 33722 */         hash = 53 * hash + getIOCANBusTruckBusElectronicRetarderController1RetarderSelection().hashCode();
/*       */       } 
/* 33724 */       if (hasIOCANBusBusDoorControl1DoorPosition()) {
/* 33725 */         hash = 37 * hash + 50752;
/* 33726 */         hash = 53 * hash + getIOCANBusBusDoorControl1DoorPosition().hashCode();
/*       */       } 
/* 33728 */       if (hasIOCANBusBusDoorControl1RampWheelChairlift()) {
/* 33729 */         hash = 37 * hash + 50753;
/* 33730 */         hash = 53 * hash + getIOCANBusBusDoorControl1RampWheelChairlift().hashCode();
/*       */       } 
/* 33732 */       if (hasIOCANBusBusDoorControl1DoorsStatus2()) {
/* 33733 */         hash = 37 * hash + 50754;
/* 33734 */         hash = 53 * hash + getIOCANBusBusDoorControl1DoorsStatus2().hashCode();
/*       */       } 
/* 33736 */       if (hasIOCANBusBusDoorControl2()) {
/* 33737 */         hash = 37 * hash + 50755;
/* 33738 */         hash = 53 * hash + getIOCANBusBusDoorControl2().hashCode();
/*       */       } 
/* 33740 */       if (hasIOCANBusBrakeLiningRemainingAxleFrontLeftWheel()) {
/* 33741 */         hash = 37 * hash + 50756;
/* 33742 */         hash = 53 * hash + getIOCANBusBrakeLiningRemainingAxleFrontLeftWheel().hashCode();
/*       */       } 
/* 33744 */       if (hasIOCANBusBrakeLiningRemainingAxleFrontRightWheel()) {
/* 33745 */         hash = 37 * hash + 50757;
/* 33746 */         hash = 53 * hash + getIOCANBusBrakeLiningRemainingAxleFrontRightWheel().hashCode();
/*       */       } 
/* 33748 */       if (hasIOCANBusBrakeLiningRemainingAxleRear1LeftWheel()) {
/* 33749 */         hash = 37 * hash + 50758;
/* 33750 */         hash = 53 * hash + getIOCANBusBrakeLiningRemainingAxleRear1LeftWheel().hashCode();
/*       */       } 
/* 33752 */       if (hasIOCANBusBrakeLiningRemainingAxleRear1RightWheel()) {
/* 33753 */         hash = 37 * hash + 50759;
/* 33754 */         hash = 53 * hash + getIOCANBusBrakeLiningRemainingAxleRear1RightWheel().hashCode();
/*       */       } 
/* 33756 */       if (hasIOCANBusBrakeLiningRemainingAxleRear2LeftWheel()) {
/* 33757 */         hash = 37 * hash + 50760;
/* 33758 */         hash = 53 * hash + getIOCANBusBrakeLiningRemainingAxleRear2LeftWheel().hashCode();
/*       */       } 
/* 33760 */       if (hasIOCANBusBrakeLiningRemainingAxleRear2RightWheel()) {
/* 33761 */         hash = 37 * hash + 50761;
/* 33762 */         hash = 53 * hash + getIOCANBusBrakeLiningRemainingAxleRear2RightWheel().hashCode();
/*       */       } 
/* 33764 */       if (hasIOCANBusBrakeLiningRemainingAxleRear3LeftWheel()) {
/* 33765 */         hash = 37 * hash + 50762;
/* 33766 */         hash = 53 * hash + getIOCANBusBrakeLiningRemainingAxleRear3LeftWheel().hashCode();
/*       */       } 
/* 33768 */       if (hasIOCANBusBrakeLiningRemainingAxleRear3RightWheel()) {
/* 33769 */         hash = 37 * hash + 50763;
/* 33770 */         hash = 53 * hash + getIOCANBusBrakeLiningRemainingAxleRear3RightWheel().hashCode();
/*       */       } 
/* 33772 */       if (hasIOCANBusTruckBusCruiseControl()) {
/* 33773 */         hash = 37 * hash + 50784;
/* 33774 */         hash = 53 * hash + getIOCANBusTruckBusCruiseControl().hashCode();
/*       */       } 
/* 33776 */       if (hasIOCANBusBusAlternatorSpeedAlternatorStatus1()) {
/* 33777 */         hash = 37 * hash + 50785;
/* 33778 */         hash = 53 * hash + getIOCANBusBusAlternatorSpeedAlternatorStatus1().hashCode();
/*       */       } 
/* 33780 */       if (hasIOCANBusBusAlternatorSpeedAlternatorStatus2()) {
/* 33781 */         hash = 37 * hash + 50786;
/* 33782 */         hash = 53 * hash + getIOCANBusBusAlternatorSpeedAlternatorStatus2().hashCode();
/*       */       } 
/* 33784 */       if (hasIOCANBusBusAlternatorSpeedAlternatorStatus3()) {
/* 33785 */         hash = 37 * hash + 50787;
/* 33786 */         hash = 53 * hash + getIOCANBusBusAlternatorSpeedAlternatorStatus3().hashCode();
/*       */       } 
/* 33788 */       if (hasIOCANBusBusAlternatorSpeedAlternatorStatus4()) {
/* 33789 */         hash = 37 * hash + 50788;
/* 33790 */         hash = 53 * hash + getIOCANBusBusAlternatorSpeedAlternatorStatus4().hashCode();
/*       */       } 
/* 33792 */       if (hasIOCANBusBusElectronicTransmissionController2SelectedGear()) {
/* 33793 */         hash = 37 * hash + 50789;
/* 33794 */         hash = 53 * hash + getIOCANBusBusElectronicTransmissionController2SelectedGear().hashCode();
/*       */       } 
/* 33796 */       if (hasIOCANBusBusElectronicTransmissionController2CurrentGear()) {
/* 33797 */         hash = 37 * hash + 50790;
/* 33798 */         hash = 53 * hash + getIOCANBusBusElectronicTransmissionController2CurrentGear().hashCode();
/*       */       } 
/* 33800 */       if (hasIOCANBusBusAirSuspensionControl4FrontAxleLeft()) {
/* 33801 */         hash = 37 * hash + 50791;
/* 33802 */         hash = 53 * hash + getIOCANBusBusAirSuspensionControl4FrontAxleLeft().hashCode();
/*       */       } 
/* 33804 */       if (hasIOCANBusBusAirSuspensionControl4FrontAxleRight()) {
/* 33805 */         hash = 37 * hash + 50792;
/* 33806 */         hash = 53 * hash + getIOCANBusBusAirSuspensionControl4FrontAxleRight().hashCode();
/*       */       } 
/* 33808 */       if (hasIOCANBusBusAirSuspensionControl4RearAxleLeft()) {
/* 33809 */         hash = 37 * hash + 50793;
/* 33810 */         hash = 53 * hash + getIOCANBusBusAirSuspensionControl4RearAxleLeft().hashCode();
/*       */       } 
/* 33812 */       if (hasIOCANBusBusAirSuspensionControl4RearAxleright()) {
/* 33813 */         hash = 37 * hash + 50794;
/* 33814 */         hash = 53 * hash + getIOCANBusBusAirSuspensionControl4RearAxleright().hashCode();
/*       */       } 
/* 33816 */       if (hasIOCANBusDashDisplayFuelLevel2()) {
/* 33817 */         hash = 37 * hash + 50795;
/* 33818 */         hash = 53 * hash + getIOCANBusDashDisplayFuelLevel2().hashCode();
/*       */       } 
/* 33820 */       if (hasIOCANBusElectronicBrakeControllerBrakePedalPosition()) {
/* 33821 */         hash = 37 * hash + 50796;
/* 33822 */         hash = 53 * hash + getIOCANBusElectronicBrakeControllerBrakePedalPosition().hashCode();
/*       */       } 
/* 33824 */       if (hasIOCANBusFuelConsumptionGaseousTotalFuelUsed()) {
/* 33825 */         hash = 37 * hash + 50797;
/* 33826 */         hash = 53 * hash + getIOCANBusFuelConsumptionGaseousTotalFuelUsed().hashCode();
/*       */       } 
/* 33828 */       if (hasIOCANBusTruckBusCruiseControlVehicleSpeedParkingBrakeSwitch()) {
/* 33829 */         hash = 37 * hash + 50798;
/* 33830 */         hash = 53 * hash + getIOCANBusTruckBusCruiseControlVehicleSpeedParkingBrakeSwitch().hashCode();
/*       */       } 
/* 33832 */       if (hasIOCANBusTruckBusCruiseControlVehicleSpeedWheelBasedSpeed()) {
/* 33833 */         hash = 37 * hash + 50799;
/* 33834 */         hash = 53 * hash + getIOCANBusTruckBusCruiseControlVehicleSpeedWheelBasedSpeed().hashCode();
/*       */       } 
/* 33836 */       if (hasIOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlActive()) {
/* 33837 */         hash = 37 * hash + 50800;
/* 33838 */         hash = 53 * hash + getIOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlActive().hashCode();
/*       */       } 
/* 33840 */       if (hasIOCANBusTruckBusCruiseControlVehicleSpeedBrakeSwitch()) {
/* 33841 */         hash = 37 * hash + 50801;
/* 33842 */         hash = 53 * hash + getIOCANBusTruckBusCruiseControlVehicleSpeedBrakeSwitch().hashCode();
/*       */       } 
/* 33844 */       if (hasIOCANBusTruckBusCruiseControlVehicleSpeedClutchSwitch()) {
/* 33845 */         hash = 37 * hash + 50802;
/* 33846 */         hash = 53 * hash + getIOCANBusTruckBusCruiseControlVehicleSpeedClutchSwitch().hashCode();
/*       */       } 
/* 33848 */       if (hasIOCANBusTruckBusCruiseControlVehicleSpeedPtoState()) {
/* 33849 */         hash = 37 * hash + 50803;
/* 33850 */         hash = 53 * hash + getIOCANBusTruckBusCruiseControlVehicleSpeedPtoState().hashCode();
/*       */       } 
/* 33852 */       if (hasIOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlStates()) {
/* 33853 */         hash = 37 * hash + 50804;
/* 33854 */         hash = 53 * hash + getIOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlStates().hashCode();
/*       */       } 
/* 33856 */       if (hasIOCANBusBusVehicleElectricalPowerHybridBatteryPackRemainingCharge()) {
/* 33857 */         hash = 37 * hash + 50805;
/* 33858 */         hash = 53 * hash + getIOCANBusBusVehicleElectricalPowerHybridBatteryPackRemainingCharge().hashCode();
/*       */       } 
/* 33860 */       if (hasIOCANBusBusVehicleDynamicStabilityControl2SteeringWheelAngle()) {
/* 33861 */         hash = 37 * hash + 50806;
/* 33862 */         hash = 53 * hash + getIOCANBusBusVehicleDynamicStabilityControl2SteeringWheelAngle().hashCode();
/*       */       } 
/* 33864 */       if (hasIOCANBusElectronicEngineController14FuelType()) {
/* 33865 */         hash = 37 * hash + 50807;
/* 33866 */         hash = 53 * hash + getIOCANBusElectronicEngineController14FuelType().hashCode();
/*       */       } 
/* 33868 */       if (hasIOCANBusEngineFluidLevelPressureEngineOilLevel()) {
/* 33869 */         hash = 37 * hash + 50808;
/* 33870 */         hash = 53 * hash + getIOCANBusEngineFluidLevelPressureEngineOilLevel().hashCode();
/*       */       } 
/* 33872 */       if (hasIOCANBusEngineFluidLevelPressureEngineOilPressure()) {
/* 33873 */         hash = 37 * hash + 50809;
/* 33874 */         hash = 53 * hash + getIOCANBusEngineFluidLevelPressureEngineOilPressure().hashCode();
/*       */       } 
/* 33876 */       if (hasIOCANBusEngineFluidLevelPressureCoolantLevel()) {
/* 33877 */         hash = 37 * hash + 50810;
/* 33878 */         hash = 53 * hash + getIOCANBusEngineFluidLevelPressureCoolantLevel().hashCode();
/*       */       } 
/* 33880 */       if (hasIOCANBusTellTaleStatus()) {
/* 33881 */         hash = 37 * hash + 50811;
/* 33882 */         hash = 53 * hash + getIOCANBusTellTaleStatus().hashCode();
/*       */       } 
/* 33884 */       if (hasIOCANBusFuelConsumptionEngineTotalFuelUsed()) {
/* 33885 */         hash = 37 * hash + 50812;
/* 33886 */         hash = 53 * hash + getIOCANBusFuelConsumptionEngineTotalFuelUsed().hashCode();
/*       */       } 
/* 33888 */       if (hasIOCANBusTruckVehicleWeightAxleWeight4()) {
/* 33889 */         hash = 37 * hash + 50813;
/* 33890 */         hash = 53 * hash + getIOCANBusTruckVehicleWeightAxleWeight4().hashCode();
/*       */       } 
/* 33892 */       hash = 29 * hash + this.unknownFields.hashCode();
/* 33893 */       this.memoizedHashCode = hash;
/* 33894 */       return hash;
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static Config parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
/* 33900 */       return (Config)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static Config parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 33906 */       return (Config)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static Config parseFrom(ByteString data) throws InvalidProtocolBufferException {
/* 33911 */       return (Config)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static Config parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 33917 */       return (Config)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static Config parseFrom(byte[] data) throws InvalidProtocolBufferException {
/* 33921 */       return (Config)PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static Config parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 33927 */       return (Config)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static Config parseFrom(InputStream input) throws IOException {
/* 33931 */       return 
/* 33932 */         (Config)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static Config parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 33938 */       return 
/* 33939 */         (Config)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static Config parseDelimitedFrom(InputStream input) throws IOException {
/* 33943 */       return 
/* 33944 */         (Config)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static Config parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 33950 */       return 
/* 33951 */         (Config)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static Config parseFrom(CodedInputStream input) throws IOException {
/* 33956 */       return 
/* 33957 */         (Config)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static Config parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 33963 */       return 
/* 33964 */         (Config)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public Builder newBuilderForType() {
/* 33968 */       return newBuilder();
/*       */     } public static Builder newBuilder() {
/* 33970 */       return DEFAULT_INSTANCE.toBuilder();
/*       */     }
/*       */     public static Builder newBuilder(Config prototype) {
/* 33973 */       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
/*       */     }
/*       */     
/*       */     public Builder toBuilder() {
/* 33977 */       return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder())
/* 33978 */         .mergeFrom(this);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
/* 33984 */       Builder builder = new Builder(parent);
/* 33985 */       return builder;
/*       */     } public static Config getDefaultInstance() {
/*       */       return DEFAULT_INSTANCE;
/*       */     } public static Parser<Config> parser() {
/*       */       return PARSER;
/*       */     } public Parser<Config> getParserForType() {
/*       */       return PARSER;
/*       */     } public Config getDefaultInstanceForType() {
/*       */       return DEFAULT_INSTANCE;
/*       */     } public static final class Builder extends GeneratedMessageV3.Builder<Builder> implements DolphinConfig.ConfigOrBuilder { private int serialPortBaudrate_; private boolean doNotResetDeviceOnProblems_; private Object password_; private int movement_; private int movementSensorSensitivity_; private int sleep_; private int sleepTimeout_; private int engineOn_; private boolean engineOnDIN1_; private boolean engineOnDIN2_; private boolean engineOnMovementSensor_; private boolean engineOnPowerSupplyAvailable_; private int engineOnGpsSpeed_; private int engineOnCanRPM_; private int engineOnMinActiveStateDuration_; private int engineOnOperator_; private int engineOnMovementStartDelay_; private int engineOnMovementStopDelay_; private int engineOnExternalVoltage_; private boolean ledIndication_; private int gNSS_; private boolean staticNavigationEnabled_; private int staticNavigationSource_; private int recordsSaveAndSendMode_; private int timeSynchronization_; private Object nTPServer_; private int nTPInterval_; private int sleepNoPowerTimeout_; private boolean sendPing_; private boolean timetableMode_; private ByteString timetableData_; private DolphinConfig.Service service1_; private SingleFieldBuilderV3<DolphinConfig.Service, DolphinConfig.Service.Builder, DolphinConfig.ServiceOrBuilder> service1Builder_; private DolphinConfig.Service service2_; private SingleFieldBuilderV3<DolphinConfig.Service, DolphinConfig.Service.Builder, DolphinConfig.ServiceOrBuilder> service2Builder_; private DolphinConfig.Service service3_; private SingleFieldBuilderV3<DolphinConfig.Service, DolphinConfig.Service.Builder, DolphinConfig.ServiceOrBuilder> service3Builder_; private int analogInput1AverageTime_; private int analogInput2AverageTime_; private int analogInput3AverageTime_; private int bluetoothRadioMode_; private Object bluetoothName_; private Object bluetoothPIN_; private int bluetoothSecurityMode_; private boolean bluetoothPowerDownOnSleep_; private int bluetoothExternalConnectionMode_; private Object bluetoothExternalDeviceMAC_; private Object bluetoothExternalDeviceName_; private Object bluetoothExternalDevicePIN_; private Object bluetoothAuthorizedMAC1_; private Object bluetoothAuthorizedMAC2_; private Object bluetoothAuthorizedMAC3_; private Object bluetoothAuthorizedMAC4_; private Object bluetoothAuthorizedMAC5_; private boolean gPRSContextEnabled_; private Object gPRSApnName_; private Object gPRSApnUsername_; private Object gPRSApnPassword_; private boolean gPRSCHAPAuthentication_; private int gPRSLinkTimeout_; private int gPRSResponseTimeout_; private Object gPRSServerAddress_; private int gPRSServerPort_; private int gPRSServerProtocol_; private Object gPRSBackupServerAddress_; private int gPRSBackupServerPort_; private int gPRSBackupServerProtocol_; private boolean gPRSSSLClientAuthentication_; private boolean gPRSDataCompression_; private int authenticationMode_; private Object authenticationCode_; private boolean firmwareUpdateEnabled_; private Object firmwareUpdateChannel_; private int firmwareUpdateCheckInterval_; private Object firmwareUpdateServerAddress_; private int firmwareUpdateServerPort_; private int firmwareUpdateServerProtocol_; private int firmwareUpdateLinkTimeout_; private int firmwareUpdateResponseTimeout_; private boolean sMSDataSending_; private Object sMSDataSendNumber_; private Object sMSPassword_; private int sMSEventTimeZone_; private int callIncommingCallAction_; private int callDigitalInput1CallTo_; private int callDigitalInput2CallTo_; private int callDigitalInput3CallTo_; private Object authorizedNumber1_; private Object authorizedNumber2_; private Object authorizedNumber3_; private Object authorizedNumber4_; private Object authorizedNumber5_; private Object authorizedNumber6_; private Object authorizedNumber7_; private Object authorizedNumber8_; private Object authorizedNumber9_; private Object authorizedNumber10_; private Object gsmPredefinedNumber1_; private Object gsmPredefinedNumber2_; private Object gsmPredefinedNumber3_; private Object gsmPredefinedNumber4_; private Object gsmPredefinedNumber5_; private Object gsmPredefinedNumber6_; private Object gsmPredefinedNumber7_; private Object gsmPredefinedNumber8_; private Object gsmPredefinedNumber9_; private Object gsmPredefinedNumber10_; private Object roamingOperator1_; private Object roamingOperator2_; private Object roamingOperator3_; private Object roamingOperator4_; private Object roamingOperator5_; private int dAQStopHomeMinPeriod_; private int dAQStopRoamingMinPeriod_; private int dAQMovingHomeMinPeriod_; private int dAQMovingHomeMinPathDeviation_; private int dAQMovingRoamingMinPeriod_; private int dAQMovingRoamingMinPathDeviation_; private DolphinConfig.GeoZone geoZone1_; private SingleFieldBuilderV3<DolphinConfig.GeoZone, DolphinConfig.GeoZone.Builder, DolphinConfig.GeoZoneOrBuilder> geoZone1Builder_; private DolphinConfig.GeoZone geoZone2_; private SingleFieldBuilderV3<DolphinConfig.GeoZone, DolphinConfig.GeoZone.Builder, DolphinConfig.GeoZoneOrBuilder> geoZone2Builder_; private DolphinConfig.GeoZone geoZone3_; private SingleFieldBuilderV3<DolphinConfig.GeoZone, DolphinConfig.GeoZone.Builder, DolphinConfig.GeoZoneOrBuilder> geoZone3Builder_; private DolphinConfig.GeoZone geoZone4_; private SingleFieldBuilderV3<DolphinConfig.GeoZone, DolphinConfig.GeoZone.Builder, DolphinConfig.GeoZoneOrBuilder> geoZone4Builder_; private DolphinConfig.GeoZone geoZone5_; private SingleFieldBuilderV3<DolphinConfig.GeoZone, DolphinConfig.GeoZone.Builder, DolphinConfig.GeoZoneOrBuilder> geoZone5Builder_; private DolphinConfig.GeoZone geoZone6_; private SingleFieldBuilderV3<DolphinConfig.GeoZone, DolphinConfig.GeoZone.Builder, DolphinConfig.GeoZoneOrBuilder> geoZone6Builder_; private DolphinConfig.GeoZone geoZone7_; private SingleFieldBuilderV3<DolphinConfig.GeoZone, DolphinConfig.GeoZone.Builder, DolphinConfig.GeoZoneOrBuilder> geoZone7Builder_; private DolphinConfig.GeoZone geoZone8_; private SingleFieldBuilderV3<DolphinConfig.GeoZone, DolphinConfig.GeoZone.Builder, DolphinConfig.GeoZoneOrBuilder> geoZone8Builder_; private DolphinConfig.GeoZone geoZone9_; private SingleFieldBuilderV3<DolphinConfig.GeoZone, DolphinConfig.GeoZone.Builder, DolphinConfig.GeoZoneOrBuilder> geoZone9Builder_; private DolphinConfig.GeoZone geoZone10_; private SingleFieldBuilderV3<DolphinConfig.GeoZone, DolphinConfig.GeoZone.Builder, DolphinConfig.GeoZoneOrBuilder> geoZone10Builder_; private DolphinConfig.GeoZone geoZone11_; private SingleFieldBuilderV3<DolphinConfig.GeoZone, DolphinConfig.GeoZone.Builder, DolphinConfig.GeoZoneOrBuilder> geoZone11Builder_; private DolphinConfig.GeoZone geoZone12_; private SingleFieldBuilderV3<DolphinConfig.GeoZone, DolphinConfig.GeoZone.Builder, DolphinConfig.GeoZoneOrBuilder> geoZone12Builder_; private DolphinConfig.GeoZone geoZone13_; private SingleFieldBuilderV3<DolphinConfig.GeoZone, DolphinConfig.GeoZone.Builder, DolphinConfig.GeoZoneOrBuilder> geoZone13Builder_; private DolphinConfig.GeoZone geoZone14_; private SingleFieldBuilderV3<DolphinConfig.GeoZone, DolphinConfig.GeoZone.Builder, DolphinConfig.GeoZoneOrBuilder> geoZone14Builder_; private DolphinConfig.GeoZone geoZone15_; private SingleFieldBuilderV3<DolphinConfig.GeoZone, DolphinConfig.GeoZone.Builder, DolphinConfig.GeoZoneOrBuilder> geoZone15Builder_; private DolphinConfig.GeoZone geoZone16_; private SingleFieldBuilderV3<DolphinConfig.GeoZone, DolphinConfig.GeoZone.Builder, DolphinConfig.GeoZoneOrBuilder> geoZone16Builder_; private DolphinConfig.GeoZone geoZone17_; private SingleFieldBuilderV3<DolphinConfig.GeoZone, DolphinConfig.GeoZone.Builder, DolphinConfig.GeoZoneOrBuilder> geoZone17Builder_; private DolphinConfig.GeoZone geoZone18_; private SingleFieldBuilderV3<DolphinConfig.GeoZone, DolphinConfig.GeoZone.Builder, DolphinConfig.GeoZoneOrBuilder> geoZone18Builder_; private DolphinConfig.GeoZone geoZone19_; private SingleFieldBuilderV3<DolphinConfig.GeoZone, DolphinConfig.GeoZone.Builder, DolphinConfig.GeoZoneOrBuilder> geoZone19Builder_; private DolphinConfig.GeoZone geoZone20_; private SingleFieldBuilderV3<DolphinConfig.GeoZone, DolphinConfig.GeoZone.Builder, DolphinConfig.GeoZoneOrBuilder> geoZone20Builder_; private DolphinConfig.GeoZone geoZone21_; private SingleFieldBuilderV3<DolphinConfig.GeoZone, DolphinConfig.GeoZone.Builder, DolphinConfig.GeoZoneOrBuilder> geoZone21Builder_; private DolphinConfig.GeoZone geoZone22_; private SingleFieldBuilderV3<DolphinConfig.GeoZone, DolphinConfig.GeoZone.Builder, DolphinConfig.GeoZoneOrBuilder> geoZone22Builder_; private DolphinConfig.GeoZone geoZone23_; private SingleFieldBuilderV3<DolphinConfig.GeoZone, DolphinConfig.GeoZone.Builder, DolphinConfig.GeoZoneOrBuilder> geoZone23Builder_; private DolphinConfig.GeoZone geoZone24_; private SingleFieldBuilderV3<DolphinConfig.GeoZone, DolphinConfig.GeoZone.Builder, DolphinConfig.GeoZoneOrBuilder> geoZone24Builder_; private DolphinConfig.GeoZone geoZone25_; private SingleFieldBuilderV3<DolphinConfig.GeoZone, DolphinConfig.GeoZone.Builder, DolphinConfig.GeoZoneOrBuilder> geoZone25Builder_; private DolphinConfig.GeoZone geoZone26_; private SingleFieldBuilderV3<DolphinConfig.GeoZone, DolphinConfig.GeoZone.Builder, DolphinConfig.GeoZoneOrBuilder> geoZone26Builder_; private DolphinConfig.GeoZone geoZone27_; private SingleFieldBuilderV3<DolphinConfig.GeoZone, DolphinConfig.GeoZone.Builder, DolphinConfig.GeoZoneOrBuilder> geoZone27Builder_; private DolphinConfig.GeoZone geoZone28_; private SingleFieldBuilderV3<DolphinConfig.GeoZone, DolphinConfig.GeoZone.Builder, DolphinConfig.GeoZoneOrBuilder> geoZone28Builder_; private DolphinConfig.GeoZone geoZone29_; private SingleFieldBuilderV3<DolphinConfig.GeoZone, DolphinConfig.GeoZone.Builder, DolphinConfig.GeoZoneOrBuilder> geoZone29Builder_; private DolphinConfig.GeoZone geoZone30_; private SingleFieldBuilderV3<DolphinConfig.GeoZone, DolphinConfig.GeoZone.Builder, DolphinConfig.GeoZoneOrBuilder> geoZone30Builder_; private DolphinConfig.GeoZone geoZone31_; private SingleFieldBuilderV3<DolphinConfig.GeoZone, DolphinConfig.GeoZone.Builder, DolphinConfig.GeoZoneOrBuilder> geoZone31Builder_; private DolphinConfig.GeoZone geoZone32_; private SingleFieldBuilderV3<DolphinConfig.GeoZone, DolphinConfig.GeoZone.Builder, DolphinConfig.GeoZoneOrBuilder> geoZone32Builder_; private DolphinConfig.GeoZone geoZone33_; private SingleFieldBuilderV3<DolphinConfig.GeoZone, DolphinConfig.GeoZone.Builder, DolphinConfig.GeoZoneOrBuilder> geoZone33Builder_; private DolphinConfig.GeoZone geoZone34_; private SingleFieldBuilderV3<DolphinConfig.GeoZone, DolphinConfig.GeoZone.Builder, DolphinConfig.GeoZoneOrBuilder> geoZone34Builder_; private DolphinConfig.GeoZone geoZone35_; private SingleFieldBuilderV3<DolphinConfig.GeoZone, DolphinConfig.GeoZone.Builder, DolphinConfig.GeoZoneOrBuilder> geoZone35Builder_; private DolphinConfig.GeoZone geoZone36_; private SingleFieldBuilderV3<DolphinConfig.GeoZone, DolphinConfig.GeoZone.Builder, DolphinConfig.GeoZoneOrBuilder> geoZone36Builder_; private DolphinConfig.GeoZone geoZone37_; private SingleFieldBuilderV3<DolphinConfig.GeoZone, DolphinConfig.GeoZone.Builder, DolphinConfig.GeoZoneOrBuilder> geoZone37Builder_; private DolphinConfig.GeoZone geoZone38_; private SingleFieldBuilderV3<DolphinConfig.GeoZone, DolphinConfig.GeoZone.Builder, DolphinConfig.GeoZoneOrBuilder> geoZone38Builder_; private DolphinConfig.GeoZone geoZone39_; private SingleFieldBuilderV3<DolphinConfig.GeoZone, DolphinConfig.GeoZone.Builder, DolphinConfig.GeoZoneOrBuilder> geoZone39Builder_; private DolphinConfig.GeoZone geoZone40_; private SingleFieldBuilderV3<DolphinConfig.GeoZone, DolphinConfig.GeoZone.Builder, DolphinConfig.GeoZoneOrBuilder> geoZone40Builder_; private DolphinConfig.GeoZone geoZone41_; private SingleFieldBuilderV3<DolphinConfig.GeoZone, DolphinConfig.GeoZone.Builder, DolphinConfig.GeoZoneOrBuilder> geoZone41Builder_; private DolphinConfig.GeoZone geoZone42_; private SingleFieldBuilderV3<DolphinConfig.GeoZone, DolphinConfig.GeoZone.Builder, DolphinConfig.GeoZoneOrBuilder> geoZone42Builder_; private DolphinConfig.GeoZone geoZone43_; private SingleFieldBuilderV3<DolphinConfig.GeoZone, DolphinConfig.GeoZone.Builder, DolphinConfig.GeoZoneOrBuilder> geoZone43Builder_; private DolphinConfig.GeoZone geoZone44_; private SingleFieldBuilderV3<DolphinConfig.GeoZone, DolphinConfig.GeoZone.Builder, DolphinConfig.GeoZoneOrBuilder> geoZone44Builder_; private DolphinConfig.GeoZone geoZone45_; private SingleFieldBuilderV3<DolphinConfig.GeoZone, DolphinConfig.GeoZone.Builder, DolphinConfig.GeoZoneOrBuilder> geoZone45Builder_; private DolphinConfig.GeoZone geoZone46_; private SingleFieldBuilderV3<DolphinConfig.GeoZone, DolphinConfig.GeoZone.Builder, DolphinConfig.GeoZoneOrBuilder> geoZone46Builder_; private DolphinConfig.GeoZone geoZone47_; private SingleFieldBuilderV3<DolphinConfig.GeoZone, DolphinConfig.GeoZone.Builder, DolphinConfig.GeoZoneOrBuilder> geoZone47Builder_; private DolphinConfig.GeoZone geoZone48_; private SingleFieldBuilderV3<DolphinConfig.GeoZone, DolphinConfig.GeoZone.Builder, DolphinConfig.GeoZoneOrBuilder> geoZone48Builder_; private DolphinConfig.GeoZone geoZone49_; private SingleFieldBuilderV3<DolphinConfig.GeoZone, DolphinConfig.GeoZone.Builder, DolphinConfig.GeoZoneOrBuilder> geoZone49Builder_; private DolphinConfig.GeoZone geoZone50_; private SingleFieldBuilderV3<DolphinConfig.GeoZone, DolphinConfig.GeoZone.Builder, DolphinConfig.GeoZoneOrBuilder> geoZone50Builder_; private int tripStartSpeed_; private boolean tripUseIgnition_; private int tripParkDetectionTimeout_; private boolean overspeedingEnable_; private int overspeedingLimit_; private int overspeedingActivationSpeed_; private int overspeedingDeactivationMode_; private int overspeedingDeactivationValue_; private boolean uSSDEnabled_; private int uSSDID_; private int uSSDInterval_; private Object uSSDCode_; private int speedSensorKmPulseCount_; private boolean crashDetectionEnabled_; private int crashDetectionLevel1Threshold_; private int crashDetectionLevel2Threshold_; private int crashDetectionLevel3Threshold_; private int crashDetectionTrace_; private int crashDetectionDuration_; private int crashDetectionSendSMSTo_; private Object crashDetectionSMSText_; private int crashDetectionCallTo_; private boolean rolloverDetectionEnabled_; private int driverRegistrationMode_; private int driverRegistrationAuthentication_; private int driverRegistrationDeregistrationTimeout_; private int driverRegistrationBuzzerDigitalOutput_; private int driverRegistrationImmobilizerDigitalOutput_; private boolean driverRegistrationImmobilizerActiveLow_; private long driverRegistrationAuthorizedID1_; private long driverRegistrationAuthorizedID2_; private long driverRegistrationAuthorizedID3_; private long driverRegistrationAuthorizedID4_; private long driverRegistrationAuthorizedID5_; private long driverRegistrationAuthorizedID6_; private long driverRegistrationAuthorizedID7_; private long driverRegistrationAuthorizedID8_; private long driverRegistrationAuthorizedID9_; private long driverRegistrationAuthorizedID10_; private boolean eCODriveActive_; private int eCOOverSpeedingLimit_; private int eCORPMGreenBandLowLimit_; private int eCORPMGreenBandHighLimit_; private int eCOHarshBreakingLimit_; private int eCOExtremeBreakingLimit_; private int eCOHarshAccelerationLimit_; private int eCOCorneringLimit_; private int eCOIdlingDelay_; private int eCOIdlingSpeed_; private int eCOCruiseControlSpeed_; private boolean eCOCalculateOnlyWhenEngineOn_; private boolean eCOCustomEngineSource_; private boolean eCOEngineOnDIN1_; private boolean eCOEngineOnDIN2_; private boolean eCOEngineOnMovementSensor_; private boolean eCOEngineOnPowerSupplyAvailable_; private int eCOEngineOnCanRPMLow_; private int eCOEngineOnCanRPMHigh_; private int eCOEngineOnOperator_; private int eCOEngineOnExternalVoltage_; private int eCUInterface_; private int fuelConsumptionEnabled_; private int fuelConsumptionEngineDisplacement_; private int fuelConsumptionCylinders_; private int fuelConsumptionInjectorPerformance_; private int fuelConsumptionVolumetricEfficiently_; private int faultCodesReadTime_; private int sIPAADLinkTimeout_; private int sIPAADResponseTimeout_; private Object sIPAADServerAddress_; private int sIPAADServerPort_; private int sIPAADServerProtocol_; private boolean sIPAADSSLClientAuthentication_; private DolphinConfig.IO iOTime_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOTimeBuilder_; private DolphinConfig.IO iOAngle_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOAngleBuilder_; private DolphinConfig.IO iOSpeed_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOSpeedBuilder_; private DolphinConfig.IO iOSleepMode_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOSleepModeBuilder_; private DolphinConfig.IO iOIgnition_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOIgnitionBuilder_; private DolphinConfig.IO iOMovement_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOMovementBuilder_; private DolphinConfig.IO iODataMode_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iODataModeBuilder_; private DolphinConfig.IO iOGnssStatus_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOGnssStatusBuilder_; private DolphinConfig.IO iOGnssHDOP_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOGnssHDOPBuilder_; private DolphinConfig.IO iOGnssPDOP_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOGnssPDOPBuilder_; private DolphinConfig.IO iOGnssJammingStatus_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOGnssJammingStatusBuilder_; private DolphinConfig.IO iOGsmSignal_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOGsmSignalBuilder_; private DolphinConfig.IO iOGsmCellId_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOGsmCellIdBuilder_; private DolphinConfig.IO iOGsmAreaCode_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOGsmAreaCodeBuilder_; private DolphinConfig.IO iOGsmOperator_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOGsmOperatorBuilder_; private DolphinConfig.IO iOGsmTemperature_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOGsmTemperatureBuilder_; private DolphinConfig.IO iOGsmJammingStatus_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOGsmJammingStatusBuilder_; private DolphinConfig.IO iOExternalVoltage_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOExternalVoltageBuilder_; private DolphinConfig.IO iOBatteryVoltage_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOBatteryVoltageBuilder_; private DolphinConfig.IO iOBatteryCurrent_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOBatteryCurrentBuilder_; private DolphinConfig.IO iOTotalOdometer_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOTotalOdometerBuilder_; private DolphinConfig.IO iOOdometer_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOOdometerBuilder_; private DolphinConfig.IO iOEngineOnTime_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOEngineOnTimeBuilder_; private DolphinConfig.IO iOEngineOnTimeDelta_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOEngineOnTimeDeltaBuilder_; private DolphinConfig.IO iOIdlingTime_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOIdlingTimeBuilder_; private DolphinConfig.IO iOIdlingTimeDelta_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOIdlingTimeDeltaBuilder_; private DolphinConfig.IO iOSpeedSensorSpeed_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOSpeedSensorSpeedBuilder_; private DolphinConfig.IO iOSpeedSensorDistance_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOSpeedSensorDistanceBuilder_; private DolphinConfig.IO iOSpeedSensorTotalDistance_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOSpeedSensorTotalDistanceBuilder_; private DolphinConfig.IO iOSpeedSensorMaxSpeed_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOSpeedSensorMaxSpeedBuilder_; private DolphinConfig.IO iOSpeedSensorGPSSpeedDiff_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOSpeedSensorGPSSpeedDiffBuilder_; private DolphinConfig.IO iODigitalInput1_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iODigitalInput1Builder_; private DolphinConfig.IO iODigitalInput2_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iODigitalInput2Builder_; private DolphinConfig.IO iOPowerSupply_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOPowerSupplyBuilder_; private DolphinConfig.IO iODigitalInput3_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iODigitalInput3Builder_; private DolphinConfig.IO iOVehicleConnection_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOVehicleConnectionBuilder_; private DolphinConfig.IO iODigitalInput1Time_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iODigitalInput1TimeBuilder_; private DolphinConfig.IO iODigitalInput1TimeDelta_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iODigitalInput1TimeDeltaBuilder_; private DolphinConfig.IO iODigitalInput2Time_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iODigitalInput2TimeBuilder_; private DolphinConfig.IO iODigitalInput2TimeDelta_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iODigitalInput2TimeDeltaBuilder_; private DolphinConfig.IO iOPowerSupplyTime_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOPowerSupplyTimeBuilder_; private DolphinConfig.IO iOPowerSupplyTimeDelta_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOPowerSupplyTimeDeltaBuilder_; private DolphinConfig.IO iODigitalInput3Time_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iODigitalInput3TimeBuilder_; private DolphinConfig.IO iODigitalInput3TimeDelta_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iODigitalInput3TimeDeltaBuilder_; private DolphinConfig.IO iODigitalOutput1_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iODigitalOutput1Builder_; private DolphinConfig.IO iODigitalOutput2_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iODigitalOutput2Builder_; private DolphinConfig.IO iOAnalogInput1_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOAnalogInput1Builder_; private DolphinConfig.IO iOAnalogInput2_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOAnalogInput2Builder_; private DolphinConfig.IO iOAnalogInput3_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOAnalogInput3Builder_; private DolphinConfig.IO iOAxisX_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOAxisXBuilder_; private DolphinConfig.IO iOAxisY_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOAxisYBuilder_; private DolphinConfig.IO iOAxisZ_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOAxisZBuilder_; private DolphinConfig.IO iOECOMaxSpeed_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOECOMaxSpeedBuilder_; private DolphinConfig.IO iOECONormalSpeedDistance_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOECONormalSpeedDistanceBuilder_; private DolphinConfig.IO iOECONormalSpeedTotalDistance_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOECONormalSpeedTotalDistanceBuilder_; private DolphinConfig.IO iOECONormalSpeedTimer_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOECONormalSpeedTimerBuilder_; private DolphinConfig.IO iOECONormalSpeedTotalTimer_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOECONormalSpeedTotalTimerBuilder_; private DolphinConfig.IO iOECOOverSpeedingDistance_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOECOOverSpeedingDistanceBuilder_; private DolphinConfig.IO iOECOOverSpeedingTotalDistance_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOECOOverSpeedingTotalDistanceBuilder_; private DolphinConfig.IO iOECOOverSpeedingTimer_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOECOOverSpeedingTimerBuilder_; private DolphinConfig.IO iOECOOverSpeedingTotalTimer_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOECOOverSpeedingTotalTimerBuilder_; private DolphinConfig.IO iOECOMaxRPM_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOECOMaxRPMBuilder_; private DolphinConfig.IO iOECORPMGreenBandDistance_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOECORPMGreenBandDistanceBuilder_; private DolphinConfig.IO iOECORPMGreenBandTotalDistance_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOECORPMGreenBandTotalDistanceBuilder_; private DolphinConfig.IO iOECORPMGreenBandTimer_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOECORPMGreenBandTimerBuilder_; private DolphinConfig.IO iOECORPMGreenBandTotalTimer_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOECORPMGreenBandTotalTimerBuilder_; private DolphinConfig.IO iOECOOverRPMDistance_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOECOOverRPMDistanceBuilder_; private DolphinConfig.IO iOECOOverRPMTotalDistance_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOECOOverRPMTotalDistanceBuilder_; private DolphinConfig.IO iOECOOverRPMTimer_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOECOOverRPMTimerBuilder_; private DolphinConfig.IO iOECOOverRPMTotalTimer_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOECOOverRPMTotalTimerBuilder_; private DolphinConfig.IO iOECOIdlingEvent_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOECOIdlingEventBuilder_; private DolphinConfig.IO iOECOCruiseControlTimer_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOECOCruiseControlTimerBuilder_; private DolphinConfig.IO iOECOCruiseControlTotalTimer_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOECOCruiseControlTotalTimerBuilder_; private DolphinConfig.IO iOECOCruiseControlDistance_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOECOCruiseControlDistanceBuilder_; private DolphinConfig.IO iOECOCruiseControlTotalDistance_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOECOCruiseControlTotalDistanceBuilder_; private DolphinConfig.IO iOECOUnderRPMDistance_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOECOUnderRPMDistanceBuilder_; private DolphinConfig.IO iOECOUnderRPMTotalDistance_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOECOUnderRPMTotalDistanceBuilder_; private DolphinConfig.IO iOECOUnderRPMTimer_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOECOUnderRPMTimerBuilder_; private DolphinConfig.IO iOECOUnderRPMTotalTimer_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOECOUnderRPMTotalTimerBuilder_; private DolphinConfig.IO iOECOBreakCounter_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOECOBreakCounterBuilder_; private DolphinConfig.IO iOECOHarshBreakCounter_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOECOHarshBreakCounterBuilder_; private DolphinConfig.IO iOECOExtremeBreakCounter_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOECOExtremeBreakCounterBuilder_; private DolphinConfig.IO iOECOHarshAccelerationCounter_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOECOHarshAccelerationCounterBuilder_; private DolphinConfig.IO iOECOCorneringCounter_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOECOCorneringCounterBuilder_; private DolphinConfig.IO iOECOTotalBreak_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOECOTotalBreakBuilder_; private DolphinConfig.IO iOECOTotalHarshBreak_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOECOTotalHarshBreakBuilder_; private DolphinConfig.IO iOECOTotalExtremeBreak_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOECOTotalExtremeBreakBuilder_; private DolphinConfig.IO iOECOTotalHarshAcceleration_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOECOTotalHarshAccelerationBuilder_; private DolphinConfig.IO iOECOTotalCornering_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOECOTotalCorneringBuilder_; private DolphinConfig.IO iOTrip_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOTripBuilder_; private DolphinConfig.IO iOTripTime_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOTripTimeBuilder_; private DolphinConfig.IO iOTripDistance_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOTripDistanceBuilder_; private DolphinConfig.IO iODriverID_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iODriverIDBuilder_; private DolphinConfig.IO iOTemperatureSensor1_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOTemperatureSensor1Builder_; private DolphinConfig.IO iOTemperatureSensor1ID_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOTemperatureSensor1IDBuilder_; private DolphinConfig.IO iOTemperatureSensor2_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOTemperatureSensor2Builder_; private DolphinConfig.IO iOTemperatureSensor2ID_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOTemperatureSensor2IDBuilder_; private DolphinConfig.IO iOTemperatureSensor3_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOTemperatureSensor3Builder_; private DolphinConfig.IO iOTemperatureSensor3ID_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOTemperatureSensor3IDBuilder_; private DolphinConfig.IO iOHumiditySensor1_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOHumiditySensor1Builder_; private DolphinConfig.IO iOTiltStatus_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOTiltStatusBuilder_; private DolphinConfig.IO iOOBDEngineRPM_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOOBDEngineRPMBuilder_; private DolphinConfig.IO iOOBDBatteryVoltage_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOOBDBatteryVoltageBuilder_; private DolphinConfig.IO iOOBDEngineCoolantTemperature_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOOBDEngineCoolantTemperatureBuilder_; private DolphinConfig.IO iOOBDVehicleSpeed_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOOBDVehicleSpeedBuilder_; private DolphinConfig.IO iOOBDTotalDistance_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOOBDTotalDistanceBuilder_; private DolphinConfig.IO iOOBDFuelRate_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOOBDFuelRateBuilder_; private DolphinConfig.IO iOOBDTotalFuelUsed_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOOBDTotalFuelUsedBuilder_; private DolphinConfig.IO iOOBDIntakeAirTemperature_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOOBDIntakeAirTemperatureBuilder_; private DolphinConfig.IO iOOBDIntakeManifoldAbsolutePressure_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOOBDIntakeManifoldAbsolutePressureBuilder_; private DolphinConfig.IO iOOBDMalfunctionIndicatorLamp_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOOBDMalfunctionIndicatorLampBuilder_; private DolphinConfig.IO iODiagnosticTroubleCodesCount_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iODiagnosticTroubleCodesCountBuilder_; private DolphinConfig.IO iOOBDCalculatedEngineLoad_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOOBDCalculatedEngineLoadBuilder_; private DolphinConfig.IO iOOBDMassAirFlowRate_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOOBDMassAirFlowRateBuilder_; private DolphinConfig.IO iOOBDThrottlePosition_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOOBDThrottlePositionBuilder_; private DolphinConfig.IO iOOBDRunTimeSinceEngineStart_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOOBDRunTimeSinceEngineStartBuilder_; private DolphinConfig.IO iOOBDFuelTankLevelInput_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOOBDFuelTankLevelInputBuilder_; private DolphinConfig.IO iOOBDDistanceTraveledSinceCodesCleared_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOOBDDistanceTraveledSinceCodesClearedBuilder_; private DolphinConfig.IO iOOBDAbsoluteThrottlePositionD_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOOBDAbsoluteThrottlePositionDBuilder_; private DolphinConfig.IO iOOBDTimeRunWithMILOn_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOOBDTimeRunWithMILOnBuilder_; private DolphinConfig.IO iOOBDEngineOilTemperature_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOOBDEngineOilTemperatureBuilder_; private DolphinConfig.IO iOOBDFuelSystem1Status_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOOBDFuelSystem1StatusBuilder_; private DolphinConfig.IO iOOBDFuelSystem2Status_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOOBDFuelSystem2StatusBuilder_; private DolphinConfig.IO iOOBDOxygenSensor1Voltage_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOOBDOxygenSensor1VoltageBuilder_; private DolphinConfig.IO iOOBDOxygenSensor1ShortTermFuelTrim_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOOBDOxygenSensor1ShortTermFuelTrimBuilder_; private DolphinConfig.IO iOOBDOxygenSensor2Voltage_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOOBDOxygenSensor2VoltageBuilder_; private DolphinConfig.IO iOOBDOxygenSensor2ShortTermFuelTrim_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOOBDOxygenSensor2ShortTermFuelTrimBuilder_; private DolphinConfig.IO iOOBDOxygenSensor3Voltage_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOOBDOxygenSensor3VoltageBuilder_; private DolphinConfig.IO iOOBDOxygenSensor3ShortTermFuelTrim_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOOBDOxygenSensor3ShortTermFuelTrimBuilder_; private DolphinConfig.IO iOOBDOxygenSensor4Voltage_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOOBDOxygenSensor4VoltageBuilder_; private DolphinConfig.IO iOOBDOxygenSensor4ShortTermFuelTrim_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOOBDOxygenSensor4ShortTermFuelTrimBuilder_; private DolphinConfig.IO iOCANBusTachograph1WorkingState1_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOCANBusTachograph1WorkingState1Builder_; private DolphinConfig.IO iOCANBusTachograph1WorkingState2_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOCANBusTachograph1WorkingState2Builder_; private DolphinConfig.IO iOCANBusTachograph1VehicleMotion_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOCANBusTachograph1VehicleMotionBuilder_; private DolphinConfig.IO iOCANBusTachograph1Driv1TimeRelStates_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOCANBusTachograph1Driv1TimeRelStatesBuilder_; private DolphinConfig.IO iOCANBusTachograph1Driver1Card_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOCANBusTachograph1Driver1CardBuilder_; private DolphinConfig.IO iOCANBusTachograph1VehicleOverspeed_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOCANBusTachograph1VehicleOverspeedBuilder_; private DolphinConfig.IO iOCANBusTachograph1Driv2TimeRelStates_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOCANBusTachograph1Driv2TimeRelStatesBuilder_; private DolphinConfig.IO iOCANBusTachograph1Driver2Card_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOCANBusTachograph1Driver2CardBuilder_; private DolphinConfig.IO iOCANBusTachograph1SystemEvent_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOCANBusTachograph1SystemEventBuilder_; private DolphinConfig.IO iOCANBusTachograph1HandlingInformation_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOCANBusTachograph1HandlingInformationBuilder_; private DolphinConfig.IO iOCANBusTachograph1TachographPerformance_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOCANBusTachograph1TachographPerformanceBuilder_; private DolphinConfig.IO iOCANBusTachograph1DirectionIndicator_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOCANBusTachograph1DirectionIndicatorBuilder_; private DolphinConfig.IO iOCANBusTachograph1VehicleSpeed_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOCANBusTachograph1VehicleSpeedBuilder_; private DolphinConfig.IO iOCANBusEngineTemperature1EngineCoolantTemperature_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOCANBusEngineTemperature1EngineCoolantTemperatureBuilder_; private DolphinConfig.IO iOCANBusElectronicEngineController1ActualEnginePercent_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOCANBusElectronicEngineController1ActualEnginePercentBuilder_; private DolphinConfig.IO iOCANBusElectronicEngineController1EngineSpeed_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOCANBusElectronicEngineController1EngineSpeedBuilder_; private DolphinConfig.IO iOCANBusEngineHoursEngineTotalHours_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOCANBusEngineHoursEngineTotalHoursBuilder_; private DolphinConfig.IO iOCANBusVehicleDistanceTotalVehicleDistance_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOCANBusVehicleDistanceTotalVehicleDistanceBuilder_; private DolphinConfig.IO iOCANBusHighResolutionFuelConsumptionTotalFuelUsed_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOCANBusHighResolutionFuelConsumptionTotalFuelUsedBuilder_; private DolphinConfig.IO iOCANBusDashDisplayFuelLevel1_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOCANBusDashDisplayFuelLevel1Builder_; private DolphinConfig.IO iOCANBusAmbientConditionsAmbientAirTemperature_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOCANBusAmbientConditionsAmbientAirTemperatureBuilder_; private DolphinConfig.IO iOCANBusFuelEconomyFuelRate_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOCANBusFuelEconomyFuelRateBuilder_; private DolphinConfig.IO iOCANBusFuelEconomyInstantaneousFuelEconomy_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOCANBusFuelEconomyInstantaneousFuelEconomyBuilder_; private DolphinConfig.IO iOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit1_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit1Builder_; private DolphinConfig.IO iOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit2_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit2Builder_; private DolphinConfig.IO iOCANBusAftertreatmentDieselExhaustFluidTankInformationTank1Level_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOCANBusAftertreatmentDieselExhaustFluidTankInformationTank1LevelBuilder_; private DolphinConfig.IO iOCANBusTruckBusElectronicEngineController2AcceleratorPedalPosition1_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOCANBusTruckBusElectronicEngineController2AcceleratorPedalPosition1Builder_; private DolphinConfig.IO iOCANBusTruckBusElectronicEngineController2EnginePercentLoad_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOCANBusTruckBusElectronicEngineController2EnginePercentLoadBuilder_; private DolphinConfig.IO iOCANBusTruckVehicleWeightAxleWeight1_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOCANBusTruckVehicleWeightAxleWeight1Builder_; private DolphinConfig.IO iOCANBusTruckVehicleWeightAxleWeight2_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOCANBusTruckVehicleWeightAxleWeight2Builder_; private DolphinConfig.IO iOCANBusTruckVehicleWeightAxleWeight3_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOCANBusTruckVehicleWeightAxleWeight3Builder_; private DolphinConfig.IO iOCANBusTruckServiceInformationServiceDistance_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOCANBusTruckServiceInformationServiceDistanceBuilder_; private DolphinConfig.IO iOCANBusTruckPTODriveEngagementPTOEngageStat_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOCANBusTruckPTODriveEngagementPTOEngageStatBuilder_; private DolphinConfig.IO iOCANBusTruckCombinationVehicleWeightGrossCombinationVehicleWeight_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOCANBusTruckCombinationVehicleWeightGrossCombinationVehicleWeightBuilder_; private DolphinConfig.IO iOCANBusTruckBusElectronicRetarderController1RetarderTorqueMode_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOCANBusTruckBusElectronicRetarderController1RetarderTorqueModeBuilder_; private DolphinConfig.IO iOCANBusTruckBusElectronicRetarderController1RetarderSelection_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOCANBusTruckBusElectronicRetarderController1RetarderSelectionBuilder_; private DolphinConfig.IO iOCANBusBusDoorControl1DoorPosition_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOCANBusBusDoorControl1DoorPositionBuilder_; private DolphinConfig.IO iOCANBusBusDoorControl1RampWheelChairlift_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOCANBusBusDoorControl1RampWheelChairliftBuilder_; private DolphinConfig.IO iOCANBusBusDoorControl1DoorsStatus2_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOCANBusBusDoorControl1DoorsStatus2Builder_; private DolphinConfig.IO iOCANBusBusDoorControl2_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOCANBusBusDoorControl2Builder_; private DolphinConfig.IO iOCANBusBrakeLiningRemainingAxleFrontLeftWheel_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOCANBusBrakeLiningRemainingAxleFrontLeftWheelBuilder_; private DolphinConfig.IO iOCANBusBrakeLiningRemainingAxleFrontRightWheel_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOCANBusBrakeLiningRemainingAxleFrontRightWheelBuilder_; private DolphinConfig.IO iOCANBusBrakeLiningRemainingAxleRear1LeftWheel_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOCANBusBrakeLiningRemainingAxleRear1LeftWheelBuilder_; private DolphinConfig.IO iOCANBusBrakeLiningRemainingAxleRear1RightWheel_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOCANBusBrakeLiningRemainingAxleRear1RightWheelBuilder_; private DolphinConfig.IO iOCANBusBrakeLiningRemainingAxleRear2LeftWheel_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOCANBusBrakeLiningRemainingAxleRear2LeftWheelBuilder_; private DolphinConfig.IO iOCANBusBrakeLiningRemainingAxleRear2RightWheel_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOCANBusBrakeLiningRemainingAxleRear2RightWheelBuilder_; private DolphinConfig.IO iOCANBusBrakeLiningRemainingAxleRear3LeftWheel_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOCANBusBrakeLiningRemainingAxleRear3LeftWheelBuilder_; private DolphinConfig.IO iOCANBusBrakeLiningRemainingAxleRear3RightWheel_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOCANBusBrakeLiningRemainingAxleRear3RightWheelBuilder_; private DolphinConfig.IO iOCANBusTruckBusCruiseControl_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOCANBusTruckBusCruiseControlBuilder_; private DolphinConfig.IO iOCANBusBusAlternatorSpeedAlternatorStatus1_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOCANBusBusAlternatorSpeedAlternatorStatus1Builder_; private DolphinConfig.IO iOCANBusBusAlternatorSpeedAlternatorStatus2_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOCANBusBusAlternatorSpeedAlternatorStatus2Builder_; private DolphinConfig.IO iOCANBusBusAlternatorSpeedAlternatorStatus3_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOCANBusBusAlternatorSpeedAlternatorStatus3Builder_; private DolphinConfig.IO iOCANBusBusAlternatorSpeedAlternatorStatus4_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOCANBusBusAlternatorSpeedAlternatorStatus4Builder_; private DolphinConfig.IO iOCANBusBusElectronicTransmissionController2SelectedGear_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOCANBusBusElectronicTransmissionController2SelectedGearBuilder_; private DolphinConfig.IO iOCANBusBusElectronicTransmissionController2CurrentGear_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOCANBusBusElectronicTransmissionController2CurrentGearBuilder_; private DolphinConfig.IO iOCANBusBusAirSuspensionControl4FrontAxleLeft_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOCANBusBusAirSuspensionControl4FrontAxleLeftBuilder_; private DolphinConfig.IO iOCANBusBusAirSuspensionControl4FrontAxleRight_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOCANBusBusAirSuspensionControl4FrontAxleRightBuilder_; private DolphinConfig.IO iOCANBusBusAirSuspensionControl4RearAxleLeft_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOCANBusBusAirSuspensionControl4RearAxleLeftBuilder_; private DolphinConfig.IO iOCANBusBusAirSuspensionControl4RearAxleright_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOCANBusBusAirSuspensionControl4RearAxlerightBuilder_; private DolphinConfig.IO iOCANBusDashDisplayFuelLevel2_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOCANBusDashDisplayFuelLevel2Builder_; private DolphinConfig.IO iOCANBusElectronicBrakeControllerBrakePedalPosition_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOCANBusElectronicBrakeControllerBrakePedalPositionBuilder_; private DolphinConfig.IO iOCANBusFuelConsumptionGaseousTotalFuelUsed_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOCANBusFuelConsumptionGaseousTotalFuelUsedBuilder_; private DolphinConfig.IO iOCANBusTruckBusCruiseControlVehicleSpeedParkingBrakeSwitch_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOCANBusTruckBusCruiseControlVehicleSpeedParkingBrakeSwitchBuilder_; private DolphinConfig.IO iOCANBusTruckBusCruiseControlVehicleSpeedWheelBasedSpeed_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOCANBusTruckBusCruiseControlVehicleSpeedWheelBasedSpeedBuilder_; private DolphinConfig.IO iOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlActive_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlActiveBuilder_; private DolphinConfig.IO iOCANBusTruckBusCruiseControlVehicleSpeedBrakeSwitch_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOCANBusTruckBusCruiseControlVehicleSpeedBrakeSwitchBuilder_; private DolphinConfig.IO iOCANBusTruckBusCruiseControlVehicleSpeedClutchSwitch_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOCANBusTruckBusCruiseControlVehicleSpeedClutchSwitchBuilder_; private DolphinConfig.IO iOCANBusTruckBusCruiseControlVehicleSpeedPtoState_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOCANBusTruckBusCruiseControlVehicleSpeedPtoStateBuilder_; private DolphinConfig.IO iOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlStates_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlStatesBuilder_; private DolphinConfig.IO iOCANBusBusVehicleElectricalPowerHybridBatteryPackRemainingCharge_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOCANBusBusVehicleElectricalPowerHybridBatteryPackRemainingChargeBuilder_; private DolphinConfig.IO iOCANBusBusVehicleDynamicStabilityControl2SteeringWheelAngle_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOCANBusBusVehicleDynamicStabilityControl2SteeringWheelAngleBuilder_; private DolphinConfig.IO iOCANBusElectronicEngineController14FuelType_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOCANBusElectronicEngineController14FuelTypeBuilder_; private DolphinConfig.IO iOCANBusEngineFluidLevelPressureEngineOilLevel_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOCANBusEngineFluidLevelPressureEngineOilLevelBuilder_; private DolphinConfig.IO iOCANBusEngineFluidLevelPressureEngineOilPressure_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOCANBusEngineFluidLevelPressureEngineOilPressureBuilder_; private DolphinConfig.IO iOCANBusEngineFluidLevelPressureCoolantLevel_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOCANBusEngineFluidLevelPressureCoolantLevelBuilder_; private DolphinConfig.IO iOCANBusTellTaleStatus_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOCANBusTellTaleStatusBuilder_; private DolphinConfig.IO iOCANBusFuelConsumptionEngineTotalFuelUsed_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOCANBusFuelConsumptionEngineTotalFuelUsedBuilder_; private DolphinConfig.IO iOCANBusTruckVehicleWeightAxleWeight4_; private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> iOCANBusTruckVehicleWeightAxleWeight4Builder_;
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/* 33996 */         return DolphinConfig.internal_static_org_traccar_protobuf_dolphin_Config_Config_descriptor;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
/* 34002 */         return DolphinConfig.internal_static_org_traccar_protobuf_dolphin_Config_Config_fieldAccessorTable
/* 34003 */           .ensureFieldAccessorsInitialized(DolphinConfig.Config.class, Builder.class);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private Builder()
/*       */       {
/* 38956 */         this.serialPortBaudrate_ = 0;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 39041 */         this.password_ = "";
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 39117 */         this.movement_ = 0;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 39222 */         this.sleep_ = 0;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 39327 */         this.engineOn_ = 0;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 39630 */         this.engineOnOperator_ = 0;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 39808 */         this.gNSS_ = 0;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 39925 */         this.staticNavigationSource_ = 0;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 39979 */         this.recordsSaveAndSendMode_ = 0;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 40053 */         this.timeSynchronization_ = 0;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 40107 */         this.nTPServer_ = "";
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 40319 */         this.timetableData_ = ByteString.EMPTY;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 40896 */         this.bluetoothRadioMode_ = 0;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 40970 */         this.bluetoothName_ = "";
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 41046 */         this.bluetoothPIN_ = "";
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 41122 */         this.bluetoothSecurityMode_ = 0;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 41207 */         this.bluetoothExternalConnectionMode_ = 0;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 41261 */         this.bluetoothExternalDeviceMAC_ = "";
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 41337 */         this.bluetoothExternalDeviceName_ = "";
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 41413 */         this.bluetoothExternalDevicePIN_ = "";
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 41489 */         this.bluetoothAuthorizedMAC1_ = "";
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 41565 */         this.bluetoothAuthorizedMAC2_ = "";
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 41641 */         this.bluetoothAuthorizedMAC3_ = "";
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 41717 */         this.bluetoothAuthorizedMAC4_ = "";
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 41793 */         this.bluetoothAuthorizedMAC5_ = "";
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 41912 */         this.gPRSApnName_ = "";
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 41988 */         this.gPRSApnUsername_ = "";
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 42064 */         this.gPRSApnPassword_ = "";
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 42233 */         this.gPRSServerAddress_ = "";
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 42360 */         this.gPRSServerProtocol_ = 0;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 42414 */         this.gPRSBackupServerAddress_ = "";
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 42541 */         this.gPRSBackupServerProtocol_ = 0;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 42669 */         this.authenticationMode_ = 0;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 42723 */         this.authenticationCode_ = "";
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 42842 */         this.firmwareUpdateChannel_ = "";
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 42949 */         this.firmwareUpdateServerAddress_ = "";
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 43056 */         this.firmwareUpdateServerProtocol_ = 0;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 43215 */         this.sMSDataSendNumber_ = "";
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 43291 */         this.sMSPassword_ = "";
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 43398 */         this.callIncommingCallAction_ = 0;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 43545 */         this.authorizedNumber1_ = "";
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 43641 */         this.authorizedNumber2_ = "";
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 43717 */         this.authorizedNumber3_ = "";
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 43793 */         this.authorizedNumber4_ = "";
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 43869 */         this.authorizedNumber5_ = "";
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 43945 */         this.authorizedNumber6_ = "";
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 44021 */         this.authorizedNumber7_ = "";
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 44097 */         this.authorizedNumber8_ = "";
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 44173 */         this.authorizedNumber9_ = "";
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 44249 */         this.authorizedNumber10_ = "";
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 44325 */         this.gsmPredefinedNumber1_ = "";
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 44401 */         this.gsmPredefinedNumber2_ = "";
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 44477 */         this.gsmPredefinedNumber3_ = "";
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 44553 */         this.gsmPredefinedNumber4_ = "";
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 44629 */         this.gsmPredefinedNumber5_ = "";
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 44705 */         this.gsmPredefinedNumber6_ = "";
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 44781 */         this.gsmPredefinedNumber7_ = "";
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 44857 */         this.gsmPredefinedNumber8_ = "";
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 44933 */         this.gsmPredefinedNumber9_ = "";
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 45009 */         this.gsmPredefinedNumber10_ = "";
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 45085 */         this.roamingOperator1_ = "";
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 45161 */         this.roamingOperator2_ = "";
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 45237 */         this.roamingOperator3_ = "";
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 45313 */         this.roamingOperator4_ = "";
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 45389 */         this.roamingOperator5_ = "";
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 51871 */         this.overspeedingDeactivationMode_ = 0;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 52061 */         this.uSSDCode_ = "";
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 52319 */         this.crashDetectionTrace_ = 0;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 52435 */         this.crashDetectionSMSText_ = "";
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 52585 */         this.driverRegistrationMode_ = 0;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 52659 */         this.driverRegistrationAuthentication_ = 0;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 52744 */         this.driverRegistrationBuzzerDigitalOutput_ = 0;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 52798 */         this.driverRegistrationImmobilizerDigitalOutput_ = 0;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 53794 */         this.eCOEngineOnOperator_ = 0;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 53879 */         this.eCUInterface_ = 0;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 53953 */         this.fuelConsumptionEnabled_ = 0;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 54256 */         this.sIPAADServerAddress_ = "";
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 54383 */         this.sIPAADServerProtocol_ = 0; maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (DolphinConfig.Config.alwaysUseFieldBuilders); } public Builder clear() { super.clear(); this.serialPortBaudrate_ = 0; this.doNotResetDeviceOnProblems_ = false; this.password_ = ""; this.movement_ = 0; this.movementSensorSensitivity_ = 0; this.sleep_ = 0; this.sleepTimeout_ = 0; this.engineOn_ = 0; this.engineOnDIN1_ = false; this.engineOnDIN2_ = false; this.engineOnMovementSensor_ = false; this.engineOnPowerSupplyAvailable_ = false; this.engineOnGpsSpeed_ = 0; this.engineOnCanRPM_ = 0; this.engineOnMinActiveStateDuration_ = 0; this.engineOnOperator_ = 0; this.engineOnMovementStartDelay_ = 0; this.engineOnMovementStopDelay_ = 0; this.engineOnExternalVoltage_ = 0; this.ledIndication_ = false; this.gNSS_ = 0; this.staticNavigationEnabled_ = false; this.staticNavigationSource_ = 0; this.recordsSaveAndSendMode_ = 0; this.timeSynchronization_ = 0; this.nTPServer_ = ""; this.nTPInterval_ = 0; this.sleepNoPowerTimeout_ = 0; this.sendPing_ = false; this.timetableMode_ = false; this.timetableData_ = ByteString.EMPTY; if (this.service1Builder_ == null) { this.service1_ = null; } else { this.service1_ = null; this.service1Builder_ = null; }  if (this.service2Builder_ == null) { this.service2_ = null; } else { this.service2_ = null; this.service2Builder_ = null; }  if (this.service3Builder_ == null) { this.service3_ = null; } else { this.service3_ = null; this.service3Builder_ = null; }  this.analogInput1AverageTime_ = 0; this.analogInput2AverageTime_ = 0; this.analogInput3AverageTime_ = 0; this.bluetoothRadioMode_ = 0; this.bluetoothName_ = ""; this.bluetoothPIN_ = ""; this.bluetoothSecurityMode_ = 0; this.bluetoothPowerDownOnSleep_ = false; this.bluetoothExternalConnectionMode_ = 0; this.bluetoothExternalDeviceMAC_ = ""; this.bluetoothExternalDeviceName_ = ""; this.bluetoothExternalDevicePIN_ = ""; this.bluetoothAuthorizedMAC1_ = ""; this.bluetoothAuthorizedMAC2_ = ""; this.bluetoothAuthorizedMAC3_ = ""; this.bluetoothAuthorizedMAC4_ = ""; this.bluetoothAuthorizedMAC5_ = ""; this.gPRSContextEnabled_ = false; this.gPRSApnName_ = ""; this.gPRSApnUsername_ = ""; this.gPRSApnPassword_ = ""; this.gPRSCHAPAuthentication_ = false; this.gPRSLinkTimeout_ = 0; this.gPRSResponseTimeout_ = 0; this.gPRSServerAddress_ = ""; this.gPRSServerPort_ = 0; this.gPRSServerProtocol_ = 0; this.gPRSBackupServerAddress_ = ""; this.gPRSBackupServerPort_ = 0; this.gPRSBackupServerProtocol_ = 0; this.gPRSSSLClientAuthentication_ = false; this.gPRSDataCompression_ = false; this.authenticationMode_ = 0; this.authenticationCode_ = ""; this.firmwareUpdateEnabled_ = false; this.firmwareUpdateChannel_ = ""; this.firmwareUpdateCheckInterval_ = 0; this.firmwareUpdateServerAddress_ = ""; this.firmwareUpdateServerPort_ = 0; this.firmwareUpdateServerProtocol_ = 0; this.firmwareUpdateLinkTimeout_ = 0; this.firmwareUpdateResponseTimeout_ = 0; this.sMSDataSending_ = false; this.sMSDataSendNumber_ = ""; this.sMSPassword_ = ""; this.sMSEventTimeZone_ = 0; this.callIncommingCallAction_ = 0; this.callDigitalInput1CallTo_ = 0; this.callDigitalInput2CallTo_ = 0; this.callDigitalInput3CallTo_ = 0; this.authorizedNumber1_ = ""; this.authorizedNumber2_ = ""; this.authorizedNumber3_ = ""; this.authorizedNumber4_ = ""; this.authorizedNumber5_ = ""; this.authorizedNumber6_ = ""; this.authorizedNumber7_ = ""; this.authorizedNumber8_ = ""; this.authorizedNumber9_ = ""; this.authorizedNumber10_ = ""; this.gsmPredefinedNumber1_ = ""; this.gsmPredefinedNumber2_ = ""; this.gsmPredefinedNumber3_ = ""; this.gsmPredefinedNumber4_ = ""; this.gsmPredefinedNumber5_ = ""; this.gsmPredefinedNumber6_ = ""; this.gsmPredefinedNumber7_ = ""; this.gsmPredefinedNumber8_ = ""; this.gsmPredefinedNumber9_ = ""; this.gsmPredefinedNumber10_ = ""; this.roamingOperator1_ = ""; this.roamingOperator2_ = ""; this.roamingOperator3_ = ""; this.roamingOperator4_ = ""; this.roamingOperator5_ = ""; this.dAQStopHomeMinPeriod_ = 0; this.dAQStopRoamingMinPeriod_ = 0; this.dAQMovingHomeMinPeriod_ = 0; this.dAQMovingHomeMinPathDeviation_ = 0; this.dAQMovingRoamingMinPeriod_ = 0; this.dAQMovingRoamingMinPathDeviation_ = 0; if (this.geoZone1Builder_ == null) { this.geoZone1_ = null; } else { this.geoZone1_ = null; this.geoZone1Builder_ = null; }  if (this.geoZone2Builder_ == null) { this.geoZone2_ = null; } else { this.geoZone2_ = null; this.geoZone2Builder_ = null; }  if (this.geoZone3Builder_ == null) { this.geoZone3_ = null; } else { this.geoZone3_ = null; this.geoZone3Builder_ = null; }  if (this.geoZone4Builder_ == null) { this.geoZone4_ = null; } else { this.geoZone4_ = null; this.geoZone4Builder_ = null; }  if (this.geoZone5Builder_ == null) { this.geoZone5_ = null; } else { this.geoZone5_ = null; this.geoZone5Builder_ = null; }  if (this.geoZone6Builder_ == null) { this.geoZone6_ = null; } else { this.geoZone6_ = null; this.geoZone6Builder_ = null; }  if (this.geoZone7Builder_ == null) { this.geoZone7_ = null; } else { this.geoZone7_ = null; this.geoZone7Builder_ = null; }  if (this.geoZone8Builder_ == null) { this.geoZone8_ = null; } else { this.geoZone8_ = null; this.geoZone8Builder_ = null; }  if (this.geoZone9Builder_ == null) { this.geoZone9_ = null; } else { this.geoZone9_ = null; this.geoZone9Builder_ = null; }  if (this.geoZone10Builder_ == null) { this.geoZone10_ = null; } else { this.geoZone10_ = null; this.geoZone10Builder_ = null; }  if (this.geoZone11Builder_ == null) { this.geoZone11_ = null; } else { this.geoZone11_ = null; this.geoZone11Builder_ = null; }  if (this.geoZone12Builder_ == null) { this.geoZone12_ = null; } else { this.geoZone12_ = null; this.geoZone12Builder_ = null; }  if (this.geoZone13Builder_ == null) { this.geoZone13_ = null; } else { this.geoZone13_ = null; this.geoZone13Builder_ = null; }  if (this.geoZone14Builder_ == null) { this.geoZone14_ = null; } else { this.geoZone14_ = null; this.geoZone14Builder_ = null; }  if (this.geoZone15Builder_ == null) { this.geoZone15_ = null; } else { this.geoZone15_ = null; this.geoZone15Builder_ = null; }  if (this.geoZone16Builder_ == null) { this.geoZone16_ = null; } else { this.geoZone16_ = null; this.geoZone16Builder_ = null; }  if (this.geoZone17Builder_ == null) { this.geoZone17_ = null; } else { this.geoZone17_ = null; this.geoZone17Builder_ = null; }  if (this.geoZone18Builder_ == null) { this.geoZone18_ = null; } else { this.geoZone18_ = null; this.geoZone18Builder_ = null; }  if (this.geoZone19Builder_ == null) { this.geoZone19_ = null; } else { this.geoZone19_ = null; this.geoZone19Builder_ = null; }  if (this.geoZone20Builder_ == null) { this.geoZone20_ = null; } else { this.geoZone20_ = null; this.geoZone20Builder_ = null; }  if (this.geoZone21Builder_ == null) { this.geoZone21_ = null; } else { this.geoZone21_ = null; this.geoZone21Builder_ = null; }  if (this.geoZone22Builder_ == null) { this.geoZone22_ = null; } else { this.geoZone22_ = null; this.geoZone22Builder_ = null; }  if (this.geoZone23Builder_ == null) { this.geoZone23_ = null; } else { this.geoZone23_ = null; this.geoZone23Builder_ = null; }  if (this.geoZone24Builder_ == null) { this.geoZone24_ = null; } else { this.geoZone24_ = null; this.geoZone24Builder_ = null; }  if (this.geoZone25Builder_ == null) { this.geoZone25_ = null; } else { this.geoZone25_ = null; this.geoZone25Builder_ = null; }  if (this.geoZone26Builder_ == null) { this.geoZone26_ = null; } else { this.geoZone26_ = null; this.geoZone26Builder_ = null; }  if (this.geoZone27Builder_ == null) { this.geoZone27_ = null; } else { this.geoZone27_ = null; this.geoZone27Builder_ = null; }  if (this.geoZone28Builder_ == null) { this.geoZone28_ = null; } else { this.geoZone28_ = null; this.geoZone28Builder_ = null; }  if (this.geoZone29Builder_ == null) { this.geoZone29_ = null; } else { this.geoZone29_ = null; this.geoZone29Builder_ = null; }  if (this.geoZone30Builder_ == null) { this.geoZone30_ = null; } else { this.geoZone30_ = null; this.geoZone30Builder_ = null; }  if (this.geoZone31Builder_ == null) { this.geoZone31_ = null; } else { this.geoZone31_ = null; this.geoZone31Builder_ = null; }  if (this.geoZone32Builder_ == null) { this.geoZone32_ = null; } else { this.geoZone32_ = null; this.geoZone32Builder_ = null; }  if (this.geoZone33Builder_ == null) { this.geoZone33_ = null; } else { this.geoZone33_ = null; this.geoZone33Builder_ = null; }  if (this.geoZone34Builder_ == null) { this.geoZone34_ = null; } else { this.geoZone34_ = null; this.geoZone34Builder_ = null; }  if (this.geoZone35Builder_ == null) { this.geoZone35_ = null; } else { this.geoZone35_ = null; this.geoZone35Builder_ = null; }  if (this.geoZone36Builder_ == null) { this.geoZone36_ = null; } else { this.geoZone36_ = null; this.geoZone36Builder_ = null; }  if (this.geoZone37Builder_ == null) { this.geoZone37_ = null; } else { this.geoZone37_ = null; this.geoZone37Builder_ = null; }  if (this.geoZone38Builder_ == null) { this.geoZone38_ = null; } else { this.geoZone38_ = null; this.geoZone38Builder_ = null; }  if (this.geoZone39Builder_ == null) { this.geoZone39_ = null; } else { this.geoZone39_ = null; this.geoZone39Builder_ = null; }  if (this.geoZone40Builder_ == null) { this.geoZone40_ = null; } else { this.geoZone40_ = null; this.geoZone40Builder_ = null; }  if (this.geoZone41Builder_ == null) { this.geoZone41_ = null; } else { this.geoZone41_ = null; this.geoZone41Builder_ = null; }  if (this.geoZone42Builder_ == null) { this.geoZone42_ = null; } else { this.geoZone42_ = null; this.geoZone42Builder_ = null; }  if (this.geoZone43Builder_ == null) { this.geoZone43_ = null; } else { this.geoZone43_ = null; this.geoZone43Builder_ = null; }  if (this.geoZone44Builder_ == null) { this.geoZone44_ = null; } else { this.geoZone44_ = null; this.geoZone44Builder_ = null; }  if (this.geoZone45Builder_ == null) { this.geoZone45_ = null; } else { this.geoZone45_ = null; this.geoZone45Builder_ = null; }  if (this.geoZone46Builder_ == null) { this.geoZone46_ = null; } else { this.geoZone46_ = null; this.geoZone46Builder_ = null; }  if (this.geoZone47Builder_ == null) { this.geoZone47_ = null; } else { this.geoZone47_ = null; this.geoZone47Builder_ = null; }  if (this.geoZone48Builder_ == null) { this.geoZone48_ = null; } else { this.geoZone48_ = null; this.geoZone48Builder_ = null; }  if (this.geoZone49Builder_ == null) { this.geoZone49_ = null; } else { this.geoZone49_ = null; this.geoZone49Builder_ = null; }  if (this.geoZone50Builder_ == null) { this.geoZone50_ = null; } else { this.geoZone50_ = null; this.geoZone50Builder_ = null; }  this.tripStartSpeed_ = 0; this.tripUseIgnition_ = false; this.tripParkDetectionTimeout_ = 0; this.overspeedingEnable_ = false; this.overspeedingLimit_ = 0; this.overspeedingActivationSpeed_ = 0; this.overspeedingDeactivationMode_ = 0; this.overspeedingDeactivationValue_ = 0; this.uSSDEnabled_ = false; this.uSSDID_ = 0; this.uSSDInterval_ = 0; this.uSSDCode_ = ""; this.speedSensorKmPulseCount_ = 0; this.crashDetectionEnabled_ = false; this.crashDetectionLevel1Threshold_ = 0; this.crashDetectionLevel2Threshold_ = 0; this.crashDetectionLevel3Threshold_ = 0; this.crashDetectionTrace_ = 0; this.crashDetectionDuration_ = 0; this.crashDetectionSendSMSTo_ = 0; this.crashDetectionSMSText_ = ""; this.crashDetectionCallTo_ = 0; this.rolloverDetectionEnabled_ = false; this.driverRegistrationMode_ = 0; this.driverRegistrationAuthentication_ = 0; this.driverRegistrationDeregistrationTimeout_ = 0; this.driverRegistrationBuzzerDigitalOutput_ = 0; this.driverRegistrationImmobilizerDigitalOutput_ = 0; this.driverRegistrationImmobilizerActiveLow_ = false; this.driverRegistrationAuthorizedID1_ = 0L; this.driverRegistrationAuthorizedID2_ = 0L; this.driverRegistrationAuthorizedID3_ = 0L; this.driverRegistrationAuthorizedID4_ = 0L; this.driverRegistrationAuthorizedID5_ = 0L; this.driverRegistrationAuthorizedID6_ = 0L; this.driverRegistrationAuthorizedID7_ = 0L; this.driverRegistrationAuthorizedID8_ = 0L; this.driverRegistrationAuthorizedID9_ = 0L; this.driverRegistrationAuthorizedID10_ = 0L; this.eCODriveActive_ = false; this.eCOOverSpeedingLimit_ = 0; this.eCORPMGreenBandLowLimit_ = 0; this.eCORPMGreenBandHighLimit_ = 0; this.eCOHarshBreakingLimit_ = 0; this.eCOExtremeBreakingLimit_ = 0; this.eCOHarshAccelerationLimit_ = 0; this.eCOCorneringLimit_ = 0; this.eCOIdlingDelay_ = 0; this.eCOIdlingSpeed_ = 0; this.eCOCruiseControlSpeed_ = 0; this.eCOCalculateOnlyWhenEngineOn_ = false; this.eCOCustomEngineSource_ = false; this.eCOEngineOnDIN1_ = false; this.eCOEngineOnDIN2_ = false; this.eCOEngineOnMovementSensor_ = false; this.eCOEngineOnPowerSupplyAvailable_ = false; this.eCOEngineOnCanRPMLow_ = 0; this.eCOEngineOnCanRPMHigh_ = 0; this.eCOEngineOnOperator_ = 0; this.eCOEngineOnExternalVoltage_ = 0; this.eCUInterface_ = 0; this.fuelConsumptionEnabled_ = 0; this.fuelConsumptionEngineDisplacement_ = 0; this.fuelConsumptionCylinders_ = 0; this.fuelConsumptionInjectorPerformance_ = 0; this.fuelConsumptionVolumetricEfficiently_ = 0; this.faultCodesReadTime_ = 0; this.sIPAADLinkTimeout_ = 0; this.sIPAADResponseTimeout_ = 0; this.sIPAADServerAddress_ = ""; this.sIPAADServerPort_ = 0; this.sIPAADServerProtocol_ = 0; this.sIPAADSSLClientAuthentication_ = false; if (this.iOTimeBuilder_ == null) { this.iOTime_ = null; } else { this.iOTime_ = null; this.iOTimeBuilder_ = null; }  if (this.iOAngleBuilder_ == null) { this.iOAngle_ = null; } else { this.iOAngle_ = null; this.iOAngleBuilder_ = null; }  if (this.iOSpeedBuilder_ == null) { this.iOSpeed_ = null; } else { this.iOSpeed_ = null; this.iOSpeedBuilder_ = null; }  if (this.iOSleepModeBuilder_ == null) { this.iOSleepMode_ = null; } else { this.iOSleepMode_ = null; this.iOSleepModeBuilder_ = null; }  if (this.iOIgnitionBuilder_ == null) { this.iOIgnition_ = null; } else { this.iOIgnition_ = null; this.iOIgnitionBuilder_ = null; }  if (this.iOMovementBuilder_ == null) { this.iOMovement_ = null; } else { this.iOMovement_ = null; this.iOMovementBuilder_ = null; }  if (this.iODataModeBuilder_ == null) { this.iODataMode_ = null; } else { this.iODataMode_ = null; this.iODataModeBuilder_ = null; }  if (this.iOGnssStatusBuilder_ == null) { this.iOGnssStatus_ = null; } else { this.iOGnssStatus_ = null; this.iOGnssStatusBuilder_ = null; }  if (this.iOGnssHDOPBuilder_ == null) { this.iOGnssHDOP_ = null; } else { this.iOGnssHDOP_ = null; this.iOGnssHDOPBuilder_ = null; }  if (this.iOGnssPDOPBuilder_ == null) { this.iOGnssPDOP_ = null; } else { this.iOGnssPDOP_ = null; this.iOGnssPDOPBuilder_ = null; }  if (this.iOGnssJammingStatusBuilder_ == null) { this.iOGnssJammingStatus_ = null; } else { this.iOGnssJammingStatus_ = null; this.iOGnssJammingStatusBuilder_ = null; }  if (this.iOGsmSignalBuilder_ == null) { this.iOGsmSignal_ = null; } else { this.iOGsmSignal_ = null; this.iOGsmSignalBuilder_ = null; }  if (this.iOGsmCellIdBuilder_ == null) { this.iOGsmCellId_ = null; } else { this.iOGsmCellId_ = null; this.iOGsmCellIdBuilder_ = null; }  if (this.iOGsmAreaCodeBuilder_ == null) { this.iOGsmAreaCode_ = null; } else { this.iOGsmAreaCode_ = null; this.iOGsmAreaCodeBuilder_ = null; }  if (this.iOGsmOperatorBuilder_ == null) { this.iOGsmOperator_ = null; } else { this.iOGsmOperator_ = null; this.iOGsmOperatorBuilder_ = null; }  if (this.iOGsmTemperatureBuilder_ == null) { this.iOGsmTemperature_ = null; } else { this.iOGsmTemperature_ = null; this.iOGsmTemperatureBuilder_ = null; }  if (this.iOGsmJammingStatusBuilder_ == null) { this.iOGsmJammingStatus_ = null; } else { this.iOGsmJammingStatus_ = null; this.iOGsmJammingStatusBuilder_ = null; }  if (this.iOExternalVoltageBuilder_ == null) { this.iOExternalVoltage_ = null; } else { this.iOExternalVoltage_ = null; this.iOExternalVoltageBuilder_ = null; }  if (this.iOBatteryVoltageBuilder_ == null) { this.iOBatteryVoltage_ = null; } else { this.iOBatteryVoltage_ = null; this.iOBatteryVoltageBuilder_ = null; }  if (this.iOBatteryCurrentBuilder_ == null) { this.iOBatteryCurrent_ = null; } else { this.iOBatteryCurrent_ = null; this.iOBatteryCurrentBuilder_ = null; }  if (this.iOTotalOdometerBuilder_ == null) { this.iOTotalOdometer_ = null; } else { this.iOTotalOdometer_ = null; this.iOTotalOdometerBuilder_ = null; }  if (this.iOOdometerBuilder_ == null) { this.iOOdometer_ = null; } else { this.iOOdometer_ = null; this.iOOdometerBuilder_ = null; }  if (this.iOEngineOnTimeBuilder_ == null) { this.iOEngineOnTime_ = null; } else { this.iOEngineOnTime_ = null; this.iOEngineOnTimeBuilder_ = null; }  if (this.iOEngineOnTimeDeltaBuilder_ == null) { this.iOEngineOnTimeDelta_ = null; } else { this.iOEngineOnTimeDelta_ = null; this.iOEngineOnTimeDeltaBuilder_ = null; }  if (this.iOIdlingTimeBuilder_ == null) { this.iOIdlingTime_ = null; } else { this.iOIdlingTime_ = null; this.iOIdlingTimeBuilder_ = null; }  if (this.iOIdlingTimeDeltaBuilder_ == null) { this.iOIdlingTimeDelta_ = null; } else { this.iOIdlingTimeDelta_ = null; this.iOIdlingTimeDeltaBuilder_ = null; }  if (this.iOSpeedSensorSpeedBuilder_ == null) { this.iOSpeedSensorSpeed_ = null; } else { this.iOSpeedSensorSpeed_ = null; this.iOSpeedSensorSpeedBuilder_ = null; }  if (this.iOSpeedSensorDistanceBuilder_ == null) { this.iOSpeedSensorDistance_ = null; } else { this.iOSpeedSensorDistance_ = null; this.iOSpeedSensorDistanceBuilder_ = null; }  if (this.iOSpeedSensorTotalDistanceBuilder_ == null) { this.iOSpeedSensorTotalDistance_ = null; } else { this.iOSpeedSensorTotalDistance_ = null; this.iOSpeedSensorTotalDistanceBuilder_ = null; }  if (this.iOSpeedSensorMaxSpeedBuilder_ == null) { this.iOSpeedSensorMaxSpeed_ = null; } else { this.iOSpeedSensorMaxSpeed_ = null; this.iOSpeedSensorMaxSpeedBuilder_ = null; }  if (this.iOSpeedSensorGPSSpeedDiffBuilder_ == null) { this.iOSpeedSensorGPSSpeedDiff_ = null; } else { this.iOSpeedSensorGPSSpeedDiff_ = null; this.iOSpeedSensorGPSSpeedDiffBuilder_ = null; }  if (this.iODigitalInput1Builder_ == null) { this.iODigitalInput1_ = null; } else { this.iODigitalInput1_ = null; this.iODigitalInput1Builder_ = null; }  if (this.iODigitalInput2Builder_ == null) { this.iODigitalInput2_ = null; } else { this.iODigitalInput2_ = null; this.iODigitalInput2Builder_ = null; }  if (this.iOPowerSupplyBuilder_ == null) { this.iOPowerSupply_ = null; } else { this.iOPowerSupply_ = null; this.iOPowerSupplyBuilder_ = null; }  if (this.iODigitalInput3Builder_ == null) { this.iODigitalInput3_ = null; } else { this.iODigitalInput3_ = null; this.iODigitalInput3Builder_ = null; }  if (this.iOVehicleConnectionBuilder_ == null) { this.iOVehicleConnection_ = null; } else { this.iOVehicleConnection_ = null; this.iOVehicleConnectionBuilder_ = null; }  if (this.iODigitalInput1TimeBuilder_ == null) { this.iODigitalInput1Time_ = null; } else { this.iODigitalInput1Time_ = null; this.iODigitalInput1TimeBuilder_ = null; }  if (this.iODigitalInput1TimeDeltaBuilder_ == null) { this.iODigitalInput1TimeDelta_ = null; } else { this.iODigitalInput1TimeDelta_ = null; this.iODigitalInput1TimeDeltaBuilder_ = null; }  if (this.iODigitalInput2TimeBuilder_ == null) { this.iODigitalInput2Time_ = null; } else { this.iODigitalInput2Time_ = null; this.iODigitalInput2TimeBuilder_ = null; }  if (this.iODigitalInput2TimeDeltaBuilder_ == null) { this.iODigitalInput2TimeDelta_ = null; } else { this.iODigitalInput2TimeDelta_ = null; this.iODigitalInput2TimeDeltaBuilder_ = null; }  if (this.iOPowerSupplyTimeBuilder_ == null) { this.iOPowerSupplyTime_ = null; } else { this.iOPowerSupplyTime_ = null; this.iOPowerSupplyTimeBuilder_ = null; }  if (this.iOPowerSupplyTimeDeltaBuilder_ == null) { this.iOPowerSupplyTimeDelta_ = null; } else { this.iOPowerSupplyTimeDelta_ = null; this.iOPowerSupplyTimeDeltaBuilder_ = null; }  if (this.iODigitalInput3TimeBuilder_ == null) { this.iODigitalInput3Time_ = null; } else { this.iODigitalInput3Time_ = null; this.iODigitalInput3TimeBuilder_ = null; }  if (this.iODigitalInput3TimeDeltaBuilder_ == null) { this.iODigitalInput3TimeDelta_ = null; } else { this.iODigitalInput3TimeDelta_ = null; this.iODigitalInput3TimeDeltaBuilder_ = null; }  if (this.iODigitalOutput1Builder_ == null) { this.iODigitalOutput1_ = null; } else { this.iODigitalOutput1_ = null; this.iODigitalOutput1Builder_ = null; }  if (this.iODigitalOutput2Builder_ == null) { this.iODigitalOutput2_ = null; } else { this.iODigitalOutput2_ = null; this.iODigitalOutput2Builder_ = null; }  if (this.iOAnalogInput1Builder_ == null) { this.iOAnalogInput1_ = null; } else { this.iOAnalogInput1_ = null; this.iOAnalogInput1Builder_ = null; }  if (this.iOAnalogInput2Builder_ == null) { this.iOAnalogInput2_ = null; } else { this.iOAnalogInput2_ = null; this.iOAnalogInput2Builder_ = null; }  if (this.iOAnalogInput3Builder_ == null) { this.iOAnalogInput3_ = null; } else { this.iOAnalogInput3_ = null; this.iOAnalogInput3Builder_ = null; }  if (this.iOAxisXBuilder_ == null) { this.iOAxisX_ = null; } else { this.iOAxisX_ = null; this.iOAxisXBuilder_ = null; }  if (this.iOAxisYBuilder_ == null) { this.iOAxisY_ = null; } else { this.iOAxisY_ = null; this.iOAxisYBuilder_ = null; }  if (this.iOAxisZBuilder_ == null) { this.iOAxisZ_ = null; } else { this.iOAxisZ_ = null; this.iOAxisZBuilder_ = null; }  if (this.iOECOMaxSpeedBuilder_ == null) { this.iOECOMaxSpeed_ = null; } else { this.iOECOMaxSpeed_ = null; this.iOECOMaxSpeedBuilder_ = null; }  if (this.iOECONormalSpeedDistanceBuilder_ == null) { this.iOECONormalSpeedDistance_ = null; } else { this.iOECONormalSpeedDistance_ = null; this.iOECONormalSpeedDistanceBuilder_ = null; }  if (this.iOECONormalSpeedTotalDistanceBuilder_ == null) { this.iOECONormalSpeedTotalDistance_ = null; } else { this.iOECONormalSpeedTotalDistance_ = null; this.iOECONormalSpeedTotalDistanceBuilder_ = null; }  if (this.iOECONormalSpeedTimerBuilder_ == null) { this.iOECONormalSpeedTimer_ = null; } else { this.iOECONormalSpeedTimer_ = null; this.iOECONormalSpeedTimerBuilder_ = null; }  if (this.iOECONormalSpeedTotalTimerBuilder_ == null) { this.iOECONormalSpeedTotalTimer_ = null; } else { this.iOECONormalSpeedTotalTimer_ = null; this.iOECONormalSpeedTotalTimerBuilder_ = null; }  if (this.iOECOOverSpeedingDistanceBuilder_ == null) { this.iOECOOverSpeedingDistance_ = null; } else { this.iOECOOverSpeedingDistance_ = null; this.iOECOOverSpeedingDistanceBuilder_ = null; }  if (this.iOECOOverSpeedingTotalDistanceBuilder_ == null) { this.iOECOOverSpeedingTotalDistance_ = null; } else { this.iOECOOverSpeedingTotalDistance_ = null; this.iOECOOverSpeedingTotalDistanceBuilder_ = null; }  if (this.iOECOOverSpeedingTimerBuilder_ == null) { this.iOECOOverSpeedingTimer_ = null; } else { this.iOECOOverSpeedingTimer_ = null; this.iOECOOverSpeedingTimerBuilder_ = null; }  if (this.iOECOOverSpeedingTotalTimerBuilder_ == null) { this.iOECOOverSpeedingTotalTimer_ = null; } else { this.iOECOOverSpeedingTotalTimer_ = null; this.iOECOOverSpeedingTotalTimerBuilder_ = null; }  if (this.iOECOMaxRPMBuilder_ == null) { this.iOECOMaxRPM_ = null; } else { this.iOECOMaxRPM_ = null; this.iOECOMaxRPMBuilder_ = null; }  if (this.iOECORPMGreenBandDistanceBuilder_ == null) { this.iOECORPMGreenBandDistance_ = null; } else { this.iOECORPMGreenBandDistance_ = null; this.iOECORPMGreenBandDistanceBuilder_ = null; }  if (this.iOECORPMGreenBandTotalDistanceBuilder_ == null) { this.iOECORPMGreenBandTotalDistance_ = null; } else { this.iOECORPMGreenBandTotalDistance_ = null; this.iOECORPMGreenBandTotalDistanceBuilder_ = null; }  if (this.iOECORPMGreenBandTimerBuilder_ == null) { this.iOECORPMGreenBandTimer_ = null; } else { this.iOECORPMGreenBandTimer_ = null; this.iOECORPMGreenBandTimerBuilder_ = null; }  if (this.iOECORPMGreenBandTotalTimerBuilder_ == null) { this.iOECORPMGreenBandTotalTimer_ = null; } else { this.iOECORPMGreenBandTotalTimer_ = null; this.iOECORPMGreenBandTotalTimerBuilder_ = null; }  if (this.iOECOOverRPMDistanceBuilder_ == null) { this.iOECOOverRPMDistance_ = null; } else { this.iOECOOverRPMDistance_ = null; this.iOECOOverRPMDistanceBuilder_ = null; }  if (this.iOECOOverRPMTotalDistanceBuilder_ == null) { this.iOECOOverRPMTotalDistance_ = null; } else { this.iOECOOverRPMTotalDistance_ = null; this.iOECOOverRPMTotalDistanceBuilder_ = null; }  if (this.iOECOOverRPMTimerBuilder_ == null) { this.iOECOOverRPMTimer_ = null; } else { this.iOECOOverRPMTimer_ = null; this.iOECOOverRPMTimerBuilder_ = null; }  if (this.iOECOOverRPMTotalTimerBuilder_ == null) { this.iOECOOverRPMTotalTimer_ = null; } else { this.iOECOOverRPMTotalTimer_ = null; this.iOECOOverRPMTotalTimerBuilder_ = null; }  if (this.iOECOIdlingEventBuilder_ == null) { this.iOECOIdlingEvent_ = null; } else { this.iOECOIdlingEvent_ = null; this.iOECOIdlingEventBuilder_ = null; }  if (this.iOECOCruiseControlTimerBuilder_ == null) { this.iOECOCruiseControlTimer_ = null; } else { this.iOECOCruiseControlTimer_ = null; this.iOECOCruiseControlTimerBuilder_ = null; }  if (this.iOECOCruiseControlTotalTimerBuilder_ == null) { this.iOECOCruiseControlTotalTimer_ = null; } else { this.iOECOCruiseControlTotalTimer_ = null; this.iOECOCruiseControlTotalTimerBuilder_ = null; }  if (this.iOECOCruiseControlDistanceBuilder_ == null) { this.iOECOCruiseControlDistance_ = null; } else { this.iOECOCruiseControlDistance_ = null; this.iOECOCruiseControlDistanceBuilder_ = null; }  if (this.iOECOCruiseControlTotalDistanceBuilder_ == null) { this.iOECOCruiseControlTotalDistance_ = null; } else { this.iOECOCruiseControlTotalDistance_ = null; this.iOECOCruiseControlTotalDistanceBuilder_ = null; }  if (this.iOECOUnderRPMDistanceBuilder_ == null) { this.iOECOUnderRPMDistance_ = null; } else { this.iOECOUnderRPMDistance_ = null; this.iOECOUnderRPMDistanceBuilder_ = null; }  if (this.iOECOUnderRPMTotalDistanceBuilder_ == null) { this.iOECOUnderRPMTotalDistance_ = null; } else { this.iOECOUnderRPMTotalDistance_ = null; this.iOECOUnderRPMTotalDistanceBuilder_ = null; }  if (this.iOECOUnderRPMTimerBuilder_ == null) { this.iOECOUnderRPMTimer_ = null; } else { this.iOECOUnderRPMTimer_ = null; this.iOECOUnderRPMTimerBuilder_ = null; }  if (this.iOECOUnderRPMTotalTimerBuilder_ == null) { this.iOECOUnderRPMTotalTimer_ = null; } else { this.iOECOUnderRPMTotalTimer_ = null; this.iOECOUnderRPMTotalTimerBuilder_ = null; }  if (this.iOECOBreakCounterBuilder_ == null) { this.iOECOBreakCounter_ = null; } else { this.iOECOBreakCounter_ = null; this.iOECOBreakCounterBuilder_ = null; }  if (this.iOECOHarshBreakCounterBuilder_ == null) { this.iOECOHarshBreakCounter_ = null; } else { this.iOECOHarshBreakCounter_ = null; this.iOECOHarshBreakCounterBuilder_ = null; }  if (this.iOECOExtremeBreakCounterBuilder_ == null) { this.iOECOExtremeBreakCounter_ = null; } else { this.iOECOExtremeBreakCounter_ = null; this.iOECOExtremeBreakCounterBuilder_ = null; }  if (this.iOECOHarshAccelerationCounterBuilder_ == null) { this.iOECOHarshAccelerationCounter_ = null; } else { this.iOECOHarshAccelerationCounter_ = null; this.iOECOHarshAccelerationCounterBuilder_ = null; }  if (this.iOECOCorneringCounterBuilder_ == null) { this.iOECOCorneringCounter_ = null; } else { this.iOECOCorneringCounter_ = null; this.iOECOCorneringCounterBuilder_ = null; }  if (this.iOECOTotalBreakBuilder_ == null) { this.iOECOTotalBreak_ = null; } else { this.iOECOTotalBreak_ = null; this.iOECOTotalBreakBuilder_ = null; }  if (this.iOECOTotalHarshBreakBuilder_ == null) { this.iOECOTotalHarshBreak_ = null; } else { this.iOECOTotalHarshBreak_ = null; this.iOECOTotalHarshBreakBuilder_ = null; }  if (this.iOECOTotalExtremeBreakBuilder_ == null) { this.iOECOTotalExtremeBreak_ = null; } else { this.iOECOTotalExtremeBreak_ = null; this.iOECOTotalExtremeBreakBuilder_ = null; }  if (this.iOECOTotalHarshAccelerationBuilder_ == null) { this.iOECOTotalHarshAcceleration_ = null; } else { this.iOECOTotalHarshAcceleration_ = null; this.iOECOTotalHarshAccelerationBuilder_ = null; }  if (this.iOECOTotalCorneringBuilder_ == null) { this.iOECOTotalCornering_ = null; } else { this.iOECOTotalCornering_ = null; this.iOECOTotalCorneringBuilder_ = null; }  if (this.iOTripBuilder_ == null) { this.iOTrip_ = null; } else { this.iOTrip_ = null; this.iOTripBuilder_ = null; }  if (this.iOTripTimeBuilder_ == null) { this.iOTripTime_ = null; } else { this.iOTripTime_ = null; this.iOTripTimeBuilder_ = null; }  if (this.iOTripDistanceBuilder_ == null) { this.iOTripDistance_ = null; } else { this.iOTripDistance_ = null; this.iOTripDistanceBuilder_ = null; }  if (this.iODriverIDBuilder_ == null) { this.iODriverID_ = null; } else { this.iODriverID_ = null; this.iODriverIDBuilder_ = null; }  if (this.iOTemperatureSensor1Builder_ == null) { this.iOTemperatureSensor1_ = null; } else { this.iOTemperatureSensor1_ = null; this.iOTemperatureSensor1Builder_ = null; }  if (this.iOTemperatureSensor1IDBuilder_ == null) { this.iOTemperatureSensor1ID_ = null; } else { this.iOTemperatureSensor1ID_ = null; this.iOTemperatureSensor1IDBuilder_ = null; }  if (this.iOTemperatureSensor2Builder_ == null) { this.iOTemperatureSensor2_ = null; } else { this.iOTemperatureSensor2_ = null; this.iOTemperatureSensor2Builder_ = null; }  if (this.iOTemperatureSensor2IDBuilder_ == null) { this.iOTemperatureSensor2ID_ = null; } else { this.iOTemperatureSensor2ID_ = null; this.iOTemperatureSensor2IDBuilder_ = null; }  if (this.iOTemperatureSensor3Builder_ == null) { this.iOTemperatureSensor3_ = null; } else { this.iOTemperatureSensor3_ = null; this.iOTemperatureSensor3Builder_ = null; }  if (this.iOTemperatureSensor3IDBuilder_ == null) { this.iOTemperatureSensor3ID_ = null; } else { this.iOTemperatureSensor3ID_ = null; this.iOTemperatureSensor3IDBuilder_ = null; }  if (this.iOHumiditySensor1Builder_ == null) { this.iOHumiditySensor1_ = null; } else { this.iOHumiditySensor1_ = null; this.iOHumiditySensor1Builder_ = null; }  if (this.iOTiltStatusBuilder_ == null) { this.iOTiltStatus_ = null; } else { this.iOTiltStatus_ = null; this.iOTiltStatusBuilder_ = null; }  if (this.iOOBDEngineRPMBuilder_ == null) { this.iOOBDEngineRPM_ = null; } else { this.iOOBDEngineRPM_ = null; this.iOOBDEngineRPMBuilder_ = null; }  if (this.iOOBDBatteryVoltageBuilder_ == null) { this.iOOBDBatteryVoltage_ = null; } else { this.iOOBDBatteryVoltage_ = null; this.iOOBDBatteryVoltageBuilder_ = null; }  if (this.iOOBDEngineCoolantTemperatureBuilder_ == null) { this.iOOBDEngineCoolantTemperature_ = null; } else { this.iOOBDEngineCoolantTemperature_ = null; this.iOOBDEngineCoolantTemperatureBuilder_ = null; }  if (this.iOOBDVehicleSpeedBuilder_ == null) { this.iOOBDVehicleSpeed_ = null; } else { this.iOOBDVehicleSpeed_ = null; this.iOOBDVehicleSpeedBuilder_ = null; }  if (this.iOOBDTotalDistanceBuilder_ == null) { this.iOOBDTotalDistance_ = null; } else { this.iOOBDTotalDistance_ = null; this.iOOBDTotalDistanceBuilder_ = null; }  if (this.iOOBDFuelRateBuilder_ == null) { this.iOOBDFuelRate_ = null; } else { this.iOOBDFuelRate_ = null; this.iOOBDFuelRateBuilder_ = null; }  if (this.iOOBDTotalFuelUsedBuilder_ == null) { this.iOOBDTotalFuelUsed_ = null; } else { this.iOOBDTotalFuelUsed_ = null; this.iOOBDTotalFuelUsedBuilder_ = null; }  if (this.iOOBDIntakeAirTemperatureBuilder_ == null) { this.iOOBDIntakeAirTemperature_ = null; } else { this.iOOBDIntakeAirTemperature_ = null; this.iOOBDIntakeAirTemperatureBuilder_ = null; }  if (this.iOOBDIntakeManifoldAbsolutePressureBuilder_ == null) { this.iOOBDIntakeManifoldAbsolutePressure_ = null; } else { this.iOOBDIntakeManifoldAbsolutePressure_ = null; this.iOOBDIntakeManifoldAbsolutePressureBuilder_ = null; }  if (this.iOOBDMalfunctionIndicatorLampBuilder_ == null) { this.iOOBDMalfunctionIndicatorLamp_ = null; } else { this.iOOBDMalfunctionIndicatorLamp_ = null; this.iOOBDMalfunctionIndicatorLampBuilder_ = null; }  if (this.iODiagnosticTroubleCodesCountBuilder_ == null) { this.iODiagnosticTroubleCodesCount_ = null; } else { this.iODiagnosticTroubleCodesCount_ = null; this.iODiagnosticTroubleCodesCountBuilder_ = null; }  if (this.iOOBDCalculatedEngineLoadBuilder_ == null) { this.iOOBDCalculatedEngineLoad_ = null; } else { this.iOOBDCalculatedEngineLoad_ = null; this.iOOBDCalculatedEngineLoadBuilder_ = null; }  if (this.iOOBDMassAirFlowRateBuilder_ == null) { this.iOOBDMassAirFlowRate_ = null; } else { this.iOOBDMassAirFlowRate_ = null; this.iOOBDMassAirFlowRateBuilder_ = null; }  if (this.iOOBDThrottlePositionBuilder_ == null) { this.iOOBDThrottlePosition_ = null; } else { this.iOOBDThrottlePosition_ = null; this.iOOBDThrottlePositionBuilder_ = null; }  if (this.iOOBDRunTimeSinceEngineStartBuilder_ == null) { this.iOOBDRunTimeSinceEngineStart_ = null; } else { this.iOOBDRunTimeSinceEngineStart_ = null; this.iOOBDRunTimeSinceEngineStartBuilder_ = null; }  if (this.iOOBDFuelTankLevelInputBuilder_ == null) { this.iOOBDFuelTankLevelInput_ = null; } else { this.iOOBDFuelTankLevelInput_ = null; this.iOOBDFuelTankLevelInputBuilder_ = null; }  if (this.iOOBDDistanceTraveledSinceCodesClearedBuilder_ == null) { this.iOOBDDistanceTraveledSinceCodesCleared_ = null; } else { this.iOOBDDistanceTraveledSinceCodesCleared_ = null; this.iOOBDDistanceTraveledSinceCodesClearedBuilder_ = null; }  if (this.iOOBDAbsoluteThrottlePositionDBuilder_ == null) { this.iOOBDAbsoluteThrottlePositionD_ = null; } else { this.iOOBDAbsoluteThrottlePositionD_ = null; this.iOOBDAbsoluteThrottlePositionDBuilder_ = null; }  if (this.iOOBDTimeRunWithMILOnBuilder_ == null) { this.iOOBDTimeRunWithMILOn_ = null; } else { this.iOOBDTimeRunWithMILOn_ = null; this.iOOBDTimeRunWithMILOnBuilder_ = null; }  if (this.iOOBDEngineOilTemperatureBuilder_ == null) { this.iOOBDEngineOilTemperature_ = null; } else { this.iOOBDEngineOilTemperature_ = null; this.iOOBDEngineOilTemperatureBuilder_ = null; }  if (this.iOOBDFuelSystem1StatusBuilder_ == null) { this.iOOBDFuelSystem1Status_ = null; } else { this.iOOBDFuelSystem1Status_ = null; this.iOOBDFuelSystem1StatusBuilder_ = null; }  if (this.iOOBDFuelSystem2StatusBuilder_ == null) { this.iOOBDFuelSystem2Status_ = null; } else { this.iOOBDFuelSystem2Status_ = null; this.iOOBDFuelSystem2StatusBuilder_ = null; }  if (this.iOOBDOxygenSensor1VoltageBuilder_ == null) { this.iOOBDOxygenSensor1Voltage_ = null; } else { this.iOOBDOxygenSensor1Voltage_ = null; this.iOOBDOxygenSensor1VoltageBuilder_ = null; }  if (this.iOOBDOxygenSensor1ShortTermFuelTrimBuilder_ == null) { this.iOOBDOxygenSensor1ShortTermFuelTrim_ = null; } else { this.iOOBDOxygenSensor1ShortTermFuelTrim_ = null; this.iOOBDOxygenSensor1ShortTermFuelTrimBuilder_ = null; }  if (this.iOOBDOxygenSensor2VoltageBuilder_ == null) { this.iOOBDOxygenSensor2Voltage_ = null; } else { this.iOOBDOxygenSensor2Voltage_ = null; this.iOOBDOxygenSensor2VoltageBuilder_ = null; }  if (this.iOOBDOxygenSensor2ShortTermFuelTrimBuilder_ == null) { this.iOOBDOxygenSensor2ShortTermFuelTrim_ = null; } else { this.iOOBDOxygenSensor2ShortTermFuelTrim_ = null; this.iOOBDOxygenSensor2ShortTermFuelTrimBuilder_ = null; }  if (this.iOOBDOxygenSensor3VoltageBuilder_ == null) { this.iOOBDOxygenSensor3Voltage_ = null; } else { this.iOOBDOxygenSensor3Voltage_ = null; this.iOOBDOxygenSensor3VoltageBuilder_ = null; }  if (this.iOOBDOxygenSensor3ShortTermFuelTrimBuilder_ == null) { this.iOOBDOxygenSensor3ShortTermFuelTrim_ = null; } else { this.iOOBDOxygenSensor3ShortTermFuelTrim_ = null; this.iOOBDOxygenSensor3ShortTermFuelTrimBuilder_ = null; }  if (this.iOOBDOxygenSensor4VoltageBuilder_ == null) { this.iOOBDOxygenSensor4Voltage_ = null; } else { this.iOOBDOxygenSensor4Voltage_ = null; this.iOOBDOxygenSensor4VoltageBuilder_ = null; }  if (this.iOOBDOxygenSensor4ShortTermFuelTrimBuilder_ == null) { this.iOOBDOxygenSensor4ShortTermFuelTrim_ = null; } else { this.iOOBDOxygenSensor4ShortTermFuelTrim_ = null; this.iOOBDOxygenSensor4ShortTermFuelTrimBuilder_ = null; }  if (this.iOCANBusTachograph1WorkingState1Builder_ == null) { this.iOCANBusTachograph1WorkingState1_ = null; } else { this.iOCANBusTachograph1WorkingState1_ = null; this.iOCANBusTachograph1WorkingState1Builder_ = null; }  if (this.iOCANBusTachograph1WorkingState2Builder_ == null) { this.iOCANBusTachograph1WorkingState2_ = null; } else { this.iOCANBusTachograph1WorkingState2_ = null; this.iOCANBusTachograph1WorkingState2Builder_ = null; }  if (this.iOCANBusTachograph1VehicleMotionBuilder_ == null) { this.iOCANBusTachograph1VehicleMotion_ = null; } else { this.iOCANBusTachograph1VehicleMotion_ = null; this.iOCANBusTachograph1VehicleMotionBuilder_ = null; }  if (this.iOCANBusTachograph1Driv1TimeRelStatesBuilder_ == null) { this.iOCANBusTachograph1Driv1TimeRelStates_ = null; } else { this.iOCANBusTachograph1Driv1TimeRelStates_ = null; this.iOCANBusTachograph1Driv1TimeRelStatesBuilder_ = null; }  if (this.iOCANBusTachograph1Driver1CardBuilder_ == null) { this.iOCANBusTachograph1Driver1Card_ = null; } else { this.iOCANBusTachograph1Driver1Card_ = null; this.iOCANBusTachograph1Driver1CardBuilder_ = null; }  if (this.iOCANBusTachograph1VehicleOverspeedBuilder_ == null) { this.iOCANBusTachograph1VehicleOverspeed_ = null; } else { this.iOCANBusTachograph1VehicleOverspeed_ = null; this.iOCANBusTachograph1VehicleOverspeedBuilder_ = null; }  if (this.iOCANBusTachograph1Driv2TimeRelStatesBuilder_ == null) { this.iOCANBusTachograph1Driv2TimeRelStates_ = null; } else { this.iOCANBusTachograph1Driv2TimeRelStates_ = null; this.iOCANBusTachograph1Driv2TimeRelStatesBuilder_ = null; }  if (this.iOCANBusTachograph1Driver2CardBuilder_ == null) { this.iOCANBusTachograph1Driver2Card_ = null; } else { this.iOCANBusTachograph1Driver2Card_ = null; this.iOCANBusTachograph1Driver2CardBuilder_ = null; }  if (this.iOCANBusTachograph1SystemEventBuilder_ == null) { this.iOCANBusTachograph1SystemEvent_ = null; } else { this.iOCANBusTachograph1SystemEvent_ = null; this.iOCANBusTachograph1SystemEventBuilder_ = null; }  if (this.iOCANBusTachograph1HandlingInformationBuilder_ == null) { this.iOCANBusTachograph1HandlingInformation_ = null; } else { this.iOCANBusTachograph1HandlingInformation_ = null; this.iOCANBusTachograph1HandlingInformationBuilder_ = null; }  if (this.iOCANBusTachograph1TachographPerformanceBuilder_ == null) { this.iOCANBusTachograph1TachographPerformance_ = null; } else { this.iOCANBusTachograph1TachographPerformance_ = null; this.iOCANBusTachograph1TachographPerformanceBuilder_ = null; }  if (this.iOCANBusTachograph1DirectionIndicatorBuilder_ == null) { this.iOCANBusTachograph1DirectionIndicator_ = null; } else { this.iOCANBusTachograph1DirectionIndicator_ = null; this.iOCANBusTachograph1DirectionIndicatorBuilder_ = null; }  if (this.iOCANBusTachograph1VehicleSpeedBuilder_ == null) { this.iOCANBusTachograph1VehicleSpeed_ = null; } else { this.iOCANBusTachograph1VehicleSpeed_ = null; this.iOCANBusTachograph1VehicleSpeedBuilder_ = null; }  if (this.iOCANBusEngineTemperature1EngineCoolantTemperatureBuilder_ == null) { this.iOCANBusEngineTemperature1EngineCoolantTemperature_ = null; } else { this.iOCANBusEngineTemperature1EngineCoolantTemperature_ = null; this.iOCANBusEngineTemperature1EngineCoolantTemperatureBuilder_ = null; }  if (this.iOCANBusElectronicEngineController1ActualEnginePercentBuilder_ == null) { this.iOCANBusElectronicEngineController1ActualEnginePercent_ = null; } else { this.iOCANBusElectronicEngineController1ActualEnginePercent_ = null; this.iOCANBusElectronicEngineController1ActualEnginePercentBuilder_ = null; }  if (this.iOCANBusElectronicEngineController1EngineSpeedBuilder_ == null) { this.iOCANBusElectronicEngineController1EngineSpeed_ = null; } else { this.iOCANBusElectronicEngineController1EngineSpeed_ = null; this.iOCANBusElectronicEngineController1EngineSpeedBuilder_ = null; }  if (this.iOCANBusEngineHoursEngineTotalHoursBuilder_ == null) { this.iOCANBusEngineHoursEngineTotalHours_ = null; } else { this.iOCANBusEngineHoursEngineTotalHours_ = null; this.iOCANBusEngineHoursEngineTotalHoursBuilder_ = null; }  if (this.iOCANBusVehicleDistanceTotalVehicleDistanceBuilder_ == null) { this.iOCANBusVehicleDistanceTotalVehicleDistance_ = null; } else { this.iOCANBusVehicleDistanceTotalVehicleDistance_ = null; this.iOCANBusVehicleDistanceTotalVehicleDistanceBuilder_ = null; }  if (this.iOCANBusHighResolutionFuelConsumptionTotalFuelUsedBuilder_ == null) { this.iOCANBusHighResolutionFuelConsumptionTotalFuelUsed_ = null; } else { this.iOCANBusHighResolutionFuelConsumptionTotalFuelUsed_ = null; this.iOCANBusHighResolutionFuelConsumptionTotalFuelUsedBuilder_ = null; }  if (this.iOCANBusDashDisplayFuelLevel1Builder_ == null) { this.iOCANBusDashDisplayFuelLevel1_ = null; } else { this.iOCANBusDashDisplayFuelLevel1_ = null; this.iOCANBusDashDisplayFuelLevel1Builder_ = null; }  if (this.iOCANBusAmbientConditionsAmbientAirTemperatureBuilder_ == null) { this.iOCANBusAmbientConditionsAmbientAirTemperature_ = null; } else { this.iOCANBusAmbientConditionsAmbientAirTemperature_ = null; this.iOCANBusAmbientConditionsAmbientAirTemperatureBuilder_ = null; }  if (this.iOCANBusFuelEconomyFuelRateBuilder_ == null) { this.iOCANBusFuelEconomyFuelRate_ = null; } else { this.iOCANBusFuelEconomyFuelRate_ = null; this.iOCANBusFuelEconomyFuelRateBuilder_ = null; }  if (this.iOCANBusFuelEconomyInstantaneousFuelEconomyBuilder_ == null) { this.iOCANBusFuelEconomyInstantaneousFuelEconomy_ = null; } else { this.iOCANBusFuelEconomyInstantaneousFuelEconomy_ = null; this.iOCANBusFuelEconomyInstantaneousFuelEconomyBuilder_ = null; }  if (this.iOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit1Builder_ == null) { this.iOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit1_ = null; } else { this.iOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit1_ = null; this.iOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit1Builder_ = null; }  if (this.iOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit2Builder_ == null) { this.iOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit2_ = null; } else { this.iOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit2_ = null; this.iOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit2Builder_ = null; }  if (this.iOCANBusAftertreatmentDieselExhaustFluidTankInformationTank1LevelBuilder_ == null) { this.iOCANBusAftertreatmentDieselExhaustFluidTankInformationTank1Level_ = null; } else { this.iOCANBusAftertreatmentDieselExhaustFluidTankInformationTank1Level_ = null; this.iOCANBusAftertreatmentDieselExhaustFluidTankInformationTank1LevelBuilder_ = null; }  if (this.iOCANBusTruckBusElectronicEngineController2AcceleratorPedalPosition1Builder_ == null) { this.iOCANBusTruckBusElectronicEngineController2AcceleratorPedalPosition1_ = null; } else { this.iOCANBusTruckBusElectronicEngineController2AcceleratorPedalPosition1_ = null; this.iOCANBusTruckBusElectronicEngineController2AcceleratorPedalPosition1Builder_ = null; }  if (this.iOCANBusTruckBusElectronicEngineController2EnginePercentLoadBuilder_ == null) { this.iOCANBusTruckBusElectronicEngineController2EnginePercentLoad_ = null; } else { this.iOCANBusTruckBusElectronicEngineController2EnginePercentLoad_ = null; this.iOCANBusTruckBusElectronicEngineController2EnginePercentLoadBuilder_ = null; }  if (this.iOCANBusTruckVehicleWeightAxleWeight1Builder_ == null) { this.iOCANBusTruckVehicleWeightAxleWeight1_ = null; } else { this.iOCANBusTruckVehicleWeightAxleWeight1_ = null; this.iOCANBusTruckVehicleWeightAxleWeight1Builder_ = null; }  if (this.iOCANBusTruckVehicleWeightAxleWeight2Builder_ == null) { this.iOCANBusTruckVehicleWeightAxleWeight2_ = null; } else { this.iOCANBusTruckVehicleWeightAxleWeight2_ = null; this.iOCANBusTruckVehicleWeightAxleWeight2Builder_ = null; }  if (this.iOCANBusTruckVehicleWeightAxleWeight3Builder_ == null) { this.iOCANBusTruckVehicleWeightAxleWeight3_ = null; } else { this.iOCANBusTruckVehicleWeightAxleWeight3_ = null; this.iOCANBusTruckVehicleWeightAxleWeight3Builder_ = null; }  if (this.iOCANBusTruckServiceInformationServiceDistanceBuilder_ == null) { this.iOCANBusTruckServiceInformationServiceDistance_ = null; } else { this.iOCANBusTruckServiceInformationServiceDistance_ = null; this.iOCANBusTruckServiceInformationServiceDistanceBuilder_ = null; }  if (this.iOCANBusTruckPTODriveEngagementPTOEngageStatBuilder_ == null) { this.iOCANBusTruckPTODriveEngagementPTOEngageStat_ = null; } else { this.iOCANBusTruckPTODriveEngagementPTOEngageStat_ = null; this.iOCANBusTruckPTODriveEngagementPTOEngageStatBuilder_ = null; }  if (this.iOCANBusTruckCombinationVehicleWeightGrossCombinationVehicleWeightBuilder_ == null) { this.iOCANBusTruckCombinationVehicleWeightGrossCombinationVehicleWeight_ = null; } else { this.iOCANBusTruckCombinationVehicleWeightGrossCombinationVehicleWeight_ = null; this.iOCANBusTruckCombinationVehicleWeightGrossCombinationVehicleWeightBuilder_ = null; }  if (this.iOCANBusTruckBusElectronicRetarderController1RetarderTorqueModeBuilder_ == null) { this.iOCANBusTruckBusElectronicRetarderController1RetarderTorqueMode_ = null; } else { this.iOCANBusTruckBusElectronicRetarderController1RetarderTorqueMode_ = null; this.iOCANBusTruckBusElectronicRetarderController1RetarderTorqueModeBuilder_ = null; }  if (this.iOCANBusTruckBusElectronicRetarderController1RetarderSelectionBuilder_ == null) { this.iOCANBusTruckBusElectronicRetarderController1RetarderSelection_ = null; } else { this.iOCANBusTruckBusElectronicRetarderController1RetarderSelection_ = null; this.iOCANBusTruckBusElectronicRetarderController1RetarderSelectionBuilder_ = null; }  if (this.iOCANBusBusDoorControl1DoorPositionBuilder_ == null) { this.iOCANBusBusDoorControl1DoorPosition_ = null; } else { this.iOCANBusBusDoorControl1DoorPosition_ = null; this.iOCANBusBusDoorControl1DoorPositionBuilder_ = null; }  if (this.iOCANBusBusDoorControl1RampWheelChairliftBuilder_ == null) { this.iOCANBusBusDoorControl1RampWheelChairlift_ = null; } else { this.iOCANBusBusDoorControl1RampWheelChairlift_ = null; this.iOCANBusBusDoorControl1RampWheelChairliftBuilder_ = null; }  if (this.iOCANBusBusDoorControl1DoorsStatus2Builder_ == null) { this.iOCANBusBusDoorControl1DoorsStatus2_ = null; } else { this.iOCANBusBusDoorControl1DoorsStatus2_ = null; this.iOCANBusBusDoorControl1DoorsStatus2Builder_ = null; }  if (this.iOCANBusBusDoorControl2Builder_ == null) { this.iOCANBusBusDoorControl2_ = null; } else { this.iOCANBusBusDoorControl2_ = null; this.iOCANBusBusDoorControl2Builder_ = null; }  if (this.iOCANBusBrakeLiningRemainingAxleFrontLeftWheelBuilder_ == null) { this.iOCANBusBrakeLiningRemainingAxleFrontLeftWheel_ = null; } else { this.iOCANBusBrakeLiningRemainingAxleFrontLeftWheel_ = null; this.iOCANBusBrakeLiningRemainingAxleFrontLeftWheelBuilder_ = null; }  if (this.iOCANBusBrakeLiningRemainingAxleFrontRightWheelBuilder_ == null) { this.iOCANBusBrakeLiningRemainingAxleFrontRightWheel_ = null; } else { this.iOCANBusBrakeLiningRemainingAxleFrontRightWheel_ = null; this.iOCANBusBrakeLiningRemainingAxleFrontRightWheelBuilder_ = null; }  if (this.iOCANBusBrakeLiningRemainingAxleRear1LeftWheelBuilder_ == null) { this.iOCANBusBrakeLiningRemainingAxleRear1LeftWheel_ = null; } else { this.iOCANBusBrakeLiningRemainingAxleRear1LeftWheel_ = null; this.iOCANBusBrakeLiningRemainingAxleRear1LeftWheelBuilder_ = null; }  if (this.iOCANBusBrakeLiningRemainingAxleRear1RightWheelBuilder_ == null) { this.iOCANBusBrakeLiningRemainingAxleRear1RightWheel_ = null; } else { this.iOCANBusBrakeLiningRemainingAxleRear1RightWheel_ = null; this.iOCANBusBrakeLiningRemainingAxleRear1RightWheelBuilder_ = null; }  if (this.iOCANBusBrakeLiningRemainingAxleRear2LeftWheelBuilder_ == null) { this.iOCANBusBrakeLiningRemainingAxleRear2LeftWheel_ = null; } else { this.iOCANBusBrakeLiningRemainingAxleRear2LeftWheel_ = null; this.iOCANBusBrakeLiningRemainingAxleRear2LeftWheelBuilder_ = null; }  if (this.iOCANBusBrakeLiningRemainingAxleRear2RightWheelBuilder_ == null) { this.iOCANBusBrakeLiningRemainingAxleRear2RightWheel_ = null; } else { this.iOCANBusBrakeLiningRemainingAxleRear2RightWheel_ = null; this.iOCANBusBrakeLiningRemainingAxleRear2RightWheelBuilder_ = null; }  if (this.iOCANBusBrakeLiningRemainingAxleRear3LeftWheelBuilder_ == null) { this.iOCANBusBrakeLiningRemainingAxleRear3LeftWheel_ = null; } else { this.iOCANBusBrakeLiningRemainingAxleRear3LeftWheel_ = null; this.iOCANBusBrakeLiningRemainingAxleRear3LeftWheelBuilder_ = null; }  if (this.iOCANBusBrakeLiningRemainingAxleRear3RightWheelBuilder_ == null) { this.iOCANBusBrakeLiningRemainingAxleRear3RightWheel_ = null; } else { this.iOCANBusBrakeLiningRemainingAxleRear3RightWheel_ = null; this.iOCANBusBrakeLiningRemainingAxleRear3RightWheelBuilder_ = null; }  if (this.iOCANBusTruckBusCruiseControlBuilder_ == null) { this.iOCANBusTruckBusCruiseControl_ = null; } else { this.iOCANBusTruckBusCruiseControl_ = null; this.iOCANBusTruckBusCruiseControlBuilder_ = null; }  if (this.iOCANBusBusAlternatorSpeedAlternatorStatus1Builder_ == null) { this.iOCANBusBusAlternatorSpeedAlternatorStatus1_ = null; } else { this.iOCANBusBusAlternatorSpeedAlternatorStatus1_ = null; this.iOCANBusBusAlternatorSpeedAlternatorStatus1Builder_ = null; }  if (this.iOCANBusBusAlternatorSpeedAlternatorStatus2Builder_ == null) { this.iOCANBusBusAlternatorSpeedAlternatorStatus2_ = null; } else { this.iOCANBusBusAlternatorSpeedAlternatorStatus2_ = null; this.iOCANBusBusAlternatorSpeedAlternatorStatus2Builder_ = null; }  if (this.iOCANBusBusAlternatorSpeedAlternatorStatus3Builder_ == null) { this.iOCANBusBusAlternatorSpeedAlternatorStatus3_ = null; } else { this.iOCANBusBusAlternatorSpeedAlternatorStatus3_ = null; this.iOCANBusBusAlternatorSpeedAlternatorStatus3Builder_ = null; }  if (this.iOCANBusBusAlternatorSpeedAlternatorStatus4Builder_ == null) { this.iOCANBusBusAlternatorSpeedAlternatorStatus4_ = null; } else { this.iOCANBusBusAlternatorSpeedAlternatorStatus4_ = null; this.iOCANBusBusAlternatorSpeedAlternatorStatus4Builder_ = null; }  if (this.iOCANBusBusElectronicTransmissionController2SelectedGearBuilder_ == null) { this.iOCANBusBusElectronicTransmissionController2SelectedGear_ = null; } else { this.iOCANBusBusElectronicTransmissionController2SelectedGear_ = null; this.iOCANBusBusElectronicTransmissionController2SelectedGearBuilder_ = null; }  if (this.iOCANBusBusElectronicTransmissionController2CurrentGearBuilder_ == null) { this.iOCANBusBusElectronicTransmissionController2CurrentGear_ = null; } else { this.iOCANBusBusElectronicTransmissionController2CurrentGear_ = null; this.iOCANBusBusElectronicTransmissionController2CurrentGearBuilder_ = null; }  if (this.iOCANBusBusAirSuspensionControl4FrontAxleLeftBuilder_ == null) { this.iOCANBusBusAirSuspensionControl4FrontAxleLeft_ = null; } else { this.iOCANBusBusAirSuspensionControl4FrontAxleLeft_ = null; this.iOCANBusBusAirSuspensionControl4FrontAxleLeftBuilder_ = null; }  if (this.iOCANBusBusAirSuspensionControl4FrontAxleRightBuilder_ == null) { this.iOCANBusBusAirSuspensionControl4FrontAxleRight_ = null; } else { this.iOCANBusBusAirSuspensionControl4FrontAxleRight_ = null; this.iOCANBusBusAirSuspensionControl4FrontAxleRightBuilder_ = null; }  if (this.iOCANBusBusAirSuspensionControl4RearAxleLeftBuilder_ == null) { this.iOCANBusBusAirSuspensionControl4RearAxleLeft_ = null; } else { this.iOCANBusBusAirSuspensionControl4RearAxleLeft_ = null; this.iOCANBusBusAirSuspensionControl4RearAxleLeftBuilder_ = null; }  if (this.iOCANBusBusAirSuspensionControl4RearAxlerightBuilder_ == null) { this.iOCANBusBusAirSuspensionControl4RearAxleright_ = null; } else { this.iOCANBusBusAirSuspensionControl4RearAxleright_ = null; this.iOCANBusBusAirSuspensionControl4RearAxlerightBuilder_ = null; }  if (this.iOCANBusDashDisplayFuelLevel2Builder_ == null) { this.iOCANBusDashDisplayFuelLevel2_ = null; } else { this.iOCANBusDashDisplayFuelLevel2_ = null; this.iOCANBusDashDisplayFuelLevel2Builder_ = null; }  if (this.iOCANBusElectronicBrakeControllerBrakePedalPositionBuilder_ == null) { this.iOCANBusElectronicBrakeControllerBrakePedalPosition_ = null; } else { this.iOCANBusElectronicBrakeControllerBrakePedalPosition_ = null; this.iOCANBusElectronicBrakeControllerBrakePedalPositionBuilder_ = null; }  if (this.iOCANBusFuelConsumptionGaseousTotalFuelUsedBuilder_ == null) { this.iOCANBusFuelConsumptionGaseousTotalFuelUsed_ = null; } else { this.iOCANBusFuelConsumptionGaseousTotalFuelUsed_ = null; this.iOCANBusFuelConsumptionGaseousTotalFuelUsedBuilder_ = null; }  if (this.iOCANBusTruckBusCruiseControlVehicleSpeedParkingBrakeSwitchBuilder_ == null) { this.iOCANBusTruckBusCruiseControlVehicleSpeedParkingBrakeSwitch_ = null; } else { this.iOCANBusTruckBusCruiseControlVehicleSpeedParkingBrakeSwitch_ = null; this.iOCANBusTruckBusCruiseControlVehicleSpeedParkingBrakeSwitchBuilder_ = null; }  if (this.iOCANBusTruckBusCruiseControlVehicleSpeedWheelBasedSpeedBuilder_ == null) { this.iOCANBusTruckBusCruiseControlVehicleSpeedWheelBasedSpeed_ = null; } else { this.iOCANBusTruckBusCruiseControlVehicleSpeedWheelBasedSpeed_ = null; this.iOCANBusTruckBusCruiseControlVehicleSpeedWheelBasedSpeedBuilder_ = null; }  if (this.iOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlActiveBuilder_ == null) { this.iOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlActive_ = null; } else { this.iOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlActive_ = null; this.iOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlActiveBuilder_ = null; }  if (this.iOCANBusTruckBusCruiseControlVehicleSpeedBrakeSwitchBuilder_ == null) { this.iOCANBusTruckBusCruiseControlVehicleSpeedBrakeSwitch_ = null; } else { this.iOCANBusTruckBusCruiseControlVehicleSpeedBrakeSwitch_ = null; this.iOCANBusTruckBusCruiseControlVehicleSpeedBrakeSwitchBuilder_ = null; }  if (this.iOCANBusTruckBusCruiseControlVehicleSpeedClutchSwitchBuilder_ == null) { this.iOCANBusTruckBusCruiseControlVehicleSpeedClutchSwitch_ = null; } else { this.iOCANBusTruckBusCruiseControlVehicleSpeedClutchSwitch_ = null; this.iOCANBusTruckBusCruiseControlVehicleSpeedClutchSwitchBuilder_ = null; }  if (this.iOCANBusTruckBusCruiseControlVehicleSpeedPtoStateBuilder_ == null) { this.iOCANBusTruckBusCruiseControlVehicleSpeedPtoState_ = null; } else { this.iOCANBusTruckBusCruiseControlVehicleSpeedPtoState_ = null; this.iOCANBusTruckBusCruiseControlVehicleSpeedPtoStateBuilder_ = null; }  if (this.iOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlStatesBuilder_ == null) { this.iOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlStates_ = null; } else { this.iOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlStates_ = null; this.iOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlStatesBuilder_ = null; }  if (this.iOCANBusBusVehicleElectricalPowerHybridBatteryPackRemainingChargeBuilder_ == null) { this.iOCANBusBusVehicleElectricalPowerHybridBatteryPackRemainingCharge_ = null; } else { this.iOCANBusBusVehicleElectricalPowerHybridBatteryPackRemainingCharge_ = null; this.iOCANBusBusVehicleElectricalPowerHybridBatteryPackRemainingChargeBuilder_ = null; }  if (this.iOCANBusBusVehicleDynamicStabilityControl2SteeringWheelAngleBuilder_ == null) { this.iOCANBusBusVehicleDynamicStabilityControl2SteeringWheelAngle_ = null; } else { this.iOCANBusBusVehicleDynamicStabilityControl2SteeringWheelAngle_ = null; this.iOCANBusBusVehicleDynamicStabilityControl2SteeringWheelAngleBuilder_ = null; }  if (this.iOCANBusElectronicEngineController14FuelTypeBuilder_ == null) { this.iOCANBusElectronicEngineController14FuelType_ = null; } else { this.iOCANBusElectronicEngineController14FuelType_ = null; this.iOCANBusElectronicEngineController14FuelTypeBuilder_ = null; }  if (this.iOCANBusEngineFluidLevelPressureEngineOilLevelBuilder_ == null) { this.iOCANBusEngineFluidLevelPressureEngineOilLevel_ = null; } else { this.iOCANBusEngineFluidLevelPressureEngineOilLevel_ = null; this.iOCANBusEngineFluidLevelPressureEngineOilLevelBuilder_ = null; }  if (this.iOCANBusEngineFluidLevelPressureEngineOilPressureBuilder_ == null) { this.iOCANBusEngineFluidLevelPressureEngineOilPressure_ = null; } else { this.iOCANBusEngineFluidLevelPressureEngineOilPressure_ = null; this.iOCANBusEngineFluidLevelPressureEngineOilPressureBuilder_ = null; }  if (this.iOCANBusEngineFluidLevelPressureCoolantLevelBuilder_ == null) { this.iOCANBusEngineFluidLevelPressureCoolantLevel_ = null; } else { this.iOCANBusEngineFluidLevelPressureCoolantLevel_ = null; this.iOCANBusEngineFluidLevelPressureCoolantLevelBuilder_ = null; }  if (this.iOCANBusTellTaleStatusBuilder_ == null) { this.iOCANBusTellTaleStatus_ = null; } else { this.iOCANBusTellTaleStatus_ = null; this.iOCANBusTellTaleStatusBuilder_ = null; }  if (this.iOCANBusFuelConsumptionEngineTotalFuelUsedBuilder_ == null) { this.iOCANBusFuelConsumptionEngineTotalFuelUsed_ = null; } else { this.iOCANBusFuelConsumptionEngineTotalFuelUsed_ = null; this.iOCANBusFuelConsumptionEngineTotalFuelUsedBuilder_ = null; }  if (this.iOCANBusTruckVehicleWeightAxleWeight4Builder_ == null) { this.iOCANBusTruckVehicleWeightAxleWeight4_ = null; } else { this.iOCANBusTruckVehicleWeightAxleWeight4_ = null; this.iOCANBusTruckVehicleWeightAxleWeight4Builder_ = null; }  return this; } public Descriptors.Descriptor getDescriptorForType() { return DolphinConfig.internal_static_org_traccar_protobuf_dolphin_Config_Config_descriptor; } public DolphinConfig.Config getDefaultInstanceForType() { return DolphinConfig.Config.getDefaultInstance(); } public DolphinConfig.Config build() { DolphinConfig.Config result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public DolphinConfig.Config buildPartial() { DolphinConfig.Config result = new DolphinConfig.Config(this); result.serialPortBaudrate_ = this.serialPortBaudrate_; result.doNotResetDeviceOnProblems_ = this.doNotResetDeviceOnProblems_; result.password_ = this.password_; result.movement_ = this.movement_; result.movementSensorSensitivity_ = this.movementSensorSensitivity_; result.sleep_ = this.sleep_; result.sleepTimeout_ = this.sleepTimeout_; result.engineOn_ = this.engineOn_; result.engineOnDIN1_ = this.engineOnDIN1_; result.engineOnDIN2_ = this.engineOnDIN2_; result.engineOnMovementSensor_ = this.engineOnMovementSensor_; result.engineOnPowerSupplyAvailable_ = this.engineOnPowerSupplyAvailable_; result.engineOnGpsSpeed_ = this.engineOnGpsSpeed_; result.engineOnCanRPM_ = this.engineOnCanRPM_; result.engineOnMinActiveStateDuration_ = this.engineOnMinActiveStateDuration_; result.engineOnOperator_ = this.engineOnOperator_; result.engineOnMovementStartDelay_ = this.engineOnMovementStartDelay_; result.engineOnMovementStopDelay_ = this.engineOnMovementStopDelay_; result.engineOnExternalVoltage_ = this.engineOnExternalVoltage_; result.ledIndication_ = this.ledIndication_; result.gNSS_ = this.gNSS_; result.staticNavigationEnabled_ = this.staticNavigationEnabled_; result.staticNavigationSource_ = this.staticNavigationSource_; result.recordsSaveAndSendMode_ = this.recordsSaveAndSendMode_; result.timeSynchronization_ = this.timeSynchronization_; result.nTPServer_ = this.nTPServer_; result.nTPInterval_ = this.nTPInterval_; result.sleepNoPowerTimeout_ = this.sleepNoPowerTimeout_; result.sendPing_ = this.sendPing_; result.timetableMode_ = this.timetableMode_; result.timetableData_ = this.timetableData_; if (this.service1Builder_ == null) { result.service1_ = this.service1_; } else { result.service1_ = (DolphinConfig.Service)this.service1Builder_.build(); }  if (this.service2Builder_ == null) { result.service2_ = this.service2_; } else { result.service2_ = (DolphinConfig.Service)this.service2Builder_.build(); }  if (this.service3Builder_ == null) { result.service3_ = this.service3_; } else { result.service3_ = (DolphinConfig.Service)this.service3Builder_.build(); }  result.analogInput1AverageTime_ = this.analogInput1AverageTime_; result.analogInput2AverageTime_ = this.analogInput2AverageTime_; result.analogInput3AverageTime_ = this.analogInput3AverageTime_; result.bluetoothRadioMode_ = this.bluetoothRadioMode_; result.bluetoothName_ = this.bluetoothName_; result.bluetoothPIN_ = this.bluetoothPIN_; result.bluetoothSecurityMode_ = this.bluetoothSecurityMode_; result.bluetoothPowerDownOnSleep_ = this.bluetoothPowerDownOnSleep_; result.bluetoothExternalConnectionMode_ = this.bluetoothExternalConnectionMode_; result.bluetoothExternalDeviceMAC_ = this.bluetoothExternalDeviceMAC_; result.bluetoothExternalDeviceName_ = this.bluetoothExternalDeviceName_; result.bluetoothExternalDevicePIN_ = this.bluetoothExternalDevicePIN_; result.bluetoothAuthorizedMAC1_ = this.bluetoothAuthorizedMAC1_; result.bluetoothAuthorizedMAC2_ = this.bluetoothAuthorizedMAC2_; result.bluetoothAuthorizedMAC3_ = this.bluetoothAuthorizedMAC3_; result.bluetoothAuthorizedMAC4_ = this.bluetoothAuthorizedMAC4_; result.bluetoothAuthorizedMAC5_ = this.bluetoothAuthorizedMAC5_; result.gPRSContextEnabled_ = this.gPRSContextEnabled_; result.gPRSApnName_ = this.gPRSApnName_; result.gPRSApnUsername_ = this.gPRSApnUsername_; result.gPRSApnPassword_ = this.gPRSApnPassword_; result.gPRSCHAPAuthentication_ = this.gPRSCHAPAuthentication_; result.gPRSLinkTimeout_ = this.gPRSLinkTimeout_; result.gPRSResponseTimeout_ = this.gPRSResponseTimeout_; result.gPRSServerAddress_ = this.gPRSServerAddress_; result.gPRSServerPort_ = this.gPRSServerPort_; result.gPRSServerProtocol_ = this.gPRSServerProtocol_; result.gPRSBackupServerAddress_ = this.gPRSBackupServerAddress_; result.gPRSBackupServerPort_ = this.gPRSBackupServerPort_; result.gPRSBackupServerProtocol_ = this.gPRSBackupServerProtocol_; result.gPRSSSLClientAuthentication_ = this.gPRSSSLClientAuthentication_; result.gPRSDataCompression_ = this.gPRSDataCompression_; result.authenticationMode_ = this.authenticationMode_; result.authenticationCode_ = this.authenticationCode_; result.firmwareUpdateEnabled_ = this.firmwareUpdateEnabled_; result.firmwareUpdateChannel_ = this.firmwareUpdateChannel_; result.firmwareUpdateCheckInterval_ = this.firmwareUpdateCheckInterval_; result.firmwareUpdateServerAddress_ = this.firmwareUpdateServerAddress_; result.firmwareUpdateServerPort_ = this.firmwareUpdateServerPort_; result.firmwareUpdateServerProtocol_ = this.firmwareUpdateServerProtocol_; result.firmwareUpdateLinkTimeout_ = this.firmwareUpdateLinkTimeout_; result.firmwareUpdateResponseTimeout_ = this.firmwareUpdateResponseTimeout_; result.sMSDataSending_ = this.sMSDataSending_; result.sMSDataSendNumber_ = this.sMSDataSendNumber_; result.sMSPassword_ = this.sMSPassword_; result.sMSEventTimeZone_ = this.sMSEventTimeZone_; result.callIncommingCallAction_ = this.callIncommingCallAction_; result.callDigitalInput1CallTo_ = this.callDigitalInput1CallTo_; result.callDigitalInput2CallTo_ = this.callDigitalInput2CallTo_; result.callDigitalInput3CallTo_ = this.callDigitalInput3CallTo_; result.authorizedNumber1_ = this.authorizedNumber1_; result.authorizedNumber2_ = this.authorizedNumber2_; result.authorizedNumber3_ = this.authorizedNumber3_; result.authorizedNumber4_ = this.authorizedNumber4_; result.authorizedNumber5_ = this.authorizedNumber5_; result.authorizedNumber6_ = this.authorizedNumber6_; result.authorizedNumber7_ = this.authorizedNumber7_; result.authorizedNumber8_ = this.authorizedNumber8_; result.authorizedNumber9_ = this.authorizedNumber9_; result.authorizedNumber10_ = this.authorizedNumber10_; result.gsmPredefinedNumber1_ = this.gsmPredefinedNumber1_; result.gsmPredefinedNumber2_ = this.gsmPredefinedNumber2_; result.gsmPredefinedNumber3_ = this.gsmPredefinedNumber3_; result.gsmPredefinedNumber4_ = this.gsmPredefinedNumber4_; result.gsmPredefinedNumber5_ = this.gsmPredefinedNumber5_; result.gsmPredefinedNumber6_ = this.gsmPredefinedNumber6_; result.gsmPredefinedNumber7_ = this.gsmPredefinedNumber7_; result.gsmPredefinedNumber8_ = this.gsmPredefinedNumber8_; result.gsmPredefinedNumber9_ = this.gsmPredefinedNumber9_; result.gsmPredefinedNumber10_ = this.gsmPredefinedNumber10_; result.roamingOperator1_ = this.roamingOperator1_; result.roamingOperator2_ = this.roamingOperator2_; result.roamingOperator3_ = this.roamingOperator3_; result.roamingOperator4_ = this.roamingOperator4_; result.roamingOperator5_ = this.roamingOperator5_; result.dAQStopHomeMinPeriod_ = this.dAQStopHomeMinPeriod_; result.dAQStopRoamingMinPeriod_ = this.dAQStopRoamingMinPeriod_; result.dAQMovingHomeMinPeriod_ = this.dAQMovingHomeMinPeriod_; result.dAQMovingHomeMinPathDeviation_ = this.dAQMovingHomeMinPathDeviation_; result.dAQMovingRoamingMinPeriod_ = this.dAQMovingRoamingMinPeriod_; result.dAQMovingRoamingMinPathDeviation_ = this.dAQMovingRoamingMinPathDeviation_; if (this.geoZone1Builder_ == null) { result.geoZone1_ = this.geoZone1_; } else { result.geoZone1_ = (DolphinConfig.GeoZone)this.geoZone1Builder_.build(); }  if (this.geoZone2Builder_ == null) { result.geoZone2_ = this.geoZone2_; } else { result.geoZone2_ = (DolphinConfig.GeoZone)this.geoZone2Builder_.build(); }  if (this.geoZone3Builder_ == null) { result.geoZone3_ = this.geoZone3_; } else { result.geoZone3_ = (DolphinConfig.GeoZone)this.geoZone3Builder_.build(); }  if (this.geoZone4Builder_ == null) { result.geoZone4_ = this.geoZone4_; } else { result.geoZone4_ = (DolphinConfig.GeoZone)this.geoZone4Builder_.build(); }  if (this.geoZone5Builder_ == null) { result.geoZone5_ = this.geoZone5_; } else { result.geoZone5_ = (DolphinConfig.GeoZone)this.geoZone5Builder_.build(); }  if (this.geoZone6Builder_ == null) { result.geoZone6_ = this.geoZone6_; } else { result.geoZone6_ = (DolphinConfig.GeoZone)this.geoZone6Builder_.build(); }  if (this.geoZone7Builder_ == null) { result.geoZone7_ = this.geoZone7_; } else { result.geoZone7_ = (DolphinConfig.GeoZone)this.geoZone7Builder_.build(); }  if (this.geoZone8Builder_ == null) { result.geoZone8_ = this.geoZone8_; } else { result.geoZone8_ = (DolphinConfig.GeoZone)this.geoZone8Builder_.build(); }  if (this.geoZone9Builder_ == null) { result.geoZone9_ = this.geoZone9_; } else { result.geoZone9_ = (DolphinConfig.GeoZone)this.geoZone9Builder_.build(); }  if (this.geoZone10Builder_ == null) { result.geoZone10_ = this.geoZone10_; } else { result.geoZone10_ = (DolphinConfig.GeoZone)this.geoZone10Builder_.build(); }  if (this.geoZone11Builder_ == null) { result.geoZone11_ = this.geoZone11_; } else { result.geoZone11_ = (DolphinConfig.GeoZone)this.geoZone11Builder_.build(); }  if (this.geoZone12Builder_ == null) { result.geoZone12_ = this.geoZone12_; } else { result.geoZone12_ = (DolphinConfig.GeoZone)this.geoZone12Builder_.build(); }  if (this.geoZone13Builder_ == null) { result.geoZone13_ = this.geoZone13_; } else { result.geoZone13_ = (DolphinConfig.GeoZone)this.geoZone13Builder_.build(); }  if (this.geoZone14Builder_ == null) { result.geoZone14_ = this.geoZone14_; } else { result.geoZone14_ = (DolphinConfig.GeoZone)this.geoZone14Builder_.build(); }  if (this.geoZone15Builder_ == null) { result.geoZone15_ = this.geoZone15_; } else { result.geoZone15_ = (DolphinConfig.GeoZone)this.geoZone15Builder_.build(); }  if (this.geoZone16Builder_ == null) { result.geoZone16_ = this.geoZone16_; } else { result.geoZone16_ = (DolphinConfig.GeoZone)this.geoZone16Builder_.build(); }  if (this.geoZone17Builder_ == null) { result.geoZone17_ = this.geoZone17_; } else { result.geoZone17_ = (DolphinConfig.GeoZone)this.geoZone17Builder_.build(); }  if (this.geoZone18Builder_ == null) { result.geoZone18_ = this.geoZone18_; } else { result.geoZone18_ = (DolphinConfig.GeoZone)this.geoZone18Builder_.build(); }  if (this.geoZone19Builder_ == null) { result.geoZone19_ = this.geoZone19_; } else { result.geoZone19_ = (DolphinConfig.GeoZone)this.geoZone19Builder_.build(); }  if (this.geoZone20Builder_ == null) { result.geoZone20_ = this.geoZone20_; } else { result.geoZone20_ = (DolphinConfig.GeoZone)this.geoZone20Builder_.build(); }  if (this.geoZone21Builder_ == null) { result.geoZone21_ = this.geoZone21_; } else { result.geoZone21_ = (DolphinConfig.GeoZone)this.geoZone21Builder_.build(); }  if (this.geoZone22Builder_ == null) { result.geoZone22_ = this.geoZone22_; } else { result.geoZone22_ = (DolphinConfig.GeoZone)this.geoZone22Builder_.build(); }  if (this.geoZone23Builder_ == null) { result.geoZone23_ = this.geoZone23_; } else { result.geoZone23_ = (DolphinConfig.GeoZone)this.geoZone23Builder_.build(); }  if (this.geoZone24Builder_ == null) { result.geoZone24_ = this.geoZone24_; } else { result.geoZone24_ = (DolphinConfig.GeoZone)this.geoZone24Builder_.build(); }  if (this.geoZone25Builder_ == null) { result.geoZone25_ = this.geoZone25_; } else { result.geoZone25_ = (DolphinConfig.GeoZone)this.geoZone25Builder_.build(); }  if (this.geoZone26Builder_ == null) { result.geoZone26_ = this.geoZone26_; } else { result.geoZone26_ = (DolphinConfig.GeoZone)this.geoZone26Builder_.build(); }  if (this.geoZone27Builder_ == null) { result.geoZone27_ = this.geoZone27_; } else { result.geoZone27_ = (DolphinConfig.GeoZone)this.geoZone27Builder_.build(); }  if (this.geoZone28Builder_ == null) { result.geoZone28_ = this.geoZone28_; } else { result.geoZone28_ = (DolphinConfig.GeoZone)this.geoZone28Builder_.build(); }  if (this.geoZone29Builder_ == null) { result.geoZone29_ = this.geoZone29_; } else { result.geoZone29_ = (DolphinConfig.GeoZone)this.geoZone29Builder_.build(); }  if (this.geoZone30Builder_ == null) { result.geoZone30_ = this.geoZone30_; } else { result.geoZone30_ = (DolphinConfig.GeoZone)this.geoZone30Builder_.build(); }  if (this.geoZone31Builder_ == null) { result.geoZone31_ = this.geoZone31_; } else { result.geoZone31_ = (DolphinConfig.GeoZone)this.geoZone31Builder_.build(); }  if (this.geoZone32Builder_ == null) { result.geoZone32_ = this.geoZone32_; } else { result.geoZone32_ = (DolphinConfig.GeoZone)this.geoZone32Builder_.build(); }  if (this.geoZone33Builder_ == null) { result.geoZone33_ = this.geoZone33_; } else { result.geoZone33_ = (DolphinConfig.GeoZone)this.geoZone33Builder_.build(); }  if (this.geoZone34Builder_ == null) { result.geoZone34_ = this.geoZone34_; } else { result.geoZone34_ = (DolphinConfig.GeoZone)this.geoZone34Builder_.build(); }  if (this.geoZone35Builder_ == null) { result.geoZone35_ = this.geoZone35_; } else { result.geoZone35_ = (DolphinConfig.GeoZone)this.geoZone35Builder_.build(); }  if (this.geoZone36Builder_ == null) { result.geoZone36_ = this.geoZone36_; } else { result.geoZone36_ = (DolphinConfig.GeoZone)this.geoZone36Builder_.build(); }  if (this.geoZone37Builder_ == null) { result.geoZone37_ = this.geoZone37_; } else { result.geoZone37_ = (DolphinConfig.GeoZone)this.geoZone37Builder_.build(); }  if (this.geoZone38Builder_ == null) { result.geoZone38_ = this.geoZone38_; } else { result.geoZone38_ = (DolphinConfig.GeoZone)this.geoZone38Builder_.build(); }  if (this.geoZone39Builder_ == null) { result.geoZone39_ = this.geoZone39_; } else { result.geoZone39_ = (DolphinConfig.GeoZone)this.geoZone39Builder_.build(); }  if (this.geoZone40Builder_ == null) { result.geoZone40_ = this.geoZone40_; } else { result.geoZone40_ = (DolphinConfig.GeoZone)this.geoZone40Builder_.build(); }  if (this.geoZone41Builder_ == null) { result.geoZone41_ = this.geoZone41_; } else { result.geoZone41_ = (DolphinConfig.GeoZone)this.geoZone41Builder_.build(); }  if (this.geoZone42Builder_ == null) { result.geoZone42_ = this.geoZone42_; } else { result.geoZone42_ = (DolphinConfig.GeoZone)this.geoZone42Builder_.build(); }  if (this.geoZone43Builder_ == null) { result.geoZone43_ = this.geoZone43_; } else { result.geoZone43_ = (DolphinConfig.GeoZone)this.geoZone43Builder_.build(); }  if (this.geoZone44Builder_ == null) { result.geoZone44_ = this.geoZone44_; } else { result.geoZone44_ = (DolphinConfig.GeoZone)this.geoZone44Builder_.build(); }  if (this.geoZone45Builder_ == null) { result.geoZone45_ = this.geoZone45_; } else { result.geoZone45_ = (DolphinConfig.GeoZone)this.geoZone45Builder_.build(); }  if (this.geoZone46Builder_ == null) { result.geoZone46_ = this.geoZone46_; } else { result.geoZone46_ = (DolphinConfig.GeoZone)this.geoZone46Builder_.build(); }  if (this.geoZone47Builder_ == null) { result.geoZone47_ = this.geoZone47_; } else { result.geoZone47_ = (DolphinConfig.GeoZone)this.geoZone47Builder_.build(); }  if (this.geoZone48Builder_ == null) { result.geoZone48_ = this.geoZone48_; } else { result.geoZone48_ = (DolphinConfig.GeoZone)this.geoZone48Builder_.build(); }  if (this.geoZone49Builder_ == null) { result.geoZone49_ = this.geoZone49_; } else { result.geoZone49_ = (DolphinConfig.GeoZone)this.geoZone49Builder_.build(); }  if (this.geoZone50Builder_ == null) { result.geoZone50_ = this.geoZone50_; } else { result.geoZone50_ = (DolphinConfig.GeoZone)this.geoZone50Builder_.build(); }  result.tripStartSpeed_ = this.tripStartSpeed_; result.tripUseIgnition_ = this.tripUseIgnition_; result.tripParkDetectionTimeout_ = this.tripParkDetectionTimeout_; result.overspeedingEnable_ = this.overspeedingEnable_; result.overspeedingLimit_ = this.overspeedingLimit_; result.overspeedingActivationSpeed_ = this.overspeedingActivationSpeed_; result.overspeedingDeactivationMode_ = this.overspeedingDeactivationMode_; result.overspeedingDeactivationValue_ = this.overspeedingDeactivationValue_; result.uSSDEnabled_ = this.uSSDEnabled_; result.uSSDID_ = this.uSSDID_; result.uSSDInterval_ = this.uSSDInterval_; result.uSSDCode_ = this.uSSDCode_; result.speedSensorKmPulseCount_ = this.speedSensorKmPulseCount_; result.crashDetectionEnabled_ = this.crashDetectionEnabled_; result.crashDetectionLevel1Threshold_ = this.crashDetectionLevel1Threshold_; result.crashDetectionLevel2Threshold_ = this.crashDetectionLevel2Threshold_; result.crashDetectionLevel3Threshold_ = this.crashDetectionLevel3Threshold_; result.crashDetectionTrace_ = this.crashDetectionTrace_; result.crashDetectionDuration_ = this.crashDetectionDuration_; result.crashDetectionSendSMSTo_ = this.crashDetectionSendSMSTo_; result.crashDetectionSMSText_ = this.crashDetectionSMSText_; result.crashDetectionCallTo_ = this.crashDetectionCallTo_; result.rolloverDetectionEnabled_ = this.rolloverDetectionEnabled_; result.driverRegistrationMode_ = this.driverRegistrationMode_; result.driverRegistrationAuthentication_ = this.driverRegistrationAuthentication_; result.driverRegistrationDeregistrationTimeout_ = this.driverRegistrationDeregistrationTimeout_; result.driverRegistrationBuzzerDigitalOutput_ = this.driverRegistrationBuzzerDigitalOutput_; result.driverRegistrationImmobilizerDigitalOutput_ = this.driverRegistrationImmobilizerDigitalOutput_; result.driverRegistrationImmobilizerActiveLow_ = this.driverRegistrationImmobilizerActiveLow_; result.driverRegistrationAuthorizedID1_ = this.driverRegistrationAuthorizedID1_; result.driverRegistrationAuthorizedID2_ = this.driverRegistrationAuthorizedID2_; result.driverRegistrationAuthorizedID3_ = this.driverRegistrationAuthorizedID3_; result.driverRegistrationAuthorizedID4_ = this.driverRegistrationAuthorizedID4_; result.driverRegistrationAuthorizedID5_ = this.driverRegistrationAuthorizedID5_; result.driverRegistrationAuthorizedID6_ = this.driverRegistrationAuthorizedID6_; result.driverRegistrationAuthorizedID7_ = this.driverRegistrationAuthorizedID7_; result.driverRegistrationAuthorizedID8_ = this.driverRegistrationAuthorizedID8_; result.driverRegistrationAuthorizedID9_ = this.driverRegistrationAuthorizedID9_; result.driverRegistrationAuthorizedID10_ = this.driverRegistrationAuthorizedID10_; result.eCODriveActive_ = this.eCODriveActive_; result.eCOOverSpeedingLimit_ = this.eCOOverSpeedingLimit_; result.eCORPMGreenBandLowLimit_ = this.eCORPMGreenBandLowLimit_; result.eCORPMGreenBandHighLimit_ = this.eCORPMGreenBandHighLimit_; result.eCOHarshBreakingLimit_ = this.eCOHarshBreakingLimit_; result.eCOExtremeBreakingLimit_ = this.eCOExtremeBreakingLimit_; result.eCOHarshAccelerationLimit_ = this.eCOHarshAccelerationLimit_; result.eCOCorneringLimit_ = this.eCOCorneringLimit_; result.eCOIdlingDelay_ = this.eCOIdlingDelay_; result.eCOIdlingSpeed_ = this.eCOIdlingSpeed_; result.eCOCruiseControlSpeed_ = this.eCOCruiseControlSpeed_; result.eCOCalculateOnlyWhenEngineOn_ = this.eCOCalculateOnlyWhenEngineOn_; result.eCOCustomEngineSource_ = this.eCOCustomEngineSource_; result.eCOEngineOnDIN1_ = this.eCOEngineOnDIN1_; result.eCOEngineOnDIN2_ = this.eCOEngineOnDIN2_; result.eCOEngineOnMovementSensor_ = this.eCOEngineOnMovementSensor_; result.eCOEngineOnPowerSupplyAvailable_ = this.eCOEngineOnPowerSupplyAvailable_; result.eCOEngineOnCanRPMLow_ = this.eCOEngineOnCanRPMLow_; result.eCOEngineOnCanRPMHigh_ = this.eCOEngineOnCanRPMHigh_; result.eCOEngineOnOperator_ = this.eCOEngineOnOperator_; result.eCOEngineOnExternalVoltage_ = this.eCOEngineOnExternalVoltage_; result.eCUInterface_ = this.eCUInterface_; result.fuelConsumptionEnabled_ = this.fuelConsumptionEnabled_; result.fuelConsumptionEngineDisplacement_ = this.fuelConsumptionEngineDisplacement_; result.fuelConsumptionCylinders_ = this.fuelConsumptionCylinders_; result.fuelConsumptionInjectorPerformance_ = this.fuelConsumptionInjectorPerformance_; result.fuelConsumptionVolumetricEfficiently_ = this.fuelConsumptionVolumetricEfficiently_; result.faultCodesReadTime_ = this.faultCodesReadTime_; result.sIPAADLinkTimeout_ = this.sIPAADLinkTimeout_; result.sIPAADResponseTimeout_ = this.sIPAADResponseTimeout_; result.sIPAADServerAddress_ = this.sIPAADServerAddress_; result.sIPAADServerPort_ = this.sIPAADServerPort_; result.sIPAADServerProtocol_ = this.sIPAADServerProtocol_; result.sIPAADSSLClientAuthentication_ = this.sIPAADSSLClientAuthentication_; if (this.iOTimeBuilder_ == null) { result.iOTime_ = this.iOTime_; } else { result.iOTime_ = (DolphinConfig.IO)this.iOTimeBuilder_.build(); }  if (this.iOAngleBuilder_ == null) { result.iOAngle_ = this.iOAngle_; } else { result.iOAngle_ = (DolphinConfig.IO)this.iOAngleBuilder_.build(); }  if (this.iOSpeedBuilder_ == null) { result.iOSpeed_ = this.iOSpeed_; } else { result.iOSpeed_ = (DolphinConfig.IO)this.iOSpeedBuilder_.build(); }  if (this.iOSleepModeBuilder_ == null) { result.iOSleepMode_ = this.iOSleepMode_; } else { result.iOSleepMode_ = (DolphinConfig.IO)this.iOSleepModeBuilder_.build(); }  if (this.iOIgnitionBuilder_ == null) { result.iOIgnition_ = this.iOIgnition_; } else { result.iOIgnition_ = (DolphinConfig.IO)this.iOIgnitionBuilder_.build(); }  if (this.iOMovementBuilder_ == null) { result.iOMovement_ = this.iOMovement_; } else { result.iOMovement_ = (DolphinConfig.IO)this.iOMovementBuilder_.build(); }  if (this.iODataModeBuilder_ == null) { result.iODataMode_ = this.iODataMode_; } else { result.iODataMode_ = (DolphinConfig.IO)this.iODataModeBuilder_.build(); }  if (this.iOGnssStatusBuilder_ == null) { result.iOGnssStatus_ = this.iOGnssStatus_; } else { result.iOGnssStatus_ = (DolphinConfig.IO)this.iOGnssStatusBuilder_.build(); }  if (this.iOGnssHDOPBuilder_ == null) { result.iOGnssHDOP_ = this.iOGnssHDOP_; } else { result.iOGnssHDOP_ = (DolphinConfig.IO)this.iOGnssHDOPBuilder_.build(); }  if (this.iOGnssPDOPBuilder_ == null) { result.iOGnssPDOP_ = this.iOGnssPDOP_; } else { result.iOGnssPDOP_ = (DolphinConfig.IO)this.iOGnssPDOPBuilder_.build(); }  if (this.iOGnssJammingStatusBuilder_ == null) { result.iOGnssJammingStatus_ = this.iOGnssJammingStatus_; } else { result.iOGnssJammingStatus_ = (DolphinConfig.IO)this.iOGnssJammingStatusBuilder_.build(); }  if (this.iOGsmSignalBuilder_ == null) { result.iOGsmSignal_ = this.iOGsmSignal_; } else { result.iOGsmSignal_ = (DolphinConfig.IO)this.iOGsmSignalBuilder_.build(); }  if (this.iOGsmCellIdBuilder_ == null) { result.iOGsmCellId_ = this.iOGsmCellId_; } else { result.iOGsmCellId_ = (DolphinConfig.IO)this.iOGsmCellIdBuilder_.build(); }  if (this.iOGsmAreaCodeBuilder_ == null) { result.iOGsmAreaCode_ = this.iOGsmAreaCode_; } else { result.iOGsmAreaCode_ = (DolphinConfig.IO)this.iOGsmAreaCodeBuilder_.build(); }  if (this.iOGsmOperatorBuilder_ == null) { result.iOGsmOperator_ = this.iOGsmOperator_; } else { result.iOGsmOperator_ = (DolphinConfig.IO)this.iOGsmOperatorBuilder_.build(); }  if (this.iOGsmTemperatureBuilder_ == null) { result.iOGsmTemperature_ = this.iOGsmTemperature_; } else { result.iOGsmTemperature_ = (DolphinConfig.IO)this.iOGsmTemperatureBuilder_.build(); }  if (this.iOGsmJammingStatusBuilder_ == null) { result.iOGsmJammingStatus_ = this.iOGsmJammingStatus_; } else { result.iOGsmJammingStatus_ = (DolphinConfig.IO)this.iOGsmJammingStatusBuilder_.build(); }  if (this.iOExternalVoltageBuilder_ == null) { result.iOExternalVoltage_ = this.iOExternalVoltage_; } else { result.iOExternalVoltage_ = (DolphinConfig.IO)this.iOExternalVoltageBuilder_.build(); }  if (this.iOBatteryVoltageBuilder_ == null) { result.iOBatteryVoltage_ = this.iOBatteryVoltage_; } else { result.iOBatteryVoltage_ = (DolphinConfig.IO)this.iOBatteryVoltageBuilder_.build(); }  if (this.iOBatteryCurrentBuilder_ == null) { result.iOBatteryCurrent_ = this.iOBatteryCurrent_; } else { result.iOBatteryCurrent_ = (DolphinConfig.IO)this.iOBatteryCurrentBuilder_.build(); }  if (this.iOTotalOdometerBuilder_ == null) { result.iOTotalOdometer_ = this.iOTotalOdometer_; } else { result.iOTotalOdometer_ = (DolphinConfig.IO)this.iOTotalOdometerBuilder_.build(); }  if (this.iOOdometerBuilder_ == null) { result.iOOdometer_ = this.iOOdometer_; } else { result.iOOdometer_ = (DolphinConfig.IO)this.iOOdometerBuilder_.build(); }  if (this.iOEngineOnTimeBuilder_ == null) { result.iOEngineOnTime_ = this.iOEngineOnTime_; } else { result.iOEngineOnTime_ = (DolphinConfig.IO)this.iOEngineOnTimeBuilder_.build(); }  if (this.iOEngineOnTimeDeltaBuilder_ == null) { result.iOEngineOnTimeDelta_ = this.iOEngineOnTimeDelta_; } else { result.iOEngineOnTimeDelta_ = (DolphinConfig.IO)this.iOEngineOnTimeDeltaBuilder_.build(); }  if (this.iOIdlingTimeBuilder_ == null) { result.iOIdlingTime_ = this.iOIdlingTime_; } else { result.iOIdlingTime_ = (DolphinConfig.IO)this.iOIdlingTimeBuilder_.build(); }  if (this.iOIdlingTimeDeltaBuilder_ == null) { result.iOIdlingTimeDelta_ = this.iOIdlingTimeDelta_; } else { result.iOIdlingTimeDelta_ = (DolphinConfig.IO)this.iOIdlingTimeDeltaBuilder_.build(); }  if (this.iOSpeedSensorSpeedBuilder_ == null) { result.iOSpeedSensorSpeed_ = this.iOSpeedSensorSpeed_; } else { result.iOSpeedSensorSpeed_ = (DolphinConfig.IO)this.iOSpeedSensorSpeedBuilder_.build(); }  if (this.iOSpeedSensorDistanceBuilder_ == null) { result.iOSpeedSensorDistance_ = this.iOSpeedSensorDistance_; } else { result.iOSpeedSensorDistance_ = (DolphinConfig.IO)this.iOSpeedSensorDistanceBuilder_.build(); }  if (this.iOSpeedSensorTotalDistanceBuilder_ == null) { result.iOSpeedSensorTotalDistance_ = this.iOSpeedSensorTotalDistance_; } else { result.iOSpeedSensorTotalDistance_ = (DolphinConfig.IO)this.iOSpeedSensorTotalDistanceBuilder_.build(); }  if (this.iOSpeedSensorMaxSpeedBuilder_ == null) { result.iOSpeedSensorMaxSpeed_ = this.iOSpeedSensorMaxSpeed_; } else { result.iOSpeedSensorMaxSpeed_ = (DolphinConfig.IO)this.iOSpeedSensorMaxSpeedBuilder_.build(); }  if (this.iOSpeedSensorGPSSpeedDiffBuilder_ == null) { result.iOSpeedSensorGPSSpeedDiff_ = this.iOSpeedSensorGPSSpeedDiff_; } else { result.iOSpeedSensorGPSSpeedDiff_ = (DolphinConfig.IO)this.iOSpeedSensorGPSSpeedDiffBuilder_.build(); }  if (this.iODigitalInput1Builder_ == null) { result.iODigitalInput1_ = this.iODigitalInput1_; } else { result.iODigitalInput1_ = (DolphinConfig.IO)this.iODigitalInput1Builder_.build(); }  if (this.iODigitalInput2Builder_ == null) { result.iODigitalInput2_ = this.iODigitalInput2_; } else { result.iODigitalInput2_ = (DolphinConfig.IO)this.iODigitalInput2Builder_.build(); }  if (this.iOPowerSupplyBuilder_ == null) { result.iOPowerSupply_ = this.iOPowerSupply_; } else { result.iOPowerSupply_ = (DolphinConfig.IO)this.iOPowerSupplyBuilder_.build(); }  if (this.iODigitalInput3Builder_ == null) { result.iODigitalInput3_ = this.iODigitalInput3_; } else { result.iODigitalInput3_ = (DolphinConfig.IO)this.iODigitalInput3Builder_.build(); }  if (this.iOVehicleConnectionBuilder_ == null) { result.iOVehicleConnection_ = this.iOVehicleConnection_; } else { result.iOVehicleConnection_ = (DolphinConfig.IO)this.iOVehicleConnectionBuilder_.build(); }  if (this.iODigitalInput1TimeBuilder_ == null) { result.iODigitalInput1Time_ = this.iODigitalInput1Time_; } else { result.iODigitalInput1Time_ = (DolphinConfig.IO)this.iODigitalInput1TimeBuilder_.build(); }  if (this.iODigitalInput1TimeDeltaBuilder_ == null) { result.iODigitalInput1TimeDelta_ = this.iODigitalInput1TimeDelta_; } else { result.iODigitalInput1TimeDelta_ = (DolphinConfig.IO)this.iODigitalInput1TimeDeltaBuilder_.build(); }  if (this.iODigitalInput2TimeBuilder_ == null) { result.iODigitalInput2Time_ = this.iODigitalInput2Time_; } else { result.iODigitalInput2Time_ = (DolphinConfig.IO)this.iODigitalInput2TimeBuilder_.build(); }  if (this.iODigitalInput2TimeDeltaBuilder_ == null) { result.iODigitalInput2TimeDelta_ = this.iODigitalInput2TimeDelta_; } else { result.iODigitalInput2TimeDelta_ = (DolphinConfig.IO)this.iODigitalInput2TimeDeltaBuilder_.build(); }  if (this.iOPowerSupplyTimeBuilder_ == null) { result.iOPowerSupplyTime_ = this.iOPowerSupplyTime_; } else { result.iOPowerSupplyTime_ = (DolphinConfig.IO)this.iOPowerSupplyTimeBuilder_.build(); }  if (this.iOPowerSupplyTimeDeltaBuilder_ == null) { result.iOPowerSupplyTimeDelta_ = this.iOPowerSupplyTimeDelta_; } else { result.iOPowerSupplyTimeDelta_ = (DolphinConfig.IO)this.iOPowerSupplyTimeDeltaBuilder_.build(); }  if (this.iODigitalInput3TimeBuilder_ == null) { result.iODigitalInput3Time_ = this.iODigitalInput3Time_; } else { result.iODigitalInput3Time_ = (DolphinConfig.IO)this.iODigitalInput3TimeBuilder_.build(); }  if (this.iODigitalInput3TimeDeltaBuilder_ == null) { result.iODigitalInput3TimeDelta_ = this.iODigitalInput3TimeDelta_; } else { result.iODigitalInput3TimeDelta_ = (DolphinConfig.IO)this.iODigitalInput3TimeDeltaBuilder_.build(); }  if (this.iODigitalOutput1Builder_ == null) { result.iODigitalOutput1_ = this.iODigitalOutput1_; } else { result.iODigitalOutput1_ = (DolphinConfig.IO)this.iODigitalOutput1Builder_.build(); }  if (this.iODigitalOutput2Builder_ == null) { result.iODigitalOutput2_ = this.iODigitalOutput2_; } else { result.iODigitalOutput2_ = (DolphinConfig.IO)this.iODigitalOutput2Builder_.build(); }  if (this.iOAnalogInput1Builder_ == null) { result.iOAnalogInput1_ = this.iOAnalogInput1_; } else { result.iOAnalogInput1_ = (DolphinConfig.IO)this.iOAnalogInput1Builder_.build(); }  if (this.iOAnalogInput2Builder_ == null) { result.iOAnalogInput2_ = this.iOAnalogInput2_; } else { result.iOAnalogInput2_ = (DolphinConfig.IO)this.iOAnalogInput2Builder_.build(); }  if (this.iOAnalogInput3Builder_ == null) { result.iOAnalogInput3_ = this.iOAnalogInput3_; } else { result.iOAnalogInput3_ = (DolphinConfig.IO)this.iOAnalogInput3Builder_.build(); }  if (this.iOAxisXBuilder_ == null) { result.iOAxisX_ = this.iOAxisX_; } else { result.iOAxisX_ = (DolphinConfig.IO)this.iOAxisXBuilder_.build(); }  if (this.iOAxisYBuilder_ == null) { result.iOAxisY_ = this.iOAxisY_; } else { result.iOAxisY_ = (DolphinConfig.IO)this.iOAxisYBuilder_.build(); }  if (this.iOAxisZBuilder_ == null) { result.iOAxisZ_ = this.iOAxisZ_; } else { result.iOAxisZ_ = (DolphinConfig.IO)this.iOAxisZBuilder_.build(); }  if (this.iOECOMaxSpeedBuilder_ == null) { result.iOECOMaxSpeed_ = this.iOECOMaxSpeed_; } else { result.iOECOMaxSpeed_ = (DolphinConfig.IO)this.iOECOMaxSpeedBuilder_.build(); }  if (this.iOECONormalSpeedDistanceBuilder_ == null) { result.iOECONormalSpeedDistance_ = this.iOECONormalSpeedDistance_; } else { result.iOECONormalSpeedDistance_ = (DolphinConfig.IO)this.iOECONormalSpeedDistanceBuilder_.build(); }  if (this.iOECONormalSpeedTotalDistanceBuilder_ == null) { result.iOECONormalSpeedTotalDistance_ = this.iOECONormalSpeedTotalDistance_; } else { result.iOECONormalSpeedTotalDistance_ = (DolphinConfig.IO)this.iOECONormalSpeedTotalDistanceBuilder_.build(); }  if (this.iOECONormalSpeedTimerBuilder_ == null) { result.iOECONormalSpeedTimer_ = this.iOECONormalSpeedTimer_; } else { result.iOECONormalSpeedTimer_ = (DolphinConfig.IO)this.iOECONormalSpeedTimerBuilder_.build(); }  if (this.iOECONormalSpeedTotalTimerBuilder_ == null) { result.iOECONormalSpeedTotalTimer_ = this.iOECONormalSpeedTotalTimer_; } else { result.iOECONormalSpeedTotalTimer_ = (DolphinConfig.IO)this.iOECONormalSpeedTotalTimerBuilder_.build(); }  if (this.iOECOOverSpeedingDistanceBuilder_ == null) { result.iOECOOverSpeedingDistance_ = this.iOECOOverSpeedingDistance_; } else { result.iOECOOverSpeedingDistance_ = (DolphinConfig.IO)this.iOECOOverSpeedingDistanceBuilder_.build(); }  if (this.iOECOOverSpeedingTotalDistanceBuilder_ == null) { result.iOECOOverSpeedingTotalDistance_ = this.iOECOOverSpeedingTotalDistance_; } else { result.iOECOOverSpeedingTotalDistance_ = (DolphinConfig.IO)this.iOECOOverSpeedingTotalDistanceBuilder_.build(); }  if (this.iOECOOverSpeedingTimerBuilder_ == null) { result.iOECOOverSpeedingTimer_ = this.iOECOOverSpeedingTimer_; } else { result.iOECOOverSpeedingTimer_ = (DolphinConfig.IO)this.iOECOOverSpeedingTimerBuilder_.build(); }  if (this.iOECOOverSpeedingTotalTimerBuilder_ == null) { result.iOECOOverSpeedingTotalTimer_ = this.iOECOOverSpeedingTotalTimer_; } else { result.iOECOOverSpeedingTotalTimer_ = (DolphinConfig.IO)this.iOECOOverSpeedingTotalTimerBuilder_.build(); }  if (this.iOECOMaxRPMBuilder_ == null) { result.iOECOMaxRPM_ = this.iOECOMaxRPM_; } else { result.iOECOMaxRPM_ = (DolphinConfig.IO)this.iOECOMaxRPMBuilder_.build(); }  if (this.iOECORPMGreenBandDistanceBuilder_ == null) { result.iOECORPMGreenBandDistance_ = this.iOECORPMGreenBandDistance_; } else { result.iOECORPMGreenBandDistance_ = (DolphinConfig.IO)this.iOECORPMGreenBandDistanceBuilder_.build(); }  if (this.iOECORPMGreenBandTotalDistanceBuilder_ == null) { result.iOECORPMGreenBandTotalDistance_ = this.iOECORPMGreenBandTotalDistance_; } else { result.iOECORPMGreenBandTotalDistance_ = (DolphinConfig.IO)this.iOECORPMGreenBandTotalDistanceBuilder_.build(); }  if (this.iOECORPMGreenBandTimerBuilder_ == null) { result.iOECORPMGreenBandTimer_ = this.iOECORPMGreenBandTimer_; } else { result.iOECORPMGreenBandTimer_ = (DolphinConfig.IO)this.iOECORPMGreenBandTimerBuilder_.build(); }  if (this.iOECORPMGreenBandTotalTimerBuilder_ == null) { result.iOECORPMGreenBandTotalTimer_ = this.iOECORPMGreenBandTotalTimer_; } else { result.iOECORPMGreenBandTotalTimer_ = (DolphinConfig.IO)this.iOECORPMGreenBandTotalTimerBuilder_.build(); }  if (this.iOECOOverRPMDistanceBuilder_ == null) { result.iOECOOverRPMDistance_ = this.iOECOOverRPMDistance_; } else { result.iOECOOverRPMDistance_ = (DolphinConfig.IO)this.iOECOOverRPMDistanceBuilder_.build(); }  if (this.iOECOOverRPMTotalDistanceBuilder_ == null) { result.iOECOOverRPMTotalDistance_ = this.iOECOOverRPMTotalDistance_; } else { result.iOECOOverRPMTotalDistance_ = (DolphinConfig.IO)this.iOECOOverRPMTotalDistanceBuilder_.build(); }  if (this.iOECOOverRPMTimerBuilder_ == null) { result.iOECOOverRPMTimer_ = this.iOECOOverRPMTimer_; } else { result.iOECOOverRPMTimer_ = (DolphinConfig.IO)this.iOECOOverRPMTimerBuilder_.build(); }  if (this.iOECOOverRPMTotalTimerBuilder_ == null) { result.iOECOOverRPMTotalTimer_ = this.iOECOOverRPMTotalTimer_; } else { result.iOECOOverRPMTotalTimer_ = (DolphinConfig.IO)this.iOECOOverRPMTotalTimerBuilder_.build(); }  if (this.iOECOIdlingEventBuilder_ == null) { result.iOECOIdlingEvent_ = this.iOECOIdlingEvent_; } else { result.iOECOIdlingEvent_ = (DolphinConfig.IO)this.iOECOIdlingEventBuilder_.build(); }  if (this.iOECOCruiseControlTimerBuilder_ == null) { result.iOECOCruiseControlTimer_ = this.iOECOCruiseControlTimer_; } else { result.iOECOCruiseControlTimer_ = (DolphinConfig.IO)this.iOECOCruiseControlTimerBuilder_.build(); }  if (this.iOECOCruiseControlTotalTimerBuilder_ == null) { result.iOECOCruiseControlTotalTimer_ = this.iOECOCruiseControlTotalTimer_; } else { result.iOECOCruiseControlTotalTimer_ = (DolphinConfig.IO)this.iOECOCruiseControlTotalTimerBuilder_.build(); }  if (this.iOECOCruiseControlDistanceBuilder_ == null) { result.iOECOCruiseControlDistance_ = this.iOECOCruiseControlDistance_; } else { result.iOECOCruiseControlDistance_ = (DolphinConfig.IO)this.iOECOCruiseControlDistanceBuilder_.build(); }  if (this.iOECOCruiseControlTotalDistanceBuilder_ == null) { result.iOECOCruiseControlTotalDistance_ = this.iOECOCruiseControlTotalDistance_; } else { result.iOECOCruiseControlTotalDistance_ = (DolphinConfig.IO)this.iOECOCruiseControlTotalDistanceBuilder_.build(); }  if (this.iOECOUnderRPMDistanceBuilder_ == null) { result.iOECOUnderRPMDistance_ = this.iOECOUnderRPMDistance_; } else { result.iOECOUnderRPMDistance_ = (DolphinConfig.IO)this.iOECOUnderRPMDistanceBuilder_.build(); }  if (this.iOECOUnderRPMTotalDistanceBuilder_ == null) { result.iOECOUnderRPMTotalDistance_ = this.iOECOUnderRPMTotalDistance_; } else { result.iOECOUnderRPMTotalDistance_ = (DolphinConfig.IO)this.iOECOUnderRPMTotalDistanceBuilder_.build(); }  if (this.iOECOUnderRPMTimerBuilder_ == null) { result.iOECOUnderRPMTimer_ = this.iOECOUnderRPMTimer_; } else { result.iOECOUnderRPMTimer_ = (DolphinConfig.IO)this.iOECOUnderRPMTimerBuilder_.build(); }  if (this.iOECOUnderRPMTotalTimerBuilder_ == null) { result.iOECOUnderRPMTotalTimer_ = this.iOECOUnderRPMTotalTimer_; } else { result.iOECOUnderRPMTotalTimer_ = (DolphinConfig.IO)this.iOECOUnderRPMTotalTimerBuilder_.build(); }  if (this.iOECOBreakCounterBuilder_ == null) { result.iOECOBreakCounter_ = this.iOECOBreakCounter_; } else { result.iOECOBreakCounter_ = (DolphinConfig.IO)this.iOECOBreakCounterBuilder_.build(); }  if (this.iOECOHarshBreakCounterBuilder_ == null) { result.iOECOHarshBreakCounter_ = this.iOECOHarshBreakCounter_; } else { result.iOECOHarshBreakCounter_ = (DolphinConfig.IO)this.iOECOHarshBreakCounterBuilder_.build(); }  if (this.iOECOExtremeBreakCounterBuilder_ == null) { result.iOECOExtremeBreakCounter_ = this.iOECOExtremeBreakCounter_; } else { result.iOECOExtremeBreakCounter_ = (DolphinConfig.IO)this.iOECOExtremeBreakCounterBuilder_.build(); }  if (this.iOECOHarshAccelerationCounterBuilder_ == null) { result.iOECOHarshAccelerationCounter_ = this.iOECOHarshAccelerationCounter_; } else { result.iOECOHarshAccelerationCounter_ = (DolphinConfig.IO)this.iOECOHarshAccelerationCounterBuilder_.build(); }  if (this.iOECOCorneringCounterBuilder_ == null) { result.iOECOCorneringCounter_ = this.iOECOCorneringCounter_; } else { result.iOECOCorneringCounter_ = (DolphinConfig.IO)this.iOECOCorneringCounterBuilder_.build(); }  if (this.iOECOTotalBreakBuilder_ == null) { result.iOECOTotalBreak_ = this.iOECOTotalBreak_; } else { result.iOECOTotalBreak_ = (DolphinConfig.IO)this.iOECOTotalBreakBuilder_.build(); }  if (this.iOECOTotalHarshBreakBuilder_ == null) { result.iOECOTotalHarshBreak_ = this.iOECOTotalHarshBreak_; } else { result.iOECOTotalHarshBreak_ = (DolphinConfig.IO)this.iOECOTotalHarshBreakBuilder_.build(); }  if (this.iOECOTotalExtremeBreakBuilder_ == null) { result.iOECOTotalExtremeBreak_ = this.iOECOTotalExtremeBreak_; } else { result.iOECOTotalExtremeBreak_ = (DolphinConfig.IO)this.iOECOTotalExtremeBreakBuilder_.build(); }  if (this.iOECOTotalHarshAccelerationBuilder_ == null) { result.iOECOTotalHarshAcceleration_ = this.iOECOTotalHarshAcceleration_; } else { result.iOECOTotalHarshAcceleration_ = (DolphinConfig.IO)this.iOECOTotalHarshAccelerationBuilder_.build(); }  if (this.iOECOTotalCorneringBuilder_ == null) { result.iOECOTotalCornering_ = this.iOECOTotalCornering_; } else { result.iOECOTotalCornering_ = (DolphinConfig.IO)this.iOECOTotalCorneringBuilder_.build(); }  if (this.iOTripBuilder_ == null) { result.iOTrip_ = this.iOTrip_; } else { result.iOTrip_ = (DolphinConfig.IO)this.iOTripBuilder_.build(); }  if (this.iOTripTimeBuilder_ == null) { result.iOTripTime_ = this.iOTripTime_; } else { result.iOTripTime_ = (DolphinConfig.IO)this.iOTripTimeBuilder_.build(); }  if (this.iOTripDistanceBuilder_ == null) { result.iOTripDistance_ = this.iOTripDistance_; } else { result.iOTripDistance_ = (DolphinConfig.IO)this.iOTripDistanceBuilder_.build(); }  if (this.iODriverIDBuilder_ == null) { result.iODriverID_ = this.iODriverID_; } else { result.iODriverID_ = (DolphinConfig.IO)this.iODriverIDBuilder_.build(); }  if (this.iOTemperatureSensor1Builder_ == null) { result.iOTemperatureSensor1_ = this.iOTemperatureSensor1_; } else { result.iOTemperatureSensor1_ = (DolphinConfig.IO)this.iOTemperatureSensor1Builder_.build(); }  if (this.iOTemperatureSensor1IDBuilder_ == null) { result.iOTemperatureSensor1ID_ = this.iOTemperatureSensor1ID_; } else { result.iOTemperatureSensor1ID_ = (DolphinConfig.IO)this.iOTemperatureSensor1IDBuilder_.build(); }  if (this.iOTemperatureSensor2Builder_ == null) { result.iOTemperatureSensor2_ = this.iOTemperatureSensor2_; } else { result.iOTemperatureSensor2_ = (DolphinConfig.IO)this.iOTemperatureSensor2Builder_.build(); }  if (this.iOTemperatureSensor2IDBuilder_ == null) { result.iOTemperatureSensor2ID_ = this.iOTemperatureSensor2ID_; } else { result.iOTemperatureSensor2ID_ = (DolphinConfig.IO)this.iOTemperatureSensor2IDBuilder_.build(); }  if (this.iOTemperatureSensor3Builder_ == null) { result.iOTemperatureSensor3_ = this.iOTemperatureSensor3_; } else { result.iOTemperatureSensor3_ = (DolphinConfig.IO)this.iOTemperatureSensor3Builder_.build(); }  if (this.iOTemperatureSensor3IDBuilder_ == null) { result.iOTemperatureSensor3ID_ = this.iOTemperatureSensor3ID_; } else { result.iOTemperatureSensor3ID_ = (DolphinConfig.IO)this.iOTemperatureSensor3IDBuilder_.build(); }  if (this.iOHumiditySensor1Builder_ == null) { result.iOHumiditySensor1_ = this.iOHumiditySensor1_; } else { result.iOHumiditySensor1_ = (DolphinConfig.IO)this.iOHumiditySensor1Builder_.build(); }  if (this.iOTiltStatusBuilder_ == null) { result.iOTiltStatus_ = this.iOTiltStatus_; } else { result.iOTiltStatus_ = (DolphinConfig.IO)this.iOTiltStatusBuilder_.build(); }  if (this.iOOBDEngineRPMBuilder_ == null) { result.iOOBDEngineRPM_ = this.iOOBDEngineRPM_; } else { result.iOOBDEngineRPM_ = (DolphinConfig.IO)this.iOOBDEngineRPMBuilder_.build(); }  if (this.iOOBDBatteryVoltageBuilder_ == null) { result.iOOBDBatteryVoltage_ = this.iOOBDBatteryVoltage_; } else { result.iOOBDBatteryVoltage_ = (DolphinConfig.IO)this.iOOBDBatteryVoltageBuilder_.build(); }  if (this.iOOBDEngineCoolantTemperatureBuilder_ == null) { result.iOOBDEngineCoolantTemperature_ = this.iOOBDEngineCoolantTemperature_; } else { result.iOOBDEngineCoolantTemperature_ = (DolphinConfig.IO)this.iOOBDEngineCoolantTemperatureBuilder_.build(); }  if (this.iOOBDVehicleSpeedBuilder_ == null) { result.iOOBDVehicleSpeed_ = this.iOOBDVehicleSpeed_; } else { result.iOOBDVehicleSpeed_ = (DolphinConfig.IO)this.iOOBDVehicleSpeedBuilder_.build(); }  if (this.iOOBDTotalDistanceBuilder_ == null) { result.iOOBDTotalDistance_ = this.iOOBDTotalDistance_; } else { result.iOOBDTotalDistance_ = (DolphinConfig.IO)this.iOOBDTotalDistanceBuilder_.build(); }  if (this.iOOBDFuelRateBuilder_ == null) { result.iOOBDFuelRate_ = this.iOOBDFuelRate_; } else { result.iOOBDFuelRate_ = (DolphinConfig.IO)this.iOOBDFuelRateBuilder_.build(); }  if (this.iOOBDTotalFuelUsedBuilder_ == null) { result.iOOBDTotalFuelUsed_ = this.iOOBDTotalFuelUsed_; } else { result.iOOBDTotalFuelUsed_ = (DolphinConfig.IO)this.iOOBDTotalFuelUsedBuilder_.build(); }  if (this.iOOBDIntakeAirTemperatureBuilder_ == null) { result.iOOBDIntakeAirTemperature_ = this.iOOBDIntakeAirTemperature_; } else { result.iOOBDIntakeAirTemperature_ = (DolphinConfig.IO)this.iOOBDIntakeAirTemperatureBuilder_.build(); }  if (this.iOOBDIntakeManifoldAbsolutePressureBuilder_ == null) { result.iOOBDIntakeManifoldAbsolutePressure_ = this.iOOBDIntakeManifoldAbsolutePressure_; } else { result.iOOBDIntakeManifoldAbsolutePressure_ = (DolphinConfig.IO)this.iOOBDIntakeManifoldAbsolutePressureBuilder_.build(); }  if (this.iOOBDMalfunctionIndicatorLampBuilder_ == null) { result.iOOBDMalfunctionIndicatorLamp_ = this.iOOBDMalfunctionIndicatorLamp_; } else { result.iOOBDMalfunctionIndicatorLamp_ = (DolphinConfig.IO)this.iOOBDMalfunctionIndicatorLampBuilder_.build(); }  if (this.iODiagnosticTroubleCodesCountBuilder_ == null) { result.iODiagnosticTroubleCodesCount_ = this.iODiagnosticTroubleCodesCount_; } else { result.iODiagnosticTroubleCodesCount_ = (DolphinConfig.IO)this.iODiagnosticTroubleCodesCountBuilder_.build(); }  if (this.iOOBDCalculatedEngineLoadBuilder_ == null) { result.iOOBDCalculatedEngineLoad_ = this.iOOBDCalculatedEngineLoad_; } else { result.iOOBDCalculatedEngineLoad_ = (DolphinConfig.IO)this.iOOBDCalculatedEngineLoadBuilder_.build(); }  if (this.iOOBDMassAirFlowRateBuilder_ == null) { result.iOOBDMassAirFlowRate_ = this.iOOBDMassAirFlowRate_; } else { result.iOOBDMassAirFlowRate_ = (DolphinConfig.IO)this.iOOBDMassAirFlowRateBuilder_.build(); }  if (this.iOOBDThrottlePositionBuilder_ == null) { result.iOOBDThrottlePosition_ = this.iOOBDThrottlePosition_; } else { result.iOOBDThrottlePosition_ = (DolphinConfig.IO)this.iOOBDThrottlePositionBuilder_.build(); }  if (this.iOOBDRunTimeSinceEngineStartBuilder_ == null) { result.iOOBDRunTimeSinceEngineStart_ = this.iOOBDRunTimeSinceEngineStart_; } else { result.iOOBDRunTimeSinceEngineStart_ = (DolphinConfig.IO)this.iOOBDRunTimeSinceEngineStartBuilder_.build(); }  if (this.iOOBDFuelTankLevelInputBuilder_ == null) { result.iOOBDFuelTankLevelInput_ = this.iOOBDFuelTankLevelInput_; } else { result.iOOBDFuelTankLevelInput_ = (DolphinConfig.IO)this.iOOBDFuelTankLevelInputBuilder_.build(); }  if (this.iOOBDDistanceTraveledSinceCodesClearedBuilder_ == null) { result.iOOBDDistanceTraveledSinceCodesCleared_ = this.iOOBDDistanceTraveledSinceCodesCleared_; } else { result.iOOBDDistanceTraveledSinceCodesCleared_ = (DolphinConfig.IO)this.iOOBDDistanceTraveledSinceCodesClearedBuilder_.build(); }  if (this.iOOBDAbsoluteThrottlePositionDBuilder_ == null) { result.iOOBDAbsoluteThrottlePositionD_ = this.iOOBDAbsoluteThrottlePositionD_; } else { result.iOOBDAbsoluteThrottlePositionD_ = (DolphinConfig.IO)this.iOOBDAbsoluteThrottlePositionDBuilder_.build(); }  if (this.iOOBDTimeRunWithMILOnBuilder_ == null) { result.iOOBDTimeRunWithMILOn_ = this.iOOBDTimeRunWithMILOn_; } else { result.iOOBDTimeRunWithMILOn_ = (DolphinConfig.IO)this.iOOBDTimeRunWithMILOnBuilder_.build(); }  if (this.iOOBDEngineOilTemperatureBuilder_ == null) { result.iOOBDEngineOilTemperature_ = this.iOOBDEngineOilTemperature_; } else { result.iOOBDEngineOilTemperature_ = (DolphinConfig.IO)this.iOOBDEngineOilTemperatureBuilder_.build(); }  if (this.iOOBDFuelSystem1StatusBuilder_ == null) { result.iOOBDFuelSystem1Status_ = this.iOOBDFuelSystem1Status_; } else { result.iOOBDFuelSystem1Status_ = (DolphinConfig.IO)this.iOOBDFuelSystem1StatusBuilder_.build(); }  if (this.iOOBDFuelSystem2StatusBuilder_ == null) { result.iOOBDFuelSystem2Status_ = this.iOOBDFuelSystem2Status_; } else { result.iOOBDFuelSystem2Status_ = (DolphinConfig.IO)this.iOOBDFuelSystem2StatusBuilder_.build(); }  if (this.iOOBDOxygenSensor1VoltageBuilder_ == null) { result.iOOBDOxygenSensor1Voltage_ = this.iOOBDOxygenSensor1Voltage_; } else { result.iOOBDOxygenSensor1Voltage_ = (DolphinConfig.IO)this.iOOBDOxygenSensor1VoltageBuilder_.build(); }  if (this.iOOBDOxygenSensor1ShortTermFuelTrimBuilder_ == null) { result.iOOBDOxygenSensor1ShortTermFuelTrim_ = this.iOOBDOxygenSensor1ShortTermFuelTrim_; } else { result.iOOBDOxygenSensor1ShortTermFuelTrim_ = (DolphinConfig.IO)this.iOOBDOxygenSensor1ShortTermFuelTrimBuilder_.build(); }  if (this.iOOBDOxygenSensor2VoltageBuilder_ == null) { result.iOOBDOxygenSensor2Voltage_ = this.iOOBDOxygenSensor2Voltage_; } else { result.iOOBDOxygenSensor2Voltage_ = (DolphinConfig.IO)this.iOOBDOxygenSensor2VoltageBuilder_.build(); }  if (this.iOOBDOxygenSensor2ShortTermFuelTrimBuilder_ == null) { result.iOOBDOxygenSensor2ShortTermFuelTrim_ = this.iOOBDOxygenSensor2ShortTermFuelTrim_; } else { result.iOOBDOxygenSensor2ShortTermFuelTrim_ = (DolphinConfig.IO)this.iOOBDOxygenSensor2ShortTermFuelTrimBuilder_.build(); }  if (this.iOOBDOxygenSensor3VoltageBuilder_ == null) { result.iOOBDOxygenSensor3Voltage_ = this.iOOBDOxygenSensor3Voltage_; } else { result.iOOBDOxygenSensor3Voltage_ = (DolphinConfig.IO)this.iOOBDOxygenSensor3VoltageBuilder_.build(); }  if (this.iOOBDOxygenSensor3ShortTermFuelTrimBuilder_ == null) { result.iOOBDOxygenSensor3ShortTermFuelTrim_ = this.iOOBDOxygenSensor3ShortTermFuelTrim_; } else { result.iOOBDOxygenSensor3ShortTermFuelTrim_ = (DolphinConfig.IO)this.iOOBDOxygenSensor3ShortTermFuelTrimBuilder_.build(); }  if (this.iOOBDOxygenSensor4VoltageBuilder_ == null) { result.iOOBDOxygenSensor4Voltage_ = this.iOOBDOxygenSensor4Voltage_; } else { result.iOOBDOxygenSensor4Voltage_ = (DolphinConfig.IO)this.iOOBDOxygenSensor4VoltageBuilder_.build(); }  if (this.iOOBDOxygenSensor4ShortTermFuelTrimBuilder_ == null) { result.iOOBDOxygenSensor4ShortTermFuelTrim_ = this.iOOBDOxygenSensor4ShortTermFuelTrim_; } else { result.iOOBDOxygenSensor4ShortTermFuelTrim_ = (DolphinConfig.IO)this.iOOBDOxygenSensor4ShortTermFuelTrimBuilder_.build(); }  if (this.iOCANBusTachograph1WorkingState1Builder_ == null) { result.iOCANBusTachograph1WorkingState1_ = this.iOCANBusTachograph1WorkingState1_; } else { result.iOCANBusTachograph1WorkingState1_ = (DolphinConfig.IO)this.iOCANBusTachograph1WorkingState1Builder_.build(); }  if (this.iOCANBusTachograph1WorkingState2Builder_ == null) { result.iOCANBusTachograph1WorkingState2_ = this.iOCANBusTachograph1WorkingState2_; } else { result.iOCANBusTachograph1WorkingState2_ = (DolphinConfig.IO)this.iOCANBusTachograph1WorkingState2Builder_.build(); }  if (this.iOCANBusTachograph1VehicleMotionBuilder_ == null) { result.iOCANBusTachograph1VehicleMotion_ = this.iOCANBusTachograph1VehicleMotion_; } else { result.iOCANBusTachograph1VehicleMotion_ = (DolphinConfig.IO)this.iOCANBusTachograph1VehicleMotionBuilder_.build(); }  if (this.iOCANBusTachograph1Driv1TimeRelStatesBuilder_ == null) { result.iOCANBusTachograph1Driv1TimeRelStates_ = this.iOCANBusTachograph1Driv1TimeRelStates_; } else { result.iOCANBusTachograph1Driv1TimeRelStates_ = (DolphinConfig.IO)this.iOCANBusTachograph1Driv1TimeRelStatesBuilder_.build(); }  if (this.iOCANBusTachograph1Driver1CardBuilder_ == null) { result.iOCANBusTachograph1Driver1Card_ = this.iOCANBusTachograph1Driver1Card_; } else { result.iOCANBusTachograph1Driver1Card_ = (DolphinConfig.IO)this.iOCANBusTachograph1Driver1CardBuilder_.build(); }  if (this.iOCANBusTachograph1VehicleOverspeedBuilder_ == null) { result.iOCANBusTachograph1VehicleOverspeed_ = this.iOCANBusTachograph1VehicleOverspeed_; } else { result.iOCANBusTachograph1VehicleOverspeed_ = (DolphinConfig.IO)this.iOCANBusTachograph1VehicleOverspeedBuilder_.build(); }  if (this.iOCANBusTachograph1Driv2TimeRelStatesBuilder_ == null) { result.iOCANBusTachograph1Driv2TimeRelStates_ = this.iOCANBusTachograph1Driv2TimeRelStates_; } else { result.iOCANBusTachograph1Driv2TimeRelStates_ = (DolphinConfig.IO)this.iOCANBusTachograph1Driv2TimeRelStatesBuilder_.build(); }  if (this.iOCANBusTachograph1Driver2CardBuilder_ == null) { result.iOCANBusTachograph1Driver2Card_ = this.iOCANBusTachograph1Driver2Card_; } else { result.iOCANBusTachograph1Driver2Card_ = (DolphinConfig.IO)this.iOCANBusTachograph1Driver2CardBuilder_.build(); }  if (this.iOCANBusTachograph1SystemEventBuilder_ == null) { result.iOCANBusTachograph1SystemEvent_ = this.iOCANBusTachograph1SystemEvent_; } else { result.iOCANBusTachograph1SystemEvent_ = (DolphinConfig.IO)this.iOCANBusTachograph1SystemEventBuilder_.build(); }  if (this.iOCANBusTachograph1HandlingInformationBuilder_ == null) { result.iOCANBusTachograph1HandlingInformation_ = this.iOCANBusTachograph1HandlingInformation_; } else { result.iOCANBusTachograph1HandlingInformation_ = (DolphinConfig.IO)this.iOCANBusTachograph1HandlingInformationBuilder_.build(); }  if (this.iOCANBusTachograph1TachographPerformanceBuilder_ == null) { result.iOCANBusTachograph1TachographPerformance_ = this.iOCANBusTachograph1TachographPerformance_; } else { result.iOCANBusTachograph1TachographPerformance_ = (DolphinConfig.IO)this.iOCANBusTachograph1TachographPerformanceBuilder_.build(); }  if (this.iOCANBusTachograph1DirectionIndicatorBuilder_ == null) { result.iOCANBusTachograph1DirectionIndicator_ = this.iOCANBusTachograph1DirectionIndicator_; } else { result.iOCANBusTachograph1DirectionIndicator_ = (DolphinConfig.IO)this.iOCANBusTachograph1DirectionIndicatorBuilder_.build(); }  if (this.iOCANBusTachograph1VehicleSpeedBuilder_ == null) { result.iOCANBusTachograph1VehicleSpeed_ = this.iOCANBusTachograph1VehicleSpeed_; } else { result.iOCANBusTachograph1VehicleSpeed_ = (DolphinConfig.IO)this.iOCANBusTachograph1VehicleSpeedBuilder_.build(); }  if (this.iOCANBusEngineTemperature1EngineCoolantTemperatureBuilder_ == null) { result.iOCANBusEngineTemperature1EngineCoolantTemperature_ = this.iOCANBusEngineTemperature1EngineCoolantTemperature_; } else { result.iOCANBusEngineTemperature1EngineCoolantTemperature_ = (DolphinConfig.IO)this.iOCANBusEngineTemperature1EngineCoolantTemperatureBuilder_.build(); }  if (this.iOCANBusElectronicEngineController1ActualEnginePercentBuilder_ == null) { result.iOCANBusElectronicEngineController1ActualEnginePercent_ = this.iOCANBusElectronicEngineController1ActualEnginePercent_; } else { result.iOCANBusElectronicEngineController1ActualEnginePercent_ = (DolphinConfig.IO)this.iOCANBusElectronicEngineController1ActualEnginePercentBuilder_.build(); }  if (this.iOCANBusElectronicEngineController1EngineSpeedBuilder_ == null) { result.iOCANBusElectronicEngineController1EngineSpeed_ = this.iOCANBusElectronicEngineController1EngineSpeed_; } else { result.iOCANBusElectronicEngineController1EngineSpeed_ = (DolphinConfig.IO)this.iOCANBusElectronicEngineController1EngineSpeedBuilder_.build(); }  if (this.iOCANBusEngineHoursEngineTotalHoursBuilder_ == null) { result.iOCANBusEngineHoursEngineTotalHours_ = this.iOCANBusEngineHoursEngineTotalHours_; } else { result.iOCANBusEngineHoursEngineTotalHours_ = (DolphinConfig.IO)this.iOCANBusEngineHoursEngineTotalHoursBuilder_.build(); }  if (this.iOCANBusVehicleDistanceTotalVehicleDistanceBuilder_ == null) { result.iOCANBusVehicleDistanceTotalVehicleDistance_ = this.iOCANBusVehicleDistanceTotalVehicleDistance_; } else { result.iOCANBusVehicleDistanceTotalVehicleDistance_ = (DolphinConfig.IO)this.iOCANBusVehicleDistanceTotalVehicleDistanceBuilder_.build(); }  if (this.iOCANBusHighResolutionFuelConsumptionTotalFuelUsedBuilder_ == null) { result.iOCANBusHighResolutionFuelConsumptionTotalFuelUsed_ = this.iOCANBusHighResolutionFuelConsumptionTotalFuelUsed_; } else { result.iOCANBusHighResolutionFuelConsumptionTotalFuelUsed_ = (DolphinConfig.IO)this.iOCANBusHighResolutionFuelConsumptionTotalFuelUsedBuilder_.build(); }  if (this.iOCANBusDashDisplayFuelLevel1Builder_ == null) { result.iOCANBusDashDisplayFuelLevel1_ = this.iOCANBusDashDisplayFuelLevel1_; } else { result.iOCANBusDashDisplayFuelLevel1_ = (DolphinConfig.IO)this.iOCANBusDashDisplayFuelLevel1Builder_.build(); }  if (this.iOCANBusAmbientConditionsAmbientAirTemperatureBuilder_ == null) { result.iOCANBusAmbientConditionsAmbientAirTemperature_ = this.iOCANBusAmbientConditionsAmbientAirTemperature_; } else { result.iOCANBusAmbientConditionsAmbientAirTemperature_ = (DolphinConfig.IO)this.iOCANBusAmbientConditionsAmbientAirTemperatureBuilder_.build(); }  if (this.iOCANBusFuelEconomyFuelRateBuilder_ == null) { result.iOCANBusFuelEconomyFuelRate_ = this.iOCANBusFuelEconomyFuelRate_; } else { result.iOCANBusFuelEconomyFuelRate_ = (DolphinConfig.IO)this.iOCANBusFuelEconomyFuelRateBuilder_.build(); }  if (this.iOCANBusFuelEconomyInstantaneousFuelEconomyBuilder_ == null) { result.iOCANBusFuelEconomyInstantaneousFuelEconomy_ = this.iOCANBusFuelEconomyInstantaneousFuelEconomy_; } else { result.iOCANBusFuelEconomyInstantaneousFuelEconomy_ = (DolphinConfig.IO)this.iOCANBusFuelEconomyInstantaneousFuelEconomyBuilder_.build(); }  if (this.iOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit1Builder_ == null) { result.iOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit1_ = this.iOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit1_; } else { result.iOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit1_ = (DolphinConfig.IO)this.iOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit1Builder_.build(); }  if (this.iOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit2Builder_ == null) { result.iOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit2_ = this.iOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit2_; } else { result.iOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit2_ = (DolphinConfig.IO)this.iOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit2Builder_.build(); }  if (this.iOCANBusAftertreatmentDieselExhaustFluidTankInformationTank1LevelBuilder_ == null) { result.iOCANBusAftertreatmentDieselExhaustFluidTankInformationTank1Level_ = this.iOCANBusAftertreatmentDieselExhaustFluidTankInformationTank1Level_; } else { result.iOCANBusAftertreatmentDieselExhaustFluidTankInformationTank1Level_ = (DolphinConfig.IO)this.iOCANBusAftertreatmentDieselExhaustFluidTankInformationTank1LevelBuilder_.build(); }  if (this.iOCANBusTruckBusElectronicEngineController2AcceleratorPedalPosition1Builder_ == null) { result.iOCANBusTruckBusElectronicEngineController2AcceleratorPedalPosition1_ = this.iOCANBusTruckBusElectronicEngineController2AcceleratorPedalPosition1_; } else { result.iOCANBusTruckBusElectronicEngineController2AcceleratorPedalPosition1_ = (DolphinConfig.IO)this.iOCANBusTruckBusElectronicEngineController2AcceleratorPedalPosition1Builder_.build(); }  if (this.iOCANBusTruckBusElectronicEngineController2EnginePercentLoadBuilder_ == null) { result.iOCANBusTruckBusElectronicEngineController2EnginePercentLoad_ = this.iOCANBusTruckBusElectronicEngineController2EnginePercentLoad_; } else { result.iOCANBusTruckBusElectronicEngineController2EnginePercentLoad_ = (DolphinConfig.IO)this.iOCANBusTruckBusElectronicEngineController2EnginePercentLoadBuilder_.build(); }  if (this.iOCANBusTruckVehicleWeightAxleWeight1Builder_ == null) { result.iOCANBusTruckVehicleWeightAxleWeight1_ = this.iOCANBusTruckVehicleWeightAxleWeight1_; } else { result.iOCANBusTruckVehicleWeightAxleWeight1_ = (DolphinConfig.IO)this.iOCANBusTruckVehicleWeightAxleWeight1Builder_.build(); }  if (this.iOCANBusTruckVehicleWeightAxleWeight2Builder_ == null) { result.iOCANBusTruckVehicleWeightAxleWeight2_ = this.iOCANBusTruckVehicleWeightAxleWeight2_; } else { result.iOCANBusTruckVehicleWeightAxleWeight2_ = (DolphinConfig.IO)this.iOCANBusTruckVehicleWeightAxleWeight2Builder_.build(); }  if (this.iOCANBusTruckVehicleWeightAxleWeight3Builder_ == null) { result.iOCANBusTruckVehicleWeightAxleWeight3_ = this.iOCANBusTruckVehicleWeightAxleWeight3_; } else { result.iOCANBusTruckVehicleWeightAxleWeight3_ = (DolphinConfig.IO)this.iOCANBusTruckVehicleWeightAxleWeight3Builder_.build(); }  if (this.iOCANBusTruckServiceInformationServiceDistanceBuilder_ == null) { result.iOCANBusTruckServiceInformationServiceDistance_ = this.iOCANBusTruckServiceInformationServiceDistance_; } else { result.iOCANBusTruckServiceInformationServiceDistance_ = (DolphinConfig.IO)this.iOCANBusTruckServiceInformationServiceDistanceBuilder_.build(); }  if (this.iOCANBusTruckPTODriveEngagementPTOEngageStatBuilder_ == null) { result.iOCANBusTruckPTODriveEngagementPTOEngageStat_ = this.iOCANBusTruckPTODriveEngagementPTOEngageStat_; } else { result.iOCANBusTruckPTODriveEngagementPTOEngageStat_ = (DolphinConfig.IO)this.iOCANBusTruckPTODriveEngagementPTOEngageStatBuilder_.build(); }  if (this.iOCANBusTruckCombinationVehicleWeightGrossCombinationVehicleWeightBuilder_ == null) { result.iOCANBusTruckCombinationVehicleWeightGrossCombinationVehicleWeight_ = this.iOCANBusTruckCombinationVehicleWeightGrossCombinationVehicleWeight_; } else { result.iOCANBusTruckCombinationVehicleWeightGrossCombinationVehicleWeight_ = (DolphinConfig.IO)this.iOCANBusTruckCombinationVehicleWeightGrossCombinationVehicleWeightBuilder_.build(); }  if (this.iOCANBusTruckBusElectronicRetarderController1RetarderTorqueModeBuilder_ == null) { result.iOCANBusTruckBusElectronicRetarderController1RetarderTorqueMode_ = this.iOCANBusTruckBusElectronicRetarderController1RetarderTorqueMode_; } else { result.iOCANBusTruckBusElectronicRetarderController1RetarderTorqueMode_ = (DolphinConfig.IO)this.iOCANBusTruckBusElectronicRetarderController1RetarderTorqueModeBuilder_.build(); }  if (this.iOCANBusTruckBusElectronicRetarderController1RetarderSelectionBuilder_ == null) { result.iOCANBusTruckBusElectronicRetarderController1RetarderSelection_ = this.iOCANBusTruckBusElectronicRetarderController1RetarderSelection_; } else { result.iOCANBusTruckBusElectronicRetarderController1RetarderSelection_ = (DolphinConfig.IO)this.iOCANBusTruckBusElectronicRetarderController1RetarderSelectionBuilder_.build(); }  if (this.iOCANBusBusDoorControl1DoorPositionBuilder_ == null) { result.iOCANBusBusDoorControl1DoorPosition_ = this.iOCANBusBusDoorControl1DoorPosition_; } else { result.iOCANBusBusDoorControl1DoorPosition_ = (DolphinConfig.IO)this.iOCANBusBusDoorControl1DoorPositionBuilder_.build(); }  if (this.iOCANBusBusDoorControl1RampWheelChairliftBuilder_ == null) { result.iOCANBusBusDoorControl1RampWheelChairlift_ = this.iOCANBusBusDoorControl1RampWheelChairlift_; } else { result.iOCANBusBusDoorControl1RampWheelChairlift_ = (DolphinConfig.IO)this.iOCANBusBusDoorControl1RampWheelChairliftBuilder_.build(); }  if (this.iOCANBusBusDoorControl1DoorsStatus2Builder_ == null) { result.iOCANBusBusDoorControl1DoorsStatus2_ = this.iOCANBusBusDoorControl1DoorsStatus2_; } else { result.iOCANBusBusDoorControl1DoorsStatus2_ = (DolphinConfig.IO)this.iOCANBusBusDoorControl1DoorsStatus2Builder_.build(); }  if (this.iOCANBusBusDoorControl2Builder_ == null) { result.iOCANBusBusDoorControl2_ = this.iOCANBusBusDoorControl2_; } else { result.iOCANBusBusDoorControl2_ = (DolphinConfig.IO)this.iOCANBusBusDoorControl2Builder_.build(); }  if (this.iOCANBusBrakeLiningRemainingAxleFrontLeftWheelBuilder_ == null) { result.iOCANBusBrakeLiningRemainingAxleFrontLeftWheel_ = this.iOCANBusBrakeLiningRemainingAxleFrontLeftWheel_; } else { result.iOCANBusBrakeLiningRemainingAxleFrontLeftWheel_ = (DolphinConfig.IO)this.iOCANBusBrakeLiningRemainingAxleFrontLeftWheelBuilder_.build(); }  if (this.iOCANBusBrakeLiningRemainingAxleFrontRightWheelBuilder_ == null) { result.iOCANBusBrakeLiningRemainingAxleFrontRightWheel_ = this.iOCANBusBrakeLiningRemainingAxleFrontRightWheel_; } else { result.iOCANBusBrakeLiningRemainingAxleFrontRightWheel_ = (DolphinConfig.IO)this.iOCANBusBrakeLiningRemainingAxleFrontRightWheelBuilder_.build(); }  if (this.iOCANBusBrakeLiningRemainingAxleRear1LeftWheelBuilder_ == null) { result.iOCANBusBrakeLiningRemainingAxleRear1LeftWheel_ = this.iOCANBusBrakeLiningRemainingAxleRear1LeftWheel_; } else { result.iOCANBusBrakeLiningRemainingAxleRear1LeftWheel_ = (DolphinConfig.IO)this.iOCANBusBrakeLiningRemainingAxleRear1LeftWheelBuilder_.build(); }  if (this.iOCANBusBrakeLiningRemainingAxleRear1RightWheelBuilder_ == null) { result.iOCANBusBrakeLiningRemainingAxleRear1RightWheel_ = this.iOCANBusBrakeLiningRemainingAxleRear1RightWheel_; } else { result.iOCANBusBrakeLiningRemainingAxleRear1RightWheel_ = (DolphinConfig.IO)this.iOCANBusBrakeLiningRemainingAxleRear1RightWheelBuilder_.build(); }  if (this.iOCANBusBrakeLiningRemainingAxleRear2LeftWheelBuilder_ == null) { result.iOCANBusBrakeLiningRemainingAxleRear2LeftWheel_ = this.iOCANBusBrakeLiningRemainingAxleRear2LeftWheel_; } else { result.iOCANBusBrakeLiningRemainingAxleRear2LeftWheel_ = (DolphinConfig.IO)this.iOCANBusBrakeLiningRemainingAxleRear2LeftWheelBuilder_.build(); }  if (this.iOCANBusBrakeLiningRemainingAxleRear2RightWheelBuilder_ == null) { result.iOCANBusBrakeLiningRemainingAxleRear2RightWheel_ = this.iOCANBusBrakeLiningRemainingAxleRear2RightWheel_; } else { result.iOCANBusBrakeLiningRemainingAxleRear2RightWheel_ = (DolphinConfig.IO)this.iOCANBusBrakeLiningRemainingAxleRear2RightWheelBuilder_.build(); }  if (this.iOCANBusBrakeLiningRemainingAxleRear3LeftWheelBuilder_ == null) { result.iOCANBusBrakeLiningRemainingAxleRear3LeftWheel_ = this.iOCANBusBrakeLiningRemainingAxleRear3LeftWheel_; } else { result.iOCANBusBrakeLiningRemainingAxleRear3LeftWheel_ = (DolphinConfig.IO)this.iOCANBusBrakeLiningRemainingAxleRear3LeftWheelBuilder_.build(); }  if (this.iOCANBusBrakeLiningRemainingAxleRear3RightWheelBuilder_ == null) { result.iOCANBusBrakeLiningRemainingAxleRear3RightWheel_ = this.iOCANBusBrakeLiningRemainingAxleRear3RightWheel_; } else { result.iOCANBusBrakeLiningRemainingAxleRear3RightWheel_ = (DolphinConfig.IO)this.iOCANBusBrakeLiningRemainingAxleRear3RightWheelBuilder_.build(); }  if (this.iOCANBusTruckBusCruiseControlBuilder_ == null) { result.iOCANBusTruckBusCruiseControl_ = this.iOCANBusTruckBusCruiseControl_; } else { result.iOCANBusTruckBusCruiseControl_ = (DolphinConfig.IO)this.iOCANBusTruckBusCruiseControlBuilder_.build(); }  if (this.iOCANBusBusAlternatorSpeedAlternatorStatus1Builder_ == null) { result.iOCANBusBusAlternatorSpeedAlternatorStatus1_ = this.iOCANBusBusAlternatorSpeedAlternatorStatus1_; } else { result.iOCANBusBusAlternatorSpeedAlternatorStatus1_ = (DolphinConfig.IO)this.iOCANBusBusAlternatorSpeedAlternatorStatus1Builder_.build(); }  if (this.iOCANBusBusAlternatorSpeedAlternatorStatus2Builder_ == null) { result.iOCANBusBusAlternatorSpeedAlternatorStatus2_ = this.iOCANBusBusAlternatorSpeedAlternatorStatus2_; } else { result.iOCANBusBusAlternatorSpeedAlternatorStatus2_ = (DolphinConfig.IO)this.iOCANBusBusAlternatorSpeedAlternatorStatus2Builder_.build(); }  if (this.iOCANBusBusAlternatorSpeedAlternatorStatus3Builder_ == null) { result.iOCANBusBusAlternatorSpeedAlternatorStatus3_ = this.iOCANBusBusAlternatorSpeedAlternatorStatus3_; } else { result.iOCANBusBusAlternatorSpeedAlternatorStatus3_ = (DolphinConfig.IO)this.iOCANBusBusAlternatorSpeedAlternatorStatus3Builder_.build(); }  if (this.iOCANBusBusAlternatorSpeedAlternatorStatus4Builder_ == null) { result.iOCANBusBusAlternatorSpeedAlternatorStatus4_ = this.iOCANBusBusAlternatorSpeedAlternatorStatus4_; } else { result.iOCANBusBusAlternatorSpeedAlternatorStatus4_ = (DolphinConfig.IO)this.iOCANBusBusAlternatorSpeedAlternatorStatus4Builder_.build(); }  if (this.iOCANBusBusElectronicTransmissionController2SelectedGearBuilder_ == null) { result.iOCANBusBusElectronicTransmissionController2SelectedGear_ = this.iOCANBusBusElectronicTransmissionController2SelectedGear_; } else { result.iOCANBusBusElectronicTransmissionController2SelectedGear_ = (DolphinConfig.IO)this.iOCANBusBusElectronicTransmissionController2SelectedGearBuilder_.build(); }  if (this.iOCANBusBusElectronicTransmissionController2CurrentGearBuilder_ == null) { result.iOCANBusBusElectronicTransmissionController2CurrentGear_ = this.iOCANBusBusElectronicTransmissionController2CurrentGear_; } else { result.iOCANBusBusElectronicTransmissionController2CurrentGear_ = (DolphinConfig.IO)this.iOCANBusBusElectronicTransmissionController2CurrentGearBuilder_.build(); }  if (this.iOCANBusBusAirSuspensionControl4FrontAxleLeftBuilder_ == null) { result.iOCANBusBusAirSuspensionControl4FrontAxleLeft_ = this.iOCANBusBusAirSuspensionControl4FrontAxleLeft_; } else { result.iOCANBusBusAirSuspensionControl4FrontAxleLeft_ = (DolphinConfig.IO)this.iOCANBusBusAirSuspensionControl4FrontAxleLeftBuilder_.build(); }  if (this.iOCANBusBusAirSuspensionControl4FrontAxleRightBuilder_ == null) { result.iOCANBusBusAirSuspensionControl4FrontAxleRight_ = this.iOCANBusBusAirSuspensionControl4FrontAxleRight_; } else { result.iOCANBusBusAirSuspensionControl4FrontAxleRight_ = (DolphinConfig.IO)this.iOCANBusBusAirSuspensionControl4FrontAxleRightBuilder_.build(); }  if (this.iOCANBusBusAirSuspensionControl4RearAxleLeftBuilder_ == null) { result.iOCANBusBusAirSuspensionControl4RearAxleLeft_ = this.iOCANBusBusAirSuspensionControl4RearAxleLeft_; } else { result.iOCANBusBusAirSuspensionControl4RearAxleLeft_ = (DolphinConfig.IO)this.iOCANBusBusAirSuspensionControl4RearAxleLeftBuilder_.build(); }  if (this.iOCANBusBusAirSuspensionControl4RearAxlerightBuilder_ == null) { result.iOCANBusBusAirSuspensionControl4RearAxleright_ = this.iOCANBusBusAirSuspensionControl4RearAxleright_; } else { result.iOCANBusBusAirSuspensionControl4RearAxleright_ = (DolphinConfig.IO)this.iOCANBusBusAirSuspensionControl4RearAxlerightBuilder_.build(); }  if (this.iOCANBusDashDisplayFuelLevel2Builder_ == null) { result.iOCANBusDashDisplayFuelLevel2_ = this.iOCANBusDashDisplayFuelLevel2_; } else { result.iOCANBusDashDisplayFuelLevel2_ = (DolphinConfig.IO)this.iOCANBusDashDisplayFuelLevel2Builder_.build(); }  if (this.iOCANBusElectronicBrakeControllerBrakePedalPositionBuilder_ == null) { result.iOCANBusElectronicBrakeControllerBrakePedalPosition_ = this.iOCANBusElectronicBrakeControllerBrakePedalPosition_; } else { result.iOCANBusElectronicBrakeControllerBrakePedalPosition_ = (DolphinConfig.IO)this.iOCANBusElectronicBrakeControllerBrakePedalPositionBuilder_.build(); }  if (this.iOCANBusFuelConsumptionGaseousTotalFuelUsedBuilder_ == null) { result.iOCANBusFuelConsumptionGaseousTotalFuelUsed_ = this.iOCANBusFuelConsumptionGaseousTotalFuelUsed_; } else { result.iOCANBusFuelConsumptionGaseousTotalFuelUsed_ = (DolphinConfig.IO)this.iOCANBusFuelConsumptionGaseousTotalFuelUsedBuilder_.build(); }  if (this.iOCANBusTruckBusCruiseControlVehicleSpeedParkingBrakeSwitchBuilder_ == null) { result.iOCANBusTruckBusCruiseControlVehicleSpeedParkingBrakeSwitch_ = this.iOCANBusTruckBusCruiseControlVehicleSpeedParkingBrakeSwitch_; } else { result.iOCANBusTruckBusCruiseControlVehicleSpeedParkingBrakeSwitch_ = (DolphinConfig.IO)this.iOCANBusTruckBusCruiseControlVehicleSpeedParkingBrakeSwitchBuilder_.build(); }  if (this.iOCANBusTruckBusCruiseControlVehicleSpeedWheelBasedSpeedBuilder_ == null) { result.iOCANBusTruckBusCruiseControlVehicleSpeedWheelBasedSpeed_ = this.iOCANBusTruckBusCruiseControlVehicleSpeedWheelBasedSpeed_; } else { result.iOCANBusTruckBusCruiseControlVehicleSpeedWheelBasedSpeed_ = (DolphinConfig.IO)this.iOCANBusTruckBusCruiseControlVehicleSpeedWheelBasedSpeedBuilder_.build(); }  if (this.iOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlActiveBuilder_ == null) { result.iOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlActive_ = this.iOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlActive_; } else { result.iOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlActive_ = (DolphinConfig.IO)this.iOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlActiveBuilder_.build(); }  if (this.iOCANBusTruckBusCruiseControlVehicleSpeedBrakeSwitchBuilder_ == null) { result.iOCANBusTruckBusCruiseControlVehicleSpeedBrakeSwitch_ = this.iOCANBusTruckBusCruiseControlVehicleSpeedBrakeSwitch_; } else { result.iOCANBusTruckBusCruiseControlVehicleSpeedBrakeSwitch_ = (DolphinConfig.IO)this.iOCANBusTruckBusCruiseControlVehicleSpeedBrakeSwitchBuilder_.build(); }  if (this.iOCANBusTruckBusCruiseControlVehicleSpeedClutchSwitchBuilder_ == null) { result.iOCANBusTruckBusCruiseControlVehicleSpeedClutchSwitch_ = this.iOCANBusTruckBusCruiseControlVehicleSpeedClutchSwitch_; } else { result.iOCANBusTruckBusCruiseControlVehicleSpeedClutchSwitch_ = (DolphinConfig.IO)this.iOCANBusTruckBusCruiseControlVehicleSpeedClutchSwitchBuilder_.build(); }  if (this.iOCANBusTruckBusCruiseControlVehicleSpeedPtoStateBuilder_ == null) { result.iOCANBusTruckBusCruiseControlVehicleSpeedPtoState_ = this.iOCANBusTruckBusCruiseControlVehicleSpeedPtoState_; } else { result.iOCANBusTruckBusCruiseControlVehicleSpeedPtoState_ = (DolphinConfig.IO)this.iOCANBusTruckBusCruiseControlVehicleSpeedPtoStateBuilder_.build(); }  if (this.iOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlStatesBuilder_ == null) { result.iOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlStates_ = this.iOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlStates_; } else { result.iOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlStates_ = (DolphinConfig.IO)this.iOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlStatesBuilder_.build(); }  if (this.iOCANBusBusVehicleElectricalPowerHybridBatteryPackRemainingChargeBuilder_ == null) { result.iOCANBusBusVehicleElectricalPowerHybridBatteryPackRemainingCharge_ = this.iOCANBusBusVehicleElectricalPowerHybridBatteryPackRemainingCharge_; } else { result.iOCANBusBusVehicleElectricalPowerHybridBatteryPackRemainingCharge_ = (DolphinConfig.IO)this.iOCANBusBusVehicleElectricalPowerHybridBatteryPackRemainingChargeBuilder_.build(); }  if (this.iOCANBusBusVehicleDynamicStabilityControl2SteeringWheelAngleBuilder_ == null) { result.iOCANBusBusVehicleDynamicStabilityControl2SteeringWheelAngle_ = this.iOCANBusBusVehicleDynamicStabilityControl2SteeringWheelAngle_; } else { result.iOCANBusBusVehicleDynamicStabilityControl2SteeringWheelAngle_ = (DolphinConfig.IO)this.iOCANBusBusVehicleDynamicStabilityControl2SteeringWheelAngleBuilder_.build(); }  if (this.iOCANBusElectronicEngineController14FuelTypeBuilder_ == null) { result.iOCANBusElectronicEngineController14FuelType_ = this.iOCANBusElectronicEngineController14FuelType_; } else { result.iOCANBusElectronicEngineController14FuelType_ = (DolphinConfig.IO)this.iOCANBusElectronicEngineController14FuelTypeBuilder_.build(); }  if (this.iOCANBusEngineFluidLevelPressureEngineOilLevelBuilder_ == null) { result.iOCANBusEngineFluidLevelPressureEngineOilLevel_ = this.iOCANBusEngineFluidLevelPressureEngineOilLevel_; } else { result.iOCANBusEngineFluidLevelPressureEngineOilLevel_ = (DolphinConfig.IO)this.iOCANBusEngineFluidLevelPressureEngineOilLevelBuilder_.build(); }  if (this.iOCANBusEngineFluidLevelPressureEngineOilPressureBuilder_ == null) { result.iOCANBusEngineFluidLevelPressureEngineOilPressure_ = this.iOCANBusEngineFluidLevelPressureEngineOilPressure_; } else { result.iOCANBusEngineFluidLevelPressureEngineOilPressure_ = (DolphinConfig.IO)this.iOCANBusEngineFluidLevelPressureEngineOilPressureBuilder_.build(); }  if (this.iOCANBusEngineFluidLevelPressureCoolantLevelBuilder_ == null) { result.iOCANBusEngineFluidLevelPressureCoolantLevel_ = this.iOCANBusEngineFluidLevelPressureCoolantLevel_; } else { result.iOCANBusEngineFluidLevelPressureCoolantLevel_ = (DolphinConfig.IO)this.iOCANBusEngineFluidLevelPressureCoolantLevelBuilder_.build(); }  if (this.iOCANBusTellTaleStatusBuilder_ == null) { result.iOCANBusTellTaleStatus_ = this.iOCANBusTellTaleStatus_; } else { result.iOCANBusTellTaleStatus_ = (DolphinConfig.IO)this.iOCANBusTellTaleStatusBuilder_.build(); }  if (this.iOCANBusFuelConsumptionEngineTotalFuelUsedBuilder_ == null) { result.iOCANBusFuelConsumptionEngineTotalFuelUsed_ = this.iOCANBusFuelConsumptionEngineTotalFuelUsed_; } else { result.iOCANBusFuelConsumptionEngineTotalFuelUsed_ = (DolphinConfig.IO)this.iOCANBusFuelConsumptionEngineTotalFuelUsedBuilder_.build(); }  if (this.iOCANBusTruckVehicleWeightAxleWeight4Builder_ == null) { result.iOCANBusTruckVehicleWeightAxleWeight4_ = this.iOCANBusTruckVehicleWeightAxleWeight4_; } else { result.iOCANBusTruckVehicleWeightAxleWeight4_ = (DolphinConfig.IO)this.iOCANBusTruckVehicleWeightAxleWeight4Builder_.build(); }  onBuilt(); return result; } public Builder clone() { return (Builder)super.clone(); } public Builder setField(Descriptors.FieldDescriptor field, Object value) { return (Builder)super.setField(field, value); } public Builder clearField(Descriptors.FieldDescriptor field) { return (Builder)super.clearField(field); } public Builder clearOneof(Descriptors.OneofDescriptor oneof) { return (Builder)super.clearOneof(oneof); } public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) { return (Builder)super.setRepeatedField(field, index, value); } public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) { return (Builder)super.addRepeatedField(field, value); } public Builder mergeFrom(Message other) { if (other instanceof DolphinConfig.Config) return mergeFrom((DolphinConfig.Config)other);  super.mergeFrom(other); return this; } public Builder mergeFrom(DolphinConfig.Config other) { if (other == DolphinConfig.Config.getDefaultInstance()) return this;  if (other.serialPortBaudrate_ != 0) setSerialPortBaudrateValue(other.getSerialPortBaudrateValue());  if (other.getDoNotResetDeviceOnProblems()) setDoNotResetDeviceOnProblems(other.getDoNotResetDeviceOnProblems());  if (!other.getPassword().isEmpty()) { this.password_ = other.password_; onChanged(); }  if (other.movement_ != 0) setMovementValue(other.getMovementValue());  if (other.getMovementSensorSensitivity() != 0) setMovementSensorSensitivity(other.getMovementSensorSensitivity());  if (other.sleep_ != 0) setSleepValue(other.getSleepValue());  if (other.getSleepTimeout() != 0) setSleepTimeout(other.getSleepTimeout());  if (other.engineOn_ != 0) setEngineOnValue(other.getEngineOnValue());  if (other.getEngineOnDIN1()) setEngineOnDIN1(other.getEngineOnDIN1());  if (other.getEngineOnDIN2()) setEngineOnDIN2(other.getEngineOnDIN2());  if (other.getEngineOnMovementSensor()) setEngineOnMovementSensor(other.getEngineOnMovementSensor());  if (other.getEngineOnPowerSupplyAvailable()) setEngineOnPowerSupplyAvailable(other.getEngineOnPowerSupplyAvailable());  if (other.getEngineOnGpsSpeed() != 0) setEngineOnGpsSpeed(other.getEngineOnGpsSpeed());  if (other.getEngineOnCanRPM() != 0) setEngineOnCanRPM(other.getEngineOnCanRPM());  if (other.getEngineOnMinActiveStateDuration() != 0) setEngineOnMinActiveStateDuration(other.getEngineOnMinActiveStateDuration());  if (other.engineOnOperator_ != 0) setEngineOnOperatorValue(other.getEngineOnOperatorValue());  if (other.getEngineOnMovementStartDelay() != 0) setEngineOnMovementStartDelay(other.getEngineOnMovementStartDelay());  if (other.getEngineOnMovementStopDelay() != 0) setEngineOnMovementStopDelay(other.getEngineOnMovementStopDelay());  if (other.getEngineOnExternalVoltage() != 0) setEngineOnExternalVoltage(other.getEngineOnExternalVoltage());  if (other.getLedIndication()) setLedIndication(other.getLedIndication());  if (other.gNSS_ != 0) setGNSSValue(other.getGNSSValue());  if (other.getStaticNavigationEnabled()) setStaticNavigationEnabled(other.getStaticNavigationEnabled());  if (other.staticNavigationSource_ != 0) setStaticNavigationSourceValue(other.getStaticNavigationSourceValue());  if (other.recordsSaveAndSendMode_ != 0) setRecordsSaveAndSendModeValue(other.getRecordsSaveAndSendModeValue());  if (other.timeSynchronization_ != 0) setTimeSynchronizationValue(other.getTimeSynchronizationValue());  if (!other.getNTPServer().isEmpty()) { this.nTPServer_ = other.nTPServer_; onChanged(); }  if (other.getNTPInterval() != 0) setNTPInterval(other.getNTPInterval());  if (other.getSleepNoPowerTimeout() != 0) setSleepNoPowerTimeout(other.getSleepNoPowerTimeout());  if (other.getSendPing()) setSendPing(other.getSendPing());  if (other.getTimetableMode()) setTimetableMode(other.getTimetableMode());  if (other.getTimetableData() != ByteString.EMPTY) setTimetableData(other.getTimetableData());  if (other.hasService1()) mergeService1(other.getService1());  if (other.hasService2()) mergeService2(other.getService2());  if (other.hasService3()) mergeService3(other.getService3());  if (other.getAnalogInput1AverageTime() != 0) setAnalogInput1AverageTime(other.getAnalogInput1AverageTime());  if (other.getAnalogInput2AverageTime() != 0) setAnalogInput2AverageTime(other.getAnalogInput2AverageTime());  if (other.getAnalogInput3AverageTime() != 0) setAnalogInput3AverageTime(other.getAnalogInput3AverageTime());  if (other.bluetoothRadioMode_ != 0) setBluetoothRadioModeValue(other.getBluetoothRadioModeValue());  if (!other.getBluetoothName().isEmpty()) { this.bluetoothName_ = other.bluetoothName_; onChanged(); }  if (!other.getBluetoothPIN().isEmpty()) { this.bluetoothPIN_ = other.bluetoothPIN_; onChanged(); }  if (other.bluetoothSecurityMode_ != 0) setBluetoothSecurityModeValue(other.getBluetoothSecurityModeValue());  if (other.getBluetoothPowerDownOnSleep()) setBluetoothPowerDownOnSleep(other.getBluetoothPowerDownOnSleep());  if (other.bluetoothExternalConnectionMode_ != 0) setBluetoothExternalConnectionModeValue(other.getBluetoothExternalConnectionModeValue());  if (!other.getBluetoothExternalDeviceMAC().isEmpty()) { this.bluetoothExternalDeviceMAC_ = other.bluetoothExternalDeviceMAC_; onChanged(); }  if (!other.getBluetoothExternalDeviceName().isEmpty()) { this.bluetoothExternalDeviceName_ = other.bluetoothExternalDeviceName_; onChanged(); }  if (!other.getBluetoothExternalDevicePIN().isEmpty()) { this.bluetoothExternalDevicePIN_ = other.bluetoothExternalDevicePIN_; onChanged(); }  if (!other.getBluetoothAuthorizedMAC1().isEmpty()) { this.bluetoothAuthorizedMAC1_ = other.bluetoothAuthorizedMAC1_; onChanged(); }  if (!other.getBluetoothAuthorizedMAC2().isEmpty()) { this.bluetoothAuthorizedMAC2_ = other.bluetoothAuthorizedMAC2_; onChanged(); }  if (!other.getBluetoothAuthorizedMAC3().isEmpty()) { this.bluetoothAuthorizedMAC3_ = other.bluetoothAuthorizedMAC3_; onChanged(); }  if (!other.getBluetoothAuthorizedMAC4().isEmpty()) { this.bluetoothAuthorizedMAC4_ = other.bluetoothAuthorizedMAC4_; onChanged(); }  if (!other.getBluetoothAuthorizedMAC5().isEmpty()) { this.bluetoothAuthorizedMAC5_ = other.bluetoothAuthorizedMAC5_; onChanged(); }  if (other.getGPRSContextEnabled()) setGPRSContextEnabled(other.getGPRSContextEnabled());  if (!other.getGPRSApnName().isEmpty()) { this.gPRSApnName_ = other.gPRSApnName_; onChanged(); }  if (!other.getGPRSApnUsername().isEmpty()) { this.gPRSApnUsername_ = other.gPRSApnUsername_; onChanged(); }  if (!other.getGPRSApnPassword().isEmpty()) { this.gPRSApnPassword_ = other.gPRSApnPassword_; onChanged(); }  if (other.getGPRSCHAPAuthentication()) setGPRSCHAPAuthentication(other.getGPRSCHAPAuthentication());  if (other.getGPRSLinkTimeout() != 0) setGPRSLinkTimeout(other.getGPRSLinkTimeout());  if (other.getGPRSResponseTimeout() != 0) setGPRSResponseTimeout(other.getGPRSResponseTimeout());  if (!other.getGPRSServerAddress().isEmpty()) { this.gPRSServerAddress_ = other.gPRSServerAddress_; onChanged(); }  if (other.getGPRSServerPort() != 0) setGPRSServerPort(other.getGPRSServerPort());  if (other.gPRSServerProtocol_ != 0) setGPRSServerProtocolValue(other.getGPRSServerProtocolValue());  if (!other.getGPRSBackupServerAddress().isEmpty()) { this.gPRSBackupServerAddress_ = other.gPRSBackupServerAddress_; onChanged(); }  if (other.getGPRSBackupServerPort() != 0) setGPRSBackupServerPort(other.getGPRSBackupServerPort());  if (other.gPRSBackupServerProtocol_ != 0) setGPRSBackupServerProtocolValue(other.getGPRSBackupServerProtocolValue());  if (other.getGPRSSSLClientAuthentication()) setGPRSSSLClientAuthentication(other.getGPRSSSLClientAuthentication());  if (other.getGPRSDataCompression()) setGPRSDataCompression(other.getGPRSDataCompression());  if (other.authenticationMode_ != 0) setAuthenticationModeValue(other.getAuthenticationModeValue());  if (!other.getAuthenticationCode().isEmpty()) { this.authenticationCode_ = other.authenticationCode_; onChanged(); }  if (other.getFirmwareUpdateEnabled()) setFirmwareUpdateEnabled(other.getFirmwareUpdateEnabled());  if (!other.getFirmwareUpdateChannel().isEmpty()) { this.firmwareUpdateChannel_ = other.firmwareUpdateChannel_; onChanged(); }  if (other.getFirmwareUpdateCheckInterval() != 0) setFirmwareUpdateCheckInterval(other.getFirmwareUpdateCheckInterval());  if (!other.getFirmwareUpdateServerAddress().isEmpty()) { this.firmwareUpdateServerAddress_ = other.firmwareUpdateServerAddress_; onChanged(); }  if (other.getFirmwareUpdateServerPort() != 0) setFirmwareUpdateServerPort(other.getFirmwareUpdateServerPort());  if (other.firmwareUpdateServerProtocol_ != 0) setFirmwareUpdateServerProtocolValue(other.getFirmwareUpdateServerProtocolValue());  if (other.getFirmwareUpdateLinkTimeout() != 0) setFirmwareUpdateLinkTimeout(other.getFirmwareUpdateLinkTimeout());  if (other.getFirmwareUpdateResponseTimeout() != 0) setFirmwareUpdateResponseTimeout(other.getFirmwareUpdateResponseTimeout());  if (other.getSMSDataSending()) setSMSDataSending(other.getSMSDataSending());  if (!other.getSMSDataSendNumber().isEmpty()) { this.sMSDataSendNumber_ = other.sMSDataSendNumber_; onChanged(); }  if (!other.getSMSPassword().isEmpty()) { this.sMSPassword_ = other.sMSPassword_; onChanged(); }  if (other.getSMSEventTimeZone() != 0) setSMSEventTimeZone(other.getSMSEventTimeZone());  if (other.callIncommingCallAction_ != 0) setCallIncommingCallActionValue(other.getCallIncommingCallActionValue());  if (other.getCallDigitalInput1CallTo() != 0) setCallDigitalInput1CallTo(other.getCallDigitalInput1CallTo());  if (other.getCallDigitalInput2CallTo() != 0) setCallDigitalInput2CallTo(other.getCallDigitalInput2CallTo());  if (other.getCallDigitalInput3CallTo() != 0) setCallDigitalInput3CallTo(other.getCallDigitalInput3CallTo());  if (!other.getAuthorizedNumber1().isEmpty()) { this.authorizedNumber1_ = other.authorizedNumber1_; onChanged(); }  if (!other.getAuthorizedNumber2().isEmpty()) { this.authorizedNumber2_ = other.authorizedNumber2_; onChanged(); }  if (!other.getAuthorizedNumber3().isEmpty()) { this.authorizedNumber3_ = other.authorizedNumber3_; onChanged(); }  if (!other.getAuthorizedNumber4().isEmpty()) { this.authorizedNumber4_ = other.authorizedNumber4_; onChanged(); }  if (!other.getAuthorizedNumber5().isEmpty()) { this.authorizedNumber5_ = other.authorizedNumber5_; onChanged(); }  if (!other.getAuthorizedNumber6().isEmpty()) { this.authorizedNumber6_ = other.authorizedNumber6_; onChanged(); }  if (!other.getAuthorizedNumber7().isEmpty()) { this.authorizedNumber7_ = other.authorizedNumber7_; onChanged(); }  if (!other.getAuthorizedNumber8().isEmpty()) { this.authorizedNumber8_ = other.authorizedNumber8_; onChanged(); }  if (!other.getAuthorizedNumber9().isEmpty()) { this.authorizedNumber9_ = other.authorizedNumber9_; onChanged(); }  if (!other.getAuthorizedNumber10().isEmpty()) { this.authorizedNumber10_ = other.authorizedNumber10_; onChanged(); }  if (!other.getGsmPredefinedNumber1().isEmpty()) { this.gsmPredefinedNumber1_ = other.gsmPredefinedNumber1_; onChanged(); }  if (!other.getGsmPredefinedNumber2().isEmpty()) { this.gsmPredefinedNumber2_ = other.gsmPredefinedNumber2_; onChanged(); }  if (!other.getGsmPredefinedNumber3().isEmpty()) { this.gsmPredefinedNumber3_ = other.gsmPredefinedNumber3_; onChanged(); }  if (!other.getGsmPredefinedNumber4().isEmpty()) { this.gsmPredefinedNumber4_ = other.gsmPredefinedNumber4_; onChanged(); }  if (!other.getGsmPredefinedNumber5().isEmpty()) { this.gsmPredefinedNumber5_ = other.gsmPredefinedNumber5_; onChanged(); }  if (!other.getGsmPredefinedNumber6().isEmpty()) { this.gsmPredefinedNumber6_ = other.gsmPredefinedNumber6_; onChanged(); }  if (!other.getGsmPredefinedNumber7().isEmpty()) { this.gsmPredefinedNumber7_ = other.gsmPredefinedNumber7_; onChanged(); }  if (!other.getGsmPredefinedNumber8().isEmpty()) { this.gsmPredefinedNumber8_ = other.gsmPredefinedNumber8_; onChanged(); }  if (!other.getGsmPredefinedNumber9().isEmpty()) { this.gsmPredefinedNumber9_ = other.gsmPredefinedNumber9_; onChanged(); }  if (!other.getGsmPredefinedNumber10().isEmpty()) { this.gsmPredefinedNumber10_ = other.gsmPredefinedNumber10_; onChanged(); }  if (!other.getRoamingOperator1().isEmpty()) { this.roamingOperator1_ = other.roamingOperator1_; onChanged(); }  if (!other.getRoamingOperator2().isEmpty()) { this.roamingOperator2_ = other.roamingOperator2_; onChanged(); }  if (!other.getRoamingOperator3().isEmpty()) { this.roamingOperator3_ = other.roamingOperator3_; onChanged(); }  if (!other.getRoamingOperator4().isEmpty()) { this.roamingOperator4_ = other.roamingOperator4_; onChanged(); }  if (!other.getRoamingOperator5().isEmpty()) { this.roamingOperator5_ = other.roamingOperator5_; onChanged(); }  if (other.getDAQStopHomeMinPeriod() != 0) setDAQStopHomeMinPeriod(other.getDAQStopHomeMinPeriod());  if (other.getDAQStopRoamingMinPeriod() != 0) setDAQStopRoamingMinPeriod(other.getDAQStopRoamingMinPeriod());  if (other.getDAQMovingHomeMinPeriod() != 0) setDAQMovingHomeMinPeriod(other.getDAQMovingHomeMinPeriod());  if (other.getDAQMovingHomeMinPathDeviation() != 0) setDAQMovingHomeMinPathDeviation(other.getDAQMovingHomeMinPathDeviation());  if (other.getDAQMovingRoamingMinPeriod() != 0) setDAQMovingRoamingMinPeriod(other.getDAQMovingRoamingMinPeriod());  if (other.getDAQMovingRoamingMinPathDeviation() != 0) setDAQMovingRoamingMinPathDeviation(other.getDAQMovingRoamingMinPathDeviation());  if (other.hasGeoZone1()) mergeGeoZone1(other.getGeoZone1());  if (other.hasGeoZone2()) mergeGeoZone2(other.getGeoZone2());  if (other.hasGeoZone3()) mergeGeoZone3(other.getGeoZone3());  if (other.hasGeoZone4()) mergeGeoZone4(other.getGeoZone4());  if (other.hasGeoZone5()) mergeGeoZone5(other.getGeoZone5());  if (other.hasGeoZone6()) mergeGeoZone6(other.getGeoZone6());  if (other.hasGeoZone7()) mergeGeoZone7(other.getGeoZone7());  if (other.hasGeoZone8()) mergeGeoZone8(other.getGeoZone8());  if (other.hasGeoZone9()) mergeGeoZone9(other.getGeoZone9());  if (other.hasGeoZone10()) mergeGeoZone10(other.getGeoZone10());  if (other.hasGeoZone11()) mergeGeoZone11(other.getGeoZone11());  if (other.hasGeoZone12()) mergeGeoZone12(other.getGeoZone12());  if (other.hasGeoZone13()) mergeGeoZone13(other.getGeoZone13());  if (other.hasGeoZone14()) mergeGeoZone14(other.getGeoZone14());  if (other.hasGeoZone15()) mergeGeoZone15(other.getGeoZone15());  if (other.hasGeoZone16()) mergeGeoZone16(other.getGeoZone16());  if (other.hasGeoZone17()) mergeGeoZone17(other.getGeoZone17());  if (other.hasGeoZone18()) mergeGeoZone18(other.getGeoZone18());  if (other.hasGeoZone19()) mergeGeoZone19(other.getGeoZone19());  if (other.hasGeoZone20()) mergeGeoZone20(other.getGeoZone20());  if (other.hasGeoZone21()) mergeGeoZone21(other.getGeoZone21());  if (other.hasGeoZone22()) mergeGeoZone22(other.getGeoZone22());  if (other.hasGeoZone23()) mergeGeoZone23(other.getGeoZone23());  if (other.hasGeoZone24()) mergeGeoZone24(other.getGeoZone24());  if (other.hasGeoZone25()) mergeGeoZone25(other.getGeoZone25());  if (other.hasGeoZone26()) mergeGeoZone26(other.getGeoZone26());  if (other.hasGeoZone27()) mergeGeoZone27(other.getGeoZone27());  if (other.hasGeoZone28()) mergeGeoZone28(other.getGeoZone28());  if (other.hasGeoZone29()) mergeGeoZone29(other.getGeoZone29());  if (other.hasGeoZone30()) mergeGeoZone30(other.getGeoZone30());  if (other.hasGeoZone31()) mergeGeoZone31(other.getGeoZone31());  if (other.hasGeoZone32()) mergeGeoZone32(other.getGeoZone32());  if (other.hasGeoZone33()) mergeGeoZone33(other.getGeoZone33());  if (other.hasGeoZone34()) mergeGeoZone34(other.getGeoZone34());  if (other.hasGeoZone35()) mergeGeoZone35(other.getGeoZone35());  if (other.hasGeoZone36()) mergeGeoZone36(other.getGeoZone36());  if (other.hasGeoZone37()) mergeGeoZone37(other.getGeoZone37());  if (other.hasGeoZone38()) mergeGeoZone38(other.getGeoZone38());  if (other.hasGeoZone39()) mergeGeoZone39(other.getGeoZone39());  if (other.hasGeoZone40()) mergeGeoZone40(other.getGeoZone40());  if (other.hasGeoZone41()) mergeGeoZone41(other.getGeoZone41());  if (other.hasGeoZone42()) mergeGeoZone42(other.getGeoZone42());  if (other.hasGeoZone43()) mergeGeoZone43(other.getGeoZone43());  if (other.hasGeoZone44()) mergeGeoZone44(other.getGeoZone44());  if (other.hasGeoZone45()) mergeGeoZone45(other.getGeoZone45());  if (other.hasGeoZone46()) mergeGeoZone46(other.getGeoZone46());  if (other.hasGeoZone47()) mergeGeoZone47(other.getGeoZone47());  if (other.hasGeoZone48()) mergeGeoZone48(other.getGeoZone48());  if (other.hasGeoZone49()) mergeGeoZone49(other.getGeoZone49());  if (other.hasGeoZone50()) mergeGeoZone50(other.getGeoZone50());  if (other.getTripStartSpeed() != 0) setTripStartSpeed(other.getTripStartSpeed());  if (other.getTripUseIgnition()) setTripUseIgnition(other.getTripUseIgnition());  if (other.getTripParkDetectionTimeout() != 0) setTripParkDetectionTimeout(other.getTripParkDetectionTimeout());  if (other.getOverspeedingEnable()) setOverspeedingEnable(other.getOverspeedingEnable());  if (other.getOverspeedingLimit() != 0) setOverspeedingLimit(other.getOverspeedingLimit());  if (other.getOverspeedingActivationSpeed() != 0) setOverspeedingActivationSpeed(other.getOverspeedingActivationSpeed());  if (other.overspeedingDeactivationMode_ != 0) setOverspeedingDeactivationModeValue(other.getOverspeedingDeactivationModeValue());  if (other.getOverspeedingDeactivationValue() != 0) setOverspeedingDeactivationValue(other.getOverspeedingDeactivationValue());  if (other.getUSSDEnabled()) setUSSDEnabled(other.getUSSDEnabled());  if (other.getUSSDID() != 0) setUSSDID(other.getUSSDID());  if (other.getUSSDInterval() != 0) setUSSDInterval(other.getUSSDInterval());  if (!other.getUSSDCode().isEmpty()) { this.uSSDCode_ = other.uSSDCode_; onChanged(); }  if (other.getSpeedSensorKmPulseCount() != 0) setSpeedSensorKmPulseCount(other.getSpeedSensorKmPulseCount());  if (other.getCrashDetectionEnabled()) setCrashDetectionEnabled(other.getCrashDetectionEnabled());  if (other.getCrashDetectionLevel1Threshold() != 0) setCrashDetectionLevel1Threshold(other.getCrashDetectionLevel1Threshold());  if (other.getCrashDetectionLevel2Threshold() != 0) setCrashDetectionLevel2Threshold(other.getCrashDetectionLevel2Threshold());  if (other.getCrashDetectionLevel3Threshold() != 0) setCrashDetectionLevel3Threshold(other.getCrashDetectionLevel3Threshold());  if (other.crashDetectionTrace_ != 0) setCrashDetectionTraceValue(other.getCrashDetectionTraceValue());  if (other.getCrashDetectionDuration() != 0) setCrashDetectionDuration(other.getCrashDetectionDuration());  if (other.getCrashDetectionSendSMSTo() != 0) setCrashDetectionSendSMSTo(other.getCrashDetectionSendSMSTo());  if (!other.getCrashDetectionSMSText().isEmpty()) { this.crashDetectionSMSText_ = other.crashDetectionSMSText_; onChanged(); }  if (other.getCrashDetectionCallTo() != 0) setCrashDetectionCallTo(other.getCrashDetectionCallTo());  if (other.getRolloverDetectionEnabled()) setRolloverDetectionEnabled(other.getRolloverDetectionEnabled());  if (other.driverRegistrationMode_ != 0) setDriverRegistrationModeValue(other.getDriverRegistrationModeValue());  if (other.driverRegistrationAuthentication_ != 0) setDriverRegistrationAuthenticationValue(other.getDriverRegistrationAuthenticationValue());  if (other.getDriverRegistrationDeregistrationTimeout() != 0) setDriverRegistrationDeregistrationTimeout(other.getDriverRegistrationDeregistrationTimeout());  if (other.driverRegistrationBuzzerDigitalOutput_ != 0) setDriverRegistrationBuzzerDigitalOutputValue(other.getDriverRegistrationBuzzerDigitalOutputValue());  if (other.driverRegistrationImmobilizerDigitalOutput_ != 0) setDriverRegistrationImmobilizerDigitalOutputValue(other.getDriverRegistrationImmobilizerDigitalOutputValue());  if (other.getDriverRegistrationImmobilizerActiveLow()) setDriverRegistrationImmobilizerActiveLow(other.getDriverRegistrationImmobilizerActiveLow());  if (other.getDriverRegistrationAuthorizedID1() != 0L) setDriverRegistrationAuthorizedID1(other.getDriverRegistrationAuthorizedID1());  if (other.getDriverRegistrationAuthorizedID2() != 0L) setDriverRegistrationAuthorizedID2(other.getDriverRegistrationAuthorizedID2());  if (other.getDriverRegistrationAuthorizedID3() != 0L) setDriverRegistrationAuthorizedID3(other.getDriverRegistrationAuthorizedID3());  if (other.getDriverRegistrationAuthorizedID4() != 0L) setDriverRegistrationAuthorizedID4(other.getDriverRegistrationAuthorizedID4());  if (other.getDriverRegistrationAuthorizedID5() != 0L) setDriverRegistrationAuthorizedID5(other.getDriverRegistrationAuthorizedID5());  if (other.getDriverRegistrationAuthorizedID6() != 0L) setDriverRegistrationAuthorizedID6(other.getDriverRegistrationAuthorizedID6());  if (other.getDriverRegistrationAuthorizedID7() != 0L) setDriverRegistrationAuthorizedID7(other.getDriverRegistrationAuthorizedID7());  if (other.getDriverRegistrationAuthorizedID8() != 0L) setDriverRegistrationAuthorizedID8(other.getDriverRegistrationAuthorizedID8());  if (other.getDriverRegistrationAuthorizedID9() != 0L) setDriverRegistrationAuthorizedID9(other.getDriverRegistrationAuthorizedID9());  if (other.getDriverRegistrationAuthorizedID10() != 0L) setDriverRegistrationAuthorizedID10(other.getDriverRegistrationAuthorizedID10());  if (other.getECODriveActive()) setECODriveActive(other.getECODriveActive());  if (other.getECOOverSpeedingLimit() != 0) setECOOverSpeedingLimit(other.getECOOverSpeedingLimit());  if (other.getECORPMGreenBandLowLimit() != 0) setECORPMGreenBandLowLimit(other.getECORPMGreenBandLowLimit());  if (other.getECORPMGreenBandHighLimit() != 0) setECORPMGreenBandHighLimit(other.getECORPMGreenBandHighLimit());  if (other.getECOHarshBreakingLimit() != 0) setECOHarshBreakingLimit(other.getECOHarshBreakingLimit());  if (other.getECOExtremeBreakingLimit() != 0) setECOExtremeBreakingLimit(other.getECOExtremeBreakingLimit());  if (other.getECOHarshAccelerationLimit() != 0) setECOHarshAccelerationLimit(other.getECOHarshAccelerationLimit());  if (other.getECOCorneringLimit() != 0) setECOCorneringLimit(other.getECOCorneringLimit());  if (other.getECOIdlingDelay() != 0) setECOIdlingDelay(other.getECOIdlingDelay());  if (other.getECOIdlingSpeed() != 0) setECOIdlingSpeed(other.getECOIdlingSpeed());  if (other.getECOCruiseControlSpeed() != 0) setECOCruiseControlSpeed(other.getECOCruiseControlSpeed());  if (other.getECOCalculateOnlyWhenEngineOn()) setECOCalculateOnlyWhenEngineOn(other.getECOCalculateOnlyWhenEngineOn());  if (other.getECOCustomEngineSource()) setECOCustomEngineSource(other.getECOCustomEngineSource());  if (other.getECOEngineOnDIN1()) setECOEngineOnDIN1(other.getECOEngineOnDIN1());  if (other.getECOEngineOnDIN2()) setECOEngineOnDIN2(other.getECOEngineOnDIN2());  if (other.getECOEngineOnMovementSensor()) setECOEngineOnMovementSensor(other.getECOEngineOnMovementSensor());  if (other.getECOEngineOnPowerSupplyAvailable()) setECOEngineOnPowerSupplyAvailable(other.getECOEngineOnPowerSupplyAvailable());  if (other.getECOEngineOnCanRPMLow() != 0) setECOEngineOnCanRPMLow(other.getECOEngineOnCanRPMLow());  if (other.getECOEngineOnCanRPMHigh() != 0) setECOEngineOnCanRPMHigh(other.getECOEngineOnCanRPMHigh());  if (other.eCOEngineOnOperator_ != 0) setECOEngineOnOperatorValue(other.getECOEngineOnOperatorValue());  if (other.getECOEngineOnExternalVoltage() != 0) setECOEngineOnExternalVoltage(other.getECOEngineOnExternalVoltage());  if (other.eCUInterface_ != 0) setECUInterfaceValue(other.getECUInterfaceValue());  if (other.fuelConsumptionEnabled_ != 0) setFuelConsumptionEnabledValue(other.getFuelConsumptionEnabledValue());  if (other.getFuelConsumptionEngineDisplacement() != 0) setFuelConsumptionEngineDisplacement(other.getFuelConsumptionEngineDisplacement());  if (other.getFuelConsumptionCylinders() != 0) setFuelConsumptionCylinders(other.getFuelConsumptionCylinders());  if (other.getFuelConsumptionInjectorPerformance() != 0) setFuelConsumptionInjectorPerformance(other.getFuelConsumptionInjectorPerformance());  if (other.getFuelConsumptionVolumetricEfficiently() != 0) setFuelConsumptionVolumetricEfficiently(other.getFuelConsumptionVolumetricEfficiently());  if (other.getFaultCodesReadTime() != 0) setFaultCodesReadTime(other.getFaultCodesReadTime());  if (other.getSIPAADLinkTimeout() != 0) setSIPAADLinkTimeout(other.getSIPAADLinkTimeout());  if (other.getSIPAADResponseTimeout() != 0) setSIPAADResponseTimeout(other.getSIPAADResponseTimeout());  if (!other.getSIPAADServerAddress().isEmpty()) { this.sIPAADServerAddress_ = other.sIPAADServerAddress_; onChanged(); }  if (other.getSIPAADServerPort() != 0) setSIPAADServerPort(other.getSIPAADServerPort());  if (other.sIPAADServerProtocol_ != 0) setSIPAADServerProtocolValue(other.getSIPAADServerProtocolValue());  if (other.getSIPAADSSLClientAuthentication()) setSIPAADSSLClientAuthentication(other.getSIPAADSSLClientAuthentication());  if (other.hasIOTime()) mergeIOTime(other.getIOTime());  if (other.hasIOAngle()) mergeIOAngle(other.getIOAngle());  if (other.hasIOSpeed()) mergeIOSpeed(other.getIOSpeed());  if (other.hasIOSleepMode()) mergeIOSleepMode(other.getIOSleepMode());  if (other.hasIOIgnition()) mergeIOIgnition(other.getIOIgnition());  if (other.hasIOMovement()) mergeIOMovement(other.getIOMovement());  if (other.hasIODataMode()) mergeIODataMode(other.getIODataMode());  if (other.hasIOGnssStatus()) mergeIOGnssStatus(other.getIOGnssStatus());  if (other.hasIOGnssHDOP()) mergeIOGnssHDOP(other.getIOGnssHDOP());  if (other.hasIOGnssPDOP()) mergeIOGnssPDOP(other.getIOGnssPDOP());  if (other.hasIOGnssJammingStatus()) mergeIOGnssJammingStatus(other.getIOGnssJammingStatus());  if (other.hasIOGsmSignal()) mergeIOGsmSignal(other.getIOGsmSignal());  if (other.hasIOGsmCellId()) mergeIOGsmCellId(other.getIOGsmCellId());  if (other.hasIOGsmAreaCode()) mergeIOGsmAreaCode(other.getIOGsmAreaCode());  if (other.hasIOGsmOperator()) mergeIOGsmOperator(other.getIOGsmOperator());  if (other.hasIOGsmTemperature()) mergeIOGsmTemperature(other.getIOGsmTemperature());  if (other.hasIOGsmJammingStatus()) mergeIOGsmJammingStatus(other.getIOGsmJammingStatus());  if (other.hasIOExternalVoltage()) mergeIOExternalVoltage(other.getIOExternalVoltage());  if (other.hasIOBatteryVoltage()) mergeIOBatteryVoltage(other.getIOBatteryVoltage());  if (other.hasIOBatteryCurrent()) mergeIOBatteryCurrent(other.getIOBatteryCurrent());  if (other.hasIOTotalOdometer()) mergeIOTotalOdometer(other.getIOTotalOdometer());  if (other.hasIOOdometer()) mergeIOOdometer(other.getIOOdometer());  if (other.hasIOEngineOnTime()) mergeIOEngineOnTime(other.getIOEngineOnTime());  if (other.hasIOEngineOnTimeDelta()) mergeIOEngineOnTimeDelta(other.getIOEngineOnTimeDelta());  if (other.hasIOIdlingTime()) mergeIOIdlingTime(other.getIOIdlingTime());  if (other.hasIOIdlingTimeDelta()) mergeIOIdlingTimeDelta(other.getIOIdlingTimeDelta());  if (other.hasIOSpeedSensorSpeed()) mergeIOSpeedSensorSpeed(other.getIOSpeedSensorSpeed());  if (other.hasIOSpeedSensorDistance()) mergeIOSpeedSensorDistance(other.getIOSpeedSensorDistance());  if (other.hasIOSpeedSensorTotalDistance()) mergeIOSpeedSensorTotalDistance(other.getIOSpeedSensorTotalDistance());  if (other.hasIOSpeedSensorMaxSpeed()) mergeIOSpeedSensorMaxSpeed(other.getIOSpeedSensorMaxSpeed());  if (other.hasIOSpeedSensorGPSSpeedDiff()) mergeIOSpeedSensorGPSSpeedDiff(other.getIOSpeedSensorGPSSpeedDiff());  if (other.hasIODigitalInput1()) mergeIODigitalInput1(other.getIODigitalInput1());  if (other.hasIODigitalInput2()) mergeIODigitalInput2(other.getIODigitalInput2());  if (other.hasIOPowerSupply()) mergeIOPowerSupply(other.getIOPowerSupply());  if (other.hasIODigitalInput3()) mergeIODigitalInput3(other.getIODigitalInput3());  if (other.hasIOVehicleConnection()) mergeIOVehicleConnection(other.getIOVehicleConnection());  if (other.hasIODigitalInput1Time()) mergeIODigitalInput1Time(other.getIODigitalInput1Time());  if (other.hasIODigitalInput1TimeDelta()) mergeIODigitalInput1TimeDelta(other.getIODigitalInput1TimeDelta());  if (other.hasIODigitalInput2Time()) mergeIODigitalInput2Time(other.getIODigitalInput2Time());  if (other.hasIODigitalInput2TimeDelta()) mergeIODigitalInput2TimeDelta(other.getIODigitalInput2TimeDelta());  if (other.hasIOPowerSupplyTime()) mergeIOPowerSupplyTime(other.getIOPowerSupplyTime());  if (other.hasIOPowerSupplyTimeDelta()) mergeIOPowerSupplyTimeDelta(other.getIOPowerSupplyTimeDelta());  if (other.hasIODigitalInput3Time()) mergeIODigitalInput3Time(other.getIODigitalInput3Time());  if (other.hasIODigitalInput3TimeDelta()) mergeIODigitalInput3TimeDelta(other.getIODigitalInput3TimeDelta());  if (other.hasIODigitalOutput1()) mergeIODigitalOutput1(other.getIODigitalOutput1());  if (other.hasIODigitalOutput2()) mergeIODigitalOutput2(other.getIODigitalOutput2());  if (other.hasIOAnalogInput1()) mergeIOAnalogInput1(other.getIOAnalogInput1());  if (other.hasIOAnalogInput2()) mergeIOAnalogInput2(other.getIOAnalogInput2());  if (other.hasIOAnalogInput3()) mergeIOAnalogInput3(other.getIOAnalogInput3());  if (other.hasIOAxisX()) mergeIOAxisX(other.getIOAxisX());  if (other.hasIOAxisY()) mergeIOAxisY(other.getIOAxisY());  if (other.hasIOAxisZ()) mergeIOAxisZ(other.getIOAxisZ());  if (other.hasIOECOMaxSpeed()) mergeIOECOMaxSpeed(other.getIOECOMaxSpeed());  if (other.hasIOECONormalSpeedDistance()) mergeIOECONormalSpeedDistance(other.getIOECONormalSpeedDistance());  if (other.hasIOECONormalSpeedTotalDistance()) mergeIOECONormalSpeedTotalDistance(other.getIOECONormalSpeedTotalDistance());  if (other.hasIOECONormalSpeedTimer()) mergeIOECONormalSpeedTimer(other.getIOECONormalSpeedTimer());  if (other.hasIOECONormalSpeedTotalTimer()) mergeIOECONormalSpeedTotalTimer(other.getIOECONormalSpeedTotalTimer());  if (other.hasIOECOOverSpeedingDistance()) mergeIOECOOverSpeedingDistance(other.getIOECOOverSpeedingDistance());  if (other.hasIOECOOverSpeedingTotalDistance()) mergeIOECOOverSpeedingTotalDistance(other.getIOECOOverSpeedingTotalDistance());  if (other.hasIOECOOverSpeedingTimer()) mergeIOECOOverSpeedingTimer(other.getIOECOOverSpeedingTimer());  if (other.hasIOECOOverSpeedingTotalTimer()) mergeIOECOOverSpeedingTotalTimer(other.getIOECOOverSpeedingTotalTimer());  if (other.hasIOECOMaxRPM()) mergeIOECOMaxRPM(other.getIOECOMaxRPM());  if (other.hasIOECORPMGreenBandDistance()) mergeIOECORPMGreenBandDistance(other.getIOECORPMGreenBandDistance());  if (other.hasIOECORPMGreenBandTotalDistance()) mergeIOECORPMGreenBandTotalDistance(other.getIOECORPMGreenBandTotalDistance());  if (other.hasIOECORPMGreenBandTimer()) mergeIOECORPMGreenBandTimer(other.getIOECORPMGreenBandTimer());  if (other.hasIOECORPMGreenBandTotalTimer()) mergeIOECORPMGreenBandTotalTimer(other.getIOECORPMGreenBandTotalTimer());  if (other.hasIOECOOverRPMDistance()) mergeIOECOOverRPMDistance(other.getIOECOOverRPMDistance());  if (other.hasIOECOOverRPMTotalDistance()) mergeIOECOOverRPMTotalDistance(other.getIOECOOverRPMTotalDistance());  if (other.hasIOECOOverRPMTimer()) mergeIOECOOverRPMTimer(other.getIOECOOverRPMTimer());  if (other.hasIOECOOverRPMTotalTimer()) mergeIOECOOverRPMTotalTimer(other.getIOECOOverRPMTotalTimer());  if (other.hasIOECOIdlingEvent()) mergeIOECOIdlingEvent(other.getIOECOIdlingEvent());  if (other.hasIOECOCruiseControlTimer()) mergeIOECOCruiseControlTimer(other.getIOECOCruiseControlTimer());  if (other.hasIOECOCruiseControlTotalTimer()) mergeIOECOCruiseControlTotalTimer(other.getIOECOCruiseControlTotalTimer());  if (other.hasIOECOCruiseControlDistance()) mergeIOECOCruiseControlDistance(other.getIOECOCruiseControlDistance());  if (other.hasIOECOCruiseControlTotalDistance()) mergeIOECOCruiseControlTotalDistance(other.getIOECOCruiseControlTotalDistance());  if (other.hasIOECOUnderRPMDistance()) mergeIOECOUnderRPMDistance(other.getIOECOUnderRPMDistance());  if (other.hasIOECOUnderRPMTotalDistance()) mergeIOECOUnderRPMTotalDistance(other.getIOECOUnderRPMTotalDistance());  if (other.hasIOECOUnderRPMTimer()) mergeIOECOUnderRPMTimer(other.getIOECOUnderRPMTimer());  if (other.hasIOECOUnderRPMTotalTimer()) mergeIOECOUnderRPMTotalTimer(other.getIOECOUnderRPMTotalTimer());  if (other.hasIOECOBreakCounter()) mergeIOECOBreakCounter(other.getIOECOBreakCounter());  if (other.hasIOECOHarshBreakCounter()) mergeIOECOHarshBreakCounter(other.getIOECOHarshBreakCounter());  if (other.hasIOECOExtremeBreakCounter()) mergeIOECOExtremeBreakCounter(other.getIOECOExtremeBreakCounter());  if (other.hasIOECOHarshAccelerationCounter()) mergeIOECOHarshAccelerationCounter(other.getIOECOHarshAccelerationCounter());  if (other.hasIOECOCorneringCounter()) mergeIOECOCorneringCounter(other.getIOECOCorneringCounter());  if (other.hasIOECOTotalBreak()) mergeIOECOTotalBreak(other.getIOECOTotalBreak());  if (other.hasIOECOTotalHarshBreak()) mergeIOECOTotalHarshBreak(other.getIOECOTotalHarshBreak());  if (other.hasIOECOTotalExtremeBreak()) mergeIOECOTotalExtremeBreak(other.getIOECOTotalExtremeBreak());  if (other.hasIOECOTotalHarshAcceleration()) mergeIOECOTotalHarshAcceleration(other.getIOECOTotalHarshAcceleration());  if (other.hasIOECOTotalCornering()) mergeIOECOTotalCornering(other.getIOECOTotalCornering());  if (other.hasIOTrip()) mergeIOTrip(other.getIOTrip());  if (other.hasIOTripTime()) mergeIOTripTime(other.getIOTripTime());  if (other.hasIOTripDistance()) mergeIOTripDistance(other.getIOTripDistance());  if (other.hasIODriverID()) mergeIODriverID(other.getIODriverID());  if (other.hasIOTemperatureSensor1()) mergeIOTemperatureSensor1(other.getIOTemperatureSensor1());  if (other.hasIOTemperatureSensor1ID()) mergeIOTemperatureSensor1ID(other.getIOTemperatureSensor1ID());  if (other.hasIOTemperatureSensor2()) mergeIOTemperatureSensor2(other.getIOTemperatureSensor2());  if (other.hasIOTemperatureSensor2ID()) mergeIOTemperatureSensor2ID(other.getIOTemperatureSensor2ID());  if (other.hasIOTemperatureSensor3()) mergeIOTemperatureSensor3(other.getIOTemperatureSensor3());  if (other.hasIOTemperatureSensor3ID()) mergeIOTemperatureSensor3ID(other.getIOTemperatureSensor3ID());  if (other.hasIOHumiditySensor1()) mergeIOHumiditySensor1(other.getIOHumiditySensor1());  if (other.hasIOTiltStatus()) mergeIOTiltStatus(other.getIOTiltStatus());  if (other.hasIOOBDEngineRPM()) mergeIOOBDEngineRPM(other.getIOOBDEngineRPM());  if (other.hasIOOBDBatteryVoltage()) mergeIOOBDBatteryVoltage(other.getIOOBDBatteryVoltage());  if (other.hasIOOBDEngineCoolantTemperature()) mergeIOOBDEngineCoolantTemperature(other.getIOOBDEngineCoolantTemperature());  if (other.hasIOOBDVehicleSpeed()) mergeIOOBDVehicleSpeed(other.getIOOBDVehicleSpeed());  if (other.hasIOOBDTotalDistance()) mergeIOOBDTotalDistance(other.getIOOBDTotalDistance());  if (other.hasIOOBDFuelRate()) mergeIOOBDFuelRate(other.getIOOBDFuelRate());  if (other.hasIOOBDTotalFuelUsed()) mergeIOOBDTotalFuelUsed(other.getIOOBDTotalFuelUsed());  if (other.hasIOOBDIntakeAirTemperature()) mergeIOOBDIntakeAirTemperature(other.getIOOBDIntakeAirTemperature());  if (other.hasIOOBDIntakeManifoldAbsolutePressure()) mergeIOOBDIntakeManifoldAbsolutePressure(other.getIOOBDIntakeManifoldAbsolutePressure());  if (other.hasIOOBDMalfunctionIndicatorLamp()) mergeIOOBDMalfunctionIndicatorLamp(other.getIOOBDMalfunctionIndicatorLamp());  if (other.hasIODiagnosticTroubleCodesCount()) mergeIODiagnosticTroubleCodesCount(other.getIODiagnosticTroubleCodesCount());  if (other.hasIOOBDCalculatedEngineLoad()) mergeIOOBDCalculatedEngineLoad(other.getIOOBDCalculatedEngineLoad());  if (other.hasIOOBDMassAirFlowRate()) mergeIOOBDMassAirFlowRate(other.getIOOBDMassAirFlowRate());  if (other.hasIOOBDThrottlePosition()) mergeIOOBDThrottlePosition(other.getIOOBDThrottlePosition());  if (other.hasIOOBDRunTimeSinceEngineStart()) mergeIOOBDRunTimeSinceEngineStart(other.getIOOBDRunTimeSinceEngineStart());  if (other.hasIOOBDFuelTankLevelInput()) mergeIOOBDFuelTankLevelInput(other.getIOOBDFuelTankLevelInput());  if (other.hasIOOBDDistanceTraveledSinceCodesCleared()) mergeIOOBDDistanceTraveledSinceCodesCleared(other.getIOOBDDistanceTraveledSinceCodesCleared());  if (other.hasIOOBDAbsoluteThrottlePositionD()) mergeIOOBDAbsoluteThrottlePositionD(other.getIOOBDAbsoluteThrottlePositionD());  if (other.hasIOOBDTimeRunWithMILOn()) mergeIOOBDTimeRunWithMILOn(other.getIOOBDTimeRunWithMILOn());  if (other.hasIOOBDEngineOilTemperature()) mergeIOOBDEngineOilTemperature(other.getIOOBDEngineOilTemperature());  if (other.hasIOOBDFuelSystem1Status()) mergeIOOBDFuelSystem1Status(other.getIOOBDFuelSystem1Status());  if (other.hasIOOBDFuelSystem2Status()) mergeIOOBDFuelSystem2Status(other.getIOOBDFuelSystem2Status());  if (other.hasIOOBDOxygenSensor1Voltage()) mergeIOOBDOxygenSensor1Voltage(other.getIOOBDOxygenSensor1Voltage());  if (other.hasIOOBDOxygenSensor1ShortTermFuelTrim()) mergeIOOBDOxygenSensor1ShortTermFuelTrim(other.getIOOBDOxygenSensor1ShortTermFuelTrim());  if (other.hasIOOBDOxygenSensor2Voltage()) mergeIOOBDOxygenSensor2Voltage(other.getIOOBDOxygenSensor2Voltage());  if (other.hasIOOBDOxygenSensor2ShortTermFuelTrim()) mergeIOOBDOxygenSensor2ShortTermFuelTrim(other.getIOOBDOxygenSensor2ShortTermFuelTrim());  if (other.hasIOOBDOxygenSensor3Voltage()) mergeIOOBDOxygenSensor3Voltage(other.getIOOBDOxygenSensor3Voltage());  if (other.hasIOOBDOxygenSensor3ShortTermFuelTrim()) mergeIOOBDOxygenSensor3ShortTermFuelTrim(other.getIOOBDOxygenSensor3ShortTermFuelTrim());  if (other.hasIOOBDOxygenSensor4Voltage()) mergeIOOBDOxygenSensor4Voltage(other.getIOOBDOxygenSensor4Voltage());  if (other.hasIOOBDOxygenSensor4ShortTermFuelTrim()) mergeIOOBDOxygenSensor4ShortTermFuelTrim(other.getIOOBDOxygenSensor4ShortTermFuelTrim());  if (other.hasIOCANBusTachograph1WorkingState1()) mergeIOCANBusTachograph1WorkingState1(other.getIOCANBusTachograph1WorkingState1());  if (other.hasIOCANBusTachograph1WorkingState2()) mergeIOCANBusTachograph1WorkingState2(other.getIOCANBusTachograph1WorkingState2());  if (other.hasIOCANBusTachograph1VehicleMotion()) mergeIOCANBusTachograph1VehicleMotion(other.getIOCANBusTachograph1VehicleMotion());  if (other.hasIOCANBusTachograph1Driv1TimeRelStates()) mergeIOCANBusTachograph1Driv1TimeRelStates(other.getIOCANBusTachograph1Driv1TimeRelStates());  if (other.hasIOCANBusTachograph1Driver1Card()) mergeIOCANBusTachograph1Driver1Card(other.getIOCANBusTachograph1Driver1Card());  if (other.hasIOCANBusTachograph1VehicleOverspeed()) mergeIOCANBusTachograph1VehicleOverspeed(other.getIOCANBusTachograph1VehicleOverspeed());  if (other.hasIOCANBusTachograph1Driv2TimeRelStates()) mergeIOCANBusTachograph1Driv2TimeRelStates(other.getIOCANBusTachograph1Driv2TimeRelStates());  if (other.hasIOCANBusTachograph1Driver2Card()) mergeIOCANBusTachograph1Driver2Card(other.getIOCANBusTachograph1Driver2Card());  if (other.hasIOCANBusTachograph1SystemEvent()) mergeIOCANBusTachograph1SystemEvent(other.getIOCANBusTachograph1SystemEvent());  if (other.hasIOCANBusTachograph1HandlingInformation()) mergeIOCANBusTachograph1HandlingInformation(other.getIOCANBusTachograph1HandlingInformation());  if (other.hasIOCANBusTachograph1TachographPerformance()) mergeIOCANBusTachograph1TachographPerformance(other.getIOCANBusTachograph1TachographPerformance());  if (other.hasIOCANBusTachograph1DirectionIndicator()) mergeIOCANBusTachograph1DirectionIndicator(other.getIOCANBusTachograph1DirectionIndicator());  if (other.hasIOCANBusTachograph1VehicleSpeed()) mergeIOCANBusTachograph1VehicleSpeed(other.getIOCANBusTachograph1VehicleSpeed());  if (other.hasIOCANBusEngineTemperature1EngineCoolantTemperature()) mergeIOCANBusEngineTemperature1EngineCoolantTemperature(other.getIOCANBusEngineTemperature1EngineCoolantTemperature());  if (other.hasIOCANBusElectronicEngineController1ActualEnginePercent()) mergeIOCANBusElectronicEngineController1ActualEnginePercent(other.getIOCANBusElectronicEngineController1ActualEnginePercent());  if (other.hasIOCANBusElectronicEngineController1EngineSpeed()) mergeIOCANBusElectronicEngineController1EngineSpeed(other.getIOCANBusElectronicEngineController1EngineSpeed());  if (other.hasIOCANBusEngineHoursEngineTotalHours()) mergeIOCANBusEngineHoursEngineTotalHours(other.getIOCANBusEngineHoursEngineTotalHours());  if (other.hasIOCANBusVehicleDistanceTotalVehicleDistance()) mergeIOCANBusVehicleDistanceTotalVehicleDistance(other.getIOCANBusVehicleDistanceTotalVehicleDistance());  if (other.hasIOCANBusHighResolutionFuelConsumptionTotalFuelUsed()) mergeIOCANBusHighResolutionFuelConsumptionTotalFuelUsed(other.getIOCANBusHighResolutionFuelConsumptionTotalFuelUsed());  if (other.hasIOCANBusDashDisplayFuelLevel1()) mergeIOCANBusDashDisplayFuelLevel1(other.getIOCANBusDashDisplayFuelLevel1());  if (other.hasIOCANBusAmbientConditionsAmbientAirTemperature()) mergeIOCANBusAmbientConditionsAmbientAirTemperature(other.getIOCANBusAmbientConditionsAmbientAirTemperature());  if (other.hasIOCANBusFuelEconomyFuelRate()) mergeIOCANBusFuelEconomyFuelRate(other.getIOCANBusFuelEconomyFuelRate());  if (other.hasIOCANBusFuelEconomyInstantaneousFuelEconomy()) mergeIOCANBusFuelEconomyInstantaneousFuelEconomy(other.getIOCANBusFuelEconomyInstantaneousFuelEconomy());  if (other.hasIOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit1()) mergeIOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit1(other.getIOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit1());  if (other.hasIOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit2()) mergeIOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit2(other.getIOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit2());  if (other.hasIOCANBusAftertreatmentDieselExhaustFluidTankInformationTank1Level()) mergeIOCANBusAftertreatmentDieselExhaustFluidTankInformationTank1Level(other.getIOCANBusAftertreatmentDieselExhaustFluidTankInformationTank1Level());  if (other.hasIOCANBusTruckBusElectronicEngineController2AcceleratorPedalPosition1()) mergeIOCANBusTruckBusElectronicEngineController2AcceleratorPedalPosition1(other.getIOCANBusTruckBusElectronicEngineController2AcceleratorPedalPosition1());  if (other.hasIOCANBusTruckBusElectronicEngineController2EnginePercentLoad()) mergeIOCANBusTruckBusElectronicEngineController2EnginePercentLoad(other.getIOCANBusTruckBusElectronicEngineController2EnginePercentLoad());  if (other.hasIOCANBusTruckVehicleWeightAxleWeight1()) mergeIOCANBusTruckVehicleWeightAxleWeight1(other.getIOCANBusTruckVehicleWeightAxleWeight1());  if (other.hasIOCANBusTruckVehicleWeightAxleWeight2()) mergeIOCANBusTruckVehicleWeightAxleWeight2(other.getIOCANBusTruckVehicleWeightAxleWeight2());  if (other.hasIOCANBusTruckVehicleWeightAxleWeight3()) mergeIOCANBusTruckVehicleWeightAxleWeight3(other.getIOCANBusTruckVehicleWeightAxleWeight3());  if (other.hasIOCANBusTruckServiceInformationServiceDistance()) mergeIOCANBusTruckServiceInformationServiceDistance(other.getIOCANBusTruckServiceInformationServiceDistance());  if (other.hasIOCANBusTruckPTODriveEngagementPTOEngageStat()) mergeIOCANBusTruckPTODriveEngagementPTOEngageStat(other.getIOCANBusTruckPTODriveEngagementPTOEngageStat());  if (other.hasIOCANBusTruckCombinationVehicleWeightGrossCombinationVehicleWeight()) mergeIOCANBusTruckCombinationVehicleWeightGrossCombinationVehicleWeight(other.getIOCANBusTruckCombinationVehicleWeightGrossCombinationVehicleWeight());  if (other.hasIOCANBusTruckBusElectronicRetarderController1RetarderTorqueMode()) mergeIOCANBusTruckBusElectronicRetarderController1RetarderTorqueMode(other.getIOCANBusTruckBusElectronicRetarderController1RetarderTorqueMode());  if (other.hasIOCANBusTruckBusElectronicRetarderController1RetarderSelection()) mergeIOCANBusTruckBusElectronicRetarderController1RetarderSelection(other.getIOCANBusTruckBusElectronicRetarderController1RetarderSelection());  if (other.hasIOCANBusBusDoorControl1DoorPosition()) mergeIOCANBusBusDoorControl1DoorPosition(other.getIOCANBusBusDoorControl1DoorPosition());  if (other.hasIOCANBusBusDoorControl1RampWheelChairlift()) mergeIOCANBusBusDoorControl1RampWheelChairlift(other.getIOCANBusBusDoorControl1RampWheelChairlift());  if (other.hasIOCANBusBusDoorControl1DoorsStatus2()) mergeIOCANBusBusDoorControl1DoorsStatus2(other.getIOCANBusBusDoorControl1DoorsStatus2());  if (other.hasIOCANBusBusDoorControl2()) mergeIOCANBusBusDoorControl2(other.getIOCANBusBusDoorControl2());  if (other.hasIOCANBusBrakeLiningRemainingAxleFrontLeftWheel()) mergeIOCANBusBrakeLiningRemainingAxleFrontLeftWheel(other.getIOCANBusBrakeLiningRemainingAxleFrontLeftWheel());  if (other.hasIOCANBusBrakeLiningRemainingAxleFrontRightWheel()) mergeIOCANBusBrakeLiningRemainingAxleFrontRightWheel(other.getIOCANBusBrakeLiningRemainingAxleFrontRightWheel());  if (other.hasIOCANBusBrakeLiningRemainingAxleRear1LeftWheel()) mergeIOCANBusBrakeLiningRemainingAxleRear1LeftWheel(other.getIOCANBusBrakeLiningRemainingAxleRear1LeftWheel());  if (other.hasIOCANBusBrakeLiningRemainingAxleRear1RightWheel()) mergeIOCANBusBrakeLiningRemainingAxleRear1RightWheel(other.getIOCANBusBrakeLiningRemainingAxleRear1RightWheel());  if (other.hasIOCANBusBrakeLiningRemainingAxleRear2LeftWheel()) mergeIOCANBusBrakeLiningRemainingAxleRear2LeftWheel(other.getIOCANBusBrakeLiningRemainingAxleRear2LeftWheel());  if (other.hasIOCANBusBrakeLiningRemainingAxleRear2RightWheel()) mergeIOCANBusBrakeLiningRemainingAxleRear2RightWheel(other.getIOCANBusBrakeLiningRemainingAxleRear2RightWheel());  if (other.hasIOCANBusBrakeLiningRemainingAxleRear3LeftWheel()) mergeIOCANBusBrakeLiningRemainingAxleRear3LeftWheel(other.getIOCANBusBrakeLiningRemainingAxleRear3LeftWheel());  if (other.hasIOCANBusBrakeLiningRemainingAxleRear3RightWheel()) mergeIOCANBusBrakeLiningRemainingAxleRear3RightWheel(other.getIOCANBusBrakeLiningRemainingAxleRear3RightWheel());  if (other.hasIOCANBusTruckBusCruiseControl()) mergeIOCANBusTruckBusCruiseControl(other.getIOCANBusTruckBusCruiseControl());  if (other.hasIOCANBusBusAlternatorSpeedAlternatorStatus1()) mergeIOCANBusBusAlternatorSpeedAlternatorStatus1(other.getIOCANBusBusAlternatorSpeedAlternatorStatus1());  if (other.hasIOCANBusBusAlternatorSpeedAlternatorStatus2()) mergeIOCANBusBusAlternatorSpeedAlternatorStatus2(other.getIOCANBusBusAlternatorSpeedAlternatorStatus2());  if (other.hasIOCANBusBusAlternatorSpeedAlternatorStatus3()) mergeIOCANBusBusAlternatorSpeedAlternatorStatus3(other.getIOCANBusBusAlternatorSpeedAlternatorStatus3());  if (other.hasIOCANBusBusAlternatorSpeedAlternatorStatus4()) mergeIOCANBusBusAlternatorSpeedAlternatorStatus4(other.getIOCANBusBusAlternatorSpeedAlternatorStatus4());  if (other.hasIOCANBusBusElectronicTransmissionController2SelectedGear()) mergeIOCANBusBusElectronicTransmissionController2SelectedGear(other.getIOCANBusBusElectronicTransmissionController2SelectedGear());  if (other.hasIOCANBusBusElectronicTransmissionController2CurrentGear()) mergeIOCANBusBusElectronicTransmissionController2CurrentGear(other.getIOCANBusBusElectronicTransmissionController2CurrentGear());  if (other.hasIOCANBusBusAirSuspensionControl4FrontAxleLeft()) mergeIOCANBusBusAirSuspensionControl4FrontAxleLeft(other.getIOCANBusBusAirSuspensionControl4FrontAxleLeft());  if (other.hasIOCANBusBusAirSuspensionControl4FrontAxleRight()) mergeIOCANBusBusAirSuspensionControl4FrontAxleRight(other.getIOCANBusBusAirSuspensionControl4FrontAxleRight());  if (other.hasIOCANBusBusAirSuspensionControl4RearAxleLeft()) mergeIOCANBusBusAirSuspensionControl4RearAxleLeft(other.getIOCANBusBusAirSuspensionControl4RearAxleLeft());  if (other.hasIOCANBusBusAirSuspensionControl4RearAxleright()) mergeIOCANBusBusAirSuspensionControl4RearAxleright(other.getIOCANBusBusAirSuspensionControl4RearAxleright());  if (other.hasIOCANBusDashDisplayFuelLevel2()) mergeIOCANBusDashDisplayFuelLevel2(other.getIOCANBusDashDisplayFuelLevel2());  if (other.hasIOCANBusElectronicBrakeControllerBrakePedalPosition()) mergeIOCANBusElectronicBrakeControllerBrakePedalPosition(other.getIOCANBusElectronicBrakeControllerBrakePedalPosition());  if (other.hasIOCANBusFuelConsumptionGaseousTotalFuelUsed()) mergeIOCANBusFuelConsumptionGaseousTotalFuelUsed(other.getIOCANBusFuelConsumptionGaseousTotalFuelUsed());  if (other.hasIOCANBusTruckBusCruiseControlVehicleSpeedParkingBrakeSwitch()) mergeIOCANBusTruckBusCruiseControlVehicleSpeedParkingBrakeSwitch(other.getIOCANBusTruckBusCruiseControlVehicleSpeedParkingBrakeSwitch());  if (other.hasIOCANBusTruckBusCruiseControlVehicleSpeedWheelBasedSpeed()) mergeIOCANBusTruckBusCruiseControlVehicleSpeedWheelBasedSpeed(other.getIOCANBusTruckBusCruiseControlVehicleSpeedWheelBasedSpeed());  if (other.hasIOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlActive()) mergeIOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlActive(other.getIOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlActive());  if (other.hasIOCANBusTruckBusCruiseControlVehicleSpeedBrakeSwitch()) mergeIOCANBusTruckBusCruiseControlVehicleSpeedBrakeSwitch(other.getIOCANBusTruckBusCruiseControlVehicleSpeedBrakeSwitch());  if (other.hasIOCANBusTruckBusCruiseControlVehicleSpeedClutchSwitch()) mergeIOCANBusTruckBusCruiseControlVehicleSpeedClutchSwitch(other.getIOCANBusTruckBusCruiseControlVehicleSpeedClutchSwitch());  if (other.hasIOCANBusTruckBusCruiseControlVehicleSpeedPtoState()) mergeIOCANBusTruckBusCruiseControlVehicleSpeedPtoState(other.getIOCANBusTruckBusCruiseControlVehicleSpeedPtoState());  if (other.hasIOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlStates()) mergeIOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlStates(other.getIOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlStates());  if (other.hasIOCANBusBusVehicleElectricalPowerHybridBatteryPackRemainingCharge()) mergeIOCANBusBusVehicleElectricalPowerHybridBatteryPackRemainingCharge(other.getIOCANBusBusVehicleElectricalPowerHybridBatteryPackRemainingCharge());  if (other.hasIOCANBusBusVehicleDynamicStabilityControl2SteeringWheelAngle()) mergeIOCANBusBusVehicleDynamicStabilityControl2SteeringWheelAngle(other.getIOCANBusBusVehicleDynamicStabilityControl2SteeringWheelAngle());  if (other.hasIOCANBusElectronicEngineController14FuelType()) mergeIOCANBusElectronicEngineController14FuelType(other.getIOCANBusElectronicEngineController14FuelType());  if (other.hasIOCANBusEngineFluidLevelPressureEngineOilLevel()) mergeIOCANBusEngineFluidLevelPressureEngineOilLevel(other.getIOCANBusEngineFluidLevelPressureEngineOilLevel());  if (other.hasIOCANBusEngineFluidLevelPressureEngineOilPressure()) mergeIOCANBusEngineFluidLevelPressureEngineOilPressure(other.getIOCANBusEngineFluidLevelPressureEngineOilPressure());  if (other.hasIOCANBusEngineFluidLevelPressureCoolantLevel()) mergeIOCANBusEngineFluidLevelPressureCoolantLevel(other.getIOCANBusEngineFluidLevelPressureCoolantLevel());  if (other.hasIOCANBusTellTaleStatus()) mergeIOCANBusTellTaleStatus(other.getIOCANBusTellTaleStatus());  if (other.hasIOCANBusFuelConsumptionEngineTotalFuelUsed()) mergeIOCANBusFuelConsumptionEngineTotalFuelUsed(other.getIOCANBusFuelConsumptionEngineTotalFuelUsed());  if (other.hasIOCANBusTruckVehicleWeightAxleWeight4()) mergeIOCANBusTruckVehicleWeightAxleWeight4(other.getIOCANBusTruckVehicleWeightAxleWeight4());  mergeUnknownFields(other.unknownFields); onChanged(); return this; } public final boolean isInitialized() { return true; } public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { DolphinConfig.Config parsedMessage = null; try { parsedMessage = (DolphinConfig.Config)DolphinConfig.Config.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (DolphinConfig.Config)e.getUnfinishedMessage(); throw e.unwrapIOException(); } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; } public int getSerialPortBaudrateValue() { return this.serialPortBaudrate_; } public Builder setSerialPortBaudrateValue(int value) { this.serialPortBaudrate_ = value; onChanged(); return this; } public DolphinConfig.SerialBaudrate getSerialPortBaudrate() { DolphinConfig.SerialBaudrate result = DolphinConfig.SerialBaudrate.valueOf(this.serialPortBaudrate_); return (result == null) ? DolphinConfig.SerialBaudrate.UNRECOGNIZED : result; } public Builder setSerialPortBaudrate(DolphinConfig.SerialBaudrate value) { if (value == null) throw new NullPointerException();  this.serialPortBaudrate_ = value.getNumber(); onChanged(); return this; } public Builder clearSerialPortBaudrate() { this.serialPortBaudrate_ = 0; onChanged(); return this; } public boolean getDoNotResetDeviceOnProblems() { return this.doNotResetDeviceOnProblems_; } public Builder setDoNotResetDeviceOnProblems(boolean value) { this.doNotResetDeviceOnProblems_ = value; onChanged(); return this; } public Builder clearDoNotResetDeviceOnProblems() { this.doNotResetDeviceOnProblems_ = false; onChanged(); return this; } public String getPassword() { Object ref = this.password_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.password_ = s; return s; }  return (String)ref; } public ByteString getPasswordBytes() { Object ref = this.password_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.password_ = b; return b; }  return (ByteString)ref; } public Builder setPassword(String value) { if (value == null) throw new NullPointerException();  this.password_ = value; onChanged(); return this; } public Builder clearPassword() { this.password_ = DolphinConfig.Config.getDefaultInstance().getPassword(); onChanged(); return this; } public Builder setPasswordBytes(ByteString value) { if (value == null) throw new NullPointerException();  DolphinConfig.Config.checkByteStringIsUtf8(value); this.password_ = value; onChanged(); return this; } public int getMovementValue() { return this.movement_; } public Builder setMovementValue(int value) { this.movement_ = value; onChanged(); return this; } public DolphinConfig.MovementSource getMovement() { DolphinConfig.MovementSource result = DolphinConfig.MovementSource.valueOf(this.movement_); return (result == null) ? DolphinConfig.MovementSource.UNRECOGNIZED : result; } public Builder setMovement(DolphinConfig.MovementSource value) { if (value == null) throw new NullPointerException();  this.movement_ = value.getNumber(); onChanged(); return this; } public Builder clearMovement() { this.movement_ = 0; onChanged(); return this; } public int getMovementSensorSensitivity() { return this.movementSensorSensitivity_; } public Builder setMovementSensorSensitivity(int value) { this.movementSensorSensitivity_ = value; onChanged(); return this; } public Builder clearMovementSensorSensitivity() { this.movementSensorSensitivity_ = 0; onChanged(); return this; } public int getSleepValue() { return this.sleep_; } public Builder setSleepValue(int value) { this.sleep_ = value; onChanged(); return this; } public DolphinConfig.SleepMode getSleep() { DolphinConfig.SleepMode result = DolphinConfig.SleepMode.valueOf(this.sleep_); return (result == null) ? DolphinConfig.SleepMode.UNRECOGNIZED : result; } public Builder setSleep(DolphinConfig.SleepMode value) { if (value == null) throw new NullPointerException();  this.sleep_ = value.getNumber(); onChanged(); return this; } public Builder clearSleep() { this.sleep_ = 0; onChanged(); return this; } public int getSleepTimeout() { return this.sleepTimeout_; } public Builder setSleepTimeout(int value) { this.sleepTimeout_ = value; onChanged(); return this; } public Builder clearSleepTimeout() { this.sleepTimeout_ = 0; onChanged(); return this; } public int getEngineOnValue() { return this.engineOn_; } public Builder setEngineOnValue(int value) { this.engineOn_ = value; onChanged(); return this; } public DolphinConfig.EngineMode getEngineOn() { DolphinConfig.EngineMode result = DolphinConfig.EngineMode.valueOf(this.engineOn_); return (result == null) ? DolphinConfig.EngineMode.UNRECOGNIZED : result; } public Builder setEngineOn(DolphinConfig.EngineMode value) { if (value == null) throw new NullPointerException();  this.engineOn_ = value.getNumber(); onChanged(); return this; } public Builder clearEngineOn() { this.engineOn_ = 0; onChanged(); return this; } public boolean getEngineOnDIN1() { return this.engineOnDIN1_; } public Builder setEngineOnDIN1(boolean value) { this.engineOnDIN1_ = value; onChanged(); return this; } public Builder clearEngineOnDIN1() { this.engineOnDIN1_ = false; onChanged(); return this; } public boolean getEngineOnDIN2() { return this.engineOnDIN2_; } public Builder setEngineOnDIN2(boolean value) { this.engineOnDIN2_ = value; onChanged(); return this; } public Builder clearEngineOnDIN2() { this.engineOnDIN2_ = false; onChanged(); return this; } public boolean getEngineOnMovementSensor() { return this.engineOnMovementSensor_; } public Builder setEngineOnMovementSensor(boolean value) { this.engineOnMovementSensor_ = value; onChanged(); return this; } public Builder clearEngineOnMovementSensor() { this.engineOnMovementSensor_ = false; onChanged(); return this; } public boolean getEngineOnPowerSupplyAvailable() { return this.engineOnPowerSupplyAvailable_; } public Builder setEngineOnPowerSupplyAvailable(boolean value) { this.engineOnPowerSupplyAvailable_ = value; onChanged(); return this; } public Builder clearEngineOnPowerSupplyAvailable() { this.engineOnPowerSupplyAvailable_ = false; onChanged(); return this; } public int getEngineOnGpsSpeed() { return this.engineOnGpsSpeed_; } public Builder setEngineOnGpsSpeed(int value) { this.engineOnGpsSpeed_ = value; onChanged(); return this; } public Builder clearEngineOnGpsSpeed() { this.engineOnGpsSpeed_ = 0; onChanged(); return this; } public int getEngineOnCanRPM() { return this.engineOnCanRPM_; } public Builder setEngineOnCanRPM(int value) { this.engineOnCanRPM_ = value; onChanged(); return this; } public Builder clearEngineOnCanRPM() { this.engineOnCanRPM_ = 0; onChanged(); return this; } public int getEngineOnMinActiveStateDuration() { return this.engineOnMinActiveStateDuration_; } public Builder setEngineOnMinActiveStateDuration(int value) { this.engineOnMinActiveStateDuration_ = value; onChanged(); return this; } public Builder clearEngineOnMinActiveStateDuration() { this.engineOnMinActiveStateDuration_ = 0; onChanged(); return this; } public int getEngineOnOperatorValue() { return this.engineOnOperator_; } public Builder setEngineOnOperatorValue(int value) { this.engineOnOperator_ = value; onChanged(); return this; } public DolphinConfig.ConditionOperator getEngineOnOperator() { DolphinConfig.ConditionOperator result = DolphinConfig.ConditionOperator.valueOf(this.engineOnOperator_); return (result == null) ? DolphinConfig.ConditionOperator.UNRECOGNIZED : result; } public Builder setEngineOnOperator(DolphinConfig.ConditionOperator value) { if (value == null) throw new NullPointerException();  this.engineOnOperator_ = value.getNumber(); onChanged(); return this; } public Builder clearEngineOnOperator() { this.engineOnOperator_ = 0; onChanged(); return this; } public int getEngineOnMovementStartDelay() { return this.engineOnMovementStartDelay_; } public Builder setEngineOnMovementStartDelay(int value) { this.engineOnMovementStartDelay_ = value; onChanged(); return this; } public Builder clearEngineOnMovementStartDelay() { this.engineOnMovementStartDelay_ = 0; onChanged(); return this; } public int getEngineOnMovementStopDelay() { return this.engineOnMovementStopDelay_; } public Builder setEngineOnMovementStopDelay(int value) { this.engineOnMovementStopDelay_ = value; onChanged(); return this; } public Builder clearEngineOnMovementStopDelay() { this.engineOnMovementStopDelay_ = 0; onChanged(); return this; } public int getEngineOnExternalVoltage() { return this.engineOnExternalVoltage_; } public Builder setEngineOnExternalVoltage(int value) { this.engineOnExternalVoltage_ = value; onChanged(); return this; } public Builder clearEngineOnExternalVoltage() { this.engineOnExternalVoltage_ = 0; onChanged(); return this; } public boolean getLedIndication() { return this.ledIndication_; } public Builder setLedIndication(boolean value) { this.ledIndication_ = value; onChanged(); return this; } public Builder clearLedIndication() { this.ledIndication_ = false; onChanged(); return this; } public int getGNSSValue() { return this.gNSS_; } public Builder setGNSSValue(int value) { this.gNSS_ = value; onChanged(); return this; } public DolphinConfig.GNSSMode getGNSS() { DolphinConfig.GNSSMode result = DolphinConfig.GNSSMode.valueOf(this.gNSS_); return (result == null) ? DolphinConfig.GNSSMode.UNRECOGNIZED : result; } public Builder setGNSS(DolphinConfig.GNSSMode value) { if (value == null) throw new NullPointerException();  this.gNSS_ = value.getNumber(); onChanged(); return this; } public Builder clearGNSS() { this.gNSS_ = 0; onChanged(); return this; } public boolean getStaticNavigationEnabled() { return this.staticNavigationEnabled_; } public Builder setStaticNavigationEnabled(boolean value) { this.staticNavigationEnabled_ = value; onChanged(); return this; } public Builder clearStaticNavigationEnabled() { this.staticNavigationEnabled_ = false; onChanged(); return this; } public int getStaticNavigationSourceValue() { return this.staticNavigationSource_; } public Builder setStaticNavigationSourceValue(int value) { this.staticNavigationSource_ = value; onChanged(); return this; } public DolphinConfig.StaticNavigationSource getStaticNavigationSource() { DolphinConfig.StaticNavigationSource result = DolphinConfig.StaticNavigationSource.valueOf(this.staticNavigationSource_); return (result == null) ? DolphinConfig.StaticNavigationSource.UNRECOGNIZED : result; } public Builder setStaticNavigationSource(DolphinConfig.StaticNavigationSource value) { if (value == null) throw new NullPointerException();  this.staticNavigationSource_ = value.getNumber(); onChanged(); return this; } public Builder clearStaticNavigationSource() { this.staticNavigationSource_ = 0; onChanged(); return this; } public int getRecordsSaveAndSendModeValue() { return this.recordsSaveAndSendMode_; } public Builder setRecordsSaveAndSendModeValue(int value) { this.recordsSaveAndSendMode_ = value; onChanged(); return this; } public DolphinConfig.RecordsMode getRecordsSaveAndSendMode() { DolphinConfig.RecordsMode result = DolphinConfig.RecordsMode.valueOf(this.recordsSaveAndSendMode_); return (result == null) ? DolphinConfig.RecordsMode.UNRECOGNIZED : result; } public Builder setRecordsSaveAndSendMode(DolphinConfig.RecordsMode value) { if (value == null) throw new NullPointerException();  this.recordsSaveAndSendMode_ = value.getNumber(); onChanged(); return this; } public Builder clearRecordsSaveAndSendMode() { this.recordsSaveAndSendMode_ = 0; onChanged(); return this; } public int getTimeSynchronizationValue() { return this.timeSynchronization_; } public Builder setTimeSynchronizationValue(int value) { this.timeSynchronization_ = value; onChanged(); return this; } public DolphinConfig.TimeSynchronization getTimeSynchronization() { DolphinConfig.TimeSynchronization result = DolphinConfig.TimeSynchronization.valueOf(this.timeSynchronization_); return (result == null) ? DolphinConfig.TimeSynchronization.UNRECOGNIZED : result; } public Builder setTimeSynchronization(DolphinConfig.TimeSynchronization value) { if (value == null) throw new NullPointerException();  this.timeSynchronization_ = value.getNumber(); onChanged(); return this; } public Builder clearTimeSynchronization() { this.timeSynchronization_ = 0; onChanged(); return this; } public String getNTPServer() { Object ref = this.nTPServer_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.nTPServer_ = s; return s; }  return (String)ref; } public ByteString getNTPServerBytes() { Object ref = this.nTPServer_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.nTPServer_ = b; return b; }  return (ByteString)ref; } public Builder setNTPServer(String value) { if (value == null) throw new NullPointerException();  this.nTPServer_ = value; onChanged(); return this; } public Builder clearNTPServer() { this.nTPServer_ = DolphinConfig.Config.getDefaultInstance().getNTPServer(); onChanged(); return this; } public Builder setNTPServerBytes(ByteString value) { if (value == null) throw new NullPointerException();  DolphinConfig.Config.checkByteStringIsUtf8(value); this.nTPServer_ = value; onChanged(); return this; } public int getNTPInterval() { return this.nTPInterval_; } public Builder setNTPInterval(int value) { this.nTPInterval_ = value; onChanged(); return this; } public Builder clearNTPInterval() { this.nTPInterval_ = 0; onChanged(); return this; } public int getSleepNoPowerTimeout() { return this.sleepNoPowerTimeout_; } public Builder setSleepNoPowerTimeout(int value) { this.sleepNoPowerTimeout_ = value; onChanged(); return this; } public Builder clearSleepNoPowerTimeout() { this.sleepNoPowerTimeout_ = 0; onChanged(); return this; } public boolean getSendPing() { return this.sendPing_; } public Builder setSendPing(boolean value) { this.sendPing_ = value; onChanged(); return this; } public Builder clearSendPing() { this.sendPing_ = false; onChanged(); return this; } public boolean getTimetableMode() { return this.timetableMode_; } public Builder setTimetableMode(boolean value) { this.timetableMode_ = value; onChanged(); return this; } public Builder clearTimetableMode() { this.timetableMode_ = false; onChanged(); return this; } public ByteString getTimetableData() { return this.timetableData_; } public Builder setTimetableData(ByteString value) { if (value == null) throw new NullPointerException();  this.timetableData_ = value; onChanged(); return this; } public Builder clearTimetableData() { this.timetableData_ = DolphinConfig.Config.getDefaultInstance().getTimetableData(); onChanged(); return this; } public boolean hasService1() { return (this.service1Builder_ != null || this.service1_ != null); } public DolphinConfig.Service getService1() { if (this.service1Builder_ == null) return (this.service1_ == null) ? DolphinConfig.Service.getDefaultInstance() : this.service1_;  return (DolphinConfig.Service)this.service1Builder_.getMessage(); } public Builder setService1(DolphinConfig.Service value) { if (this.service1Builder_ == null) { if (value == null) throw new NullPointerException();  this.service1_ = value; onChanged(); } else { this.service1Builder_.setMessage((AbstractMessage)value); }  return this; } public Builder setService1(DolphinConfig.Service.Builder builderForValue) { if (this.service1Builder_ == null) { this.service1_ = builderForValue.build(); onChanged(); } else { this.service1Builder_.setMessage((AbstractMessage)builderForValue.build()); }  return this; } public Builder mergeService1(DolphinConfig.Service value) { if (this.service1Builder_ == null) { if (this.service1_ != null) { this.service1_ = DolphinConfig.Service.newBuilder(this.service1_).mergeFrom(value).buildPartial(); } else { this.service1_ = value; }  onChanged(); } else { this.service1Builder_.mergeFrom((AbstractMessage)value); }  return this; } public Builder clearService1() { if (this.service1Builder_ == null) { this.service1_ = null; onChanged(); } else { this.service1_ = null; this.service1Builder_ = null; }  return this; } public DolphinConfig.Service.Builder getService1Builder() { onChanged(); return (DolphinConfig.Service.Builder)getService1FieldBuilder().getBuilder(); } public DolphinConfig.ServiceOrBuilder getService1OrBuilder() { if (this.service1Builder_ != null) return (DolphinConfig.ServiceOrBuilder)this.service1Builder_.getMessageOrBuilder();  return (this.service1_ == null) ? DolphinConfig.Service.getDefaultInstance() : this.service1_; } private SingleFieldBuilderV3<DolphinConfig.Service, DolphinConfig.Service.Builder, DolphinConfig.ServiceOrBuilder> getService1FieldBuilder() { if (this.service1Builder_ == null) { this.service1Builder_ = new SingleFieldBuilderV3((AbstractMessage)getService1(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean()); this.service1_ = null; }  return this.service1Builder_; } public boolean hasService2() { return (this.service2Builder_ != null || this.service2_ != null); } public DolphinConfig.Service getService2() { if (this.service2Builder_ == null) return (this.service2_ == null) ? DolphinConfig.Service.getDefaultInstance() : this.service2_;  return (DolphinConfig.Service)this.service2Builder_.getMessage(); } public Builder setService2(DolphinConfig.Service value) { if (this.service2Builder_ == null) { if (value == null) throw new NullPointerException();  this.service2_ = value; onChanged(); } else { this.service2Builder_.setMessage((AbstractMessage)value); }  return this; } public Builder setService2(DolphinConfig.Service.Builder builderForValue) { if (this.service2Builder_ == null) { this.service2_ = builderForValue.build(); onChanged(); } else { this.service2Builder_.setMessage((AbstractMessage)builderForValue.build()); }  return this; } public Builder mergeService2(DolphinConfig.Service value) { if (this.service2Builder_ == null) { if (this.service2_ != null) { this.service2_ = DolphinConfig.Service.newBuilder(this.service2_).mergeFrom(value).buildPartial(); } else { this.service2_ = value; }  onChanged(); } else { this.service2Builder_.mergeFrom((AbstractMessage)value); }  return this; } public Builder clearService2() { if (this.service2Builder_ == null) { this.service2_ = null; onChanged(); } else { this.service2_ = null; this.service2Builder_ = null; }  return this; } public DolphinConfig.Service.Builder getService2Builder() { onChanged(); return (DolphinConfig.Service.Builder)getService2FieldBuilder().getBuilder(); } public DolphinConfig.ServiceOrBuilder getService2OrBuilder() { if (this.service2Builder_ != null) return (DolphinConfig.ServiceOrBuilder)this.service2Builder_.getMessageOrBuilder();  return (this.service2_ == null) ? DolphinConfig.Service.getDefaultInstance() : this.service2_; } private SingleFieldBuilderV3<DolphinConfig.Service, DolphinConfig.Service.Builder, DolphinConfig.ServiceOrBuilder> getService2FieldBuilder() { if (this.service2Builder_ == null) { this.service2Builder_ = new SingleFieldBuilderV3((AbstractMessage)getService2(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean()); this.service2_ = null; }  return this.service2Builder_; } public boolean hasService3() { return (this.service3Builder_ != null || this.service3_ != null); } public DolphinConfig.Service getService3() { if (this.service3Builder_ == null) return (this.service3_ == null) ? DolphinConfig.Service.getDefaultInstance() : this.service3_;  return (DolphinConfig.Service)this.service3Builder_.getMessage(); } public Builder setService3(DolphinConfig.Service value) { if (this.service3Builder_ == null) { if (value == null) throw new NullPointerException();  this.service3_ = value; onChanged(); } else { this.service3Builder_.setMessage((AbstractMessage)value); }  return this; } public Builder setService3(DolphinConfig.Service.Builder builderForValue) { if (this.service3Builder_ == null) { this.service3_ = builderForValue.build(); onChanged(); } else { this.service3Builder_.setMessage((AbstractMessage)builderForValue.build()); }  return this; } public Builder mergeService3(DolphinConfig.Service value) { if (this.service3Builder_ == null) { if (this.service3_ != null) { this.service3_ = DolphinConfig.Service.newBuilder(this.service3_).mergeFrom(value).buildPartial(); } else { this.service3_ = value; }  onChanged(); } else { this.service3Builder_.mergeFrom((AbstractMessage)value); }  return this; } public Builder clearService3() { if (this.service3Builder_ == null) { this.service3_ = null; onChanged(); } else { this.service3_ = null; this.service3Builder_ = null; }  return this; } public DolphinConfig.Service.Builder getService3Builder() { onChanged(); return (DolphinConfig.Service.Builder)getService3FieldBuilder().getBuilder(); } public DolphinConfig.ServiceOrBuilder getService3OrBuilder() { if (this.service3Builder_ != null) return (DolphinConfig.ServiceOrBuilder)this.service3Builder_.getMessageOrBuilder();  return (this.service3_ == null) ? DolphinConfig.Service.getDefaultInstance() : this.service3_; } private SingleFieldBuilderV3<DolphinConfig.Service, DolphinConfig.Service.Builder, DolphinConfig.ServiceOrBuilder> getService3FieldBuilder() { if (this.service3Builder_ == null) { this.service3Builder_ = new SingleFieldBuilderV3((AbstractMessage)getService3(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean()); this.service3_ = null; }  return this.service3Builder_; } public int getAnalogInput1AverageTime() { return this.analogInput1AverageTime_; } public Builder setAnalogInput1AverageTime(int value) { this.analogInput1AverageTime_ = value; onChanged(); return this; } public Builder clearAnalogInput1AverageTime() { this.analogInput1AverageTime_ = 0; onChanged(); return this; } public int getAnalogInput2AverageTime() { return this.analogInput2AverageTime_; } public Builder setAnalogInput2AverageTime(int value) { this.analogInput2AverageTime_ = value; onChanged(); return this; } public Builder clearAnalogInput2AverageTime() { this.analogInput2AverageTime_ = 0; onChanged(); return this; } public int getAnalogInput3AverageTime() { return this.analogInput3AverageTime_; } public Builder setAnalogInput3AverageTime(int value) { this.analogInput3AverageTime_ = value; onChanged(); return this; } public Builder clearAnalogInput3AverageTime() { this.analogInput3AverageTime_ = 0; onChanged(); return this; } public int getBluetoothRadioModeValue() { return this.bluetoothRadioMode_; } public Builder setBluetoothRadioModeValue(int value) { this.bluetoothRadioMode_ = value; onChanged(); return this; } public DolphinConfig.BluetoothMode getBluetoothRadioMode() { DolphinConfig.BluetoothMode result = DolphinConfig.BluetoothMode.valueOf(this.bluetoothRadioMode_); return (result == null) ? DolphinConfig.BluetoothMode.UNRECOGNIZED : result; } public Builder setBluetoothRadioMode(DolphinConfig.BluetoothMode value) { if (value == null) throw new NullPointerException();  this.bluetoothRadioMode_ = value.getNumber(); onChanged(); return this; } public Builder clearBluetoothRadioMode() { this.bluetoothRadioMode_ = 0; onChanged(); return this; } public String getBluetoothName() { Object ref = this.bluetoothName_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.bluetoothName_ = s; return s; }  return (String)ref; } public ByteString getBluetoothNameBytes() { Object ref = this.bluetoothName_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.bluetoothName_ = b; return b; }  return (ByteString)ref; } public Builder setBluetoothName(String value) { if (value == null) throw new NullPointerException();  this.bluetoothName_ = value; onChanged(); return this; } public Builder clearBluetoothName() { this.bluetoothName_ = DolphinConfig.Config.getDefaultInstance().getBluetoothName(); onChanged(); return this; } public Builder setBluetoothNameBytes(ByteString value) { if (value == null) throw new NullPointerException();  DolphinConfig.Config.checkByteStringIsUtf8(value); this.bluetoothName_ = value; onChanged(); return this; } public String getBluetoothPIN() { Object ref = this.bluetoothPIN_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.bluetoothPIN_ = s; return s; }  return (String)ref; } public ByteString getBluetoothPINBytes() { Object ref = this.bluetoothPIN_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.bluetoothPIN_ = b; return b; }  return (ByteString)ref; } public Builder setBluetoothPIN(String value) { if (value == null) throw new NullPointerException();  this.bluetoothPIN_ = value; onChanged(); return this; } public Builder clearBluetoothPIN() { this.bluetoothPIN_ = DolphinConfig.Config.getDefaultInstance().getBluetoothPIN(); onChanged(); return this; } public Builder setBluetoothPINBytes(ByteString value) { if (value == null) throw new NullPointerException();  DolphinConfig.Config.checkByteStringIsUtf8(value); this.bluetoothPIN_ = value; onChanged(); return this; } public int getBluetoothSecurityModeValue() { return this.bluetoothSecurityMode_; } public Builder setBluetoothSecurityModeValue(int value) { this.bluetoothSecurityMode_ = value; onChanged(); return this; } public DolphinConfig.BluetoothSecurityMode getBluetoothSecurityMode() { DolphinConfig.BluetoothSecurityMode result = DolphinConfig.BluetoothSecurityMode.valueOf(this.bluetoothSecurityMode_); return (result == null) ? DolphinConfig.BluetoothSecurityMode.UNRECOGNIZED : result; } public Builder setBluetoothSecurityMode(DolphinConfig.BluetoothSecurityMode value) { if (value == null) throw new NullPointerException();  this.bluetoothSecurityMode_ = value.getNumber(); onChanged(); return this; } public Builder clearBluetoothSecurityMode() { this.bluetoothSecurityMode_ = 0; onChanged(); return this; } public boolean getBluetoothPowerDownOnSleep() { return this.bluetoothPowerDownOnSleep_; } public Builder setBluetoothPowerDownOnSleep(boolean value) { this.bluetoothPowerDownOnSleep_ = value; onChanged(); return this; } public Builder clearBluetoothPowerDownOnSleep() { this.bluetoothPowerDownOnSleep_ = false; onChanged(); return this; } public int getBluetoothExternalConnectionModeValue() { return this.bluetoothExternalConnectionMode_; } public Builder setBluetoothExternalConnectionModeValue(int value) { this.bluetoothExternalConnectionMode_ = value; onChanged(); return this; } public DolphinConfig.BluetoothExternalConnectionMode getBluetoothExternalConnectionMode() { DolphinConfig.BluetoothExternalConnectionMode result = DolphinConfig.BluetoothExternalConnectionMode.valueOf(this.bluetoothExternalConnectionMode_); return (result == null) ? DolphinConfig.BluetoothExternalConnectionMode.UNRECOGNIZED : result; } public Builder setBluetoothExternalConnectionMode(DolphinConfig.BluetoothExternalConnectionMode value) { if (value == null) throw new NullPointerException();  this.bluetoothExternalConnectionMode_ = value.getNumber(); onChanged(); return this; } public Builder clearBluetoothExternalConnectionMode() { this.bluetoothExternalConnectionMode_ = 0; onChanged(); return this; } public String getBluetoothExternalDeviceMAC() { Object ref = this.bluetoothExternalDeviceMAC_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.bluetoothExternalDeviceMAC_ = s; return s; }  return (String)ref; } public ByteString getBluetoothExternalDeviceMACBytes() { Object ref = this.bluetoothExternalDeviceMAC_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.bluetoothExternalDeviceMAC_ = b; return b; }  return (ByteString)ref; } public Builder setBluetoothExternalDeviceMAC(String value) { if (value == null) throw new NullPointerException();  this.bluetoothExternalDeviceMAC_ = value; onChanged(); return this; } public Builder clearBluetoothExternalDeviceMAC() { this.bluetoothExternalDeviceMAC_ = DolphinConfig.Config.getDefaultInstance().getBluetoothExternalDeviceMAC(); onChanged(); return this; } public Builder setBluetoothExternalDeviceMACBytes(ByteString value) { if (value == null) throw new NullPointerException();  DolphinConfig.Config.checkByteStringIsUtf8(value); this.bluetoothExternalDeviceMAC_ = value; onChanged(); return this; } public String getBluetoothExternalDeviceName() { Object ref = this.bluetoothExternalDeviceName_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.bluetoothExternalDeviceName_ = s; return s; }  return (String)ref; } public ByteString getBluetoothExternalDeviceNameBytes() { Object ref = this.bluetoothExternalDeviceName_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.bluetoothExternalDeviceName_ = b; return b; }  return (ByteString)ref; } public Builder setBluetoothExternalDeviceName(String value) { if (value == null) throw new NullPointerException();  this.bluetoothExternalDeviceName_ = value; onChanged(); return this; } public Builder clearBluetoothExternalDeviceName() { this.bluetoothExternalDeviceName_ = DolphinConfig.Config.getDefaultInstance().getBluetoothExternalDeviceName(); onChanged(); return this; } public Builder setBluetoothExternalDeviceNameBytes(ByteString value) { if (value == null) throw new NullPointerException();  DolphinConfig.Config.checkByteStringIsUtf8(value); this.bluetoothExternalDeviceName_ = value; onChanged(); return this; } public String getBluetoothExternalDevicePIN() { Object ref = this.bluetoothExternalDevicePIN_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.bluetoothExternalDevicePIN_ = s; return s; }  return (String)ref; } public ByteString getBluetoothExternalDevicePINBytes() { Object ref = this.bluetoothExternalDevicePIN_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.bluetoothExternalDevicePIN_ = b; return b; }  return (ByteString)ref; } public Builder setBluetoothExternalDevicePIN(String value) { if (value == null) throw new NullPointerException();  this.bluetoothExternalDevicePIN_ = value; onChanged(); return this; } public Builder clearBluetoothExternalDevicePIN() { this.bluetoothExternalDevicePIN_ = DolphinConfig.Config.getDefaultInstance().getBluetoothExternalDevicePIN(); onChanged(); return this; } public Builder setBluetoothExternalDevicePINBytes(ByteString value) { if (value == null) throw new NullPointerException();  DolphinConfig.Config.checkByteStringIsUtf8(value); this.bluetoothExternalDevicePIN_ = value; onChanged(); return this; } public String getBluetoothAuthorizedMAC1() { Object ref = this.bluetoothAuthorizedMAC1_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.bluetoothAuthorizedMAC1_ = s; return s; }  return (String)ref; } public ByteString getBluetoothAuthorizedMAC1Bytes() { Object ref = this.bluetoothAuthorizedMAC1_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.bluetoothAuthorizedMAC1_ = b; return b; }  return (ByteString)ref; } public Builder setBluetoothAuthorizedMAC1(String value) { if (value == null) throw new NullPointerException();  this.bluetoothAuthorizedMAC1_ = value; onChanged(); return this; } public Builder clearBluetoothAuthorizedMAC1() { this.bluetoothAuthorizedMAC1_ = DolphinConfig.Config.getDefaultInstance().getBluetoothAuthorizedMAC1(); onChanged(); return this; } public Builder setBluetoothAuthorizedMAC1Bytes(ByteString value) { if (value == null) throw new NullPointerException();  DolphinConfig.Config.checkByteStringIsUtf8(value); this.bluetoothAuthorizedMAC1_ = value; onChanged(); return this; } public String getBluetoothAuthorizedMAC2() { Object ref = this.bluetoothAuthorizedMAC2_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.bluetoothAuthorizedMAC2_ = s; return s; }  return (String)ref; } public ByteString getBluetoothAuthorizedMAC2Bytes() { Object ref = this.bluetoothAuthorizedMAC2_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.bluetoothAuthorizedMAC2_ = b; return b; }  return (ByteString)ref; } public Builder setBluetoothAuthorizedMAC2(String value) { if (value == null) throw new NullPointerException();  this.bluetoothAuthorizedMAC2_ = value; onChanged(); return this; } public Builder clearBluetoothAuthorizedMAC2() { this.bluetoothAuthorizedMAC2_ = DolphinConfig.Config.getDefaultInstance().getBluetoothAuthorizedMAC2(); onChanged(); return this; } public Builder setBluetoothAuthorizedMAC2Bytes(ByteString value) { if (value == null) throw new NullPointerException();  DolphinConfig.Config.checkByteStringIsUtf8(value); this.bluetoothAuthorizedMAC2_ = value; onChanged(); return this; } public String getBluetoothAuthorizedMAC3() { Object ref = this.bluetoothAuthorizedMAC3_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.bluetoothAuthorizedMAC3_ = s; return s; }  return (String)ref; } public ByteString getBluetoothAuthorizedMAC3Bytes() { Object ref = this.bluetoothAuthorizedMAC3_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.bluetoothAuthorizedMAC3_ = b; return b; }  return (ByteString)ref; } public Builder setBluetoothAuthorizedMAC3(String value) { if (value == null) throw new NullPointerException();  this.bluetoothAuthorizedMAC3_ = value; onChanged(); return this; } public Builder clearBluetoothAuthorizedMAC3() { this.bluetoothAuthorizedMAC3_ = DolphinConfig.Config.getDefaultInstance().getBluetoothAuthorizedMAC3(); onChanged(); return this; } public Builder setBluetoothAuthorizedMAC3Bytes(ByteString value) { if (value == null) throw new NullPointerException();  DolphinConfig.Config.checkByteStringIsUtf8(value); this.bluetoothAuthorizedMAC3_ = value; onChanged(); return this; } public String getBluetoothAuthorizedMAC4() { Object ref = this.bluetoothAuthorizedMAC4_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.bluetoothAuthorizedMAC4_ = s; return s; }  return (String)ref; } public ByteString getBluetoothAuthorizedMAC4Bytes() { Object ref = this.bluetoothAuthorizedMAC4_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.bluetoothAuthorizedMAC4_ = b; return b; }  return (ByteString)ref; } public Builder setBluetoothAuthorizedMAC4(String value) { if (value == null) throw new NullPointerException();  this.bluetoothAuthorizedMAC4_ = value; onChanged(); return this; } public Builder clearBluetoothAuthorizedMAC4() { this.bluetoothAuthorizedMAC4_ = DolphinConfig.Config.getDefaultInstance().getBluetoothAuthorizedMAC4(); onChanged(); return this; } public Builder setBluetoothAuthorizedMAC4Bytes(ByteString value) { if (value == null) throw new NullPointerException();  DolphinConfig.Config.checkByteStringIsUtf8(value); this.bluetoothAuthorizedMAC4_ = value; onChanged(); return this; } public String getBluetoothAuthorizedMAC5() { Object ref = this.bluetoothAuthorizedMAC5_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.bluetoothAuthorizedMAC5_ = s; return s; }  return (String)ref; } public ByteString getBluetoothAuthorizedMAC5Bytes() { Object ref = this.bluetoothAuthorizedMAC5_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.bluetoothAuthorizedMAC5_ = b; return b; }  return (ByteString)ref; } public Builder setBluetoothAuthorizedMAC5(String value) { if (value == null) throw new NullPointerException();  this.bluetoothAuthorizedMAC5_ = value; onChanged(); return this; } public Builder clearBluetoothAuthorizedMAC5() { this.bluetoothAuthorizedMAC5_ = DolphinConfig.Config.getDefaultInstance().getBluetoothAuthorizedMAC5(); onChanged(); return this; } public Builder setBluetoothAuthorizedMAC5Bytes(ByteString value) { if (value == null) throw new NullPointerException();  DolphinConfig.Config.checkByteStringIsUtf8(value); this.bluetoothAuthorizedMAC5_ = value; onChanged(); return this; } public boolean getGPRSContextEnabled() { return this.gPRSContextEnabled_; } public Builder setGPRSContextEnabled(boolean value) { this.gPRSContextEnabled_ = value; onChanged(); return this; } public Builder clearGPRSContextEnabled() { this.gPRSContextEnabled_ = false; onChanged(); return this; } public String getGPRSApnName() { Object ref = this.gPRSApnName_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.gPRSApnName_ = s; return s; }  return (String)ref; } public ByteString getGPRSApnNameBytes() { Object ref = this.gPRSApnName_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.gPRSApnName_ = b; return b; }  return (ByteString)ref; } public Builder setGPRSApnName(String value) { if (value == null) throw new NullPointerException();  this.gPRSApnName_ = value; onChanged(); return this; } public Builder clearGPRSApnName() { this.gPRSApnName_ = DolphinConfig.Config.getDefaultInstance().getGPRSApnName(); onChanged(); return this; } public Builder setGPRSApnNameBytes(ByteString value) { if (value == null) throw new NullPointerException();  DolphinConfig.Config.checkByteStringIsUtf8(value); this.gPRSApnName_ = value; onChanged(); return this; } public String getGPRSApnUsername() { Object ref = this.gPRSApnUsername_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.gPRSApnUsername_ = s; return s; }  return (String)ref; } public ByteString getGPRSApnUsernameBytes() { Object ref = this.gPRSApnUsername_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.gPRSApnUsername_ = b; return b; }  return (ByteString)ref; } public Builder setGPRSApnUsername(String value) { if (value == null) throw new NullPointerException();  this.gPRSApnUsername_ = value; onChanged(); return this; } public Builder clearGPRSApnUsername() { this.gPRSApnUsername_ = DolphinConfig.Config.getDefaultInstance().getGPRSApnUsername(); onChanged(); return this; } public Builder setGPRSApnUsernameBytes(ByteString value) { if (value == null) throw new NullPointerException();  DolphinConfig.Config.checkByteStringIsUtf8(value); this.gPRSApnUsername_ = value; onChanged(); return this; } public String getGPRSApnPassword() { Object ref = this.gPRSApnPassword_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.gPRSApnPassword_ = s; return s; }  return (String)ref; } public ByteString getGPRSApnPasswordBytes() { Object ref = this.gPRSApnPassword_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.gPRSApnPassword_ = b; return b; }  return (ByteString)ref; } public Builder setGPRSApnPassword(String value) { if (value == null) throw new NullPointerException();  this.gPRSApnPassword_ = value; onChanged(); return this; } public Builder clearGPRSApnPassword() { this.gPRSApnPassword_ = DolphinConfig.Config.getDefaultInstance().getGPRSApnPassword(); onChanged(); return this; } public Builder setGPRSApnPasswordBytes(ByteString value) { if (value == null) throw new NullPointerException();  DolphinConfig.Config.checkByteStringIsUtf8(value); this.gPRSApnPassword_ = value; onChanged(); return this; } public boolean getGPRSCHAPAuthentication() { return this.gPRSCHAPAuthentication_; } public Builder setGPRSCHAPAuthentication(boolean value) { this.gPRSCHAPAuthentication_ = value; onChanged(); return this; } public Builder clearGPRSCHAPAuthentication() { this.gPRSCHAPAuthentication_ = false; onChanged(); return this; } public int getGPRSLinkTimeout() { return this.gPRSLinkTimeout_; } public Builder setGPRSLinkTimeout(int value) { this.gPRSLinkTimeout_ = value; onChanged(); return this; } public Builder clearGPRSLinkTimeout() { this.gPRSLinkTimeout_ = 0; onChanged(); return this; } public int getGPRSResponseTimeout() { return this.gPRSResponseTimeout_; } public Builder setGPRSResponseTimeout(int value) { this.gPRSResponseTimeout_ = value; onChanged(); return this; } public Builder clearGPRSResponseTimeout() { this.gPRSResponseTimeout_ = 0; onChanged(); return this; } public String getGPRSServerAddress() { Object ref = this.gPRSServerAddress_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.gPRSServerAddress_ = s; return s; }  return (String)ref; } public ByteString getGPRSServerAddressBytes() { Object ref = this.gPRSServerAddress_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.gPRSServerAddress_ = b; return b; }  return (ByteString)ref; } public Builder setGPRSServerAddress(String value) { if (value == null) throw new NullPointerException();  this.gPRSServerAddress_ = value; onChanged(); return this; } public Builder clearGPRSServerAddress() { this.gPRSServerAddress_ = DolphinConfig.Config.getDefaultInstance().getGPRSServerAddress(); onChanged(); return this; } public Builder setGPRSServerAddressBytes(ByteString value) { if (value == null) throw new NullPointerException();  DolphinConfig.Config.checkByteStringIsUtf8(value); this.gPRSServerAddress_ = value; onChanged(); return this; } public int getGPRSServerPort() { return this.gPRSServerPort_; } public Builder setGPRSServerPort(int value) { this.gPRSServerPort_ = value; onChanged(); return this; } public Builder clearGPRSServerPort() { this.gPRSServerPort_ = 0; onChanged(); return this; } public int getGPRSServerProtocolValue() { return this.gPRSServerProtocol_; } public Builder setGPRSServerProtocolValue(int value) { this.gPRSServerProtocol_ = value; onChanged(); return this; } public DolphinConfig.ServerProtocol getGPRSServerProtocol() { DolphinConfig.ServerProtocol result = DolphinConfig.ServerProtocol.valueOf(this.gPRSServerProtocol_); return (result == null) ? DolphinConfig.ServerProtocol.UNRECOGNIZED : result; } public Builder setGPRSServerProtocol(DolphinConfig.ServerProtocol value) { if (value == null) throw new NullPointerException();  this.gPRSServerProtocol_ = value.getNumber(); onChanged(); return this; } public Builder clearGPRSServerProtocol() { this.gPRSServerProtocol_ = 0; onChanged(); return this; } public String getGPRSBackupServerAddress() { Object ref = this.gPRSBackupServerAddress_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.gPRSBackupServerAddress_ = s; return s; }  return (String)ref; } public ByteString getGPRSBackupServerAddressBytes() { Object ref = this.gPRSBackupServerAddress_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.gPRSBackupServerAddress_ = b; return b; }  return (ByteString)ref; } public Builder setGPRSBackupServerAddress(String value) { if (value == null) throw new NullPointerException();  this.gPRSBackupServerAddress_ = value; onChanged(); return this; } public Builder clearGPRSBackupServerAddress() { this.gPRSBackupServerAddress_ = DolphinConfig.Config.getDefaultInstance().getGPRSBackupServerAddress(); onChanged(); return this; } public Builder setGPRSBackupServerAddressBytes(ByteString value) { if (value == null) throw new NullPointerException();  DolphinConfig.Config.checkByteStringIsUtf8(value); this.gPRSBackupServerAddress_ = value; onChanged(); return this; } public int getGPRSBackupServerPort() { return this.gPRSBackupServerPort_; } public Builder setGPRSBackupServerPort(int value) { this.gPRSBackupServerPort_ = value; onChanged(); return this; } public Builder clearGPRSBackupServerPort() { this.gPRSBackupServerPort_ = 0; onChanged(); return this; } public int getGPRSBackupServerProtocolValue() { return this.gPRSBackupServerProtocol_; } public Builder setGPRSBackupServerProtocolValue(int value) { this.gPRSBackupServerProtocol_ = value; onChanged(); return this; } public DolphinConfig.ServerProtocol getGPRSBackupServerProtocol() { DolphinConfig.ServerProtocol result = DolphinConfig.ServerProtocol.valueOf(this.gPRSBackupServerProtocol_); return (result == null) ? DolphinConfig.ServerProtocol.UNRECOGNIZED : result; } public Builder setGPRSBackupServerProtocol(DolphinConfig.ServerProtocol value) { if (value == null) throw new NullPointerException();  this.gPRSBackupServerProtocol_ = value.getNumber(); onChanged(); return this; } public Builder clearGPRSBackupServerProtocol() { this.gPRSBackupServerProtocol_ = 0; onChanged(); return this; } public boolean getGPRSSSLClientAuthentication() { return this.gPRSSSLClientAuthentication_; } public Builder setGPRSSSLClientAuthentication(boolean value) { this.gPRSSSLClientAuthentication_ = value; onChanged(); return this; } public Builder clearGPRSSSLClientAuthentication() { this.gPRSSSLClientAuthentication_ = false; onChanged(); return this; } public boolean getGPRSDataCompression() { return this.gPRSDataCompression_; } public Builder setGPRSDataCompression(boolean value) { this.gPRSDataCompression_ = value; onChanged(); return this; } public Builder clearGPRSDataCompression() { this.gPRSDataCompression_ = false; onChanged(); return this; } public int getAuthenticationModeValue() { return this.authenticationMode_; } public Builder setAuthenticationModeValue(int value) { this.authenticationMode_ = value; onChanged(); return this; } public DolphinConfig.AuthenticationMode getAuthenticationMode() { DolphinConfig.AuthenticationMode result = DolphinConfig.AuthenticationMode.valueOf(this.authenticationMode_); return (result == null) ? DolphinConfig.AuthenticationMode.UNRECOGNIZED : result; } public Builder setAuthenticationMode(DolphinConfig.AuthenticationMode value) { if (value == null) throw new NullPointerException();  this.authenticationMode_ = value.getNumber(); onChanged(); return this; } public Builder clearAuthenticationMode() { this.authenticationMode_ = 0; onChanged(); return this; } private Builder(GeneratedMessageV3.BuilderParent parent) { super(parent); this.serialPortBaudrate_ = 0; this.password_ = ""; this.movement_ = 0; this.sleep_ = 0; this.engineOn_ = 0; this.engineOnOperator_ = 0; this.gNSS_ = 0; this.staticNavigationSource_ = 0; this.recordsSaveAndSendMode_ = 0; this.timeSynchronization_ = 0; this.nTPServer_ = ""; this.timetableData_ = ByteString.EMPTY; this.bluetoothRadioMode_ = 0; this.bluetoothName_ = ""; this.bluetoothPIN_ = ""; this.bluetoothSecurityMode_ = 0; this.bluetoothExternalConnectionMode_ = 0; this.bluetoothExternalDeviceMAC_ = ""; this.bluetoothExternalDeviceName_ = ""; this.bluetoothExternalDevicePIN_ = ""; this.bluetoothAuthorizedMAC1_ = ""; this.bluetoothAuthorizedMAC2_ = ""; this.bluetoothAuthorizedMAC3_ = ""; this.bluetoothAuthorizedMAC4_ = ""; this.bluetoothAuthorizedMAC5_ = ""; this.gPRSApnName_ = ""; this.gPRSApnUsername_ = ""; this.gPRSApnPassword_ = ""; this.gPRSServerAddress_ = ""; this.gPRSServerProtocol_ = 0; this.gPRSBackupServerAddress_ = ""; this.gPRSBackupServerProtocol_ = 0; this.authenticationMode_ = 0; this.authenticationCode_ = ""; this.firmwareUpdateChannel_ = ""; this.firmwareUpdateServerAddress_ = ""; this.firmwareUpdateServerProtocol_ = 0; this.sMSDataSendNumber_ = ""; this.sMSPassword_ = ""; this.callIncommingCallAction_ = 0; this.authorizedNumber1_ = ""; this.authorizedNumber2_ = ""; this.authorizedNumber3_ = ""; this.authorizedNumber4_ = ""; this.authorizedNumber5_ = ""; this.authorizedNumber6_ = ""; this.authorizedNumber7_ = ""; this.authorizedNumber8_ = ""; this.authorizedNumber9_ = ""; this.authorizedNumber10_ = ""; this.gsmPredefinedNumber1_ = ""; this.gsmPredefinedNumber2_ = ""; this.gsmPredefinedNumber3_ = ""; this.gsmPredefinedNumber4_ = ""; this.gsmPredefinedNumber5_ = ""; this.gsmPredefinedNumber6_ = ""; this.gsmPredefinedNumber7_ = ""; this.gsmPredefinedNumber8_ = ""; this.gsmPredefinedNumber9_ = ""; this.gsmPredefinedNumber10_ = ""; this.roamingOperator1_ = ""; this.roamingOperator2_ = ""; this.roamingOperator3_ = ""; this.roamingOperator4_ = ""; this.roamingOperator5_ = ""; this.overspeedingDeactivationMode_ = 0; this.uSSDCode_ = ""; this.crashDetectionTrace_ = 0; this.crashDetectionSMSText_ = ""; this.driverRegistrationMode_ = 0; this.driverRegistrationAuthentication_ = 0; this.driverRegistrationBuzzerDigitalOutput_ = 0; this.driverRegistrationImmobilizerDigitalOutput_ = 0; this.eCOEngineOnOperator_ = 0; this.eCUInterface_ = 0; this.fuelConsumptionEnabled_ = 0; this.sIPAADServerAddress_ = ""; this.sIPAADServerProtocol_ = 0; maybeForceBuilderInitialization(); }
/*       */       public String getAuthenticationCode() { Object ref = this.authenticationCode_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.authenticationCode_ = s; return s; }  return (String)ref; }
/*       */       public ByteString getAuthenticationCodeBytes() { Object ref = this.authenticationCode_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.authenticationCode_ = b; return b; }  return (ByteString)ref; }
/*       */       public Builder setAuthenticationCode(String value) { if (value == null) throw new NullPointerException();  this.authenticationCode_ = value; onChanged(); return this; }
/*       */       public Builder clearAuthenticationCode() { this.authenticationCode_ = DolphinConfig.Config.getDefaultInstance().getAuthenticationCode(); onChanged(); return this; }
/*       */       public Builder setAuthenticationCodeBytes(ByteString value) { if (value == null) throw new NullPointerException();  DolphinConfig.Config.checkByteStringIsUtf8(value); this.authenticationCode_ = value; onChanged(); return this; }
/* 54389 */       public boolean getFirmwareUpdateEnabled() { return this.firmwareUpdateEnabled_; } public Builder setFirmwareUpdateEnabled(boolean value) { this.firmwareUpdateEnabled_ = value; onChanged(); return this; } public Builder clearFirmwareUpdateEnabled() { this.firmwareUpdateEnabled_ = false; onChanged(); return this; } public String getFirmwareUpdateChannel() { Object ref = this.firmwareUpdateChannel_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.firmwareUpdateChannel_ = s; return s; }  return (String)ref; } public ByteString getFirmwareUpdateChannelBytes() { Object ref = this.firmwareUpdateChannel_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.firmwareUpdateChannel_ = b; return b; }  return (ByteString)ref; } public Builder setFirmwareUpdateChannel(String value) { if (value == null) throw new NullPointerException();  this.firmwareUpdateChannel_ = value; onChanged(); return this; } public Builder clearFirmwareUpdateChannel() { this.firmwareUpdateChannel_ = DolphinConfig.Config.getDefaultInstance().getFirmwareUpdateChannel(); onChanged(); return this; } public Builder setFirmwareUpdateChannelBytes(ByteString value) { if (value == null) throw new NullPointerException();  DolphinConfig.Config.checkByteStringIsUtf8(value); this.firmwareUpdateChannel_ = value; onChanged(); return this; } public int getFirmwareUpdateCheckInterval() { return this.firmwareUpdateCheckInterval_; } public Builder setFirmwareUpdateCheckInterval(int value) { this.firmwareUpdateCheckInterval_ = value; onChanged(); return this; } public Builder clearFirmwareUpdateCheckInterval() { this.firmwareUpdateCheckInterval_ = 0; onChanged(); return this; } public String getFirmwareUpdateServerAddress() { Object ref = this.firmwareUpdateServerAddress_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.firmwareUpdateServerAddress_ = s; return s; }  return (String)ref; } public ByteString getFirmwareUpdateServerAddressBytes() { Object ref = this.firmwareUpdateServerAddress_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.firmwareUpdateServerAddress_ = b; return b; }  return (ByteString)ref; } public Builder setFirmwareUpdateServerAddress(String value) { if (value == null) throw new NullPointerException();  this.firmwareUpdateServerAddress_ = value; onChanged(); return this; } public Builder clearFirmwareUpdateServerAddress() { this.firmwareUpdateServerAddress_ = DolphinConfig.Config.getDefaultInstance().getFirmwareUpdateServerAddress(); onChanged(); return this; } public Builder setFirmwareUpdateServerAddressBytes(ByteString value) { if (value == null) throw new NullPointerException();  DolphinConfig.Config.checkByteStringIsUtf8(value); this.firmwareUpdateServerAddress_ = value; onChanged(); return this; } public int getFirmwareUpdateServerPort() { return this.firmwareUpdateServerPort_; } public Builder setFirmwareUpdateServerPort(int value) { this.firmwareUpdateServerPort_ = value; onChanged(); return this; } public Builder clearFirmwareUpdateServerPort() { this.firmwareUpdateServerPort_ = 0; onChanged(); return this; } public int getFirmwareUpdateServerProtocolValue() { return this.firmwareUpdateServerProtocol_; } public Builder setFirmwareUpdateServerProtocolValue(int value) { this.firmwareUpdateServerProtocol_ = value; onChanged(); return this; } public DolphinConfig.ServerProtocol getFirmwareUpdateServerProtocol() { DolphinConfig.ServerProtocol result = DolphinConfig.ServerProtocol.valueOf(this.firmwareUpdateServerProtocol_); return (result == null) ? DolphinConfig.ServerProtocol.UNRECOGNIZED : result; } public Builder setFirmwareUpdateServerProtocol(DolphinConfig.ServerProtocol value) { if (value == null) throw new NullPointerException();  this.firmwareUpdateServerProtocol_ = value.getNumber(); onChanged(); return this; } public Builder clearFirmwareUpdateServerProtocol() { this.firmwareUpdateServerProtocol_ = 0; onChanged(); return this; } public int getFirmwareUpdateLinkTimeout() { return this.firmwareUpdateLinkTimeout_; } public Builder setFirmwareUpdateLinkTimeout(int value) { this.firmwareUpdateLinkTimeout_ = value; onChanged(); return this; } public Builder clearFirmwareUpdateLinkTimeout() { this.firmwareUpdateLinkTimeout_ = 0; onChanged(); return this; } public int getFirmwareUpdateResponseTimeout() { return this.firmwareUpdateResponseTimeout_; } public Builder setFirmwareUpdateResponseTimeout(int value) { this.firmwareUpdateResponseTimeout_ = value; onChanged(); return this; } public Builder clearFirmwareUpdateResponseTimeout() { this.firmwareUpdateResponseTimeout_ = 0; onChanged(); return this; } public boolean getSMSDataSending() { return this.sMSDataSending_; } public Builder setSMSDataSending(boolean value) { this.sMSDataSending_ = value; onChanged(); return this; } public Builder clearSMSDataSending() { this.sMSDataSending_ = false; onChanged(); return this; } public String getSMSDataSendNumber() { Object ref = this.sMSDataSendNumber_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.sMSDataSendNumber_ = s; return s; }  return (String)ref; } public ByteString getSMSDataSendNumberBytes() { Object ref = this.sMSDataSendNumber_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.sMSDataSendNumber_ = b; return b; }  return (ByteString)ref; } public Builder setSMSDataSendNumber(String value) { if (value == null) throw new NullPointerException();  this.sMSDataSendNumber_ = value; onChanged(); return this; } public Builder clearSMSDataSendNumber() { this.sMSDataSendNumber_ = DolphinConfig.Config.getDefaultInstance().getSMSDataSendNumber(); onChanged(); return this; } public Builder setSMSDataSendNumberBytes(ByteString value) { if (value == null) throw new NullPointerException();  DolphinConfig.Config.checkByteStringIsUtf8(value); this.sMSDataSendNumber_ = value; onChanged(); return this; } public String getSMSPassword() { Object ref = this.sMSPassword_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.sMSPassword_ = s; return s; }  return (String)ref; } public ByteString getSMSPasswordBytes() { Object ref = this.sMSPassword_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.sMSPassword_ = b; return b; }  return (ByteString)ref; } public Builder setSMSPassword(String value) { if (value == null) throw new NullPointerException();  this.sMSPassword_ = value; onChanged(); return this; } public Builder clearSMSPassword() { this.sMSPassword_ = DolphinConfig.Config.getDefaultInstance().getSMSPassword(); onChanged(); return this; } public Builder setSMSPasswordBytes(ByteString value) { if (value == null) throw new NullPointerException();  DolphinConfig.Config.checkByteStringIsUtf8(value); this.sMSPassword_ = value; onChanged(); return this; } public int getSMSEventTimeZone() { return this.sMSEventTimeZone_; } public Builder setSMSEventTimeZone(int value) { this.sMSEventTimeZone_ = value; onChanged(); return this; } public Builder clearSMSEventTimeZone() { this.sMSEventTimeZone_ = 0; onChanged(); return this; } public int getCallIncommingCallActionValue() { return this.callIncommingCallAction_; } public Builder setCallIncommingCallActionValue(int value) { this.callIncommingCallAction_ = value; onChanged(); return this; } public DolphinConfig.CallAction getCallIncommingCallAction() { DolphinConfig.CallAction result = DolphinConfig.CallAction.valueOf(this.callIncommingCallAction_); return (result == null) ? DolphinConfig.CallAction.UNRECOGNIZED : result; } public Builder setCallIncommingCallAction(DolphinConfig.CallAction value) { if (value == null) throw new NullPointerException();  this.callIncommingCallAction_ = value.getNumber(); onChanged(); return this; } public Builder clearCallIncommingCallAction() { this.callIncommingCallAction_ = 0; onChanged(); return this; } public int getCallDigitalInput1CallTo() { return this.callDigitalInput1CallTo_; } public Builder setCallDigitalInput1CallTo(int value) { this.callDigitalInput1CallTo_ = value; onChanged(); return this; } public Builder clearCallDigitalInput1CallTo() { this.callDigitalInput1CallTo_ = 0; onChanged(); return this; } public int getCallDigitalInput2CallTo() { return this.callDigitalInput2CallTo_; } public Builder setCallDigitalInput2CallTo(int value) { this.callDigitalInput2CallTo_ = value; onChanged(); return this; } public Builder clearCallDigitalInput2CallTo() { this.callDigitalInput2CallTo_ = 0; onChanged(); return this; } public int getCallDigitalInput3CallTo() { return this.callDigitalInput3CallTo_; } public Builder setCallDigitalInput3CallTo(int value) { this.callDigitalInput3CallTo_ = value; onChanged(); return this; } public Builder clearCallDigitalInput3CallTo() { this.callDigitalInput3CallTo_ = 0; onChanged(); return this; } public String getAuthorizedNumber1() { Object ref = this.authorizedNumber1_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.authorizedNumber1_ = s; return s; }  return (String)ref; } public ByteString getAuthorizedNumber1Bytes() { Object ref = this.authorizedNumber1_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.authorizedNumber1_ = b; return b; }  return (ByteString)ref; } public Builder setAuthorizedNumber1(String value) { if (value == null) throw new NullPointerException();  this.authorizedNumber1_ = value; onChanged(); return this; } public Builder clearAuthorizedNumber1() { this.authorizedNumber1_ = DolphinConfig.Config.getDefaultInstance().getAuthorizedNumber1(); onChanged(); return this; } public Builder setAuthorizedNumber1Bytes(ByteString value) { if (value == null) throw new NullPointerException();  DolphinConfig.Config.checkByteStringIsUtf8(value); this.authorizedNumber1_ = value; onChanged(); return this; } public String getAuthorizedNumber2() { Object ref = this.authorizedNumber2_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.authorizedNumber2_ = s; return s; }  return (String)ref; } public ByteString getAuthorizedNumber2Bytes() { Object ref = this.authorizedNumber2_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.authorizedNumber2_ = b; return b; }  return (ByteString)ref; } public Builder setAuthorizedNumber2(String value) { if (value == null) throw new NullPointerException();  this.authorizedNumber2_ = value; onChanged(); return this; } public Builder clearAuthorizedNumber2() { this.authorizedNumber2_ = DolphinConfig.Config.getDefaultInstance().getAuthorizedNumber2(); onChanged(); return this; } public Builder setAuthorizedNumber2Bytes(ByteString value) { if (value == null) throw new NullPointerException();  DolphinConfig.Config.checkByteStringIsUtf8(value); this.authorizedNumber2_ = value; onChanged(); return this; } public String getAuthorizedNumber3() { Object ref = this.authorizedNumber3_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.authorizedNumber3_ = s; return s; }  return (String)ref; } public ByteString getAuthorizedNumber3Bytes() { Object ref = this.authorizedNumber3_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.authorizedNumber3_ = b; return b; }  return (ByteString)ref; } public Builder setAuthorizedNumber3(String value) { if (value == null) throw new NullPointerException();  this.authorizedNumber3_ = value; onChanged(); return this; } public Builder clearAuthorizedNumber3() { this.authorizedNumber3_ = DolphinConfig.Config.getDefaultInstance().getAuthorizedNumber3(); onChanged(); return this; } public Builder setAuthorizedNumber3Bytes(ByteString value) { if (value == null) throw new NullPointerException();  DolphinConfig.Config.checkByteStringIsUtf8(value); this.authorizedNumber3_ = value; onChanged(); return this; } public String getAuthorizedNumber4() { Object ref = this.authorizedNumber4_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.authorizedNumber4_ = s; return s; }  return (String)ref; } public ByteString getAuthorizedNumber4Bytes() { Object ref = this.authorizedNumber4_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.authorizedNumber4_ = b; return b; }  return (ByteString)ref; } public Builder setAuthorizedNumber4(String value) { if (value == null) throw new NullPointerException();  this.authorizedNumber4_ = value; onChanged(); return this; } public Builder clearAuthorizedNumber4() { this.authorizedNumber4_ = DolphinConfig.Config.getDefaultInstance().getAuthorizedNumber4(); onChanged(); return this; } public Builder setAuthorizedNumber4Bytes(ByteString value) { if (value == null) throw new NullPointerException();  DolphinConfig.Config.checkByteStringIsUtf8(value); this.authorizedNumber4_ = value; onChanged(); return this; } public String getAuthorizedNumber5() { Object ref = this.authorizedNumber5_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.authorizedNumber5_ = s; return s; }  return (String)ref; } public ByteString getAuthorizedNumber5Bytes() { Object ref = this.authorizedNumber5_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.authorizedNumber5_ = b; return b; }  return (ByteString)ref; } public Builder setAuthorizedNumber5(String value) { if (value == null) throw new NullPointerException();  this.authorizedNumber5_ = value; onChanged(); return this; } public Builder clearAuthorizedNumber5() { this.authorizedNumber5_ = DolphinConfig.Config.getDefaultInstance().getAuthorizedNumber5(); onChanged(); return this; } public Builder setAuthorizedNumber5Bytes(ByteString value) { if (value == null) throw new NullPointerException();  DolphinConfig.Config.checkByteStringIsUtf8(value); this.authorizedNumber5_ = value; onChanged(); return this; } public String getAuthorizedNumber6() { Object ref = this.authorizedNumber6_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.authorizedNumber6_ = s; return s; }  return (String)ref; } public ByteString getAuthorizedNumber6Bytes() { Object ref = this.authorizedNumber6_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.authorizedNumber6_ = b; return b; }  return (ByteString)ref; } public Builder setAuthorizedNumber6(String value) { if (value == null) throw new NullPointerException();  this.authorizedNumber6_ = value; onChanged(); return this; } public Builder clearAuthorizedNumber6() { this.authorizedNumber6_ = DolphinConfig.Config.getDefaultInstance().getAuthorizedNumber6(); onChanged(); return this; } public Builder setAuthorizedNumber6Bytes(ByteString value) { if (value == null) throw new NullPointerException();  DolphinConfig.Config.checkByteStringIsUtf8(value); this.authorizedNumber6_ = value; onChanged(); return this; } public String getAuthorizedNumber7() { Object ref = this.authorizedNumber7_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.authorizedNumber7_ = s; return s; }  return (String)ref; } public ByteString getAuthorizedNumber7Bytes() { Object ref = this.authorizedNumber7_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.authorizedNumber7_ = b; return b; }  return (ByteString)ref; } public Builder setAuthorizedNumber7(String value) { if (value == null) throw new NullPointerException();  this.authorizedNumber7_ = value; onChanged(); return this; } public Builder clearAuthorizedNumber7() { this.authorizedNumber7_ = DolphinConfig.Config.getDefaultInstance().getAuthorizedNumber7(); onChanged(); return this; } public Builder setAuthorizedNumber7Bytes(ByteString value) { if (value == null) throw new NullPointerException();  DolphinConfig.Config.checkByteStringIsUtf8(value); this.authorizedNumber7_ = value; onChanged(); return this; } public String getAuthorizedNumber8() { Object ref = this.authorizedNumber8_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.authorizedNumber8_ = s; return s; }  return (String)ref; } public ByteString getAuthorizedNumber8Bytes() { Object ref = this.authorizedNumber8_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.authorizedNumber8_ = b; return b; }  return (ByteString)ref; } public Builder setAuthorizedNumber8(String value) { if (value == null) throw new NullPointerException();  this.authorizedNumber8_ = value; onChanged(); return this; } public Builder clearAuthorizedNumber8() { this.authorizedNumber8_ = DolphinConfig.Config.getDefaultInstance().getAuthorizedNumber8(); onChanged(); return this; } public Builder setAuthorizedNumber8Bytes(ByteString value) { if (value == null) throw new NullPointerException();  DolphinConfig.Config.checkByteStringIsUtf8(value); this.authorizedNumber8_ = value; onChanged(); return this; } public String getAuthorizedNumber9() { Object ref = this.authorizedNumber9_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.authorizedNumber9_ = s; return s; }  return (String)ref; } public ByteString getAuthorizedNumber9Bytes() { Object ref = this.authorizedNumber9_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.authorizedNumber9_ = b; return b; }  return (ByteString)ref; } public Builder setAuthorizedNumber9(String value) { if (value == null) throw new NullPointerException();  this.authorizedNumber9_ = value; onChanged(); return this; } public Builder clearAuthorizedNumber9() { this.authorizedNumber9_ = DolphinConfig.Config.getDefaultInstance().getAuthorizedNumber9(); onChanged(); return this; } public Builder setAuthorizedNumber9Bytes(ByteString value) { if (value == null) throw new NullPointerException();  DolphinConfig.Config.checkByteStringIsUtf8(value); this.authorizedNumber9_ = value; onChanged(); return this; } public String getAuthorizedNumber10() { Object ref = this.authorizedNumber10_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.authorizedNumber10_ = s; return s; }  return (String)ref; } public ByteString getAuthorizedNumber10Bytes() { Object ref = this.authorizedNumber10_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.authorizedNumber10_ = b; return b; }  return (ByteString)ref; } public Builder setAuthorizedNumber10(String value) { if (value == null) throw new NullPointerException();  this.authorizedNumber10_ = value; onChanged(); return this; } public Builder clearAuthorizedNumber10() { this.authorizedNumber10_ = DolphinConfig.Config.getDefaultInstance().getAuthorizedNumber10(); onChanged(); return this; } public Builder setAuthorizedNumber10Bytes(ByteString value) { if (value == null) throw new NullPointerException();  DolphinConfig.Config.checkByteStringIsUtf8(value); this.authorizedNumber10_ = value; onChanged(); return this; } public String getGsmPredefinedNumber1() { Object ref = this.gsmPredefinedNumber1_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.gsmPredefinedNumber1_ = s; return s; }  return (String)ref; } public ByteString getGsmPredefinedNumber1Bytes() { Object ref = this.gsmPredefinedNumber1_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.gsmPredefinedNumber1_ = b; return b; }  return (ByteString)ref; } public Builder setGsmPredefinedNumber1(String value) { if (value == null) throw new NullPointerException();  this.gsmPredefinedNumber1_ = value; onChanged(); return this; } public Builder clearGsmPredefinedNumber1() { this.gsmPredefinedNumber1_ = DolphinConfig.Config.getDefaultInstance().getGsmPredefinedNumber1(); onChanged(); return this; } public Builder setGsmPredefinedNumber1Bytes(ByteString value) { if (value == null) throw new NullPointerException();  DolphinConfig.Config.checkByteStringIsUtf8(value); this.gsmPredefinedNumber1_ = value; onChanged(); return this; } public String getGsmPredefinedNumber2() { Object ref = this.gsmPredefinedNumber2_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.gsmPredefinedNumber2_ = s; return s; }  return (String)ref; } public ByteString getGsmPredefinedNumber2Bytes() { Object ref = this.gsmPredefinedNumber2_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.gsmPredefinedNumber2_ = b; return b; }  return (ByteString)ref; } public Builder setGsmPredefinedNumber2(String value) { if (value == null) throw new NullPointerException();  this.gsmPredefinedNumber2_ = value; onChanged(); return this; } public Builder clearGsmPredefinedNumber2() { this.gsmPredefinedNumber2_ = DolphinConfig.Config.getDefaultInstance().getGsmPredefinedNumber2(); onChanged(); return this; } public Builder setGsmPredefinedNumber2Bytes(ByteString value) { if (value == null) throw new NullPointerException();  DolphinConfig.Config.checkByteStringIsUtf8(value); this.gsmPredefinedNumber2_ = value; onChanged(); return this; } public String getGsmPredefinedNumber3() { Object ref = this.gsmPredefinedNumber3_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.gsmPredefinedNumber3_ = s; return s; }  return (String)ref; } public ByteString getGsmPredefinedNumber3Bytes() { Object ref = this.gsmPredefinedNumber3_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.gsmPredefinedNumber3_ = b; return b; }  return (ByteString)ref; } public Builder setGsmPredefinedNumber3(String value) { if (value == null) throw new NullPointerException();  this.gsmPredefinedNumber3_ = value; onChanged(); return this; } public Builder clearGsmPredefinedNumber3() { this.gsmPredefinedNumber3_ = DolphinConfig.Config.getDefaultInstance().getGsmPredefinedNumber3(); onChanged(); return this; } public Builder setGsmPredefinedNumber3Bytes(ByteString value) { if (value == null) throw new NullPointerException();  DolphinConfig.Config.checkByteStringIsUtf8(value); this.gsmPredefinedNumber3_ = value; onChanged(); return this; } public String getGsmPredefinedNumber4() { Object ref = this.gsmPredefinedNumber4_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.gsmPredefinedNumber4_ = s; return s; }  return (String)ref; } public ByteString getGsmPredefinedNumber4Bytes() { Object ref = this.gsmPredefinedNumber4_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.gsmPredefinedNumber4_ = b; return b; }  return (ByteString)ref; } public Builder setGsmPredefinedNumber4(String value) { if (value == null) throw new NullPointerException();  this.gsmPredefinedNumber4_ = value; onChanged(); return this; } public Builder clearGsmPredefinedNumber4() { this.gsmPredefinedNumber4_ = DolphinConfig.Config.getDefaultInstance().getGsmPredefinedNumber4(); onChanged(); return this; } public Builder setGsmPredefinedNumber4Bytes(ByteString value) { if (value == null) throw new NullPointerException();  DolphinConfig.Config.checkByteStringIsUtf8(value); this.gsmPredefinedNumber4_ = value; onChanged(); return this; } public String getGsmPredefinedNumber5() { Object ref = this.gsmPredefinedNumber5_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.gsmPredefinedNumber5_ = s; return s; }  return (String)ref; } public ByteString getGsmPredefinedNumber5Bytes() { Object ref = this.gsmPredefinedNumber5_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.gsmPredefinedNumber5_ = b; return b; }  return (ByteString)ref; } public Builder setGsmPredefinedNumber5(String value) { if (value == null) throw new NullPointerException();  this.gsmPredefinedNumber5_ = value; onChanged(); return this; } public Builder clearGsmPredefinedNumber5() { this.gsmPredefinedNumber5_ = DolphinConfig.Config.getDefaultInstance().getGsmPredefinedNumber5(); onChanged(); return this; } public Builder setGsmPredefinedNumber5Bytes(ByteString value) { if (value == null) throw new NullPointerException();  DolphinConfig.Config.checkByteStringIsUtf8(value); this.gsmPredefinedNumber5_ = value; onChanged(); return this; } public String getGsmPredefinedNumber6() { Object ref = this.gsmPredefinedNumber6_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.gsmPredefinedNumber6_ = s; return s; }  return (String)ref; } public ByteString getGsmPredefinedNumber6Bytes() { Object ref = this.gsmPredefinedNumber6_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.gsmPredefinedNumber6_ = b; return b; }  return (ByteString)ref; } public Builder setGsmPredefinedNumber6(String value) { if (value == null) throw new NullPointerException();  this.gsmPredefinedNumber6_ = value; onChanged(); return this; } public Builder clearGsmPredefinedNumber6() { this.gsmPredefinedNumber6_ = DolphinConfig.Config.getDefaultInstance().getGsmPredefinedNumber6(); onChanged(); return this; } public Builder setGsmPredefinedNumber6Bytes(ByteString value) { if (value == null) throw new NullPointerException();  DolphinConfig.Config.checkByteStringIsUtf8(value); this.gsmPredefinedNumber6_ = value; onChanged(); return this; } public String getGsmPredefinedNumber7() { Object ref = this.gsmPredefinedNumber7_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.gsmPredefinedNumber7_ = s; return s; }  return (String)ref; } public ByteString getGsmPredefinedNumber7Bytes() { Object ref = this.gsmPredefinedNumber7_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.gsmPredefinedNumber7_ = b; return b; }  return (ByteString)ref; } public Builder setGsmPredefinedNumber7(String value) { if (value == null) throw new NullPointerException();  this.gsmPredefinedNumber7_ = value; onChanged(); return this; } public Builder clearGsmPredefinedNumber7() { this.gsmPredefinedNumber7_ = DolphinConfig.Config.getDefaultInstance().getGsmPredefinedNumber7(); onChanged(); return this; } public Builder setGsmPredefinedNumber7Bytes(ByteString value) { if (value == null) throw new NullPointerException();  DolphinConfig.Config.checkByteStringIsUtf8(value); this.gsmPredefinedNumber7_ = value; onChanged(); return this; } public String getGsmPredefinedNumber8() { Object ref = this.gsmPredefinedNumber8_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.gsmPredefinedNumber8_ = s; return s; }  return (String)ref; } public ByteString getGsmPredefinedNumber8Bytes() { Object ref = this.gsmPredefinedNumber8_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.gsmPredefinedNumber8_ = b; return b; }  return (ByteString)ref; } public Builder setGsmPredefinedNumber8(String value) { if (value == null) throw new NullPointerException();  this.gsmPredefinedNumber8_ = value; onChanged(); return this; } public Builder clearGsmPredefinedNumber8() { this.gsmPredefinedNumber8_ = DolphinConfig.Config.getDefaultInstance().getGsmPredefinedNumber8(); onChanged(); return this; } public Builder setGsmPredefinedNumber8Bytes(ByteString value) { if (value == null) throw new NullPointerException();  DolphinConfig.Config.checkByteStringIsUtf8(value); this.gsmPredefinedNumber8_ = value; onChanged(); return this; } public String getGsmPredefinedNumber9() { Object ref = this.gsmPredefinedNumber9_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.gsmPredefinedNumber9_ = s; return s; }  return (String)ref; } public ByteString getGsmPredefinedNumber9Bytes() { Object ref = this.gsmPredefinedNumber9_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.gsmPredefinedNumber9_ = b; return b; }  return (ByteString)ref; } public Builder setGsmPredefinedNumber9(String value) { if (value == null) throw new NullPointerException();  this.gsmPredefinedNumber9_ = value; onChanged(); return this; } public Builder clearGsmPredefinedNumber9() { this.gsmPredefinedNumber9_ = DolphinConfig.Config.getDefaultInstance().getGsmPredefinedNumber9(); onChanged(); return this; } public Builder setGsmPredefinedNumber9Bytes(ByteString value) { if (value == null) throw new NullPointerException();  DolphinConfig.Config.checkByteStringIsUtf8(value); this.gsmPredefinedNumber9_ = value; onChanged(); return this; } public String getGsmPredefinedNumber10() { Object ref = this.gsmPredefinedNumber10_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.gsmPredefinedNumber10_ = s; return s; }  return (String)ref; } public ByteString getGsmPredefinedNumber10Bytes() { Object ref = this.gsmPredefinedNumber10_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.gsmPredefinedNumber10_ = b; return b; }  return (ByteString)ref; } public Builder setGsmPredefinedNumber10(String value) { if (value == null) throw new NullPointerException();  this.gsmPredefinedNumber10_ = value; onChanged(); return this; } public Builder clearGsmPredefinedNumber10() { this.gsmPredefinedNumber10_ = DolphinConfig.Config.getDefaultInstance().getGsmPredefinedNumber10(); onChanged(); return this; } public Builder setGsmPredefinedNumber10Bytes(ByteString value) { if (value == null) throw new NullPointerException();  DolphinConfig.Config.checkByteStringIsUtf8(value); this.gsmPredefinedNumber10_ = value; onChanged(); return this; } public String getRoamingOperator1() { Object ref = this.roamingOperator1_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.roamingOperator1_ = s; return s; }  return (String)ref; } public ByteString getRoamingOperator1Bytes() { Object ref = this.roamingOperator1_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.roamingOperator1_ = b; return b; }  return (ByteString)ref; } public Builder setRoamingOperator1(String value) { if (value == null) throw new NullPointerException();  this.roamingOperator1_ = value; onChanged(); return this; } public Builder clearRoamingOperator1() { this.roamingOperator1_ = DolphinConfig.Config.getDefaultInstance().getRoamingOperator1(); onChanged(); return this; } public Builder setRoamingOperator1Bytes(ByteString value) { if (value == null) throw new NullPointerException();  DolphinConfig.Config.checkByteStringIsUtf8(value); this.roamingOperator1_ = value; onChanged(); return this; } public String getRoamingOperator2() { Object ref = this.roamingOperator2_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.roamingOperator2_ = s; return s; }  return (String)ref; } public ByteString getRoamingOperator2Bytes() { Object ref = this.roamingOperator2_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.roamingOperator2_ = b; return b; }  return (ByteString)ref; } public Builder setRoamingOperator2(String value) { if (value == null) throw new NullPointerException();  this.roamingOperator2_ = value; onChanged(); return this; } public Builder clearRoamingOperator2() { this.roamingOperator2_ = DolphinConfig.Config.getDefaultInstance().getRoamingOperator2(); onChanged(); return this; } public Builder setRoamingOperator2Bytes(ByteString value) { if (value == null) throw new NullPointerException();  DolphinConfig.Config.checkByteStringIsUtf8(value); this.roamingOperator2_ = value; onChanged(); return this; } public String getRoamingOperator3() { Object ref = this.roamingOperator3_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.roamingOperator3_ = s; return s; }  return (String)ref; } public ByteString getRoamingOperator3Bytes() { Object ref = this.roamingOperator3_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.roamingOperator3_ = b; return b; }  return (ByteString)ref; } public Builder setRoamingOperator3(String value) { if (value == null) throw new NullPointerException();  this.roamingOperator3_ = value; onChanged(); return this; } public Builder clearRoamingOperator3() { this.roamingOperator3_ = DolphinConfig.Config.getDefaultInstance().getRoamingOperator3(); onChanged(); return this; } public Builder setRoamingOperator3Bytes(ByteString value) { if (value == null) throw new NullPointerException();  DolphinConfig.Config.checkByteStringIsUtf8(value); this.roamingOperator3_ = value; onChanged(); return this; } public String getRoamingOperator4() { Object ref = this.roamingOperator4_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.roamingOperator4_ = s; return s; }  return (String)ref; } public ByteString getRoamingOperator4Bytes() { Object ref = this.roamingOperator4_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.roamingOperator4_ = b; return b; }  return (ByteString)ref; } public Builder setRoamingOperator4(String value) { if (value == null) throw new NullPointerException();  this.roamingOperator4_ = value; onChanged(); return this; } public Builder clearRoamingOperator4() { this.roamingOperator4_ = DolphinConfig.Config.getDefaultInstance().getRoamingOperator4(); onChanged(); return this; } public Builder setRoamingOperator4Bytes(ByteString value) { if (value == null) throw new NullPointerException();  DolphinConfig.Config.checkByteStringIsUtf8(value); this.roamingOperator4_ = value; onChanged(); return this; } public String getRoamingOperator5() { Object ref = this.roamingOperator5_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.roamingOperator5_ = s; return s; }  return (String)ref; } public ByteString getRoamingOperator5Bytes() { Object ref = this.roamingOperator5_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.roamingOperator5_ = b; return b; }  return (ByteString)ref; } public Builder setRoamingOperator5(String value) { if (value == null) throw new NullPointerException();  this.roamingOperator5_ = value; onChanged(); return this; } public Builder clearRoamingOperator5() { this.roamingOperator5_ = DolphinConfig.Config.getDefaultInstance().getRoamingOperator5(); onChanged(); return this; } public Builder setRoamingOperator5Bytes(ByteString value) { if (value == null) throw new NullPointerException();  DolphinConfig.Config.checkByteStringIsUtf8(value); this.roamingOperator5_ = value; onChanged(); return this; } public int getDAQStopHomeMinPeriod() { return this.dAQStopHomeMinPeriod_; } public Builder setDAQStopHomeMinPeriod(int value) { this.dAQStopHomeMinPeriod_ = value; onChanged(); return this; } public Builder clearDAQStopHomeMinPeriod() { this.dAQStopHomeMinPeriod_ = 0; onChanged(); return this; } public int getDAQStopRoamingMinPeriod() { return this.dAQStopRoamingMinPeriod_; } public Builder setDAQStopRoamingMinPeriod(int value) { this.dAQStopRoamingMinPeriod_ = value; onChanged(); return this; } public Builder clearDAQStopRoamingMinPeriod() { this.dAQStopRoamingMinPeriod_ = 0; onChanged(); return this; } public int getDAQMovingHomeMinPeriod() { return this.dAQMovingHomeMinPeriod_; } public Builder setDAQMovingHomeMinPeriod(int value) { this.dAQMovingHomeMinPeriod_ = value; onChanged(); return this; } public Builder clearDAQMovingHomeMinPeriod() { this.dAQMovingHomeMinPeriod_ = 0; onChanged(); return this; } public int getDAQMovingHomeMinPathDeviation() { return this.dAQMovingHomeMinPathDeviation_; } public Builder setDAQMovingHomeMinPathDeviation(int value) { this.dAQMovingHomeMinPathDeviation_ = value; onChanged(); return this; } public Builder clearDAQMovingHomeMinPathDeviation() { this.dAQMovingHomeMinPathDeviation_ = 0; onChanged(); return this; } public int getDAQMovingRoamingMinPeriod() { return this.dAQMovingRoamingMinPeriod_; } public Builder setDAQMovingRoamingMinPeriod(int value) { this.dAQMovingRoamingMinPeriod_ = value; onChanged(); return this; } public Builder clearDAQMovingRoamingMinPeriod() { this.dAQMovingRoamingMinPeriod_ = 0; onChanged(); return this; } public int getDAQMovingRoamingMinPathDeviation() { return this.dAQMovingRoamingMinPathDeviation_; } public Builder setDAQMovingRoamingMinPathDeviation(int value) { this.dAQMovingRoamingMinPathDeviation_ = value; onChanged(); return this; } public Builder clearDAQMovingRoamingMinPathDeviation() { this.dAQMovingRoamingMinPathDeviation_ = 0; onChanged(); return this; } public boolean hasGeoZone1() { return (this.geoZone1Builder_ != null || this.geoZone1_ != null); } public DolphinConfig.GeoZone getGeoZone1() { if (this.geoZone1Builder_ == null) return (this.geoZone1_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone1_;  return (DolphinConfig.GeoZone)this.geoZone1Builder_.getMessage(); } public Builder setGeoZone1(DolphinConfig.GeoZone value) { if (this.geoZone1Builder_ == null) { if (value == null) throw new NullPointerException();  this.geoZone1_ = value; onChanged(); } else { this.geoZone1Builder_.setMessage((AbstractMessage)value); }  return this; } public Builder setGeoZone1(DolphinConfig.GeoZone.Builder builderForValue) { if (this.geoZone1Builder_ == null) { this.geoZone1_ = builderForValue.build(); onChanged(); } else { this.geoZone1Builder_.setMessage((AbstractMessage)builderForValue.build()); }  return this; } public Builder mergeGeoZone1(DolphinConfig.GeoZone value) { if (this.geoZone1Builder_ == null) { if (this.geoZone1_ != null) { this.geoZone1_ = DolphinConfig.GeoZone.newBuilder(this.geoZone1_).mergeFrom(value).buildPartial(); } else { this.geoZone1_ = value; }  onChanged(); } else { this.geoZone1Builder_.mergeFrom((AbstractMessage)value); }  return this; } public Builder clearGeoZone1() { if (this.geoZone1Builder_ == null) { this.geoZone1_ = null; onChanged(); } else { this.geoZone1_ = null; this.geoZone1Builder_ = null; }  return this; } public DolphinConfig.GeoZone.Builder getGeoZone1Builder() { onChanged(); return (DolphinConfig.GeoZone.Builder)getGeoZone1FieldBuilder().getBuilder(); } public DolphinConfig.GeoZoneOrBuilder getGeoZone1OrBuilder() { if (this.geoZone1Builder_ != null) return (DolphinConfig.GeoZoneOrBuilder)this.geoZone1Builder_.getMessageOrBuilder();  return (this.geoZone1_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone1_; } private SingleFieldBuilderV3<DolphinConfig.GeoZone, DolphinConfig.GeoZone.Builder, DolphinConfig.GeoZoneOrBuilder> getGeoZone1FieldBuilder() { if (this.geoZone1Builder_ == null) { this.geoZone1Builder_ = new SingleFieldBuilderV3((AbstractMessage)getGeoZone1(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean()); this.geoZone1_ = null; }  return this.geoZone1Builder_; } public boolean hasGeoZone2() { return (this.geoZone2Builder_ != null || this.geoZone2_ != null); } public DolphinConfig.GeoZone getGeoZone2() { if (this.geoZone2Builder_ == null) return (this.geoZone2_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone2_;  return (DolphinConfig.GeoZone)this.geoZone2Builder_.getMessage(); } public Builder setGeoZone2(DolphinConfig.GeoZone value) { if (this.geoZone2Builder_ == null) { if (value == null) throw new NullPointerException();  this.geoZone2_ = value; onChanged(); } else { this.geoZone2Builder_.setMessage((AbstractMessage)value); }  return this; } public Builder setGeoZone2(DolphinConfig.GeoZone.Builder builderForValue) { if (this.geoZone2Builder_ == null) { this.geoZone2_ = builderForValue.build(); onChanged(); } else { this.geoZone2Builder_.setMessage((AbstractMessage)builderForValue.build()); }  return this; } public Builder mergeGeoZone2(DolphinConfig.GeoZone value) { if (this.geoZone2Builder_ == null) { if (this.geoZone2_ != null) { this.geoZone2_ = DolphinConfig.GeoZone.newBuilder(this.geoZone2_).mergeFrom(value).buildPartial(); } else { this.geoZone2_ = value; }  onChanged(); } else { this.geoZone2Builder_.mergeFrom((AbstractMessage)value); }  return this; } public Builder clearGeoZone2() { if (this.geoZone2Builder_ == null) { this.geoZone2_ = null; onChanged(); } else { this.geoZone2_ = null; this.geoZone2Builder_ = null; }  return this; } public DolphinConfig.GeoZone.Builder getGeoZone2Builder() { onChanged(); return (DolphinConfig.GeoZone.Builder)getGeoZone2FieldBuilder().getBuilder(); } public DolphinConfig.GeoZoneOrBuilder getGeoZone2OrBuilder() { if (this.geoZone2Builder_ != null) return (DolphinConfig.GeoZoneOrBuilder)this.geoZone2Builder_.getMessageOrBuilder();  return (this.geoZone2_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone2_; } private SingleFieldBuilderV3<DolphinConfig.GeoZone, DolphinConfig.GeoZone.Builder, DolphinConfig.GeoZoneOrBuilder> getGeoZone2FieldBuilder() { if (this.geoZone2Builder_ == null) { this.geoZone2Builder_ = new SingleFieldBuilderV3((AbstractMessage)getGeoZone2(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean()); this.geoZone2_ = null; }  return this.geoZone2Builder_; } public boolean hasGeoZone3() { return (this.geoZone3Builder_ != null || this.geoZone3_ != null); } public DolphinConfig.GeoZone getGeoZone3() { if (this.geoZone3Builder_ == null) return (this.geoZone3_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone3_;  return (DolphinConfig.GeoZone)this.geoZone3Builder_.getMessage(); } public Builder setGeoZone3(DolphinConfig.GeoZone value) { if (this.geoZone3Builder_ == null) { if (value == null) throw new NullPointerException();  this.geoZone3_ = value; onChanged(); } else { this.geoZone3Builder_.setMessage((AbstractMessage)value); }  return this; } public Builder setGeoZone3(DolphinConfig.GeoZone.Builder builderForValue) { if (this.geoZone3Builder_ == null) { this.geoZone3_ = builderForValue.build(); onChanged(); } else { this.geoZone3Builder_.setMessage((AbstractMessage)builderForValue.build()); }  return this; } public Builder mergeGeoZone3(DolphinConfig.GeoZone value) { if (this.geoZone3Builder_ == null) { if (this.geoZone3_ != null) { this.geoZone3_ = DolphinConfig.GeoZone.newBuilder(this.geoZone3_).mergeFrom(value).buildPartial(); } else { this.geoZone3_ = value; }  onChanged(); } else { this.geoZone3Builder_.mergeFrom((AbstractMessage)value); }  return this; } public Builder clearGeoZone3() { if (this.geoZone3Builder_ == null) { this.geoZone3_ = null; onChanged(); } else { this.geoZone3_ = null; this.geoZone3Builder_ = null; }  return this; } public DolphinConfig.GeoZone.Builder getGeoZone3Builder() { onChanged(); return (DolphinConfig.GeoZone.Builder)getGeoZone3FieldBuilder().getBuilder(); } public DolphinConfig.GeoZoneOrBuilder getGeoZone3OrBuilder() { if (this.geoZone3Builder_ != null) return (DolphinConfig.GeoZoneOrBuilder)this.geoZone3Builder_.getMessageOrBuilder();  return (this.geoZone3_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone3_; } private SingleFieldBuilderV3<DolphinConfig.GeoZone, DolphinConfig.GeoZone.Builder, DolphinConfig.GeoZoneOrBuilder> getGeoZone3FieldBuilder() { if (this.geoZone3Builder_ == null) { this.geoZone3Builder_ = new SingleFieldBuilderV3((AbstractMessage)getGeoZone3(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean()); this.geoZone3_ = null; }  return this.geoZone3Builder_; } public boolean hasGeoZone4() { return (this.geoZone4Builder_ != null || this.geoZone4_ != null); } public DolphinConfig.GeoZone getGeoZone4() { if (this.geoZone4Builder_ == null) return (this.geoZone4_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone4_;  return (DolphinConfig.GeoZone)this.geoZone4Builder_.getMessage(); } public Builder setGeoZone4(DolphinConfig.GeoZone value) { if (this.geoZone4Builder_ == null) { if (value == null) throw new NullPointerException();  this.geoZone4_ = value; onChanged(); } else { this.geoZone4Builder_.setMessage((AbstractMessage)value); }  return this; } public Builder setGeoZone4(DolphinConfig.GeoZone.Builder builderForValue) { if (this.geoZone4Builder_ == null) { this.geoZone4_ = builderForValue.build(); onChanged(); } else { this.geoZone4Builder_.setMessage((AbstractMessage)builderForValue.build()); }  return this; } public Builder mergeGeoZone4(DolphinConfig.GeoZone value) { if (this.geoZone4Builder_ == null) { if (this.geoZone4_ != null) { this.geoZone4_ = DolphinConfig.GeoZone.newBuilder(this.geoZone4_).mergeFrom(value).buildPartial(); } else { this.geoZone4_ = value; }  onChanged(); } else { this.geoZone4Builder_.mergeFrom((AbstractMessage)value); }  return this; } public Builder clearGeoZone4() { if (this.geoZone4Builder_ == null) { this.geoZone4_ = null; onChanged(); } else { this.geoZone4_ = null; this.geoZone4Builder_ = null; }  return this; } public DolphinConfig.GeoZone.Builder getGeoZone4Builder() { onChanged(); return (DolphinConfig.GeoZone.Builder)getGeoZone4FieldBuilder().getBuilder(); } public DolphinConfig.GeoZoneOrBuilder getGeoZone4OrBuilder() { if (this.geoZone4Builder_ != null) return (DolphinConfig.GeoZoneOrBuilder)this.geoZone4Builder_.getMessageOrBuilder();  return (this.geoZone4_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone4_; } private SingleFieldBuilderV3<DolphinConfig.GeoZone, DolphinConfig.GeoZone.Builder, DolphinConfig.GeoZoneOrBuilder> getGeoZone4FieldBuilder() { if (this.geoZone4Builder_ == null) { this.geoZone4Builder_ = new SingleFieldBuilderV3((AbstractMessage)getGeoZone4(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean()); this.geoZone4_ = null; }  return this.geoZone4Builder_; } public boolean hasGeoZone5() { return (this.geoZone5Builder_ != null || this.geoZone5_ != null); } public DolphinConfig.GeoZone getGeoZone5() { if (this.geoZone5Builder_ == null) return (this.geoZone5_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone5_;  return (DolphinConfig.GeoZone)this.geoZone5Builder_.getMessage(); } public Builder setGeoZone5(DolphinConfig.GeoZone value) { if (this.geoZone5Builder_ == null) { if (value == null) throw new NullPointerException();  this.geoZone5_ = value; onChanged(); } else { this.geoZone5Builder_.setMessage((AbstractMessage)value); }  return this; } public Builder setGeoZone5(DolphinConfig.GeoZone.Builder builderForValue) { if (this.geoZone5Builder_ == null) { this.geoZone5_ = builderForValue.build(); onChanged(); } else { this.geoZone5Builder_.setMessage((AbstractMessage)builderForValue.build()); }  return this; } public Builder mergeGeoZone5(DolphinConfig.GeoZone value) { if (this.geoZone5Builder_ == null) { if (this.geoZone5_ != null) { this.geoZone5_ = DolphinConfig.GeoZone.newBuilder(this.geoZone5_).mergeFrom(value).buildPartial(); } else { this.geoZone5_ = value; }  onChanged(); } else { this.geoZone5Builder_.mergeFrom((AbstractMessage)value); }  return this; } public Builder clearGeoZone5() { if (this.geoZone5Builder_ == null) { this.geoZone5_ = null; onChanged(); } else { this.geoZone5_ = null; this.geoZone5Builder_ = null; }  return this; } public DolphinConfig.GeoZone.Builder getGeoZone5Builder() { onChanged(); return (DolphinConfig.GeoZone.Builder)getGeoZone5FieldBuilder().getBuilder(); } public DolphinConfig.GeoZoneOrBuilder getGeoZone5OrBuilder() { if (this.geoZone5Builder_ != null) return (DolphinConfig.GeoZoneOrBuilder)this.geoZone5Builder_.getMessageOrBuilder();  return (this.geoZone5_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone5_; } private SingleFieldBuilderV3<DolphinConfig.GeoZone, DolphinConfig.GeoZone.Builder, DolphinConfig.GeoZoneOrBuilder> getGeoZone5FieldBuilder() { if (this.geoZone5Builder_ == null) { this.geoZone5Builder_ = new SingleFieldBuilderV3((AbstractMessage)getGeoZone5(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean()); this.geoZone5_ = null; }  return this.geoZone5Builder_; } public boolean hasGeoZone6() { return (this.geoZone6Builder_ != null || this.geoZone6_ != null); } public DolphinConfig.GeoZone getGeoZone6() { if (this.geoZone6Builder_ == null) return (this.geoZone6_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone6_;  return (DolphinConfig.GeoZone)this.geoZone6Builder_.getMessage(); } public Builder setGeoZone6(DolphinConfig.GeoZone value) { if (this.geoZone6Builder_ == null) { if (value == null) throw new NullPointerException();  this.geoZone6_ = value; onChanged(); } else { this.geoZone6Builder_.setMessage((AbstractMessage)value); }  return this; } public Builder setGeoZone6(DolphinConfig.GeoZone.Builder builderForValue) { if (this.geoZone6Builder_ == null) { this.geoZone6_ = builderForValue.build(); onChanged(); } else { this.geoZone6Builder_.setMessage((AbstractMessage)builderForValue.build()); }  return this; } public Builder mergeGeoZone6(DolphinConfig.GeoZone value) { if (this.geoZone6Builder_ == null) { if (this.geoZone6_ != null) { this.geoZone6_ = DolphinConfig.GeoZone.newBuilder(this.geoZone6_).mergeFrom(value).buildPartial(); } else { this.geoZone6_ = value; }  onChanged(); } else { this.geoZone6Builder_.mergeFrom((AbstractMessage)value); }  return this; } public Builder clearGeoZone6() { if (this.geoZone6Builder_ == null) { this.geoZone6_ = null; onChanged(); } else { this.geoZone6_ = null; this.geoZone6Builder_ = null; }  return this; } public DolphinConfig.GeoZone.Builder getGeoZone6Builder() { onChanged(); return (DolphinConfig.GeoZone.Builder)getGeoZone6FieldBuilder().getBuilder(); } public DolphinConfig.GeoZoneOrBuilder getGeoZone6OrBuilder() { if (this.geoZone6Builder_ != null) return (DolphinConfig.GeoZoneOrBuilder)this.geoZone6Builder_.getMessageOrBuilder();  return (this.geoZone6_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone6_; } private SingleFieldBuilderV3<DolphinConfig.GeoZone, DolphinConfig.GeoZone.Builder, DolphinConfig.GeoZoneOrBuilder> getGeoZone6FieldBuilder() { if (this.geoZone6Builder_ == null) { this.geoZone6Builder_ = new SingleFieldBuilderV3((AbstractMessage)getGeoZone6(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean()); this.geoZone6_ = null; }  return this.geoZone6Builder_; } public boolean hasGeoZone7() { return (this.geoZone7Builder_ != null || this.geoZone7_ != null); } public DolphinConfig.GeoZone getGeoZone7() { if (this.geoZone7Builder_ == null) return (this.geoZone7_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone7_;  return (DolphinConfig.GeoZone)this.geoZone7Builder_.getMessage(); } public Builder setGeoZone7(DolphinConfig.GeoZone value) { if (this.geoZone7Builder_ == null) { if (value == null) throw new NullPointerException();  this.geoZone7_ = value; onChanged(); } else { this.geoZone7Builder_.setMessage((AbstractMessage)value); }  return this; } public Builder setGeoZone7(DolphinConfig.GeoZone.Builder builderForValue) { if (this.geoZone7Builder_ == null) { this.geoZone7_ = builderForValue.build(); onChanged(); } else { this.geoZone7Builder_.setMessage((AbstractMessage)builderForValue.build()); }  return this; } public Builder mergeGeoZone7(DolphinConfig.GeoZone value) { if (this.geoZone7Builder_ == null) { if (this.geoZone7_ != null) { this.geoZone7_ = DolphinConfig.GeoZone.newBuilder(this.geoZone7_).mergeFrom(value).buildPartial(); } else { this.geoZone7_ = value; }  onChanged(); } else { this.geoZone7Builder_.mergeFrom((AbstractMessage)value); }  return this; } public Builder clearGeoZone7() { if (this.geoZone7Builder_ == null) { this.geoZone7_ = null; onChanged(); } else { this.geoZone7_ = null; this.geoZone7Builder_ = null; }  return this; } public DolphinConfig.GeoZone.Builder getGeoZone7Builder() { onChanged(); return (DolphinConfig.GeoZone.Builder)getGeoZone7FieldBuilder().getBuilder(); } public DolphinConfig.GeoZoneOrBuilder getGeoZone7OrBuilder() { if (this.geoZone7Builder_ != null) return (DolphinConfig.GeoZoneOrBuilder)this.geoZone7Builder_.getMessageOrBuilder();  return (this.geoZone7_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone7_; } private SingleFieldBuilderV3<DolphinConfig.GeoZone, DolphinConfig.GeoZone.Builder, DolphinConfig.GeoZoneOrBuilder> getGeoZone7FieldBuilder() { if (this.geoZone7Builder_ == null) { this.geoZone7Builder_ = new SingleFieldBuilderV3((AbstractMessage)getGeoZone7(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean()); this.geoZone7_ = null; }  return this.geoZone7Builder_; } public boolean hasGeoZone8() { return (this.geoZone8Builder_ != null || this.geoZone8_ != null); } public DolphinConfig.GeoZone getGeoZone8() { if (this.geoZone8Builder_ == null) return (this.geoZone8_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone8_;  return (DolphinConfig.GeoZone)this.geoZone8Builder_.getMessage(); } public Builder setGeoZone8(DolphinConfig.GeoZone value) { if (this.geoZone8Builder_ == null) { if (value == null) throw new NullPointerException();  this.geoZone8_ = value; onChanged(); } else { this.geoZone8Builder_.setMessage((AbstractMessage)value); }  return this; } public Builder setGeoZone8(DolphinConfig.GeoZone.Builder builderForValue) { if (this.geoZone8Builder_ == null) { this.geoZone8_ = builderForValue.build(); onChanged(); } else { this.geoZone8Builder_.setMessage((AbstractMessage)builderForValue.build()); }  return this; } public Builder mergeGeoZone8(DolphinConfig.GeoZone value) { if (this.geoZone8Builder_ == null) { if (this.geoZone8_ != null) { this.geoZone8_ = DolphinConfig.GeoZone.newBuilder(this.geoZone8_).mergeFrom(value).buildPartial(); } else { this.geoZone8_ = value; }  onChanged(); } else { this.geoZone8Builder_.mergeFrom((AbstractMessage)value); }  return this; } public Builder clearGeoZone8() { if (this.geoZone8Builder_ == null) { this.geoZone8_ = null; onChanged(); } else { this.geoZone8_ = null; this.geoZone8Builder_ = null; }  return this; } public DolphinConfig.GeoZone.Builder getGeoZone8Builder() { onChanged(); return (DolphinConfig.GeoZone.Builder)getGeoZone8FieldBuilder().getBuilder(); } public DolphinConfig.GeoZoneOrBuilder getGeoZone8OrBuilder() { if (this.geoZone8Builder_ != null) return (DolphinConfig.GeoZoneOrBuilder)this.geoZone8Builder_.getMessageOrBuilder();  return (this.geoZone8_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone8_; } private SingleFieldBuilderV3<DolphinConfig.GeoZone, DolphinConfig.GeoZone.Builder, DolphinConfig.GeoZoneOrBuilder> getGeoZone8FieldBuilder() { if (this.geoZone8Builder_ == null) { this.geoZone8Builder_ = new SingleFieldBuilderV3((AbstractMessage)getGeoZone8(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean()); this.geoZone8_ = null; }  return this.geoZone8Builder_; } public boolean hasGeoZone9() { return (this.geoZone9Builder_ != null || this.geoZone9_ != null); } public DolphinConfig.GeoZone getGeoZone9() { if (this.geoZone9Builder_ == null) return (this.geoZone9_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone9_;  return (DolphinConfig.GeoZone)this.geoZone9Builder_.getMessage(); } public Builder setGeoZone9(DolphinConfig.GeoZone value) { if (this.geoZone9Builder_ == null) { if (value == null) throw new NullPointerException();  this.geoZone9_ = value; onChanged(); } else { this.geoZone9Builder_.setMessage((AbstractMessage)value); }  return this; } public Builder setGeoZone9(DolphinConfig.GeoZone.Builder builderForValue) { if (this.geoZone9Builder_ == null) { this.geoZone9_ = builderForValue.build(); onChanged(); } else { this.geoZone9Builder_.setMessage((AbstractMessage)builderForValue.build()); }  return this; } public Builder mergeGeoZone9(DolphinConfig.GeoZone value) { if (this.geoZone9Builder_ == null) { if (this.geoZone9_ != null) { this.geoZone9_ = DolphinConfig.GeoZone.newBuilder(this.geoZone9_).mergeFrom(value).buildPartial(); } else { this.geoZone9_ = value; }  onChanged(); } else { this.geoZone9Builder_.mergeFrom((AbstractMessage)value); }  return this; } public Builder clearGeoZone9() { if (this.geoZone9Builder_ == null) { this.geoZone9_ = null; onChanged(); } else { this.geoZone9_ = null; this.geoZone9Builder_ = null; }  return this; } public DolphinConfig.GeoZone.Builder getGeoZone9Builder() { onChanged(); return (DolphinConfig.GeoZone.Builder)getGeoZone9FieldBuilder().getBuilder(); } public DolphinConfig.GeoZoneOrBuilder getGeoZone9OrBuilder() { if (this.geoZone9Builder_ != null) return (DolphinConfig.GeoZoneOrBuilder)this.geoZone9Builder_.getMessageOrBuilder();  return (this.geoZone9_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone9_; } private SingleFieldBuilderV3<DolphinConfig.GeoZone, DolphinConfig.GeoZone.Builder, DolphinConfig.GeoZoneOrBuilder> getGeoZone9FieldBuilder() { if (this.geoZone9Builder_ == null) { this.geoZone9Builder_ = new SingleFieldBuilderV3((AbstractMessage)getGeoZone9(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean()); this.geoZone9_ = null; }  return this.geoZone9Builder_; } public boolean hasGeoZone10() { return (this.geoZone10Builder_ != null || this.geoZone10_ != null); } public DolphinConfig.GeoZone getGeoZone10() { if (this.geoZone10Builder_ == null) return (this.geoZone10_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone10_;  return (DolphinConfig.GeoZone)this.geoZone10Builder_.getMessage(); } public Builder setGeoZone10(DolphinConfig.GeoZone value) { if (this.geoZone10Builder_ == null) { if (value == null) throw new NullPointerException();  this.geoZone10_ = value; onChanged(); } else { this.geoZone10Builder_.setMessage((AbstractMessage)value); }  return this; } public Builder setGeoZone10(DolphinConfig.GeoZone.Builder builderForValue) { if (this.geoZone10Builder_ == null) { this.geoZone10_ = builderForValue.build(); onChanged(); } else { this.geoZone10Builder_.setMessage((AbstractMessage)builderForValue.build()); }  return this; } public Builder mergeGeoZone10(DolphinConfig.GeoZone value) { if (this.geoZone10Builder_ == null) { if (this.geoZone10_ != null) { this.geoZone10_ = DolphinConfig.GeoZone.newBuilder(this.geoZone10_).mergeFrom(value).buildPartial(); } else { this.geoZone10_ = value; }  onChanged(); } else { this.geoZone10Builder_.mergeFrom((AbstractMessage)value); }  return this; } public Builder clearGeoZone10() { if (this.geoZone10Builder_ == null) { this.geoZone10_ = null; onChanged(); } else { this.geoZone10_ = null; this.geoZone10Builder_ = null; }  return this; } public DolphinConfig.GeoZone.Builder getGeoZone10Builder() { onChanged(); return (DolphinConfig.GeoZone.Builder)getGeoZone10FieldBuilder().getBuilder(); } public DolphinConfig.GeoZoneOrBuilder getGeoZone10OrBuilder() { if (this.geoZone10Builder_ != null) return (DolphinConfig.GeoZoneOrBuilder)this.geoZone10Builder_.getMessageOrBuilder();  return (this.geoZone10_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone10_; } private SingleFieldBuilderV3<DolphinConfig.GeoZone, DolphinConfig.GeoZone.Builder, DolphinConfig.GeoZoneOrBuilder> getGeoZone10FieldBuilder() { if (this.geoZone10Builder_ == null) { this.geoZone10Builder_ = new SingleFieldBuilderV3((AbstractMessage)getGeoZone10(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean()); this.geoZone10_ = null; }  return this.geoZone10Builder_; } public int getSIPAADServerProtocolValue() { return this.sIPAADServerProtocol_; } public boolean hasGeoZone11() { return (this.geoZone11Builder_ != null || this.geoZone11_ != null); } public DolphinConfig.GeoZone getGeoZone11() { if (this.geoZone11Builder_ == null) return (this.geoZone11_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone11_;  return (DolphinConfig.GeoZone)this.geoZone11Builder_.getMessage(); } public Builder setGeoZone11(DolphinConfig.GeoZone value) { if (this.geoZone11Builder_ == null) { if (value == null) throw new NullPointerException();  this.geoZone11_ = value; onChanged(); } else { this.geoZone11Builder_.setMessage((AbstractMessage)value); }  return this; } public Builder setGeoZone11(DolphinConfig.GeoZone.Builder builderForValue) { if (this.geoZone11Builder_ == null) { this.geoZone11_ = builderForValue.build(); onChanged(); } else { this.geoZone11Builder_.setMessage((AbstractMessage)builderForValue.build()); }  return this; } public Builder mergeGeoZone11(DolphinConfig.GeoZone value) { if (this.geoZone11Builder_ == null) { if (this.geoZone11_ != null) { this.geoZone11_ = DolphinConfig.GeoZone.newBuilder(this.geoZone11_).mergeFrom(value).buildPartial(); } else { this.geoZone11_ = value; }  onChanged(); } else { this.geoZone11Builder_.mergeFrom((AbstractMessage)value); }  return this; } public Builder clearGeoZone11() { if (this.geoZone11Builder_ == null) { this.geoZone11_ = null; onChanged(); } else { this.geoZone11_ = null; this.geoZone11Builder_ = null; }  return this; } public DolphinConfig.GeoZone.Builder getGeoZone11Builder() { onChanged(); return (DolphinConfig.GeoZone.Builder)getGeoZone11FieldBuilder().getBuilder(); } public DolphinConfig.GeoZoneOrBuilder getGeoZone11OrBuilder() { if (this.geoZone11Builder_ != null) return (DolphinConfig.GeoZoneOrBuilder)this.geoZone11Builder_.getMessageOrBuilder();  return (this.geoZone11_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone11_; } private SingleFieldBuilderV3<DolphinConfig.GeoZone, DolphinConfig.GeoZone.Builder, DolphinConfig.GeoZoneOrBuilder> getGeoZone11FieldBuilder() { if (this.geoZone11Builder_ == null) { this.geoZone11Builder_ = new SingleFieldBuilderV3((AbstractMessage)getGeoZone11(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean()); this.geoZone11_ = null; }  return this.geoZone11Builder_; } public boolean hasGeoZone12() { return (this.geoZone12Builder_ != null || this.geoZone12_ != null); } public DolphinConfig.GeoZone getGeoZone12() { if (this.geoZone12Builder_ == null) return (this.geoZone12_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone12_;  return (DolphinConfig.GeoZone)this.geoZone12Builder_.getMessage(); } public Builder setGeoZone12(DolphinConfig.GeoZone value) { if (this.geoZone12Builder_ == null) { if (value == null) throw new NullPointerException();  this.geoZone12_ = value; onChanged(); } else { this.geoZone12Builder_.setMessage((AbstractMessage)value); }  return this; } public Builder setGeoZone12(DolphinConfig.GeoZone.Builder builderForValue) { if (this.geoZone12Builder_ == null) { this.geoZone12_ = builderForValue.build(); onChanged(); } else { this.geoZone12Builder_.setMessage((AbstractMessage)builderForValue.build()); }  return this; } public Builder mergeGeoZone12(DolphinConfig.GeoZone value) { if (this.geoZone12Builder_ == null) { if (this.geoZone12_ != null) { this.geoZone12_ = DolphinConfig.GeoZone.newBuilder(this.geoZone12_).mergeFrom(value).buildPartial(); } else { this.geoZone12_ = value; }  onChanged(); } else { this.geoZone12Builder_.mergeFrom((AbstractMessage)value); }  return this; } public Builder clearGeoZone12() { if (this.geoZone12Builder_ == null) { this.geoZone12_ = null; onChanged(); } else { this.geoZone12_ = null; this.geoZone12Builder_ = null; }  return this; } public DolphinConfig.GeoZone.Builder getGeoZone12Builder() { onChanged(); return (DolphinConfig.GeoZone.Builder)getGeoZone12FieldBuilder().getBuilder(); } public DolphinConfig.GeoZoneOrBuilder getGeoZone12OrBuilder() { if (this.geoZone12Builder_ != null) return (DolphinConfig.GeoZoneOrBuilder)this.geoZone12Builder_.getMessageOrBuilder();  return (this.geoZone12_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone12_; } private SingleFieldBuilderV3<DolphinConfig.GeoZone, DolphinConfig.GeoZone.Builder, DolphinConfig.GeoZoneOrBuilder> getGeoZone12FieldBuilder() { if (this.geoZone12Builder_ == null) { this.geoZone12Builder_ = new SingleFieldBuilderV3((AbstractMessage)getGeoZone12(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean()); this.geoZone12_ = null; }  return this.geoZone12Builder_; } public boolean hasGeoZone13() { return (this.geoZone13Builder_ != null || this.geoZone13_ != null); } public DolphinConfig.GeoZone getGeoZone13() { if (this.geoZone13Builder_ == null) return (this.geoZone13_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone13_;  return (DolphinConfig.GeoZone)this.geoZone13Builder_.getMessage(); } public Builder setGeoZone13(DolphinConfig.GeoZone value) { if (this.geoZone13Builder_ == null) { if (value == null) throw new NullPointerException();  this.geoZone13_ = value; onChanged(); } else { this.geoZone13Builder_.setMessage((AbstractMessage)value); }  return this; } public Builder setGeoZone13(DolphinConfig.GeoZone.Builder builderForValue) { if (this.geoZone13Builder_ == null) { this.geoZone13_ = builderForValue.build(); onChanged(); } else { this.geoZone13Builder_.setMessage((AbstractMessage)builderForValue.build()); }  return this; } public Builder mergeGeoZone13(DolphinConfig.GeoZone value) { if (this.geoZone13Builder_ == null) { if (this.geoZone13_ != null) { this.geoZone13_ = DolphinConfig.GeoZone.newBuilder(this.geoZone13_).mergeFrom(value).buildPartial(); } else { this.geoZone13_ = value; }  onChanged(); } else { this.geoZone13Builder_.mergeFrom((AbstractMessage)value); }  return this; } public Builder clearGeoZone13() { if (this.geoZone13Builder_ == null) { this.geoZone13_ = null; onChanged(); } else { this.geoZone13_ = null; this.geoZone13Builder_ = null; }  return this; } public DolphinConfig.GeoZone.Builder getGeoZone13Builder() { onChanged(); return (DolphinConfig.GeoZone.Builder)getGeoZone13FieldBuilder().getBuilder(); } public DolphinConfig.GeoZoneOrBuilder getGeoZone13OrBuilder() { if (this.geoZone13Builder_ != null) return (DolphinConfig.GeoZoneOrBuilder)this.geoZone13Builder_.getMessageOrBuilder();  return (this.geoZone13_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone13_; } private SingleFieldBuilderV3<DolphinConfig.GeoZone, DolphinConfig.GeoZone.Builder, DolphinConfig.GeoZoneOrBuilder> getGeoZone13FieldBuilder() { if (this.geoZone13Builder_ == null) { this.geoZone13Builder_ = new SingleFieldBuilderV3((AbstractMessage)getGeoZone13(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean()); this.geoZone13_ = null; }  return this.geoZone13Builder_; } public boolean hasGeoZone14() { return (this.geoZone14Builder_ != null || this.geoZone14_ != null); } public DolphinConfig.GeoZone getGeoZone14() { if (this.geoZone14Builder_ == null) return (this.geoZone14_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone14_;  return (DolphinConfig.GeoZone)this.geoZone14Builder_.getMessage(); } public Builder setGeoZone14(DolphinConfig.GeoZone value) { if (this.geoZone14Builder_ == null) { if (value == null) throw new NullPointerException();  this.geoZone14_ = value; onChanged(); } else { this.geoZone14Builder_.setMessage((AbstractMessage)value); }  return this; } public Builder setGeoZone14(DolphinConfig.GeoZone.Builder builderForValue) { if (this.geoZone14Builder_ == null) { this.geoZone14_ = builderForValue.build(); onChanged(); } else { this.geoZone14Builder_.setMessage((AbstractMessage)builderForValue.build()); }  return this; } public Builder mergeGeoZone14(DolphinConfig.GeoZone value) { if (this.geoZone14Builder_ == null) { if (this.geoZone14_ != null) { this.geoZone14_ = DolphinConfig.GeoZone.newBuilder(this.geoZone14_).mergeFrom(value).buildPartial(); } else { this.geoZone14_ = value; }  onChanged(); } else { this.geoZone14Builder_.mergeFrom((AbstractMessage)value); }  return this; } public Builder clearGeoZone14() { if (this.geoZone14Builder_ == null) { this.geoZone14_ = null; onChanged(); } else { this.geoZone14_ = null; this.geoZone14Builder_ = null; }  return this; } public DolphinConfig.GeoZone.Builder getGeoZone14Builder() { onChanged(); return (DolphinConfig.GeoZone.Builder)getGeoZone14FieldBuilder().getBuilder(); } public DolphinConfig.GeoZoneOrBuilder getGeoZone14OrBuilder() { if (this.geoZone14Builder_ != null) return (DolphinConfig.GeoZoneOrBuilder)this.geoZone14Builder_.getMessageOrBuilder();  return (this.geoZone14_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone14_; } private SingleFieldBuilderV3<DolphinConfig.GeoZone, DolphinConfig.GeoZone.Builder, DolphinConfig.GeoZoneOrBuilder> getGeoZone14FieldBuilder() { if (this.geoZone14Builder_ == null) { this.geoZone14Builder_ = new SingleFieldBuilderV3((AbstractMessage)getGeoZone14(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean()); this.geoZone14_ = null; }  return this.geoZone14Builder_; } public boolean hasGeoZone15() { return (this.geoZone15Builder_ != null || this.geoZone15_ != null); } public DolphinConfig.GeoZone getGeoZone15() { if (this.geoZone15Builder_ == null) return (this.geoZone15_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone15_;  return (DolphinConfig.GeoZone)this.geoZone15Builder_.getMessage(); } public Builder setGeoZone15(DolphinConfig.GeoZone value) { if (this.geoZone15Builder_ == null) { if (value == null) throw new NullPointerException();  this.geoZone15_ = value; onChanged(); } else { this.geoZone15Builder_.setMessage((AbstractMessage)value); }  return this; } public Builder setGeoZone15(DolphinConfig.GeoZone.Builder builderForValue) { if (this.geoZone15Builder_ == null) { this.geoZone15_ = builderForValue.build(); onChanged(); } else { this.geoZone15Builder_.setMessage((AbstractMessage)builderForValue.build()); }  return this; } public Builder mergeGeoZone15(DolphinConfig.GeoZone value) { if (this.geoZone15Builder_ == null) { if (this.geoZone15_ != null) { this.geoZone15_ = DolphinConfig.GeoZone.newBuilder(this.geoZone15_).mergeFrom(value).buildPartial(); } else { this.geoZone15_ = value; }  onChanged(); } else { this.geoZone15Builder_.mergeFrom((AbstractMessage)value); }  return this; } public Builder clearGeoZone15() { if (this.geoZone15Builder_ == null) { this.geoZone15_ = null; onChanged(); } else { this.geoZone15_ = null; this.geoZone15Builder_ = null; }  return this; } public DolphinConfig.GeoZone.Builder getGeoZone15Builder() { onChanged(); return (DolphinConfig.GeoZone.Builder)getGeoZone15FieldBuilder().getBuilder(); } public DolphinConfig.GeoZoneOrBuilder getGeoZone15OrBuilder() { if (this.geoZone15Builder_ != null) return (DolphinConfig.GeoZoneOrBuilder)this.geoZone15Builder_.getMessageOrBuilder();  return (this.geoZone15_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone15_; } private SingleFieldBuilderV3<DolphinConfig.GeoZone, DolphinConfig.GeoZone.Builder, DolphinConfig.GeoZoneOrBuilder> getGeoZone15FieldBuilder() { if (this.geoZone15Builder_ == null) { this.geoZone15Builder_ = new SingleFieldBuilderV3((AbstractMessage)getGeoZone15(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean()); this.geoZone15_ = null; }  return this.geoZone15Builder_; } public boolean hasGeoZone16() { return (this.geoZone16Builder_ != null || this.geoZone16_ != null); } public DolphinConfig.GeoZone getGeoZone16() { if (this.geoZone16Builder_ == null) return (this.geoZone16_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone16_;  return (DolphinConfig.GeoZone)this.geoZone16Builder_.getMessage(); } public Builder setGeoZone16(DolphinConfig.GeoZone value) { if (this.geoZone16Builder_ == null) { if (value == null) throw new NullPointerException();  this.geoZone16_ = value; onChanged(); } else { this.geoZone16Builder_.setMessage((AbstractMessage)value); }  return this; } public Builder setGeoZone16(DolphinConfig.GeoZone.Builder builderForValue) { if (this.geoZone16Builder_ == null) { this.geoZone16_ = builderForValue.build(); onChanged(); } else { this.geoZone16Builder_.setMessage((AbstractMessage)builderForValue.build()); }  return this; } public Builder mergeGeoZone16(DolphinConfig.GeoZone value) { if (this.geoZone16Builder_ == null) { if (this.geoZone16_ != null) { this.geoZone16_ = DolphinConfig.GeoZone.newBuilder(this.geoZone16_).mergeFrom(value).buildPartial(); } else { this.geoZone16_ = value; }  onChanged(); } else { this.geoZone16Builder_.mergeFrom((AbstractMessage)value); }  return this; } public Builder clearGeoZone16() { if (this.geoZone16Builder_ == null) { this.geoZone16_ = null; onChanged(); } else { this.geoZone16_ = null; this.geoZone16Builder_ = null; }  return this; } public DolphinConfig.GeoZone.Builder getGeoZone16Builder() { onChanged(); return (DolphinConfig.GeoZone.Builder)getGeoZone16FieldBuilder().getBuilder(); } public DolphinConfig.GeoZoneOrBuilder getGeoZone16OrBuilder() { if (this.geoZone16Builder_ != null) return (DolphinConfig.GeoZoneOrBuilder)this.geoZone16Builder_.getMessageOrBuilder();  return (this.geoZone16_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone16_; } private SingleFieldBuilderV3<DolphinConfig.GeoZone, DolphinConfig.GeoZone.Builder, DolphinConfig.GeoZoneOrBuilder> getGeoZone16FieldBuilder() { if (this.geoZone16Builder_ == null) { this.geoZone16Builder_ = new SingleFieldBuilderV3((AbstractMessage)getGeoZone16(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean()); this.geoZone16_ = null; }  return this.geoZone16Builder_; } public boolean hasGeoZone17() { return (this.geoZone17Builder_ != null || this.geoZone17_ != null); } public DolphinConfig.GeoZone getGeoZone17() { if (this.geoZone17Builder_ == null) return (this.geoZone17_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone17_;  return (DolphinConfig.GeoZone)this.geoZone17Builder_.getMessage(); } public Builder setGeoZone17(DolphinConfig.GeoZone value) { if (this.geoZone17Builder_ == null) { if (value == null) throw new NullPointerException();  this.geoZone17_ = value; onChanged(); } else { this.geoZone17Builder_.setMessage((AbstractMessage)value); }  return this; } public Builder setGeoZone17(DolphinConfig.GeoZone.Builder builderForValue) { if (this.geoZone17Builder_ == null) { this.geoZone17_ = builderForValue.build(); onChanged(); } else { this.geoZone17Builder_.setMessage((AbstractMessage)builderForValue.build()); }  return this; } public Builder mergeGeoZone17(DolphinConfig.GeoZone value) { if (this.geoZone17Builder_ == null) { if (this.geoZone17_ != null) { this.geoZone17_ = DolphinConfig.GeoZone.newBuilder(this.geoZone17_).mergeFrom(value).buildPartial(); } else { this.geoZone17_ = value; }  onChanged(); } else { this.geoZone17Builder_.mergeFrom((AbstractMessage)value); }  return this; } public Builder clearGeoZone17() { if (this.geoZone17Builder_ == null) { this.geoZone17_ = null; onChanged(); } else { this.geoZone17_ = null; this.geoZone17Builder_ = null; }  return this; } public DolphinConfig.GeoZone.Builder getGeoZone17Builder() { onChanged(); return (DolphinConfig.GeoZone.Builder)getGeoZone17FieldBuilder().getBuilder(); } public DolphinConfig.GeoZoneOrBuilder getGeoZone17OrBuilder() { if (this.geoZone17Builder_ != null) return (DolphinConfig.GeoZoneOrBuilder)this.geoZone17Builder_.getMessageOrBuilder();  return (this.geoZone17_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone17_; } private SingleFieldBuilderV3<DolphinConfig.GeoZone, DolphinConfig.GeoZone.Builder, DolphinConfig.GeoZoneOrBuilder> getGeoZone17FieldBuilder() { if (this.geoZone17Builder_ == null) { this.geoZone17Builder_ = new SingleFieldBuilderV3((AbstractMessage)getGeoZone17(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean()); this.geoZone17_ = null; }  return this.geoZone17Builder_; } public boolean hasGeoZone18() { return (this.geoZone18Builder_ != null || this.geoZone18_ != null); } public DolphinConfig.GeoZone getGeoZone18() { if (this.geoZone18Builder_ == null) return (this.geoZone18_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone18_;  return (DolphinConfig.GeoZone)this.geoZone18Builder_.getMessage(); } public Builder setGeoZone18(DolphinConfig.GeoZone value) { if (this.geoZone18Builder_ == null) { if (value == null) throw new NullPointerException();  this.geoZone18_ = value; onChanged(); } else { this.geoZone18Builder_.setMessage((AbstractMessage)value); }  return this; } public Builder setGeoZone18(DolphinConfig.GeoZone.Builder builderForValue) { if (this.geoZone18Builder_ == null) { this.geoZone18_ = builderForValue.build(); onChanged(); } else { this.geoZone18Builder_.setMessage((AbstractMessage)builderForValue.build()); }  return this; } public Builder mergeGeoZone18(DolphinConfig.GeoZone value) { if (this.geoZone18Builder_ == null) { if (this.geoZone18_ != null) { this.geoZone18_ = DolphinConfig.GeoZone.newBuilder(this.geoZone18_).mergeFrom(value).buildPartial(); } else { this.geoZone18_ = value; }  onChanged(); } else { this.geoZone18Builder_.mergeFrom((AbstractMessage)value); }  return this; } public Builder clearGeoZone18() { if (this.geoZone18Builder_ == null) { this.geoZone18_ = null; onChanged(); } else { this.geoZone18_ = null; this.geoZone18Builder_ = null; }  return this; } public DolphinConfig.GeoZone.Builder getGeoZone18Builder() { onChanged(); return (DolphinConfig.GeoZone.Builder)getGeoZone18FieldBuilder().getBuilder(); } public DolphinConfig.GeoZoneOrBuilder getGeoZone18OrBuilder() { if (this.geoZone18Builder_ != null) return (DolphinConfig.GeoZoneOrBuilder)this.geoZone18Builder_.getMessageOrBuilder();  return (this.geoZone18_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone18_; } private SingleFieldBuilderV3<DolphinConfig.GeoZone, DolphinConfig.GeoZone.Builder, DolphinConfig.GeoZoneOrBuilder> getGeoZone18FieldBuilder() { if (this.geoZone18Builder_ == null) { this.geoZone18Builder_ = new SingleFieldBuilderV3((AbstractMessage)getGeoZone18(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean()); this.geoZone18_ = null; }  return this.geoZone18Builder_; } public boolean hasGeoZone19() { return (this.geoZone19Builder_ != null || this.geoZone19_ != null); } public DolphinConfig.GeoZone getGeoZone19() { if (this.geoZone19Builder_ == null) return (this.geoZone19_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone19_;  return (DolphinConfig.GeoZone)this.geoZone19Builder_.getMessage(); } public Builder setGeoZone19(DolphinConfig.GeoZone value) { if (this.geoZone19Builder_ == null) { if (value == null) throw new NullPointerException();  this.geoZone19_ = value; onChanged(); } else { this.geoZone19Builder_.setMessage((AbstractMessage)value); }  return this; } public Builder setGeoZone19(DolphinConfig.GeoZone.Builder builderForValue) { if (this.geoZone19Builder_ == null) { this.geoZone19_ = builderForValue.build(); onChanged(); } else { this.geoZone19Builder_.setMessage((AbstractMessage)builderForValue.build()); }  return this; } public Builder mergeGeoZone19(DolphinConfig.GeoZone value) { if (this.geoZone19Builder_ == null) { if (this.geoZone19_ != null) { this.geoZone19_ = DolphinConfig.GeoZone.newBuilder(this.geoZone19_).mergeFrom(value).buildPartial(); } else { this.geoZone19_ = value; }  onChanged(); } else { this.geoZone19Builder_.mergeFrom((AbstractMessage)value); }  return this; } public Builder clearGeoZone19() { if (this.geoZone19Builder_ == null) { this.geoZone19_ = null; onChanged(); } else { this.geoZone19_ = null; this.geoZone19Builder_ = null; }  return this; } public DolphinConfig.GeoZone.Builder getGeoZone19Builder() { onChanged(); return (DolphinConfig.GeoZone.Builder)getGeoZone19FieldBuilder().getBuilder(); } public DolphinConfig.GeoZoneOrBuilder getGeoZone19OrBuilder() { if (this.geoZone19Builder_ != null) return (DolphinConfig.GeoZoneOrBuilder)this.geoZone19Builder_.getMessageOrBuilder();  return (this.geoZone19_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone19_; } private SingleFieldBuilderV3<DolphinConfig.GeoZone, DolphinConfig.GeoZone.Builder, DolphinConfig.GeoZoneOrBuilder> getGeoZone19FieldBuilder() { if (this.geoZone19Builder_ == null) { this.geoZone19Builder_ = new SingleFieldBuilderV3((AbstractMessage)getGeoZone19(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean()); this.geoZone19_ = null; }  return this.geoZone19Builder_; } public boolean hasGeoZone20() { return (this.geoZone20Builder_ != null || this.geoZone20_ != null); } public DolphinConfig.GeoZone getGeoZone20() { if (this.geoZone20Builder_ == null) return (this.geoZone20_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone20_;  return (DolphinConfig.GeoZone)this.geoZone20Builder_.getMessage(); } public Builder setGeoZone20(DolphinConfig.GeoZone value) { if (this.geoZone20Builder_ == null) { if (value == null) throw new NullPointerException();  this.geoZone20_ = value; onChanged(); } else { this.geoZone20Builder_.setMessage((AbstractMessage)value); }  return this; } public Builder setGeoZone20(DolphinConfig.GeoZone.Builder builderForValue) { if (this.geoZone20Builder_ == null) { this.geoZone20_ = builderForValue.build(); onChanged(); } else { this.geoZone20Builder_.setMessage((AbstractMessage)builderForValue.build()); }  return this; } public Builder mergeGeoZone20(DolphinConfig.GeoZone value) { if (this.geoZone20Builder_ == null) { if (this.geoZone20_ != null) { this.geoZone20_ = DolphinConfig.GeoZone.newBuilder(this.geoZone20_).mergeFrom(value).buildPartial(); } else { this.geoZone20_ = value; }  onChanged(); } else { this.geoZone20Builder_.mergeFrom((AbstractMessage)value); }  return this; } public Builder clearGeoZone20() { if (this.geoZone20Builder_ == null) { this.geoZone20_ = null; onChanged(); } else { this.geoZone20_ = null; this.geoZone20Builder_ = null; }  return this; } public DolphinConfig.GeoZone.Builder getGeoZone20Builder() { onChanged(); return (DolphinConfig.GeoZone.Builder)getGeoZone20FieldBuilder().getBuilder(); } public DolphinConfig.GeoZoneOrBuilder getGeoZone20OrBuilder() { if (this.geoZone20Builder_ != null) return (DolphinConfig.GeoZoneOrBuilder)this.geoZone20Builder_.getMessageOrBuilder();  return (this.geoZone20_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone20_; } private SingleFieldBuilderV3<DolphinConfig.GeoZone, DolphinConfig.GeoZone.Builder, DolphinConfig.GeoZoneOrBuilder> getGeoZone20FieldBuilder() { if (this.geoZone20Builder_ == null) { this.geoZone20Builder_ = new SingleFieldBuilderV3((AbstractMessage)getGeoZone20(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean()); this.geoZone20_ = null; }  return this.geoZone20Builder_; } public boolean hasGeoZone21() { return (this.geoZone21Builder_ != null || this.geoZone21_ != null); } public DolphinConfig.GeoZone getGeoZone21() { if (this.geoZone21Builder_ == null) return (this.geoZone21_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone21_;  return (DolphinConfig.GeoZone)this.geoZone21Builder_.getMessage(); } public Builder setGeoZone21(DolphinConfig.GeoZone value) { if (this.geoZone21Builder_ == null) { if (value == null) throw new NullPointerException();  this.geoZone21_ = value; onChanged(); } else { this.geoZone21Builder_.setMessage((AbstractMessage)value); }  return this; } public Builder setGeoZone21(DolphinConfig.GeoZone.Builder builderForValue) { if (this.geoZone21Builder_ == null) { this.geoZone21_ = builderForValue.build(); onChanged(); } else { this.geoZone21Builder_.setMessage((AbstractMessage)builderForValue.build()); }  return this; } public Builder mergeGeoZone21(DolphinConfig.GeoZone value) { if (this.geoZone21Builder_ == null) { if (this.geoZone21_ != null) { this.geoZone21_ = DolphinConfig.GeoZone.newBuilder(this.geoZone21_).mergeFrom(value).buildPartial(); } else { this.geoZone21_ = value; }  onChanged(); } else { this.geoZone21Builder_.mergeFrom((AbstractMessage)value); }  return this; } public Builder clearGeoZone21() { if (this.geoZone21Builder_ == null) { this.geoZone21_ = null; onChanged(); } else { this.geoZone21_ = null; this.geoZone21Builder_ = null; }  return this; } public DolphinConfig.GeoZone.Builder getGeoZone21Builder() { onChanged(); return (DolphinConfig.GeoZone.Builder)getGeoZone21FieldBuilder().getBuilder(); } public DolphinConfig.GeoZoneOrBuilder getGeoZone21OrBuilder() { if (this.geoZone21Builder_ != null) return (DolphinConfig.GeoZoneOrBuilder)this.geoZone21Builder_.getMessageOrBuilder();  return (this.geoZone21_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone21_; } private SingleFieldBuilderV3<DolphinConfig.GeoZone, DolphinConfig.GeoZone.Builder, DolphinConfig.GeoZoneOrBuilder> getGeoZone21FieldBuilder() { if (this.geoZone21Builder_ == null) { this.geoZone21Builder_ = new SingleFieldBuilderV3((AbstractMessage)getGeoZone21(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean()); this.geoZone21_ = null; }  return this.geoZone21Builder_; } public boolean hasGeoZone22() { return (this.geoZone22Builder_ != null || this.geoZone22_ != null); } public DolphinConfig.GeoZone getGeoZone22() { if (this.geoZone22Builder_ == null) return (this.geoZone22_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone22_;  return (DolphinConfig.GeoZone)this.geoZone22Builder_.getMessage(); } public Builder setGeoZone22(DolphinConfig.GeoZone value) { if (this.geoZone22Builder_ == null) { if (value == null) throw new NullPointerException();  this.geoZone22_ = value; onChanged(); } else { this.geoZone22Builder_.setMessage((AbstractMessage)value); }  return this; } public Builder setGeoZone22(DolphinConfig.GeoZone.Builder builderForValue) { if (this.geoZone22Builder_ == null) { this.geoZone22_ = builderForValue.build(); onChanged(); } else { this.geoZone22Builder_.setMessage((AbstractMessage)builderForValue.build()); }  return this; } public Builder mergeGeoZone22(DolphinConfig.GeoZone value) { if (this.geoZone22Builder_ == null) { if (this.geoZone22_ != null) { this.geoZone22_ = DolphinConfig.GeoZone.newBuilder(this.geoZone22_).mergeFrom(value).buildPartial(); } else { this.geoZone22_ = value; }  onChanged(); } else { this.geoZone22Builder_.mergeFrom((AbstractMessage)value); }  return this; } public Builder clearGeoZone22() { if (this.geoZone22Builder_ == null) { this.geoZone22_ = null; onChanged(); } else { this.geoZone22_ = null; this.geoZone22Builder_ = null; }  return this; } public DolphinConfig.GeoZone.Builder getGeoZone22Builder() { onChanged(); return (DolphinConfig.GeoZone.Builder)getGeoZone22FieldBuilder().getBuilder(); } public DolphinConfig.GeoZoneOrBuilder getGeoZone22OrBuilder() { if (this.geoZone22Builder_ != null) return (DolphinConfig.GeoZoneOrBuilder)this.geoZone22Builder_.getMessageOrBuilder();  return (this.geoZone22_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone22_; } private SingleFieldBuilderV3<DolphinConfig.GeoZone, DolphinConfig.GeoZone.Builder, DolphinConfig.GeoZoneOrBuilder> getGeoZone22FieldBuilder() { if (this.geoZone22Builder_ == null) { this.geoZone22Builder_ = new SingleFieldBuilderV3((AbstractMessage)getGeoZone22(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean()); this.geoZone22_ = null; }  return this.geoZone22Builder_; } public boolean hasGeoZone23() { return (this.geoZone23Builder_ != null || this.geoZone23_ != null); } public DolphinConfig.GeoZone getGeoZone23() { if (this.geoZone23Builder_ == null) return (this.geoZone23_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone23_;  return (DolphinConfig.GeoZone)this.geoZone23Builder_.getMessage(); } public Builder setGeoZone23(DolphinConfig.GeoZone value) { if (this.geoZone23Builder_ == null) { if (value == null) throw new NullPointerException();  this.geoZone23_ = value; onChanged(); } else { this.geoZone23Builder_.setMessage((AbstractMessage)value); }  return this; } public Builder setGeoZone23(DolphinConfig.GeoZone.Builder builderForValue) { if (this.geoZone23Builder_ == null) { this.geoZone23_ = builderForValue.build(); onChanged(); } else { this.geoZone23Builder_.setMessage((AbstractMessage)builderForValue.build()); }  return this; } public Builder mergeGeoZone23(DolphinConfig.GeoZone value) { if (this.geoZone23Builder_ == null) { if (this.geoZone23_ != null) { this.geoZone23_ = DolphinConfig.GeoZone.newBuilder(this.geoZone23_).mergeFrom(value).buildPartial(); } else { this.geoZone23_ = value; }  onChanged(); } else { this.geoZone23Builder_.mergeFrom((AbstractMessage)value); }  return this; } public Builder clearGeoZone23() { if (this.geoZone23Builder_ == null) { this.geoZone23_ = null; onChanged(); } else { this.geoZone23_ = null; this.geoZone23Builder_ = null; }  return this; } public DolphinConfig.GeoZone.Builder getGeoZone23Builder() { onChanged(); return (DolphinConfig.GeoZone.Builder)getGeoZone23FieldBuilder().getBuilder(); } public DolphinConfig.GeoZoneOrBuilder getGeoZone23OrBuilder() { if (this.geoZone23Builder_ != null) return (DolphinConfig.GeoZoneOrBuilder)this.geoZone23Builder_.getMessageOrBuilder();  return (this.geoZone23_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone23_; } private SingleFieldBuilderV3<DolphinConfig.GeoZone, DolphinConfig.GeoZone.Builder, DolphinConfig.GeoZoneOrBuilder> getGeoZone23FieldBuilder() { if (this.geoZone23Builder_ == null) { this.geoZone23Builder_ = new SingleFieldBuilderV3((AbstractMessage)getGeoZone23(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean()); this.geoZone23_ = null; }  return this.geoZone23Builder_; } public boolean hasGeoZone24() { return (this.geoZone24Builder_ != null || this.geoZone24_ != null); } public DolphinConfig.GeoZone getGeoZone24() { if (this.geoZone24Builder_ == null) return (this.geoZone24_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone24_;  return (DolphinConfig.GeoZone)this.geoZone24Builder_.getMessage(); } public Builder setGeoZone24(DolphinConfig.GeoZone value) { if (this.geoZone24Builder_ == null) { if (value == null) throw new NullPointerException();  this.geoZone24_ = value; onChanged(); } else { this.geoZone24Builder_.setMessage((AbstractMessage)value); }  return this; } public Builder setGeoZone24(DolphinConfig.GeoZone.Builder builderForValue) { if (this.geoZone24Builder_ == null) { this.geoZone24_ = builderForValue.build(); onChanged(); } else { this.geoZone24Builder_.setMessage((AbstractMessage)builderForValue.build()); }  return this; } public Builder mergeGeoZone24(DolphinConfig.GeoZone value) { if (this.geoZone24Builder_ == null) { if (this.geoZone24_ != null) { this.geoZone24_ = DolphinConfig.GeoZone.newBuilder(this.geoZone24_).mergeFrom(value).buildPartial(); } else { this.geoZone24_ = value; }  onChanged(); } else { this.geoZone24Builder_.mergeFrom((AbstractMessage)value); }  return this; } public Builder clearGeoZone24() { if (this.geoZone24Builder_ == null) { this.geoZone24_ = null; onChanged(); } else { this.geoZone24_ = null; this.geoZone24Builder_ = null; }  return this; } public DolphinConfig.GeoZone.Builder getGeoZone24Builder() { onChanged(); return (DolphinConfig.GeoZone.Builder)getGeoZone24FieldBuilder().getBuilder(); } public DolphinConfig.GeoZoneOrBuilder getGeoZone24OrBuilder() { if (this.geoZone24Builder_ != null) return (DolphinConfig.GeoZoneOrBuilder)this.geoZone24Builder_.getMessageOrBuilder();  return (this.geoZone24_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone24_; } private SingleFieldBuilderV3<DolphinConfig.GeoZone, DolphinConfig.GeoZone.Builder, DolphinConfig.GeoZoneOrBuilder> getGeoZone24FieldBuilder() { if (this.geoZone24Builder_ == null) { this.geoZone24Builder_ = new SingleFieldBuilderV3((AbstractMessage)getGeoZone24(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean()); this.geoZone24_ = null; }  return this.geoZone24Builder_; } public boolean hasGeoZone25() { return (this.geoZone25Builder_ != null || this.geoZone25_ != null); } public DolphinConfig.GeoZone getGeoZone25() { if (this.geoZone25Builder_ == null) return (this.geoZone25_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone25_;  return (DolphinConfig.GeoZone)this.geoZone25Builder_.getMessage(); } public Builder setGeoZone25(DolphinConfig.GeoZone value) { if (this.geoZone25Builder_ == null) { if (value == null) throw new NullPointerException();  this.geoZone25_ = value; onChanged(); } else { this.geoZone25Builder_.setMessage((AbstractMessage)value); }  return this; } public Builder setGeoZone25(DolphinConfig.GeoZone.Builder builderForValue) { if (this.geoZone25Builder_ == null) { this.geoZone25_ = builderForValue.build(); onChanged(); } else { this.geoZone25Builder_.setMessage((AbstractMessage)builderForValue.build()); }  return this; } public Builder mergeGeoZone25(DolphinConfig.GeoZone value) { if (this.geoZone25Builder_ == null) { if (this.geoZone25_ != null) { this.geoZone25_ = DolphinConfig.GeoZone.newBuilder(this.geoZone25_).mergeFrom(value).buildPartial(); } else { this.geoZone25_ = value; }  onChanged(); } else { this.geoZone25Builder_.mergeFrom((AbstractMessage)value); }  return this; } public Builder clearGeoZone25() { if (this.geoZone25Builder_ == null) { this.geoZone25_ = null; onChanged(); } else { this.geoZone25_ = null; this.geoZone25Builder_ = null; }  return this; } public DolphinConfig.GeoZone.Builder getGeoZone25Builder() { onChanged(); return (DolphinConfig.GeoZone.Builder)getGeoZone25FieldBuilder().getBuilder(); } public DolphinConfig.GeoZoneOrBuilder getGeoZone25OrBuilder() { if (this.geoZone25Builder_ != null) return (DolphinConfig.GeoZoneOrBuilder)this.geoZone25Builder_.getMessageOrBuilder();  return (this.geoZone25_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone25_; } private SingleFieldBuilderV3<DolphinConfig.GeoZone, DolphinConfig.GeoZone.Builder, DolphinConfig.GeoZoneOrBuilder> getGeoZone25FieldBuilder() { if (this.geoZone25Builder_ == null) { this.geoZone25Builder_ = new SingleFieldBuilderV3((AbstractMessage)getGeoZone25(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean()); this.geoZone25_ = null; }  return this.geoZone25Builder_; } public boolean hasGeoZone26() { return (this.geoZone26Builder_ != null || this.geoZone26_ != null); } public DolphinConfig.GeoZone getGeoZone26() { if (this.geoZone26Builder_ == null) return (this.geoZone26_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone26_;  return (DolphinConfig.GeoZone)this.geoZone26Builder_.getMessage(); } public Builder setGeoZone26(DolphinConfig.GeoZone value) { if (this.geoZone26Builder_ == null) { if (value == null) throw new NullPointerException();  this.geoZone26_ = value; onChanged(); } else { this.geoZone26Builder_.setMessage((AbstractMessage)value); }  return this; } public Builder setGeoZone26(DolphinConfig.GeoZone.Builder builderForValue) { if (this.geoZone26Builder_ == null) { this.geoZone26_ = builderForValue.build(); onChanged(); } else { this.geoZone26Builder_.setMessage((AbstractMessage)builderForValue.build()); }  return this; } public Builder mergeGeoZone26(DolphinConfig.GeoZone value) { if (this.geoZone26Builder_ == null) { if (this.geoZone26_ != null) { this.geoZone26_ = DolphinConfig.GeoZone.newBuilder(this.geoZone26_).mergeFrom(value).buildPartial(); } else { this.geoZone26_ = value; }  onChanged(); } else { this.geoZone26Builder_.mergeFrom((AbstractMessage)value); }  return this; } public Builder clearGeoZone26() { if (this.geoZone26Builder_ == null) { this.geoZone26_ = null; onChanged(); } else { this.geoZone26_ = null; this.geoZone26Builder_ = null; }  return this; } public DolphinConfig.GeoZone.Builder getGeoZone26Builder() { onChanged(); return (DolphinConfig.GeoZone.Builder)getGeoZone26FieldBuilder().getBuilder(); } public DolphinConfig.GeoZoneOrBuilder getGeoZone26OrBuilder() { if (this.geoZone26Builder_ != null) return (DolphinConfig.GeoZoneOrBuilder)this.geoZone26Builder_.getMessageOrBuilder();  return (this.geoZone26_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone26_; } private SingleFieldBuilderV3<DolphinConfig.GeoZone, DolphinConfig.GeoZone.Builder, DolphinConfig.GeoZoneOrBuilder> getGeoZone26FieldBuilder() { if (this.geoZone26Builder_ == null) { this.geoZone26Builder_ = new SingleFieldBuilderV3((AbstractMessage)getGeoZone26(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean()); this.geoZone26_ = null; }  return this.geoZone26Builder_; } public boolean hasGeoZone27() { return (this.geoZone27Builder_ != null || this.geoZone27_ != null); } public DolphinConfig.GeoZone getGeoZone27() { if (this.geoZone27Builder_ == null) return (this.geoZone27_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone27_;  return (DolphinConfig.GeoZone)this.geoZone27Builder_.getMessage(); } public Builder setGeoZone27(DolphinConfig.GeoZone value) { if (this.geoZone27Builder_ == null) { if (value == null) throw new NullPointerException();  this.geoZone27_ = value; onChanged(); } else { this.geoZone27Builder_.setMessage((AbstractMessage)value); }  return this; } public Builder setGeoZone27(DolphinConfig.GeoZone.Builder builderForValue) { if (this.geoZone27Builder_ == null) { this.geoZone27_ = builderForValue.build(); onChanged(); } else { this.geoZone27Builder_.setMessage((AbstractMessage)builderForValue.build()); }  return this; } public Builder mergeGeoZone27(DolphinConfig.GeoZone value) { if (this.geoZone27Builder_ == null) { if (this.geoZone27_ != null) { this.geoZone27_ = DolphinConfig.GeoZone.newBuilder(this.geoZone27_).mergeFrom(value).buildPartial(); } else { this.geoZone27_ = value; }  onChanged(); } else { this.geoZone27Builder_.mergeFrom((AbstractMessage)value); }  return this; } public Builder clearGeoZone27() { if (this.geoZone27Builder_ == null) { this.geoZone27_ = null; onChanged(); } else { this.geoZone27_ = null; this.geoZone27Builder_ = null; }  return this; } public DolphinConfig.GeoZone.Builder getGeoZone27Builder() { onChanged(); return (DolphinConfig.GeoZone.Builder)getGeoZone27FieldBuilder().getBuilder(); } public DolphinConfig.GeoZoneOrBuilder getGeoZone27OrBuilder() { if (this.geoZone27Builder_ != null) return (DolphinConfig.GeoZoneOrBuilder)this.geoZone27Builder_.getMessageOrBuilder();  return (this.geoZone27_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone27_; } private SingleFieldBuilderV3<DolphinConfig.GeoZone, DolphinConfig.GeoZone.Builder, DolphinConfig.GeoZoneOrBuilder> getGeoZone27FieldBuilder() { if (this.geoZone27Builder_ == null) { this.geoZone27Builder_ = new SingleFieldBuilderV3((AbstractMessage)getGeoZone27(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean()); this.geoZone27_ = null; }  return this.geoZone27Builder_; } public boolean hasGeoZone28() { return (this.geoZone28Builder_ != null || this.geoZone28_ != null); } public DolphinConfig.GeoZone getGeoZone28() { if (this.geoZone28Builder_ == null) return (this.geoZone28_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone28_;  return (DolphinConfig.GeoZone)this.geoZone28Builder_.getMessage(); } public Builder setGeoZone28(DolphinConfig.GeoZone value) { if (this.geoZone28Builder_ == null) { if (value == null) throw new NullPointerException();  this.geoZone28_ = value; onChanged(); } else { this.geoZone28Builder_.setMessage((AbstractMessage)value); }  return this; } public Builder setGeoZone28(DolphinConfig.GeoZone.Builder builderForValue) { if (this.geoZone28Builder_ == null) { this.geoZone28_ = builderForValue.build(); onChanged(); } else { this.geoZone28Builder_.setMessage((AbstractMessage)builderForValue.build()); }  return this; } public Builder mergeGeoZone28(DolphinConfig.GeoZone value) { if (this.geoZone28Builder_ == null) { if (this.geoZone28_ != null) { this.geoZone28_ = DolphinConfig.GeoZone.newBuilder(this.geoZone28_).mergeFrom(value).buildPartial(); } else { this.geoZone28_ = value; }  onChanged(); } else { this.geoZone28Builder_.mergeFrom((AbstractMessage)value); }  return this; } public Builder clearGeoZone28() { if (this.geoZone28Builder_ == null) { this.geoZone28_ = null; onChanged(); } else { this.geoZone28_ = null; this.geoZone28Builder_ = null; }  return this; } public DolphinConfig.GeoZone.Builder getGeoZone28Builder() { onChanged(); return (DolphinConfig.GeoZone.Builder)getGeoZone28FieldBuilder().getBuilder(); } public DolphinConfig.GeoZoneOrBuilder getGeoZone28OrBuilder() { if (this.geoZone28Builder_ != null) return (DolphinConfig.GeoZoneOrBuilder)this.geoZone28Builder_.getMessageOrBuilder();  return (this.geoZone28_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone28_; } private SingleFieldBuilderV3<DolphinConfig.GeoZone, DolphinConfig.GeoZone.Builder, DolphinConfig.GeoZoneOrBuilder> getGeoZone28FieldBuilder() { if (this.geoZone28Builder_ == null) { this.geoZone28Builder_ = new SingleFieldBuilderV3((AbstractMessage)getGeoZone28(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean()); this.geoZone28_ = null; }  return this.geoZone28Builder_; } public boolean hasGeoZone29() { return (this.geoZone29Builder_ != null || this.geoZone29_ != null); } public DolphinConfig.GeoZone getGeoZone29() { if (this.geoZone29Builder_ == null) return (this.geoZone29_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone29_;  return (DolphinConfig.GeoZone)this.geoZone29Builder_.getMessage(); } public Builder setGeoZone29(DolphinConfig.GeoZone value) { if (this.geoZone29Builder_ == null) { if (value == null) throw new NullPointerException();  this.geoZone29_ = value; onChanged(); } else { this.geoZone29Builder_.setMessage((AbstractMessage)value); }  return this; } public Builder setGeoZone29(DolphinConfig.GeoZone.Builder builderForValue) { if (this.geoZone29Builder_ == null) { this.geoZone29_ = builderForValue.build(); onChanged(); } else { this.geoZone29Builder_.setMessage((AbstractMessage)builderForValue.build()); }  return this; } public Builder mergeGeoZone29(DolphinConfig.GeoZone value) { if (this.geoZone29Builder_ == null) { if (this.geoZone29_ != null) { this.geoZone29_ = DolphinConfig.GeoZone.newBuilder(this.geoZone29_).mergeFrom(value).buildPartial(); } else { this.geoZone29_ = value; }  onChanged(); } else { this.geoZone29Builder_.mergeFrom((AbstractMessage)value); }  return this; } public Builder clearGeoZone29() { if (this.geoZone29Builder_ == null) { this.geoZone29_ = null; onChanged(); } else { this.geoZone29_ = null; this.geoZone29Builder_ = null; }  return this; } public DolphinConfig.GeoZone.Builder getGeoZone29Builder() { onChanged(); return (DolphinConfig.GeoZone.Builder)getGeoZone29FieldBuilder().getBuilder(); } public DolphinConfig.GeoZoneOrBuilder getGeoZone29OrBuilder() { if (this.geoZone29Builder_ != null) return (DolphinConfig.GeoZoneOrBuilder)this.geoZone29Builder_.getMessageOrBuilder();  return (this.geoZone29_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone29_; } private SingleFieldBuilderV3<DolphinConfig.GeoZone, DolphinConfig.GeoZone.Builder, DolphinConfig.GeoZoneOrBuilder> getGeoZone29FieldBuilder() { if (this.geoZone29Builder_ == null) { this.geoZone29Builder_ = new SingleFieldBuilderV3((AbstractMessage)getGeoZone29(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean()); this.geoZone29_ = null; }  return this.geoZone29Builder_; } public boolean hasGeoZone30() { return (this.geoZone30Builder_ != null || this.geoZone30_ != null); } public DolphinConfig.GeoZone getGeoZone30() { if (this.geoZone30Builder_ == null) return (this.geoZone30_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone30_;  return (DolphinConfig.GeoZone)this.geoZone30Builder_.getMessage(); } public Builder setGeoZone30(DolphinConfig.GeoZone value) { if (this.geoZone30Builder_ == null) { if (value == null) throw new NullPointerException();  this.geoZone30_ = value; onChanged(); } else { this.geoZone30Builder_.setMessage((AbstractMessage)value); }  return this; } public Builder setGeoZone30(DolphinConfig.GeoZone.Builder builderForValue) { if (this.geoZone30Builder_ == null) { this.geoZone30_ = builderForValue.build(); onChanged(); } else { this.geoZone30Builder_.setMessage((AbstractMessage)builderForValue.build()); }  return this; } public Builder mergeGeoZone30(DolphinConfig.GeoZone value) { if (this.geoZone30Builder_ == null) { if (this.geoZone30_ != null) { this.geoZone30_ = DolphinConfig.GeoZone.newBuilder(this.geoZone30_).mergeFrom(value).buildPartial(); } else { this.geoZone30_ = value; }  onChanged(); } else { this.geoZone30Builder_.mergeFrom((AbstractMessage)value); }  return this; } public Builder clearGeoZone30() { if (this.geoZone30Builder_ == null) { this.geoZone30_ = null; onChanged(); } else { this.geoZone30_ = null; this.geoZone30Builder_ = null; }  return this; } public DolphinConfig.GeoZone.Builder getGeoZone30Builder() { onChanged(); return (DolphinConfig.GeoZone.Builder)getGeoZone30FieldBuilder().getBuilder(); } public DolphinConfig.GeoZoneOrBuilder getGeoZone30OrBuilder() { if (this.geoZone30Builder_ != null) return (DolphinConfig.GeoZoneOrBuilder)this.geoZone30Builder_.getMessageOrBuilder();  return (this.geoZone30_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone30_; } private SingleFieldBuilderV3<DolphinConfig.GeoZone, DolphinConfig.GeoZone.Builder, DolphinConfig.GeoZoneOrBuilder> getGeoZone30FieldBuilder() { if (this.geoZone30Builder_ == null) { this.geoZone30Builder_ = new SingleFieldBuilderV3((AbstractMessage)getGeoZone30(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean()); this.geoZone30_ = null; }  return this.geoZone30Builder_; } public boolean hasGeoZone31() { return (this.geoZone31Builder_ != null || this.geoZone31_ != null); } public DolphinConfig.GeoZone getGeoZone31() { if (this.geoZone31Builder_ == null) return (this.geoZone31_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone31_;  return (DolphinConfig.GeoZone)this.geoZone31Builder_.getMessage(); } public Builder setGeoZone31(DolphinConfig.GeoZone value) { if (this.geoZone31Builder_ == null) { if (value == null) throw new NullPointerException();  this.geoZone31_ = value; onChanged(); } else { this.geoZone31Builder_.setMessage((AbstractMessage)value); }  return this; } public Builder setGeoZone31(DolphinConfig.GeoZone.Builder builderForValue) { if (this.geoZone31Builder_ == null) { this.geoZone31_ = builderForValue.build(); onChanged(); } else { this.geoZone31Builder_.setMessage((AbstractMessage)builderForValue.build()); }  return this; } public Builder mergeGeoZone31(DolphinConfig.GeoZone value) { if (this.geoZone31Builder_ == null) { if (this.geoZone31_ != null) { this.geoZone31_ = DolphinConfig.GeoZone.newBuilder(this.geoZone31_).mergeFrom(value).buildPartial(); } else { this.geoZone31_ = value; }  onChanged(); } else { this.geoZone31Builder_.mergeFrom((AbstractMessage)value); }  return this; } public Builder clearGeoZone31() { if (this.geoZone31Builder_ == null) { this.geoZone31_ = null; onChanged(); } else { this.geoZone31_ = null; this.geoZone31Builder_ = null; }  return this; } public DolphinConfig.GeoZone.Builder getGeoZone31Builder() { onChanged(); return (DolphinConfig.GeoZone.Builder)getGeoZone31FieldBuilder().getBuilder(); } public DolphinConfig.GeoZoneOrBuilder getGeoZone31OrBuilder() { if (this.geoZone31Builder_ != null) return (DolphinConfig.GeoZoneOrBuilder)this.geoZone31Builder_.getMessageOrBuilder();  return (this.geoZone31_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone31_; } private SingleFieldBuilderV3<DolphinConfig.GeoZone, DolphinConfig.GeoZone.Builder, DolphinConfig.GeoZoneOrBuilder> getGeoZone31FieldBuilder() { if (this.geoZone31Builder_ == null) { this.geoZone31Builder_ = new SingleFieldBuilderV3((AbstractMessage)getGeoZone31(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean()); this.geoZone31_ = null; }  return this.geoZone31Builder_; } public boolean hasGeoZone32() { return (this.geoZone32Builder_ != null || this.geoZone32_ != null); } public DolphinConfig.GeoZone getGeoZone32() { if (this.geoZone32Builder_ == null) return (this.geoZone32_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone32_;  return (DolphinConfig.GeoZone)this.geoZone32Builder_.getMessage(); } public Builder setGeoZone32(DolphinConfig.GeoZone value) { if (this.geoZone32Builder_ == null) { if (value == null) throw new NullPointerException();  this.geoZone32_ = value; onChanged(); } else { this.geoZone32Builder_.setMessage((AbstractMessage)value); }  return this; } public Builder setGeoZone32(DolphinConfig.GeoZone.Builder builderForValue) { if (this.geoZone32Builder_ == null) { this.geoZone32_ = builderForValue.build(); onChanged(); } else { this.geoZone32Builder_.setMessage((AbstractMessage)builderForValue.build()); }  return this; } public Builder mergeGeoZone32(DolphinConfig.GeoZone value) { if (this.geoZone32Builder_ == null) { if (this.geoZone32_ != null) { this.geoZone32_ = DolphinConfig.GeoZone.newBuilder(this.geoZone32_).mergeFrom(value).buildPartial(); } else { this.geoZone32_ = value; }  onChanged(); } else { this.geoZone32Builder_.mergeFrom((AbstractMessage)value); }  return this; } public Builder clearGeoZone32() { if (this.geoZone32Builder_ == null) { this.geoZone32_ = null; onChanged(); } else { this.geoZone32_ = null; this.geoZone32Builder_ = null; }  return this; } public DolphinConfig.GeoZone.Builder getGeoZone32Builder() { onChanged(); return (DolphinConfig.GeoZone.Builder)getGeoZone32FieldBuilder().getBuilder(); } public DolphinConfig.GeoZoneOrBuilder getGeoZone32OrBuilder() { if (this.geoZone32Builder_ != null) return (DolphinConfig.GeoZoneOrBuilder)this.geoZone32Builder_.getMessageOrBuilder();  return (this.geoZone32_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone32_; } private SingleFieldBuilderV3<DolphinConfig.GeoZone, DolphinConfig.GeoZone.Builder, DolphinConfig.GeoZoneOrBuilder> getGeoZone32FieldBuilder() { if (this.geoZone32Builder_ == null) { this.geoZone32Builder_ = new SingleFieldBuilderV3((AbstractMessage)getGeoZone32(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean()); this.geoZone32_ = null; }  return this.geoZone32Builder_; } public boolean hasGeoZone33() { return (this.geoZone33Builder_ != null || this.geoZone33_ != null); } public DolphinConfig.GeoZone getGeoZone33() { if (this.geoZone33Builder_ == null) return (this.geoZone33_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone33_;  return (DolphinConfig.GeoZone)this.geoZone33Builder_.getMessage(); } public Builder setGeoZone33(DolphinConfig.GeoZone value) { if (this.geoZone33Builder_ == null) { if (value == null) throw new NullPointerException();  this.geoZone33_ = value; onChanged(); } else { this.geoZone33Builder_.setMessage((AbstractMessage)value); }  return this; } public Builder setGeoZone33(DolphinConfig.GeoZone.Builder builderForValue) { if (this.geoZone33Builder_ == null) { this.geoZone33_ = builderForValue.build(); onChanged(); } else { this.geoZone33Builder_.setMessage((AbstractMessage)builderForValue.build()); }  return this; } public Builder mergeGeoZone33(DolphinConfig.GeoZone value) { if (this.geoZone33Builder_ == null) { if (this.geoZone33_ != null) { this.geoZone33_ = DolphinConfig.GeoZone.newBuilder(this.geoZone33_).mergeFrom(value).buildPartial(); } else { this.geoZone33_ = value; }  onChanged(); } else { this.geoZone33Builder_.mergeFrom((AbstractMessage)value); }  return this; } public Builder clearGeoZone33() { if (this.geoZone33Builder_ == null) { this.geoZone33_ = null; onChanged(); } else { this.geoZone33_ = null; this.geoZone33Builder_ = null; }  return this; } public DolphinConfig.GeoZone.Builder getGeoZone33Builder() { onChanged(); return (DolphinConfig.GeoZone.Builder)getGeoZone33FieldBuilder().getBuilder(); } public DolphinConfig.GeoZoneOrBuilder getGeoZone33OrBuilder() { if (this.geoZone33Builder_ != null) return (DolphinConfig.GeoZoneOrBuilder)this.geoZone33Builder_.getMessageOrBuilder();  return (this.geoZone33_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone33_; } private SingleFieldBuilderV3<DolphinConfig.GeoZone, DolphinConfig.GeoZone.Builder, DolphinConfig.GeoZoneOrBuilder> getGeoZone33FieldBuilder() { if (this.geoZone33Builder_ == null) { this.geoZone33Builder_ = new SingleFieldBuilderV3((AbstractMessage)getGeoZone33(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean()); this.geoZone33_ = null; }  return this.geoZone33Builder_; } public boolean hasGeoZone34() { return (this.geoZone34Builder_ != null || this.geoZone34_ != null); } public DolphinConfig.GeoZone getGeoZone34() { if (this.geoZone34Builder_ == null) return (this.geoZone34_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone34_;  return (DolphinConfig.GeoZone)this.geoZone34Builder_.getMessage(); } public Builder setGeoZone34(DolphinConfig.GeoZone value) { if (this.geoZone34Builder_ == null) { if (value == null) throw new NullPointerException();  this.geoZone34_ = value; onChanged(); } else { this.geoZone34Builder_.setMessage((AbstractMessage)value); }  return this; } public Builder setGeoZone34(DolphinConfig.GeoZone.Builder builderForValue) { if (this.geoZone34Builder_ == null) { this.geoZone34_ = builderForValue.build(); onChanged(); } else { this.geoZone34Builder_.setMessage((AbstractMessage)builderForValue.build()); }  return this; } public Builder mergeGeoZone34(DolphinConfig.GeoZone value) { if (this.geoZone34Builder_ == null) { if (this.geoZone34_ != null) { this.geoZone34_ = DolphinConfig.GeoZone.newBuilder(this.geoZone34_).mergeFrom(value).buildPartial(); } else { this.geoZone34_ = value; }  onChanged(); } else { this.geoZone34Builder_.mergeFrom((AbstractMessage)value); }  return this; } public Builder clearGeoZone34() { if (this.geoZone34Builder_ == null) { this.geoZone34_ = null; onChanged(); } else { this.geoZone34_ = null; this.geoZone34Builder_ = null; }  return this; } public DolphinConfig.GeoZone.Builder getGeoZone34Builder() { onChanged(); return (DolphinConfig.GeoZone.Builder)getGeoZone34FieldBuilder().getBuilder(); } public DolphinConfig.GeoZoneOrBuilder getGeoZone34OrBuilder() { if (this.geoZone34Builder_ != null) return (DolphinConfig.GeoZoneOrBuilder)this.geoZone34Builder_.getMessageOrBuilder();  return (this.geoZone34_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone34_; } private SingleFieldBuilderV3<DolphinConfig.GeoZone, DolphinConfig.GeoZone.Builder, DolphinConfig.GeoZoneOrBuilder> getGeoZone34FieldBuilder() { if (this.geoZone34Builder_ == null) { this.geoZone34Builder_ = new SingleFieldBuilderV3((AbstractMessage)getGeoZone34(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean()); this.geoZone34_ = null; }  return this.geoZone34Builder_; } public boolean hasGeoZone35() { return (this.geoZone35Builder_ != null || this.geoZone35_ != null); } public DolphinConfig.GeoZone getGeoZone35() { if (this.geoZone35Builder_ == null) return (this.geoZone35_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone35_;  return (DolphinConfig.GeoZone)this.geoZone35Builder_.getMessage(); } public Builder setGeoZone35(DolphinConfig.GeoZone value) { if (this.geoZone35Builder_ == null) { if (value == null) throw new NullPointerException();  this.geoZone35_ = value; onChanged(); } else { this.geoZone35Builder_.setMessage((AbstractMessage)value); }  return this; } public Builder setGeoZone35(DolphinConfig.GeoZone.Builder builderForValue) { if (this.geoZone35Builder_ == null) { this.geoZone35_ = builderForValue.build(); onChanged(); } else { this.geoZone35Builder_.setMessage((AbstractMessage)builderForValue.build()); }  return this; } public Builder mergeGeoZone35(DolphinConfig.GeoZone value) { if (this.geoZone35Builder_ == null) { if (this.geoZone35_ != null) { this.geoZone35_ = DolphinConfig.GeoZone.newBuilder(this.geoZone35_).mergeFrom(value).buildPartial(); } else { this.geoZone35_ = value; }  onChanged(); } else { this.geoZone35Builder_.mergeFrom((AbstractMessage)value); }  return this; } public Builder clearGeoZone35() { if (this.geoZone35Builder_ == null) { this.geoZone35_ = null; onChanged(); } else { this.geoZone35_ = null; this.geoZone35Builder_ = null; }  return this; } public DolphinConfig.GeoZone.Builder getGeoZone35Builder() { onChanged(); return (DolphinConfig.GeoZone.Builder)getGeoZone35FieldBuilder().getBuilder(); } public DolphinConfig.GeoZoneOrBuilder getGeoZone35OrBuilder() { if (this.geoZone35Builder_ != null) return (DolphinConfig.GeoZoneOrBuilder)this.geoZone35Builder_.getMessageOrBuilder();  return (this.geoZone35_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone35_; } private SingleFieldBuilderV3<DolphinConfig.GeoZone, DolphinConfig.GeoZone.Builder, DolphinConfig.GeoZoneOrBuilder> getGeoZone35FieldBuilder() { if (this.geoZone35Builder_ == null) { this.geoZone35Builder_ = new SingleFieldBuilderV3((AbstractMessage)getGeoZone35(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean()); this.geoZone35_ = null; }  return this.geoZone35Builder_; } public boolean hasGeoZone36() { return (this.geoZone36Builder_ != null || this.geoZone36_ != null); } public DolphinConfig.GeoZone getGeoZone36() { if (this.geoZone36Builder_ == null) return (this.geoZone36_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone36_;  return (DolphinConfig.GeoZone)this.geoZone36Builder_.getMessage(); } public Builder setGeoZone36(DolphinConfig.GeoZone value) { if (this.geoZone36Builder_ == null) { if (value == null) throw new NullPointerException();  this.geoZone36_ = value; onChanged(); } else { this.geoZone36Builder_.setMessage((AbstractMessage)value); }  return this; } public Builder setGeoZone36(DolphinConfig.GeoZone.Builder builderForValue) { if (this.geoZone36Builder_ == null) { this.geoZone36_ = builderForValue.build(); onChanged(); } else { this.geoZone36Builder_.setMessage((AbstractMessage)builderForValue.build()); }  return this; } public Builder mergeGeoZone36(DolphinConfig.GeoZone value) { if (this.geoZone36Builder_ == null) { if (this.geoZone36_ != null) { this.geoZone36_ = DolphinConfig.GeoZone.newBuilder(this.geoZone36_).mergeFrom(value).buildPartial(); } else { this.geoZone36_ = value; }  onChanged(); } else { this.geoZone36Builder_.mergeFrom((AbstractMessage)value); }  return this; } public Builder clearGeoZone36() { if (this.geoZone36Builder_ == null) { this.geoZone36_ = null; onChanged(); } else { this.geoZone36_ = null; this.geoZone36Builder_ = null; }  return this; } public DolphinConfig.GeoZone.Builder getGeoZone36Builder() { onChanged(); return (DolphinConfig.GeoZone.Builder)getGeoZone36FieldBuilder().getBuilder(); } public DolphinConfig.GeoZoneOrBuilder getGeoZone36OrBuilder() { if (this.geoZone36Builder_ != null) return (DolphinConfig.GeoZoneOrBuilder)this.geoZone36Builder_.getMessageOrBuilder();  return (this.geoZone36_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone36_; } private SingleFieldBuilderV3<DolphinConfig.GeoZone, DolphinConfig.GeoZone.Builder, DolphinConfig.GeoZoneOrBuilder> getGeoZone36FieldBuilder() { if (this.geoZone36Builder_ == null) { this.geoZone36Builder_ = new SingleFieldBuilderV3((AbstractMessage)getGeoZone36(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean()); this.geoZone36_ = null; }  return this.geoZone36Builder_; } public boolean hasGeoZone37() { return (this.geoZone37Builder_ != null || this.geoZone37_ != null); } public DolphinConfig.GeoZone getGeoZone37() { if (this.geoZone37Builder_ == null) return (this.geoZone37_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone37_;  return (DolphinConfig.GeoZone)this.geoZone37Builder_.getMessage(); } public Builder setGeoZone37(DolphinConfig.GeoZone value) { if (this.geoZone37Builder_ == null) { if (value == null) throw new NullPointerException();  this.geoZone37_ = value; onChanged(); } else { this.geoZone37Builder_.setMessage((AbstractMessage)value); }  return this; } public Builder setGeoZone37(DolphinConfig.GeoZone.Builder builderForValue) { if (this.geoZone37Builder_ == null) { this.geoZone37_ = builderForValue.build(); onChanged(); } else { this.geoZone37Builder_.setMessage((AbstractMessage)builderForValue.build()); }  return this; } public Builder mergeGeoZone37(DolphinConfig.GeoZone value) { if (this.geoZone37Builder_ == null) { if (this.geoZone37_ != null) { this.geoZone37_ = DolphinConfig.GeoZone.newBuilder(this.geoZone37_).mergeFrom(value).buildPartial(); } else { this.geoZone37_ = value; }  onChanged(); } else { this.geoZone37Builder_.mergeFrom((AbstractMessage)value); }  return this; } public Builder clearGeoZone37() { if (this.geoZone37Builder_ == null) { this.geoZone37_ = null; onChanged(); } else { this.geoZone37_ = null; this.geoZone37Builder_ = null; }  return this; } public DolphinConfig.GeoZone.Builder getGeoZone37Builder() { onChanged(); return (DolphinConfig.GeoZone.Builder)getGeoZone37FieldBuilder().getBuilder(); } public DolphinConfig.GeoZoneOrBuilder getGeoZone37OrBuilder() { if (this.geoZone37Builder_ != null) return (DolphinConfig.GeoZoneOrBuilder)this.geoZone37Builder_.getMessageOrBuilder();  return (this.geoZone37_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone37_; } private SingleFieldBuilderV3<DolphinConfig.GeoZone, DolphinConfig.GeoZone.Builder, DolphinConfig.GeoZoneOrBuilder> getGeoZone37FieldBuilder() { if (this.geoZone37Builder_ == null) { this.geoZone37Builder_ = new SingleFieldBuilderV3((AbstractMessage)getGeoZone37(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean()); this.geoZone37_ = null; }  return this.geoZone37Builder_; } public boolean hasGeoZone38() { return (this.geoZone38Builder_ != null || this.geoZone38_ != null); } public DolphinConfig.GeoZone getGeoZone38() { if (this.geoZone38Builder_ == null) return (this.geoZone38_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone38_;  return (DolphinConfig.GeoZone)this.geoZone38Builder_.getMessage(); } public Builder setGeoZone38(DolphinConfig.GeoZone value) { if (this.geoZone38Builder_ == null) { if (value == null) throw new NullPointerException();  this.geoZone38_ = value; onChanged(); } else { this.geoZone38Builder_.setMessage((AbstractMessage)value); }  return this; } public Builder setGeoZone38(DolphinConfig.GeoZone.Builder builderForValue) { if (this.geoZone38Builder_ == null) { this.geoZone38_ = builderForValue.build(); onChanged(); } else { this.geoZone38Builder_.setMessage((AbstractMessage)builderForValue.build()); }  return this; } public Builder mergeGeoZone38(DolphinConfig.GeoZone value) { if (this.geoZone38Builder_ == null) { if (this.geoZone38_ != null) { this.geoZone38_ = DolphinConfig.GeoZone.newBuilder(this.geoZone38_).mergeFrom(value).buildPartial(); } else { this.geoZone38_ = value; }  onChanged(); } else { this.geoZone38Builder_.mergeFrom((AbstractMessage)value); }  return this; } public Builder clearGeoZone38() { if (this.geoZone38Builder_ == null) { this.geoZone38_ = null; onChanged(); } else { this.geoZone38_ = null; this.geoZone38Builder_ = null; }  return this; } public DolphinConfig.GeoZone.Builder getGeoZone38Builder() { onChanged(); return (DolphinConfig.GeoZone.Builder)getGeoZone38FieldBuilder().getBuilder(); } public DolphinConfig.GeoZoneOrBuilder getGeoZone38OrBuilder() { if (this.geoZone38Builder_ != null) return (DolphinConfig.GeoZoneOrBuilder)this.geoZone38Builder_.getMessageOrBuilder();  return (this.geoZone38_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone38_; } private SingleFieldBuilderV3<DolphinConfig.GeoZone, DolphinConfig.GeoZone.Builder, DolphinConfig.GeoZoneOrBuilder> getGeoZone38FieldBuilder() { if (this.geoZone38Builder_ == null) { this.geoZone38Builder_ = new SingleFieldBuilderV3((AbstractMessage)getGeoZone38(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean()); this.geoZone38_ = null; }  return this.geoZone38Builder_; } public boolean hasGeoZone39() { return (this.geoZone39Builder_ != null || this.geoZone39_ != null); } public DolphinConfig.GeoZone getGeoZone39() { if (this.geoZone39Builder_ == null) return (this.geoZone39_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone39_;  return (DolphinConfig.GeoZone)this.geoZone39Builder_.getMessage(); } public Builder setGeoZone39(DolphinConfig.GeoZone value) { if (this.geoZone39Builder_ == null) { if (value == null) throw new NullPointerException();  this.geoZone39_ = value; onChanged(); } else { this.geoZone39Builder_.setMessage((AbstractMessage)value); }  return this; } public Builder setGeoZone39(DolphinConfig.GeoZone.Builder builderForValue) { if (this.geoZone39Builder_ == null) { this.geoZone39_ = builderForValue.build(); onChanged(); } else { this.geoZone39Builder_.setMessage((AbstractMessage)builderForValue.build()); }  return this; } public Builder mergeGeoZone39(DolphinConfig.GeoZone value) { if (this.geoZone39Builder_ == null) { if (this.geoZone39_ != null) { this.geoZone39_ = DolphinConfig.GeoZone.newBuilder(this.geoZone39_).mergeFrom(value).buildPartial(); } else { this.geoZone39_ = value; }  onChanged(); } else { this.geoZone39Builder_.mergeFrom((AbstractMessage)value); }  return this; } public Builder clearGeoZone39() { if (this.geoZone39Builder_ == null) { this.geoZone39_ = null; onChanged(); } else { this.geoZone39_ = null; this.geoZone39Builder_ = null; }  return this; } public DolphinConfig.GeoZone.Builder getGeoZone39Builder() { onChanged(); return (DolphinConfig.GeoZone.Builder)getGeoZone39FieldBuilder().getBuilder(); } public DolphinConfig.GeoZoneOrBuilder getGeoZone39OrBuilder() { if (this.geoZone39Builder_ != null) return (DolphinConfig.GeoZoneOrBuilder)this.geoZone39Builder_.getMessageOrBuilder();  return (this.geoZone39_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone39_; } private SingleFieldBuilderV3<DolphinConfig.GeoZone, DolphinConfig.GeoZone.Builder, DolphinConfig.GeoZoneOrBuilder> getGeoZone39FieldBuilder() { if (this.geoZone39Builder_ == null) { this.geoZone39Builder_ = new SingleFieldBuilderV3((AbstractMessage)getGeoZone39(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean()); this.geoZone39_ = null; }  return this.geoZone39Builder_; } public boolean hasGeoZone40() { return (this.geoZone40Builder_ != null || this.geoZone40_ != null); } public DolphinConfig.GeoZone getGeoZone40() { if (this.geoZone40Builder_ == null) return (this.geoZone40_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone40_;  return (DolphinConfig.GeoZone)this.geoZone40Builder_.getMessage(); } public Builder setGeoZone40(DolphinConfig.GeoZone value) { if (this.geoZone40Builder_ == null) { if (value == null) throw new NullPointerException();  this.geoZone40_ = value; onChanged(); } else { this.geoZone40Builder_.setMessage((AbstractMessage)value); }  return this; } public Builder setGeoZone40(DolphinConfig.GeoZone.Builder builderForValue) { if (this.geoZone40Builder_ == null) { this.geoZone40_ = builderForValue.build(); onChanged(); } else { this.geoZone40Builder_.setMessage((AbstractMessage)builderForValue.build()); }  return this; } public Builder mergeGeoZone40(DolphinConfig.GeoZone value) { if (this.geoZone40Builder_ == null) { if (this.geoZone40_ != null) { this.geoZone40_ = DolphinConfig.GeoZone.newBuilder(this.geoZone40_).mergeFrom(value).buildPartial(); } else { this.geoZone40_ = value; }  onChanged(); } else { this.geoZone40Builder_.mergeFrom((AbstractMessage)value); }  return this; } public Builder clearGeoZone40() { if (this.geoZone40Builder_ == null) { this.geoZone40_ = null; onChanged(); } else { this.geoZone40_ = null; this.geoZone40Builder_ = null; }  return this; } public DolphinConfig.GeoZone.Builder getGeoZone40Builder() { onChanged(); return (DolphinConfig.GeoZone.Builder)getGeoZone40FieldBuilder().getBuilder(); } public DolphinConfig.GeoZoneOrBuilder getGeoZone40OrBuilder() { if (this.geoZone40Builder_ != null) return (DolphinConfig.GeoZoneOrBuilder)this.geoZone40Builder_.getMessageOrBuilder();  return (this.geoZone40_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone40_; } private SingleFieldBuilderV3<DolphinConfig.GeoZone, DolphinConfig.GeoZone.Builder, DolphinConfig.GeoZoneOrBuilder> getGeoZone40FieldBuilder() { if (this.geoZone40Builder_ == null) { this.geoZone40Builder_ = new SingleFieldBuilderV3((AbstractMessage)getGeoZone40(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean()); this.geoZone40_ = null; }  return this.geoZone40Builder_; } public boolean hasGeoZone41() { return (this.geoZone41Builder_ != null || this.geoZone41_ != null); } public DolphinConfig.GeoZone getGeoZone41() { if (this.geoZone41Builder_ == null) return (this.geoZone41_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone41_;  return (DolphinConfig.GeoZone)this.geoZone41Builder_.getMessage(); } public Builder setGeoZone41(DolphinConfig.GeoZone value) { if (this.geoZone41Builder_ == null) { if (value == null) throw new NullPointerException();  this.geoZone41_ = value; onChanged(); } else { this.geoZone41Builder_.setMessage((AbstractMessage)value); }  return this; } public Builder setGeoZone41(DolphinConfig.GeoZone.Builder builderForValue) { if (this.geoZone41Builder_ == null) { this.geoZone41_ = builderForValue.build(); onChanged(); } else { this.geoZone41Builder_.setMessage((AbstractMessage)builderForValue.build()); }  return this; } public Builder mergeGeoZone41(DolphinConfig.GeoZone value) { if (this.geoZone41Builder_ == null) { if (this.geoZone41_ != null) { this.geoZone41_ = DolphinConfig.GeoZone.newBuilder(this.geoZone41_).mergeFrom(value).buildPartial(); } else { this.geoZone41_ = value; }  onChanged(); } else { this.geoZone41Builder_.mergeFrom((AbstractMessage)value); }  return this; } public Builder clearGeoZone41() { if (this.geoZone41Builder_ == null) { this.geoZone41_ = null; onChanged(); } else { this.geoZone41_ = null; this.geoZone41Builder_ = null; }  return this; } public DolphinConfig.GeoZone.Builder getGeoZone41Builder() { onChanged(); return (DolphinConfig.GeoZone.Builder)getGeoZone41FieldBuilder().getBuilder(); } public DolphinConfig.GeoZoneOrBuilder getGeoZone41OrBuilder() { if (this.geoZone41Builder_ != null) return (DolphinConfig.GeoZoneOrBuilder)this.geoZone41Builder_.getMessageOrBuilder();  return (this.geoZone41_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone41_; } private SingleFieldBuilderV3<DolphinConfig.GeoZone, DolphinConfig.GeoZone.Builder, DolphinConfig.GeoZoneOrBuilder> getGeoZone41FieldBuilder() { if (this.geoZone41Builder_ == null) { this.geoZone41Builder_ = new SingleFieldBuilderV3((AbstractMessage)getGeoZone41(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean()); this.geoZone41_ = null; }  return this.geoZone41Builder_; } public boolean hasGeoZone42() { return (this.geoZone42Builder_ != null || this.geoZone42_ != null); } public DolphinConfig.GeoZone getGeoZone42() { if (this.geoZone42Builder_ == null) return (this.geoZone42_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone42_;  return (DolphinConfig.GeoZone)this.geoZone42Builder_.getMessage(); } public Builder setGeoZone42(DolphinConfig.GeoZone value) { if (this.geoZone42Builder_ == null) { if (value == null) throw new NullPointerException();  this.geoZone42_ = value; onChanged(); } else { this.geoZone42Builder_.setMessage((AbstractMessage)value); }  return this; } public Builder setGeoZone42(DolphinConfig.GeoZone.Builder builderForValue) { if (this.geoZone42Builder_ == null) { this.geoZone42_ = builderForValue.build(); onChanged(); } else { this.geoZone42Builder_.setMessage((AbstractMessage)builderForValue.build()); }  return this; } public Builder mergeGeoZone42(DolphinConfig.GeoZone value) { if (this.geoZone42Builder_ == null) { if (this.geoZone42_ != null) { this.geoZone42_ = DolphinConfig.GeoZone.newBuilder(this.geoZone42_).mergeFrom(value).buildPartial(); } else { this.geoZone42_ = value; }  onChanged(); } else { this.geoZone42Builder_.mergeFrom((AbstractMessage)value); }  return this; } public Builder clearGeoZone42() { if (this.geoZone42Builder_ == null) { this.geoZone42_ = null; onChanged(); } else { this.geoZone42_ = null; this.geoZone42Builder_ = null; }  return this; } public DolphinConfig.GeoZone.Builder getGeoZone42Builder() { onChanged(); return (DolphinConfig.GeoZone.Builder)getGeoZone42FieldBuilder().getBuilder(); } public DolphinConfig.GeoZoneOrBuilder getGeoZone42OrBuilder() { if (this.geoZone42Builder_ != null) return (DolphinConfig.GeoZoneOrBuilder)this.geoZone42Builder_.getMessageOrBuilder();  return (this.geoZone42_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone42_; } private SingleFieldBuilderV3<DolphinConfig.GeoZone, DolphinConfig.GeoZone.Builder, DolphinConfig.GeoZoneOrBuilder> getGeoZone42FieldBuilder() { if (this.geoZone42Builder_ == null) { this.geoZone42Builder_ = new SingleFieldBuilderV3((AbstractMessage)getGeoZone42(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean()); this.geoZone42_ = null; }  return this.geoZone42Builder_; } public boolean hasGeoZone43() { return (this.geoZone43Builder_ != null || this.geoZone43_ != null); } public DolphinConfig.GeoZone getGeoZone43() { if (this.geoZone43Builder_ == null) return (this.geoZone43_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone43_;  return (DolphinConfig.GeoZone)this.geoZone43Builder_.getMessage(); } public Builder setGeoZone43(DolphinConfig.GeoZone value) { if (this.geoZone43Builder_ == null) { if (value == null) throw new NullPointerException();  this.geoZone43_ = value; onChanged(); } else { this.geoZone43Builder_.setMessage((AbstractMessage)value); }  return this; } public Builder setGeoZone43(DolphinConfig.GeoZone.Builder builderForValue) { if (this.geoZone43Builder_ == null) { this.geoZone43_ = builderForValue.build(); onChanged(); } else { this.geoZone43Builder_.setMessage((AbstractMessage)builderForValue.build()); }  return this; } public Builder mergeGeoZone43(DolphinConfig.GeoZone value) { if (this.geoZone43Builder_ == null) { if (this.geoZone43_ != null) { this.geoZone43_ = DolphinConfig.GeoZone.newBuilder(this.geoZone43_).mergeFrom(value).buildPartial(); } else { this.geoZone43_ = value; }  onChanged(); } else { this.geoZone43Builder_.mergeFrom((AbstractMessage)value); }  return this; } public Builder clearGeoZone43() { if (this.geoZone43Builder_ == null) { this.geoZone43_ = null; onChanged(); } else { this.geoZone43_ = null; this.geoZone43Builder_ = null; }  return this; } public DolphinConfig.GeoZone.Builder getGeoZone43Builder() { onChanged(); return (DolphinConfig.GeoZone.Builder)getGeoZone43FieldBuilder().getBuilder(); } public DolphinConfig.GeoZoneOrBuilder getGeoZone43OrBuilder() { if (this.geoZone43Builder_ != null) return (DolphinConfig.GeoZoneOrBuilder)this.geoZone43Builder_.getMessageOrBuilder();  return (this.geoZone43_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone43_; } private SingleFieldBuilderV3<DolphinConfig.GeoZone, DolphinConfig.GeoZone.Builder, DolphinConfig.GeoZoneOrBuilder> getGeoZone43FieldBuilder() { if (this.geoZone43Builder_ == null) { this.geoZone43Builder_ = new SingleFieldBuilderV3((AbstractMessage)getGeoZone43(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean()); this.geoZone43_ = null; }  return this.geoZone43Builder_; } public boolean hasGeoZone44() { return (this.geoZone44Builder_ != null || this.geoZone44_ != null); } public DolphinConfig.GeoZone getGeoZone44() { if (this.geoZone44Builder_ == null) return (this.geoZone44_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone44_;  return (DolphinConfig.GeoZone)this.geoZone44Builder_.getMessage(); } public Builder setGeoZone44(DolphinConfig.GeoZone value) { if (this.geoZone44Builder_ == null) { if (value == null) throw new NullPointerException();  this.geoZone44_ = value; onChanged(); } else { this.geoZone44Builder_.setMessage((AbstractMessage)value); }  return this; } public Builder setGeoZone44(DolphinConfig.GeoZone.Builder builderForValue) { if (this.geoZone44Builder_ == null) { this.geoZone44_ = builderForValue.build(); onChanged(); } else { this.geoZone44Builder_.setMessage((AbstractMessage)builderForValue.build()); }  return this; } public Builder mergeGeoZone44(DolphinConfig.GeoZone value) { if (this.geoZone44Builder_ == null) { if (this.geoZone44_ != null) { this.geoZone44_ = DolphinConfig.GeoZone.newBuilder(this.geoZone44_).mergeFrom(value).buildPartial(); } else { this.geoZone44_ = value; }  onChanged(); } else { this.geoZone44Builder_.mergeFrom((AbstractMessage)value); }  return this; } public Builder clearGeoZone44() { if (this.geoZone44Builder_ == null) { this.geoZone44_ = null; onChanged(); } else { this.geoZone44_ = null; this.geoZone44Builder_ = null; }  return this; } public DolphinConfig.GeoZone.Builder getGeoZone44Builder() { onChanged(); return (DolphinConfig.GeoZone.Builder)getGeoZone44FieldBuilder().getBuilder(); } public DolphinConfig.GeoZoneOrBuilder getGeoZone44OrBuilder() { if (this.geoZone44Builder_ != null) return (DolphinConfig.GeoZoneOrBuilder)this.geoZone44Builder_.getMessageOrBuilder();  return (this.geoZone44_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone44_; } private SingleFieldBuilderV3<DolphinConfig.GeoZone, DolphinConfig.GeoZone.Builder, DolphinConfig.GeoZoneOrBuilder> getGeoZone44FieldBuilder() { if (this.geoZone44Builder_ == null) { this.geoZone44Builder_ = new SingleFieldBuilderV3((AbstractMessage)getGeoZone44(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean()); this.geoZone44_ = null; }  return this.geoZone44Builder_; } public boolean hasGeoZone45() { return (this.geoZone45Builder_ != null || this.geoZone45_ != null); } public DolphinConfig.GeoZone getGeoZone45() { if (this.geoZone45Builder_ == null) return (this.geoZone45_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone45_;  return (DolphinConfig.GeoZone)this.geoZone45Builder_.getMessage(); } public Builder setGeoZone45(DolphinConfig.GeoZone value) { if (this.geoZone45Builder_ == null) { if (value == null) throw new NullPointerException();  this.geoZone45_ = value; onChanged(); } else { this.geoZone45Builder_.setMessage((AbstractMessage)value); }  return this; } public Builder setGeoZone45(DolphinConfig.GeoZone.Builder builderForValue) { if (this.geoZone45Builder_ == null) { this.geoZone45_ = builderForValue.build(); onChanged(); } else { this.geoZone45Builder_.setMessage((AbstractMessage)builderForValue.build()); }  return this; } public Builder mergeGeoZone45(DolphinConfig.GeoZone value) { if (this.geoZone45Builder_ == null) { if (this.geoZone45_ != null) { this.geoZone45_ = DolphinConfig.GeoZone.newBuilder(this.geoZone45_).mergeFrom(value).buildPartial(); } else { this.geoZone45_ = value; }  onChanged(); } else { this.geoZone45Builder_.mergeFrom((AbstractMessage)value); }  return this; } public Builder clearGeoZone45() { if (this.geoZone45Builder_ == null) { this.geoZone45_ = null; onChanged(); } else { this.geoZone45_ = null; this.geoZone45Builder_ = null; }  return this; } public DolphinConfig.GeoZone.Builder getGeoZone45Builder() { onChanged(); return (DolphinConfig.GeoZone.Builder)getGeoZone45FieldBuilder().getBuilder(); } public DolphinConfig.GeoZoneOrBuilder getGeoZone45OrBuilder() { if (this.geoZone45Builder_ != null) return (DolphinConfig.GeoZoneOrBuilder)this.geoZone45Builder_.getMessageOrBuilder();  return (this.geoZone45_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone45_; } private SingleFieldBuilderV3<DolphinConfig.GeoZone, DolphinConfig.GeoZone.Builder, DolphinConfig.GeoZoneOrBuilder> getGeoZone45FieldBuilder() { if (this.geoZone45Builder_ == null) { this.geoZone45Builder_ = new SingleFieldBuilderV3((AbstractMessage)getGeoZone45(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean()); this.geoZone45_ = null; }  return this.geoZone45Builder_; } public boolean hasGeoZone46() { return (this.geoZone46Builder_ != null || this.geoZone46_ != null); } public DolphinConfig.GeoZone getGeoZone46() { if (this.geoZone46Builder_ == null) return (this.geoZone46_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone46_;  return (DolphinConfig.GeoZone)this.geoZone46Builder_.getMessage(); } public Builder setGeoZone46(DolphinConfig.GeoZone value) { if (this.geoZone46Builder_ == null) { if (value == null) throw new NullPointerException();  this.geoZone46_ = value; onChanged(); } else { this.geoZone46Builder_.setMessage((AbstractMessage)value); }  return this; } public Builder setGeoZone46(DolphinConfig.GeoZone.Builder builderForValue) { if (this.geoZone46Builder_ == null) { this.geoZone46_ = builderForValue.build(); onChanged(); } else { this.geoZone46Builder_.setMessage((AbstractMessage)builderForValue.build()); }  return this; } public Builder mergeGeoZone46(DolphinConfig.GeoZone value) { if (this.geoZone46Builder_ == null) { if (this.geoZone46_ != null) { this.geoZone46_ = DolphinConfig.GeoZone.newBuilder(this.geoZone46_).mergeFrom(value).buildPartial(); } else { this.geoZone46_ = value; }  onChanged(); } else { this.geoZone46Builder_.mergeFrom((AbstractMessage)value); }  return this; } public Builder clearGeoZone46() { if (this.geoZone46Builder_ == null) { this.geoZone46_ = null; onChanged(); } else { this.geoZone46_ = null; this.geoZone46Builder_ = null; }  return this; } public DolphinConfig.GeoZone.Builder getGeoZone46Builder() { onChanged(); return (DolphinConfig.GeoZone.Builder)getGeoZone46FieldBuilder().getBuilder(); } public DolphinConfig.GeoZoneOrBuilder getGeoZone46OrBuilder() { if (this.geoZone46Builder_ != null) return (DolphinConfig.GeoZoneOrBuilder)this.geoZone46Builder_.getMessageOrBuilder();  return (this.geoZone46_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone46_; } private SingleFieldBuilderV3<DolphinConfig.GeoZone, DolphinConfig.GeoZone.Builder, DolphinConfig.GeoZoneOrBuilder> getGeoZone46FieldBuilder() { if (this.geoZone46Builder_ == null) { this.geoZone46Builder_ = new SingleFieldBuilderV3((AbstractMessage)getGeoZone46(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean()); this.geoZone46_ = null; }  return this.geoZone46Builder_; } public boolean hasGeoZone47() { return (this.geoZone47Builder_ != null || this.geoZone47_ != null); } public DolphinConfig.GeoZone getGeoZone47() { if (this.geoZone47Builder_ == null) return (this.geoZone47_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone47_;  return (DolphinConfig.GeoZone)this.geoZone47Builder_.getMessage(); } public Builder setGeoZone47(DolphinConfig.GeoZone value) { if (this.geoZone47Builder_ == null) { if (value == null) throw new NullPointerException();  this.geoZone47_ = value; onChanged(); } else { this.geoZone47Builder_.setMessage((AbstractMessage)value); }  return this; } public Builder setGeoZone47(DolphinConfig.GeoZone.Builder builderForValue) { if (this.geoZone47Builder_ == null) { this.geoZone47_ = builderForValue.build(); onChanged(); } else { this.geoZone47Builder_.setMessage((AbstractMessage)builderForValue.build()); }  return this; } public Builder mergeGeoZone47(DolphinConfig.GeoZone value) { if (this.geoZone47Builder_ == null) { if (this.geoZone47_ != null) { this.geoZone47_ = DolphinConfig.GeoZone.newBuilder(this.geoZone47_).mergeFrom(value).buildPartial(); } else { this.geoZone47_ = value; }  onChanged(); } else { this.geoZone47Builder_.mergeFrom((AbstractMessage)value); }  return this; } public Builder clearGeoZone47() { if (this.geoZone47Builder_ == null) { this.geoZone47_ = null; onChanged(); } else { this.geoZone47_ = null; this.geoZone47Builder_ = null; }  return this; } public DolphinConfig.GeoZone.Builder getGeoZone47Builder() { onChanged(); return (DolphinConfig.GeoZone.Builder)getGeoZone47FieldBuilder().getBuilder(); } public DolphinConfig.GeoZoneOrBuilder getGeoZone47OrBuilder() { if (this.geoZone47Builder_ != null) return (DolphinConfig.GeoZoneOrBuilder)this.geoZone47Builder_.getMessageOrBuilder();  return (this.geoZone47_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone47_; } private SingleFieldBuilderV3<DolphinConfig.GeoZone, DolphinConfig.GeoZone.Builder, DolphinConfig.GeoZoneOrBuilder> getGeoZone47FieldBuilder() { if (this.geoZone47Builder_ == null) { this.geoZone47Builder_ = new SingleFieldBuilderV3((AbstractMessage)getGeoZone47(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean()); this.geoZone47_ = null; }  return this.geoZone47Builder_; } public boolean hasGeoZone48() { return (this.geoZone48Builder_ != null || this.geoZone48_ != null); } public DolphinConfig.GeoZone getGeoZone48() { if (this.geoZone48Builder_ == null) return (this.geoZone48_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone48_;  return (DolphinConfig.GeoZone)this.geoZone48Builder_.getMessage(); } public Builder setGeoZone48(DolphinConfig.GeoZone value) { if (this.geoZone48Builder_ == null) { if (value == null) throw new NullPointerException();  this.geoZone48_ = value; onChanged(); } else { this.geoZone48Builder_.setMessage((AbstractMessage)value); }  return this; } public Builder setGeoZone48(DolphinConfig.GeoZone.Builder builderForValue) { if (this.geoZone48Builder_ == null) { this.geoZone48_ = builderForValue.build(); onChanged(); } else { this.geoZone48Builder_.setMessage((AbstractMessage)builderForValue.build()); }  return this; } public Builder mergeGeoZone48(DolphinConfig.GeoZone value) { if (this.geoZone48Builder_ == null) { if (this.geoZone48_ != null) { this.geoZone48_ = DolphinConfig.GeoZone.newBuilder(this.geoZone48_).mergeFrom(value).buildPartial(); } else { this.geoZone48_ = value; }  onChanged(); } else { this.geoZone48Builder_.mergeFrom((AbstractMessage)value); }  return this; } public Builder clearGeoZone48() { if (this.geoZone48Builder_ == null) { this.geoZone48_ = null; onChanged(); } else { this.geoZone48_ = null; this.geoZone48Builder_ = null; }  return this; } public DolphinConfig.GeoZone.Builder getGeoZone48Builder() { onChanged(); return (DolphinConfig.GeoZone.Builder)getGeoZone48FieldBuilder().getBuilder(); } public DolphinConfig.GeoZoneOrBuilder getGeoZone48OrBuilder() { if (this.geoZone48Builder_ != null) return (DolphinConfig.GeoZoneOrBuilder)this.geoZone48Builder_.getMessageOrBuilder();  return (this.geoZone48_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone48_; } private SingleFieldBuilderV3<DolphinConfig.GeoZone, DolphinConfig.GeoZone.Builder, DolphinConfig.GeoZoneOrBuilder> getGeoZone48FieldBuilder() { if (this.geoZone48Builder_ == null) { this.geoZone48Builder_ = new SingleFieldBuilderV3((AbstractMessage)getGeoZone48(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean()); this.geoZone48_ = null; }  return this.geoZone48Builder_; } public boolean hasGeoZone49() { return (this.geoZone49Builder_ != null || this.geoZone49_ != null); } public DolphinConfig.GeoZone getGeoZone49() { if (this.geoZone49Builder_ == null) return (this.geoZone49_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone49_;  return (DolphinConfig.GeoZone)this.geoZone49Builder_.getMessage(); } public Builder setGeoZone49(DolphinConfig.GeoZone value) { if (this.geoZone49Builder_ == null) { if (value == null) throw new NullPointerException();  this.geoZone49_ = value; onChanged(); } else { this.geoZone49Builder_.setMessage((AbstractMessage)value); }  return this; } public Builder setGeoZone49(DolphinConfig.GeoZone.Builder builderForValue) { if (this.geoZone49Builder_ == null) { this.geoZone49_ = builderForValue.build(); onChanged(); } else { this.geoZone49Builder_.setMessage((AbstractMessage)builderForValue.build()); }  return this; } public Builder mergeGeoZone49(DolphinConfig.GeoZone value) { if (this.geoZone49Builder_ == null) { if (this.geoZone49_ != null) { this.geoZone49_ = DolphinConfig.GeoZone.newBuilder(this.geoZone49_).mergeFrom(value).buildPartial(); } else { this.geoZone49_ = value; }  onChanged(); } else { this.geoZone49Builder_.mergeFrom((AbstractMessage)value); }  return this; } public Builder clearGeoZone49() { if (this.geoZone49Builder_ == null) { this.geoZone49_ = null; onChanged(); } else { this.geoZone49_ = null; this.geoZone49Builder_ = null; }  return this; } public DolphinConfig.GeoZone.Builder getGeoZone49Builder() { onChanged(); return (DolphinConfig.GeoZone.Builder)getGeoZone49FieldBuilder().getBuilder(); } public DolphinConfig.GeoZoneOrBuilder getGeoZone49OrBuilder() { if (this.geoZone49Builder_ != null) return (DolphinConfig.GeoZoneOrBuilder)this.geoZone49Builder_.getMessageOrBuilder();  return (this.geoZone49_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone49_; } private SingleFieldBuilderV3<DolphinConfig.GeoZone, DolphinConfig.GeoZone.Builder, DolphinConfig.GeoZoneOrBuilder> getGeoZone49FieldBuilder() { if (this.geoZone49Builder_ == null) { this.geoZone49Builder_ = new SingleFieldBuilderV3((AbstractMessage)getGeoZone49(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean()); this.geoZone49_ = null; }  return this.geoZone49Builder_; } public boolean hasGeoZone50() { return (this.geoZone50Builder_ != null || this.geoZone50_ != null); } public DolphinConfig.GeoZone getGeoZone50() { if (this.geoZone50Builder_ == null) return (this.geoZone50_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone50_;  return (DolphinConfig.GeoZone)this.geoZone50Builder_.getMessage(); } public Builder setGeoZone50(DolphinConfig.GeoZone value) { if (this.geoZone50Builder_ == null) { if (value == null) throw new NullPointerException();  this.geoZone50_ = value; onChanged(); } else { this.geoZone50Builder_.setMessage((AbstractMessage)value); }  return this; } public Builder setGeoZone50(DolphinConfig.GeoZone.Builder builderForValue) { if (this.geoZone50Builder_ == null) { this.geoZone50_ = builderForValue.build(); onChanged(); } else { this.geoZone50Builder_.setMessage((AbstractMessage)builderForValue.build()); }  return this; } public Builder mergeGeoZone50(DolphinConfig.GeoZone value) { if (this.geoZone50Builder_ == null) { if (this.geoZone50_ != null) { this.geoZone50_ = DolphinConfig.GeoZone.newBuilder(this.geoZone50_).mergeFrom(value).buildPartial(); } else { this.geoZone50_ = value; }  onChanged(); } else { this.geoZone50Builder_.mergeFrom((AbstractMessage)value); }  return this; } public Builder clearGeoZone50() { if (this.geoZone50Builder_ == null) { this.geoZone50_ = null; onChanged(); } else { this.geoZone50_ = null; this.geoZone50Builder_ = null; }  return this; } public DolphinConfig.GeoZone.Builder getGeoZone50Builder() { onChanged(); return (DolphinConfig.GeoZone.Builder)getGeoZone50FieldBuilder().getBuilder(); } public DolphinConfig.GeoZoneOrBuilder getGeoZone50OrBuilder() { if (this.geoZone50Builder_ != null) return (DolphinConfig.GeoZoneOrBuilder)this.geoZone50Builder_.getMessageOrBuilder();  return (this.geoZone50_ == null) ? DolphinConfig.GeoZone.getDefaultInstance() : this.geoZone50_; } private SingleFieldBuilderV3<DolphinConfig.GeoZone, DolphinConfig.GeoZone.Builder, DolphinConfig.GeoZoneOrBuilder> getGeoZone50FieldBuilder() { if (this.geoZone50Builder_ == null) { this.geoZone50Builder_ = new SingleFieldBuilderV3((AbstractMessage)getGeoZone50(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean()); this.geoZone50_ = null; }  return this.geoZone50Builder_; } public int getTripStartSpeed() { return this.tripStartSpeed_; } public Builder setTripStartSpeed(int value) { this.tripStartSpeed_ = value; onChanged(); return this; } public Builder clearTripStartSpeed() { this.tripStartSpeed_ = 0; onChanged(); return this; } public boolean getTripUseIgnition() { return this.tripUseIgnition_; } public Builder setTripUseIgnition(boolean value) { this.tripUseIgnition_ = value; onChanged(); return this; } public Builder clearTripUseIgnition() { this.tripUseIgnition_ = false; onChanged(); return this; } public int getTripParkDetectionTimeout() { return this.tripParkDetectionTimeout_; } public Builder setTripParkDetectionTimeout(int value) { this.tripParkDetectionTimeout_ = value; onChanged(); return this; } public Builder clearTripParkDetectionTimeout() { this.tripParkDetectionTimeout_ = 0; onChanged(); return this; } public boolean getOverspeedingEnable() { return this.overspeedingEnable_; } public Builder setOverspeedingEnable(boolean value) { this.overspeedingEnable_ = value; onChanged(); return this; } public Builder clearOverspeedingEnable() { this.overspeedingEnable_ = false; onChanged(); return this; } public int getOverspeedingLimit() { return this.overspeedingLimit_; } public Builder setOverspeedingLimit(int value) { this.overspeedingLimit_ = value; onChanged(); return this; } public Builder clearOverspeedingLimit() { this.overspeedingLimit_ = 0; onChanged(); return this; } public int getOverspeedingActivationSpeed() { return this.overspeedingActivationSpeed_; } public Builder setOverspeedingActivationSpeed(int value) { this.overspeedingActivationSpeed_ = value; onChanged(); return this; } public Builder clearOverspeedingActivationSpeed() { this.overspeedingActivationSpeed_ = 0; onChanged(); return this; } public int getOverspeedingDeactivationModeValue() { return this.overspeedingDeactivationMode_; } public Builder setOverspeedingDeactivationModeValue(int value) { this.overspeedingDeactivationMode_ = value; onChanged(); return this; } public DolphinConfig.OverSpeedingDeactivationMode getOverspeedingDeactivationMode() { DolphinConfig.OverSpeedingDeactivationMode result = DolphinConfig.OverSpeedingDeactivationMode.valueOf(this.overspeedingDeactivationMode_); return (result == null) ? DolphinConfig.OverSpeedingDeactivationMode.UNRECOGNIZED : result; } public Builder setOverspeedingDeactivationMode(DolphinConfig.OverSpeedingDeactivationMode value) { if (value == null) throw new NullPointerException();  this.overspeedingDeactivationMode_ = value.getNumber(); onChanged(); return this; } public Builder clearOverspeedingDeactivationMode() { this.overspeedingDeactivationMode_ = 0; onChanged(); return this; } public int getOverspeedingDeactivationValue() { return this.overspeedingDeactivationValue_; } public Builder setOverspeedingDeactivationValue(int value) { this.overspeedingDeactivationValue_ = value; onChanged(); return this; } public Builder clearOverspeedingDeactivationValue() { this.overspeedingDeactivationValue_ = 0; onChanged(); return this; } public boolean getUSSDEnabled() { return this.uSSDEnabled_; } public Builder setUSSDEnabled(boolean value) { this.uSSDEnabled_ = value; onChanged(); return this; } public Builder clearUSSDEnabled() { this.uSSDEnabled_ = false; onChanged(); return this; } public int getUSSDID() { return this.uSSDID_; } public Builder setUSSDID(int value) { this.uSSDID_ = value; onChanged(); return this; } public Builder clearUSSDID() { this.uSSDID_ = 0; onChanged(); return this; } public int getUSSDInterval() { return this.uSSDInterval_; } public Builder setUSSDInterval(int value) { this.uSSDInterval_ = value; onChanged(); return this; } public Builder clearUSSDInterval() { this.uSSDInterval_ = 0; onChanged(); return this; } public String getUSSDCode() { Object ref = this.uSSDCode_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.uSSDCode_ = s; return s; }  return (String)ref; } public ByteString getUSSDCodeBytes() { Object ref = this.uSSDCode_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.uSSDCode_ = b; return b; }  return (ByteString)ref; } public Builder setUSSDCode(String value) { if (value == null) throw new NullPointerException();  this.uSSDCode_ = value; onChanged(); return this; } public Builder clearUSSDCode() { this.uSSDCode_ = DolphinConfig.Config.getDefaultInstance().getUSSDCode(); onChanged(); return this; } public Builder setUSSDCodeBytes(ByteString value) { if (value == null) throw new NullPointerException();  DolphinConfig.Config.checkByteStringIsUtf8(value); this.uSSDCode_ = value; onChanged(); return this; } public int getSpeedSensorKmPulseCount() { return this.speedSensorKmPulseCount_; } public Builder setSpeedSensorKmPulseCount(int value) { this.speedSensorKmPulseCount_ = value; onChanged(); return this; } public Builder clearSpeedSensorKmPulseCount() { this.speedSensorKmPulseCount_ = 0; onChanged(); return this; } public boolean getCrashDetectionEnabled() { return this.crashDetectionEnabled_; } public Builder setCrashDetectionEnabled(boolean value) { this.crashDetectionEnabled_ = value; onChanged(); return this; } public Builder clearCrashDetectionEnabled() { this.crashDetectionEnabled_ = false; onChanged(); return this; } public int getCrashDetectionLevel1Threshold() { return this.crashDetectionLevel1Threshold_; } public Builder setCrashDetectionLevel1Threshold(int value) { this.crashDetectionLevel1Threshold_ = value; onChanged(); return this; } public Builder clearCrashDetectionLevel1Threshold() { this.crashDetectionLevel1Threshold_ = 0; onChanged(); return this; } public int getCrashDetectionLevel2Threshold() { return this.crashDetectionLevel2Threshold_; } public Builder setCrashDetectionLevel2Threshold(int value) { this.crashDetectionLevel2Threshold_ = value; onChanged(); return this; } public Builder clearCrashDetectionLevel2Threshold() { this.crashDetectionLevel2Threshold_ = 0; onChanged(); return this; } public int getCrashDetectionLevel3Threshold() { return this.crashDetectionLevel3Threshold_; } public Builder setCrashDetectionLevel3Threshold(int value) { this.crashDetectionLevel3Threshold_ = value; onChanged(); return this; } public Builder clearCrashDetectionLevel3Threshold() { this.crashDetectionLevel3Threshold_ = 0; onChanged(); return this; } public int getCrashDetectionTraceValue() { return this.crashDetectionTrace_; } public Builder setCrashDetectionTraceValue(int value) { this.crashDetectionTrace_ = value; onChanged(); return this; } public DolphinConfig.CrashTraceType getCrashDetectionTrace() { DolphinConfig.CrashTraceType result = DolphinConfig.CrashTraceType.valueOf(this.crashDetectionTrace_); return (result == null) ? DolphinConfig.CrashTraceType.UNRECOGNIZED : result; } public Builder setCrashDetectionTrace(DolphinConfig.CrashTraceType value) { if (value == null) throw new NullPointerException();  this.crashDetectionTrace_ = value.getNumber(); onChanged(); return this; } public Builder clearCrashDetectionTrace() { this.crashDetectionTrace_ = 0; onChanged(); return this; } public int getCrashDetectionDuration() { return this.crashDetectionDuration_; } public Builder setCrashDetectionDuration(int value) { this.crashDetectionDuration_ = value; onChanged(); return this; } public Builder clearCrashDetectionDuration() { this.crashDetectionDuration_ = 0; onChanged(); return this; } public int getCrashDetectionSendSMSTo() { return this.crashDetectionSendSMSTo_; } public Builder setCrashDetectionSendSMSTo(int value) { this.crashDetectionSendSMSTo_ = value; onChanged(); return this; } public Builder clearCrashDetectionSendSMSTo() { this.crashDetectionSendSMSTo_ = 0; onChanged(); return this; } public String getCrashDetectionSMSText() { Object ref = this.crashDetectionSMSText_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.crashDetectionSMSText_ = s; return s; }  return (String)ref; } public ByteString getCrashDetectionSMSTextBytes() { Object ref = this.crashDetectionSMSText_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.crashDetectionSMSText_ = b; return b; }  return (ByteString)ref; } public Builder setCrashDetectionSMSText(String value) { if (value == null) throw new NullPointerException();  this.crashDetectionSMSText_ = value; onChanged(); return this; } public Builder clearCrashDetectionSMSText() { this.crashDetectionSMSText_ = DolphinConfig.Config.getDefaultInstance().getCrashDetectionSMSText(); onChanged(); return this; } public Builder setCrashDetectionSMSTextBytes(ByteString value) { if (value == null) throw new NullPointerException();  DolphinConfig.Config.checkByteStringIsUtf8(value); this.crashDetectionSMSText_ = value; onChanged(); return this; } public int getCrashDetectionCallTo() { return this.crashDetectionCallTo_; } public Builder setCrashDetectionCallTo(int value) { this.crashDetectionCallTo_ = value; onChanged(); return this; } public Builder clearCrashDetectionCallTo() { this.crashDetectionCallTo_ = 0; onChanged(); return this; } public boolean getRolloverDetectionEnabled() { return this.rolloverDetectionEnabled_; } public Builder setRolloverDetectionEnabled(boolean value) { this.rolloverDetectionEnabled_ = value; onChanged(); return this; } public Builder clearRolloverDetectionEnabled() { this.rolloverDetectionEnabled_ = false; onChanged(); return this; } public int getDriverRegistrationModeValue() { return this.driverRegistrationMode_; } public Builder setDriverRegistrationModeValue(int value) { this.driverRegistrationMode_ = value; onChanged(); return this; } public DolphinConfig.DriverRegistration_Mode getDriverRegistrationMode() { DolphinConfig.DriverRegistration_Mode result = DolphinConfig.DriverRegistration_Mode.valueOf(this.driverRegistrationMode_); return (result == null) ? DolphinConfig.DriverRegistration_Mode.UNRECOGNIZED : result; } public Builder setDriverRegistrationMode(DolphinConfig.DriverRegistration_Mode value) { if (value == null) throw new NullPointerException();  this.driverRegistrationMode_ = value.getNumber(); onChanged(); return this; } public Builder clearDriverRegistrationMode() { this.driverRegistrationMode_ = 0; onChanged(); return this; } public int getDriverRegistrationAuthenticationValue() { return this.driverRegistrationAuthentication_; } public Builder setDriverRegistrationAuthenticationValue(int value) { this.driverRegistrationAuthentication_ = value; onChanged(); return this; } public DolphinConfig.DriverRegistration_Authentication getDriverRegistrationAuthentication() { DolphinConfig.DriverRegistration_Authentication result = DolphinConfig.DriverRegistration_Authentication.valueOf(this.driverRegistrationAuthentication_); return (result == null) ? DolphinConfig.DriverRegistration_Authentication.UNRECOGNIZED : result; } public Builder setDriverRegistrationAuthentication(DolphinConfig.DriverRegistration_Authentication value) { if (value == null) throw new NullPointerException();  this.driverRegistrationAuthentication_ = value.getNumber(); onChanged(); return this; } public Builder clearDriverRegistrationAuthentication() { this.driverRegistrationAuthentication_ = 0; onChanged(); return this; } public int getDriverRegistrationDeregistrationTimeout() { return this.driverRegistrationDeregistrationTimeout_; } public Builder setDriverRegistrationDeregistrationTimeout(int value) { this.driverRegistrationDeregistrationTimeout_ = value; onChanged(); return this; } public Builder clearDriverRegistrationDeregistrationTimeout() { this.driverRegistrationDeregistrationTimeout_ = 0; onChanged(); return this; } public int getDriverRegistrationBuzzerDigitalOutputValue() { return this.driverRegistrationBuzzerDigitalOutput_; } public Builder setDriverRegistrationBuzzerDigitalOutputValue(int value) { this.driverRegistrationBuzzerDigitalOutput_ = value; onChanged(); return this; } public DolphinConfig.DigitalOutputName getDriverRegistrationBuzzerDigitalOutput() { DolphinConfig.DigitalOutputName result = DolphinConfig.DigitalOutputName.valueOf(this.driverRegistrationBuzzerDigitalOutput_); return (result == null) ? DolphinConfig.DigitalOutputName.UNRECOGNIZED : result; } public Builder setDriverRegistrationBuzzerDigitalOutput(DolphinConfig.DigitalOutputName value) { if (value == null) throw new NullPointerException();  this.driverRegistrationBuzzerDigitalOutput_ = value.getNumber(); onChanged(); return this; } public Builder clearDriverRegistrationBuzzerDigitalOutput() { this.driverRegistrationBuzzerDigitalOutput_ = 0; onChanged(); return this; } public int getDriverRegistrationImmobilizerDigitalOutputValue() { return this.driverRegistrationImmobilizerDigitalOutput_; } public Builder setDriverRegistrationImmobilizerDigitalOutputValue(int value) { this.driverRegistrationImmobilizerDigitalOutput_ = value; onChanged(); return this; } public DolphinConfig.DigitalOutputName getDriverRegistrationImmobilizerDigitalOutput() { DolphinConfig.DigitalOutputName result = DolphinConfig.DigitalOutputName.valueOf(this.driverRegistrationImmobilizerDigitalOutput_); return (result == null) ? DolphinConfig.DigitalOutputName.UNRECOGNIZED : result; } public Builder setDriverRegistrationImmobilizerDigitalOutput(DolphinConfig.DigitalOutputName value) { if (value == null) throw new NullPointerException();  this.driverRegistrationImmobilizerDigitalOutput_ = value.getNumber(); onChanged(); return this; } public Builder clearDriverRegistrationImmobilizerDigitalOutput() { this.driverRegistrationImmobilizerDigitalOutput_ = 0; onChanged(); return this; } public boolean getDriverRegistrationImmobilizerActiveLow() { return this.driverRegistrationImmobilizerActiveLow_; } public Builder setDriverRegistrationImmobilizerActiveLow(boolean value) { this.driverRegistrationImmobilizerActiveLow_ = value; onChanged(); return this; } public Builder clearDriverRegistrationImmobilizerActiveLow() { this.driverRegistrationImmobilizerActiveLow_ = false; onChanged(); return this; } public long getDriverRegistrationAuthorizedID1() { return this.driverRegistrationAuthorizedID1_; } public Builder setDriverRegistrationAuthorizedID1(long value) { this.driverRegistrationAuthorizedID1_ = value; onChanged(); return this; } public Builder clearDriverRegistrationAuthorizedID1() { this.driverRegistrationAuthorizedID1_ = 0L; onChanged(); return this; } public long getDriverRegistrationAuthorizedID2() { return this.driverRegistrationAuthorizedID2_; } public Builder setDriverRegistrationAuthorizedID2(long value) { this.driverRegistrationAuthorizedID2_ = value; onChanged(); return this; } public Builder clearDriverRegistrationAuthorizedID2() { this.driverRegistrationAuthorizedID2_ = 0L; onChanged(); return this; } public long getDriverRegistrationAuthorizedID3() { return this.driverRegistrationAuthorizedID3_; } public Builder setDriverRegistrationAuthorizedID3(long value) { this.driverRegistrationAuthorizedID3_ = value; onChanged(); return this; } public Builder clearDriverRegistrationAuthorizedID3() { this.driverRegistrationAuthorizedID3_ = 0L; onChanged(); return this; } public long getDriverRegistrationAuthorizedID4() { return this.driverRegistrationAuthorizedID4_; } public Builder setDriverRegistrationAuthorizedID4(long value) { this.driverRegistrationAuthorizedID4_ = value; onChanged(); return this; } public Builder clearDriverRegistrationAuthorizedID4() { this.driverRegistrationAuthorizedID4_ = 0L; onChanged(); return this; } public long getDriverRegistrationAuthorizedID5() { return this.driverRegistrationAuthorizedID5_; } public Builder setDriverRegistrationAuthorizedID5(long value) { this.driverRegistrationAuthorizedID5_ = value; onChanged(); return this; } public Builder clearDriverRegistrationAuthorizedID5() { this.driverRegistrationAuthorizedID5_ = 0L; onChanged(); return this; } public long getDriverRegistrationAuthorizedID6() { return this.driverRegistrationAuthorizedID6_; } public Builder setDriverRegistrationAuthorizedID6(long value) { this.driverRegistrationAuthorizedID6_ = value; onChanged(); return this; } public Builder clearDriverRegistrationAuthorizedID6() { this.driverRegistrationAuthorizedID6_ = 0L; onChanged(); return this; } public long getDriverRegistrationAuthorizedID7() { return this.driverRegistrationAuthorizedID7_; } public Builder setDriverRegistrationAuthorizedID7(long value) { this.driverRegistrationAuthorizedID7_ = value; onChanged(); return this; } public Builder clearDriverRegistrationAuthorizedID7() { this.driverRegistrationAuthorizedID7_ = 0L; onChanged(); return this; } public long getDriverRegistrationAuthorizedID8() { return this.driverRegistrationAuthorizedID8_; } public Builder setDriverRegistrationAuthorizedID8(long value) { this.driverRegistrationAuthorizedID8_ = value; onChanged(); return this; } public Builder clearDriverRegistrationAuthorizedID8() { this.driverRegistrationAuthorizedID8_ = 0L; onChanged(); return this; } public long getDriverRegistrationAuthorizedID9() { return this.driverRegistrationAuthorizedID9_; } public Builder setDriverRegistrationAuthorizedID9(long value) { this.driverRegistrationAuthorizedID9_ = value; onChanged(); return this; } public Builder clearDriverRegistrationAuthorizedID9() { this.driverRegistrationAuthorizedID9_ = 0L; onChanged(); return this; } public long getDriverRegistrationAuthorizedID10() { return this.driverRegistrationAuthorizedID10_; } public Builder setDriverRegistrationAuthorizedID10(long value) { this.driverRegistrationAuthorizedID10_ = value; onChanged(); return this; } public Builder clearDriverRegistrationAuthorizedID10() { this.driverRegistrationAuthorizedID10_ = 0L; onChanged(); return this; } public boolean getECODriveActive() { return this.eCODriveActive_; } public Builder setECODriveActive(boolean value) { this.eCODriveActive_ = value; onChanged(); return this; } public Builder clearECODriveActive() { this.eCODriveActive_ = false; onChanged(); return this; } public int getECOOverSpeedingLimit() { return this.eCOOverSpeedingLimit_; } public Builder setECOOverSpeedingLimit(int value) { this.eCOOverSpeedingLimit_ = value; onChanged(); return this; } public Builder clearECOOverSpeedingLimit() { this.eCOOverSpeedingLimit_ = 0; onChanged(); return this; } public int getECORPMGreenBandLowLimit() { return this.eCORPMGreenBandLowLimit_; } public Builder setECORPMGreenBandLowLimit(int value) { this.eCORPMGreenBandLowLimit_ = value; onChanged(); return this; } public Builder clearECORPMGreenBandLowLimit() { this.eCORPMGreenBandLowLimit_ = 0; onChanged(); return this; } public int getECORPMGreenBandHighLimit() { return this.eCORPMGreenBandHighLimit_; } public Builder setECORPMGreenBandHighLimit(int value) { this.eCORPMGreenBandHighLimit_ = value; onChanged(); return this; } public Builder clearECORPMGreenBandHighLimit() { this.eCORPMGreenBandHighLimit_ = 0; onChanged(); return this; } public int getECOHarshBreakingLimit() { return this.eCOHarshBreakingLimit_; } public Builder setECOHarshBreakingLimit(int value) { this.eCOHarshBreakingLimit_ = value; onChanged(); return this; } public Builder clearECOHarshBreakingLimit() { this.eCOHarshBreakingLimit_ = 0; onChanged(); return this; } public int getECOExtremeBreakingLimit() { return this.eCOExtremeBreakingLimit_; } public Builder setECOExtremeBreakingLimit(int value) { this.eCOExtremeBreakingLimit_ = value; onChanged(); return this; } public Builder clearECOExtremeBreakingLimit() { this.eCOExtremeBreakingLimit_ = 0; onChanged(); return this; } public int getECOHarshAccelerationLimit() { return this.eCOHarshAccelerationLimit_; } public Builder setECOHarshAccelerationLimit(int value) { this.eCOHarshAccelerationLimit_ = value; onChanged(); return this; } public Builder clearECOHarshAccelerationLimit() { this.eCOHarshAccelerationLimit_ = 0; onChanged(); return this; } public int getECOCorneringLimit() { return this.eCOCorneringLimit_; } public Builder setECOCorneringLimit(int value) { this.eCOCorneringLimit_ = value; onChanged(); return this; } public Builder clearECOCorneringLimit() { this.eCOCorneringLimit_ = 0; onChanged(); return this; } public int getECOIdlingDelay() { return this.eCOIdlingDelay_; } public Builder setECOIdlingDelay(int value) { this.eCOIdlingDelay_ = value; onChanged(); return this; } public Builder clearECOIdlingDelay() { this.eCOIdlingDelay_ = 0; onChanged(); return this; } public int getECOIdlingSpeed() { return this.eCOIdlingSpeed_; } public Builder setECOIdlingSpeed(int value) { this.eCOIdlingSpeed_ = value; onChanged(); return this; } public Builder clearECOIdlingSpeed() { this.eCOIdlingSpeed_ = 0; onChanged(); return this; } public int getECOCruiseControlSpeed() { return this.eCOCruiseControlSpeed_; } public Builder setECOCruiseControlSpeed(int value) { this.eCOCruiseControlSpeed_ = value; onChanged(); return this; } public Builder clearECOCruiseControlSpeed() { this.eCOCruiseControlSpeed_ = 0; onChanged(); return this; } public boolean getECOCalculateOnlyWhenEngineOn() { return this.eCOCalculateOnlyWhenEngineOn_; } public Builder setECOCalculateOnlyWhenEngineOn(boolean value) { this.eCOCalculateOnlyWhenEngineOn_ = value; onChanged(); return this; } public Builder clearECOCalculateOnlyWhenEngineOn() { this.eCOCalculateOnlyWhenEngineOn_ = false; onChanged(); return this; } public boolean getECOCustomEngineSource() { return this.eCOCustomEngineSource_; } public Builder setECOCustomEngineSource(boolean value) { this.eCOCustomEngineSource_ = value; onChanged(); return this; } public Builder clearECOCustomEngineSource() { this.eCOCustomEngineSource_ = false; onChanged(); return this; } public boolean getECOEngineOnDIN1() { return this.eCOEngineOnDIN1_; } public Builder setECOEngineOnDIN1(boolean value) { this.eCOEngineOnDIN1_ = value; onChanged(); return this; } public Builder clearECOEngineOnDIN1() { this.eCOEngineOnDIN1_ = false; onChanged(); return this; } public boolean getECOEngineOnDIN2() { return this.eCOEngineOnDIN2_; } public Builder setECOEngineOnDIN2(boolean value) { this.eCOEngineOnDIN2_ = value; onChanged(); return this; } public Builder clearECOEngineOnDIN2() { this.eCOEngineOnDIN2_ = false; onChanged(); return this; } public boolean getECOEngineOnMovementSensor() { return this.eCOEngineOnMovementSensor_; } public Builder setECOEngineOnMovementSensor(boolean value) { this.eCOEngineOnMovementSensor_ = value; onChanged(); return this; } public Builder clearECOEngineOnMovementSensor() { this.eCOEngineOnMovementSensor_ = false; onChanged(); return this; } public boolean getECOEngineOnPowerSupplyAvailable() { return this.eCOEngineOnPowerSupplyAvailable_; } public Builder setECOEngineOnPowerSupplyAvailable(boolean value) { this.eCOEngineOnPowerSupplyAvailable_ = value; onChanged(); return this; } public Builder clearECOEngineOnPowerSupplyAvailable() { this.eCOEngineOnPowerSupplyAvailable_ = false; onChanged(); return this; } public int getECOEngineOnCanRPMLow() { return this.eCOEngineOnCanRPMLow_; } public Builder setECOEngineOnCanRPMLow(int value) { this.eCOEngineOnCanRPMLow_ = value; onChanged(); return this; } public Builder clearECOEngineOnCanRPMLow() { this.eCOEngineOnCanRPMLow_ = 0; onChanged(); return this; } public int getECOEngineOnCanRPMHigh() { return this.eCOEngineOnCanRPMHigh_; } public Builder setECOEngineOnCanRPMHigh(int value) { this.eCOEngineOnCanRPMHigh_ = value; onChanged(); return this; } public Builder clearECOEngineOnCanRPMHigh() { this.eCOEngineOnCanRPMHigh_ = 0; onChanged(); return this; } public int getECOEngineOnOperatorValue() { return this.eCOEngineOnOperator_; } public Builder setECOEngineOnOperatorValue(int value) { this.eCOEngineOnOperator_ = value; onChanged(); return this; } public DolphinConfig.ConditionOperator getECOEngineOnOperator() { DolphinConfig.ConditionOperator result = DolphinConfig.ConditionOperator.valueOf(this.eCOEngineOnOperator_); return (result == null) ? DolphinConfig.ConditionOperator.UNRECOGNIZED : result; } public Builder setECOEngineOnOperator(DolphinConfig.ConditionOperator value) { if (value == null) throw new NullPointerException();  this.eCOEngineOnOperator_ = value.getNumber(); onChanged(); return this; } public Builder clearECOEngineOnOperator() { this.eCOEngineOnOperator_ = 0; onChanged(); return this; } public int getECOEngineOnExternalVoltage() { return this.eCOEngineOnExternalVoltage_; } public Builder setECOEngineOnExternalVoltage(int value) { this.eCOEngineOnExternalVoltage_ = value; onChanged(); return this; } public Builder clearECOEngineOnExternalVoltage() { this.eCOEngineOnExternalVoltage_ = 0; onChanged(); return this; } public int getECUInterfaceValue() { return this.eCUInterface_; } public Builder setECUInterfaceValue(int value) { this.eCUInterface_ = value; onChanged(); return this; } public DolphinConfig.ECUInterface getECUInterface() { DolphinConfig.ECUInterface result = DolphinConfig.ECUInterface.valueOf(this.eCUInterface_); return (result == null) ? DolphinConfig.ECUInterface.UNRECOGNIZED : result; } public Builder setECUInterface(DolphinConfig.ECUInterface value) { if (value == null) throw new NullPointerException();  this.eCUInterface_ = value.getNumber(); onChanged(); return this; } public Builder clearECUInterface() { this.eCUInterface_ = 0; onChanged(); return this; } public int getFuelConsumptionEnabledValue() { return this.fuelConsumptionEnabled_; } public Builder setFuelConsumptionEnabledValue(int value) { this.fuelConsumptionEnabled_ = value; onChanged(); return this; } public DolphinConfig.FuelConsumption getFuelConsumptionEnabled() { DolphinConfig.FuelConsumption result = DolphinConfig.FuelConsumption.valueOf(this.fuelConsumptionEnabled_); return (result == null) ? DolphinConfig.FuelConsumption.UNRECOGNIZED : result; } public Builder setFuelConsumptionEnabled(DolphinConfig.FuelConsumption value) { if (value == null) throw new NullPointerException();  this.fuelConsumptionEnabled_ = value.getNumber(); onChanged(); return this; } public Builder clearFuelConsumptionEnabled() { this.fuelConsumptionEnabled_ = 0; onChanged(); return this; } public int getFuelConsumptionEngineDisplacement() { return this.fuelConsumptionEngineDisplacement_; } public Builder setFuelConsumptionEngineDisplacement(int value) { this.fuelConsumptionEngineDisplacement_ = value; onChanged(); return this; } public Builder clearFuelConsumptionEngineDisplacement() { this.fuelConsumptionEngineDisplacement_ = 0; onChanged(); return this; } public int getFuelConsumptionCylinders() { return this.fuelConsumptionCylinders_; } public Builder setFuelConsumptionCylinders(int value) { this.fuelConsumptionCylinders_ = value; onChanged(); return this; } public Builder clearFuelConsumptionCylinders() { this.fuelConsumptionCylinders_ = 0; onChanged(); return this; } public int getFuelConsumptionInjectorPerformance() { return this.fuelConsumptionInjectorPerformance_; } public Builder setFuelConsumptionInjectorPerformance(int value) { this.fuelConsumptionInjectorPerformance_ = value; onChanged(); return this; } public Builder clearFuelConsumptionInjectorPerformance() { this.fuelConsumptionInjectorPerformance_ = 0; onChanged(); return this; } public int getFuelConsumptionVolumetricEfficiently() { return this.fuelConsumptionVolumetricEfficiently_; } public Builder setFuelConsumptionVolumetricEfficiently(int value) { this.fuelConsumptionVolumetricEfficiently_ = value; onChanged(); return this; } public Builder clearFuelConsumptionVolumetricEfficiently() { this.fuelConsumptionVolumetricEfficiently_ = 0; onChanged(); return this; } public int getFaultCodesReadTime() { return this.faultCodesReadTime_; } public Builder setFaultCodesReadTime(int value) { this.faultCodesReadTime_ = value; onChanged(); return this; } public Builder clearFaultCodesReadTime() { this.faultCodesReadTime_ = 0; onChanged(); return this; } public int getSIPAADLinkTimeout() { return this.sIPAADLinkTimeout_; } public Builder setSIPAADLinkTimeout(int value) { this.sIPAADLinkTimeout_ = value; onChanged(); return this; } public Builder clearSIPAADLinkTimeout() { this.sIPAADLinkTimeout_ = 0; onChanged(); return this; } public int getSIPAADResponseTimeout() { return this.sIPAADResponseTimeout_; } public Builder setSIPAADResponseTimeout(int value) { this.sIPAADResponseTimeout_ = value; onChanged(); return this; } public Builder clearSIPAADResponseTimeout() { this.sIPAADResponseTimeout_ = 0; onChanged(); return this; }
/*       */       public String getSIPAADServerAddress() { Object ref = this.sIPAADServerAddress_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); this.sIPAADServerAddress_ = s; return s; }  return (String)ref; }
/*       */       public ByteString getSIPAADServerAddressBytes() { Object ref = this.sIPAADServerAddress_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.sIPAADServerAddress_ = b; return b; }  return (ByteString)ref; }
/*       */       public Builder setSIPAADServerAddress(String value) { if (value == null) throw new NullPointerException();  this.sIPAADServerAddress_ = value; onChanged(); return this; }
/*       */       public Builder clearSIPAADServerAddress() { this.sIPAADServerAddress_ = DolphinConfig.Config.getDefaultInstance().getSIPAADServerAddress(); onChanged(); return this; }
/*       */       public Builder setSIPAADServerAddressBytes(ByteString value) { if (value == null) throw new NullPointerException();  DolphinConfig.Config.checkByteStringIsUtf8(value); this.sIPAADServerAddress_ = value; onChanged(); return this; }
/*       */       public int getSIPAADServerPort() { return this.sIPAADServerPort_; }
/*       */       public Builder setSIPAADServerPort(int value) { this.sIPAADServerPort_ = value; onChanged(); return this; }
/*       */       public Builder clearSIPAADServerPort() { this.sIPAADServerPort_ = 0; onChanged(); return this; }
/* 54398 */       public Builder setSIPAADServerProtocolValue(int value) { this.sIPAADServerProtocol_ = value;
/* 54399 */         onChanged();
/* 54400 */         return this; }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.ServerProtocol getSIPAADServerProtocol() {
/* 54409 */         DolphinConfig.ServerProtocol result = DolphinConfig.ServerProtocol.valueOf(this.sIPAADServerProtocol_);
/* 54410 */         return (result == null) ? DolphinConfig.ServerProtocol.UNRECOGNIZED : result;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setSIPAADServerProtocol(DolphinConfig.ServerProtocol value) {
/* 54418 */         if (value == null) {
/* 54419 */           throw new NullPointerException();
/*       */         }
/*       */         
/* 54422 */         this.sIPAADServerProtocol_ = value.getNumber();
/* 54423 */         onChanged();
/* 54424 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearSIPAADServerProtocol() {
/* 54432 */         this.sIPAADServerProtocol_ = 0;
/* 54433 */         onChanged();
/* 54434 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean getSIPAADSSLClientAuthentication() {
/* 54444 */         return this.sIPAADSSLClientAuthentication_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setSIPAADSSLClientAuthentication(boolean value) {
/* 54453 */         this.sIPAADSSLClientAuthentication_ = value;
/* 54454 */         onChanged();
/* 54455 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearSIPAADSSLClientAuthentication() {
/* 54463 */         this.sIPAADSSLClientAuthentication_ = false;
/* 54464 */         onChanged();
/* 54465 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasIOTime() {
/* 54480 */         return (this.iOTimeBuilder_ != null || this.iOTime_ != null);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO getIOTime() {
/* 54491 */         if (this.iOTimeBuilder_ == null) {
/* 54492 */           return (this.iOTime_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOTime_;
/*       */         }
/* 54494 */         return (DolphinConfig.IO)this.iOTimeBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOTime(DolphinConfig.IO value) {
/* 54505 */         if (this.iOTimeBuilder_ == null) {
/* 54506 */           if (value == null) {
/* 54507 */             throw new NullPointerException();
/*       */           }
/* 54509 */           this.iOTime_ = value;
/* 54510 */           onChanged();
/*       */         } else {
/* 54512 */           this.iOTimeBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         
/* 54515 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOTime(DolphinConfig.IO.Builder builderForValue) {
/* 54526 */         if (this.iOTimeBuilder_ == null) {
/* 54527 */           this.iOTime_ = builderForValue.build();
/* 54528 */           onChanged();
/*       */         } else {
/* 54530 */           this.iOTimeBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         
/* 54533 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeIOTime(DolphinConfig.IO value) {
/* 54543 */         if (this.iOTimeBuilder_ == null) {
/* 54544 */           if (this.iOTime_ != null) {
/* 54545 */             this
/* 54546 */               .iOTime_ = DolphinConfig.IO.newBuilder(this.iOTime_).mergeFrom(value).buildPartial();
/*       */           } else {
/* 54548 */             this.iOTime_ = value;
/*       */           } 
/* 54550 */           onChanged();
/*       */         } else {
/* 54552 */           this.iOTimeBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         
/* 54555 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearIOTime() {
/* 54565 */         if (this.iOTimeBuilder_ == null) {
/* 54566 */           this.iOTime_ = null;
/* 54567 */           onChanged();
/*       */         } else {
/* 54569 */           this.iOTime_ = null;
/* 54570 */           this.iOTimeBuilder_ = null;
/*       */         } 
/*       */         
/* 54573 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOTimeBuilder() {
/* 54584 */         onChanged();
/* 54585 */         return (DolphinConfig.IO.Builder)getIOTimeFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOTimeOrBuilder() {
/* 54595 */         if (this.iOTimeBuilder_ != null) {
/* 54596 */           return (DolphinConfig.IOOrBuilder)this.iOTimeBuilder_.getMessageOrBuilder();
/*       */         }
/* 54598 */         return (this.iOTime_ == null) ? 
/* 54599 */           DolphinConfig.IO.getDefaultInstance() : this.iOTime_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOTimeFieldBuilder() {
/* 54612 */         if (this.iOTimeBuilder_ == null) {
/* 54613 */           this
/*       */ 
/*       */ 
/*       */             
/* 54617 */             .iOTimeBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOTime(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/* 54618 */           this.iOTime_ = null;
/*       */         } 
/* 54620 */         return this.iOTimeBuilder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasIOAngle() {
/* 54631 */         return (this.iOAngleBuilder_ != null || this.iOAngle_ != null);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO getIOAngle() {
/* 54638 */         if (this.iOAngleBuilder_ == null) {
/* 54639 */           return (this.iOAngle_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOAngle_;
/*       */         }
/* 54641 */         return (DolphinConfig.IO)this.iOAngleBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOAngle(DolphinConfig.IO value) {
/* 54648 */         if (this.iOAngleBuilder_ == null) {
/* 54649 */           if (value == null) {
/* 54650 */             throw new NullPointerException();
/*       */           }
/* 54652 */           this.iOAngle_ = value;
/* 54653 */           onChanged();
/*       */         } else {
/* 54655 */           this.iOAngleBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         
/* 54658 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOAngle(DolphinConfig.IO.Builder builderForValue) {
/* 54665 */         if (this.iOAngleBuilder_ == null) {
/* 54666 */           this.iOAngle_ = builderForValue.build();
/* 54667 */           onChanged();
/*       */         } else {
/* 54669 */           this.iOAngleBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         
/* 54672 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeIOAngle(DolphinConfig.IO value) {
/* 54678 */         if (this.iOAngleBuilder_ == null) {
/* 54679 */           if (this.iOAngle_ != null) {
/* 54680 */             this
/* 54681 */               .iOAngle_ = DolphinConfig.IO.newBuilder(this.iOAngle_).mergeFrom(value).buildPartial();
/*       */           } else {
/* 54683 */             this.iOAngle_ = value;
/*       */           } 
/* 54685 */           onChanged();
/*       */         } else {
/* 54687 */           this.iOAngleBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         
/* 54690 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearIOAngle() {
/* 54696 */         if (this.iOAngleBuilder_ == null) {
/* 54697 */           this.iOAngle_ = null;
/* 54698 */           onChanged();
/*       */         } else {
/* 54700 */           this.iOAngle_ = null;
/* 54701 */           this.iOAngleBuilder_ = null;
/*       */         } 
/*       */         
/* 54704 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOAngleBuilder() {
/* 54711 */         onChanged();
/* 54712 */         return (DolphinConfig.IO.Builder)getIOAngleFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOAngleOrBuilder() {
/* 54718 */         if (this.iOAngleBuilder_ != null) {
/* 54719 */           return (DolphinConfig.IOOrBuilder)this.iOAngleBuilder_.getMessageOrBuilder();
/*       */         }
/* 54721 */         return (this.iOAngle_ == null) ? 
/* 54722 */           DolphinConfig.IO.getDefaultInstance() : this.iOAngle_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOAngleFieldBuilder() {
/* 54731 */         if (this.iOAngleBuilder_ == null) {
/* 54732 */           this
/*       */ 
/*       */ 
/*       */             
/* 54736 */             .iOAngleBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOAngle(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/* 54737 */           this.iOAngle_ = null;
/*       */         } 
/* 54739 */         return this.iOAngleBuilder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasIOSpeed() {
/* 54750 */         return (this.iOSpeedBuilder_ != null || this.iOSpeed_ != null);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO getIOSpeed() {
/* 54757 */         if (this.iOSpeedBuilder_ == null) {
/* 54758 */           return (this.iOSpeed_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOSpeed_;
/*       */         }
/* 54760 */         return (DolphinConfig.IO)this.iOSpeedBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOSpeed(DolphinConfig.IO value) {
/* 54767 */         if (this.iOSpeedBuilder_ == null) {
/* 54768 */           if (value == null) {
/* 54769 */             throw new NullPointerException();
/*       */           }
/* 54771 */           this.iOSpeed_ = value;
/* 54772 */           onChanged();
/*       */         } else {
/* 54774 */           this.iOSpeedBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         
/* 54777 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOSpeed(DolphinConfig.IO.Builder builderForValue) {
/* 54784 */         if (this.iOSpeedBuilder_ == null) {
/* 54785 */           this.iOSpeed_ = builderForValue.build();
/* 54786 */           onChanged();
/*       */         } else {
/* 54788 */           this.iOSpeedBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         
/* 54791 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeIOSpeed(DolphinConfig.IO value) {
/* 54797 */         if (this.iOSpeedBuilder_ == null) {
/* 54798 */           if (this.iOSpeed_ != null) {
/* 54799 */             this
/* 54800 */               .iOSpeed_ = DolphinConfig.IO.newBuilder(this.iOSpeed_).mergeFrom(value).buildPartial();
/*       */           } else {
/* 54802 */             this.iOSpeed_ = value;
/*       */           } 
/* 54804 */           onChanged();
/*       */         } else {
/* 54806 */           this.iOSpeedBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         
/* 54809 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearIOSpeed() {
/* 54815 */         if (this.iOSpeedBuilder_ == null) {
/* 54816 */           this.iOSpeed_ = null;
/* 54817 */           onChanged();
/*       */         } else {
/* 54819 */           this.iOSpeed_ = null;
/* 54820 */           this.iOSpeedBuilder_ = null;
/*       */         } 
/*       */         
/* 54823 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOSpeedBuilder() {
/* 54830 */         onChanged();
/* 54831 */         return (DolphinConfig.IO.Builder)getIOSpeedFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOSpeedOrBuilder() {
/* 54837 */         if (this.iOSpeedBuilder_ != null) {
/* 54838 */           return (DolphinConfig.IOOrBuilder)this.iOSpeedBuilder_.getMessageOrBuilder();
/*       */         }
/* 54840 */         return (this.iOSpeed_ == null) ? 
/* 54841 */           DolphinConfig.IO.getDefaultInstance() : this.iOSpeed_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOSpeedFieldBuilder() {
/* 54850 */         if (this.iOSpeedBuilder_ == null) {
/* 54851 */           this
/*       */ 
/*       */ 
/*       */             
/* 54855 */             .iOSpeedBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOSpeed(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/* 54856 */           this.iOSpeed_ = null;
/*       */         } 
/* 54858 */         return this.iOSpeedBuilder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasIOSleepMode() {
/* 54869 */         return (this.iOSleepModeBuilder_ != null || this.iOSleepMode_ != null);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO getIOSleepMode() {
/* 54876 */         if (this.iOSleepModeBuilder_ == null) {
/* 54877 */           return (this.iOSleepMode_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOSleepMode_;
/*       */         }
/* 54879 */         return (DolphinConfig.IO)this.iOSleepModeBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOSleepMode(DolphinConfig.IO value) {
/* 54886 */         if (this.iOSleepModeBuilder_ == null) {
/* 54887 */           if (value == null) {
/* 54888 */             throw new NullPointerException();
/*       */           }
/* 54890 */           this.iOSleepMode_ = value;
/* 54891 */           onChanged();
/*       */         } else {
/* 54893 */           this.iOSleepModeBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         
/* 54896 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOSleepMode(DolphinConfig.IO.Builder builderForValue) {
/* 54903 */         if (this.iOSleepModeBuilder_ == null) {
/* 54904 */           this.iOSleepMode_ = builderForValue.build();
/* 54905 */           onChanged();
/*       */         } else {
/* 54907 */           this.iOSleepModeBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         
/* 54910 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeIOSleepMode(DolphinConfig.IO value) {
/* 54916 */         if (this.iOSleepModeBuilder_ == null) {
/* 54917 */           if (this.iOSleepMode_ != null) {
/* 54918 */             this
/* 54919 */               .iOSleepMode_ = DolphinConfig.IO.newBuilder(this.iOSleepMode_).mergeFrom(value).buildPartial();
/*       */           } else {
/* 54921 */             this.iOSleepMode_ = value;
/*       */           } 
/* 54923 */           onChanged();
/*       */         } else {
/* 54925 */           this.iOSleepModeBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         
/* 54928 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearIOSleepMode() {
/* 54934 */         if (this.iOSleepModeBuilder_ == null) {
/* 54935 */           this.iOSleepMode_ = null;
/* 54936 */           onChanged();
/*       */         } else {
/* 54938 */           this.iOSleepMode_ = null;
/* 54939 */           this.iOSleepModeBuilder_ = null;
/*       */         } 
/*       */         
/* 54942 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOSleepModeBuilder() {
/* 54949 */         onChanged();
/* 54950 */         return (DolphinConfig.IO.Builder)getIOSleepModeFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOSleepModeOrBuilder() {
/* 54956 */         if (this.iOSleepModeBuilder_ != null) {
/* 54957 */           return (DolphinConfig.IOOrBuilder)this.iOSleepModeBuilder_.getMessageOrBuilder();
/*       */         }
/* 54959 */         return (this.iOSleepMode_ == null) ? 
/* 54960 */           DolphinConfig.IO.getDefaultInstance() : this.iOSleepMode_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOSleepModeFieldBuilder() {
/* 54969 */         if (this.iOSleepModeBuilder_ == null) {
/* 54970 */           this
/*       */ 
/*       */ 
/*       */             
/* 54974 */             .iOSleepModeBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOSleepMode(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/* 54975 */           this.iOSleepMode_ = null;
/*       */         } 
/* 54977 */         return this.iOSleepModeBuilder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasIOIgnition() {
/* 54988 */         return (this.iOIgnitionBuilder_ != null || this.iOIgnition_ != null);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO getIOIgnition() {
/* 54995 */         if (this.iOIgnitionBuilder_ == null) {
/* 54996 */           return (this.iOIgnition_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOIgnition_;
/*       */         }
/* 54998 */         return (DolphinConfig.IO)this.iOIgnitionBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOIgnition(DolphinConfig.IO value) {
/* 55005 */         if (this.iOIgnitionBuilder_ == null) {
/* 55006 */           if (value == null) {
/* 55007 */             throw new NullPointerException();
/*       */           }
/* 55009 */           this.iOIgnition_ = value;
/* 55010 */           onChanged();
/*       */         } else {
/* 55012 */           this.iOIgnitionBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         
/* 55015 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOIgnition(DolphinConfig.IO.Builder builderForValue) {
/* 55022 */         if (this.iOIgnitionBuilder_ == null) {
/* 55023 */           this.iOIgnition_ = builderForValue.build();
/* 55024 */           onChanged();
/*       */         } else {
/* 55026 */           this.iOIgnitionBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         
/* 55029 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeIOIgnition(DolphinConfig.IO value) {
/* 55035 */         if (this.iOIgnitionBuilder_ == null) {
/* 55036 */           if (this.iOIgnition_ != null) {
/* 55037 */             this
/* 55038 */               .iOIgnition_ = DolphinConfig.IO.newBuilder(this.iOIgnition_).mergeFrom(value).buildPartial();
/*       */           } else {
/* 55040 */             this.iOIgnition_ = value;
/*       */           } 
/* 55042 */           onChanged();
/*       */         } else {
/* 55044 */           this.iOIgnitionBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         
/* 55047 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearIOIgnition() {
/* 55053 */         if (this.iOIgnitionBuilder_ == null) {
/* 55054 */           this.iOIgnition_ = null;
/* 55055 */           onChanged();
/*       */         } else {
/* 55057 */           this.iOIgnition_ = null;
/* 55058 */           this.iOIgnitionBuilder_ = null;
/*       */         } 
/*       */         
/* 55061 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOIgnitionBuilder() {
/* 55068 */         onChanged();
/* 55069 */         return (DolphinConfig.IO.Builder)getIOIgnitionFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOIgnitionOrBuilder() {
/* 55075 */         if (this.iOIgnitionBuilder_ != null) {
/* 55076 */           return (DolphinConfig.IOOrBuilder)this.iOIgnitionBuilder_.getMessageOrBuilder();
/*       */         }
/* 55078 */         return (this.iOIgnition_ == null) ? 
/* 55079 */           DolphinConfig.IO.getDefaultInstance() : this.iOIgnition_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOIgnitionFieldBuilder() {
/* 55088 */         if (this.iOIgnitionBuilder_ == null) {
/* 55089 */           this
/*       */ 
/*       */ 
/*       */             
/* 55093 */             .iOIgnitionBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOIgnition(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/* 55094 */           this.iOIgnition_ = null;
/*       */         } 
/* 55096 */         return this.iOIgnitionBuilder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasIOMovement() {
/* 55107 */         return (this.iOMovementBuilder_ != null || this.iOMovement_ != null);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO getIOMovement() {
/* 55114 */         if (this.iOMovementBuilder_ == null) {
/* 55115 */           return (this.iOMovement_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOMovement_;
/*       */         }
/* 55117 */         return (DolphinConfig.IO)this.iOMovementBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOMovement(DolphinConfig.IO value) {
/* 55124 */         if (this.iOMovementBuilder_ == null) {
/* 55125 */           if (value == null) {
/* 55126 */             throw new NullPointerException();
/*       */           }
/* 55128 */           this.iOMovement_ = value;
/* 55129 */           onChanged();
/*       */         } else {
/* 55131 */           this.iOMovementBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         
/* 55134 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOMovement(DolphinConfig.IO.Builder builderForValue) {
/* 55141 */         if (this.iOMovementBuilder_ == null) {
/* 55142 */           this.iOMovement_ = builderForValue.build();
/* 55143 */           onChanged();
/*       */         } else {
/* 55145 */           this.iOMovementBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         
/* 55148 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeIOMovement(DolphinConfig.IO value) {
/* 55154 */         if (this.iOMovementBuilder_ == null) {
/* 55155 */           if (this.iOMovement_ != null) {
/* 55156 */             this
/* 55157 */               .iOMovement_ = DolphinConfig.IO.newBuilder(this.iOMovement_).mergeFrom(value).buildPartial();
/*       */           } else {
/* 55159 */             this.iOMovement_ = value;
/*       */           } 
/* 55161 */           onChanged();
/*       */         } else {
/* 55163 */           this.iOMovementBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         
/* 55166 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearIOMovement() {
/* 55172 */         if (this.iOMovementBuilder_ == null) {
/* 55173 */           this.iOMovement_ = null;
/* 55174 */           onChanged();
/*       */         } else {
/* 55176 */           this.iOMovement_ = null;
/* 55177 */           this.iOMovementBuilder_ = null;
/*       */         } 
/*       */         
/* 55180 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOMovementBuilder() {
/* 55187 */         onChanged();
/* 55188 */         return (DolphinConfig.IO.Builder)getIOMovementFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOMovementOrBuilder() {
/* 55194 */         if (this.iOMovementBuilder_ != null) {
/* 55195 */           return (DolphinConfig.IOOrBuilder)this.iOMovementBuilder_.getMessageOrBuilder();
/*       */         }
/* 55197 */         return (this.iOMovement_ == null) ? 
/* 55198 */           DolphinConfig.IO.getDefaultInstance() : this.iOMovement_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOMovementFieldBuilder() {
/* 55207 */         if (this.iOMovementBuilder_ == null) {
/* 55208 */           this
/*       */ 
/*       */ 
/*       */             
/* 55212 */             .iOMovementBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOMovement(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/* 55213 */           this.iOMovement_ = null;
/*       */         } 
/* 55215 */         return this.iOMovementBuilder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasIODataMode() {
/* 55226 */         return (this.iODataModeBuilder_ != null || this.iODataMode_ != null);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO getIODataMode() {
/* 55233 */         if (this.iODataModeBuilder_ == null) {
/* 55234 */           return (this.iODataMode_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iODataMode_;
/*       */         }
/* 55236 */         return (DolphinConfig.IO)this.iODataModeBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIODataMode(DolphinConfig.IO value) {
/* 55243 */         if (this.iODataModeBuilder_ == null) {
/* 55244 */           if (value == null) {
/* 55245 */             throw new NullPointerException();
/*       */           }
/* 55247 */           this.iODataMode_ = value;
/* 55248 */           onChanged();
/*       */         } else {
/* 55250 */           this.iODataModeBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         
/* 55253 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIODataMode(DolphinConfig.IO.Builder builderForValue) {
/* 55260 */         if (this.iODataModeBuilder_ == null) {
/* 55261 */           this.iODataMode_ = builderForValue.build();
/* 55262 */           onChanged();
/*       */         } else {
/* 55264 */           this.iODataModeBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         
/* 55267 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeIODataMode(DolphinConfig.IO value) {
/* 55273 */         if (this.iODataModeBuilder_ == null) {
/* 55274 */           if (this.iODataMode_ != null) {
/* 55275 */             this
/* 55276 */               .iODataMode_ = DolphinConfig.IO.newBuilder(this.iODataMode_).mergeFrom(value).buildPartial();
/*       */           } else {
/* 55278 */             this.iODataMode_ = value;
/*       */           } 
/* 55280 */           onChanged();
/*       */         } else {
/* 55282 */           this.iODataModeBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         
/* 55285 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearIODataMode() {
/* 55291 */         if (this.iODataModeBuilder_ == null) {
/* 55292 */           this.iODataMode_ = null;
/* 55293 */           onChanged();
/*       */         } else {
/* 55295 */           this.iODataMode_ = null;
/* 55296 */           this.iODataModeBuilder_ = null;
/*       */         } 
/*       */         
/* 55299 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO.Builder getIODataModeBuilder() {
/* 55306 */         onChanged();
/* 55307 */         return (DolphinConfig.IO.Builder)getIODataModeFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIODataModeOrBuilder() {
/* 55313 */         if (this.iODataModeBuilder_ != null) {
/* 55314 */           return (DolphinConfig.IOOrBuilder)this.iODataModeBuilder_.getMessageOrBuilder();
/*       */         }
/* 55316 */         return (this.iODataMode_ == null) ? 
/* 55317 */           DolphinConfig.IO.getDefaultInstance() : this.iODataMode_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIODataModeFieldBuilder() {
/* 55326 */         if (this.iODataModeBuilder_ == null) {
/* 55327 */           this
/*       */ 
/*       */ 
/*       */             
/* 55331 */             .iODataModeBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIODataMode(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/* 55332 */           this.iODataMode_ = null;
/*       */         } 
/* 55334 */         return this.iODataModeBuilder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasIOGnssStatus() {
/* 55345 */         return (this.iOGnssStatusBuilder_ != null || this.iOGnssStatus_ != null);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO getIOGnssStatus() {
/* 55352 */         if (this.iOGnssStatusBuilder_ == null) {
/* 55353 */           return (this.iOGnssStatus_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOGnssStatus_;
/*       */         }
/* 55355 */         return (DolphinConfig.IO)this.iOGnssStatusBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOGnssStatus(DolphinConfig.IO value) {
/* 55362 */         if (this.iOGnssStatusBuilder_ == null) {
/* 55363 */           if (value == null) {
/* 55364 */             throw new NullPointerException();
/*       */           }
/* 55366 */           this.iOGnssStatus_ = value;
/* 55367 */           onChanged();
/*       */         } else {
/* 55369 */           this.iOGnssStatusBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         
/* 55372 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOGnssStatus(DolphinConfig.IO.Builder builderForValue) {
/* 55379 */         if (this.iOGnssStatusBuilder_ == null) {
/* 55380 */           this.iOGnssStatus_ = builderForValue.build();
/* 55381 */           onChanged();
/*       */         } else {
/* 55383 */           this.iOGnssStatusBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         
/* 55386 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeIOGnssStatus(DolphinConfig.IO value) {
/* 55392 */         if (this.iOGnssStatusBuilder_ == null) {
/* 55393 */           if (this.iOGnssStatus_ != null) {
/* 55394 */             this
/* 55395 */               .iOGnssStatus_ = DolphinConfig.IO.newBuilder(this.iOGnssStatus_).mergeFrom(value).buildPartial();
/*       */           } else {
/* 55397 */             this.iOGnssStatus_ = value;
/*       */           } 
/* 55399 */           onChanged();
/*       */         } else {
/* 55401 */           this.iOGnssStatusBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         
/* 55404 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearIOGnssStatus() {
/* 55410 */         if (this.iOGnssStatusBuilder_ == null) {
/* 55411 */           this.iOGnssStatus_ = null;
/* 55412 */           onChanged();
/*       */         } else {
/* 55414 */           this.iOGnssStatus_ = null;
/* 55415 */           this.iOGnssStatusBuilder_ = null;
/*       */         } 
/*       */         
/* 55418 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOGnssStatusBuilder() {
/* 55425 */         onChanged();
/* 55426 */         return (DolphinConfig.IO.Builder)getIOGnssStatusFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOGnssStatusOrBuilder() {
/* 55432 */         if (this.iOGnssStatusBuilder_ != null) {
/* 55433 */           return (DolphinConfig.IOOrBuilder)this.iOGnssStatusBuilder_.getMessageOrBuilder();
/*       */         }
/* 55435 */         return (this.iOGnssStatus_ == null) ? 
/* 55436 */           DolphinConfig.IO.getDefaultInstance() : this.iOGnssStatus_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOGnssStatusFieldBuilder() {
/* 55445 */         if (this.iOGnssStatusBuilder_ == null) {
/* 55446 */           this
/*       */ 
/*       */ 
/*       */             
/* 55450 */             .iOGnssStatusBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOGnssStatus(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/* 55451 */           this.iOGnssStatus_ = null;
/*       */         } 
/* 55453 */         return this.iOGnssStatusBuilder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasIOGnssHDOP() {
/* 55464 */         return (this.iOGnssHDOPBuilder_ != null || this.iOGnssHDOP_ != null);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO getIOGnssHDOP() {
/* 55471 */         if (this.iOGnssHDOPBuilder_ == null) {
/* 55472 */           return (this.iOGnssHDOP_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOGnssHDOP_;
/*       */         }
/* 55474 */         return (DolphinConfig.IO)this.iOGnssHDOPBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOGnssHDOP(DolphinConfig.IO value) {
/* 55481 */         if (this.iOGnssHDOPBuilder_ == null) {
/* 55482 */           if (value == null) {
/* 55483 */             throw new NullPointerException();
/*       */           }
/* 55485 */           this.iOGnssHDOP_ = value;
/* 55486 */           onChanged();
/*       */         } else {
/* 55488 */           this.iOGnssHDOPBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         
/* 55491 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOGnssHDOP(DolphinConfig.IO.Builder builderForValue) {
/* 55498 */         if (this.iOGnssHDOPBuilder_ == null) {
/* 55499 */           this.iOGnssHDOP_ = builderForValue.build();
/* 55500 */           onChanged();
/*       */         } else {
/* 55502 */           this.iOGnssHDOPBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         
/* 55505 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeIOGnssHDOP(DolphinConfig.IO value) {
/* 55511 */         if (this.iOGnssHDOPBuilder_ == null) {
/* 55512 */           if (this.iOGnssHDOP_ != null) {
/* 55513 */             this
/* 55514 */               .iOGnssHDOP_ = DolphinConfig.IO.newBuilder(this.iOGnssHDOP_).mergeFrom(value).buildPartial();
/*       */           } else {
/* 55516 */             this.iOGnssHDOP_ = value;
/*       */           } 
/* 55518 */           onChanged();
/*       */         } else {
/* 55520 */           this.iOGnssHDOPBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         
/* 55523 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearIOGnssHDOP() {
/* 55529 */         if (this.iOGnssHDOPBuilder_ == null) {
/* 55530 */           this.iOGnssHDOP_ = null;
/* 55531 */           onChanged();
/*       */         } else {
/* 55533 */           this.iOGnssHDOP_ = null;
/* 55534 */           this.iOGnssHDOPBuilder_ = null;
/*       */         } 
/*       */         
/* 55537 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOGnssHDOPBuilder() {
/* 55544 */         onChanged();
/* 55545 */         return (DolphinConfig.IO.Builder)getIOGnssHDOPFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOGnssHDOPOrBuilder() {
/* 55551 */         if (this.iOGnssHDOPBuilder_ != null) {
/* 55552 */           return (DolphinConfig.IOOrBuilder)this.iOGnssHDOPBuilder_.getMessageOrBuilder();
/*       */         }
/* 55554 */         return (this.iOGnssHDOP_ == null) ? 
/* 55555 */           DolphinConfig.IO.getDefaultInstance() : this.iOGnssHDOP_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOGnssHDOPFieldBuilder() {
/* 55564 */         if (this.iOGnssHDOPBuilder_ == null) {
/* 55565 */           this
/*       */ 
/*       */ 
/*       */             
/* 55569 */             .iOGnssHDOPBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOGnssHDOP(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/* 55570 */           this.iOGnssHDOP_ = null;
/*       */         } 
/* 55572 */         return this.iOGnssHDOPBuilder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasIOGnssPDOP() {
/* 55583 */         return (this.iOGnssPDOPBuilder_ != null || this.iOGnssPDOP_ != null);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO getIOGnssPDOP() {
/* 55590 */         if (this.iOGnssPDOPBuilder_ == null) {
/* 55591 */           return (this.iOGnssPDOP_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOGnssPDOP_;
/*       */         }
/* 55593 */         return (DolphinConfig.IO)this.iOGnssPDOPBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOGnssPDOP(DolphinConfig.IO value) {
/* 55600 */         if (this.iOGnssPDOPBuilder_ == null) {
/* 55601 */           if (value == null) {
/* 55602 */             throw new NullPointerException();
/*       */           }
/* 55604 */           this.iOGnssPDOP_ = value;
/* 55605 */           onChanged();
/*       */         } else {
/* 55607 */           this.iOGnssPDOPBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         
/* 55610 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOGnssPDOP(DolphinConfig.IO.Builder builderForValue) {
/* 55617 */         if (this.iOGnssPDOPBuilder_ == null) {
/* 55618 */           this.iOGnssPDOP_ = builderForValue.build();
/* 55619 */           onChanged();
/*       */         } else {
/* 55621 */           this.iOGnssPDOPBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         
/* 55624 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeIOGnssPDOP(DolphinConfig.IO value) {
/* 55630 */         if (this.iOGnssPDOPBuilder_ == null) {
/* 55631 */           if (this.iOGnssPDOP_ != null) {
/* 55632 */             this
/* 55633 */               .iOGnssPDOP_ = DolphinConfig.IO.newBuilder(this.iOGnssPDOP_).mergeFrom(value).buildPartial();
/*       */           } else {
/* 55635 */             this.iOGnssPDOP_ = value;
/*       */           } 
/* 55637 */           onChanged();
/*       */         } else {
/* 55639 */           this.iOGnssPDOPBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         
/* 55642 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearIOGnssPDOP() {
/* 55648 */         if (this.iOGnssPDOPBuilder_ == null) {
/* 55649 */           this.iOGnssPDOP_ = null;
/* 55650 */           onChanged();
/*       */         } else {
/* 55652 */           this.iOGnssPDOP_ = null;
/* 55653 */           this.iOGnssPDOPBuilder_ = null;
/*       */         } 
/*       */         
/* 55656 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOGnssPDOPBuilder() {
/* 55663 */         onChanged();
/* 55664 */         return (DolphinConfig.IO.Builder)getIOGnssPDOPFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOGnssPDOPOrBuilder() {
/* 55670 */         if (this.iOGnssPDOPBuilder_ != null) {
/* 55671 */           return (DolphinConfig.IOOrBuilder)this.iOGnssPDOPBuilder_.getMessageOrBuilder();
/*       */         }
/* 55673 */         return (this.iOGnssPDOP_ == null) ? 
/* 55674 */           DolphinConfig.IO.getDefaultInstance() : this.iOGnssPDOP_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOGnssPDOPFieldBuilder() {
/* 55683 */         if (this.iOGnssPDOPBuilder_ == null) {
/* 55684 */           this
/*       */ 
/*       */ 
/*       */             
/* 55688 */             .iOGnssPDOPBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOGnssPDOP(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/* 55689 */           this.iOGnssPDOP_ = null;
/*       */         } 
/* 55691 */         return this.iOGnssPDOPBuilder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasIOGnssJammingStatus() {
/* 55702 */         return (this.iOGnssJammingStatusBuilder_ != null || this.iOGnssJammingStatus_ != null);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO getIOGnssJammingStatus() {
/* 55709 */         if (this.iOGnssJammingStatusBuilder_ == null) {
/* 55710 */           return (this.iOGnssJammingStatus_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOGnssJammingStatus_;
/*       */         }
/* 55712 */         return (DolphinConfig.IO)this.iOGnssJammingStatusBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOGnssJammingStatus(DolphinConfig.IO value) {
/* 55719 */         if (this.iOGnssJammingStatusBuilder_ == null) {
/* 55720 */           if (value == null) {
/* 55721 */             throw new NullPointerException();
/*       */           }
/* 55723 */           this.iOGnssJammingStatus_ = value;
/* 55724 */           onChanged();
/*       */         } else {
/* 55726 */           this.iOGnssJammingStatusBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         
/* 55729 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOGnssJammingStatus(DolphinConfig.IO.Builder builderForValue) {
/* 55736 */         if (this.iOGnssJammingStatusBuilder_ == null) {
/* 55737 */           this.iOGnssJammingStatus_ = builderForValue.build();
/* 55738 */           onChanged();
/*       */         } else {
/* 55740 */           this.iOGnssJammingStatusBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         
/* 55743 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeIOGnssJammingStatus(DolphinConfig.IO value) {
/* 55749 */         if (this.iOGnssJammingStatusBuilder_ == null) {
/* 55750 */           if (this.iOGnssJammingStatus_ != null) {
/* 55751 */             this
/* 55752 */               .iOGnssJammingStatus_ = DolphinConfig.IO.newBuilder(this.iOGnssJammingStatus_).mergeFrom(value).buildPartial();
/*       */           } else {
/* 55754 */             this.iOGnssJammingStatus_ = value;
/*       */           } 
/* 55756 */           onChanged();
/*       */         } else {
/* 55758 */           this.iOGnssJammingStatusBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         
/* 55761 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearIOGnssJammingStatus() {
/* 55767 */         if (this.iOGnssJammingStatusBuilder_ == null) {
/* 55768 */           this.iOGnssJammingStatus_ = null;
/* 55769 */           onChanged();
/*       */         } else {
/* 55771 */           this.iOGnssJammingStatus_ = null;
/* 55772 */           this.iOGnssJammingStatusBuilder_ = null;
/*       */         } 
/*       */         
/* 55775 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOGnssJammingStatusBuilder() {
/* 55782 */         onChanged();
/* 55783 */         return (DolphinConfig.IO.Builder)getIOGnssJammingStatusFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOGnssJammingStatusOrBuilder() {
/* 55789 */         if (this.iOGnssJammingStatusBuilder_ != null) {
/* 55790 */           return (DolphinConfig.IOOrBuilder)this.iOGnssJammingStatusBuilder_.getMessageOrBuilder();
/*       */         }
/* 55792 */         return (this.iOGnssJammingStatus_ == null) ? 
/* 55793 */           DolphinConfig.IO.getDefaultInstance() : this.iOGnssJammingStatus_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOGnssJammingStatusFieldBuilder() {
/* 55802 */         if (this.iOGnssJammingStatusBuilder_ == null) {
/* 55803 */           this
/*       */ 
/*       */ 
/*       */             
/* 55807 */             .iOGnssJammingStatusBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOGnssJammingStatus(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/* 55808 */           this.iOGnssJammingStatus_ = null;
/*       */         } 
/* 55810 */         return this.iOGnssJammingStatusBuilder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasIOGsmSignal() {
/* 55821 */         return (this.iOGsmSignalBuilder_ != null || this.iOGsmSignal_ != null);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO getIOGsmSignal() {
/* 55828 */         if (this.iOGsmSignalBuilder_ == null) {
/* 55829 */           return (this.iOGsmSignal_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOGsmSignal_;
/*       */         }
/* 55831 */         return (DolphinConfig.IO)this.iOGsmSignalBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOGsmSignal(DolphinConfig.IO value) {
/* 55838 */         if (this.iOGsmSignalBuilder_ == null) {
/* 55839 */           if (value == null) {
/* 55840 */             throw new NullPointerException();
/*       */           }
/* 55842 */           this.iOGsmSignal_ = value;
/* 55843 */           onChanged();
/*       */         } else {
/* 55845 */           this.iOGsmSignalBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         
/* 55848 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOGsmSignal(DolphinConfig.IO.Builder builderForValue) {
/* 55855 */         if (this.iOGsmSignalBuilder_ == null) {
/* 55856 */           this.iOGsmSignal_ = builderForValue.build();
/* 55857 */           onChanged();
/*       */         } else {
/* 55859 */           this.iOGsmSignalBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         
/* 55862 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeIOGsmSignal(DolphinConfig.IO value) {
/* 55868 */         if (this.iOGsmSignalBuilder_ == null) {
/* 55869 */           if (this.iOGsmSignal_ != null) {
/* 55870 */             this
/* 55871 */               .iOGsmSignal_ = DolphinConfig.IO.newBuilder(this.iOGsmSignal_).mergeFrom(value).buildPartial();
/*       */           } else {
/* 55873 */             this.iOGsmSignal_ = value;
/*       */           } 
/* 55875 */           onChanged();
/*       */         } else {
/* 55877 */           this.iOGsmSignalBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         
/* 55880 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearIOGsmSignal() {
/* 55886 */         if (this.iOGsmSignalBuilder_ == null) {
/* 55887 */           this.iOGsmSignal_ = null;
/* 55888 */           onChanged();
/*       */         } else {
/* 55890 */           this.iOGsmSignal_ = null;
/* 55891 */           this.iOGsmSignalBuilder_ = null;
/*       */         } 
/*       */         
/* 55894 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOGsmSignalBuilder() {
/* 55901 */         onChanged();
/* 55902 */         return (DolphinConfig.IO.Builder)getIOGsmSignalFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOGsmSignalOrBuilder() {
/* 55908 */         if (this.iOGsmSignalBuilder_ != null) {
/* 55909 */           return (DolphinConfig.IOOrBuilder)this.iOGsmSignalBuilder_.getMessageOrBuilder();
/*       */         }
/* 55911 */         return (this.iOGsmSignal_ == null) ? 
/* 55912 */           DolphinConfig.IO.getDefaultInstance() : this.iOGsmSignal_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOGsmSignalFieldBuilder() {
/* 55921 */         if (this.iOGsmSignalBuilder_ == null) {
/* 55922 */           this
/*       */ 
/*       */ 
/*       */             
/* 55926 */             .iOGsmSignalBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOGsmSignal(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/* 55927 */           this.iOGsmSignal_ = null;
/*       */         } 
/* 55929 */         return this.iOGsmSignalBuilder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasIOGsmCellId() {
/* 55940 */         return (this.iOGsmCellIdBuilder_ != null || this.iOGsmCellId_ != null);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO getIOGsmCellId() {
/* 55947 */         if (this.iOGsmCellIdBuilder_ == null) {
/* 55948 */           return (this.iOGsmCellId_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOGsmCellId_;
/*       */         }
/* 55950 */         return (DolphinConfig.IO)this.iOGsmCellIdBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOGsmCellId(DolphinConfig.IO value) {
/* 55957 */         if (this.iOGsmCellIdBuilder_ == null) {
/* 55958 */           if (value == null) {
/* 55959 */             throw new NullPointerException();
/*       */           }
/* 55961 */           this.iOGsmCellId_ = value;
/* 55962 */           onChanged();
/*       */         } else {
/* 55964 */           this.iOGsmCellIdBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         
/* 55967 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOGsmCellId(DolphinConfig.IO.Builder builderForValue) {
/* 55974 */         if (this.iOGsmCellIdBuilder_ == null) {
/* 55975 */           this.iOGsmCellId_ = builderForValue.build();
/* 55976 */           onChanged();
/*       */         } else {
/* 55978 */           this.iOGsmCellIdBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         
/* 55981 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeIOGsmCellId(DolphinConfig.IO value) {
/* 55987 */         if (this.iOGsmCellIdBuilder_ == null) {
/* 55988 */           if (this.iOGsmCellId_ != null) {
/* 55989 */             this
/* 55990 */               .iOGsmCellId_ = DolphinConfig.IO.newBuilder(this.iOGsmCellId_).mergeFrom(value).buildPartial();
/*       */           } else {
/* 55992 */             this.iOGsmCellId_ = value;
/*       */           } 
/* 55994 */           onChanged();
/*       */         } else {
/* 55996 */           this.iOGsmCellIdBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         
/* 55999 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearIOGsmCellId() {
/* 56005 */         if (this.iOGsmCellIdBuilder_ == null) {
/* 56006 */           this.iOGsmCellId_ = null;
/* 56007 */           onChanged();
/*       */         } else {
/* 56009 */           this.iOGsmCellId_ = null;
/* 56010 */           this.iOGsmCellIdBuilder_ = null;
/*       */         } 
/*       */         
/* 56013 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOGsmCellIdBuilder() {
/* 56020 */         onChanged();
/* 56021 */         return (DolphinConfig.IO.Builder)getIOGsmCellIdFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOGsmCellIdOrBuilder() {
/* 56027 */         if (this.iOGsmCellIdBuilder_ != null) {
/* 56028 */           return (DolphinConfig.IOOrBuilder)this.iOGsmCellIdBuilder_.getMessageOrBuilder();
/*       */         }
/* 56030 */         return (this.iOGsmCellId_ == null) ? 
/* 56031 */           DolphinConfig.IO.getDefaultInstance() : this.iOGsmCellId_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOGsmCellIdFieldBuilder() {
/* 56040 */         if (this.iOGsmCellIdBuilder_ == null) {
/* 56041 */           this
/*       */ 
/*       */ 
/*       */             
/* 56045 */             .iOGsmCellIdBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOGsmCellId(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/* 56046 */           this.iOGsmCellId_ = null;
/*       */         } 
/* 56048 */         return this.iOGsmCellIdBuilder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasIOGsmAreaCode() {
/* 56059 */         return (this.iOGsmAreaCodeBuilder_ != null || this.iOGsmAreaCode_ != null);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO getIOGsmAreaCode() {
/* 56066 */         if (this.iOGsmAreaCodeBuilder_ == null) {
/* 56067 */           return (this.iOGsmAreaCode_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOGsmAreaCode_;
/*       */         }
/* 56069 */         return (DolphinConfig.IO)this.iOGsmAreaCodeBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOGsmAreaCode(DolphinConfig.IO value) {
/* 56076 */         if (this.iOGsmAreaCodeBuilder_ == null) {
/* 56077 */           if (value == null) {
/* 56078 */             throw new NullPointerException();
/*       */           }
/* 56080 */           this.iOGsmAreaCode_ = value;
/* 56081 */           onChanged();
/*       */         } else {
/* 56083 */           this.iOGsmAreaCodeBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         
/* 56086 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOGsmAreaCode(DolphinConfig.IO.Builder builderForValue) {
/* 56093 */         if (this.iOGsmAreaCodeBuilder_ == null) {
/* 56094 */           this.iOGsmAreaCode_ = builderForValue.build();
/* 56095 */           onChanged();
/*       */         } else {
/* 56097 */           this.iOGsmAreaCodeBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         
/* 56100 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeIOGsmAreaCode(DolphinConfig.IO value) {
/* 56106 */         if (this.iOGsmAreaCodeBuilder_ == null) {
/* 56107 */           if (this.iOGsmAreaCode_ != null) {
/* 56108 */             this
/* 56109 */               .iOGsmAreaCode_ = DolphinConfig.IO.newBuilder(this.iOGsmAreaCode_).mergeFrom(value).buildPartial();
/*       */           } else {
/* 56111 */             this.iOGsmAreaCode_ = value;
/*       */           } 
/* 56113 */           onChanged();
/*       */         } else {
/* 56115 */           this.iOGsmAreaCodeBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         
/* 56118 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearIOGsmAreaCode() {
/* 56124 */         if (this.iOGsmAreaCodeBuilder_ == null) {
/* 56125 */           this.iOGsmAreaCode_ = null;
/* 56126 */           onChanged();
/*       */         } else {
/* 56128 */           this.iOGsmAreaCode_ = null;
/* 56129 */           this.iOGsmAreaCodeBuilder_ = null;
/*       */         } 
/*       */         
/* 56132 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOGsmAreaCodeBuilder() {
/* 56139 */         onChanged();
/* 56140 */         return (DolphinConfig.IO.Builder)getIOGsmAreaCodeFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOGsmAreaCodeOrBuilder() {
/* 56146 */         if (this.iOGsmAreaCodeBuilder_ != null) {
/* 56147 */           return (DolphinConfig.IOOrBuilder)this.iOGsmAreaCodeBuilder_.getMessageOrBuilder();
/*       */         }
/* 56149 */         return (this.iOGsmAreaCode_ == null) ? 
/* 56150 */           DolphinConfig.IO.getDefaultInstance() : this.iOGsmAreaCode_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOGsmAreaCodeFieldBuilder() {
/* 56159 */         if (this.iOGsmAreaCodeBuilder_ == null) {
/* 56160 */           this
/*       */ 
/*       */ 
/*       */             
/* 56164 */             .iOGsmAreaCodeBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOGsmAreaCode(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/* 56165 */           this.iOGsmAreaCode_ = null;
/*       */         } 
/* 56167 */         return this.iOGsmAreaCodeBuilder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasIOGsmOperator() {
/* 56178 */         return (this.iOGsmOperatorBuilder_ != null || this.iOGsmOperator_ != null);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO getIOGsmOperator() {
/* 56185 */         if (this.iOGsmOperatorBuilder_ == null) {
/* 56186 */           return (this.iOGsmOperator_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOGsmOperator_;
/*       */         }
/* 56188 */         return (DolphinConfig.IO)this.iOGsmOperatorBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOGsmOperator(DolphinConfig.IO value) {
/* 56195 */         if (this.iOGsmOperatorBuilder_ == null) {
/* 56196 */           if (value == null) {
/* 56197 */             throw new NullPointerException();
/*       */           }
/* 56199 */           this.iOGsmOperator_ = value;
/* 56200 */           onChanged();
/*       */         } else {
/* 56202 */           this.iOGsmOperatorBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         
/* 56205 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOGsmOperator(DolphinConfig.IO.Builder builderForValue) {
/* 56212 */         if (this.iOGsmOperatorBuilder_ == null) {
/* 56213 */           this.iOGsmOperator_ = builderForValue.build();
/* 56214 */           onChanged();
/*       */         } else {
/* 56216 */           this.iOGsmOperatorBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         
/* 56219 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeIOGsmOperator(DolphinConfig.IO value) {
/* 56225 */         if (this.iOGsmOperatorBuilder_ == null) {
/* 56226 */           if (this.iOGsmOperator_ != null) {
/* 56227 */             this
/* 56228 */               .iOGsmOperator_ = DolphinConfig.IO.newBuilder(this.iOGsmOperator_).mergeFrom(value).buildPartial();
/*       */           } else {
/* 56230 */             this.iOGsmOperator_ = value;
/*       */           } 
/* 56232 */           onChanged();
/*       */         } else {
/* 56234 */           this.iOGsmOperatorBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         
/* 56237 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearIOGsmOperator() {
/* 56243 */         if (this.iOGsmOperatorBuilder_ == null) {
/* 56244 */           this.iOGsmOperator_ = null;
/* 56245 */           onChanged();
/*       */         } else {
/* 56247 */           this.iOGsmOperator_ = null;
/* 56248 */           this.iOGsmOperatorBuilder_ = null;
/*       */         } 
/*       */         
/* 56251 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOGsmOperatorBuilder() {
/* 56258 */         onChanged();
/* 56259 */         return (DolphinConfig.IO.Builder)getIOGsmOperatorFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOGsmOperatorOrBuilder() {
/* 56265 */         if (this.iOGsmOperatorBuilder_ != null) {
/* 56266 */           return (DolphinConfig.IOOrBuilder)this.iOGsmOperatorBuilder_.getMessageOrBuilder();
/*       */         }
/* 56268 */         return (this.iOGsmOperator_ == null) ? 
/* 56269 */           DolphinConfig.IO.getDefaultInstance() : this.iOGsmOperator_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOGsmOperatorFieldBuilder() {
/* 56278 */         if (this.iOGsmOperatorBuilder_ == null) {
/* 56279 */           this
/*       */ 
/*       */ 
/*       */             
/* 56283 */             .iOGsmOperatorBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOGsmOperator(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/* 56284 */           this.iOGsmOperator_ = null;
/*       */         } 
/* 56286 */         return this.iOGsmOperatorBuilder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasIOGsmTemperature() {
/* 56297 */         return (this.iOGsmTemperatureBuilder_ != null || this.iOGsmTemperature_ != null);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO getIOGsmTemperature() {
/* 56304 */         if (this.iOGsmTemperatureBuilder_ == null) {
/* 56305 */           return (this.iOGsmTemperature_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOGsmTemperature_;
/*       */         }
/* 56307 */         return (DolphinConfig.IO)this.iOGsmTemperatureBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOGsmTemperature(DolphinConfig.IO value) {
/* 56314 */         if (this.iOGsmTemperatureBuilder_ == null) {
/* 56315 */           if (value == null) {
/* 56316 */             throw new NullPointerException();
/*       */           }
/* 56318 */           this.iOGsmTemperature_ = value;
/* 56319 */           onChanged();
/*       */         } else {
/* 56321 */           this.iOGsmTemperatureBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         
/* 56324 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOGsmTemperature(DolphinConfig.IO.Builder builderForValue) {
/* 56331 */         if (this.iOGsmTemperatureBuilder_ == null) {
/* 56332 */           this.iOGsmTemperature_ = builderForValue.build();
/* 56333 */           onChanged();
/*       */         } else {
/* 56335 */           this.iOGsmTemperatureBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         
/* 56338 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeIOGsmTemperature(DolphinConfig.IO value) {
/* 56344 */         if (this.iOGsmTemperatureBuilder_ == null) {
/* 56345 */           if (this.iOGsmTemperature_ != null) {
/* 56346 */             this
/* 56347 */               .iOGsmTemperature_ = DolphinConfig.IO.newBuilder(this.iOGsmTemperature_).mergeFrom(value).buildPartial();
/*       */           } else {
/* 56349 */             this.iOGsmTemperature_ = value;
/*       */           } 
/* 56351 */           onChanged();
/*       */         } else {
/* 56353 */           this.iOGsmTemperatureBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         
/* 56356 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearIOGsmTemperature() {
/* 56362 */         if (this.iOGsmTemperatureBuilder_ == null) {
/* 56363 */           this.iOGsmTemperature_ = null;
/* 56364 */           onChanged();
/*       */         } else {
/* 56366 */           this.iOGsmTemperature_ = null;
/* 56367 */           this.iOGsmTemperatureBuilder_ = null;
/*       */         } 
/*       */         
/* 56370 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOGsmTemperatureBuilder() {
/* 56377 */         onChanged();
/* 56378 */         return (DolphinConfig.IO.Builder)getIOGsmTemperatureFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOGsmTemperatureOrBuilder() {
/* 56384 */         if (this.iOGsmTemperatureBuilder_ != null) {
/* 56385 */           return (DolphinConfig.IOOrBuilder)this.iOGsmTemperatureBuilder_.getMessageOrBuilder();
/*       */         }
/* 56387 */         return (this.iOGsmTemperature_ == null) ? 
/* 56388 */           DolphinConfig.IO.getDefaultInstance() : this.iOGsmTemperature_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOGsmTemperatureFieldBuilder() {
/* 56397 */         if (this.iOGsmTemperatureBuilder_ == null) {
/* 56398 */           this
/*       */ 
/*       */ 
/*       */             
/* 56402 */             .iOGsmTemperatureBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOGsmTemperature(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/* 56403 */           this.iOGsmTemperature_ = null;
/*       */         } 
/* 56405 */         return this.iOGsmTemperatureBuilder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasIOGsmJammingStatus() {
/* 56416 */         return (this.iOGsmJammingStatusBuilder_ != null || this.iOGsmJammingStatus_ != null);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO getIOGsmJammingStatus() {
/* 56423 */         if (this.iOGsmJammingStatusBuilder_ == null) {
/* 56424 */           return (this.iOGsmJammingStatus_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOGsmJammingStatus_;
/*       */         }
/* 56426 */         return (DolphinConfig.IO)this.iOGsmJammingStatusBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOGsmJammingStatus(DolphinConfig.IO value) {
/* 56433 */         if (this.iOGsmJammingStatusBuilder_ == null) {
/* 56434 */           if (value == null) {
/* 56435 */             throw new NullPointerException();
/*       */           }
/* 56437 */           this.iOGsmJammingStatus_ = value;
/* 56438 */           onChanged();
/*       */         } else {
/* 56440 */           this.iOGsmJammingStatusBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         
/* 56443 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOGsmJammingStatus(DolphinConfig.IO.Builder builderForValue) {
/* 56450 */         if (this.iOGsmJammingStatusBuilder_ == null) {
/* 56451 */           this.iOGsmJammingStatus_ = builderForValue.build();
/* 56452 */           onChanged();
/*       */         } else {
/* 56454 */           this.iOGsmJammingStatusBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         
/* 56457 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeIOGsmJammingStatus(DolphinConfig.IO value) {
/* 56463 */         if (this.iOGsmJammingStatusBuilder_ == null) {
/* 56464 */           if (this.iOGsmJammingStatus_ != null) {
/* 56465 */             this
/* 56466 */               .iOGsmJammingStatus_ = DolphinConfig.IO.newBuilder(this.iOGsmJammingStatus_).mergeFrom(value).buildPartial();
/*       */           } else {
/* 56468 */             this.iOGsmJammingStatus_ = value;
/*       */           } 
/* 56470 */           onChanged();
/*       */         } else {
/* 56472 */           this.iOGsmJammingStatusBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         
/* 56475 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearIOGsmJammingStatus() {
/* 56481 */         if (this.iOGsmJammingStatusBuilder_ == null) {
/* 56482 */           this.iOGsmJammingStatus_ = null;
/* 56483 */           onChanged();
/*       */         } else {
/* 56485 */           this.iOGsmJammingStatus_ = null;
/* 56486 */           this.iOGsmJammingStatusBuilder_ = null;
/*       */         } 
/*       */         
/* 56489 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOGsmJammingStatusBuilder() {
/* 56496 */         onChanged();
/* 56497 */         return (DolphinConfig.IO.Builder)getIOGsmJammingStatusFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOGsmJammingStatusOrBuilder() {
/* 56503 */         if (this.iOGsmJammingStatusBuilder_ != null) {
/* 56504 */           return (DolphinConfig.IOOrBuilder)this.iOGsmJammingStatusBuilder_.getMessageOrBuilder();
/*       */         }
/* 56506 */         return (this.iOGsmJammingStatus_ == null) ? 
/* 56507 */           DolphinConfig.IO.getDefaultInstance() : this.iOGsmJammingStatus_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOGsmJammingStatusFieldBuilder() {
/* 56516 */         if (this.iOGsmJammingStatusBuilder_ == null) {
/* 56517 */           this
/*       */ 
/*       */ 
/*       */             
/* 56521 */             .iOGsmJammingStatusBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOGsmJammingStatus(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/* 56522 */           this.iOGsmJammingStatus_ = null;
/*       */         } 
/* 56524 */         return this.iOGsmJammingStatusBuilder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasIOExternalVoltage() {
/* 56535 */         return (this.iOExternalVoltageBuilder_ != null || this.iOExternalVoltage_ != null);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO getIOExternalVoltage() {
/* 56542 */         if (this.iOExternalVoltageBuilder_ == null) {
/* 56543 */           return (this.iOExternalVoltage_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOExternalVoltage_;
/*       */         }
/* 56545 */         return (DolphinConfig.IO)this.iOExternalVoltageBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOExternalVoltage(DolphinConfig.IO value) {
/* 56552 */         if (this.iOExternalVoltageBuilder_ == null) {
/* 56553 */           if (value == null) {
/* 56554 */             throw new NullPointerException();
/*       */           }
/* 56556 */           this.iOExternalVoltage_ = value;
/* 56557 */           onChanged();
/*       */         } else {
/* 56559 */           this.iOExternalVoltageBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         
/* 56562 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOExternalVoltage(DolphinConfig.IO.Builder builderForValue) {
/* 56569 */         if (this.iOExternalVoltageBuilder_ == null) {
/* 56570 */           this.iOExternalVoltage_ = builderForValue.build();
/* 56571 */           onChanged();
/*       */         } else {
/* 56573 */           this.iOExternalVoltageBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         
/* 56576 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeIOExternalVoltage(DolphinConfig.IO value) {
/* 56582 */         if (this.iOExternalVoltageBuilder_ == null) {
/* 56583 */           if (this.iOExternalVoltage_ != null) {
/* 56584 */             this
/* 56585 */               .iOExternalVoltage_ = DolphinConfig.IO.newBuilder(this.iOExternalVoltage_).mergeFrom(value).buildPartial();
/*       */           } else {
/* 56587 */             this.iOExternalVoltage_ = value;
/*       */           } 
/* 56589 */           onChanged();
/*       */         } else {
/* 56591 */           this.iOExternalVoltageBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         
/* 56594 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearIOExternalVoltage() {
/* 56600 */         if (this.iOExternalVoltageBuilder_ == null) {
/* 56601 */           this.iOExternalVoltage_ = null;
/* 56602 */           onChanged();
/*       */         } else {
/* 56604 */           this.iOExternalVoltage_ = null;
/* 56605 */           this.iOExternalVoltageBuilder_ = null;
/*       */         } 
/*       */         
/* 56608 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOExternalVoltageBuilder() {
/* 56615 */         onChanged();
/* 56616 */         return (DolphinConfig.IO.Builder)getIOExternalVoltageFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOExternalVoltageOrBuilder() {
/* 56622 */         if (this.iOExternalVoltageBuilder_ != null) {
/* 56623 */           return (DolphinConfig.IOOrBuilder)this.iOExternalVoltageBuilder_.getMessageOrBuilder();
/*       */         }
/* 56625 */         return (this.iOExternalVoltage_ == null) ? 
/* 56626 */           DolphinConfig.IO.getDefaultInstance() : this.iOExternalVoltage_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOExternalVoltageFieldBuilder() {
/* 56635 */         if (this.iOExternalVoltageBuilder_ == null) {
/* 56636 */           this
/*       */ 
/*       */ 
/*       */             
/* 56640 */             .iOExternalVoltageBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOExternalVoltage(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/* 56641 */           this.iOExternalVoltage_ = null;
/*       */         } 
/* 56643 */         return this.iOExternalVoltageBuilder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasIOBatteryVoltage() {
/* 56654 */         return (this.iOBatteryVoltageBuilder_ != null || this.iOBatteryVoltage_ != null);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO getIOBatteryVoltage() {
/* 56661 */         if (this.iOBatteryVoltageBuilder_ == null) {
/* 56662 */           return (this.iOBatteryVoltage_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOBatteryVoltage_;
/*       */         }
/* 56664 */         return (DolphinConfig.IO)this.iOBatteryVoltageBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOBatteryVoltage(DolphinConfig.IO value) {
/* 56671 */         if (this.iOBatteryVoltageBuilder_ == null) {
/* 56672 */           if (value == null) {
/* 56673 */             throw new NullPointerException();
/*       */           }
/* 56675 */           this.iOBatteryVoltage_ = value;
/* 56676 */           onChanged();
/*       */         } else {
/* 56678 */           this.iOBatteryVoltageBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         
/* 56681 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOBatteryVoltage(DolphinConfig.IO.Builder builderForValue) {
/* 56688 */         if (this.iOBatteryVoltageBuilder_ == null) {
/* 56689 */           this.iOBatteryVoltage_ = builderForValue.build();
/* 56690 */           onChanged();
/*       */         } else {
/* 56692 */           this.iOBatteryVoltageBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         
/* 56695 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeIOBatteryVoltage(DolphinConfig.IO value) {
/* 56701 */         if (this.iOBatteryVoltageBuilder_ == null) {
/* 56702 */           if (this.iOBatteryVoltage_ != null) {
/* 56703 */             this
/* 56704 */               .iOBatteryVoltage_ = DolphinConfig.IO.newBuilder(this.iOBatteryVoltage_).mergeFrom(value).buildPartial();
/*       */           } else {
/* 56706 */             this.iOBatteryVoltage_ = value;
/*       */           } 
/* 56708 */           onChanged();
/*       */         } else {
/* 56710 */           this.iOBatteryVoltageBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         
/* 56713 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearIOBatteryVoltage() {
/* 56719 */         if (this.iOBatteryVoltageBuilder_ == null) {
/* 56720 */           this.iOBatteryVoltage_ = null;
/* 56721 */           onChanged();
/*       */         } else {
/* 56723 */           this.iOBatteryVoltage_ = null;
/* 56724 */           this.iOBatteryVoltageBuilder_ = null;
/*       */         } 
/*       */         
/* 56727 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOBatteryVoltageBuilder() {
/* 56734 */         onChanged();
/* 56735 */         return (DolphinConfig.IO.Builder)getIOBatteryVoltageFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOBatteryVoltageOrBuilder() {
/* 56741 */         if (this.iOBatteryVoltageBuilder_ != null) {
/* 56742 */           return (DolphinConfig.IOOrBuilder)this.iOBatteryVoltageBuilder_.getMessageOrBuilder();
/*       */         }
/* 56744 */         return (this.iOBatteryVoltage_ == null) ? 
/* 56745 */           DolphinConfig.IO.getDefaultInstance() : this.iOBatteryVoltage_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOBatteryVoltageFieldBuilder() {
/* 56754 */         if (this.iOBatteryVoltageBuilder_ == null) {
/* 56755 */           this
/*       */ 
/*       */ 
/*       */             
/* 56759 */             .iOBatteryVoltageBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOBatteryVoltage(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/* 56760 */           this.iOBatteryVoltage_ = null;
/*       */         } 
/* 56762 */         return this.iOBatteryVoltageBuilder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasIOBatteryCurrent() {
/* 56773 */         return (this.iOBatteryCurrentBuilder_ != null || this.iOBatteryCurrent_ != null);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO getIOBatteryCurrent() {
/* 56780 */         if (this.iOBatteryCurrentBuilder_ == null) {
/* 56781 */           return (this.iOBatteryCurrent_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOBatteryCurrent_;
/*       */         }
/* 56783 */         return (DolphinConfig.IO)this.iOBatteryCurrentBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOBatteryCurrent(DolphinConfig.IO value) {
/* 56790 */         if (this.iOBatteryCurrentBuilder_ == null) {
/* 56791 */           if (value == null) {
/* 56792 */             throw new NullPointerException();
/*       */           }
/* 56794 */           this.iOBatteryCurrent_ = value;
/* 56795 */           onChanged();
/*       */         } else {
/* 56797 */           this.iOBatteryCurrentBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         
/* 56800 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOBatteryCurrent(DolphinConfig.IO.Builder builderForValue) {
/* 56807 */         if (this.iOBatteryCurrentBuilder_ == null) {
/* 56808 */           this.iOBatteryCurrent_ = builderForValue.build();
/* 56809 */           onChanged();
/*       */         } else {
/* 56811 */           this.iOBatteryCurrentBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         
/* 56814 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeIOBatteryCurrent(DolphinConfig.IO value) {
/* 56820 */         if (this.iOBatteryCurrentBuilder_ == null) {
/* 56821 */           if (this.iOBatteryCurrent_ != null) {
/* 56822 */             this
/* 56823 */               .iOBatteryCurrent_ = DolphinConfig.IO.newBuilder(this.iOBatteryCurrent_).mergeFrom(value).buildPartial();
/*       */           } else {
/* 56825 */             this.iOBatteryCurrent_ = value;
/*       */           } 
/* 56827 */           onChanged();
/*       */         } else {
/* 56829 */           this.iOBatteryCurrentBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         
/* 56832 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearIOBatteryCurrent() {
/* 56838 */         if (this.iOBatteryCurrentBuilder_ == null) {
/* 56839 */           this.iOBatteryCurrent_ = null;
/* 56840 */           onChanged();
/*       */         } else {
/* 56842 */           this.iOBatteryCurrent_ = null;
/* 56843 */           this.iOBatteryCurrentBuilder_ = null;
/*       */         } 
/*       */         
/* 56846 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOBatteryCurrentBuilder() {
/* 56853 */         onChanged();
/* 56854 */         return (DolphinConfig.IO.Builder)getIOBatteryCurrentFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOBatteryCurrentOrBuilder() {
/* 56860 */         if (this.iOBatteryCurrentBuilder_ != null) {
/* 56861 */           return (DolphinConfig.IOOrBuilder)this.iOBatteryCurrentBuilder_.getMessageOrBuilder();
/*       */         }
/* 56863 */         return (this.iOBatteryCurrent_ == null) ? 
/* 56864 */           DolphinConfig.IO.getDefaultInstance() : this.iOBatteryCurrent_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOBatteryCurrentFieldBuilder() {
/* 56873 */         if (this.iOBatteryCurrentBuilder_ == null) {
/* 56874 */           this
/*       */ 
/*       */ 
/*       */             
/* 56878 */             .iOBatteryCurrentBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOBatteryCurrent(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/* 56879 */           this.iOBatteryCurrent_ = null;
/*       */         } 
/* 56881 */         return this.iOBatteryCurrentBuilder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasIOTotalOdometer() {
/* 56892 */         return (this.iOTotalOdometerBuilder_ != null || this.iOTotalOdometer_ != null);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO getIOTotalOdometer() {
/* 56899 */         if (this.iOTotalOdometerBuilder_ == null) {
/* 56900 */           return (this.iOTotalOdometer_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOTotalOdometer_;
/*       */         }
/* 56902 */         return (DolphinConfig.IO)this.iOTotalOdometerBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOTotalOdometer(DolphinConfig.IO value) {
/* 56909 */         if (this.iOTotalOdometerBuilder_ == null) {
/* 56910 */           if (value == null) {
/* 56911 */             throw new NullPointerException();
/*       */           }
/* 56913 */           this.iOTotalOdometer_ = value;
/* 56914 */           onChanged();
/*       */         } else {
/* 56916 */           this.iOTotalOdometerBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         
/* 56919 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOTotalOdometer(DolphinConfig.IO.Builder builderForValue) {
/* 56926 */         if (this.iOTotalOdometerBuilder_ == null) {
/* 56927 */           this.iOTotalOdometer_ = builderForValue.build();
/* 56928 */           onChanged();
/*       */         } else {
/* 56930 */           this.iOTotalOdometerBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         
/* 56933 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeIOTotalOdometer(DolphinConfig.IO value) {
/* 56939 */         if (this.iOTotalOdometerBuilder_ == null) {
/* 56940 */           if (this.iOTotalOdometer_ != null) {
/* 56941 */             this
/* 56942 */               .iOTotalOdometer_ = DolphinConfig.IO.newBuilder(this.iOTotalOdometer_).mergeFrom(value).buildPartial();
/*       */           } else {
/* 56944 */             this.iOTotalOdometer_ = value;
/*       */           } 
/* 56946 */           onChanged();
/*       */         } else {
/* 56948 */           this.iOTotalOdometerBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         
/* 56951 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearIOTotalOdometer() {
/* 56957 */         if (this.iOTotalOdometerBuilder_ == null) {
/* 56958 */           this.iOTotalOdometer_ = null;
/* 56959 */           onChanged();
/*       */         } else {
/* 56961 */           this.iOTotalOdometer_ = null;
/* 56962 */           this.iOTotalOdometerBuilder_ = null;
/*       */         } 
/*       */         
/* 56965 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOTotalOdometerBuilder() {
/* 56972 */         onChanged();
/* 56973 */         return (DolphinConfig.IO.Builder)getIOTotalOdometerFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOTotalOdometerOrBuilder() {
/* 56979 */         if (this.iOTotalOdometerBuilder_ != null) {
/* 56980 */           return (DolphinConfig.IOOrBuilder)this.iOTotalOdometerBuilder_.getMessageOrBuilder();
/*       */         }
/* 56982 */         return (this.iOTotalOdometer_ == null) ? 
/* 56983 */           DolphinConfig.IO.getDefaultInstance() : this.iOTotalOdometer_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOTotalOdometerFieldBuilder() {
/* 56992 */         if (this.iOTotalOdometerBuilder_ == null) {
/* 56993 */           this
/*       */ 
/*       */ 
/*       */             
/* 56997 */             .iOTotalOdometerBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOTotalOdometer(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/* 56998 */           this.iOTotalOdometer_ = null;
/*       */         } 
/* 57000 */         return this.iOTotalOdometerBuilder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasIOOdometer() {
/* 57011 */         return (this.iOOdometerBuilder_ != null || this.iOOdometer_ != null);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO getIOOdometer() {
/* 57018 */         if (this.iOOdometerBuilder_ == null) {
/* 57019 */           return (this.iOOdometer_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOOdometer_;
/*       */         }
/* 57021 */         return (DolphinConfig.IO)this.iOOdometerBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOOdometer(DolphinConfig.IO value) {
/* 57028 */         if (this.iOOdometerBuilder_ == null) {
/* 57029 */           if (value == null) {
/* 57030 */             throw new NullPointerException();
/*       */           }
/* 57032 */           this.iOOdometer_ = value;
/* 57033 */           onChanged();
/*       */         } else {
/* 57035 */           this.iOOdometerBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         
/* 57038 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOOdometer(DolphinConfig.IO.Builder builderForValue) {
/* 57045 */         if (this.iOOdometerBuilder_ == null) {
/* 57046 */           this.iOOdometer_ = builderForValue.build();
/* 57047 */           onChanged();
/*       */         } else {
/* 57049 */           this.iOOdometerBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         
/* 57052 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeIOOdometer(DolphinConfig.IO value) {
/* 57058 */         if (this.iOOdometerBuilder_ == null) {
/* 57059 */           if (this.iOOdometer_ != null) {
/* 57060 */             this
/* 57061 */               .iOOdometer_ = DolphinConfig.IO.newBuilder(this.iOOdometer_).mergeFrom(value).buildPartial();
/*       */           } else {
/* 57063 */             this.iOOdometer_ = value;
/*       */           } 
/* 57065 */           onChanged();
/*       */         } else {
/* 57067 */           this.iOOdometerBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         
/* 57070 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearIOOdometer() {
/* 57076 */         if (this.iOOdometerBuilder_ == null) {
/* 57077 */           this.iOOdometer_ = null;
/* 57078 */           onChanged();
/*       */         } else {
/* 57080 */           this.iOOdometer_ = null;
/* 57081 */           this.iOOdometerBuilder_ = null;
/*       */         } 
/*       */         
/* 57084 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOOdometerBuilder() {
/* 57091 */         onChanged();
/* 57092 */         return (DolphinConfig.IO.Builder)getIOOdometerFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOOdometerOrBuilder() {
/* 57098 */         if (this.iOOdometerBuilder_ != null) {
/* 57099 */           return (DolphinConfig.IOOrBuilder)this.iOOdometerBuilder_.getMessageOrBuilder();
/*       */         }
/* 57101 */         return (this.iOOdometer_ == null) ? 
/* 57102 */           DolphinConfig.IO.getDefaultInstance() : this.iOOdometer_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOOdometerFieldBuilder() {
/* 57111 */         if (this.iOOdometerBuilder_ == null) {
/* 57112 */           this
/*       */ 
/*       */ 
/*       */             
/* 57116 */             .iOOdometerBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOOdometer(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/* 57117 */           this.iOOdometer_ = null;
/*       */         } 
/* 57119 */         return this.iOOdometerBuilder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasIOEngineOnTime() {
/* 57130 */         return (this.iOEngineOnTimeBuilder_ != null || this.iOEngineOnTime_ != null);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO getIOEngineOnTime() {
/* 57137 */         if (this.iOEngineOnTimeBuilder_ == null) {
/* 57138 */           return (this.iOEngineOnTime_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOEngineOnTime_;
/*       */         }
/* 57140 */         return (DolphinConfig.IO)this.iOEngineOnTimeBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOEngineOnTime(DolphinConfig.IO value) {
/* 57147 */         if (this.iOEngineOnTimeBuilder_ == null) {
/* 57148 */           if (value == null) {
/* 57149 */             throw new NullPointerException();
/*       */           }
/* 57151 */           this.iOEngineOnTime_ = value;
/* 57152 */           onChanged();
/*       */         } else {
/* 57154 */           this.iOEngineOnTimeBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         
/* 57157 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOEngineOnTime(DolphinConfig.IO.Builder builderForValue) {
/* 57164 */         if (this.iOEngineOnTimeBuilder_ == null) {
/* 57165 */           this.iOEngineOnTime_ = builderForValue.build();
/* 57166 */           onChanged();
/*       */         } else {
/* 57168 */           this.iOEngineOnTimeBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         
/* 57171 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeIOEngineOnTime(DolphinConfig.IO value) {
/* 57177 */         if (this.iOEngineOnTimeBuilder_ == null) {
/* 57178 */           if (this.iOEngineOnTime_ != null) {
/* 57179 */             this
/* 57180 */               .iOEngineOnTime_ = DolphinConfig.IO.newBuilder(this.iOEngineOnTime_).mergeFrom(value).buildPartial();
/*       */           } else {
/* 57182 */             this.iOEngineOnTime_ = value;
/*       */           } 
/* 57184 */           onChanged();
/*       */         } else {
/* 57186 */           this.iOEngineOnTimeBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         
/* 57189 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearIOEngineOnTime() {
/* 57195 */         if (this.iOEngineOnTimeBuilder_ == null) {
/* 57196 */           this.iOEngineOnTime_ = null;
/* 57197 */           onChanged();
/*       */         } else {
/* 57199 */           this.iOEngineOnTime_ = null;
/* 57200 */           this.iOEngineOnTimeBuilder_ = null;
/*       */         } 
/*       */         
/* 57203 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOEngineOnTimeBuilder() {
/* 57210 */         onChanged();
/* 57211 */         return (DolphinConfig.IO.Builder)getIOEngineOnTimeFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOEngineOnTimeOrBuilder() {
/* 57217 */         if (this.iOEngineOnTimeBuilder_ != null) {
/* 57218 */           return (DolphinConfig.IOOrBuilder)this.iOEngineOnTimeBuilder_.getMessageOrBuilder();
/*       */         }
/* 57220 */         return (this.iOEngineOnTime_ == null) ? 
/* 57221 */           DolphinConfig.IO.getDefaultInstance() : this.iOEngineOnTime_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOEngineOnTimeFieldBuilder() {
/* 57230 */         if (this.iOEngineOnTimeBuilder_ == null) {
/* 57231 */           this
/*       */ 
/*       */ 
/*       */             
/* 57235 */             .iOEngineOnTimeBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOEngineOnTime(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/* 57236 */           this.iOEngineOnTime_ = null;
/*       */         } 
/* 57238 */         return this.iOEngineOnTimeBuilder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasIOEngineOnTimeDelta() {
/* 57249 */         return (this.iOEngineOnTimeDeltaBuilder_ != null || this.iOEngineOnTimeDelta_ != null);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO getIOEngineOnTimeDelta() {
/* 57256 */         if (this.iOEngineOnTimeDeltaBuilder_ == null) {
/* 57257 */           return (this.iOEngineOnTimeDelta_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOEngineOnTimeDelta_;
/*       */         }
/* 57259 */         return (DolphinConfig.IO)this.iOEngineOnTimeDeltaBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOEngineOnTimeDelta(DolphinConfig.IO value) {
/* 57266 */         if (this.iOEngineOnTimeDeltaBuilder_ == null) {
/* 57267 */           if (value == null) {
/* 57268 */             throw new NullPointerException();
/*       */           }
/* 57270 */           this.iOEngineOnTimeDelta_ = value;
/* 57271 */           onChanged();
/*       */         } else {
/* 57273 */           this.iOEngineOnTimeDeltaBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         
/* 57276 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOEngineOnTimeDelta(DolphinConfig.IO.Builder builderForValue) {
/* 57283 */         if (this.iOEngineOnTimeDeltaBuilder_ == null) {
/* 57284 */           this.iOEngineOnTimeDelta_ = builderForValue.build();
/* 57285 */           onChanged();
/*       */         } else {
/* 57287 */           this.iOEngineOnTimeDeltaBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         
/* 57290 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeIOEngineOnTimeDelta(DolphinConfig.IO value) {
/* 57296 */         if (this.iOEngineOnTimeDeltaBuilder_ == null) {
/* 57297 */           if (this.iOEngineOnTimeDelta_ != null) {
/* 57298 */             this
/* 57299 */               .iOEngineOnTimeDelta_ = DolphinConfig.IO.newBuilder(this.iOEngineOnTimeDelta_).mergeFrom(value).buildPartial();
/*       */           } else {
/* 57301 */             this.iOEngineOnTimeDelta_ = value;
/*       */           } 
/* 57303 */           onChanged();
/*       */         } else {
/* 57305 */           this.iOEngineOnTimeDeltaBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         
/* 57308 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearIOEngineOnTimeDelta() {
/* 57314 */         if (this.iOEngineOnTimeDeltaBuilder_ == null) {
/* 57315 */           this.iOEngineOnTimeDelta_ = null;
/* 57316 */           onChanged();
/*       */         } else {
/* 57318 */           this.iOEngineOnTimeDelta_ = null;
/* 57319 */           this.iOEngineOnTimeDeltaBuilder_ = null;
/*       */         } 
/*       */         
/* 57322 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOEngineOnTimeDeltaBuilder() {
/* 57329 */         onChanged();
/* 57330 */         return (DolphinConfig.IO.Builder)getIOEngineOnTimeDeltaFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOEngineOnTimeDeltaOrBuilder() {
/* 57336 */         if (this.iOEngineOnTimeDeltaBuilder_ != null) {
/* 57337 */           return (DolphinConfig.IOOrBuilder)this.iOEngineOnTimeDeltaBuilder_.getMessageOrBuilder();
/*       */         }
/* 57339 */         return (this.iOEngineOnTimeDelta_ == null) ? 
/* 57340 */           DolphinConfig.IO.getDefaultInstance() : this.iOEngineOnTimeDelta_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOEngineOnTimeDeltaFieldBuilder() {
/* 57349 */         if (this.iOEngineOnTimeDeltaBuilder_ == null) {
/* 57350 */           this
/*       */ 
/*       */ 
/*       */             
/* 57354 */             .iOEngineOnTimeDeltaBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOEngineOnTimeDelta(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/* 57355 */           this.iOEngineOnTimeDelta_ = null;
/*       */         } 
/* 57357 */         return this.iOEngineOnTimeDeltaBuilder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasIOIdlingTime() {
/* 57368 */         return (this.iOIdlingTimeBuilder_ != null || this.iOIdlingTime_ != null);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO getIOIdlingTime() {
/* 57375 */         if (this.iOIdlingTimeBuilder_ == null) {
/* 57376 */           return (this.iOIdlingTime_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOIdlingTime_;
/*       */         }
/* 57378 */         return (DolphinConfig.IO)this.iOIdlingTimeBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOIdlingTime(DolphinConfig.IO value) {
/* 57385 */         if (this.iOIdlingTimeBuilder_ == null) {
/* 57386 */           if (value == null) {
/* 57387 */             throw new NullPointerException();
/*       */           }
/* 57389 */           this.iOIdlingTime_ = value;
/* 57390 */           onChanged();
/*       */         } else {
/* 57392 */           this.iOIdlingTimeBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         
/* 57395 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOIdlingTime(DolphinConfig.IO.Builder builderForValue) {
/* 57402 */         if (this.iOIdlingTimeBuilder_ == null) {
/* 57403 */           this.iOIdlingTime_ = builderForValue.build();
/* 57404 */           onChanged();
/*       */         } else {
/* 57406 */           this.iOIdlingTimeBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         
/* 57409 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeIOIdlingTime(DolphinConfig.IO value) {
/* 57415 */         if (this.iOIdlingTimeBuilder_ == null) {
/* 57416 */           if (this.iOIdlingTime_ != null) {
/* 57417 */             this
/* 57418 */               .iOIdlingTime_ = DolphinConfig.IO.newBuilder(this.iOIdlingTime_).mergeFrom(value).buildPartial();
/*       */           } else {
/* 57420 */             this.iOIdlingTime_ = value;
/*       */           } 
/* 57422 */           onChanged();
/*       */         } else {
/* 57424 */           this.iOIdlingTimeBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         
/* 57427 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearIOIdlingTime() {
/* 57433 */         if (this.iOIdlingTimeBuilder_ == null) {
/* 57434 */           this.iOIdlingTime_ = null;
/* 57435 */           onChanged();
/*       */         } else {
/* 57437 */           this.iOIdlingTime_ = null;
/* 57438 */           this.iOIdlingTimeBuilder_ = null;
/*       */         } 
/*       */         
/* 57441 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOIdlingTimeBuilder() {
/* 57448 */         onChanged();
/* 57449 */         return (DolphinConfig.IO.Builder)getIOIdlingTimeFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOIdlingTimeOrBuilder() {
/* 57455 */         if (this.iOIdlingTimeBuilder_ != null) {
/* 57456 */           return (DolphinConfig.IOOrBuilder)this.iOIdlingTimeBuilder_.getMessageOrBuilder();
/*       */         }
/* 57458 */         return (this.iOIdlingTime_ == null) ? 
/* 57459 */           DolphinConfig.IO.getDefaultInstance() : this.iOIdlingTime_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOIdlingTimeFieldBuilder() {
/* 57468 */         if (this.iOIdlingTimeBuilder_ == null) {
/* 57469 */           this
/*       */ 
/*       */ 
/*       */             
/* 57473 */             .iOIdlingTimeBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOIdlingTime(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/* 57474 */           this.iOIdlingTime_ = null;
/*       */         } 
/* 57476 */         return this.iOIdlingTimeBuilder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasIOIdlingTimeDelta() {
/* 57487 */         return (this.iOIdlingTimeDeltaBuilder_ != null || this.iOIdlingTimeDelta_ != null);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO getIOIdlingTimeDelta() {
/* 57494 */         if (this.iOIdlingTimeDeltaBuilder_ == null) {
/* 57495 */           return (this.iOIdlingTimeDelta_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOIdlingTimeDelta_;
/*       */         }
/* 57497 */         return (DolphinConfig.IO)this.iOIdlingTimeDeltaBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOIdlingTimeDelta(DolphinConfig.IO value) {
/* 57504 */         if (this.iOIdlingTimeDeltaBuilder_ == null) {
/* 57505 */           if (value == null) {
/* 57506 */             throw new NullPointerException();
/*       */           }
/* 57508 */           this.iOIdlingTimeDelta_ = value;
/* 57509 */           onChanged();
/*       */         } else {
/* 57511 */           this.iOIdlingTimeDeltaBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         
/* 57514 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOIdlingTimeDelta(DolphinConfig.IO.Builder builderForValue) {
/* 57521 */         if (this.iOIdlingTimeDeltaBuilder_ == null) {
/* 57522 */           this.iOIdlingTimeDelta_ = builderForValue.build();
/* 57523 */           onChanged();
/*       */         } else {
/* 57525 */           this.iOIdlingTimeDeltaBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         
/* 57528 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeIOIdlingTimeDelta(DolphinConfig.IO value) {
/* 57534 */         if (this.iOIdlingTimeDeltaBuilder_ == null) {
/* 57535 */           if (this.iOIdlingTimeDelta_ != null) {
/* 57536 */             this
/* 57537 */               .iOIdlingTimeDelta_ = DolphinConfig.IO.newBuilder(this.iOIdlingTimeDelta_).mergeFrom(value).buildPartial();
/*       */           } else {
/* 57539 */             this.iOIdlingTimeDelta_ = value;
/*       */           } 
/* 57541 */           onChanged();
/*       */         } else {
/* 57543 */           this.iOIdlingTimeDeltaBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         
/* 57546 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearIOIdlingTimeDelta() {
/* 57552 */         if (this.iOIdlingTimeDeltaBuilder_ == null) {
/* 57553 */           this.iOIdlingTimeDelta_ = null;
/* 57554 */           onChanged();
/*       */         } else {
/* 57556 */           this.iOIdlingTimeDelta_ = null;
/* 57557 */           this.iOIdlingTimeDeltaBuilder_ = null;
/*       */         } 
/*       */         
/* 57560 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOIdlingTimeDeltaBuilder() {
/* 57567 */         onChanged();
/* 57568 */         return (DolphinConfig.IO.Builder)getIOIdlingTimeDeltaFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOIdlingTimeDeltaOrBuilder() {
/* 57574 */         if (this.iOIdlingTimeDeltaBuilder_ != null) {
/* 57575 */           return (DolphinConfig.IOOrBuilder)this.iOIdlingTimeDeltaBuilder_.getMessageOrBuilder();
/*       */         }
/* 57577 */         return (this.iOIdlingTimeDelta_ == null) ? 
/* 57578 */           DolphinConfig.IO.getDefaultInstance() : this.iOIdlingTimeDelta_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOIdlingTimeDeltaFieldBuilder() {
/* 57587 */         if (this.iOIdlingTimeDeltaBuilder_ == null) {
/* 57588 */           this
/*       */ 
/*       */ 
/*       */             
/* 57592 */             .iOIdlingTimeDeltaBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOIdlingTimeDelta(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/* 57593 */           this.iOIdlingTimeDelta_ = null;
/*       */         } 
/* 57595 */         return this.iOIdlingTimeDeltaBuilder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasIOSpeedSensorSpeed() {
/* 57606 */         return (this.iOSpeedSensorSpeedBuilder_ != null || this.iOSpeedSensorSpeed_ != null);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO getIOSpeedSensorSpeed() {
/* 57613 */         if (this.iOSpeedSensorSpeedBuilder_ == null) {
/* 57614 */           return (this.iOSpeedSensorSpeed_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOSpeedSensorSpeed_;
/*       */         }
/* 57616 */         return (DolphinConfig.IO)this.iOSpeedSensorSpeedBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOSpeedSensorSpeed(DolphinConfig.IO value) {
/* 57623 */         if (this.iOSpeedSensorSpeedBuilder_ == null) {
/* 57624 */           if (value == null) {
/* 57625 */             throw new NullPointerException();
/*       */           }
/* 57627 */           this.iOSpeedSensorSpeed_ = value;
/* 57628 */           onChanged();
/*       */         } else {
/* 57630 */           this.iOSpeedSensorSpeedBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         
/* 57633 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOSpeedSensorSpeed(DolphinConfig.IO.Builder builderForValue) {
/* 57640 */         if (this.iOSpeedSensorSpeedBuilder_ == null) {
/* 57641 */           this.iOSpeedSensorSpeed_ = builderForValue.build();
/* 57642 */           onChanged();
/*       */         } else {
/* 57644 */           this.iOSpeedSensorSpeedBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         
/* 57647 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeIOSpeedSensorSpeed(DolphinConfig.IO value) {
/* 57653 */         if (this.iOSpeedSensorSpeedBuilder_ == null) {
/* 57654 */           if (this.iOSpeedSensorSpeed_ != null) {
/* 57655 */             this
/* 57656 */               .iOSpeedSensorSpeed_ = DolphinConfig.IO.newBuilder(this.iOSpeedSensorSpeed_).mergeFrom(value).buildPartial();
/*       */           } else {
/* 57658 */             this.iOSpeedSensorSpeed_ = value;
/*       */           } 
/* 57660 */           onChanged();
/*       */         } else {
/* 57662 */           this.iOSpeedSensorSpeedBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         
/* 57665 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearIOSpeedSensorSpeed() {
/* 57671 */         if (this.iOSpeedSensorSpeedBuilder_ == null) {
/* 57672 */           this.iOSpeedSensorSpeed_ = null;
/* 57673 */           onChanged();
/*       */         } else {
/* 57675 */           this.iOSpeedSensorSpeed_ = null;
/* 57676 */           this.iOSpeedSensorSpeedBuilder_ = null;
/*       */         } 
/*       */         
/* 57679 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOSpeedSensorSpeedBuilder() {
/* 57686 */         onChanged();
/* 57687 */         return (DolphinConfig.IO.Builder)getIOSpeedSensorSpeedFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOSpeedSensorSpeedOrBuilder() {
/* 57693 */         if (this.iOSpeedSensorSpeedBuilder_ != null) {
/* 57694 */           return (DolphinConfig.IOOrBuilder)this.iOSpeedSensorSpeedBuilder_.getMessageOrBuilder();
/*       */         }
/* 57696 */         return (this.iOSpeedSensorSpeed_ == null) ? 
/* 57697 */           DolphinConfig.IO.getDefaultInstance() : this.iOSpeedSensorSpeed_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOSpeedSensorSpeedFieldBuilder() {
/* 57706 */         if (this.iOSpeedSensorSpeedBuilder_ == null) {
/* 57707 */           this
/*       */ 
/*       */ 
/*       */             
/* 57711 */             .iOSpeedSensorSpeedBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOSpeedSensorSpeed(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/* 57712 */           this.iOSpeedSensorSpeed_ = null;
/*       */         } 
/* 57714 */         return this.iOSpeedSensorSpeedBuilder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasIOSpeedSensorDistance() {
/* 57725 */         return (this.iOSpeedSensorDistanceBuilder_ != null || this.iOSpeedSensorDistance_ != null);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO getIOSpeedSensorDistance() {
/* 57732 */         if (this.iOSpeedSensorDistanceBuilder_ == null) {
/* 57733 */           return (this.iOSpeedSensorDistance_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOSpeedSensorDistance_;
/*       */         }
/* 57735 */         return (DolphinConfig.IO)this.iOSpeedSensorDistanceBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOSpeedSensorDistance(DolphinConfig.IO value) {
/* 57742 */         if (this.iOSpeedSensorDistanceBuilder_ == null) {
/* 57743 */           if (value == null) {
/* 57744 */             throw new NullPointerException();
/*       */           }
/* 57746 */           this.iOSpeedSensorDistance_ = value;
/* 57747 */           onChanged();
/*       */         } else {
/* 57749 */           this.iOSpeedSensorDistanceBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         
/* 57752 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOSpeedSensorDistance(DolphinConfig.IO.Builder builderForValue) {
/* 57759 */         if (this.iOSpeedSensorDistanceBuilder_ == null) {
/* 57760 */           this.iOSpeedSensorDistance_ = builderForValue.build();
/* 57761 */           onChanged();
/*       */         } else {
/* 57763 */           this.iOSpeedSensorDistanceBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         
/* 57766 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeIOSpeedSensorDistance(DolphinConfig.IO value) {
/* 57772 */         if (this.iOSpeedSensorDistanceBuilder_ == null) {
/* 57773 */           if (this.iOSpeedSensorDistance_ != null) {
/* 57774 */             this
/* 57775 */               .iOSpeedSensorDistance_ = DolphinConfig.IO.newBuilder(this.iOSpeedSensorDistance_).mergeFrom(value).buildPartial();
/*       */           } else {
/* 57777 */             this.iOSpeedSensorDistance_ = value;
/*       */           } 
/* 57779 */           onChanged();
/*       */         } else {
/* 57781 */           this.iOSpeedSensorDistanceBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         
/* 57784 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearIOSpeedSensorDistance() {
/* 57790 */         if (this.iOSpeedSensorDistanceBuilder_ == null) {
/* 57791 */           this.iOSpeedSensorDistance_ = null;
/* 57792 */           onChanged();
/*       */         } else {
/* 57794 */           this.iOSpeedSensorDistance_ = null;
/* 57795 */           this.iOSpeedSensorDistanceBuilder_ = null;
/*       */         } 
/*       */         
/* 57798 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOSpeedSensorDistanceBuilder() {
/* 57805 */         onChanged();
/* 57806 */         return (DolphinConfig.IO.Builder)getIOSpeedSensorDistanceFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOSpeedSensorDistanceOrBuilder() {
/* 57812 */         if (this.iOSpeedSensorDistanceBuilder_ != null) {
/* 57813 */           return (DolphinConfig.IOOrBuilder)this.iOSpeedSensorDistanceBuilder_.getMessageOrBuilder();
/*       */         }
/* 57815 */         return (this.iOSpeedSensorDistance_ == null) ? 
/* 57816 */           DolphinConfig.IO.getDefaultInstance() : this.iOSpeedSensorDistance_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOSpeedSensorDistanceFieldBuilder() {
/* 57825 */         if (this.iOSpeedSensorDistanceBuilder_ == null) {
/* 57826 */           this
/*       */ 
/*       */ 
/*       */             
/* 57830 */             .iOSpeedSensorDistanceBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOSpeedSensorDistance(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/* 57831 */           this.iOSpeedSensorDistance_ = null;
/*       */         } 
/* 57833 */         return this.iOSpeedSensorDistanceBuilder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasIOSpeedSensorTotalDistance() {
/* 57844 */         return (this.iOSpeedSensorTotalDistanceBuilder_ != null || this.iOSpeedSensorTotalDistance_ != null);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO getIOSpeedSensorTotalDistance() {
/* 57851 */         if (this.iOSpeedSensorTotalDistanceBuilder_ == null) {
/* 57852 */           return (this.iOSpeedSensorTotalDistance_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOSpeedSensorTotalDistance_;
/*       */         }
/* 57854 */         return (DolphinConfig.IO)this.iOSpeedSensorTotalDistanceBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOSpeedSensorTotalDistance(DolphinConfig.IO value) {
/* 57861 */         if (this.iOSpeedSensorTotalDistanceBuilder_ == null) {
/* 57862 */           if (value == null) {
/* 57863 */             throw new NullPointerException();
/*       */           }
/* 57865 */           this.iOSpeedSensorTotalDistance_ = value;
/* 57866 */           onChanged();
/*       */         } else {
/* 57868 */           this.iOSpeedSensorTotalDistanceBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         
/* 57871 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOSpeedSensorTotalDistance(DolphinConfig.IO.Builder builderForValue) {
/* 57878 */         if (this.iOSpeedSensorTotalDistanceBuilder_ == null) {
/* 57879 */           this.iOSpeedSensorTotalDistance_ = builderForValue.build();
/* 57880 */           onChanged();
/*       */         } else {
/* 57882 */           this.iOSpeedSensorTotalDistanceBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         
/* 57885 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeIOSpeedSensorTotalDistance(DolphinConfig.IO value) {
/* 57891 */         if (this.iOSpeedSensorTotalDistanceBuilder_ == null) {
/* 57892 */           if (this.iOSpeedSensorTotalDistance_ != null) {
/* 57893 */             this
/* 57894 */               .iOSpeedSensorTotalDistance_ = DolphinConfig.IO.newBuilder(this.iOSpeedSensorTotalDistance_).mergeFrom(value).buildPartial();
/*       */           } else {
/* 57896 */             this.iOSpeedSensorTotalDistance_ = value;
/*       */           } 
/* 57898 */           onChanged();
/*       */         } else {
/* 57900 */           this.iOSpeedSensorTotalDistanceBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         
/* 57903 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearIOSpeedSensorTotalDistance() {
/* 57909 */         if (this.iOSpeedSensorTotalDistanceBuilder_ == null) {
/* 57910 */           this.iOSpeedSensorTotalDistance_ = null;
/* 57911 */           onChanged();
/*       */         } else {
/* 57913 */           this.iOSpeedSensorTotalDistance_ = null;
/* 57914 */           this.iOSpeedSensorTotalDistanceBuilder_ = null;
/*       */         } 
/*       */         
/* 57917 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOSpeedSensorTotalDistanceBuilder() {
/* 57924 */         onChanged();
/* 57925 */         return (DolphinConfig.IO.Builder)getIOSpeedSensorTotalDistanceFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOSpeedSensorTotalDistanceOrBuilder() {
/* 57931 */         if (this.iOSpeedSensorTotalDistanceBuilder_ != null) {
/* 57932 */           return (DolphinConfig.IOOrBuilder)this.iOSpeedSensorTotalDistanceBuilder_.getMessageOrBuilder();
/*       */         }
/* 57934 */         return (this.iOSpeedSensorTotalDistance_ == null) ? 
/* 57935 */           DolphinConfig.IO.getDefaultInstance() : this.iOSpeedSensorTotalDistance_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOSpeedSensorTotalDistanceFieldBuilder() {
/* 57944 */         if (this.iOSpeedSensorTotalDistanceBuilder_ == null) {
/* 57945 */           this
/*       */ 
/*       */ 
/*       */             
/* 57949 */             .iOSpeedSensorTotalDistanceBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOSpeedSensorTotalDistance(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/* 57950 */           this.iOSpeedSensorTotalDistance_ = null;
/*       */         } 
/* 57952 */         return this.iOSpeedSensorTotalDistanceBuilder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasIOSpeedSensorMaxSpeed() {
/* 57963 */         return (this.iOSpeedSensorMaxSpeedBuilder_ != null || this.iOSpeedSensorMaxSpeed_ != null);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO getIOSpeedSensorMaxSpeed() {
/* 57970 */         if (this.iOSpeedSensorMaxSpeedBuilder_ == null) {
/* 57971 */           return (this.iOSpeedSensorMaxSpeed_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOSpeedSensorMaxSpeed_;
/*       */         }
/* 57973 */         return (DolphinConfig.IO)this.iOSpeedSensorMaxSpeedBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOSpeedSensorMaxSpeed(DolphinConfig.IO value) {
/* 57980 */         if (this.iOSpeedSensorMaxSpeedBuilder_ == null) {
/* 57981 */           if (value == null) {
/* 57982 */             throw new NullPointerException();
/*       */           }
/* 57984 */           this.iOSpeedSensorMaxSpeed_ = value;
/* 57985 */           onChanged();
/*       */         } else {
/* 57987 */           this.iOSpeedSensorMaxSpeedBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         
/* 57990 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOSpeedSensorMaxSpeed(DolphinConfig.IO.Builder builderForValue) {
/* 57997 */         if (this.iOSpeedSensorMaxSpeedBuilder_ == null) {
/* 57998 */           this.iOSpeedSensorMaxSpeed_ = builderForValue.build();
/* 57999 */           onChanged();
/*       */         } else {
/* 58001 */           this.iOSpeedSensorMaxSpeedBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         
/* 58004 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeIOSpeedSensorMaxSpeed(DolphinConfig.IO value) {
/* 58010 */         if (this.iOSpeedSensorMaxSpeedBuilder_ == null) {
/* 58011 */           if (this.iOSpeedSensorMaxSpeed_ != null) {
/* 58012 */             this
/* 58013 */               .iOSpeedSensorMaxSpeed_ = DolphinConfig.IO.newBuilder(this.iOSpeedSensorMaxSpeed_).mergeFrom(value).buildPartial();
/*       */           } else {
/* 58015 */             this.iOSpeedSensorMaxSpeed_ = value;
/*       */           } 
/* 58017 */           onChanged();
/*       */         } else {
/* 58019 */           this.iOSpeedSensorMaxSpeedBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         
/* 58022 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearIOSpeedSensorMaxSpeed() {
/* 58028 */         if (this.iOSpeedSensorMaxSpeedBuilder_ == null) {
/* 58029 */           this.iOSpeedSensorMaxSpeed_ = null;
/* 58030 */           onChanged();
/*       */         } else {
/* 58032 */           this.iOSpeedSensorMaxSpeed_ = null;
/* 58033 */           this.iOSpeedSensorMaxSpeedBuilder_ = null;
/*       */         } 
/*       */         
/* 58036 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOSpeedSensorMaxSpeedBuilder() {
/* 58043 */         onChanged();
/* 58044 */         return (DolphinConfig.IO.Builder)getIOSpeedSensorMaxSpeedFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOSpeedSensorMaxSpeedOrBuilder() {
/* 58050 */         if (this.iOSpeedSensorMaxSpeedBuilder_ != null) {
/* 58051 */           return (DolphinConfig.IOOrBuilder)this.iOSpeedSensorMaxSpeedBuilder_.getMessageOrBuilder();
/*       */         }
/* 58053 */         return (this.iOSpeedSensorMaxSpeed_ == null) ? 
/* 58054 */           DolphinConfig.IO.getDefaultInstance() : this.iOSpeedSensorMaxSpeed_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOSpeedSensorMaxSpeedFieldBuilder() {
/* 58063 */         if (this.iOSpeedSensorMaxSpeedBuilder_ == null) {
/* 58064 */           this
/*       */ 
/*       */ 
/*       */             
/* 58068 */             .iOSpeedSensorMaxSpeedBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOSpeedSensorMaxSpeed(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/* 58069 */           this.iOSpeedSensorMaxSpeed_ = null;
/*       */         } 
/* 58071 */         return this.iOSpeedSensorMaxSpeedBuilder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasIOSpeedSensorGPSSpeedDiff() {
/* 58082 */         return (this.iOSpeedSensorGPSSpeedDiffBuilder_ != null || this.iOSpeedSensorGPSSpeedDiff_ != null);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO getIOSpeedSensorGPSSpeedDiff() {
/* 58089 */         if (this.iOSpeedSensorGPSSpeedDiffBuilder_ == null) {
/* 58090 */           return (this.iOSpeedSensorGPSSpeedDiff_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOSpeedSensorGPSSpeedDiff_;
/*       */         }
/* 58092 */         return (DolphinConfig.IO)this.iOSpeedSensorGPSSpeedDiffBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOSpeedSensorGPSSpeedDiff(DolphinConfig.IO value) {
/* 58099 */         if (this.iOSpeedSensorGPSSpeedDiffBuilder_ == null) {
/* 58100 */           if (value == null) {
/* 58101 */             throw new NullPointerException();
/*       */           }
/* 58103 */           this.iOSpeedSensorGPSSpeedDiff_ = value;
/* 58104 */           onChanged();
/*       */         } else {
/* 58106 */           this.iOSpeedSensorGPSSpeedDiffBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         
/* 58109 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOSpeedSensorGPSSpeedDiff(DolphinConfig.IO.Builder builderForValue) {
/* 58116 */         if (this.iOSpeedSensorGPSSpeedDiffBuilder_ == null) {
/* 58117 */           this.iOSpeedSensorGPSSpeedDiff_ = builderForValue.build();
/* 58118 */           onChanged();
/*       */         } else {
/* 58120 */           this.iOSpeedSensorGPSSpeedDiffBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         
/* 58123 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeIOSpeedSensorGPSSpeedDiff(DolphinConfig.IO value) {
/* 58129 */         if (this.iOSpeedSensorGPSSpeedDiffBuilder_ == null) {
/* 58130 */           if (this.iOSpeedSensorGPSSpeedDiff_ != null) {
/* 58131 */             this
/* 58132 */               .iOSpeedSensorGPSSpeedDiff_ = DolphinConfig.IO.newBuilder(this.iOSpeedSensorGPSSpeedDiff_).mergeFrom(value).buildPartial();
/*       */           } else {
/* 58134 */             this.iOSpeedSensorGPSSpeedDiff_ = value;
/*       */           } 
/* 58136 */           onChanged();
/*       */         } else {
/* 58138 */           this.iOSpeedSensorGPSSpeedDiffBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         
/* 58141 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearIOSpeedSensorGPSSpeedDiff() {
/* 58147 */         if (this.iOSpeedSensorGPSSpeedDiffBuilder_ == null) {
/* 58148 */           this.iOSpeedSensorGPSSpeedDiff_ = null;
/* 58149 */           onChanged();
/*       */         } else {
/* 58151 */           this.iOSpeedSensorGPSSpeedDiff_ = null;
/* 58152 */           this.iOSpeedSensorGPSSpeedDiffBuilder_ = null;
/*       */         } 
/*       */         
/* 58155 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOSpeedSensorGPSSpeedDiffBuilder() {
/* 58162 */         onChanged();
/* 58163 */         return (DolphinConfig.IO.Builder)getIOSpeedSensorGPSSpeedDiffFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOSpeedSensorGPSSpeedDiffOrBuilder() {
/* 58169 */         if (this.iOSpeedSensorGPSSpeedDiffBuilder_ != null) {
/* 58170 */           return (DolphinConfig.IOOrBuilder)this.iOSpeedSensorGPSSpeedDiffBuilder_.getMessageOrBuilder();
/*       */         }
/* 58172 */         return (this.iOSpeedSensorGPSSpeedDiff_ == null) ? 
/* 58173 */           DolphinConfig.IO.getDefaultInstance() : this.iOSpeedSensorGPSSpeedDiff_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOSpeedSensorGPSSpeedDiffFieldBuilder() {
/* 58182 */         if (this.iOSpeedSensorGPSSpeedDiffBuilder_ == null) {
/* 58183 */           this
/*       */ 
/*       */ 
/*       */             
/* 58187 */             .iOSpeedSensorGPSSpeedDiffBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOSpeedSensorGPSSpeedDiff(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/* 58188 */           this.iOSpeedSensorGPSSpeedDiff_ = null;
/*       */         } 
/* 58190 */         return this.iOSpeedSensorGPSSpeedDiffBuilder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasIODigitalInput1() {
/* 58201 */         return (this.iODigitalInput1Builder_ != null || this.iODigitalInput1_ != null);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO getIODigitalInput1() {
/* 58208 */         if (this.iODigitalInput1Builder_ == null) {
/* 58209 */           return (this.iODigitalInput1_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iODigitalInput1_;
/*       */         }
/* 58211 */         return (DolphinConfig.IO)this.iODigitalInput1Builder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIODigitalInput1(DolphinConfig.IO value) {
/* 58218 */         if (this.iODigitalInput1Builder_ == null) {
/* 58219 */           if (value == null) {
/* 58220 */             throw new NullPointerException();
/*       */           }
/* 58222 */           this.iODigitalInput1_ = value;
/* 58223 */           onChanged();
/*       */         } else {
/* 58225 */           this.iODigitalInput1Builder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         
/* 58228 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIODigitalInput1(DolphinConfig.IO.Builder builderForValue) {
/* 58235 */         if (this.iODigitalInput1Builder_ == null) {
/* 58236 */           this.iODigitalInput1_ = builderForValue.build();
/* 58237 */           onChanged();
/*       */         } else {
/* 58239 */           this.iODigitalInput1Builder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         
/* 58242 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeIODigitalInput1(DolphinConfig.IO value) {
/* 58248 */         if (this.iODigitalInput1Builder_ == null) {
/* 58249 */           if (this.iODigitalInput1_ != null) {
/* 58250 */             this
/* 58251 */               .iODigitalInput1_ = DolphinConfig.IO.newBuilder(this.iODigitalInput1_).mergeFrom(value).buildPartial();
/*       */           } else {
/* 58253 */             this.iODigitalInput1_ = value;
/*       */           } 
/* 58255 */           onChanged();
/*       */         } else {
/* 58257 */           this.iODigitalInput1Builder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         
/* 58260 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearIODigitalInput1() {
/* 58266 */         if (this.iODigitalInput1Builder_ == null) {
/* 58267 */           this.iODigitalInput1_ = null;
/* 58268 */           onChanged();
/*       */         } else {
/* 58270 */           this.iODigitalInput1_ = null;
/* 58271 */           this.iODigitalInput1Builder_ = null;
/*       */         } 
/*       */         
/* 58274 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO.Builder getIODigitalInput1Builder() {
/* 58281 */         onChanged();
/* 58282 */         return (DolphinConfig.IO.Builder)getIODigitalInput1FieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIODigitalInput1OrBuilder() {
/* 58288 */         if (this.iODigitalInput1Builder_ != null) {
/* 58289 */           return (DolphinConfig.IOOrBuilder)this.iODigitalInput1Builder_.getMessageOrBuilder();
/*       */         }
/* 58291 */         return (this.iODigitalInput1_ == null) ? 
/* 58292 */           DolphinConfig.IO.getDefaultInstance() : this.iODigitalInput1_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIODigitalInput1FieldBuilder() {
/* 58301 */         if (this.iODigitalInput1Builder_ == null) {
/* 58302 */           this
/*       */ 
/*       */ 
/*       */             
/* 58306 */             .iODigitalInput1Builder_ = new SingleFieldBuilderV3((AbstractMessage)getIODigitalInput1(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/* 58307 */           this.iODigitalInput1_ = null;
/*       */         } 
/* 58309 */         return this.iODigitalInput1Builder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasIODigitalInput2() {
/* 58320 */         return (this.iODigitalInput2Builder_ != null || this.iODigitalInput2_ != null);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO getIODigitalInput2() {
/* 58327 */         if (this.iODigitalInput2Builder_ == null) {
/* 58328 */           return (this.iODigitalInput2_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iODigitalInput2_;
/*       */         }
/* 58330 */         return (DolphinConfig.IO)this.iODigitalInput2Builder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIODigitalInput2(DolphinConfig.IO value) {
/* 58337 */         if (this.iODigitalInput2Builder_ == null) {
/* 58338 */           if (value == null) {
/* 58339 */             throw new NullPointerException();
/*       */           }
/* 58341 */           this.iODigitalInput2_ = value;
/* 58342 */           onChanged();
/*       */         } else {
/* 58344 */           this.iODigitalInput2Builder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         
/* 58347 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIODigitalInput2(DolphinConfig.IO.Builder builderForValue) {
/* 58354 */         if (this.iODigitalInput2Builder_ == null) {
/* 58355 */           this.iODigitalInput2_ = builderForValue.build();
/* 58356 */           onChanged();
/*       */         } else {
/* 58358 */           this.iODigitalInput2Builder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         
/* 58361 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeIODigitalInput2(DolphinConfig.IO value) {
/* 58367 */         if (this.iODigitalInput2Builder_ == null) {
/* 58368 */           if (this.iODigitalInput2_ != null) {
/* 58369 */             this
/* 58370 */               .iODigitalInput2_ = DolphinConfig.IO.newBuilder(this.iODigitalInput2_).mergeFrom(value).buildPartial();
/*       */           } else {
/* 58372 */             this.iODigitalInput2_ = value;
/*       */           } 
/* 58374 */           onChanged();
/*       */         } else {
/* 58376 */           this.iODigitalInput2Builder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         
/* 58379 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearIODigitalInput2() {
/* 58385 */         if (this.iODigitalInput2Builder_ == null) {
/* 58386 */           this.iODigitalInput2_ = null;
/* 58387 */           onChanged();
/*       */         } else {
/* 58389 */           this.iODigitalInput2_ = null;
/* 58390 */           this.iODigitalInput2Builder_ = null;
/*       */         } 
/*       */         
/* 58393 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO.Builder getIODigitalInput2Builder() {
/* 58400 */         onChanged();
/* 58401 */         return (DolphinConfig.IO.Builder)getIODigitalInput2FieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIODigitalInput2OrBuilder() {
/* 58407 */         if (this.iODigitalInput2Builder_ != null) {
/* 58408 */           return (DolphinConfig.IOOrBuilder)this.iODigitalInput2Builder_.getMessageOrBuilder();
/*       */         }
/* 58410 */         return (this.iODigitalInput2_ == null) ? 
/* 58411 */           DolphinConfig.IO.getDefaultInstance() : this.iODigitalInput2_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIODigitalInput2FieldBuilder() {
/* 58420 */         if (this.iODigitalInput2Builder_ == null) {
/* 58421 */           this
/*       */ 
/*       */ 
/*       */             
/* 58425 */             .iODigitalInput2Builder_ = new SingleFieldBuilderV3((AbstractMessage)getIODigitalInput2(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/* 58426 */           this.iODigitalInput2_ = null;
/*       */         } 
/* 58428 */         return this.iODigitalInput2Builder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasIOPowerSupply() {
/* 58439 */         return (this.iOPowerSupplyBuilder_ != null || this.iOPowerSupply_ != null);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO getIOPowerSupply() {
/* 58446 */         if (this.iOPowerSupplyBuilder_ == null) {
/* 58447 */           return (this.iOPowerSupply_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOPowerSupply_;
/*       */         }
/* 58449 */         return (DolphinConfig.IO)this.iOPowerSupplyBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOPowerSupply(DolphinConfig.IO value) {
/* 58456 */         if (this.iOPowerSupplyBuilder_ == null) {
/* 58457 */           if (value == null) {
/* 58458 */             throw new NullPointerException();
/*       */           }
/* 58460 */           this.iOPowerSupply_ = value;
/* 58461 */           onChanged();
/*       */         } else {
/* 58463 */           this.iOPowerSupplyBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         
/* 58466 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOPowerSupply(DolphinConfig.IO.Builder builderForValue) {
/* 58473 */         if (this.iOPowerSupplyBuilder_ == null) {
/* 58474 */           this.iOPowerSupply_ = builderForValue.build();
/* 58475 */           onChanged();
/*       */         } else {
/* 58477 */           this.iOPowerSupplyBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         
/* 58480 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeIOPowerSupply(DolphinConfig.IO value) {
/* 58486 */         if (this.iOPowerSupplyBuilder_ == null) {
/* 58487 */           if (this.iOPowerSupply_ != null) {
/* 58488 */             this
/* 58489 */               .iOPowerSupply_ = DolphinConfig.IO.newBuilder(this.iOPowerSupply_).mergeFrom(value).buildPartial();
/*       */           } else {
/* 58491 */             this.iOPowerSupply_ = value;
/*       */           } 
/* 58493 */           onChanged();
/*       */         } else {
/* 58495 */           this.iOPowerSupplyBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         
/* 58498 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearIOPowerSupply() {
/* 58504 */         if (this.iOPowerSupplyBuilder_ == null) {
/* 58505 */           this.iOPowerSupply_ = null;
/* 58506 */           onChanged();
/*       */         } else {
/* 58508 */           this.iOPowerSupply_ = null;
/* 58509 */           this.iOPowerSupplyBuilder_ = null;
/*       */         } 
/*       */         
/* 58512 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOPowerSupplyBuilder() {
/* 58519 */         onChanged();
/* 58520 */         return (DolphinConfig.IO.Builder)getIOPowerSupplyFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOPowerSupplyOrBuilder() {
/* 58526 */         if (this.iOPowerSupplyBuilder_ != null) {
/* 58527 */           return (DolphinConfig.IOOrBuilder)this.iOPowerSupplyBuilder_.getMessageOrBuilder();
/*       */         }
/* 58529 */         return (this.iOPowerSupply_ == null) ? 
/* 58530 */           DolphinConfig.IO.getDefaultInstance() : this.iOPowerSupply_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOPowerSupplyFieldBuilder() {
/* 58539 */         if (this.iOPowerSupplyBuilder_ == null) {
/* 58540 */           this
/*       */ 
/*       */ 
/*       */             
/* 58544 */             .iOPowerSupplyBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOPowerSupply(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/* 58545 */           this.iOPowerSupply_ = null;
/*       */         } 
/* 58547 */         return this.iOPowerSupplyBuilder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasIODigitalInput3() {
/* 58558 */         return (this.iODigitalInput3Builder_ != null || this.iODigitalInput3_ != null);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO getIODigitalInput3() {
/* 58565 */         if (this.iODigitalInput3Builder_ == null) {
/* 58566 */           return (this.iODigitalInput3_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iODigitalInput3_;
/*       */         }
/* 58568 */         return (DolphinConfig.IO)this.iODigitalInput3Builder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIODigitalInput3(DolphinConfig.IO value) {
/* 58575 */         if (this.iODigitalInput3Builder_ == null) {
/* 58576 */           if (value == null) {
/* 58577 */             throw new NullPointerException();
/*       */           }
/* 58579 */           this.iODigitalInput3_ = value;
/* 58580 */           onChanged();
/*       */         } else {
/* 58582 */           this.iODigitalInput3Builder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         
/* 58585 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIODigitalInput3(DolphinConfig.IO.Builder builderForValue) {
/* 58592 */         if (this.iODigitalInput3Builder_ == null) {
/* 58593 */           this.iODigitalInput3_ = builderForValue.build();
/* 58594 */           onChanged();
/*       */         } else {
/* 58596 */           this.iODigitalInput3Builder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         
/* 58599 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeIODigitalInput3(DolphinConfig.IO value) {
/* 58605 */         if (this.iODigitalInput3Builder_ == null) {
/* 58606 */           if (this.iODigitalInput3_ != null) {
/* 58607 */             this
/* 58608 */               .iODigitalInput3_ = DolphinConfig.IO.newBuilder(this.iODigitalInput3_).mergeFrom(value).buildPartial();
/*       */           } else {
/* 58610 */             this.iODigitalInput3_ = value;
/*       */           } 
/* 58612 */           onChanged();
/*       */         } else {
/* 58614 */           this.iODigitalInput3Builder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         
/* 58617 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearIODigitalInput3() {
/* 58623 */         if (this.iODigitalInput3Builder_ == null) {
/* 58624 */           this.iODigitalInput3_ = null;
/* 58625 */           onChanged();
/*       */         } else {
/* 58627 */           this.iODigitalInput3_ = null;
/* 58628 */           this.iODigitalInput3Builder_ = null;
/*       */         } 
/*       */         
/* 58631 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO.Builder getIODigitalInput3Builder() {
/* 58638 */         onChanged();
/* 58639 */         return (DolphinConfig.IO.Builder)getIODigitalInput3FieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIODigitalInput3OrBuilder() {
/* 58645 */         if (this.iODigitalInput3Builder_ != null) {
/* 58646 */           return (DolphinConfig.IOOrBuilder)this.iODigitalInput3Builder_.getMessageOrBuilder();
/*       */         }
/* 58648 */         return (this.iODigitalInput3_ == null) ? 
/* 58649 */           DolphinConfig.IO.getDefaultInstance() : this.iODigitalInput3_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIODigitalInput3FieldBuilder() {
/* 58658 */         if (this.iODigitalInput3Builder_ == null) {
/* 58659 */           this
/*       */ 
/*       */ 
/*       */             
/* 58663 */             .iODigitalInput3Builder_ = new SingleFieldBuilderV3((AbstractMessage)getIODigitalInput3(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/* 58664 */           this.iODigitalInput3_ = null;
/*       */         } 
/* 58666 */         return this.iODigitalInput3Builder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasIOVehicleConnection() {
/* 58677 */         return (this.iOVehicleConnectionBuilder_ != null || this.iOVehicleConnection_ != null);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO getIOVehicleConnection() {
/* 58684 */         if (this.iOVehicleConnectionBuilder_ == null) {
/* 58685 */           return (this.iOVehicleConnection_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOVehicleConnection_;
/*       */         }
/* 58687 */         return (DolphinConfig.IO)this.iOVehicleConnectionBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOVehicleConnection(DolphinConfig.IO value) {
/* 58694 */         if (this.iOVehicleConnectionBuilder_ == null) {
/* 58695 */           if (value == null) {
/* 58696 */             throw new NullPointerException();
/*       */           }
/* 58698 */           this.iOVehicleConnection_ = value;
/* 58699 */           onChanged();
/*       */         } else {
/* 58701 */           this.iOVehicleConnectionBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         
/* 58704 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOVehicleConnection(DolphinConfig.IO.Builder builderForValue) {
/* 58711 */         if (this.iOVehicleConnectionBuilder_ == null) {
/* 58712 */           this.iOVehicleConnection_ = builderForValue.build();
/* 58713 */           onChanged();
/*       */         } else {
/* 58715 */           this.iOVehicleConnectionBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         
/* 58718 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeIOVehicleConnection(DolphinConfig.IO value) {
/* 58724 */         if (this.iOVehicleConnectionBuilder_ == null) {
/* 58725 */           if (this.iOVehicleConnection_ != null) {
/* 58726 */             this
/* 58727 */               .iOVehicleConnection_ = DolphinConfig.IO.newBuilder(this.iOVehicleConnection_).mergeFrom(value).buildPartial();
/*       */           } else {
/* 58729 */             this.iOVehicleConnection_ = value;
/*       */           } 
/* 58731 */           onChanged();
/*       */         } else {
/* 58733 */           this.iOVehicleConnectionBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         
/* 58736 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearIOVehicleConnection() {
/* 58742 */         if (this.iOVehicleConnectionBuilder_ == null) {
/* 58743 */           this.iOVehicleConnection_ = null;
/* 58744 */           onChanged();
/*       */         } else {
/* 58746 */           this.iOVehicleConnection_ = null;
/* 58747 */           this.iOVehicleConnectionBuilder_ = null;
/*       */         } 
/*       */         
/* 58750 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOVehicleConnectionBuilder() {
/* 58757 */         onChanged();
/* 58758 */         return (DolphinConfig.IO.Builder)getIOVehicleConnectionFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOVehicleConnectionOrBuilder() {
/* 58764 */         if (this.iOVehicleConnectionBuilder_ != null) {
/* 58765 */           return (DolphinConfig.IOOrBuilder)this.iOVehicleConnectionBuilder_.getMessageOrBuilder();
/*       */         }
/* 58767 */         return (this.iOVehicleConnection_ == null) ? 
/* 58768 */           DolphinConfig.IO.getDefaultInstance() : this.iOVehicleConnection_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOVehicleConnectionFieldBuilder() {
/* 58777 */         if (this.iOVehicleConnectionBuilder_ == null) {
/* 58778 */           this
/*       */ 
/*       */ 
/*       */             
/* 58782 */             .iOVehicleConnectionBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOVehicleConnection(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/* 58783 */           this.iOVehicleConnection_ = null;
/*       */         } 
/* 58785 */         return this.iOVehicleConnectionBuilder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasIODigitalInput1Time() {
/* 58796 */         return (this.iODigitalInput1TimeBuilder_ != null || this.iODigitalInput1Time_ != null);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO getIODigitalInput1Time() {
/* 58803 */         if (this.iODigitalInput1TimeBuilder_ == null) {
/* 58804 */           return (this.iODigitalInput1Time_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iODigitalInput1Time_;
/*       */         }
/* 58806 */         return (DolphinConfig.IO)this.iODigitalInput1TimeBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIODigitalInput1Time(DolphinConfig.IO value) {
/* 58813 */         if (this.iODigitalInput1TimeBuilder_ == null) {
/* 58814 */           if (value == null) {
/* 58815 */             throw new NullPointerException();
/*       */           }
/* 58817 */           this.iODigitalInput1Time_ = value;
/* 58818 */           onChanged();
/*       */         } else {
/* 58820 */           this.iODigitalInput1TimeBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         
/* 58823 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIODigitalInput1Time(DolphinConfig.IO.Builder builderForValue) {
/* 58830 */         if (this.iODigitalInput1TimeBuilder_ == null) {
/* 58831 */           this.iODigitalInput1Time_ = builderForValue.build();
/* 58832 */           onChanged();
/*       */         } else {
/* 58834 */           this.iODigitalInput1TimeBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         
/* 58837 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeIODigitalInput1Time(DolphinConfig.IO value) {
/* 58843 */         if (this.iODigitalInput1TimeBuilder_ == null) {
/* 58844 */           if (this.iODigitalInput1Time_ != null) {
/* 58845 */             this
/* 58846 */               .iODigitalInput1Time_ = DolphinConfig.IO.newBuilder(this.iODigitalInput1Time_).mergeFrom(value).buildPartial();
/*       */           } else {
/* 58848 */             this.iODigitalInput1Time_ = value;
/*       */           } 
/* 58850 */           onChanged();
/*       */         } else {
/* 58852 */           this.iODigitalInput1TimeBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         
/* 58855 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearIODigitalInput1Time() {
/* 58861 */         if (this.iODigitalInput1TimeBuilder_ == null) {
/* 58862 */           this.iODigitalInput1Time_ = null;
/* 58863 */           onChanged();
/*       */         } else {
/* 58865 */           this.iODigitalInput1Time_ = null;
/* 58866 */           this.iODigitalInput1TimeBuilder_ = null;
/*       */         } 
/*       */         
/* 58869 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO.Builder getIODigitalInput1TimeBuilder() {
/* 58876 */         onChanged();
/* 58877 */         return (DolphinConfig.IO.Builder)getIODigitalInput1TimeFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIODigitalInput1TimeOrBuilder() {
/* 58883 */         if (this.iODigitalInput1TimeBuilder_ != null) {
/* 58884 */           return (DolphinConfig.IOOrBuilder)this.iODigitalInput1TimeBuilder_.getMessageOrBuilder();
/*       */         }
/* 58886 */         return (this.iODigitalInput1Time_ == null) ? 
/* 58887 */           DolphinConfig.IO.getDefaultInstance() : this.iODigitalInput1Time_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIODigitalInput1TimeFieldBuilder() {
/* 58896 */         if (this.iODigitalInput1TimeBuilder_ == null) {
/* 58897 */           this
/*       */ 
/*       */ 
/*       */             
/* 58901 */             .iODigitalInput1TimeBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIODigitalInput1Time(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/* 58902 */           this.iODigitalInput1Time_ = null;
/*       */         } 
/* 58904 */         return this.iODigitalInput1TimeBuilder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasIODigitalInput1TimeDelta() {
/* 58915 */         return (this.iODigitalInput1TimeDeltaBuilder_ != null || this.iODigitalInput1TimeDelta_ != null);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO getIODigitalInput1TimeDelta() {
/* 58922 */         if (this.iODigitalInput1TimeDeltaBuilder_ == null) {
/* 58923 */           return (this.iODigitalInput1TimeDelta_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iODigitalInput1TimeDelta_;
/*       */         }
/* 58925 */         return (DolphinConfig.IO)this.iODigitalInput1TimeDeltaBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIODigitalInput1TimeDelta(DolphinConfig.IO value) {
/* 58932 */         if (this.iODigitalInput1TimeDeltaBuilder_ == null) {
/* 58933 */           if (value == null) {
/* 58934 */             throw new NullPointerException();
/*       */           }
/* 58936 */           this.iODigitalInput1TimeDelta_ = value;
/* 58937 */           onChanged();
/*       */         } else {
/* 58939 */           this.iODigitalInput1TimeDeltaBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         
/* 58942 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIODigitalInput1TimeDelta(DolphinConfig.IO.Builder builderForValue) {
/* 58949 */         if (this.iODigitalInput1TimeDeltaBuilder_ == null) {
/* 58950 */           this.iODigitalInput1TimeDelta_ = builderForValue.build();
/* 58951 */           onChanged();
/*       */         } else {
/* 58953 */           this.iODigitalInput1TimeDeltaBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         
/* 58956 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeIODigitalInput1TimeDelta(DolphinConfig.IO value) {
/* 58962 */         if (this.iODigitalInput1TimeDeltaBuilder_ == null) {
/* 58963 */           if (this.iODigitalInput1TimeDelta_ != null) {
/* 58964 */             this
/* 58965 */               .iODigitalInput1TimeDelta_ = DolphinConfig.IO.newBuilder(this.iODigitalInput1TimeDelta_).mergeFrom(value).buildPartial();
/*       */           } else {
/* 58967 */             this.iODigitalInput1TimeDelta_ = value;
/*       */           } 
/* 58969 */           onChanged();
/*       */         } else {
/* 58971 */           this.iODigitalInput1TimeDeltaBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         
/* 58974 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearIODigitalInput1TimeDelta() {
/* 58980 */         if (this.iODigitalInput1TimeDeltaBuilder_ == null) {
/* 58981 */           this.iODigitalInput1TimeDelta_ = null;
/* 58982 */           onChanged();
/*       */         } else {
/* 58984 */           this.iODigitalInput1TimeDelta_ = null;
/* 58985 */           this.iODigitalInput1TimeDeltaBuilder_ = null;
/*       */         } 
/*       */         
/* 58988 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO.Builder getIODigitalInput1TimeDeltaBuilder() {
/* 58995 */         onChanged();
/* 58996 */         return (DolphinConfig.IO.Builder)getIODigitalInput1TimeDeltaFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIODigitalInput1TimeDeltaOrBuilder() {
/* 59002 */         if (this.iODigitalInput1TimeDeltaBuilder_ != null) {
/* 59003 */           return (DolphinConfig.IOOrBuilder)this.iODigitalInput1TimeDeltaBuilder_.getMessageOrBuilder();
/*       */         }
/* 59005 */         return (this.iODigitalInput1TimeDelta_ == null) ? 
/* 59006 */           DolphinConfig.IO.getDefaultInstance() : this.iODigitalInput1TimeDelta_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIODigitalInput1TimeDeltaFieldBuilder() {
/* 59015 */         if (this.iODigitalInput1TimeDeltaBuilder_ == null) {
/* 59016 */           this
/*       */ 
/*       */ 
/*       */             
/* 59020 */             .iODigitalInput1TimeDeltaBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIODigitalInput1TimeDelta(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/* 59021 */           this.iODigitalInput1TimeDelta_ = null;
/*       */         } 
/* 59023 */         return this.iODigitalInput1TimeDeltaBuilder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasIODigitalInput2Time() {
/* 59034 */         return (this.iODigitalInput2TimeBuilder_ != null || this.iODigitalInput2Time_ != null);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO getIODigitalInput2Time() {
/* 59041 */         if (this.iODigitalInput2TimeBuilder_ == null) {
/* 59042 */           return (this.iODigitalInput2Time_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iODigitalInput2Time_;
/*       */         }
/* 59044 */         return (DolphinConfig.IO)this.iODigitalInput2TimeBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIODigitalInput2Time(DolphinConfig.IO value) {
/* 59051 */         if (this.iODigitalInput2TimeBuilder_ == null) {
/* 59052 */           if (value == null) {
/* 59053 */             throw new NullPointerException();
/*       */           }
/* 59055 */           this.iODigitalInput2Time_ = value;
/* 59056 */           onChanged();
/*       */         } else {
/* 59058 */           this.iODigitalInput2TimeBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         
/* 59061 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIODigitalInput2Time(DolphinConfig.IO.Builder builderForValue) {
/* 59068 */         if (this.iODigitalInput2TimeBuilder_ == null) {
/* 59069 */           this.iODigitalInput2Time_ = builderForValue.build();
/* 59070 */           onChanged();
/*       */         } else {
/* 59072 */           this.iODigitalInput2TimeBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         
/* 59075 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeIODigitalInput2Time(DolphinConfig.IO value) {
/* 59081 */         if (this.iODigitalInput2TimeBuilder_ == null) {
/* 59082 */           if (this.iODigitalInput2Time_ != null) {
/* 59083 */             this
/* 59084 */               .iODigitalInput2Time_ = DolphinConfig.IO.newBuilder(this.iODigitalInput2Time_).mergeFrom(value).buildPartial();
/*       */           } else {
/* 59086 */             this.iODigitalInput2Time_ = value;
/*       */           } 
/* 59088 */           onChanged();
/*       */         } else {
/* 59090 */           this.iODigitalInput2TimeBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         
/* 59093 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearIODigitalInput2Time() {
/* 59099 */         if (this.iODigitalInput2TimeBuilder_ == null) {
/* 59100 */           this.iODigitalInput2Time_ = null;
/* 59101 */           onChanged();
/*       */         } else {
/* 59103 */           this.iODigitalInput2Time_ = null;
/* 59104 */           this.iODigitalInput2TimeBuilder_ = null;
/*       */         } 
/*       */         
/* 59107 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO.Builder getIODigitalInput2TimeBuilder() {
/* 59114 */         onChanged();
/* 59115 */         return (DolphinConfig.IO.Builder)getIODigitalInput2TimeFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIODigitalInput2TimeOrBuilder() {
/* 59121 */         if (this.iODigitalInput2TimeBuilder_ != null) {
/* 59122 */           return (DolphinConfig.IOOrBuilder)this.iODigitalInput2TimeBuilder_.getMessageOrBuilder();
/*       */         }
/* 59124 */         return (this.iODigitalInput2Time_ == null) ? 
/* 59125 */           DolphinConfig.IO.getDefaultInstance() : this.iODigitalInput2Time_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIODigitalInput2TimeFieldBuilder() {
/* 59134 */         if (this.iODigitalInput2TimeBuilder_ == null) {
/* 59135 */           this
/*       */ 
/*       */ 
/*       */             
/* 59139 */             .iODigitalInput2TimeBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIODigitalInput2Time(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/* 59140 */           this.iODigitalInput2Time_ = null;
/*       */         } 
/* 59142 */         return this.iODigitalInput2TimeBuilder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasIODigitalInput2TimeDelta() {
/* 59153 */         return (this.iODigitalInput2TimeDeltaBuilder_ != null || this.iODigitalInput2TimeDelta_ != null);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO getIODigitalInput2TimeDelta() {
/* 59160 */         if (this.iODigitalInput2TimeDeltaBuilder_ == null) {
/* 59161 */           return (this.iODigitalInput2TimeDelta_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iODigitalInput2TimeDelta_;
/*       */         }
/* 59163 */         return (DolphinConfig.IO)this.iODigitalInput2TimeDeltaBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIODigitalInput2TimeDelta(DolphinConfig.IO value) {
/* 59170 */         if (this.iODigitalInput2TimeDeltaBuilder_ == null) {
/* 59171 */           if (value == null) {
/* 59172 */             throw new NullPointerException();
/*       */           }
/* 59174 */           this.iODigitalInput2TimeDelta_ = value;
/* 59175 */           onChanged();
/*       */         } else {
/* 59177 */           this.iODigitalInput2TimeDeltaBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         
/* 59180 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIODigitalInput2TimeDelta(DolphinConfig.IO.Builder builderForValue) {
/* 59187 */         if (this.iODigitalInput2TimeDeltaBuilder_ == null) {
/* 59188 */           this.iODigitalInput2TimeDelta_ = builderForValue.build();
/* 59189 */           onChanged();
/*       */         } else {
/* 59191 */           this.iODigitalInput2TimeDeltaBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         
/* 59194 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeIODigitalInput2TimeDelta(DolphinConfig.IO value) {
/* 59200 */         if (this.iODigitalInput2TimeDeltaBuilder_ == null) {
/* 59201 */           if (this.iODigitalInput2TimeDelta_ != null) {
/* 59202 */             this
/* 59203 */               .iODigitalInput2TimeDelta_ = DolphinConfig.IO.newBuilder(this.iODigitalInput2TimeDelta_).mergeFrom(value).buildPartial();
/*       */           } else {
/* 59205 */             this.iODigitalInput2TimeDelta_ = value;
/*       */           } 
/* 59207 */           onChanged();
/*       */         } else {
/* 59209 */           this.iODigitalInput2TimeDeltaBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         
/* 59212 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearIODigitalInput2TimeDelta() {
/* 59218 */         if (this.iODigitalInput2TimeDeltaBuilder_ == null) {
/* 59219 */           this.iODigitalInput2TimeDelta_ = null;
/* 59220 */           onChanged();
/*       */         } else {
/* 59222 */           this.iODigitalInput2TimeDelta_ = null;
/* 59223 */           this.iODigitalInput2TimeDeltaBuilder_ = null;
/*       */         } 
/*       */         
/* 59226 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO.Builder getIODigitalInput2TimeDeltaBuilder() {
/* 59233 */         onChanged();
/* 59234 */         return (DolphinConfig.IO.Builder)getIODigitalInput2TimeDeltaFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIODigitalInput2TimeDeltaOrBuilder() {
/* 59240 */         if (this.iODigitalInput2TimeDeltaBuilder_ != null) {
/* 59241 */           return (DolphinConfig.IOOrBuilder)this.iODigitalInput2TimeDeltaBuilder_.getMessageOrBuilder();
/*       */         }
/* 59243 */         return (this.iODigitalInput2TimeDelta_ == null) ? 
/* 59244 */           DolphinConfig.IO.getDefaultInstance() : this.iODigitalInput2TimeDelta_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIODigitalInput2TimeDeltaFieldBuilder() {
/* 59253 */         if (this.iODigitalInput2TimeDeltaBuilder_ == null) {
/* 59254 */           this
/*       */ 
/*       */ 
/*       */             
/* 59258 */             .iODigitalInput2TimeDeltaBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIODigitalInput2TimeDelta(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/* 59259 */           this.iODigitalInput2TimeDelta_ = null;
/*       */         } 
/* 59261 */         return this.iODigitalInput2TimeDeltaBuilder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasIOPowerSupplyTime() {
/* 59272 */         return (this.iOPowerSupplyTimeBuilder_ != null || this.iOPowerSupplyTime_ != null);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO getIOPowerSupplyTime() {
/* 59279 */         if (this.iOPowerSupplyTimeBuilder_ == null) {
/* 59280 */           return (this.iOPowerSupplyTime_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOPowerSupplyTime_;
/*       */         }
/* 59282 */         return (DolphinConfig.IO)this.iOPowerSupplyTimeBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOPowerSupplyTime(DolphinConfig.IO value) {
/* 59289 */         if (this.iOPowerSupplyTimeBuilder_ == null) {
/* 59290 */           if (value == null) {
/* 59291 */             throw new NullPointerException();
/*       */           }
/* 59293 */           this.iOPowerSupplyTime_ = value;
/* 59294 */           onChanged();
/*       */         } else {
/* 59296 */           this.iOPowerSupplyTimeBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         
/* 59299 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOPowerSupplyTime(DolphinConfig.IO.Builder builderForValue) {
/* 59306 */         if (this.iOPowerSupplyTimeBuilder_ == null) {
/* 59307 */           this.iOPowerSupplyTime_ = builderForValue.build();
/* 59308 */           onChanged();
/*       */         } else {
/* 59310 */           this.iOPowerSupplyTimeBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         
/* 59313 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeIOPowerSupplyTime(DolphinConfig.IO value) {
/* 59319 */         if (this.iOPowerSupplyTimeBuilder_ == null) {
/* 59320 */           if (this.iOPowerSupplyTime_ != null) {
/* 59321 */             this
/* 59322 */               .iOPowerSupplyTime_ = DolphinConfig.IO.newBuilder(this.iOPowerSupplyTime_).mergeFrom(value).buildPartial();
/*       */           } else {
/* 59324 */             this.iOPowerSupplyTime_ = value;
/*       */           } 
/* 59326 */           onChanged();
/*       */         } else {
/* 59328 */           this.iOPowerSupplyTimeBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         
/* 59331 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearIOPowerSupplyTime() {
/* 59337 */         if (this.iOPowerSupplyTimeBuilder_ == null) {
/* 59338 */           this.iOPowerSupplyTime_ = null;
/* 59339 */           onChanged();
/*       */         } else {
/* 59341 */           this.iOPowerSupplyTime_ = null;
/* 59342 */           this.iOPowerSupplyTimeBuilder_ = null;
/*       */         } 
/*       */         
/* 59345 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOPowerSupplyTimeBuilder() {
/* 59352 */         onChanged();
/* 59353 */         return (DolphinConfig.IO.Builder)getIOPowerSupplyTimeFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOPowerSupplyTimeOrBuilder() {
/* 59359 */         if (this.iOPowerSupplyTimeBuilder_ != null) {
/* 59360 */           return (DolphinConfig.IOOrBuilder)this.iOPowerSupplyTimeBuilder_.getMessageOrBuilder();
/*       */         }
/* 59362 */         return (this.iOPowerSupplyTime_ == null) ? 
/* 59363 */           DolphinConfig.IO.getDefaultInstance() : this.iOPowerSupplyTime_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOPowerSupplyTimeFieldBuilder() {
/* 59372 */         if (this.iOPowerSupplyTimeBuilder_ == null) {
/* 59373 */           this
/*       */ 
/*       */ 
/*       */             
/* 59377 */             .iOPowerSupplyTimeBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOPowerSupplyTime(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/* 59378 */           this.iOPowerSupplyTime_ = null;
/*       */         } 
/* 59380 */         return this.iOPowerSupplyTimeBuilder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasIOPowerSupplyTimeDelta() {
/* 59391 */         return (this.iOPowerSupplyTimeDeltaBuilder_ != null || this.iOPowerSupplyTimeDelta_ != null);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO getIOPowerSupplyTimeDelta() {
/* 59398 */         if (this.iOPowerSupplyTimeDeltaBuilder_ == null) {
/* 59399 */           return (this.iOPowerSupplyTimeDelta_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOPowerSupplyTimeDelta_;
/*       */         }
/* 59401 */         return (DolphinConfig.IO)this.iOPowerSupplyTimeDeltaBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOPowerSupplyTimeDelta(DolphinConfig.IO value) {
/* 59408 */         if (this.iOPowerSupplyTimeDeltaBuilder_ == null) {
/* 59409 */           if (value == null) {
/* 59410 */             throw new NullPointerException();
/*       */           }
/* 59412 */           this.iOPowerSupplyTimeDelta_ = value;
/* 59413 */           onChanged();
/*       */         } else {
/* 59415 */           this.iOPowerSupplyTimeDeltaBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         
/* 59418 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOPowerSupplyTimeDelta(DolphinConfig.IO.Builder builderForValue) {
/* 59425 */         if (this.iOPowerSupplyTimeDeltaBuilder_ == null) {
/* 59426 */           this.iOPowerSupplyTimeDelta_ = builderForValue.build();
/* 59427 */           onChanged();
/*       */         } else {
/* 59429 */           this.iOPowerSupplyTimeDeltaBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         
/* 59432 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeIOPowerSupplyTimeDelta(DolphinConfig.IO value) {
/* 59438 */         if (this.iOPowerSupplyTimeDeltaBuilder_ == null) {
/* 59439 */           if (this.iOPowerSupplyTimeDelta_ != null) {
/* 59440 */             this
/* 59441 */               .iOPowerSupplyTimeDelta_ = DolphinConfig.IO.newBuilder(this.iOPowerSupplyTimeDelta_).mergeFrom(value).buildPartial();
/*       */           } else {
/* 59443 */             this.iOPowerSupplyTimeDelta_ = value;
/*       */           } 
/* 59445 */           onChanged();
/*       */         } else {
/* 59447 */           this.iOPowerSupplyTimeDeltaBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         
/* 59450 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearIOPowerSupplyTimeDelta() {
/* 59456 */         if (this.iOPowerSupplyTimeDeltaBuilder_ == null) {
/* 59457 */           this.iOPowerSupplyTimeDelta_ = null;
/* 59458 */           onChanged();
/*       */         } else {
/* 59460 */           this.iOPowerSupplyTimeDelta_ = null;
/* 59461 */           this.iOPowerSupplyTimeDeltaBuilder_ = null;
/*       */         } 
/*       */         
/* 59464 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOPowerSupplyTimeDeltaBuilder() {
/* 59471 */         onChanged();
/* 59472 */         return (DolphinConfig.IO.Builder)getIOPowerSupplyTimeDeltaFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOPowerSupplyTimeDeltaOrBuilder() {
/* 59478 */         if (this.iOPowerSupplyTimeDeltaBuilder_ != null) {
/* 59479 */           return (DolphinConfig.IOOrBuilder)this.iOPowerSupplyTimeDeltaBuilder_.getMessageOrBuilder();
/*       */         }
/* 59481 */         return (this.iOPowerSupplyTimeDelta_ == null) ? 
/* 59482 */           DolphinConfig.IO.getDefaultInstance() : this.iOPowerSupplyTimeDelta_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOPowerSupplyTimeDeltaFieldBuilder() {
/* 59491 */         if (this.iOPowerSupplyTimeDeltaBuilder_ == null) {
/* 59492 */           this
/*       */ 
/*       */ 
/*       */             
/* 59496 */             .iOPowerSupplyTimeDeltaBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOPowerSupplyTimeDelta(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/* 59497 */           this.iOPowerSupplyTimeDelta_ = null;
/*       */         } 
/* 59499 */         return this.iOPowerSupplyTimeDeltaBuilder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasIODigitalInput3Time() {
/* 59510 */         return (this.iODigitalInput3TimeBuilder_ != null || this.iODigitalInput3Time_ != null);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO getIODigitalInput3Time() {
/* 59517 */         if (this.iODigitalInput3TimeBuilder_ == null) {
/* 59518 */           return (this.iODigitalInput3Time_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iODigitalInput3Time_;
/*       */         }
/* 59520 */         return (DolphinConfig.IO)this.iODigitalInput3TimeBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIODigitalInput3Time(DolphinConfig.IO value) {
/* 59527 */         if (this.iODigitalInput3TimeBuilder_ == null) {
/* 59528 */           if (value == null) {
/* 59529 */             throw new NullPointerException();
/*       */           }
/* 59531 */           this.iODigitalInput3Time_ = value;
/* 59532 */           onChanged();
/*       */         } else {
/* 59534 */           this.iODigitalInput3TimeBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         
/* 59537 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIODigitalInput3Time(DolphinConfig.IO.Builder builderForValue) {
/* 59544 */         if (this.iODigitalInput3TimeBuilder_ == null) {
/* 59545 */           this.iODigitalInput3Time_ = builderForValue.build();
/* 59546 */           onChanged();
/*       */         } else {
/* 59548 */           this.iODigitalInput3TimeBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         
/* 59551 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeIODigitalInput3Time(DolphinConfig.IO value) {
/* 59557 */         if (this.iODigitalInput3TimeBuilder_ == null) {
/* 59558 */           if (this.iODigitalInput3Time_ != null) {
/* 59559 */             this
/* 59560 */               .iODigitalInput3Time_ = DolphinConfig.IO.newBuilder(this.iODigitalInput3Time_).mergeFrom(value).buildPartial();
/*       */           } else {
/* 59562 */             this.iODigitalInput3Time_ = value;
/*       */           } 
/* 59564 */           onChanged();
/*       */         } else {
/* 59566 */           this.iODigitalInput3TimeBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         
/* 59569 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearIODigitalInput3Time() {
/* 59575 */         if (this.iODigitalInput3TimeBuilder_ == null) {
/* 59576 */           this.iODigitalInput3Time_ = null;
/* 59577 */           onChanged();
/*       */         } else {
/* 59579 */           this.iODigitalInput3Time_ = null;
/* 59580 */           this.iODigitalInput3TimeBuilder_ = null;
/*       */         } 
/*       */         
/* 59583 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO.Builder getIODigitalInput3TimeBuilder() {
/* 59590 */         onChanged();
/* 59591 */         return (DolphinConfig.IO.Builder)getIODigitalInput3TimeFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIODigitalInput3TimeOrBuilder() {
/* 59597 */         if (this.iODigitalInput3TimeBuilder_ != null) {
/* 59598 */           return (DolphinConfig.IOOrBuilder)this.iODigitalInput3TimeBuilder_.getMessageOrBuilder();
/*       */         }
/* 59600 */         return (this.iODigitalInput3Time_ == null) ? 
/* 59601 */           DolphinConfig.IO.getDefaultInstance() : this.iODigitalInput3Time_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIODigitalInput3TimeFieldBuilder() {
/* 59610 */         if (this.iODigitalInput3TimeBuilder_ == null) {
/* 59611 */           this
/*       */ 
/*       */ 
/*       */             
/* 59615 */             .iODigitalInput3TimeBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIODigitalInput3Time(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/* 59616 */           this.iODigitalInput3Time_ = null;
/*       */         } 
/* 59618 */         return this.iODigitalInput3TimeBuilder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasIODigitalInput3TimeDelta() {
/* 59629 */         return (this.iODigitalInput3TimeDeltaBuilder_ != null || this.iODigitalInput3TimeDelta_ != null);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO getIODigitalInput3TimeDelta() {
/* 59636 */         if (this.iODigitalInput3TimeDeltaBuilder_ == null) {
/* 59637 */           return (this.iODigitalInput3TimeDelta_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iODigitalInput3TimeDelta_;
/*       */         }
/* 59639 */         return (DolphinConfig.IO)this.iODigitalInput3TimeDeltaBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIODigitalInput3TimeDelta(DolphinConfig.IO value) {
/* 59646 */         if (this.iODigitalInput3TimeDeltaBuilder_ == null) {
/* 59647 */           if (value == null) {
/* 59648 */             throw new NullPointerException();
/*       */           }
/* 59650 */           this.iODigitalInput3TimeDelta_ = value;
/* 59651 */           onChanged();
/*       */         } else {
/* 59653 */           this.iODigitalInput3TimeDeltaBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         
/* 59656 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIODigitalInput3TimeDelta(DolphinConfig.IO.Builder builderForValue) {
/* 59663 */         if (this.iODigitalInput3TimeDeltaBuilder_ == null) {
/* 59664 */           this.iODigitalInput3TimeDelta_ = builderForValue.build();
/* 59665 */           onChanged();
/*       */         } else {
/* 59667 */           this.iODigitalInput3TimeDeltaBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         
/* 59670 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeIODigitalInput3TimeDelta(DolphinConfig.IO value) {
/* 59676 */         if (this.iODigitalInput3TimeDeltaBuilder_ == null) {
/* 59677 */           if (this.iODigitalInput3TimeDelta_ != null) {
/* 59678 */             this
/* 59679 */               .iODigitalInput3TimeDelta_ = DolphinConfig.IO.newBuilder(this.iODigitalInput3TimeDelta_).mergeFrom(value).buildPartial();
/*       */           } else {
/* 59681 */             this.iODigitalInput3TimeDelta_ = value;
/*       */           } 
/* 59683 */           onChanged();
/*       */         } else {
/* 59685 */           this.iODigitalInput3TimeDeltaBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         
/* 59688 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearIODigitalInput3TimeDelta() {
/* 59694 */         if (this.iODigitalInput3TimeDeltaBuilder_ == null) {
/* 59695 */           this.iODigitalInput3TimeDelta_ = null;
/* 59696 */           onChanged();
/*       */         } else {
/* 59698 */           this.iODigitalInput3TimeDelta_ = null;
/* 59699 */           this.iODigitalInput3TimeDeltaBuilder_ = null;
/*       */         } 
/*       */         
/* 59702 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO.Builder getIODigitalInput3TimeDeltaBuilder() {
/* 59709 */         onChanged();
/* 59710 */         return (DolphinConfig.IO.Builder)getIODigitalInput3TimeDeltaFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIODigitalInput3TimeDeltaOrBuilder() {
/* 59716 */         if (this.iODigitalInput3TimeDeltaBuilder_ != null) {
/* 59717 */           return (DolphinConfig.IOOrBuilder)this.iODigitalInput3TimeDeltaBuilder_.getMessageOrBuilder();
/*       */         }
/* 59719 */         return (this.iODigitalInput3TimeDelta_ == null) ? 
/* 59720 */           DolphinConfig.IO.getDefaultInstance() : this.iODigitalInput3TimeDelta_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIODigitalInput3TimeDeltaFieldBuilder() {
/* 59729 */         if (this.iODigitalInput3TimeDeltaBuilder_ == null) {
/* 59730 */           this
/*       */ 
/*       */ 
/*       */             
/* 59734 */             .iODigitalInput3TimeDeltaBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIODigitalInput3TimeDelta(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/* 59735 */           this.iODigitalInput3TimeDelta_ = null;
/*       */         } 
/* 59737 */         return this.iODigitalInput3TimeDeltaBuilder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasIODigitalOutput1() {
/* 59748 */         return (this.iODigitalOutput1Builder_ != null || this.iODigitalOutput1_ != null);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO getIODigitalOutput1() {
/* 59755 */         if (this.iODigitalOutput1Builder_ == null) {
/* 59756 */           return (this.iODigitalOutput1_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iODigitalOutput1_;
/*       */         }
/* 59758 */         return (DolphinConfig.IO)this.iODigitalOutput1Builder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIODigitalOutput1(DolphinConfig.IO value) {
/* 59765 */         if (this.iODigitalOutput1Builder_ == null) {
/* 59766 */           if (value == null) {
/* 59767 */             throw new NullPointerException();
/*       */           }
/* 59769 */           this.iODigitalOutput1_ = value;
/* 59770 */           onChanged();
/*       */         } else {
/* 59772 */           this.iODigitalOutput1Builder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         
/* 59775 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIODigitalOutput1(DolphinConfig.IO.Builder builderForValue) {
/* 59782 */         if (this.iODigitalOutput1Builder_ == null) {
/* 59783 */           this.iODigitalOutput1_ = builderForValue.build();
/* 59784 */           onChanged();
/*       */         } else {
/* 59786 */           this.iODigitalOutput1Builder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         
/* 59789 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeIODigitalOutput1(DolphinConfig.IO value) {
/* 59795 */         if (this.iODigitalOutput1Builder_ == null) {
/* 59796 */           if (this.iODigitalOutput1_ != null) {
/* 59797 */             this
/* 59798 */               .iODigitalOutput1_ = DolphinConfig.IO.newBuilder(this.iODigitalOutput1_).mergeFrom(value).buildPartial();
/*       */           } else {
/* 59800 */             this.iODigitalOutput1_ = value;
/*       */           } 
/* 59802 */           onChanged();
/*       */         } else {
/* 59804 */           this.iODigitalOutput1Builder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         
/* 59807 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearIODigitalOutput1() {
/* 59813 */         if (this.iODigitalOutput1Builder_ == null) {
/* 59814 */           this.iODigitalOutput1_ = null;
/* 59815 */           onChanged();
/*       */         } else {
/* 59817 */           this.iODigitalOutput1_ = null;
/* 59818 */           this.iODigitalOutput1Builder_ = null;
/*       */         } 
/*       */         
/* 59821 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO.Builder getIODigitalOutput1Builder() {
/* 59828 */         onChanged();
/* 59829 */         return (DolphinConfig.IO.Builder)getIODigitalOutput1FieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIODigitalOutput1OrBuilder() {
/* 59835 */         if (this.iODigitalOutput1Builder_ != null) {
/* 59836 */           return (DolphinConfig.IOOrBuilder)this.iODigitalOutput1Builder_.getMessageOrBuilder();
/*       */         }
/* 59838 */         return (this.iODigitalOutput1_ == null) ? 
/* 59839 */           DolphinConfig.IO.getDefaultInstance() : this.iODigitalOutput1_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIODigitalOutput1FieldBuilder() {
/* 59848 */         if (this.iODigitalOutput1Builder_ == null) {
/* 59849 */           this
/*       */ 
/*       */ 
/*       */             
/* 59853 */             .iODigitalOutput1Builder_ = new SingleFieldBuilderV3((AbstractMessage)getIODigitalOutput1(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/* 59854 */           this.iODigitalOutput1_ = null;
/*       */         } 
/* 59856 */         return this.iODigitalOutput1Builder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasIODigitalOutput2() {
/* 59867 */         return (this.iODigitalOutput2Builder_ != null || this.iODigitalOutput2_ != null);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO getIODigitalOutput2() {
/* 59874 */         if (this.iODigitalOutput2Builder_ == null) {
/* 59875 */           return (this.iODigitalOutput2_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iODigitalOutput2_;
/*       */         }
/* 59877 */         return (DolphinConfig.IO)this.iODigitalOutput2Builder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIODigitalOutput2(DolphinConfig.IO value) {
/* 59884 */         if (this.iODigitalOutput2Builder_ == null) {
/* 59885 */           if (value == null) {
/* 59886 */             throw new NullPointerException();
/*       */           }
/* 59888 */           this.iODigitalOutput2_ = value;
/* 59889 */           onChanged();
/*       */         } else {
/* 59891 */           this.iODigitalOutput2Builder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         
/* 59894 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIODigitalOutput2(DolphinConfig.IO.Builder builderForValue) {
/* 59901 */         if (this.iODigitalOutput2Builder_ == null) {
/* 59902 */           this.iODigitalOutput2_ = builderForValue.build();
/* 59903 */           onChanged();
/*       */         } else {
/* 59905 */           this.iODigitalOutput2Builder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         
/* 59908 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeIODigitalOutput2(DolphinConfig.IO value) {
/* 59914 */         if (this.iODigitalOutput2Builder_ == null) {
/* 59915 */           if (this.iODigitalOutput2_ != null) {
/* 59916 */             this
/* 59917 */               .iODigitalOutput2_ = DolphinConfig.IO.newBuilder(this.iODigitalOutput2_).mergeFrom(value).buildPartial();
/*       */           } else {
/* 59919 */             this.iODigitalOutput2_ = value;
/*       */           } 
/* 59921 */           onChanged();
/*       */         } else {
/* 59923 */           this.iODigitalOutput2Builder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         
/* 59926 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearIODigitalOutput2() {
/* 59932 */         if (this.iODigitalOutput2Builder_ == null) {
/* 59933 */           this.iODigitalOutput2_ = null;
/* 59934 */           onChanged();
/*       */         } else {
/* 59936 */           this.iODigitalOutput2_ = null;
/* 59937 */           this.iODigitalOutput2Builder_ = null;
/*       */         } 
/*       */         
/* 59940 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO.Builder getIODigitalOutput2Builder() {
/* 59947 */         onChanged();
/* 59948 */         return (DolphinConfig.IO.Builder)getIODigitalOutput2FieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIODigitalOutput2OrBuilder() {
/* 59954 */         if (this.iODigitalOutput2Builder_ != null) {
/* 59955 */           return (DolphinConfig.IOOrBuilder)this.iODigitalOutput2Builder_.getMessageOrBuilder();
/*       */         }
/* 59957 */         return (this.iODigitalOutput2_ == null) ? 
/* 59958 */           DolphinConfig.IO.getDefaultInstance() : this.iODigitalOutput2_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIODigitalOutput2FieldBuilder() {
/* 59967 */         if (this.iODigitalOutput2Builder_ == null) {
/* 59968 */           this
/*       */ 
/*       */ 
/*       */             
/* 59972 */             .iODigitalOutput2Builder_ = new SingleFieldBuilderV3((AbstractMessage)getIODigitalOutput2(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/* 59973 */           this.iODigitalOutput2_ = null;
/*       */         } 
/* 59975 */         return this.iODigitalOutput2Builder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasIOAnalogInput1() {
/* 59986 */         return (this.iOAnalogInput1Builder_ != null || this.iOAnalogInput1_ != null);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO getIOAnalogInput1() {
/* 59993 */         if (this.iOAnalogInput1Builder_ == null) {
/* 59994 */           return (this.iOAnalogInput1_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOAnalogInput1_;
/*       */         }
/* 59996 */         return (DolphinConfig.IO)this.iOAnalogInput1Builder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOAnalogInput1(DolphinConfig.IO value) {
/* 60003 */         if (this.iOAnalogInput1Builder_ == null) {
/* 60004 */           if (value == null) {
/* 60005 */             throw new NullPointerException();
/*       */           }
/* 60007 */           this.iOAnalogInput1_ = value;
/* 60008 */           onChanged();
/*       */         } else {
/* 60010 */           this.iOAnalogInput1Builder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         
/* 60013 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOAnalogInput1(DolphinConfig.IO.Builder builderForValue) {
/* 60020 */         if (this.iOAnalogInput1Builder_ == null) {
/* 60021 */           this.iOAnalogInput1_ = builderForValue.build();
/* 60022 */           onChanged();
/*       */         } else {
/* 60024 */           this.iOAnalogInput1Builder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         
/* 60027 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeIOAnalogInput1(DolphinConfig.IO value) {
/* 60033 */         if (this.iOAnalogInput1Builder_ == null) {
/* 60034 */           if (this.iOAnalogInput1_ != null) {
/* 60035 */             this
/* 60036 */               .iOAnalogInput1_ = DolphinConfig.IO.newBuilder(this.iOAnalogInput1_).mergeFrom(value).buildPartial();
/*       */           } else {
/* 60038 */             this.iOAnalogInput1_ = value;
/*       */           } 
/* 60040 */           onChanged();
/*       */         } else {
/* 60042 */           this.iOAnalogInput1Builder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         
/* 60045 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearIOAnalogInput1() {
/* 60051 */         if (this.iOAnalogInput1Builder_ == null) {
/* 60052 */           this.iOAnalogInput1_ = null;
/* 60053 */           onChanged();
/*       */         } else {
/* 60055 */           this.iOAnalogInput1_ = null;
/* 60056 */           this.iOAnalogInput1Builder_ = null;
/*       */         } 
/*       */         
/* 60059 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOAnalogInput1Builder() {
/* 60066 */         onChanged();
/* 60067 */         return (DolphinConfig.IO.Builder)getIOAnalogInput1FieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOAnalogInput1OrBuilder() {
/* 60073 */         if (this.iOAnalogInput1Builder_ != null) {
/* 60074 */           return (DolphinConfig.IOOrBuilder)this.iOAnalogInput1Builder_.getMessageOrBuilder();
/*       */         }
/* 60076 */         return (this.iOAnalogInput1_ == null) ? 
/* 60077 */           DolphinConfig.IO.getDefaultInstance() : this.iOAnalogInput1_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOAnalogInput1FieldBuilder() {
/* 60086 */         if (this.iOAnalogInput1Builder_ == null) {
/* 60087 */           this
/*       */ 
/*       */ 
/*       */             
/* 60091 */             .iOAnalogInput1Builder_ = new SingleFieldBuilderV3((AbstractMessage)getIOAnalogInput1(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/* 60092 */           this.iOAnalogInput1_ = null;
/*       */         } 
/* 60094 */         return this.iOAnalogInput1Builder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasIOAnalogInput2() {
/* 60105 */         return (this.iOAnalogInput2Builder_ != null || this.iOAnalogInput2_ != null);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO getIOAnalogInput2() {
/* 60112 */         if (this.iOAnalogInput2Builder_ == null) {
/* 60113 */           return (this.iOAnalogInput2_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOAnalogInput2_;
/*       */         }
/* 60115 */         return (DolphinConfig.IO)this.iOAnalogInput2Builder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOAnalogInput2(DolphinConfig.IO value) {
/* 60122 */         if (this.iOAnalogInput2Builder_ == null) {
/* 60123 */           if (value == null) {
/* 60124 */             throw new NullPointerException();
/*       */           }
/* 60126 */           this.iOAnalogInput2_ = value;
/* 60127 */           onChanged();
/*       */         } else {
/* 60129 */           this.iOAnalogInput2Builder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         
/* 60132 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOAnalogInput2(DolphinConfig.IO.Builder builderForValue) {
/* 60139 */         if (this.iOAnalogInput2Builder_ == null) {
/* 60140 */           this.iOAnalogInput2_ = builderForValue.build();
/* 60141 */           onChanged();
/*       */         } else {
/* 60143 */           this.iOAnalogInput2Builder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         
/* 60146 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeIOAnalogInput2(DolphinConfig.IO value) {
/* 60152 */         if (this.iOAnalogInput2Builder_ == null) {
/* 60153 */           if (this.iOAnalogInput2_ != null) {
/* 60154 */             this
/* 60155 */               .iOAnalogInput2_ = DolphinConfig.IO.newBuilder(this.iOAnalogInput2_).mergeFrom(value).buildPartial();
/*       */           } else {
/* 60157 */             this.iOAnalogInput2_ = value;
/*       */           } 
/* 60159 */           onChanged();
/*       */         } else {
/* 60161 */           this.iOAnalogInput2Builder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         
/* 60164 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearIOAnalogInput2() {
/* 60170 */         if (this.iOAnalogInput2Builder_ == null) {
/* 60171 */           this.iOAnalogInput2_ = null;
/* 60172 */           onChanged();
/*       */         } else {
/* 60174 */           this.iOAnalogInput2_ = null;
/* 60175 */           this.iOAnalogInput2Builder_ = null;
/*       */         } 
/*       */         
/* 60178 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOAnalogInput2Builder() {
/* 60185 */         onChanged();
/* 60186 */         return (DolphinConfig.IO.Builder)getIOAnalogInput2FieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOAnalogInput2OrBuilder() {
/* 60192 */         if (this.iOAnalogInput2Builder_ != null) {
/* 60193 */           return (DolphinConfig.IOOrBuilder)this.iOAnalogInput2Builder_.getMessageOrBuilder();
/*       */         }
/* 60195 */         return (this.iOAnalogInput2_ == null) ? 
/* 60196 */           DolphinConfig.IO.getDefaultInstance() : this.iOAnalogInput2_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOAnalogInput2FieldBuilder() {
/* 60205 */         if (this.iOAnalogInput2Builder_ == null) {
/* 60206 */           this
/*       */ 
/*       */ 
/*       */             
/* 60210 */             .iOAnalogInput2Builder_ = new SingleFieldBuilderV3((AbstractMessage)getIOAnalogInput2(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/* 60211 */           this.iOAnalogInput2_ = null;
/*       */         } 
/* 60213 */         return this.iOAnalogInput2Builder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasIOAnalogInput3() {
/* 60224 */         return (this.iOAnalogInput3Builder_ != null || this.iOAnalogInput3_ != null);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO getIOAnalogInput3() {
/* 60231 */         if (this.iOAnalogInput3Builder_ == null) {
/* 60232 */           return (this.iOAnalogInput3_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOAnalogInput3_;
/*       */         }
/* 60234 */         return (DolphinConfig.IO)this.iOAnalogInput3Builder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOAnalogInput3(DolphinConfig.IO value) {
/* 60241 */         if (this.iOAnalogInput3Builder_ == null) {
/* 60242 */           if (value == null) {
/* 60243 */             throw new NullPointerException();
/*       */           }
/* 60245 */           this.iOAnalogInput3_ = value;
/* 60246 */           onChanged();
/*       */         } else {
/* 60248 */           this.iOAnalogInput3Builder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         
/* 60251 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOAnalogInput3(DolphinConfig.IO.Builder builderForValue) {
/* 60258 */         if (this.iOAnalogInput3Builder_ == null) {
/* 60259 */           this.iOAnalogInput3_ = builderForValue.build();
/* 60260 */           onChanged();
/*       */         } else {
/* 60262 */           this.iOAnalogInput3Builder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         
/* 60265 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeIOAnalogInput3(DolphinConfig.IO value) {
/* 60271 */         if (this.iOAnalogInput3Builder_ == null) {
/* 60272 */           if (this.iOAnalogInput3_ != null) {
/* 60273 */             this
/* 60274 */               .iOAnalogInput3_ = DolphinConfig.IO.newBuilder(this.iOAnalogInput3_).mergeFrom(value).buildPartial();
/*       */           } else {
/* 60276 */             this.iOAnalogInput3_ = value;
/*       */           } 
/* 60278 */           onChanged();
/*       */         } else {
/* 60280 */           this.iOAnalogInput3Builder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         
/* 60283 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearIOAnalogInput3() {
/* 60289 */         if (this.iOAnalogInput3Builder_ == null) {
/* 60290 */           this.iOAnalogInput3_ = null;
/* 60291 */           onChanged();
/*       */         } else {
/* 60293 */           this.iOAnalogInput3_ = null;
/* 60294 */           this.iOAnalogInput3Builder_ = null;
/*       */         } 
/*       */         
/* 60297 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOAnalogInput3Builder() {
/* 60304 */         onChanged();
/* 60305 */         return (DolphinConfig.IO.Builder)getIOAnalogInput3FieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOAnalogInput3OrBuilder() {
/* 60311 */         if (this.iOAnalogInput3Builder_ != null) {
/* 60312 */           return (DolphinConfig.IOOrBuilder)this.iOAnalogInput3Builder_.getMessageOrBuilder();
/*       */         }
/* 60314 */         return (this.iOAnalogInput3_ == null) ? 
/* 60315 */           DolphinConfig.IO.getDefaultInstance() : this.iOAnalogInput3_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOAnalogInput3FieldBuilder() {
/* 60324 */         if (this.iOAnalogInput3Builder_ == null) {
/* 60325 */           this
/*       */ 
/*       */ 
/*       */             
/* 60329 */             .iOAnalogInput3Builder_ = new SingleFieldBuilderV3((AbstractMessage)getIOAnalogInput3(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/* 60330 */           this.iOAnalogInput3_ = null;
/*       */         } 
/* 60332 */         return this.iOAnalogInput3Builder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasIOAxisX() {
/* 60343 */         return (this.iOAxisXBuilder_ != null || this.iOAxisX_ != null);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO getIOAxisX() {
/* 60350 */         if (this.iOAxisXBuilder_ == null) {
/* 60351 */           return (this.iOAxisX_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOAxisX_;
/*       */         }
/* 60353 */         return (DolphinConfig.IO)this.iOAxisXBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOAxisX(DolphinConfig.IO value) {
/* 60360 */         if (this.iOAxisXBuilder_ == null) {
/* 60361 */           if (value == null) {
/* 60362 */             throw new NullPointerException();
/*       */           }
/* 60364 */           this.iOAxisX_ = value;
/* 60365 */           onChanged();
/*       */         } else {
/* 60367 */           this.iOAxisXBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         
/* 60370 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOAxisX(DolphinConfig.IO.Builder builderForValue) {
/* 60377 */         if (this.iOAxisXBuilder_ == null) {
/* 60378 */           this.iOAxisX_ = builderForValue.build();
/* 60379 */           onChanged();
/*       */         } else {
/* 60381 */           this.iOAxisXBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         
/* 60384 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeIOAxisX(DolphinConfig.IO value) {
/* 60390 */         if (this.iOAxisXBuilder_ == null) {
/* 60391 */           if (this.iOAxisX_ != null) {
/* 60392 */             this
/* 60393 */               .iOAxisX_ = DolphinConfig.IO.newBuilder(this.iOAxisX_).mergeFrom(value).buildPartial();
/*       */           } else {
/* 60395 */             this.iOAxisX_ = value;
/*       */           } 
/* 60397 */           onChanged();
/*       */         } else {
/* 60399 */           this.iOAxisXBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         
/* 60402 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearIOAxisX() {
/* 60408 */         if (this.iOAxisXBuilder_ == null) {
/* 60409 */           this.iOAxisX_ = null;
/* 60410 */           onChanged();
/*       */         } else {
/* 60412 */           this.iOAxisX_ = null;
/* 60413 */           this.iOAxisXBuilder_ = null;
/*       */         } 
/*       */         
/* 60416 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOAxisXBuilder() {
/* 60423 */         onChanged();
/* 60424 */         return (DolphinConfig.IO.Builder)getIOAxisXFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOAxisXOrBuilder() {
/* 60430 */         if (this.iOAxisXBuilder_ != null) {
/* 60431 */           return (DolphinConfig.IOOrBuilder)this.iOAxisXBuilder_.getMessageOrBuilder();
/*       */         }
/* 60433 */         return (this.iOAxisX_ == null) ? 
/* 60434 */           DolphinConfig.IO.getDefaultInstance() : this.iOAxisX_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOAxisXFieldBuilder() {
/* 60443 */         if (this.iOAxisXBuilder_ == null) {
/* 60444 */           this
/*       */ 
/*       */ 
/*       */             
/* 60448 */             .iOAxisXBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOAxisX(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/* 60449 */           this.iOAxisX_ = null;
/*       */         } 
/* 60451 */         return this.iOAxisXBuilder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasIOAxisY() {
/* 60462 */         return (this.iOAxisYBuilder_ != null || this.iOAxisY_ != null);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO getIOAxisY() {
/* 60469 */         if (this.iOAxisYBuilder_ == null) {
/* 60470 */           return (this.iOAxisY_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOAxisY_;
/*       */         }
/* 60472 */         return (DolphinConfig.IO)this.iOAxisYBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOAxisY(DolphinConfig.IO value) {
/* 60479 */         if (this.iOAxisYBuilder_ == null) {
/* 60480 */           if (value == null) {
/* 60481 */             throw new NullPointerException();
/*       */           }
/* 60483 */           this.iOAxisY_ = value;
/* 60484 */           onChanged();
/*       */         } else {
/* 60486 */           this.iOAxisYBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         
/* 60489 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOAxisY(DolphinConfig.IO.Builder builderForValue) {
/* 60496 */         if (this.iOAxisYBuilder_ == null) {
/* 60497 */           this.iOAxisY_ = builderForValue.build();
/* 60498 */           onChanged();
/*       */         } else {
/* 60500 */           this.iOAxisYBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         
/* 60503 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeIOAxisY(DolphinConfig.IO value) {
/* 60509 */         if (this.iOAxisYBuilder_ == null) {
/* 60510 */           if (this.iOAxisY_ != null) {
/* 60511 */             this
/* 60512 */               .iOAxisY_ = DolphinConfig.IO.newBuilder(this.iOAxisY_).mergeFrom(value).buildPartial();
/*       */           } else {
/* 60514 */             this.iOAxisY_ = value;
/*       */           } 
/* 60516 */           onChanged();
/*       */         } else {
/* 60518 */           this.iOAxisYBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         
/* 60521 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearIOAxisY() {
/* 60527 */         if (this.iOAxisYBuilder_ == null) {
/* 60528 */           this.iOAxisY_ = null;
/* 60529 */           onChanged();
/*       */         } else {
/* 60531 */           this.iOAxisY_ = null;
/* 60532 */           this.iOAxisYBuilder_ = null;
/*       */         } 
/*       */         
/* 60535 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOAxisYBuilder() {
/* 60542 */         onChanged();
/* 60543 */         return (DolphinConfig.IO.Builder)getIOAxisYFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOAxisYOrBuilder() {
/* 60549 */         if (this.iOAxisYBuilder_ != null) {
/* 60550 */           return (DolphinConfig.IOOrBuilder)this.iOAxisYBuilder_.getMessageOrBuilder();
/*       */         }
/* 60552 */         return (this.iOAxisY_ == null) ? 
/* 60553 */           DolphinConfig.IO.getDefaultInstance() : this.iOAxisY_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOAxisYFieldBuilder() {
/* 60562 */         if (this.iOAxisYBuilder_ == null) {
/* 60563 */           this
/*       */ 
/*       */ 
/*       */             
/* 60567 */             .iOAxisYBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOAxisY(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/* 60568 */           this.iOAxisY_ = null;
/*       */         } 
/* 60570 */         return this.iOAxisYBuilder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasIOAxisZ() {
/* 60581 */         return (this.iOAxisZBuilder_ != null || this.iOAxisZ_ != null);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO getIOAxisZ() {
/* 60588 */         if (this.iOAxisZBuilder_ == null) {
/* 60589 */           return (this.iOAxisZ_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOAxisZ_;
/*       */         }
/* 60591 */         return (DolphinConfig.IO)this.iOAxisZBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOAxisZ(DolphinConfig.IO value) {
/* 60598 */         if (this.iOAxisZBuilder_ == null) {
/* 60599 */           if (value == null) {
/* 60600 */             throw new NullPointerException();
/*       */           }
/* 60602 */           this.iOAxisZ_ = value;
/* 60603 */           onChanged();
/*       */         } else {
/* 60605 */           this.iOAxisZBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         
/* 60608 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOAxisZ(DolphinConfig.IO.Builder builderForValue) {
/* 60615 */         if (this.iOAxisZBuilder_ == null) {
/* 60616 */           this.iOAxisZ_ = builderForValue.build();
/* 60617 */           onChanged();
/*       */         } else {
/* 60619 */           this.iOAxisZBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         
/* 60622 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeIOAxisZ(DolphinConfig.IO value) {
/* 60628 */         if (this.iOAxisZBuilder_ == null) {
/* 60629 */           if (this.iOAxisZ_ != null) {
/* 60630 */             this
/* 60631 */               .iOAxisZ_ = DolphinConfig.IO.newBuilder(this.iOAxisZ_).mergeFrom(value).buildPartial();
/*       */           } else {
/* 60633 */             this.iOAxisZ_ = value;
/*       */           } 
/* 60635 */           onChanged();
/*       */         } else {
/* 60637 */           this.iOAxisZBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         
/* 60640 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearIOAxisZ() {
/* 60646 */         if (this.iOAxisZBuilder_ == null) {
/* 60647 */           this.iOAxisZ_ = null;
/* 60648 */           onChanged();
/*       */         } else {
/* 60650 */           this.iOAxisZ_ = null;
/* 60651 */           this.iOAxisZBuilder_ = null;
/*       */         } 
/*       */         
/* 60654 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOAxisZBuilder() {
/* 60661 */         onChanged();
/* 60662 */         return (DolphinConfig.IO.Builder)getIOAxisZFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOAxisZOrBuilder() {
/* 60668 */         if (this.iOAxisZBuilder_ != null) {
/* 60669 */           return (DolphinConfig.IOOrBuilder)this.iOAxisZBuilder_.getMessageOrBuilder();
/*       */         }
/* 60671 */         return (this.iOAxisZ_ == null) ? 
/* 60672 */           DolphinConfig.IO.getDefaultInstance() : this.iOAxisZ_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOAxisZFieldBuilder() {
/* 60681 */         if (this.iOAxisZBuilder_ == null) {
/* 60682 */           this
/*       */ 
/*       */ 
/*       */             
/* 60686 */             .iOAxisZBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOAxisZ(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/* 60687 */           this.iOAxisZ_ = null;
/*       */         } 
/* 60689 */         return this.iOAxisZBuilder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasIOECOMaxSpeed() {
/* 60704 */         return (this.iOECOMaxSpeedBuilder_ != null || this.iOECOMaxSpeed_ != null);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO getIOECOMaxSpeed() {
/* 60715 */         if (this.iOECOMaxSpeedBuilder_ == null) {
/* 60716 */           return (this.iOECOMaxSpeed_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOECOMaxSpeed_;
/*       */         }
/* 60718 */         return (DolphinConfig.IO)this.iOECOMaxSpeedBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOECOMaxSpeed(DolphinConfig.IO value) {
/* 60729 */         if (this.iOECOMaxSpeedBuilder_ == null) {
/* 60730 */           if (value == null) {
/* 60731 */             throw new NullPointerException();
/*       */           }
/* 60733 */           this.iOECOMaxSpeed_ = value;
/* 60734 */           onChanged();
/*       */         } else {
/* 60736 */           this.iOECOMaxSpeedBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         
/* 60739 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOECOMaxSpeed(DolphinConfig.IO.Builder builderForValue) {
/* 60750 */         if (this.iOECOMaxSpeedBuilder_ == null) {
/* 60751 */           this.iOECOMaxSpeed_ = builderForValue.build();
/* 60752 */           onChanged();
/*       */         } else {
/* 60754 */           this.iOECOMaxSpeedBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         
/* 60757 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeIOECOMaxSpeed(DolphinConfig.IO value) {
/* 60767 */         if (this.iOECOMaxSpeedBuilder_ == null) {
/* 60768 */           if (this.iOECOMaxSpeed_ != null) {
/* 60769 */             this
/* 60770 */               .iOECOMaxSpeed_ = DolphinConfig.IO.newBuilder(this.iOECOMaxSpeed_).mergeFrom(value).buildPartial();
/*       */           } else {
/* 60772 */             this.iOECOMaxSpeed_ = value;
/*       */           } 
/* 60774 */           onChanged();
/*       */         } else {
/* 60776 */           this.iOECOMaxSpeedBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         
/* 60779 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearIOECOMaxSpeed() {
/* 60789 */         if (this.iOECOMaxSpeedBuilder_ == null) {
/* 60790 */           this.iOECOMaxSpeed_ = null;
/* 60791 */           onChanged();
/*       */         } else {
/* 60793 */           this.iOECOMaxSpeed_ = null;
/* 60794 */           this.iOECOMaxSpeedBuilder_ = null;
/*       */         } 
/*       */         
/* 60797 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOECOMaxSpeedBuilder() {
/* 60808 */         onChanged();
/* 60809 */         return (DolphinConfig.IO.Builder)getIOECOMaxSpeedFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOECOMaxSpeedOrBuilder() {
/* 60819 */         if (this.iOECOMaxSpeedBuilder_ != null) {
/* 60820 */           return (DolphinConfig.IOOrBuilder)this.iOECOMaxSpeedBuilder_.getMessageOrBuilder();
/*       */         }
/* 60822 */         return (this.iOECOMaxSpeed_ == null) ? 
/* 60823 */           DolphinConfig.IO.getDefaultInstance() : this.iOECOMaxSpeed_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOECOMaxSpeedFieldBuilder() {
/* 60836 */         if (this.iOECOMaxSpeedBuilder_ == null) {
/* 60837 */           this
/*       */ 
/*       */ 
/*       */             
/* 60841 */             .iOECOMaxSpeedBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOECOMaxSpeed(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/* 60842 */           this.iOECOMaxSpeed_ = null;
/*       */         } 
/* 60844 */         return this.iOECOMaxSpeedBuilder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasIOECONormalSpeedDistance() {
/* 60855 */         return (this.iOECONormalSpeedDistanceBuilder_ != null || this.iOECONormalSpeedDistance_ != null);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO getIOECONormalSpeedDistance() {
/* 60862 */         if (this.iOECONormalSpeedDistanceBuilder_ == null) {
/* 60863 */           return (this.iOECONormalSpeedDistance_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOECONormalSpeedDistance_;
/*       */         }
/* 60865 */         return (DolphinConfig.IO)this.iOECONormalSpeedDistanceBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOECONormalSpeedDistance(DolphinConfig.IO value) {
/* 60872 */         if (this.iOECONormalSpeedDistanceBuilder_ == null) {
/* 60873 */           if (value == null) {
/* 60874 */             throw new NullPointerException();
/*       */           }
/* 60876 */           this.iOECONormalSpeedDistance_ = value;
/* 60877 */           onChanged();
/*       */         } else {
/* 60879 */           this.iOECONormalSpeedDistanceBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         
/* 60882 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOECONormalSpeedDistance(DolphinConfig.IO.Builder builderForValue) {
/* 60889 */         if (this.iOECONormalSpeedDistanceBuilder_ == null) {
/* 60890 */           this.iOECONormalSpeedDistance_ = builderForValue.build();
/* 60891 */           onChanged();
/*       */         } else {
/* 60893 */           this.iOECONormalSpeedDistanceBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         
/* 60896 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeIOECONormalSpeedDistance(DolphinConfig.IO value) {
/* 60902 */         if (this.iOECONormalSpeedDistanceBuilder_ == null) {
/* 60903 */           if (this.iOECONormalSpeedDistance_ != null) {
/* 60904 */             this
/* 60905 */               .iOECONormalSpeedDistance_ = DolphinConfig.IO.newBuilder(this.iOECONormalSpeedDistance_).mergeFrom(value).buildPartial();
/*       */           } else {
/* 60907 */             this.iOECONormalSpeedDistance_ = value;
/*       */           } 
/* 60909 */           onChanged();
/*       */         } else {
/* 60911 */           this.iOECONormalSpeedDistanceBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         
/* 60914 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearIOECONormalSpeedDistance() {
/* 60920 */         if (this.iOECONormalSpeedDistanceBuilder_ == null) {
/* 60921 */           this.iOECONormalSpeedDistance_ = null;
/* 60922 */           onChanged();
/*       */         } else {
/* 60924 */           this.iOECONormalSpeedDistance_ = null;
/* 60925 */           this.iOECONormalSpeedDistanceBuilder_ = null;
/*       */         } 
/*       */         
/* 60928 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOECONormalSpeedDistanceBuilder() {
/* 60935 */         onChanged();
/* 60936 */         return (DolphinConfig.IO.Builder)getIOECONormalSpeedDistanceFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOECONormalSpeedDistanceOrBuilder() {
/* 60942 */         if (this.iOECONormalSpeedDistanceBuilder_ != null) {
/* 60943 */           return (DolphinConfig.IOOrBuilder)this.iOECONormalSpeedDistanceBuilder_.getMessageOrBuilder();
/*       */         }
/* 60945 */         return (this.iOECONormalSpeedDistance_ == null) ? 
/* 60946 */           DolphinConfig.IO.getDefaultInstance() : this.iOECONormalSpeedDistance_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOECONormalSpeedDistanceFieldBuilder() {
/* 60955 */         if (this.iOECONormalSpeedDistanceBuilder_ == null) {
/* 60956 */           this
/*       */ 
/*       */ 
/*       */             
/* 60960 */             .iOECONormalSpeedDistanceBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOECONormalSpeedDistance(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/* 60961 */           this.iOECONormalSpeedDistance_ = null;
/*       */         } 
/* 60963 */         return this.iOECONormalSpeedDistanceBuilder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasIOECONormalSpeedTotalDistance() {
/* 60974 */         return (this.iOECONormalSpeedTotalDistanceBuilder_ != null || this.iOECONormalSpeedTotalDistance_ != null);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO getIOECONormalSpeedTotalDistance() {
/* 60981 */         if (this.iOECONormalSpeedTotalDistanceBuilder_ == null) {
/* 60982 */           return (this.iOECONormalSpeedTotalDistance_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOECONormalSpeedTotalDistance_;
/*       */         }
/* 60984 */         return (DolphinConfig.IO)this.iOECONormalSpeedTotalDistanceBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOECONormalSpeedTotalDistance(DolphinConfig.IO value) {
/* 60991 */         if (this.iOECONormalSpeedTotalDistanceBuilder_ == null) {
/* 60992 */           if (value == null) {
/* 60993 */             throw new NullPointerException();
/*       */           }
/* 60995 */           this.iOECONormalSpeedTotalDistance_ = value;
/* 60996 */           onChanged();
/*       */         } else {
/* 60998 */           this.iOECONormalSpeedTotalDistanceBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         
/* 61001 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOECONormalSpeedTotalDistance(DolphinConfig.IO.Builder builderForValue) {
/* 61008 */         if (this.iOECONormalSpeedTotalDistanceBuilder_ == null) {
/* 61009 */           this.iOECONormalSpeedTotalDistance_ = builderForValue.build();
/* 61010 */           onChanged();
/*       */         } else {
/* 61012 */           this.iOECONormalSpeedTotalDistanceBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         
/* 61015 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeIOECONormalSpeedTotalDistance(DolphinConfig.IO value) {
/* 61021 */         if (this.iOECONormalSpeedTotalDistanceBuilder_ == null) {
/* 61022 */           if (this.iOECONormalSpeedTotalDistance_ != null) {
/* 61023 */             this
/* 61024 */               .iOECONormalSpeedTotalDistance_ = DolphinConfig.IO.newBuilder(this.iOECONormalSpeedTotalDistance_).mergeFrom(value).buildPartial();
/*       */           } else {
/* 61026 */             this.iOECONormalSpeedTotalDistance_ = value;
/*       */           } 
/* 61028 */           onChanged();
/*       */         } else {
/* 61030 */           this.iOECONormalSpeedTotalDistanceBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         
/* 61033 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearIOECONormalSpeedTotalDistance() {
/* 61039 */         if (this.iOECONormalSpeedTotalDistanceBuilder_ == null) {
/* 61040 */           this.iOECONormalSpeedTotalDistance_ = null;
/* 61041 */           onChanged();
/*       */         } else {
/* 61043 */           this.iOECONormalSpeedTotalDistance_ = null;
/* 61044 */           this.iOECONormalSpeedTotalDistanceBuilder_ = null;
/*       */         } 
/*       */         
/* 61047 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOECONormalSpeedTotalDistanceBuilder() {
/* 61054 */         onChanged();
/* 61055 */         return (DolphinConfig.IO.Builder)getIOECONormalSpeedTotalDistanceFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOECONormalSpeedTotalDistanceOrBuilder() {
/* 61061 */         if (this.iOECONormalSpeedTotalDistanceBuilder_ != null) {
/* 61062 */           return (DolphinConfig.IOOrBuilder)this.iOECONormalSpeedTotalDistanceBuilder_.getMessageOrBuilder();
/*       */         }
/* 61064 */         return (this.iOECONormalSpeedTotalDistance_ == null) ? 
/* 61065 */           DolphinConfig.IO.getDefaultInstance() : this.iOECONormalSpeedTotalDistance_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOECONormalSpeedTotalDistanceFieldBuilder() {
/* 61074 */         if (this.iOECONormalSpeedTotalDistanceBuilder_ == null) {
/* 61075 */           this
/*       */ 
/*       */ 
/*       */             
/* 61079 */             .iOECONormalSpeedTotalDistanceBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOECONormalSpeedTotalDistance(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/* 61080 */           this.iOECONormalSpeedTotalDistance_ = null;
/*       */         } 
/* 61082 */         return this.iOECONormalSpeedTotalDistanceBuilder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasIOECONormalSpeedTimer() {
/* 61093 */         return (this.iOECONormalSpeedTimerBuilder_ != null || this.iOECONormalSpeedTimer_ != null);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO getIOECONormalSpeedTimer() {
/* 61100 */         if (this.iOECONormalSpeedTimerBuilder_ == null) {
/* 61101 */           return (this.iOECONormalSpeedTimer_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOECONormalSpeedTimer_;
/*       */         }
/* 61103 */         return (DolphinConfig.IO)this.iOECONormalSpeedTimerBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOECONormalSpeedTimer(DolphinConfig.IO value) {
/* 61110 */         if (this.iOECONormalSpeedTimerBuilder_ == null) {
/* 61111 */           if (value == null) {
/* 61112 */             throw new NullPointerException();
/*       */           }
/* 61114 */           this.iOECONormalSpeedTimer_ = value;
/* 61115 */           onChanged();
/*       */         } else {
/* 61117 */           this.iOECONormalSpeedTimerBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         
/* 61120 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOECONormalSpeedTimer(DolphinConfig.IO.Builder builderForValue) {
/* 61127 */         if (this.iOECONormalSpeedTimerBuilder_ == null) {
/* 61128 */           this.iOECONormalSpeedTimer_ = builderForValue.build();
/* 61129 */           onChanged();
/*       */         } else {
/* 61131 */           this.iOECONormalSpeedTimerBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         
/* 61134 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeIOECONormalSpeedTimer(DolphinConfig.IO value) {
/* 61140 */         if (this.iOECONormalSpeedTimerBuilder_ == null) {
/* 61141 */           if (this.iOECONormalSpeedTimer_ != null) {
/* 61142 */             this
/* 61143 */               .iOECONormalSpeedTimer_ = DolphinConfig.IO.newBuilder(this.iOECONormalSpeedTimer_).mergeFrom(value).buildPartial();
/*       */           } else {
/* 61145 */             this.iOECONormalSpeedTimer_ = value;
/*       */           } 
/* 61147 */           onChanged();
/*       */         } else {
/* 61149 */           this.iOECONormalSpeedTimerBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         
/* 61152 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearIOECONormalSpeedTimer() {
/* 61158 */         if (this.iOECONormalSpeedTimerBuilder_ == null) {
/* 61159 */           this.iOECONormalSpeedTimer_ = null;
/* 61160 */           onChanged();
/*       */         } else {
/* 61162 */           this.iOECONormalSpeedTimer_ = null;
/* 61163 */           this.iOECONormalSpeedTimerBuilder_ = null;
/*       */         } 
/*       */         
/* 61166 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOECONormalSpeedTimerBuilder() {
/* 61173 */         onChanged();
/* 61174 */         return (DolphinConfig.IO.Builder)getIOECONormalSpeedTimerFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOECONormalSpeedTimerOrBuilder() {
/* 61180 */         if (this.iOECONormalSpeedTimerBuilder_ != null) {
/* 61181 */           return (DolphinConfig.IOOrBuilder)this.iOECONormalSpeedTimerBuilder_.getMessageOrBuilder();
/*       */         }
/* 61183 */         return (this.iOECONormalSpeedTimer_ == null) ? 
/* 61184 */           DolphinConfig.IO.getDefaultInstance() : this.iOECONormalSpeedTimer_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOECONormalSpeedTimerFieldBuilder() {
/* 61193 */         if (this.iOECONormalSpeedTimerBuilder_ == null) {
/* 61194 */           this
/*       */ 
/*       */ 
/*       */             
/* 61198 */             .iOECONormalSpeedTimerBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOECONormalSpeedTimer(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/* 61199 */           this.iOECONormalSpeedTimer_ = null;
/*       */         } 
/* 61201 */         return this.iOECONormalSpeedTimerBuilder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasIOECONormalSpeedTotalTimer() {
/* 61212 */         return (this.iOECONormalSpeedTotalTimerBuilder_ != null || this.iOECONormalSpeedTotalTimer_ != null);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO getIOECONormalSpeedTotalTimer() {
/* 61219 */         if (this.iOECONormalSpeedTotalTimerBuilder_ == null) {
/* 61220 */           return (this.iOECONormalSpeedTotalTimer_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOECONormalSpeedTotalTimer_;
/*       */         }
/* 61222 */         return (DolphinConfig.IO)this.iOECONormalSpeedTotalTimerBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOECONormalSpeedTotalTimer(DolphinConfig.IO value) {
/* 61229 */         if (this.iOECONormalSpeedTotalTimerBuilder_ == null) {
/* 61230 */           if (value == null) {
/* 61231 */             throw new NullPointerException();
/*       */           }
/* 61233 */           this.iOECONormalSpeedTotalTimer_ = value;
/* 61234 */           onChanged();
/*       */         } else {
/* 61236 */           this.iOECONormalSpeedTotalTimerBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         
/* 61239 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOECONormalSpeedTotalTimer(DolphinConfig.IO.Builder builderForValue) {
/* 61246 */         if (this.iOECONormalSpeedTotalTimerBuilder_ == null) {
/* 61247 */           this.iOECONormalSpeedTotalTimer_ = builderForValue.build();
/* 61248 */           onChanged();
/*       */         } else {
/* 61250 */           this.iOECONormalSpeedTotalTimerBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         
/* 61253 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeIOECONormalSpeedTotalTimer(DolphinConfig.IO value) {
/* 61259 */         if (this.iOECONormalSpeedTotalTimerBuilder_ == null) {
/* 61260 */           if (this.iOECONormalSpeedTotalTimer_ != null) {
/* 61261 */             this
/* 61262 */               .iOECONormalSpeedTotalTimer_ = DolphinConfig.IO.newBuilder(this.iOECONormalSpeedTotalTimer_).mergeFrom(value).buildPartial();
/*       */           } else {
/* 61264 */             this.iOECONormalSpeedTotalTimer_ = value;
/*       */           } 
/* 61266 */           onChanged();
/*       */         } else {
/* 61268 */           this.iOECONormalSpeedTotalTimerBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         
/* 61271 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearIOECONormalSpeedTotalTimer() {
/* 61277 */         if (this.iOECONormalSpeedTotalTimerBuilder_ == null) {
/* 61278 */           this.iOECONormalSpeedTotalTimer_ = null;
/* 61279 */           onChanged();
/*       */         } else {
/* 61281 */           this.iOECONormalSpeedTotalTimer_ = null;
/* 61282 */           this.iOECONormalSpeedTotalTimerBuilder_ = null;
/*       */         } 
/*       */         
/* 61285 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOECONormalSpeedTotalTimerBuilder() {
/* 61292 */         onChanged();
/* 61293 */         return (DolphinConfig.IO.Builder)getIOECONormalSpeedTotalTimerFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOECONormalSpeedTotalTimerOrBuilder() {
/* 61299 */         if (this.iOECONormalSpeedTotalTimerBuilder_ != null) {
/* 61300 */           return (DolphinConfig.IOOrBuilder)this.iOECONormalSpeedTotalTimerBuilder_.getMessageOrBuilder();
/*       */         }
/* 61302 */         return (this.iOECONormalSpeedTotalTimer_ == null) ? 
/* 61303 */           DolphinConfig.IO.getDefaultInstance() : this.iOECONormalSpeedTotalTimer_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOECONormalSpeedTotalTimerFieldBuilder() {
/* 61312 */         if (this.iOECONormalSpeedTotalTimerBuilder_ == null) {
/* 61313 */           this
/*       */ 
/*       */ 
/*       */             
/* 61317 */             .iOECONormalSpeedTotalTimerBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOECONormalSpeedTotalTimer(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/* 61318 */           this.iOECONormalSpeedTotalTimer_ = null;
/*       */         } 
/* 61320 */         return this.iOECONormalSpeedTotalTimerBuilder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasIOECOOverSpeedingDistance() {
/* 61331 */         return (this.iOECOOverSpeedingDistanceBuilder_ != null || this.iOECOOverSpeedingDistance_ != null);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO getIOECOOverSpeedingDistance() {
/* 61338 */         if (this.iOECOOverSpeedingDistanceBuilder_ == null) {
/* 61339 */           return (this.iOECOOverSpeedingDistance_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOECOOverSpeedingDistance_;
/*       */         }
/* 61341 */         return (DolphinConfig.IO)this.iOECOOverSpeedingDistanceBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOECOOverSpeedingDistance(DolphinConfig.IO value) {
/* 61348 */         if (this.iOECOOverSpeedingDistanceBuilder_ == null) {
/* 61349 */           if (value == null) {
/* 61350 */             throw new NullPointerException();
/*       */           }
/* 61352 */           this.iOECOOverSpeedingDistance_ = value;
/* 61353 */           onChanged();
/*       */         } else {
/* 61355 */           this.iOECOOverSpeedingDistanceBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         
/* 61358 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOECOOverSpeedingDistance(DolphinConfig.IO.Builder builderForValue) {
/* 61365 */         if (this.iOECOOverSpeedingDistanceBuilder_ == null) {
/* 61366 */           this.iOECOOverSpeedingDistance_ = builderForValue.build();
/* 61367 */           onChanged();
/*       */         } else {
/* 61369 */           this.iOECOOverSpeedingDistanceBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         
/* 61372 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeIOECOOverSpeedingDistance(DolphinConfig.IO value) {
/* 61378 */         if (this.iOECOOverSpeedingDistanceBuilder_ == null) {
/* 61379 */           if (this.iOECOOverSpeedingDistance_ != null) {
/* 61380 */             this
/* 61381 */               .iOECOOverSpeedingDistance_ = DolphinConfig.IO.newBuilder(this.iOECOOverSpeedingDistance_).mergeFrom(value).buildPartial();
/*       */           } else {
/* 61383 */             this.iOECOOverSpeedingDistance_ = value;
/*       */           } 
/* 61385 */           onChanged();
/*       */         } else {
/* 61387 */           this.iOECOOverSpeedingDistanceBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         
/* 61390 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearIOECOOverSpeedingDistance() {
/* 61396 */         if (this.iOECOOverSpeedingDistanceBuilder_ == null) {
/* 61397 */           this.iOECOOverSpeedingDistance_ = null;
/* 61398 */           onChanged();
/*       */         } else {
/* 61400 */           this.iOECOOverSpeedingDistance_ = null;
/* 61401 */           this.iOECOOverSpeedingDistanceBuilder_ = null;
/*       */         } 
/*       */         
/* 61404 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOECOOverSpeedingDistanceBuilder() {
/* 61411 */         onChanged();
/* 61412 */         return (DolphinConfig.IO.Builder)getIOECOOverSpeedingDistanceFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOECOOverSpeedingDistanceOrBuilder() {
/* 61418 */         if (this.iOECOOverSpeedingDistanceBuilder_ != null) {
/* 61419 */           return (DolphinConfig.IOOrBuilder)this.iOECOOverSpeedingDistanceBuilder_.getMessageOrBuilder();
/*       */         }
/* 61421 */         return (this.iOECOOverSpeedingDistance_ == null) ? 
/* 61422 */           DolphinConfig.IO.getDefaultInstance() : this.iOECOOverSpeedingDistance_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOECOOverSpeedingDistanceFieldBuilder() {
/* 61431 */         if (this.iOECOOverSpeedingDistanceBuilder_ == null) {
/* 61432 */           this
/*       */ 
/*       */ 
/*       */             
/* 61436 */             .iOECOOverSpeedingDistanceBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOECOOverSpeedingDistance(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/* 61437 */           this.iOECOOverSpeedingDistance_ = null;
/*       */         } 
/* 61439 */         return this.iOECOOverSpeedingDistanceBuilder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasIOECOOverSpeedingTotalDistance() {
/* 61450 */         return (this.iOECOOverSpeedingTotalDistanceBuilder_ != null || this.iOECOOverSpeedingTotalDistance_ != null);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO getIOECOOverSpeedingTotalDistance() {
/* 61457 */         if (this.iOECOOverSpeedingTotalDistanceBuilder_ == null) {
/* 61458 */           return (this.iOECOOverSpeedingTotalDistance_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOECOOverSpeedingTotalDistance_;
/*       */         }
/* 61460 */         return (DolphinConfig.IO)this.iOECOOverSpeedingTotalDistanceBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOECOOverSpeedingTotalDistance(DolphinConfig.IO value) {
/* 61467 */         if (this.iOECOOverSpeedingTotalDistanceBuilder_ == null) {
/* 61468 */           if (value == null) {
/* 61469 */             throw new NullPointerException();
/*       */           }
/* 61471 */           this.iOECOOverSpeedingTotalDistance_ = value;
/* 61472 */           onChanged();
/*       */         } else {
/* 61474 */           this.iOECOOverSpeedingTotalDistanceBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         
/* 61477 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOECOOverSpeedingTotalDistance(DolphinConfig.IO.Builder builderForValue) {
/* 61484 */         if (this.iOECOOverSpeedingTotalDistanceBuilder_ == null) {
/* 61485 */           this.iOECOOverSpeedingTotalDistance_ = builderForValue.build();
/* 61486 */           onChanged();
/*       */         } else {
/* 61488 */           this.iOECOOverSpeedingTotalDistanceBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         
/* 61491 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeIOECOOverSpeedingTotalDistance(DolphinConfig.IO value) {
/* 61497 */         if (this.iOECOOverSpeedingTotalDistanceBuilder_ == null) {
/* 61498 */           if (this.iOECOOverSpeedingTotalDistance_ != null) {
/* 61499 */             this
/* 61500 */               .iOECOOverSpeedingTotalDistance_ = DolphinConfig.IO.newBuilder(this.iOECOOverSpeedingTotalDistance_).mergeFrom(value).buildPartial();
/*       */           } else {
/* 61502 */             this.iOECOOverSpeedingTotalDistance_ = value;
/*       */           } 
/* 61504 */           onChanged();
/*       */         } else {
/* 61506 */           this.iOECOOverSpeedingTotalDistanceBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         
/* 61509 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearIOECOOverSpeedingTotalDistance() {
/* 61515 */         if (this.iOECOOverSpeedingTotalDistanceBuilder_ == null) {
/* 61516 */           this.iOECOOverSpeedingTotalDistance_ = null;
/* 61517 */           onChanged();
/*       */         } else {
/* 61519 */           this.iOECOOverSpeedingTotalDistance_ = null;
/* 61520 */           this.iOECOOverSpeedingTotalDistanceBuilder_ = null;
/*       */         } 
/*       */         
/* 61523 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOECOOverSpeedingTotalDistanceBuilder() {
/* 61530 */         onChanged();
/* 61531 */         return (DolphinConfig.IO.Builder)getIOECOOverSpeedingTotalDistanceFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOECOOverSpeedingTotalDistanceOrBuilder() {
/* 61537 */         if (this.iOECOOverSpeedingTotalDistanceBuilder_ != null) {
/* 61538 */           return (DolphinConfig.IOOrBuilder)this.iOECOOverSpeedingTotalDistanceBuilder_.getMessageOrBuilder();
/*       */         }
/* 61540 */         return (this.iOECOOverSpeedingTotalDistance_ == null) ? 
/* 61541 */           DolphinConfig.IO.getDefaultInstance() : this.iOECOOverSpeedingTotalDistance_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOECOOverSpeedingTotalDistanceFieldBuilder() {
/* 61550 */         if (this.iOECOOverSpeedingTotalDistanceBuilder_ == null) {
/* 61551 */           this
/*       */ 
/*       */ 
/*       */             
/* 61555 */             .iOECOOverSpeedingTotalDistanceBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOECOOverSpeedingTotalDistance(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/* 61556 */           this.iOECOOverSpeedingTotalDistance_ = null;
/*       */         } 
/* 61558 */         return this.iOECOOverSpeedingTotalDistanceBuilder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasIOECOOverSpeedingTimer() {
/* 61569 */         return (this.iOECOOverSpeedingTimerBuilder_ != null || this.iOECOOverSpeedingTimer_ != null);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO getIOECOOverSpeedingTimer() {
/* 61576 */         if (this.iOECOOverSpeedingTimerBuilder_ == null) {
/* 61577 */           return (this.iOECOOverSpeedingTimer_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOECOOverSpeedingTimer_;
/*       */         }
/* 61579 */         return (DolphinConfig.IO)this.iOECOOverSpeedingTimerBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOECOOverSpeedingTimer(DolphinConfig.IO value) {
/* 61586 */         if (this.iOECOOverSpeedingTimerBuilder_ == null) {
/* 61587 */           if (value == null) {
/* 61588 */             throw new NullPointerException();
/*       */           }
/* 61590 */           this.iOECOOverSpeedingTimer_ = value;
/* 61591 */           onChanged();
/*       */         } else {
/* 61593 */           this.iOECOOverSpeedingTimerBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         
/* 61596 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOECOOverSpeedingTimer(DolphinConfig.IO.Builder builderForValue) {
/* 61603 */         if (this.iOECOOverSpeedingTimerBuilder_ == null) {
/* 61604 */           this.iOECOOverSpeedingTimer_ = builderForValue.build();
/* 61605 */           onChanged();
/*       */         } else {
/* 61607 */           this.iOECOOverSpeedingTimerBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         
/* 61610 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeIOECOOverSpeedingTimer(DolphinConfig.IO value) {
/* 61616 */         if (this.iOECOOverSpeedingTimerBuilder_ == null) {
/* 61617 */           if (this.iOECOOverSpeedingTimer_ != null) {
/* 61618 */             this
/* 61619 */               .iOECOOverSpeedingTimer_ = DolphinConfig.IO.newBuilder(this.iOECOOverSpeedingTimer_).mergeFrom(value).buildPartial();
/*       */           } else {
/* 61621 */             this.iOECOOverSpeedingTimer_ = value;
/*       */           } 
/* 61623 */           onChanged();
/*       */         } else {
/* 61625 */           this.iOECOOverSpeedingTimerBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         
/* 61628 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearIOECOOverSpeedingTimer() {
/* 61634 */         if (this.iOECOOverSpeedingTimerBuilder_ == null) {
/* 61635 */           this.iOECOOverSpeedingTimer_ = null;
/* 61636 */           onChanged();
/*       */         } else {
/* 61638 */           this.iOECOOverSpeedingTimer_ = null;
/* 61639 */           this.iOECOOverSpeedingTimerBuilder_ = null;
/*       */         } 
/*       */         
/* 61642 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOECOOverSpeedingTimerBuilder() {
/* 61649 */         onChanged();
/* 61650 */         return (DolphinConfig.IO.Builder)getIOECOOverSpeedingTimerFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOECOOverSpeedingTimerOrBuilder() {
/* 61656 */         if (this.iOECOOverSpeedingTimerBuilder_ != null) {
/* 61657 */           return (DolphinConfig.IOOrBuilder)this.iOECOOverSpeedingTimerBuilder_.getMessageOrBuilder();
/*       */         }
/* 61659 */         return (this.iOECOOverSpeedingTimer_ == null) ? 
/* 61660 */           DolphinConfig.IO.getDefaultInstance() : this.iOECOOverSpeedingTimer_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOECOOverSpeedingTimerFieldBuilder() {
/* 61669 */         if (this.iOECOOverSpeedingTimerBuilder_ == null) {
/* 61670 */           this
/*       */ 
/*       */ 
/*       */             
/* 61674 */             .iOECOOverSpeedingTimerBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOECOOverSpeedingTimer(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/* 61675 */           this.iOECOOverSpeedingTimer_ = null;
/*       */         } 
/* 61677 */         return this.iOECOOverSpeedingTimerBuilder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasIOECOOverSpeedingTotalTimer() {
/* 61688 */         return (this.iOECOOverSpeedingTotalTimerBuilder_ != null || this.iOECOOverSpeedingTotalTimer_ != null);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO getIOECOOverSpeedingTotalTimer() {
/* 61695 */         if (this.iOECOOverSpeedingTotalTimerBuilder_ == null) {
/* 61696 */           return (this.iOECOOverSpeedingTotalTimer_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOECOOverSpeedingTotalTimer_;
/*       */         }
/* 61698 */         return (DolphinConfig.IO)this.iOECOOverSpeedingTotalTimerBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOECOOverSpeedingTotalTimer(DolphinConfig.IO value) {
/* 61705 */         if (this.iOECOOverSpeedingTotalTimerBuilder_ == null) {
/* 61706 */           if (value == null) {
/* 61707 */             throw new NullPointerException();
/*       */           }
/* 61709 */           this.iOECOOverSpeedingTotalTimer_ = value;
/* 61710 */           onChanged();
/*       */         } else {
/* 61712 */           this.iOECOOverSpeedingTotalTimerBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         
/* 61715 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOECOOverSpeedingTotalTimer(DolphinConfig.IO.Builder builderForValue) {
/* 61722 */         if (this.iOECOOverSpeedingTotalTimerBuilder_ == null) {
/* 61723 */           this.iOECOOverSpeedingTotalTimer_ = builderForValue.build();
/* 61724 */           onChanged();
/*       */         } else {
/* 61726 */           this.iOECOOverSpeedingTotalTimerBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         
/* 61729 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeIOECOOverSpeedingTotalTimer(DolphinConfig.IO value) {
/* 61735 */         if (this.iOECOOverSpeedingTotalTimerBuilder_ == null) {
/* 61736 */           if (this.iOECOOverSpeedingTotalTimer_ != null) {
/* 61737 */             this
/* 61738 */               .iOECOOverSpeedingTotalTimer_ = DolphinConfig.IO.newBuilder(this.iOECOOverSpeedingTotalTimer_).mergeFrom(value).buildPartial();
/*       */           } else {
/* 61740 */             this.iOECOOverSpeedingTotalTimer_ = value;
/*       */           } 
/* 61742 */           onChanged();
/*       */         } else {
/* 61744 */           this.iOECOOverSpeedingTotalTimerBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         
/* 61747 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearIOECOOverSpeedingTotalTimer() {
/* 61753 */         if (this.iOECOOverSpeedingTotalTimerBuilder_ == null) {
/* 61754 */           this.iOECOOverSpeedingTotalTimer_ = null;
/* 61755 */           onChanged();
/*       */         } else {
/* 61757 */           this.iOECOOverSpeedingTotalTimer_ = null;
/* 61758 */           this.iOECOOverSpeedingTotalTimerBuilder_ = null;
/*       */         } 
/*       */         
/* 61761 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOECOOverSpeedingTotalTimerBuilder() {
/* 61768 */         onChanged();
/* 61769 */         return (DolphinConfig.IO.Builder)getIOECOOverSpeedingTotalTimerFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOECOOverSpeedingTotalTimerOrBuilder() {
/* 61775 */         if (this.iOECOOverSpeedingTotalTimerBuilder_ != null) {
/* 61776 */           return (DolphinConfig.IOOrBuilder)this.iOECOOverSpeedingTotalTimerBuilder_.getMessageOrBuilder();
/*       */         }
/* 61778 */         return (this.iOECOOverSpeedingTotalTimer_ == null) ? 
/* 61779 */           DolphinConfig.IO.getDefaultInstance() : this.iOECOOverSpeedingTotalTimer_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOECOOverSpeedingTotalTimerFieldBuilder() {
/* 61788 */         if (this.iOECOOverSpeedingTotalTimerBuilder_ == null) {
/* 61789 */           this
/*       */ 
/*       */ 
/*       */             
/* 61793 */             .iOECOOverSpeedingTotalTimerBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOECOOverSpeedingTotalTimer(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/* 61794 */           this.iOECOOverSpeedingTotalTimer_ = null;
/*       */         } 
/* 61796 */         return this.iOECOOverSpeedingTotalTimerBuilder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasIOECOMaxRPM() {
/* 61807 */         return (this.iOECOMaxRPMBuilder_ != null || this.iOECOMaxRPM_ != null);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO getIOECOMaxRPM() {
/* 61814 */         if (this.iOECOMaxRPMBuilder_ == null) {
/* 61815 */           return (this.iOECOMaxRPM_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOECOMaxRPM_;
/*       */         }
/* 61817 */         return (DolphinConfig.IO)this.iOECOMaxRPMBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOECOMaxRPM(DolphinConfig.IO value) {
/* 61824 */         if (this.iOECOMaxRPMBuilder_ == null) {
/* 61825 */           if (value == null) {
/* 61826 */             throw new NullPointerException();
/*       */           }
/* 61828 */           this.iOECOMaxRPM_ = value;
/* 61829 */           onChanged();
/*       */         } else {
/* 61831 */           this.iOECOMaxRPMBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         
/* 61834 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOECOMaxRPM(DolphinConfig.IO.Builder builderForValue) {
/* 61841 */         if (this.iOECOMaxRPMBuilder_ == null) {
/* 61842 */           this.iOECOMaxRPM_ = builderForValue.build();
/* 61843 */           onChanged();
/*       */         } else {
/* 61845 */           this.iOECOMaxRPMBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         
/* 61848 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeIOECOMaxRPM(DolphinConfig.IO value) {
/* 61854 */         if (this.iOECOMaxRPMBuilder_ == null) {
/* 61855 */           if (this.iOECOMaxRPM_ != null) {
/* 61856 */             this
/* 61857 */               .iOECOMaxRPM_ = DolphinConfig.IO.newBuilder(this.iOECOMaxRPM_).mergeFrom(value).buildPartial();
/*       */           } else {
/* 61859 */             this.iOECOMaxRPM_ = value;
/*       */           } 
/* 61861 */           onChanged();
/*       */         } else {
/* 61863 */           this.iOECOMaxRPMBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         
/* 61866 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearIOECOMaxRPM() {
/* 61872 */         if (this.iOECOMaxRPMBuilder_ == null) {
/* 61873 */           this.iOECOMaxRPM_ = null;
/* 61874 */           onChanged();
/*       */         } else {
/* 61876 */           this.iOECOMaxRPM_ = null;
/* 61877 */           this.iOECOMaxRPMBuilder_ = null;
/*       */         } 
/*       */         
/* 61880 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOECOMaxRPMBuilder() {
/* 61887 */         onChanged();
/* 61888 */         return (DolphinConfig.IO.Builder)getIOECOMaxRPMFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOECOMaxRPMOrBuilder() {
/* 61894 */         if (this.iOECOMaxRPMBuilder_ != null) {
/* 61895 */           return (DolphinConfig.IOOrBuilder)this.iOECOMaxRPMBuilder_.getMessageOrBuilder();
/*       */         }
/* 61897 */         return (this.iOECOMaxRPM_ == null) ? 
/* 61898 */           DolphinConfig.IO.getDefaultInstance() : this.iOECOMaxRPM_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOECOMaxRPMFieldBuilder() {
/* 61907 */         if (this.iOECOMaxRPMBuilder_ == null) {
/* 61908 */           this
/*       */ 
/*       */ 
/*       */             
/* 61912 */             .iOECOMaxRPMBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOECOMaxRPM(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/* 61913 */           this.iOECOMaxRPM_ = null;
/*       */         } 
/* 61915 */         return this.iOECOMaxRPMBuilder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasIOECORPMGreenBandDistance() {
/* 61926 */         return (this.iOECORPMGreenBandDistanceBuilder_ != null || this.iOECORPMGreenBandDistance_ != null);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO getIOECORPMGreenBandDistance() {
/* 61933 */         if (this.iOECORPMGreenBandDistanceBuilder_ == null) {
/* 61934 */           return (this.iOECORPMGreenBandDistance_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOECORPMGreenBandDistance_;
/*       */         }
/* 61936 */         return (DolphinConfig.IO)this.iOECORPMGreenBandDistanceBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOECORPMGreenBandDistance(DolphinConfig.IO value) {
/* 61943 */         if (this.iOECORPMGreenBandDistanceBuilder_ == null) {
/* 61944 */           if (value == null) {
/* 61945 */             throw new NullPointerException();
/*       */           }
/* 61947 */           this.iOECORPMGreenBandDistance_ = value;
/* 61948 */           onChanged();
/*       */         } else {
/* 61950 */           this.iOECORPMGreenBandDistanceBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         
/* 61953 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOECORPMGreenBandDistance(DolphinConfig.IO.Builder builderForValue) {
/* 61960 */         if (this.iOECORPMGreenBandDistanceBuilder_ == null) {
/* 61961 */           this.iOECORPMGreenBandDistance_ = builderForValue.build();
/* 61962 */           onChanged();
/*       */         } else {
/* 61964 */           this.iOECORPMGreenBandDistanceBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         
/* 61967 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeIOECORPMGreenBandDistance(DolphinConfig.IO value) {
/* 61973 */         if (this.iOECORPMGreenBandDistanceBuilder_ == null) {
/* 61974 */           if (this.iOECORPMGreenBandDistance_ != null) {
/* 61975 */             this
/* 61976 */               .iOECORPMGreenBandDistance_ = DolphinConfig.IO.newBuilder(this.iOECORPMGreenBandDistance_).mergeFrom(value).buildPartial();
/*       */           } else {
/* 61978 */             this.iOECORPMGreenBandDistance_ = value;
/*       */           } 
/* 61980 */           onChanged();
/*       */         } else {
/* 61982 */           this.iOECORPMGreenBandDistanceBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         
/* 61985 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearIOECORPMGreenBandDistance() {
/* 61991 */         if (this.iOECORPMGreenBandDistanceBuilder_ == null) {
/* 61992 */           this.iOECORPMGreenBandDistance_ = null;
/* 61993 */           onChanged();
/*       */         } else {
/* 61995 */           this.iOECORPMGreenBandDistance_ = null;
/* 61996 */           this.iOECORPMGreenBandDistanceBuilder_ = null;
/*       */         } 
/*       */         
/* 61999 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOECORPMGreenBandDistanceBuilder() {
/* 62006 */         onChanged();
/* 62007 */         return (DolphinConfig.IO.Builder)getIOECORPMGreenBandDistanceFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOECORPMGreenBandDistanceOrBuilder() {
/* 62013 */         if (this.iOECORPMGreenBandDistanceBuilder_ != null) {
/* 62014 */           return (DolphinConfig.IOOrBuilder)this.iOECORPMGreenBandDistanceBuilder_.getMessageOrBuilder();
/*       */         }
/* 62016 */         return (this.iOECORPMGreenBandDistance_ == null) ? 
/* 62017 */           DolphinConfig.IO.getDefaultInstance() : this.iOECORPMGreenBandDistance_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOECORPMGreenBandDistanceFieldBuilder() {
/* 62026 */         if (this.iOECORPMGreenBandDistanceBuilder_ == null) {
/* 62027 */           this
/*       */ 
/*       */ 
/*       */             
/* 62031 */             .iOECORPMGreenBandDistanceBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOECORPMGreenBandDistance(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/* 62032 */           this.iOECORPMGreenBandDistance_ = null;
/*       */         } 
/* 62034 */         return this.iOECORPMGreenBandDistanceBuilder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasIOECORPMGreenBandTotalDistance() {
/* 62045 */         return (this.iOECORPMGreenBandTotalDistanceBuilder_ != null || this.iOECORPMGreenBandTotalDistance_ != null);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO getIOECORPMGreenBandTotalDistance() {
/* 62052 */         if (this.iOECORPMGreenBandTotalDistanceBuilder_ == null) {
/* 62053 */           return (this.iOECORPMGreenBandTotalDistance_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOECORPMGreenBandTotalDistance_;
/*       */         }
/* 62055 */         return (DolphinConfig.IO)this.iOECORPMGreenBandTotalDistanceBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOECORPMGreenBandTotalDistance(DolphinConfig.IO value) {
/* 62062 */         if (this.iOECORPMGreenBandTotalDistanceBuilder_ == null) {
/* 62063 */           if (value == null) {
/* 62064 */             throw new NullPointerException();
/*       */           }
/* 62066 */           this.iOECORPMGreenBandTotalDistance_ = value;
/* 62067 */           onChanged();
/*       */         } else {
/* 62069 */           this.iOECORPMGreenBandTotalDistanceBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         
/* 62072 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOECORPMGreenBandTotalDistance(DolphinConfig.IO.Builder builderForValue) {
/* 62079 */         if (this.iOECORPMGreenBandTotalDistanceBuilder_ == null) {
/* 62080 */           this.iOECORPMGreenBandTotalDistance_ = builderForValue.build();
/* 62081 */           onChanged();
/*       */         } else {
/* 62083 */           this.iOECORPMGreenBandTotalDistanceBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         
/* 62086 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeIOECORPMGreenBandTotalDistance(DolphinConfig.IO value) {
/* 62092 */         if (this.iOECORPMGreenBandTotalDistanceBuilder_ == null) {
/* 62093 */           if (this.iOECORPMGreenBandTotalDistance_ != null) {
/* 62094 */             this
/* 62095 */               .iOECORPMGreenBandTotalDistance_ = DolphinConfig.IO.newBuilder(this.iOECORPMGreenBandTotalDistance_).mergeFrom(value).buildPartial();
/*       */           } else {
/* 62097 */             this.iOECORPMGreenBandTotalDistance_ = value;
/*       */           } 
/* 62099 */           onChanged();
/*       */         } else {
/* 62101 */           this.iOECORPMGreenBandTotalDistanceBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         
/* 62104 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearIOECORPMGreenBandTotalDistance() {
/* 62110 */         if (this.iOECORPMGreenBandTotalDistanceBuilder_ == null) {
/* 62111 */           this.iOECORPMGreenBandTotalDistance_ = null;
/* 62112 */           onChanged();
/*       */         } else {
/* 62114 */           this.iOECORPMGreenBandTotalDistance_ = null;
/* 62115 */           this.iOECORPMGreenBandTotalDistanceBuilder_ = null;
/*       */         } 
/*       */         
/* 62118 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOECORPMGreenBandTotalDistanceBuilder() {
/* 62125 */         onChanged();
/* 62126 */         return (DolphinConfig.IO.Builder)getIOECORPMGreenBandTotalDistanceFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOECORPMGreenBandTotalDistanceOrBuilder() {
/* 62132 */         if (this.iOECORPMGreenBandTotalDistanceBuilder_ != null) {
/* 62133 */           return (DolphinConfig.IOOrBuilder)this.iOECORPMGreenBandTotalDistanceBuilder_.getMessageOrBuilder();
/*       */         }
/* 62135 */         return (this.iOECORPMGreenBandTotalDistance_ == null) ? 
/* 62136 */           DolphinConfig.IO.getDefaultInstance() : this.iOECORPMGreenBandTotalDistance_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOECORPMGreenBandTotalDistanceFieldBuilder() {
/* 62145 */         if (this.iOECORPMGreenBandTotalDistanceBuilder_ == null) {
/* 62146 */           this
/*       */ 
/*       */ 
/*       */             
/* 62150 */             .iOECORPMGreenBandTotalDistanceBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOECORPMGreenBandTotalDistance(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/* 62151 */           this.iOECORPMGreenBandTotalDistance_ = null;
/*       */         } 
/* 62153 */         return this.iOECORPMGreenBandTotalDistanceBuilder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasIOECORPMGreenBandTimer() {
/* 62164 */         return (this.iOECORPMGreenBandTimerBuilder_ != null || this.iOECORPMGreenBandTimer_ != null);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO getIOECORPMGreenBandTimer() {
/* 62171 */         if (this.iOECORPMGreenBandTimerBuilder_ == null) {
/* 62172 */           return (this.iOECORPMGreenBandTimer_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOECORPMGreenBandTimer_;
/*       */         }
/* 62174 */         return (DolphinConfig.IO)this.iOECORPMGreenBandTimerBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOECORPMGreenBandTimer(DolphinConfig.IO value) {
/* 62181 */         if (this.iOECORPMGreenBandTimerBuilder_ == null) {
/* 62182 */           if (value == null) {
/* 62183 */             throw new NullPointerException();
/*       */           }
/* 62185 */           this.iOECORPMGreenBandTimer_ = value;
/* 62186 */           onChanged();
/*       */         } else {
/* 62188 */           this.iOECORPMGreenBandTimerBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         
/* 62191 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOECORPMGreenBandTimer(DolphinConfig.IO.Builder builderForValue) {
/* 62198 */         if (this.iOECORPMGreenBandTimerBuilder_ == null) {
/* 62199 */           this.iOECORPMGreenBandTimer_ = builderForValue.build();
/* 62200 */           onChanged();
/*       */         } else {
/* 62202 */           this.iOECORPMGreenBandTimerBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         
/* 62205 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeIOECORPMGreenBandTimer(DolphinConfig.IO value) {
/* 62211 */         if (this.iOECORPMGreenBandTimerBuilder_ == null) {
/* 62212 */           if (this.iOECORPMGreenBandTimer_ != null) {
/* 62213 */             this
/* 62214 */               .iOECORPMGreenBandTimer_ = DolphinConfig.IO.newBuilder(this.iOECORPMGreenBandTimer_).mergeFrom(value).buildPartial();
/*       */           } else {
/* 62216 */             this.iOECORPMGreenBandTimer_ = value;
/*       */           } 
/* 62218 */           onChanged();
/*       */         } else {
/* 62220 */           this.iOECORPMGreenBandTimerBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         
/* 62223 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearIOECORPMGreenBandTimer() {
/* 62229 */         if (this.iOECORPMGreenBandTimerBuilder_ == null) {
/* 62230 */           this.iOECORPMGreenBandTimer_ = null;
/* 62231 */           onChanged();
/*       */         } else {
/* 62233 */           this.iOECORPMGreenBandTimer_ = null;
/* 62234 */           this.iOECORPMGreenBandTimerBuilder_ = null;
/*       */         } 
/*       */         
/* 62237 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOECORPMGreenBandTimerBuilder() {
/* 62244 */         onChanged();
/* 62245 */         return (DolphinConfig.IO.Builder)getIOECORPMGreenBandTimerFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOECORPMGreenBandTimerOrBuilder() {
/* 62251 */         if (this.iOECORPMGreenBandTimerBuilder_ != null) {
/* 62252 */           return (DolphinConfig.IOOrBuilder)this.iOECORPMGreenBandTimerBuilder_.getMessageOrBuilder();
/*       */         }
/* 62254 */         return (this.iOECORPMGreenBandTimer_ == null) ? 
/* 62255 */           DolphinConfig.IO.getDefaultInstance() : this.iOECORPMGreenBandTimer_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOECORPMGreenBandTimerFieldBuilder() {
/* 62264 */         if (this.iOECORPMGreenBandTimerBuilder_ == null) {
/* 62265 */           this
/*       */ 
/*       */ 
/*       */             
/* 62269 */             .iOECORPMGreenBandTimerBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOECORPMGreenBandTimer(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/* 62270 */           this.iOECORPMGreenBandTimer_ = null;
/*       */         } 
/* 62272 */         return this.iOECORPMGreenBandTimerBuilder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasIOECORPMGreenBandTotalTimer() {
/* 62283 */         return (this.iOECORPMGreenBandTotalTimerBuilder_ != null || this.iOECORPMGreenBandTotalTimer_ != null);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO getIOECORPMGreenBandTotalTimer() {
/* 62290 */         if (this.iOECORPMGreenBandTotalTimerBuilder_ == null) {
/* 62291 */           return (this.iOECORPMGreenBandTotalTimer_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOECORPMGreenBandTotalTimer_;
/*       */         }
/* 62293 */         return (DolphinConfig.IO)this.iOECORPMGreenBandTotalTimerBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOECORPMGreenBandTotalTimer(DolphinConfig.IO value) {
/* 62300 */         if (this.iOECORPMGreenBandTotalTimerBuilder_ == null) {
/* 62301 */           if (value == null) {
/* 62302 */             throw new NullPointerException();
/*       */           }
/* 62304 */           this.iOECORPMGreenBandTotalTimer_ = value;
/* 62305 */           onChanged();
/*       */         } else {
/* 62307 */           this.iOECORPMGreenBandTotalTimerBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         
/* 62310 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOECORPMGreenBandTotalTimer(DolphinConfig.IO.Builder builderForValue) {
/* 62317 */         if (this.iOECORPMGreenBandTotalTimerBuilder_ == null) {
/* 62318 */           this.iOECORPMGreenBandTotalTimer_ = builderForValue.build();
/* 62319 */           onChanged();
/*       */         } else {
/* 62321 */           this.iOECORPMGreenBandTotalTimerBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         
/* 62324 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeIOECORPMGreenBandTotalTimer(DolphinConfig.IO value) {
/* 62330 */         if (this.iOECORPMGreenBandTotalTimerBuilder_ == null) {
/* 62331 */           if (this.iOECORPMGreenBandTotalTimer_ != null) {
/* 62332 */             this
/* 62333 */               .iOECORPMGreenBandTotalTimer_ = DolphinConfig.IO.newBuilder(this.iOECORPMGreenBandTotalTimer_).mergeFrom(value).buildPartial();
/*       */           } else {
/* 62335 */             this.iOECORPMGreenBandTotalTimer_ = value;
/*       */           } 
/* 62337 */           onChanged();
/*       */         } else {
/* 62339 */           this.iOECORPMGreenBandTotalTimerBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         
/* 62342 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearIOECORPMGreenBandTotalTimer() {
/* 62348 */         if (this.iOECORPMGreenBandTotalTimerBuilder_ == null) {
/* 62349 */           this.iOECORPMGreenBandTotalTimer_ = null;
/* 62350 */           onChanged();
/*       */         } else {
/* 62352 */           this.iOECORPMGreenBandTotalTimer_ = null;
/* 62353 */           this.iOECORPMGreenBandTotalTimerBuilder_ = null;
/*       */         } 
/*       */         
/* 62356 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOECORPMGreenBandTotalTimerBuilder() {
/* 62363 */         onChanged();
/* 62364 */         return (DolphinConfig.IO.Builder)getIOECORPMGreenBandTotalTimerFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOECORPMGreenBandTotalTimerOrBuilder() {
/* 62370 */         if (this.iOECORPMGreenBandTotalTimerBuilder_ != null) {
/* 62371 */           return (DolphinConfig.IOOrBuilder)this.iOECORPMGreenBandTotalTimerBuilder_.getMessageOrBuilder();
/*       */         }
/* 62373 */         return (this.iOECORPMGreenBandTotalTimer_ == null) ? 
/* 62374 */           DolphinConfig.IO.getDefaultInstance() : this.iOECORPMGreenBandTotalTimer_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOECORPMGreenBandTotalTimerFieldBuilder() {
/* 62383 */         if (this.iOECORPMGreenBandTotalTimerBuilder_ == null) {
/* 62384 */           this
/*       */ 
/*       */ 
/*       */             
/* 62388 */             .iOECORPMGreenBandTotalTimerBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOECORPMGreenBandTotalTimer(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/* 62389 */           this.iOECORPMGreenBandTotalTimer_ = null;
/*       */         } 
/* 62391 */         return this.iOECORPMGreenBandTotalTimerBuilder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasIOECOOverRPMDistance() {
/* 62402 */         return (this.iOECOOverRPMDistanceBuilder_ != null || this.iOECOOverRPMDistance_ != null);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO getIOECOOverRPMDistance() {
/* 62409 */         if (this.iOECOOverRPMDistanceBuilder_ == null) {
/* 62410 */           return (this.iOECOOverRPMDistance_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOECOOverRPMDistance_;
/*       */         }
/* 62412 */         return (DolphinConfig.IO)this.iOECOOverRPMDistanceBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOECOOverRPMDistance(DolphinConfig.IO value) {
/* 62419 */         if (this.iOECOOverRPMDistanceBuilder_ == null) {
/* 62420 */           if (value == null) {
/* 62421 */             throw new NullPointerException();
/*       */           }
/* 62423 */           this.iOECOOverRPMDistance_ = value;
/* 62424 */           onChanged();
/*       */         } else {
/* 62426 */           this.iOECOOverRPMDistanceBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         
/* 62429 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOECOOverRPMDistance(DolphinConfig.IO.Builder builderForValue) {
/* 62436 */         if (this.iOECOOverRPMDistanceBuilder_ == null) {
/* 62437 */           this.iOECOOverRPMDistance_ = builderForValue.build();
/* 62438 */           onChanged();
/*       */         } else {
/* 62440 */           this.iOECOOverRPMDistanceBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         
/* 62443 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeIOECOOverRPMDistance(DolphinConfig.IO value) {
/* 62449 */         if (this.iOECOOverRPMDistanceBuilder_ == null) {
/* 62450 */           if (this.iOECOOverRPMDistance_ != null) {
/* 62451 */             this
/* 62452 */               .iOECOOverRPMDistance_ = DolphinConfig.IO.newBuilder(this.iOECOOverRPMDistance_).mergeFrom(value).buildPartial();
/*       */           } else {
/* 62454 */             this.iOECOOverRPMDistance_ = value;
/*       */           } 
/* 62456 */           onChanged();
/*       */         } else {
/* 62458 */           this.iOECOOverRPMDistanceBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         
/* 62461 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearIOECOOverRPMDistance() {
/* 62467 */         if (this.iOECOOverRPMDistanceBuilder_ == null) {
/* 62468 */           this.iOECOOverRPMDistance_ = null;
/* 62469 */           onChanged();
/*       */         } else {
/* 62471 */           this.iOECOOverRPMDistance_ = null;
/* 62472 */           this.iOECOOverRPMDistanceBuilder_ = null;
/*       */         } 
/*       */         
/* 62475 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOECOOverRPMDistanceBuilder() {
/* 62482 */         onChanged();
/* 62483 */         return (DolphinConfig.IO.Builder)getIOECOOverRPMDistanceFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOECOOverRPMDistanceOrBuilder() {
/* 62489 */         if (this.iOECOOverRPMDistanceBuilder_ != null) {
/* 62490 */           return (DolphinConfig.IOOrBuilder)this.iOECOOverRPMDistanceBuilder_.getMessageOrBuilder();
/*       */         }
/* 62492 */         return (this.iOECOOverRPMDistance_ == null) ? 
/* 62493 */           DolphinConfig.IO.getDefaultInstance() : this.iOECOOverRPMDistance_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOECOOverRPMDistanceFieldBuilder() {
/* 62502 */         if (this.iOECOOverRPMDistanceBuilder_ == null) {
/* 62503 */           this
/*       */ 
/*       */ 
/*       */             
/* 62507 */             .iOECOOverRPMDistanceBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOECOOverRPMDistance(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/* 62508 */           this.iOECOOverRPMDistance_ = null;
/*       */         } 
/* 62510 */         return this.iOECOOverRPMDistanceBuilder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasIOECOOverRPMTotalDistance() {
/* 62521 */         return (this.iOECOOverRPMTotalDistanceBuilder_ != null || this.iOECOOverRPMTotalDistance_ != null);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO getIOECOOverRPMTotalDistance() {
/* 62528 */         if (this.iOECOOverRPMTotalDistanceBuilder_ == null) {
/* 62529 */           return (this.iOECOOverRPMTotalDistance_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOECOOverRPMTotalDistance_;
/*       */         }
/* 62531 */         return (DolphinConfig.IO)this.iOECOOverRPMTotalDistanceBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOECOOverRPMTotalDistance(DolphinConfig.IO value) {
/* 62538 */         if (this.iOECOOverRPMTotalDistanceBuilder_ == null) {
/* 62539 */           if (value == null) {
/* 62540 */             throw new NullPointerException();
/*       */           }
/* 62542 */           this.iOECOOverRPMTotalDistance_ = value;
/* 62543 */           onChanged();
/*       */         } else {
/* 62545 */           this.iOECOOverRPMTotalDistanceBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         
/* 62548 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOECOOverRPMTotalDistance(DolphinConfig.IO.Builder builderForValue) {
/* 62555 */         if (this.iOECOOverRPMTotalDistanceBuilder_ == null) {
/* 62556 */           this.iOECOOverRPMTotalDistance_ = builderForValue.build();
/* 62557 */           onChanged();
/*       */         } else {
/* 62559 */           this.iOECOOverRPMTotalDistanceBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         
/* 62562 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeIOECOOverRPMTotalDistance(DolphinConfig.IO value) {
/* 62568 */         if (this.iOECOOverRPMTotalDistanceBuilder_ == null) {
/* 62569 */           if (this.iOECOOverRPMTotalDistance_ != null) {
/* 62570 */             this
/* 62571 */               .iOECOOverRPMTotalDistance_ = DolphinConfig.IO.newBuilder(this.iOECOOverRPMTotalDistance_).mergeFrom(value).buildPartial();
/*       */           } else {
/* 62573 */             this.iOECOOverRPMTotalDistance_ = value;
/*       */           } 
/* 62575 */           onChanged();
/*       */         } else {
/* 62577 */           this.iOECOOverRPMTotalDistanceBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         
/* 62580 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearIOECOOverRPMTotalDistance() {
/* 62586 */         if (this.iOECOOverRPMTotalDistanceBuilder_ == null) {
/* 62587 */           this.iOECOOverRPMTotalDistance_ = null;
/* 62588 */           onChanged();
/*       */         } else {
/* 62590 */           this.iOECOOverRPMTotalDistance_ = null;
/* 62591 */           this.iOECOOverRPMTotalDistanceBuilder_ = null;
/*       */         } 
/*       */         
/* 62594 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOECOOverRPMTotalDistanceBuilder() {
/* 62601 */         onChanged();
/* 62602 */         return (DolphinConfig.IO.Builder)getIOECOOverRPMTotalDistanceFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOECOOverRPMTotalDistanceOrBuilder() {
/* 62608 */         if (this.iOECOOverRPMTotalDistanceBuilder_ != null) {
/* 62609 */           return (DolphinConfig.IOOrBuilder)this.iOECOOverRPMTotalDistanceBuilder_.getMessageOrBuilder();
/*       */         }
/* 62611 */         return (this.iOECOOverRPMTotalDistance_ == null) ? 
/* 62612 */           DolphinConfig.IO.getDefaultInstance() : this.iOECOOverRPMTotalDistance_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOECOOverRPMTotalDistanceFieldBuilder() {
/* 62621 */         if (this.iOECOOverRPMTotalDistanceBuilder_ == null) {
/* 62622 */           this
/*       */ 
/*       */ 
/*       */             
/* 62626 */             .iOECOOverRPMTotalDistanceBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOECOOverRPMTotalDistance(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/* 62627 */           this.iOECOOverRPMTotalDistance_ = null;
/*       */         } 
/* 62629 */         return this.iOECOOverRPMTotalDistanceBuilder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasIOECOOverRPMTimer() {
/* 62640 */         return (this.iOECOOverRPMTimerBuilder_ != null || this.iOECOOverRPMTimer_ != null);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO getIOECOOverRPMTimer() {
/* 62647 */         if (this.iOECOOverRPMTimerBuilder_ == null) {
/* 62648 */           return (this.iOECOOverRPMTimer_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOECOOverRPMTimer_;
/*       */         }
/* 62650 */         return (DolphinConfig.IO)this.iOECOOverRPMTimerBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOECOOverRPMTimer(DolphinConfig.IO value) {
/* 62657 */         if (this.iOECOOverRPMTimerBuilder_ == null) {
/* 62658 */           if (value == null) {
/* 62659 */             throw new NullPointerException();
/*       */           }
/* 62661 */           this.iOECOOverRPMTimer_ = value;
/* 62662 */           onChanged();
/*       */         } else {
/* 62664 */           this.iOECOOverRPMTimerBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         
/* 62667 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOECOOverRPMTimer(DolphinConfig.IO.Builder builderForValue) {
/* 62674 */         if (this.iOECOOverRPMTimerBuilder_ == null) {
/* 62675 */           this.iOECOOverRPMTimer_ = builderForValue.build();
/* 62676 */           onChanged();
/*       */         } else {
/* 62678 */           this.iOECOOverRPMTimerBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         
/* 62681 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeIOECOOverRPMTimer(DolphinConfig.IO value) {
/* 62687 */         if (this.iOECOOverRPMTimerBuilder_ == null) {
/* 62688 */           if (this.iOECOOverRPMTimer_ != null) {
/* 62689 */             this
/* 62690 */               .iOECOOverRPMTimer_ = DolphinConfig.IO.newBuilder(this.iOECOOverRPMTimer_).mergeFrom(value).buildPartial();
/*       */           } else {
/* 62692 */             this.iOECOOverRPMTimer_ = value;
/*       */           } 
/* 62694 */           onChanged();
/*       */         } else {
/* 62696 */           this.iOECOOverRPMTimerBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         
/* 62699 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearIOECOOverRPMTimer() {
/* 62705 */         if (this.iOECOOverRPMTimerBuilder_ == null) {
/* 62706 */           this.iOECOOverRPMTimer_ = null;
/* 62707 */           onChanged();
/*       */         } else {
/* 62709 */           this.iOECOOverRPMTimer_ = null;
/* 62710 */           this.iOECOOverRPMTimerBuilder_ = null;
/*       */         } 
/*       */         
/* 62713 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOECOOverRPMTimerBuilder() {
/* 62720 */         onChanged();
/* 62721 */         return (DolphinConfig.IO.Builder)getIOECOOverRPMTimerFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOECOOverRPMTimerOrBuilder() {
/* 62727 */         if (this.iOECOOverRPMTimerBuilder_ != null) {
/* 62728 */           return (DolphinConfig.IOOrBuilder)this.iOECOOverRPMTimerBuilder_.getMessageOrBuilder();
/*       */         }
/* 62730 */         return (this.iOECOOverRPMTimer_ == null) ? 
/* 62731 */           DolphinConfig.IO.getDefaultInstance() : this.iOECOOverRPMTimer_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOECOOverRPMTimerFieldBuilder() {
/* 62740 */         if (this.iOECOOverRPMTimerBuilder_ == null) {
/* 62741 */           this
/*       */ 
/*       */ 
/*       */             
/* 62745 */             .iOECOOverRPMTimerBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOECOOverRPMTimer(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/* 62746 */           this.iOECOOverRPMTimer_ = null;
/*       */         } 
/* 62748 */         return this.iOECOOverRPMTimerBuilder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasIOECOOverRPMTotalTimer() {
/* 62759 */         return (this.iOECOOverRPMTotalTimerBuilder_ != null || this.iOECOOverRPMTotalTimer_ != null);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO getIOECOOverRPMTotalTimer() {
/* 62766 */         if (this.iOECOOverRPMTotalTimerBuilder_ == null) {
/* 62767 */           return (this.iOECOOverRPMTotalTimer_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOECOOverRPMTotalTimer_;
/*       */         }
/* 62769 */         return (DolphinConfig.IO)this.iOECOOverRPMTotalTimerBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOECOOverRPMTotalTimer(DolphinConfig.IO value) {
/* 62776 */         if (this.iOECOOverRPMTotalTimerBuilder_ == null) {
/* 62777 */           if (value == null) {
/* 62778 */             throw new NullPointerException();
/*       */           }
/* 62780 */           this.iOECOOverRPMTotalTimer_ = value;
/* 62781 */           onChanged();
/*       */         } else {
/* 62783 */           this.iOECOOverRPMTotalTimerBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         
/* 62786 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOECOOverRPMTotalTimer(DolphinConfig.IO.Builder builderForValue) {
/* 62793 */         if (this.iOECOOverRPMTotalTimerBuilder_ == null) {
/* 62794 */           this.iOECOOverRPMTotalTimer_ = builderForValue.build();
/* 62795 */           onChanged();
/*       */         } else {
/* 62797 */           this.iOECOOverRPMTotalTimerBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         
/* 62800 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeIOECOOverRPMTotalTimer(DolphinConfig.IO value) {
/* 62806 */         if (this.iOECOOverRPMTotalTimerBuilder_ == null) {
/* 62807 */           if (this.iOECOOverRPMTotalTimer_ != null) {
/* 62808 */             this
/* 62809 */               .iOECOOverRPMTotalTimer_ = DolphinConfig.IO.newBuilder(this.iOECOOverRPMTotalTimer_).mergeFrom(value).buildPartial();
/*       */           } else {
/* 62811 */             this.iOECOOverRPMTotalTimer_ = value;
/*       */           } 
/* 62813 */           onChanged();
/*       */         } else {
/* 62815 */           this.iOECOOverRPMTotalTimerBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         
/* 62818 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearIOECOOverRPMTotalTimer() {
/* 62824 */         if (this.iOECOOverRPMTotalTimerBuilder_ == null) {
/* 62825 */           this.iOECOOverRPMTotalTimer_ = null;
/* 62826 */           onChanged();
/*       */         } else {
/* 62828 */           this.iOECOOverRPMTotalTimer_ = null;
/* 62829 */           this.iOECOOverRPMTotalTimerBuilder_ = null;
/*       */         } 
/*       */         
/* 62832 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOECOOverRPMTotalTimerBuilder() {
/* 62839 */         onChanged();
/* 62840 */         return (DolphinConfig.IO.Builder)getIOECOOverRPMTotalTimerFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOECOOverRPMTotalTimerOrBuilder() {
/* 62846 */         if (this.iOECOOverRPMTotalTimerBuilder_ != null) {
/* 62847 */           return (DolphinConfig.IOOrBuilder)this.iOECOOverRPMTotalTimerBuilder_.getMessageOrBuilder();
/*       */         }
/* 62849 */         return (this.iOECOOverRPMTotalTimer_ == null) ? 
/* 62850 */           DolphinConfig.IO.getDefaultInstance() : this.iOECOOverRPMTotalTimer_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOECOOverRPMTotalTimerFieldBuilder() {
/* 62859 */         if (this.iOECOOverRPMTotalTimerBuilder_ == null) {
/* 62860 */           this
/*       */ 
/*       */ 
/*       */             
/* 62864 */             .iOECOOverRPMTotalTimerBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOECOOverRPMTotalTimer(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/* 62865 */           this.iOECOOverRPMTotalTimer_ = null;
/*       */         } 
/* 62867 */         return this.iOECOOverRPMTotalTimerBuilder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasIOECOIdlingEvent() {
/* 62878 */         return (this.iOECOIdlingEventBuilder_ != null || this.iOECOIdlingEvent_ != null);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO getIOECOIdlingEvent() {
/* 62885 */         if (this.iOECOIdlingEventBuilder_ == null) {
/* 62886 */           return (this.iOECOIdlingEvent_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOECOIdlingEvent_;
/*       */         }
/* 62888 */         return (DolphinConfig.IO)this.iOECOIdlingEventBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOECOIdlingEvent(DolphinConfig.IO value) {
/* 62895 */         if (this.iOECOIdlingEventBuilder_ == null) {
/* 62896 */           if (value == null) {
/* 62897 */             throw new NullPointerException();
/*       */           }
/* 62899 */           this.iOECOIdlingEvent_ = value;
/* 62900 */           onChanged();
/*       */         } else {
/* 62902 */           this.iOECOIdlingEventBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         
/* 62905 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOECOIdlingEvent(DolphinConfig.IO.Builder builderForValue) {
/* 62912 */         if (this.iOECOIdlingEventBuilder_ == null) {
/* 62913 */           this.iOECOIdlingEvent_ = builderForValue.build();
/* 62914 */           onChanged();
/*       */         } else {
/* 62916 */           this.iOECOIdlingEventBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         
/* 62919 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeIOECOIdlingEvent(DolphinConfig.IO value) {
/* 62925 */         if (this.iOECOIdlingEventBuilder_ == null) {
/* 62926 */           if (this.iOECOIdlingEvent_ != null) {
/* 62927 */             this
/* 62928 */               .iOECOIdlingEvent_ = DolphinConfig.IO.newBuilder(this.iOECOIdlingEvent_).mergeFrom(value).buildPartial();
/*       */           } else {
/* 62930 */             this.iOECOIdlingEvent_ = value;
/*       */           } 
/* 62932 */           onChanged();
/*       */         } else {
/* 62934 */           this.iOECOIdlingEventBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         
/* 62937 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearIOECOIdlingEvent() {
/* 62943 */         if (this.iOECOIdlingEventBuilder_ == null) {
/* 62944 */           this.iOECOIdlingEvent_ = null;
/* 62945 */           onChanged();
/*       */         } else {
/* 62947 */           this.iOECOIdlingEvent_ = null;
/* 62948 */           this.iOECOIdlingEventBuilder_ = null;
/*       */         } 
/*       */         
/* 62951 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOECOIdlingEventBuilder() {
/* 62958 */         onChanged();
/* 62959 */         return (DolphinConfig.IO.Builder)getIOECOIdlingEventFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOECOIdlingEventOrBuilder() {
/* 62965 */         if (this.iOECOIdlingEventBuilder_ != null) {
/* 62966 */           return (DolphinConfig.IOOrBuilder)this.iOECOIdlingEventBuilder_.getMessageOrBuilder();
/*       */         }
/* 62968 */         return (this.iOECOIdlingEvent_ == null) ? 
/* 62969 */           DolphinConfig.IO.getDefaultInstance() : this.iOECOIdlingEvent_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOECOIdlingEventFieldBuilder() {
/* 62978 */         if (this.iOECOIdlingEventBuilder_ == null) {
/* 62979 */           this
/*       */ 
/*       */ 
/*       */             
/* 62983 */             .iOECOIdlingEventBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOECOIdlingEvent(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/* 62984 */           this.iOECOIdlingEvent_ = null;
/*       */         } 
/* 62986 */         return this.iOECOIdlingEventBuilder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasIOECOCruiseControlTimer() {
/* 62997 */         return (this.iOECOCruiseControlTimerBuilder_ != null || this.iOECOCruiseControlTimer_ != null);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO getIOECOCruiseControlTimer() {
/* 63004 */         if (this.iOECOCruiseControlTimerBuilder_ == null) {
/* 63005 */           return (this.iOECOCruiseControlTimer_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOECOCruiseControlTimer_;
/*       */         }
/* 63007 */         return (DolphinConfig.IO)this.iOECOCruiseControlTimerBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOECOCruiseControlTimer(DolphinConfig.IO value) {
/* 63014 */         if (this.iOECOCruiseControlTimerBuilder_ == null) {
/* 63015 */           if (value == null) {
/* 63016 */             throw new NullPointerException();
/*       */           }
/* 63018 */           this.iOECOCruiseControlTimer_ = value;
/* 63019 */           onChanged();
/*       */         } else {
/* 63021 */           this.iOECOCruiseControlTimerBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         
/* 63024 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOECOCruiseControlTimer(DolphinConfig.IO.Builder builderForValue) {
/* 63031 */         if (this.iOECOCruiseControlTimerBuilder_ == null) {
/* 63032 */           this.iOECOCruiseControlTimer_ = builderForValue.build();
/* 63033 */           onChanged();
/*       */         } else {
/* 63035 */           this.iOECOCruiseControlTimerBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         
/* 63038 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeIOECOCruiseControlTimer(DolphinConfig.IO value) {
/* 63044 */         if (this.iOECOCruiseControlTimerBuilder_ == null) {
/* 63045 */           if (this.iOECOCruiseControlTimer_ != null) {
/* 63046 */             this
/* 63047 */               .iOECOCruiseControlTimer_ = DolphinConfig.IO.newBuilder(this.iOECOCruiseControlTimer_).mergeFrom(value).buildPartial();
/*       */           } else {
/* 63049 */             this.iOECOCruiseControlTimer_ = value;
/*       */           } 
/* 63051 */           onChanged();
/*       */         } else {
/* 63053 */           this.iOECOCruiseControlTimerBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         
/* 63056 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearIOECOCruiseControlTimer() {
/* 63062 */         if (this.iOECOCruiseControlTimerBuilder_ == null) {
/* 63063 */           this.iOECOCruiseControlTimer_ = null;
/* 63064 */           onChanged();
/*       */         } else {
/* 63066 */           this.iOECOCruiseControlTimer_ = null;
/* 63067 */           this.iOECOCruiseControlTimerBuilder_ = null;
/*       */         } 
/*       */         
/* 63070 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOECOCruiseControlTimerBuilder() {
/* 63077 */         onChanged();
/* 63078 */         return (DolphinConfig.IO.Builder)getIOECOCruiseControlTimerFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOECOCruiseControlTimerOrBuilder() {
/* 63084 */         if (this.iOECOCruiseControlTimerBuilder_ != null) {
/* 63085 */           return (DolphinConfig.IOOrBuilder)this.iOECOCruiseControlTimerBuilder_.getMessageOrBuilder();
/*       */         }
/* 63087 */         return (this.iOECOCruiseControlTimer_ == null) ? 
/* 63088 */           DolphinConfig.IO.getDefaultInstance() : this.iOECOCruiseControlTimer_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOECOCruiseControlTimerFieldBuilder() {
/* 63097 */         if (this.iOECOCruiseControlTimerBuilder_ == null) {
/* 63098 */           this
/*       */ 
/*       */ 
/*       */             
/* 63102 */             .iOECOCruiseControlTimerBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOECOCruiseControlTimer(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/* 63103 */           this.iOECOCruiseControlTimer_ = null;
/*       */         } 
/* 63105 */         return this.iOECOCruiseControlTimerBuilder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasIOECOCruiseControlTotalTimer() {
/* 63116 */         return (this.iOECOCruiseControlTotalTimerBuilder_ != null || this.iOECOCruiseControlTotalTimer_ != null);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO getIOECOCruiseControlTotalTimer() {
/* 63123 */         if (this.iOECOCruiseControlTotalTimerBuilder_ == null) {
/* 63124 */           return (this.iOECOCruiseControlTotalTimer_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOECOCruiseControlTotalTimer_;
/*       */         }
/* 63126 */         return (DolphinConfig.IO)this.iOECOCruiseControlTotalTimerBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOECOCruiseControlTotalTimer(DolphinConfig.IO value) {
/* 63133 */         if (this.iOECOCruiseControlTotalTimerBuilder_ == null) {
/* 63134 */           if (value == null) {
/* 63135 */             throw new NullPointerException();
/*       */           }
/* 63137 */           this.iOECOCruiseControlTotalTimer_ = value;
/* 63138 */           onChanged();
/*       */         } else {
/* 63140 */           this.iOECOCruiseControlTotalTimerBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         
/* 63143 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOECOCruiseControlTotalTimer(DolphinConfig.IO.Builder builderForValue) {
/* 63150 */         if (this.iOECOCruiseControlTotalTimerBuilder_ == null) {
/* 63151 */           this.iOECOCruiseControlTotalTimer_ = builderForValue.build();
/* 63152 */           onChanged();
/*       */         } else {
/* 63154 */           this.iOECOCruiseControlTotalTimerBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         
/* 63157 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeIOECOCruiseControlTotalTimer(DolphinConfig.IO value) {
/* 63163 */         if (this.iOECOCruiseControlTotalTimerBuilder_ == null) {
/* 63164 */           if (this.iOECOCruiseControlTotalTimer_ != null) {
/* 63165 */             this
/* 63166 */               .iOECOCruiseControlTotalTimer_ = DolphinConfig.IO.newBuilder(this.iOECOCruiseControlTotalTimer_).mergeFrom(value).buildPartial();
/*       */           } else {
/* 63168 */             this.iOECOCruiseControlTotalTimer_ = value;
/*       */           } 
/* 63170 */           onChanged();
/*       */         } else {
/* 63172 */           this.iOECOCruiseControlTotalTimerBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         
/* 63175 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearIOECOCruiseControlTotalTimer() {
/* 63181 */         if (this.iOECOCruiseControlTotalTimerBuilder_ == null) {
/* 63182 */           this.iOECOCruiseControlTotalTimer_ = null;
/* 63183 */           onChanged();
/*       */         } else {
/* 63185 */           this.iOECOCruiseControlTotalTimer_ = null;
/* 63186 */           this.iOECOCruiseControlTotalTimerBuilder_ = null;
/*       */         } 
/*       */         
/* 63189 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOECOCruiseControlTotalTimerBuilder() {
/* 63196 */         onChanged();
/* 63197 */         return (DolphinConfig.IO.Builder)getIOECOCruiseControlTotalTimerFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOECOCruiseControlTotalTimerOrBuilder() {
/* 63203 */         if (this.iOECOCruiseControlTotalTimerBuilder_ != null) {
/* 63204 */           return (DolphinConfig.IOOrBuilder)this.iOECOCruiseControlTotalTimerBuilder_.getMessageOrBuilder();
/*       */         }
/* 63206 */         return (this.iOECOCruiseControlTotalTimer_ == null) ? 
/* 63207 */           DolphinConfig.IO.getDefaultInstance() : this.iOECOCruiseControlTotalTimer_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOECOCruiseControlTotalTimerFieldBuilder() {
/* 63216 */         if (this.iOECOCruiseControlTotalTimerBuilder_ == null) {
/* 63217 */           this
/*       */ 
/*       */ 
/*       */             
/* 63221 */             .iOECOCruiseControlTotalTimerBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOECOCruiseControlTotalTimer(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/* 63222 */           this.iOECOCruiseControlTotalTimer_ = null;
/*       */         } 
/* 63224 */         return this.iOECOCruiseControlTotalTimerBuilder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasIOECOCruiseControlDistance() {
/* 63235 */         return (this.iOECOCruiseControlDistanceBuilder_ != null || this.iOECOCruiseControlDistance_ != null);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO getIOECOCruiseControlDistance() {
/* 63242 */         if (this.iOECOCruiseControlDistanceBuilder_ == null) {
/* 63243 */           return (this.iOECOCruiseControlDistance_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOECOCruiseControlDistance_;
/*       */         }
/* 63245 */         return (DolphinConfig.IO)this.iOECOCruiseControlDistanceBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOECOCruiseControlDistance(DolphinConfig.IO value) {
/* 63252 */         if (this.iOECOCruiseControlDistanceBuilder_ == null) {
/* 63253 */           if (value == null) {
/* 63254 */             throw new NullPointerException();
/*       */           }
/* 63256 */           this.iOECOCruiseControlDistance_ = value;
/* 63257 */           onChanged();
/*       */         } else {
/* 63259 */           this.iOECOCruiseControlDistanceBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         
/* 63262 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOECOCruiseControlDistance(DolphinConfig.IO.Builder builderForValue) {
/* 63269 */         if (this.iOECOCruiseControlDistanceBuilder_ == null) {
/* 63270 */           this.iOECOCruiseControlDistance_ = builderForValue.build();
/* 63271 */           onChanged();
/*       */         } else {
/* 63273 */           this.iOECOCruiseControlDistanceBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         
/* 63276 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeIOECOCruiseControlDistance(DolphinConfig.IO value) {
/* 63282 */         if (this.iOECOCruiseControlDistanceBuilder_ == null) {
/* 63283 */           if (this.iOECOCruiseControlDistance_ != null) {
/* 63284 */             this
/* 63285 */               .iOECOCruiseControlDistance_ = DolphinConfig.IO.newBuilder(this.iOECOCruiseControlDistance_).mergeFrom(value).buildPartial();
/*       */           } else {
/* 63287 */             this.iOECOCruiseControlDistance_ = value;
/*       */           } 
/* 63289 */           onChanged();
/*       */         } else {
/* 63291 */           this.iOECOCruiseControlDistanceBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         
/* 63294 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearIOECOCruiseControlDistance() {
/* 63300 */         if (this.iOECOCruiseControlDistanceBuilder_ == null) {
/* 63301 */           this.iOECOCruiseControlDistance_ = null;
/* 63302 */           onChanged();
/*       */         } else {
/* 63304 */           this.iOECOCruiseControlDistance_ = null;
/* 63305 */           this.iOECOCruiseControlDistanceBuilder_ = null;
/*       */         } 
/*       */         
/* 63308 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOECOCruiseControlDistanceBuilder() {
/* 63315 */         onChanged();
/* 63316 */         return (DolphinConfig.IO.Builder)getIOECOCruiseControlDistanceFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOECOCruiseControlDistanceOrBuilder() {
/* 63322 */         if (this.iOECOCruiseControlDistanceBuilder_ != null) {
/* 63323 */           return (DolphinConfig.IOOrBuilder)this.iOECOCruiseControlDistanceBuilder_.getMessageOrBuilder();
/*       */         }
/* 63325 */         return (this.iOECOCruiseControlDistance_ == null) ? 
/* 63326 */           DolphinConfig.IO.getDefaultInstance() : this.iOECOCruiseControlDistance_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOECOCruiseControlDistanceFieldBuilder() {
/* 63335 */         if (this.iOECOCruiseControlDistanceBuilder_ == null) {
/* 63336 */           this
/*       */ 
/*       */ 
/*       */             
/* 63340 */             .iOECOCruiseControlDistanceBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOECOCruiseControlDistance(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/* 63341 */           this.iOECOCruiseControlDistance_ = null;
/*       */         } 
/* 63343 */         return this.iOECOCruiseControlDistanceBuilder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasIOECOCruiseControlTotalDistance() {
/* 63354 */         return (this.iOECOCruiseControlTotalDistanceBuilder_ != null || this.iOECOCruiseControlTotalDistance_ != null);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO getIOECOCruiseControlTotalDistance() {
/* 63361 */         if (this.iOECOCruiseControlTotalDistanceBuilder_ == null) {
/* 63362 */           return (this.iOECOCruiseControlTotalDistance_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOECOCruiseControlTotalDistance_;
/*       */         }
/* 63364 */         return (DolphinConfig.IO)this.iOECOCruiseControlTotalDistanceBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOECOCruiseControlTotalDistance(DolphinConfig.IO value) {
/* 63371 */         if (this.iOECOCruiseControlTotalDistanceBuilder_ == null) {
/* 63372 */           if (value == null) {
/* 63373 */             throw new NullPointerException();
/*       */           }
/* 63375 */           this.iOECOCruiseControlTotalDistance_ = value;
/* 63376 */           onChanged();
/*       */         } else {
/* 63378 */           this.iOECOCruiseControlTotalDistanceBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         
/* 63381 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOECOCruiseControlTotalDistance(DolphinConfig.IO.Builder builderForValue) {
/* 63388 */         if (this.iOECOCruiseControlTotalDistanceBuilder_ == null) {
/* 63389 */           this.iOECOCruiseControlTotalDistance_ = builderForValue.build();
/* 63390 */           onChanged();
/*       */         } else {
/* 63392 */           this.iOECOCruiseControlTotalDistanceBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         
/* 63395 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeIOECOCruiseControlTotalDistance(DolphinConfig.IO value) {
/* 63401 */         if (this.iOECOCruiseControlTotalDistanceBuilder_ == null) {
/* 63402 */           if (this.iOECOCruiseControlTotalDistance_ != null) {
/* 63403 */             this
/* 63404 */               .iOECOCruiseControlTotalDistance_ = DolphinConfig.IO.newBuilder(this.iOECOCruiseControlTotalDistance_).mergeFrom(value).buildPartial();
/*       */           } else {
/* 63406 */             this.iOECOCruiseControlTotalDistance_ = value;
/*       */           } 
/* 63408 */           onChanged();
/*       */         } else {
/* 63410 */           this.iOECOCruiseControlTotalDistanceBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         
/* 63413 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearIOECOCruiseControlTotalDistance() {
/* 63419 */         if (this.iOECOCruiseControlTotalDistanceBuilder_ == null) {
/* 63420 */           this.iOECOCruiseControlTotalDistance_ = null;
/* 63421 */           onChanged();
/*       */         } else {
/* 63423 */           this.iOECOCruiseControlTotalDistance_ = null;
/* 63424 */           this.iOECOCruiseControlTotalDistanceBuilder_ = null;
/*       */         } 
/*       */         
/* 63427 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOECOCruiseControlTotalDistanceBuilder() {
/* 63434 */         onChanged();
/* 63435 */         return (DolphinConfig.IO.Builder)getIOECOCruiseControlTotalDistanceFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOECOCruiseControlTotalDistanceOrBuilder() {
/* 63441 */         if (this.iOECOCruiseControlTotalDistanceBuilder_ != null) {
/* 63442 */           return (DolphinConfig.IOOrBuilder)this.iOECOCruiseControlTotalDistanceBuilder_.getMessageOrBuilder();
/*       */         }
/* 63444 */         return (this.iOECOCruiseControlTotalDistance_ == null) ? 
/* 63445 */           DolphinConfig.IO.getDefaultInstance() : this.iOECOCruiseControlTotalDistance_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOECOCruiseControlTotalDistanceFieldBuilder() {
/* 63454 */         if (this.iOECOCruiseControlTotalDistanceBuilder_ == null) {
/* 63455 */           this
/*       */ 
/*       */ 
/*       */             
/* 63459 */             .iOECOCruiseControlTotalDistanceBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOECOCruiseControlTotalDistance(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/* 63460 */           this.iOECOCruiseControlTotalDistance_ = null;
/*       */         } 
/* 63462 */         return this.iOECOCruiseControlTotalDistanceBuilder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasIOECOUnderRPMDistance() {
/* 63473 */         return (this.iOECOUnderRPMDistanceBuilder_ != null || this.iOECOUnderRPMDistance_ != null);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO getIOECOUnderRPMDistance() {
/* 63480 */         if (this.iOECOUnderRPMDistanceBuilder_ == null) {
/* 63481 */           return (this.iOECOUnderRPMDistance_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOECOUnderRPMDistance_;
/*       */         }
/* 63483 */         return (DolphinConfig.IO)this.iOECOUnderRPMDistanceBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOECOUnderRPMDistance(DolphinConfig.IO value) {
/* 63490 */         if (this.iOECOUnderRPMDistanceBuilder_ == null) {
/* 63491 */           if (value == null) {
/* 63492 */             throw new NullPointerException();
/*       */           }
/* 63494 */           this.iOECOUnderRPMDistance_ = value;
/* 63495 */           onChanged();
/*       */         } else {
/* 63497 */           this.iOECOUnderRPMDistanceBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         
/* 63500 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOECOUnderRPMDistance(DolphinConfig.IO.Builder builderForValue) {
/* 63507 */         if (this.iOECOUnderRPMDistanceBuilder_ == null) {
/* 63508 */           this.iOECOUnderRPMDistance_ = builderForValue.build();
/* 63509 */           onChanged();
/*       */         } else {
/* 63511 */           this.iOECOUnderRPMDistanceBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         
/* 63514 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeIOECOUnderRPMDistance(DolphinConfig.IO value) {
/* 63520 */         if (this.iOECOUnderRPMDistanceBuilder_ == null) {
/* 63521 */           if (this.iOECOUnderRPMDistance_ != null) {
/* 63522 */             this
/* 63523 */               .iOECOUnderRPMDistance_ = DolphinConfig.IO.newBuilder(this.iOECOUnderRPMDistance_).mergeFrom(value).buildPartial();
/*       */           } else {
/* 63525 */             this.iOECOUnderRPMDistance_ = value;
/*       */           } 
/* 63527 */           onChanged();
/*       */         } else {
/* 63529 */           this.iOECOUnderRPMDistanceBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         
/* 63532 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearIOECOUnderRPMDistance() {
/* 63538 */         if (this.iOECOUnderRPMDistanceBuilder_ == null) {
/* 63539 */           this.iOECOUnderRPMDistance_ = null;
/* 63540 */           onChanged();
/*       */         } else {
/* 63542 */           this.iOECOUnderRPMDistance_ = null;
/* 63543 */           this.iOECOUnderRPMDistanceBuilder_ = null;
/*       */         } 
/*       */         
/* 63546 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOECOUnderRPMDistanceBuilder() {
/* 63553 */         onChanged();
/* 63554 */         return (DolphinConfig.IO.Builder)getIOECOUnderRPMDistanceFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOECOUnderRPMDistanceOrBuilder() {
/* 63560 */         if (this.iOECOUnderRPMDistanceBuilder_ != null) {
/* 63561 */           return (DolphinConfig.IOOrBuilder)this.iOECOUnderRPMDistanceBuilder_.getMessageOrBuilder();
/*       */         }
/* 63563 */         return (this.iOECOUnderRPMDistance_ == null) ? 
/* 63564 */           DolphinConfig.IO.getDefaultInstance() : this.iOECOUnderRPMDistance_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOECOUnderRPMDistanceFieldBuilder() {
/* 63573 */         if (this.iOECOUnderRPMDistanceBuilder_ == null) {
/* 63574 */           this
/*       */ 
/*       */ 
/*       */             
/* 63578 */             .iOECOUnderRPMDistanceBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOECOUnderRPMDistance(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/* 63579 */           this.iOECOUnderRPMDistance_ = null;
/*       */         } 
/* 63581 */         return this.iOECOUnderRPMDistanceBuilder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasIOECOUnderRPMTotalDistance() {
/* 63592 */         return (this.iOECOUnderRPMTotalDistanceBuilder_ != null || this.iOECOUnderRPMTotalDistance_ != null);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO getIOECOUnderRPMTotalDistance() {
/* 63599 */         if (this.iOECOUnderRPMTotalDistanceBuilder_ == null) {
/* 63600 */           return (this.iOECOUnderRPMTotalDistance_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOECOUnderRPMTotalDistance_;
/*       */         }
/* 63602 */         return (DolphinConfig.IO)this.iOECOUnderRPMTotalDistanceBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOECOUnderRPMTotalDistance(DolphinConfig.IO value) {
/* 63609 */         if (this.iOECOUnderRPMTotalDistanceBuilder_ == null) {
/* 63610 */           if (value == null) {
/* 63611 */             throw new NullPointerException();
/*       */           }
/* 63613 */           this.iOECOUnderRPMTotalDistance_ = value;
/* 63614 */           onChanged();
/*       */         } else {
/* 63616 */           this.iOECOUnderRPMTotalDistanceBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         
/* 63619 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOECOUnderRPMTotalDistance(DolphinConfig.IO.Builder builderForValue) {
/* 63626 */         if (this.iOECOUnderRPMTotalDistanceBuilder_ == null) {
/* 63627 */           this.iOECOUnderRPMTotalDistance_ = builderForValue.build();
/* 63628 */           onChanged();
/*       */         } else {
/* 63630 */           this.iOECOUnderRPMTotalDistanceBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         
/* 63633 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeIOECOUnderRPMTotalDistance(DolphinConfig.IO value) {
/* 63639 */         if (this.iOECOUnderRPMTotalDistanceBuilder_ == null) {
/* 63640 */           if (this.iOECOUnderRPMTotalDistance_ != null) {
/* 63641 */             this
/* 63642 */               .iOECOUnderRPMTotalDistance_ = DolphinConfig.IO.newBuilder(this.iOECOUnderRPMTotalDistance_).mergeFrom(value).buildPartial();
/*       */           } else {
/* 63644 */             this.iOECOUnderRPMTotalDistance_ = value;
/*       */           } 
/* 63646 */           onChanged();
/*       */         } else {
/* 63648 */           this.iOECOUnderRPMTotalDistanceBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         
/* 63651 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearIOECOUnderRPMTotalDistance() {
/* 63657 */         if (this.iOECOUnderRPMTotalDistanceBuilder_ == null) {
/* 63658 */           this.iOECOUnderRPMTotalDistance_ = null;
/* 63659 */           onChanged();
/*       */         } else {
/* 63661 */           this.iOECOUnderRPMTotalDistance_ = null;
/* 63662 */           this.iOECOUnderRPMTotalDistanceBuilder_ = null;
/*       */         } 
/*       */         
/* 63665 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOECOUnderRPMTotalDistanceBuilder() {
/* 63672 */         onChanged();
/* 63673 */         return (DolphinConfig.IO.Builder)getIOECOUnderRPMTotalDistanceFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOECOUnderRPMTotalDistanceOrBuilder() {
/* 63679 */         if (this.iOECOUnderRPMTotalDistanceBuilder_ != null) {
/* 63680 */           return (DolphinConfig.IOOrBuilder)this.iOECOUnderRPMTotalDistanceBuilder_.getMessageOrBuilder();
/*       */         }
/* 63682 */         return (this.iOECOUnderRPMTotalDistance_ == null) ? 
/* 63683 */           DolphinConfig.IO.getDefaultInstance() : this.iOECOUnderRPMTotalDistance_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOECOUnderRPMTotalDistanceFieldBuilder() {
/* 63692 */         if (this.iOECOUnderRPMTotalDistanceBuilder_ == null) {
/* 63693 */           this
/*       */ 
/*       */ 
/*       */             
/* 63697 */             .iOECOUnderRPMTotalDistanceBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOECOUnderRPMTotalDistance(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/* 63698 */           this.iOECOUnderRPMTotalDistance_ = null;
/*       */         } 
/* 63700 */         return this.iOECOUnderRPMTotalDistanceBuilder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasIOECOUnderRPMTimer() {
/* 63711 */         return (this.iOECOUnderRPMTimerBuilder_ != null || this.iOECOUnderRPMTimer_ != null);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO getIOECOUnderRPMTimer() {
/* 63718 */         if (this.iOECOUnderRPMTimerBuilder_ == null) {
/* 63719 */           return (this.iOECOUnderRPMTimer_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOECOUnderRPMTimer_;
/*       */         }
/* 63721 */         return (DolphinConfig.IO)this.iOECOUnderRPMTimerBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOECOUnderRPMTimer(DolphinConfig.IO value) {
/* 63728 */         if (this.iOECOUnderRPMTimerBuilder_ == null) {
/* 63729 */           if (value == null) {
/* 63730 */             throw new NullPointerException();
/*       */           }
/* 63732 */           this.iOECOUnderRPMTimer_ = value;
/* 63733 */           onChanged();
/*       */         } else {
/* 63735 */           this.iOECOUnderRPMTimerBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         
/* 63738 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOECOUnderRPMTimer(DolphinConfig.IO.Builder builderForValue) {
/* 63745 */         if (this.iOECOUnderRPMTimerBuilder_ == null) {
/* 63746 */           this.iOECOUnderRPMTimer_ = builderForValue.build();
/* 63747 */           onChanged();
/*       */         } else {
/* 63749 */           this.iOECOUnderRPMTimerBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         
/* 63752 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeIOECOUnderRPMTimer(DolphinConfig.IO value) {
/* 63758 */         if (this.iOECOUnderRPMTimerBuilder_ == null) {
/* 63759 */           if (this.iOECOUnderRPMTimer_ != null) {
/* 63760 */             this
/* 63761 */               .iOECOUnderRPMTimer_ = DolphinConfig.IO.newBuilder(this.iOECOUnderRPMTimer_).mergeFrom(value).buildPartial();
/*       */           } else {
/* 63763 */             this.iOECOUnderRPMTimer_ = value;
/*       */           } 
/* 63765 */           onChanged();
/*       */         } else {
/* 63767 */           this.iOECOUnderRPMTimerBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         
/* 63770 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearIOECOUnderRPMTimer() {
/* 63776 */         if (this.iOECOUnderRPMTimerBuilder_ == null) {
/* 63777 */           this.iOECOUnderRPMTimer_ = null;
/* 63778 */           onChanged();
/*       */         } else {
/* 63780 */           this.iOECOUnderRPMTimer_ = null;
/* 63781 */           this.iOECOUnderRPMTimerBuilder_ = null;
/*       */         } 
/*       */         
/* 63784 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOECOUnderRPMTimerBuilder() {
/* 63791 */         onChanged();
/* 63792 */         return (DolphinConfig.IO.Builder)getIOECOUnderRPMTimerFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOECOUnderRPMTimerOrBuilder() {
/* 63798 */         if (this.iOECOUnderRPMTimerBuilder_ != null) {
/* 63799 */           return (DolphinConfig.IOOrBuilder)this.iOECOUnderRPMTimerBuilder_.getMessageOrBuilder();
/*       */         }
/* 63801 */         return (this.iOECOUnderRPMTimer_ == null) ? 
/* 63802 */           DolphinConfig.IO.getDefaultInstance() : this.iOECOUnderRPMTimer_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOECOUnderRPMTimerFieldBuilder() {
/* 63811 */         if (this.iOECOUnderRPMTimerBuilder_ == null) {
/* 63812 */           this
/*       */ 
/*       */ 
/*       */             
/* 63816 */             .iOECOUnderRPMTimerBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOECOUnderRPMTimer(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/* 63817 */           this.iOECOUnderRPMTimer_ = null;
/*       */         } 
/* 63819 */         return this.iOECOUnderRPMTimerBuilder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasIOECOUnderRPMTotalTimer() {
/* 63830 */         return (this.iOECOUnderRPMTotalTimerBuilder_ != null || this.iOECOUnderRPMTotalTimer_ != null);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO getIOECOUnderRPMTotalTimer() {
/* 63837 */         if (this.iOECOUnderRPMTotalTimerBuilder_ == null) {
/* 63838 */           return (this.iOECOUnderRPMTotalTimer_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOECOUnderRPMTotalTimer_;
/*       */         }
/* 63840 */         return (DolphinConfig.IO)this.iOECOUnderRPMTotalTimerBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOECOUnderRPMTotalTimer(DolphinConfig.IO value) {
/* 63847 */         if (this.iOECOUnderRPMTotalTimerBuilder_ == null) {
/* 63848 */           if (value == null) {
/* 63849 */             throw new NullPointerException();
/*       */           }
/* 63851 */           this.iOECOUnderRPMTotalTimer_ = value;
/* 63852 */           onChanged();
/*       */         } else {
/* 63854 */           this.iOECOUnderRPMTotalTimerBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         
/* 63857 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOECOUnderRPMTotalTimer(DolphinConfig.IO.Builder builderForValue) {
/* 63864 */         if (this.iOECOUnderRPMTotalTimerBuilder_ == null) {
/* 63865 */           this.iOECOUnderRPMTotalTimer_ = builderForValue.build();
/* 63866 */           onChanged();
/*       */         } else {
/* 63868 */           this.iOECOUnderRPMTotalTimerBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         
/* 63871 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeIOECOUnderRPMTotalTimer(DolphinConfig.IO value) {
/* 63877 */         if (this.iOECOUnderRPMTotalTimerBuilder_ == null) {
/* 63878 */           if (this.iOECOUnderRPMTotalTimer_ != null) {
/* 63879 */             this
/* 63880 */               .iOECOUnderRPMTotalTimer_ = DolphinConfig.IO.newBuilder(this.iOECOUnderRPMTotalTimer_).mergeFrom(value).buildPartial();
/*       */           } else {
/* 63882 */             this.iOECOUnderRPMTotalTimer_ = value;
/*       */           } 
/* 63884 */           onChanged();
/*       */         } else {
/* 63886 */           this.iOECOUnderRPMTotalTimerBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         
/* 63889 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearIOECOUnderRPMTotalTimer() {
/* 63895 */         if (this.iOECOUnderRPMTotalTimerBuilder_ == null) {
/* 63896 */           this.iOECOUnderRPMTotalTimer_ = null;
/* 63897 */           onChanged();
/*       */         } else {
/* 63899 */           this.iOECOUnderRPMTotalTimer_ = null;
/* 63900 */           this.iOECOUnderRPMTotalTimerBuilder_ = null;
/*       */         } 
/*       */         
/* 63903 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOECOUnderRPMTotalTimerBuilder() {
/* 63910 */         onChanged();
/* 63911 */         return (DolphinConfig.IO.Builder)getIOECOUnderRPMTotalTimerFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOECOUnderRPMTotalTimerOrBuilder() {
/* 63917 */         if (this.iOECOUnderRPMTotalTimerBuilder_ != null) {
/* 63918 */           return (DolphinConfig.IOOrBuilder)this.iOECOUnderRPMTotalTimerBuilder_.getMessageOrBuilder();
/*       */         }
/* 63920 */         return (this.iOECOUnderRPMTotalTimer_ == null) ? 
/* 63921 */           DolphinConfig.IO.getDefaultInstance() : this.iOECOUnderRPMTotalTimer_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOECOUnderRPMTotalTimerFieldBuilder() {
/* 63930 */         if (this.iOECOUnderRPMTotalTimerBuilder_ == null) {
/* 63931 */           this
/*       */ 
/*       */ 
/*       */             
/* 63935 */             .iOECOUnderRPMTotalTimerBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOECOUnderRPMTotalTimer(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/* 63936 */           this.iOECOUnderRPMTotalTimer_ = null;
/*       */         } 
/* 63938 */         return this.iOECOUnderRPMTotalTimerBuilder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasIOECOBreakCounter() {
/* 63953 */         return (this.iOECOBreakCounterBuilder_ != null || this.iOECOBreakCounter_ != null);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO getIOECOBreakCounter() {
/* 63964 */         if (this.iOECOBreakCounterBuilder_ == null) {
/* 63965 */           return (this.iOECOBreakCounter_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOECOBreakCounter_;
/*       */         }
/* 63967 */         return (DolphinConfig.IO)this.iOECOBreakCounterBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOECOBreakCounter(DolphinConfig.IO value) {
/* 63978 */         if (this.iOECOBreakCounterBuilder_ == null) {
/* 63979 */           if (value == null) {
/* 63980 */             throw new NullPointerException();
/*       */           }
/* 63982 */           this.iOECOBreakCounter_ = value;
/* 63983 */           onChanged();
/*       */         } else {
/* 63985 */           this.iOECOBreakCounterBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         
/* 63988 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOECOBreakCounter(DolphinConfig.IO.Builder builderForValue) {
/* 63999 */         if (this.iOECOBreakCounterBuilder_ == null) {
/* 64000 */           this.iOECOBreakCounter_ = builderForValue.build();
/* 64001 */           onChanged();
/*       */         } else {
/* 64003 */           this.iOECOBreakCounterBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         
/* 64006 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeIOECOBreakCounter(DolphinConfig.IO value) {
/* 64016 */         if (this.iOECOBreakCounterBuilder_ == null) {
/* 64017 */           if (this.iOECOBreakCounter_ != null) {
/* 64018 */             this
/* 64019 */               .iOECOBreakCounter_ = DolphinConfig.IO.newBuilder(this.iOECOBreakCounter_).mergeFrom(value).buildPartial();
/*       */           } else {
/* 64021 */             this.iOECOBreakCounter_ = value;
/*       */           } 
/* 64023 */           onChanged();
/*       */         } else {
/* 64025 */           this.iOECOBreakCounterBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         
/* 64028 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearIOECOBreakCounter() {
/* 64038 */         if (this.iOECOBreakCounterBuilder_ == null) {
/* 64039 */           this.iOECOBreakCounter_ = null;
/* 64040 */           onChanged();
/*       */         } else {
/* 64042 */           this.iOECOBreakCounter_ = null;
/* 64043 */           this.iOECOBreakCounterBuilder_ = null;
/*       */         } 
/*       */         
/* 64046 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOECOBreakCounterBuilder() {
/* 64057 */         onChanged();
/* 64058 */         return (DolphinConfig.IO.Builder)getIOECOBreakCounterFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOECOBreakCounterOrBuilder() {
/* 64068 */         if (this.iOECOBreakCounterBuilder_ != null) {
/* 64069 */           return (DolphinConfig.IOOrBuilder)this.iOECOBreakCounterBuilder_.getMessageOrBuilder();
/*       */         }
/* 64071 */         return (this.iOECOBreakCounter_ == null) ? 
/* 64072 */           DolphinConfig.IO.getDefaultInstance() : this.iOECOBreakCounter_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOECOBreakCounterFieldBuilder() {
/* 64085 */         if (this.iOECOBreakCounterBuilder_ == null) {
/* 64086 */           this
/*       */ 
/*       */ 
/*       */             
/* 64090 */             .iOECOBreakCounterBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOECOBreakCounter(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/* 64091 */           this.iOECOBreakCounter_ = null;
/*       */         } 
/* 64093 */         return this.iOECOBreakCounterBuilder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasIOECOHarshBreakCounter() {
/* 64104 */         return (this.iOECOHarshBreakCounterBuilder_ != null || this.iOECOHarshBreakCounter_ != null);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO getIOECOHarshBreakCounter() {
/* 64111 */         if (this.iOECOHarshBreakCounterBuilder_ == null) {
/* 64112 */           return (this.iOECOHarshBreakCounter_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOECOHarshBreakCounter_;
/*       */         }
/* 64114 */         return (DolphinConfig.IO)this.iOECOHarshBreakCounterBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOECOHarshBreakCounter(DolphinConfig.IO value) {
/* 64121 */         if (this.iOECOHarshBreakCounterBuilder_ == null) {
/* 64122 */           if (value == null) {
/* 64123 */             throw new NullPointerException();
/*       */           }
/* 64125 */           this.iOECOHarshBreakCounter_ = value;
/* 64126 */           onChanged();
/*       */         } else {
/* 64128 */           this.iOECOHarshBreakCounterBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         
/* 64131 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOECOHarshBreakCounter(DolphinConfig.IO.Builder builderForValue) {
/* 64138 */         if (this.iOECOHarshBreakCounterBuilder_ == null) {
/* 64139 */           this.iOECOHarshBreakCounter_ = builderForValue.build();
/* 64140 */           onChanged();
/*       */         } else {
/* 64142 */           this.iOECOHarshBreakCounterBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         
/* 64145 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeIOECOHarshBreakCounter(DolphinConfig.IO value) {
/* 64151 */         if (this.iOECOHarshBreakCounterBuilder_ == null) {
/* 64152 */           if (this.iOECOHarshBreakCounter_ != null) {
/* 64153 */             this
/* 64154 */               .iOECOHarshBreakCounter_ = DolphinConfig.IO.newBuilder(this.iOECOHarshBreakCounter_).mergeFrom(value).buildPartial();
/*       */           } else {
/* 64156 */             this.iOECOHarshBreakCounter_ = value;
/*       */           } 
/* 64158 */           onChanged();
/*       */         } else {
/* 64160 */           this.iOECOHarshBreakCounterBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         
/* 64163 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearIOECOHarshBreakCounter() {
/* 64169 */         if (this.iOECOHarshBreakCounterBuilder_ == null) {
/* 64170 */           this.iOECOHarshBreakCounter_ = null;
/* 64171 */           onChanged();
/*       */         } else {
/* 64173 */           this.iOECOHarshBreakCounter_ = null;
/* 64174 */           this.iOECOHarshBreakCounterBuilder_ = null;
/*       */         } 
/*       */         
/* 64177 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOECOHarshBreakCounterBuilder() {
/* 64184 */         onChanged();
/* 64185 */         return (DolphinConfig.IO.Builder)getIOECOHarshBreakCounterFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOECOHarshBreakCounterOrBuilder() {
/* 64191 */         if (this.iOECOHarshBreakCounterBuilder_ != null) {
/* 64192 */           return (DolphinConfig.IOOrBuilder)this.iOECOHarshBreakCounterBuilder_.getMessageOrBuilder();
/*       */         }
/* 64194 */         return (this.iOECOHarshBreakCounter_ == null) ? 
/* 64195 */           DolphinConfig.IO.getDefaultInstance() : this.iOECOHarshBreakCounter_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOECOHarshBreakCounterFieldBuilder() {
/* 64204 */         if (this.iOECOHarshBreakCounterBuilder_ == null) {
/* 64205 */           this
/*       */ 
/*       */ 
/*       */             
/* 64209 */             .iOECOHarshBreakCounterBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOECOHarshBreakCounter(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/* 64210 */           this.iOECOHarshBreakCounter_ = null;
/*       */         } 
/* 64212 */         return this.iOECOHarshBreakCounterBuilder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasIOECOExtremeBreakCounter() {
/* 64223 */         return (this.iOECOExtremeBreakCounterBuilder_ != null || this.iOECOExtremeBreakCounter_ != null);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO getIOECOExtremeBreakCounter() {
/* 64230 */         if (this.iOECOExtremeBreakCounterBuilder_ == null) {
/* 64231 */           return (this.iOECOExtremeBreakCounter_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOECOExtremeBreakCounter_;
/*       */         }
/* 64233 */         return (DolphinConfig.IO)this.iOECOExtremeBreakCounterBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOECOExtremeBreakCounter(DolphinConfig.IO value) {
/* 64240 */         if (this.iOECOExtremeBreakCounterBuilder_ == null) {
/* 64241 */           if (value == null) {
/* 64242 */             throw new NullPointerException();
/*       */           }
/* 64244 */           this.iOECOExtremeBreakCounter_ = value;
/* 64245 */           onChanged();
/*       */         } else {
/* 64247 */           this.iOECOExtremeBreakCounterBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         
/* 64250 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOECOExtremeBreakCounter(DolphinConfig.IO.Builder builderForValue) {
/* 64257 */         if (this.iOECOExtremeBreakCounterBuilder_ == null) {
/* 64258 */           this.iOECOExtremeBreakCounter_ = builderForValue.build();
/* 64259 */           onChanged();
/*       */         } else {
/* 64261 */           this.iOECOExtremeBreakCounterBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         
/* 64264 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeIOECOExtremeBreakCounter(DolphinConfig.IO value) {
/* 64270 */         if (this.iOECOExtremeBreakCounterBuilder_ == null) {
/* 64271 */           if (this.iOECOExtremeBreakCounter_ != null) {
/* 64272 */             this
/* 64273 */               .iOECOExtremeBreakCounter_ = DolphinConfig.IO.newBuilder(this.iOECOExtremeBreakCounter_).mergeFrom(value).buildPartial();
/*       */           } else {
/* 64275 */             this.iOECOExtremeBreakCounter_ = value;
/*       */           } 
/* 64277 */           onChanged();
/*       */         } else {
/* 64279 */           this.iOECOExtremeBreakCounterBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         
/* 64282 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearIOECOExtremeBreakCounter() {
/* 64288 */         if (this.iOECOExtremeBreakCounterBuilder_ == null) {
/* 64289 */           this.iOECOExtremeBreakCounter_ = null;
/* 64290 */           onChanged();
/*       */         } else {
/* 64292 */           this.iOECOExtremeBreakCounter_ = null;
/* 64293 */           this.iOECOExtremeBreakCounterBuilder_ = null;
/*       */         } 
/*       */         
/* 64296 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOECOExtremeBreakCounterBuilder() {
/* 64303 */         onChanged();
/* 64304 */         return (DolphinConfig.IO.Builder)getIOECOExtremeBreakCounterFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOECOExtremeBreakCounterOrBuilder() {
/* 64310 */         if (this.iOECOExtremeBreakCounterBuilder_ != null) {
/* 64311 */           return (DolphinConfig.IOOrBuilder)this.iOECOExtremeBreakCounterBuilder_.getMessageOrBuilder();
/*       */         }
/* 64313 */         return (this.iOECOExtremeBreakCounter_ == null) ? 
/* 64314 */           DolphinConfig.IO.getDefaultInstance() : this.iOECOExtremeBreakCounter_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOECOExtremeBreakCounterFieldBuilder() {
/* 64323 */         if (this.iOECOExtremeBreakCounterBuilder_ == null) {
/* 64324 */           this
/*       */ 
/*       */ 
/*       */             
/* 64328 */             .iOECOExtremeBreakCounterBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOECOExtremeBreakCounter(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/* 64329 */           this.iOECOExtremeBreakCounter_ = null;
/*       */         } 
/* 64331 */         return this.iOECOExtremeBreakCounterBuilder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasIOECOHarshAccelerationCounter() {
/* 64342 */         return (this.iOECOHarshAccelerationCounterBuilder_ != null || this.iOECOHarshAccelerationCounter_ != null);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO getIOECOHarshAccelerationCounter() {
/* 64349 */         if (this.iOECOHarshAccelerationCounterBuilder_ == null) {
/* 64350 */           return (this.iOECOHarshAccelerationCounter_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOECOHarshAccelerationCounter_;
/*       */         }
/* 64352 */         return (DolphinConfig.IO)this.iOECOHarshAccelerationCounterBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOECOHarshAccelerationCounter(DolphinConfig.IO value) {
/* 64359 */         if (this.iOECOHarshAccelerationCounterBuilder_ == null) {
/* 64360 */           if (value == null) {
/* 64361 */             throw new NullPointerException();
/*       */           }
/* 64363 */           this.iOECOHarshAccelerationCounter_ = value;
/* 64364 */           onChanged();
/*       */         } else {
/* 64366 */           this.iOECOHarshAccelerationCounterBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         
/* 64369 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOECOHarshAccelerationCounter(DolphinConfig.IO.Builder builderForValue) {
/* 64376 */         if (this.iOECOHarshAccelerationCounterBuilder_ == null) {
/* 64377 */           this.iOECOHarshAccelerationCounter_ = builderForValue.build();
/* 64378 */           onChanged();
/*       */         } else {
/* 64380 */           this.iOECOHarshAccelerationCounterBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         
/* 64383 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeIOECOHarshAccelerationCounter(DolphinConfig.IO value) {
/* 64389 */         if (this.iOECOHarshAccelerationCounterBuilder_ == null) {
/* 64390 */           if (this.iOECOHarshAccelerationCounter_ != null) {
/* 64391 */             this
/* 64392 */               .iOECOHarshAccelerationCounter_ = DolphinConfig.IO.newBuilder(this.iOECOHarshAccelerationCounter_).mergeFrom(value).buildPartial();
/*       */           } else {
/* 64394 */             this.iOECOHarshAccelerationCounter_ = value;
/*       */           } 
/* 64396 */           onChanged();
/*       */         } else {
/* 64398 */           this.iOECOHarshAccelerationCounterBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         
/* 64401 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearIOECOHarshAccelerationCounter() {
/* 64407 */         if (this.iOECOHarshAccelerationCounterBuilder_ == null) {
/* 64408 */           this.iOECOHarshAccelerationCounter_ = null;
/* 64409 */           onChanged();
/*       */         } else {
/* 64411 */           this.iOECOHarshAccelerationCounter_ = null;
/* 64412 */           this.iOECOHarshAccelerationCounterBuilder_ = null;
/*       */         } 
/*       */         
/* 64415 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOECOHarshAccelerationCounterBuilder() {
/* 64422 */         onChanged();
/* 64423 */         return (DolphinConfig.IO.Builder)getIOECOHarshAccelerationCounterFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOECOHarshAccelerationCounterOrBuilder() {
/* 64429 */         if (this.iOECOHarshAccelerationCounterBuilder_ != null) {
/* 64430 */           return (DolphinConfig.IOOrBuilder)this.iOECOHarshAccelerationCounterBuilder_.getMessageOrBuilder();
/*       */         }
/* 64432 */         return (this.iOECOHarshAccelerationCounter_ == null) ? 
/* 64433 */           DolphinConfig.IO.getDefaultInstance() : this.iOECOHarshAccelerationCounter_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOECOHarshAccelerationCounterFieldBuilder() {
/* 64442 */         if (this.iOECOHarshAccelerationCounterBuilder_ == null) {
/* 64443 */           this
/*       */ 
/*       */ 
/*       */             
/* 64447 */             .iOECOHarshAccelerationCounterBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOECOHarshAccelerationCounter(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/* 64448 */           this.iOECOHarshAccelerationCounter_ = null;
/*       */         } 
/* 64450 */         return this.iOECOHarshAccelerationCounterBuilder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasIOECOCorneringCounter() {
/* 64461 */         return (this.iOECOCorneringCounterBuilder_ != null || this.iOECOCorneringCounter_ != null);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO getIOECOCorneringCounter() {
/* 64468 */         if (this.iOECOCorneringCounterBuilder_ == null) {
/* 64469 */           return (this.iOECOCorneringCounter_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOECOCorneringCounter_;
/*       */         }
/* 64471 */         return (DolphinConfig.IO)this.iOECOCorneringCounterBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOECOCorneringCounter(DolphinConfig.IO value) {
/* 64478 */         if (this.iOECOCorneringCounterBuilder_ == null) {
/* 64479 */           if (value == null) {
/* 64480 */             throw new NullPointerException();
/*       */           }
/* 64482 */           this.iOECOCorneringCounter_ = value;
/* 64483 */           onChanged();
/*       */         } else {
/* 64485 */           this.iOECOCorneringCounterBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         
/* 64488 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOECOCorneringCounter(DolphinConfig.IO.Builder builderForValue) {
/* 64495 */         if (this.iOECOCorneringCounterBuilder_ == null) {
/* 64496 */           this.iOECOCorneringCounter_ = builderForValue.build();
/* 64497 */           onChanged();
/*       */         } else {
/* 64499 */           this.iOECOCorneringCounterBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         
/* 64502 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeIOECOCorneringCounter(DolphinConfig.IO value) {
/* 64508 */         if (this.iOECOCorneringCounterBuilder_ == null) {
/* 64509 */           if (this.iOECOCorneringCounter_ != null) {
/* 64510 */             this
/* 64511 */               .iOECOCorneringCounter_ = DolphinConfig.IO.newBuilder(this.iOECOCorneringCounter_).mergeFrom(value).buildPartial();
/*       */           } else {
/* 64513 */             this.iOECOCorneringCounter_ = value;
/*       */           } 
/* 64515 */           onChanged();
/*       */         } else {
/* 64517 */           this.iOECOCorneringCounterBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         
/* 64520 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearIOECOCorneringCounter() {
/* 64526 */         if (this.iOECOCorneringCounterBuilder_ == null) {
/* 64527 */           this.iOECOCorneringCounter_ = null;
/* 64528 */           onChanged();
/*       */         } else {
/* 64530 */           this.iOECOCorneringCounter_ = null;
/* 64531 */           this.iOECOCorneringCounterBuilder_ = null;
/*       */         } 
/*       */         
/* 64534 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOECOCorneringCounterBuilder() {
/* 64541 */         onChanged();
/* 64542 */         return (DolphinConfig.IO.Builder)getIOECOCorneringCounterFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOECOCorneringCounterOrBuilder() {
/* 64548 */         if (this.iOECOCorneringCounterBuilder_ != null) {
/* 64549 */           return (DolphinConfig.IOOrBuilder)this.iOECOCorneringCounterBuilder_.getMessageOrBuilder();
/*       */         }
/* 64551 */         return (this.iOECOCorneringCounter_ == null) ? 
/* 64552 */           DolphinConfig.IO.getDefaultInstance() : this.iOECOCorneringCounter_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOECOCorneringCounterFieldBuilder() {
/* 64561 */         if (this.iOECOCorneringCounterBuilder_ == null) {
/* 64562 */           this
/*       */ 
/*       */ 
/*       */             
/* 64566 */             .iOECOCorneringCounterBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOECOCorneringCounter(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/* 64567 */           this.iOECOCorneringCounter_ = null;
/*       */         } 
/* 64569 */         return this.iOECOCorneringCounterBuilder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasIOECOTotalBreak() {
/* 64580 */         return (this.iOECOTotalBreakBuilder_ != null || this.iOECOTotalBreak_ != null);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO getIOECOTotalBreak() {
/* 64587 */         if (this.iOECOTotalBreakBuilder_ == null) {
/* 64588 */           return (this.iOECOTotalBreak_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOECOTotalBreak_;
/*       */         }
/* 64590 */         return (DolphinConfig.IO)this.iOECOTotalBreakBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOECOTotalBreak(DolphinConfig.IO value) {
/* 64597 */         if (this.iOECOTotalBreakBuilder_ == null) {
/* 64598 */           if (value == null) {
/* 64599 */             throw new NullPointerException();
/*       */           }
/* 64601 */           this.iOECOTotalBreak_ = value;
/* 64602 */           onChanged();
/*       */         } else {
/* 64604 */           this.iOECOTotalBreakBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         
/* 64607 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOECOTotalBreak(DolphinConfig.IO.Builder builderForValue) {
/* 64614 */         if (this.iOECOTotalBreakBuilder_ == null) {
/* 64615 */           this.iOECOTotalBreak_ = builderForValue.build();
/* 64616 */           onChanged();
/*       */         } else {
/* 64618 */           this.iOECOTotalBreakBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         
/* 64621 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeIOECOTotalBreak(DolphinConfig.IO value) {
/* 64627 */         if (this.iOECOTotalBreakBuilder_ == null) {
/* 64628 */           if (this.iOECOTotalBreak_ != null) {
/* 64629 */             this
/* 64630 */               .iOECOTotalBreak_ = DolphinConfig.IO.newBuilder(this.iOECOTotalBreak_).mergeFrom(value).buildPartial();
/*       */           } else {
/* 64632 */             this.iOECOTotalBreak_ = value;
/*       */           } 
/* 64634 */           onChanged();
/*       */         } else {
/* 64636 */           this.iOECOTotalBreakBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         
/* 64639 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearIOECOTotalBreak() {
/* 64645 */         if (this.iOECOTotalBreakBuilder_ == null) {
/* 64646 */           this.iOECOTotalBreak_ = null;
/* 64647 */           onChanged();
/*       */         } else {
/* 64649 */           this.iOECOTotalBreak_ = null;
/* 64650 */           this.iOECOTotalBreakBuilder_ = null;
/*       */         } 
/*       */         
/* 64653 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOECOTotalBreakBuilder() {
/* 64660 */         onChanged();
/* 64661 */         return (DolphinConfig.IO.Builder)getIOECOTotalBreakFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOECOTotalBreakOrBuilder() {
/* 64667 */         if (this.iOECOTotalBreakBuilder_ != null) {
/* 64668 */           return (DolphinConfig.IOOrBuilder)this.iOECOTotalBreakBuilder_.getMessageOrBuilder();
/*       */         }
/* 64670 */         return (this.iOECOTotalBreak_ == null) ? 
/* 64671 */           DolphinConfig.IO.getDefaultInstance() : this.iOECOTotalBreak_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOECOTotalBreakFieldBuilder() {
/* 64680 */         if (this.iOECOTotalBreakBuilder_ == null) {
/* 64681 */           this
/*       */ 
/*       */ 
/*       */             
/* 64685 */             .iOECOTotalBreakBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOECOTotalBreak(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/* 64686 */           this.iOECOTotalBreak_ = null;
/*       */         } 
/* 64688 */         return this.iOECOTotalBreakBuilder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasIOECOTotalHarshBreak() {
/* 64699 */         return (this.iOECOTotalHarshBreakBuilder_ != null || this.iOECOTotalHarshBreak_ != null);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO getIOECOTotalHarshBreak() {
/* 64706 */         if (this.iOECOTotalHarshBreakBuilder_ == null) {
/* 64707 */           return (this.iOECOTotalHarshBreak_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOECOTotalHarshBreak_;
/*       */         }
/* 64709 */         return (DolphinConfig.IO)this.iOECOTotalHarshBreakBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOECOTotalHarshBreak(DolphinConfig.IO value) {
/* 64716 */         if (this.iOECOTotalHarshBreakBuilder_ == null) {
/* 64717 */           if (value == null) {
/* 64718 */             throw new NullPointerException();
/*       */           }
/* 64720 */           this.iOECOTotalHarshBreak_ = value;
/* 64721 */           onChanged();
/*       */         } else {
/* 64723 */           this.iOECOTotalHarshBreakBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         
/* 64726 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOECOTotalHarshBreak(DolphinConfig.IO.Builder builderForValue) {
/* 64733 */         if (this.iOECOTotalHarshBreakBuilder_ == null) {
/* 64734 */           this.iOECOTotalHarshBreak_ = builderForValue.build();
/* 64735 */           onChanged();
/*       */         } else {
/* 64737 */           this.iOECOTotalHarshBreakBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         
/* 64740 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeIOECOTotalHarshBreak(DolphinConfig.IO value) {
/* 64746 */         if (this.iOECOTotalHarshBreakBuilder_ == null) {
/* 64747 */           if (this.iOECOTotalHarshBreak_ != null) {
/* 64748 */             this
/* 64749 */               .iOECOTotalHarshBreak_ = DolphinConfig.IO.newBuilder(this.iOECOTotalHarshBreak_).mergeFrom(value).buildPartial();
/*       */           } else {
/* 64751 */             this.iOECOTotalHarshBreak_ = value;
/*       */           } 
/* 64753 */           onChanged();
/*       */         } else {
/* 64755 */           this.iOECOTotalHarshBreakBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         
/* 64758 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearIOECOTotalHarshBreak() {
/* 64764 */         if (this.iOECOTotalHarshBreakBuilder_ == null) {
/* 64765 */           this.iOECOTotalHarshBreak_ = null;
/* 64766 */           onChanged();
/*       */         } else {
/* 64768 */           this.iOECOTotalHarshBreak_ = null;
/* 64769 */           this.iOECOTotalHarshBreakBuilder_ = null;
/*       */         } 
/*       */         
/* 64772 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOECOTotalHarshBreakBuilder() {
/* 64779 */         onChanged();
/* 64780 */         return (DolphinConfig.IO.Builder)getIOECOTotalHarshBreakFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOECOTotalHarshBreakOrBuilder() {
/* 64786 */         if (this.iOECOTotalHarshBreakBuilder_ != null) {
/* 64787 */           return (DolphinConfig.IOOrBuilder)this.iOECOTotalHarshBreakBuilder_.getMessageOrBuilder();
/*       */         }
/* 64789 */         return (this.iOECOTotalHarshBreak_ == null) ? 
/* 64790 */           DolphinConfig.IO.getDefaultInstance() : this.iOECOTotalHarshBreak_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOECOTotalHarshBreakFieldBuilder() {
/* 64799 */         if (this.iOECOTotalHarshBreakBuilder_ == null) {
/* 64800 */           this
/*       */ 
/*       */ 
/*       */             
/* 64804 */             .iOECOTotalHarshBreakBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOECOTotalHarshBreak(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/* 64805 */           this.iOECOTotalHarshBreak_ = null;
/*       */         } 
/* 64807 */         return this.iOECOTotalHarshBreakBuilder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasIOECOTotalExtremeBreak() {
/* 64818 */         return (this.iOECOTotalExtremeBreakBuilder_ != null || this.iOECOTotalExtremeBreak_ != null);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO getIOECOTotalExtremeBreak() {
/* 64825 */         if (this.iOECOTotalExtremeBreakBuilder_ == null) {
/* 64826 */           return (this.iOECOTotalExtremeBreak_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOECOTotalExtremeBreak_;
/*       */         }
/* 64828 */         return (DolphinConfig.IO)this.iOECOTotalExtremeBreakBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOECOTotalExtremeBreak(DolphinConfig.IO value) {
/* 64835 */         if (this.iOECOTotalExtremeBreakBuilder_ == null) {
/* 64836 */           if (value == null) {
/* 64837 */             throw new NullPointerException();
/*       */           }
/* 64839 */           this.iOECOTotalExtremeBreak_ = value;
/* 64840 */           onChanged();
/*       */         } else {
/* 64842 */           this.iOECOTotalExtremeBreakBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         
/* 64845 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOECOTotalExtremeBreak(DolphinConfig.IO.Builder builderForValue) {
/* 64852 */         if (this.iOECOTotalExtremeBreakBuilder_ == null) {
/* 64853 */           this.iOECOTotalExtremeBreak_ = builderForValue.build();
/* 64854 */           onChanged();
/*       */         } else {
/* 64856 */           this.iOECOTotalExtremeBreakBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         
/* 64859 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeIOECOTotalExtremeBreak(DolphinConfig.IO value) {
/* 64865 */         if (this.iOECOTotalExtremeBreakBuilder_ == null) {
/* 64866 */           if (this.iOECOTotalExtremeBreak_ != null) {
/* 64867 */             this
/* 64868 */               .iOECOTotalExtremeBreak_ = DolphinConfig.IO.newBuilder(this.iOECOTotalExtremeBreak_).mergeFrom(value).buildPartial();
/*       */           } else {
/* 64870 */             this.iOECOTotalExtremeBreak_ = value;
/*       */           } 
/* 64872 */           onChanged();
/*       */         } else {
/* 64874 */           this.iOECOTotalExtremeBreakBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         
/* 64877 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearIOECOTotalExtremeBreak() {
/* 64883 */         if (this.iOECOTotalExtremeBreakBuilder_ == null) {
/* 64884 */           this.iOECOTotalExtremeBreak_ = null;
/* 64885 */           onChanged();
/*       */         } else {
/* 64887 */           this.iOECOTotalExtremeBreak_ = null;
/* 64888 */           this.iOECOTotalExtremeBreakBuilder_ = null;
/*       */         } 
/*       */         
/* 64891 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOECOTotalExtremeBreakBuilder() {
/* 64898 */         onChanged();
/* 64899 */         return (DolphinConfig.IO.Builder)getIOECOTotalExtremeBreakFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOECOTotalExtremeBreakOrBuilder() {
/* 64905 */         if (this.iOECOTotalExtremeBreakBuilder_ != null) {
/* 64906 */           return (DolphinConfig.IOOrBuilder)this.iOECOTotalExtremeBreakBuilder_.getMessageOrBuilder();
/*       */         }
/* 64908 */         return (this.iOECOTotalExtremeBreak_ == null) ? 
/* 64909 */           DolphinConfig.IO.getDefaultInstance() : this.iOECOTotalExtremeBreak_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOECOTotalExtremeBreakFieldBuilder() {
/* 64918 */         if (this.iOECOTotalExtremeBreakBuilder_ == null) {
/* 64919 */           this
/*       */ 
/*       */ 
/*       */             
/* 64923 */             .iOECOTotalExtremeBreakBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOECOTotalExtremeBreak(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/* 64924 */           this.iOECOTotalExtremeBreak_ = null;
/*       */         } 
/* 64926 */         return this.iOECOTotalExtremeBreakBuilder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasIOECOTotalHarshAcceleration() {
/* 64937 */         return (this.iOECOTotalHarshAccelerationBuilder_ != null || this.iOECOTotalHarshAcceleration_ != null);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO getIOECOTotalHarshAcceleration() {
/* 64944 */         if (this.iOECOTotalHarshAccelerationBuilder_ == null) {
/* 64945 */           return (this.iOECOTotalHarshAcceleration_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOECOTotalHarshAcceleration_;
/*       */         }
/* 64947 */         return (DolphinConfig.IO)this.iOECOTotalHarshAccelerationBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOECOTotalHarshAcceleration(DolphinConfig.IO value) {
/* 64954 */         if (this.iOECOTotalHarshAccelerationBuilder_ == null) {
/* 64955 */           if (value == null) {
/* 64956 */             throw new NullPointerException();
/*       */           }
/* 64958 */           this.iOECOTotalHarshAcceleration_ = value;
/* 64959 */           onChanged();
/*       */         } else {
/* 64961 */           this.iOECOTotalHarshAccelerationBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         
/* 64964 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOECOTotalHarshAcceleration(DolphinConfig.IO.Builder builderForValue) {
/* 64971 */         if (this.iOECOTotalHarshAccelerationBuilder_ == null) {
/* 64972 */           this.iOECOTotalHarshAcceleration_ = builderForValue.build();
/* 64973 */           onChanged();
/*       */         } else {
/* 64975 */           this.iOECOTotalHarshAccelerationBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         
/* 64978 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeIOECOTotalHarshAcceleration(DolphinConfig.IO value) {
/* 64984 */         if (this.iOECOTotalHarshAccelerationBuilder_ == null) {
/* 64985 */           if (this.iOECOTotalHarshAcceleration_ != null) {
/* 64986 */             this
/* 64987 */               .iOECOTotalHarshAcceleration_ = DolphinConfig.IO.newBuilder(this.iOECOTotalHarshAcceleration_).mergeFrom(value).buildPartial();
/*       */           } else {
/* 64989 */             this.iOECOTotalHarshAcceleration_ = value;
/*       */           } 
/* 64991 */           onChanged();
/*       */         } else {
/* 64993 */           this.iOECOTotalHarshAccelerationBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         
/* 64996 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearIOECOTotalHarshAcceleration() {
/* 65002 */         if (this.iOECOTotalHarshAccelerationBuilder_ == null) {
/* 65003 */           this.iOECOTotalHarshAcceleration_ = null;
/* 65004 */           onChanged();
/*       */         } else {
/* 65006 */           this.iOECOTotalHarshAcceleration_ = null;
/* 65007 */           this.iOECOTotalHarshAccelerationBuilder_ = null;
/*       */         } 
/*       */         
/* 65010 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOECOTotalHarshAccelerationBuilder() {
/* 65017 */         onChanged();
/* 65018 */         return (DolphinConfig.IO.Builder)getIOECOTotalHarshAccelerationFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOECOTotalHarshAccelerationOrBuilder() {
/* 65024 */         if (this.iOECOTotalHarshAccelerationBuilder_ != null) {
/* 65025 */           return (DolphinConfig.IOOrBuilder)this.iOECOTotalHarshAccelerationBuilder_.getMessageOrBuilder();
/*       */         }
/* 65027 */         return (this.iOECOTotalHarshAcceleration_ == null) ? 
/* 65028 */           DolphinConfig.IO.getDefaultInstance() : this.iOECOTotalHarshAcceleration_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOECOTotalHarshAccelerationFieldBuilder() {
/* 65037 */         if (this.iOECOTotalHarshAccelerationBuilder_ == null) {
/* 65038 */           this
/*       */ 
/*       */ 
/*       */             
/* 65042 */             .iOECOTotalHarshAccelerationBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOECOTotalHarshAcceleration(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/* 65043 */           this.iOECOTotalHarshAcceleration_ = null;
/*       */         } 
/* 65045 */         return this.iOECOTotalHarshAccelerationBuilder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasIOECOTotalCornering() {
/* 65056 */         return (this.iOECOTotalCorneringBuilder_ != null || this.iOECOTotalCornering_ != null);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO getIOECOTotalCornering() {
/* 65063 */         if (this.iOECOTotalCorneringBuilder_ == null) {
/* 65064 */           return (this.iOECOTotalCornering_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOECOTotalCornering_;
/*       */         }
/* 65066 */         return (DolphinConfig.IO)this.iOECOTotalCorneringBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOECOTotalCornering(DolphinConfig.IO value) {
/* 65073 */         if (this.iOECOTotalCorneringBuilder_ == null) {
/* 65074 */           if (value == null) {
/* 65075 */             throw new NullPointerException();
/*       */           }
/* 65077 */           this.iOECOTotalCornering_ = value;
/* 65078 */           onChanged();
/*       */         } else {
/* 65080 */           this.iOECOTotalCorneringBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         
/* 65083 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOECOTotalCornering(DolphinConfig.IO.Builder builderForValue) {
/* 65090 */         if (this.iOECOTotalCorneringBuilder_ == null) {
/* 65091 */           this.iOECOTotalCornering_ = builderForValue.build();
/* 65092 */           onChanged();
/*       */         } else {
/* 65094 */           this.iOECOTotalCorneringBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         
/* 65097 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeIOECOTotalCornering(DolphinConfig.IO value) {
/* 65103 */         if (this.iOECOTotalCorneringBuilder_ == null) {
/* 65104 */           if (this.iOECOTotalCornering_ != null) {
/* 65105 */             this
/* 65106 */               .iOECOTotalCornering_ = DolphinConfig.IO.newBuilder(this.iOECOTotalCornering_).mergeFrom(value).buildPartial();
/*       */           } else {
/* 65108 */             this.iOECOTotalCornering_ = value;
/*       */           } 
/* 65110 */           onChanged();
/*       */         } else {
/* 65112 */           this.iOECOTotalCorneringBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         
/* 65115 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearIOECOTotalCornering() {
/* 65121 */         if (this.iOECOTotalCorneringBuilder_ == null) {
/* 65122 */           this.iOECOTotalCornering_ = null;
/* 65123 */           onChanged();
/*       */         } else {
/* 65125 */           this.iOECOTotalCornering_ = null;
/* 65126 */           this.iOECOTotalCorneringBuilder_ = null;
/*       */         } 
/*       */         
/* 65129 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOECOTotalCorneringBuilder() {
/* 65136 */         onChanged();
/* 65137 */         return (DolphinConfig.IO.Builder)getIOECOTotalCorneringFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOECOTotalCorneringOrBuilder() {
/* 65143 */         if (this.iOECOTotalCorneringBuilder_ != null) {
/* 65144 */           return (DolphinConfig.IOOrBuilder)this.iOECOTotalCorneringBuilder_.getMessageOrBuilder();
/*       */         }
/* 65146 */         return (this.iOECOTotalCornering_ == null) ? 
/* 65147 */           DolphinConfig.IO.getDefaultInstance() : this.iOECOTotalCornering_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOECOTotalCorneringFieldBuilder() {
/* 65156 */         if (this.iOECOTotalCorneringBuilder_ == null) {
/* 65157 */           this
/*       */ 
/*       */ 
/*       */             
/* 65161 */             .iOECOTotalCorneringBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOECOTotalCornering(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/* 65162 */           this.iOECOTotalCornering_ = null;
/*       */         } 
/* 65164 */         return this.iOECOTotalCorneringBuilder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasIOTrip() {
/* 65179 */         return (this.iOTripBuilder_ != null || this.iOTrip_ != null);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO getIOTrip() {
/* 65190 */         if (this.iOTripBuilder_ == null) {
/* 65191 */           return (this.iOTrip_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOTrip_;
/*       */         }
/* 65193 */         return (DolphinConfig.IO)this.iOTripBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOTrip(DolphinConfig.IO value) {
/* 65204 */         if (this.iOTripBuilder_ == null) {
/* 65205 */           if (value == null) {
/* 65206 */             throw new NullPointerException();
/*       */           }
/* 65208 */           this.iOTrip_ = value;
/* 65209 */           onChanged();
/*       */         } else {
/* 65211 */           this.iOTripBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         
/* 65214 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOTrip(DolphinConfig.IO.Builder builderForValue) {
/* 65225 */         if (this.iOTripBuilder_ == null) {
/* 65226 */           this.iOTrip_ = builderForValue.build();
/* 65227 */           onChanged();
/*       */         } else {
/* 65229 */           this.iOTripBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         
/* 65232 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeIOTrip(DolphinConfig.IO value) {
/* 65242 */         if (this.iOTripBuilder_ == null) {
/* 65243 */           if (this.iOTrip_ != null) {
/* 65244 */             this
/* 65245 */               .iOTrip_ = DolphinConfig.IO.newBuilder(this.iOTrip_).mergeFrom(value).buildPartial();
/*       */           } else {
/* 65247 */             this.iOTrip_ = value;
/*       */           } 
/* 65249 */           onChanged();
/*       */         } else {
/* 65251 */           this.iOTripBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         
/* 65254 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearIOTrip() {
/* 65264 */         if (this.iOTripBuilder_ == null) {
/* 65265 */           this.iOTrip_ = null;
/* 65266 */           onChanged();
/*       */         } else {
/* 65268 */           this.iOTrip_ = null;
/* 65269 */           this.iOTripBuilder_ = null;
/*       */         } 
/*       */         
/* 65272 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOTripBuilder() {
/* 65283 */         onChanged();
/* 65284 */         return (DolphinConfig.IO.Builder)getIOTripFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOTripOrBuilder() {
/* 65294 */         if (this.iOTripBuilder_ != null) {
/* 65295 */           return (DolphinConfig.IOOrBuilder)this.iOTripBuilder_.getMessageOrBuilder();
/*       */         }
/* 65297 */         return (this.iOTrip_ == null) ? 
/* 65298 */           DolphinConfig.IO.getDefaultInstance() : this.iOTrip_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOTripFieldBuilder() {
/* 65311 */         if (this.iOTripBuilder_ == null) {
/* 65312 */           this
/*       */ 
/*       */ 
/*       */             
/* 65316 */             .iOTripBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOTrip(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/* 65317 */           this.iOTrip_ = null;
/*       */         } 
/* 65319 */         return this.iOTripBuilder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasIOTripTime() {
/* 65330 */         return (this.iOTripTimeBuilder_ != null || this.iOTripTime_ != null);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO getIOTripTime() {
/* 65337 */         if (this.iOTripTimeBuilder_ == null) {
/* 65338 */           return (this.iOTripTime_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOTripTime_;
/*       */         }
/* 65340 */         return (DolphinConfig.IO)this.iOTripTimeBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOTripTime(DolphinConfig.IO value) {
/* 65347 */         if (this.iOTripTimeBuilder_ == null) {
/* 65348 */           if (value == null) {
/* 65349 */             throw new NullPointerException();
/*       */           }
/* 65351 */           this.iOTripTime_ = value;
/* 65352 */           onChanged();
/*       */         } else {
/* 65354 */           this.iOTripTimeBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         
/* 65357 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOTripTime(DolphinConfig.IO.Builder builderForValue) {
/* 65364 */         if (this.iOTripTimeBuilder_ == null) {
/* 65365 */           this.iOTripTime_ = builderForValue.build();
/* 65366 */           onChanged();
/*       */         } else {
/* 65368 */           this.iOTripTimeBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         
/* 65371 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeIOTripTime(DolphinConfig.IO value) {
/* 65377 */         if (this.iOTripTimeBuilder_ == null) {
/* 65378 */           if (this.iOTripTime_ != null) {
/* 65379 */             this
/* 65380 */               .iOTripTime_ = DolphinConfig.IO.newBuilder(this.iOTripTime_).mergeFrom(value).buildPartial();
/*       */           } else {
/* 65382 */             this.iOTripTime_ = value;
/*       */           } 
/* 65384 */           onChanged();
/*       */         } else {
/* 65386 */           this.iOTripTimeBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         
/* 65389 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearIOTripTime() {
/* 65395 */         if (this.iOTripTimeBuilder_ == null) {
/* 65396 */           this.iOTripTime_ = null;
/* 65397 */           onChanged();
/*       */         } else {
/* 65399 */           this.iOTripTime_ = null;
/* 65400 */           this.iOTripTimeBuilder_ = null;
/*       */         } 
/*       */         
/* 65403 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOTripTimeBuilder() {
/* 65410 */         onChanged();
/* 65411 */         return (DolphinConfig.IO.Builder)getIOTripTimeFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOTripTimeOrBuilder() {
/* 65417 */         if (this.iOTripTimeBuilder_ != null) {
/* 65418 */           return (DolphinConfig.IOOrBuilder)this.iOTripTimeBuilder_.getMessageOrBuilder();
/*       */         }
/* 65420 */         return (this.iOTripTime_ == null) ? 
/* 65421 */           DolphinConfig.IO.getDefaultInstance() : this.iOTripTime_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOTripTimeFieldBuilder() {
/* 65430 */         if (this.iOTripTimeBuilder_ == null) {
/* 65431 */           this
/*       */ 
/*       */ 
/*       */             
/* 65435 */             .iOTripTimeBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOTripTime(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/* 65436 */           this.iOTripTime_ = null;
/*       */         } 
/* 65438 */         return this.iOTripTimeBuilder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasIOTripDistance() {
/* 65449 */         return (this.iOTripDistanceBuilder_ != null || this.iOTripDistance_ != null);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO getIOTripDistance() {
/* 65456 */         if (this.iOTripDistanceBuilder_ == null) {
/* 65457 */           return (this.iOTripDistance_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOTripDistance_;
/*       */         }
/* 65459 */         return (DolphinConfig.IO)this.iOTripDistanceBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOTripDistance(DolphinConfig.IO value) {
/* 65466 */         if (this.iOTripDistanceBuilder_ == null) {
/* 65467 */           if (value == null) {
/* 65468 */             throw new NullPointerException();
/*       */           }
/* 65470 */           this.iOTripDistance_ = value;
/* 65471 */           onChanged();
/*       */         } else {
/* 65473 */           this.iOTripDistanceBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         
/* 65476 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setIOTripDistance(DolphinConfig.IO.Builder builderForValue) {
/* 65483 */         if (this.iOTripDistanceBuilder_ == null) {
/* 65484 */           this.iOTripDistance_ = builderForValue.build();
/* 65485 */           onChanged();
/*       */         } else {
/* 65487 */           this.iOTripDistanceBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         
/* 65490 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeIOTripDistance(DolphinConfig.IO value) {
/* 65496 */         if (this.iOTripDistanceBuilder_ == null) {
/* 65497 */           if (this.iOTripDistance_ != null) {
/* 65498 */             this
/* 65499 */               .iOTripDistance_ = DolphinConfig.IO.newBuilder(this.iOTripDistance_).mergeFrom(value).buildPartial();
/*       */           } else {
/* 65501 */             this.iOTripDistance_ = value;
/*       */           } 
/* 65503 */           onChanged();
/*       */         } else {
/* 65505 */           this.iOTripDistanceBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         
/* 65508 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearIOTripDistance() {
/* 65514 */         if (this.iOTripDistanceBuilder_ == null) {
/* 65515 */           this.iOTripDistance_ = null;
/* 65516 */           onChanged();
/*       */         } else {
/* 65518 */           this.iOTripDistance_ = null;
/* 65519 */           this.iOTripDistanceBuilder_ = null;
/*       */         } 
/*       */         
/* 65522 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOTripDistanceBuilder() {
/* 65529 */         onChanged();
/* 65530 */         return (DolphinConfig.IO.Builder)getIOTripDistanceFieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOTripDistanceOrBuilder() {
/*       */         return (this.iOTripDistanceBuilder_ != null) ? (DolphinConfig.IOOrBuilder)this.iOTripDistanceBuilder_.getMessageOrBuilder() : ((this.iOTripDistance_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOTripDistance_);
/*       */       }
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOTripDistanceFieldBuilder() {
/*       */         if (this.iOTripDistanceBuilder_ == null) {
/*       */           this.iOTripDistanceBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOTripDistance(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.iOTripDistance_ = null;
/*       */         } 
/*       */         return this.iOTripDistanceBuilder_;
/*       */       }
/*       */       
/*       */       public boolean hasIODriverID() {
/*       */         return (this.iODriverIDBuilder_ != null || this.iODriverID_ != null);
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO getIODriverID() {
/*       */         return (this.iODriverIDBuilder_ == null) ? ((this.iODriverID_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iODriverID_) : (DolphinConfig.IO)this.iODriverIDBuilder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setIODriverID(DolphinConfig.IO value) {
/*       */         if (this.iODriverIDBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.iODriverID_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iODriverIDBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setIODriverID(DolphinConfig.IO.Builder builderForValue) {
/*       */         if (this.iODriverIDBuilder_ == null) {
/*       */           this.iODriverID_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.iODriverIDBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeIODriverID(DolphinConfig.IO value) {
/*       */         if (this.iODriverIDBuilder_ == null) {
/*       */           if (this.iODriverID_ != null) {
/*       */             this.iODriverID_ = DolphinConfig.IO.newBuilder(this.iODriverID_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.iODriverID_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.iODriverIDBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearIODriverID() {
/*       */         if (this.iODriverIDBuilder_ == null) {
/*       */           this.iODriverID_ = null;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iODriverID_ = null;
/*       */           this.iODriverIDBuilder_ = null;
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO.Builder getIODriverIDBuilder() {
/*       */         onChanged();
/*       */         return (DolphinConfig.IO.Builder)getIODriverIDFieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIODriverIDOrBuilder() {
/*       */         return (this.iODriverIDBuilder_ != null) ? (DolphinConfig.IOOrBuilder)this.iODriverIDBuilder_.getMessageOrBuilder() : ((this.iODriverID_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iODriverID_);
/*       */       }
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIODriverIDFieldBuilder() {
/*       */         if (this.iODriverIDBuilder_ == null) {
/*       */           this.iODriverIDBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIODriverID(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.iODriverID_ = null;
/*       */         } 
/*       */         return this.iODriverIDBuilder_;
/*       */       }
/*       */       
/*       */       public boolean hasIOTemperatureSensor1() {
/*       */         return (this.iOTemperatureSensor1Builder_ != null || this.iOTemperatureSensor1_ != null);
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO getIOTemperatureSensor1() {
/*       */         return (this.iOTemperatureSensor1Builder_ == null) ? ((this.iOTemperatureSensor1_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOTemperatureSensor1_) : (DolphinConfig.IO)this.iOTemperatureSensor1Builder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setIOTemperatureSensor1(DolphinConfig.IO value) {
/*       */         if (this.iOTemperatureSensor1Builder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.iOTemperatureSensor1_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOTemperatureSensor1Builder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setIOTemperatureSensor1(DolphinConfig.IO.Builder builderForValue) {
/*       */         if (this.iOTemperatureSensor1Builder_ == null) {
/*       */           this.iOTemperatureSensor1_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOTemperatureSensor1Builder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeIOTemperatureSensor1(DolphinConfig.IO value) {
/*       */         if (this.iOTemperatureSensor1Builder_ == null) {
/*       */           if (this.iOTemperatureSensor1_ != null) {
/*       */             this.iOTemperatureSensor1_ = DolphinConfig.IO.newBuilder(this.iOTemperatureSensor1_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.iOTemperatureSensor1_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOTemperatureSensor1Builder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearIOTemperatureSensor1() {
/*       */         if (this.iOTemperatureSensor1Builder_ == null) {
/*       */           this.iOTemperatureSensor1_ = null;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOTemperatureSensor1_ = null;
/*       */           this.iOTemperatureSensor1Builder_ = null;
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOTemperatureSensor1Builder() {
/*       */         onChanged();
/*       */         return (DolphinConfig.IO.Builder)getIOTemperatureSensor1FieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOTemperatureSensor1OrBuilder() {
/*       */         return (this.iOTemperatureSensor1Builder_ != null) ? (DolphinConfig.IOOrBuilder)this.iOTemperatureSensor1Builder_.getMessageOrBuilder() : ((this.iOTemperatureSensor1_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOTemperatureSensor1_);
/*       */       }
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOTemperatureSensor1FieldBuilder() {
/*       */         if (this.iOTemperatureSensor1Builder_ == null) {
/*       */           this.iOTemperatureSensor1Builder_ = new SingleFieldBuilderV3((AbstractMessage)getIOTemperatureSensor1(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.iOTemperatureSensor1_ = null;
/*       */         } 
/*       */         return this.iOTemperatureSensor1Builder_;
/*       */       }
/*       */       
/*       */       public boolean hasIOTemperatureSensor1ID() {
/*       */         return (this.iOTemperatureSensor1IDBuilder_ != null || this.iOTemperatureSensor1ID_ != null);
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO getIOTemperatureSensor1ID() {
/*       */         return (this.iOTemperatureSensor1IDBuilder_ == null) ? ((this.iOTemperatureSensor1ID_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOTemperatureSensor1ID_) : (DolphinConfig.IO)this.iOTemperatureSensor1IDBuilder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setIOTemperatureSensor1ID(DolphinConfig.IO value) {
/*       */         if (this.iOTemperatureSensor1IDBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.iOTemperatureSensor1ID_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOTemperatureSensor1IDBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setIOTemperatureSensor1ID(DolphinConfig.IO.Builder builderForValue) {
/*       */         if (this.iOTemperatureSensor1IDBuilder_ == null) {
/*       */           this.iOTemperatureSensor1ID_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOTemperatureSensor1IDBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeIOTemperatureSensor1ID(DolphinConfig.IO value) {
/*       */         if (this.iOTemperatureSensor1IDBuilder_ == null) {
/*       */           if (this.iOTemperatureSensor1ID_ != null) {
/*       */             this.iOTemperatureSensor1ID_ = DolphinConfig.IO.newBuilder(this.iOTemperatureSensor1ID_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.iOTemperatureSensor1ID_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOTemperatureSensor1IDBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearIOTemperatureSensor1ID() {
/*       */         if (this.iOTemperatureSensor1IDBuilder_ == null) {
/*       */           this.iOTemperatureSensor1ID_ = null;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOTemperatureSensor1ID_ = null;
/*       */           this.iOTemperatureSensor1IDBuilder_ = null;
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOTemperatureSensor1IDBuilder() {
/*       */         onChanged();
/*       */         return (DolphinConfig.IO.Builder)getIOTemperatureSensor1IDFieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOTemperatureSensor1IDOrBuilder() {
/*       */         return (this.iOTemperatureSensor1IDBuilder_ != null) ? (DolphinConfig.IOOrBuilder)this.iOTemperatureSensor1IDBuilder_.getMessageOrBuilder() : ((this.iOTemperatureSensor1ID_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOTemperatureSensor1ID_);
/*       */       }
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOTemperatureSensor1IDFieldBuilder() {
/*       */         if (this.iOTemperatureSensor1IDBuilder_ == null) {
/*       */           this.iOTemperatureSensor1IDBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOTemperatureSensor1ID(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.iOTemperatureSensor1ID_ = null;
/*       */         } 
/*       */         return this.iOTemperatureSensor1IDBuilder_;
/*       */       }
/*       */       
/*       */       public boolean hasIOTemperatureSensor2() {
/*       */         return (this.iOTemperatureSensor2Builder_ != null || this.iOTemperatureSensor2_ != null);
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO getIOTemperatureSensor2() {
/*       */         return (this.iOTemperatureSensor2Builder_ == null) ? ((this.iOTemperatureSensor2_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOTemperatureSensor2_) : (DolphinConfig.IO)this.iOTemperatureSensor2Builder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setIOTemperatureSensor2(DolphinConfig.IO value) {
/*       */         if (this.iOTemperatureSensor2Builder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.iOTemperatureSensor2_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOTemperatureSensor2Builder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setIOTemperatureSensor2(DolphinConfig.IO.Builder builderForValue) {
/*       */         if (this.iOTemperatureSensor2Builder_ == null) {
/*       */           this.iOTemperatureSensor2_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOTemperatureSensor2Builder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeIOTemperatureSensor2(DolphinConfig.IO value) {
/*       */         if (this.iOTemperatureSensor2Builder_ == null) {
/*       */           if (this.iOTemperatureSensor2_ != null) {
/*       */             this.iOTemperatureSensor2_ = DolphinConfig.IO.newBuilder(this.iOTemperatureSensor2_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.iOTemperatureSensor2_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOTemperatureSensor2Builder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearIOTemperatureSensor2() {
/*       */         if (this.iOTemperatureSensor2Builder_ == null) {
/*       */           this.iOTemperatureSensor2_ = null;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOTemperatureSensor2_ = null;
/*       */           this.iOTemperatureSensor2Builder_ = null;
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOTemperatureSensor2Builder() {
/*       */         onChanged();
/*       */         return (DolphinConfig.IO.Builder)getIOTemperatureSensor2FieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOTemperatureSensor2OrBuilder() {
/*       */         return (this.iOTemperatureSensor2Builder_ != null) ? (DolphinConfig.IOOrBuilder)this.iOTemperatureSensor2Builder_.getMessageOrBuilder() : ((this.iOTemperatureSensor2_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOTemperatureSensor2_);
/*       */       }
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOTemperatureSensor2FieldBuilder() {
/*       */         if (this.iOTemperatureSensor2Builder_ == null) {
/*       */           this.iOTemperatureSensor2Builder_ = new SingleFieldBuilderV3((AbstractMessage)getIOTemperatureSensor2(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.iOTemperatureSensor2_ = null;
/*       */         } 
/*       */         return this.iOTemperatureSensor2Builder_;
/*       */       }
/*       */       
/*       */       public boolean hasIOTemperatureSensor2ID() {
/*       */         return (this.iOTemperatureSensor2IDBuilder_ != null || this.iOTemperatureSensor2ID_ != null);
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO getIOTemperatureSensor2ID() {
/*       */         return (this.iOTemperatureSensor2IDBuilder_ == null) ? ((this.iOTemperatureSensor2ID_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOTemperatureSensor2ID_) : (DolphinConfig.IO)this.iOTemperatureSensor2IDBuilder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setIOTemperatureSensor2ID(DolphinConfig.IO value) {
/*       */         if (this.iOTemperatureSensor2IDBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.iOTemperatureSensor2ID_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOTemperatureSensor2IDBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setIOTemperatureSensor2ID(DolphinConfig.IO.Builder builderForValue) {
/*       */         if (this.iOTemperatureSensor2IDBuilder_ == null) {
/*       */           this.iOTemperatureSensor2ID_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOTemperatureSensor2IDBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeIOTemperatureSensor2ID(DolphinConfig.IO value) {
/*       */         if (this.iOTemperatureSensor2IDBuilder_ == null) {
/*       */           if (this.iOTemperatureSensor2ID_ != null) {
/*       */             this.iOTemperatureSensor2ID_ = DolphinConfig.IO.newBuilder(this.iOTemperatureSensor2ID_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.iOTemperatureSensor2ID_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOTemperatureSensor2IDBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearIOTemperatureSensor2ID() {
/*       */         if (this.iOTemperatureSensor2IDBuilder_ == null) {
/*       */           this.iOTemperatureSensor2ID_ = null;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOTemperatureSensor2ID_ = null;
/*       */           this.iOTemperatureSensor2IDBuilder_ = null;
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOTemperatureSensor2IDBuilder() {
/*       */         onChanged();
/*       */         return (DolphinConfig.IO.Builder)getIOTemperatureSensor2IDFieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOTemperatureSensor2IDOrBuilder() {
/*       */         return (this.iOTemperatureSensor2IDBuilder_ != null) ? (DolphinConfig.IOOrBuilder)this.iOTemperatureSensor2IDBuilder_.getMessageOrBuilder() : ((this.iOTemperatureSensor2ID_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOTemperatureSensor2ID_);
/*       */       }
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOTemperatureSensor2IDFieldBuilder() {
/*       */         if (this.iOTemperatureSensor2IDBuilder_ == null) {
/*       */           this.iOTemperatureSensor2IDBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOTemperatureSensor2ID(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.iOTemperatureSensor2ID_ = null;
/*       */         } 
/*       */         return this.iOTemperatureSensor2IDBuilder_;
/*       */       }
/*       */       
/*       */       public boolean hasIOTemperatureSensor3() {
/*       */         return (this.iOTemperatureSensor3Builder_ != null || this.iOTemperatureSensor3_ != null);
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO getIOTemperatureSensor3() {
/*       */         return (this.iOTemperatureSensor3Builder_ == null) ? ((this.iOTemperatureSensor3_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOTemperatureSensor3_) : (DolphinConfig.IO)this.iOTemperatureSensor3Builder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setIOTemperatureSensor3(DolphinConfig.IO value) {
/*       */         if (this.iOTemperatureSensor3Builder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.iOTemperatureSensor3_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOTemperatureSensor3Builder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setIOTemperatureSensor3(DolphinConfig.IO.Builder builderForValue) {
/*       */         if (this.iOTemperatureSensor3Builder_ == null) {
/*       */           this.iOTemperatureSensor3_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOTemperatureSensor3Builder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeIOTemperatureSensor3(DolphinConfig.IO value) {
/*       */         if (this.iOTemperatureSensor3Builder_ == null) {
/*       */           if (this.iOTemperatureSensor3_ != null) {
/*       */             this.iOTemperatureSensor3_ = DolphinConfig.IO.newBuilder(this.iOTemperatureSensor3_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.iOTemperatureSensor3_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOTemperatureSensor3Builder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearIOTemperatureSensor3() {
/*       */         if (this.iOTemperatureSensor3Builder_ == null) {
/*       */           this.iOTemperatureSensor3_ = null;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOTemperatureSensor3_ = null;
/*       */           this.iOTemperatureSensor3Builder_ = null;
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOTemperatureSensor3Builder() {
/*       */         onChanged();
/*       */         return (DolphinConfig.IO.Builder)getIOTemperatureSensor3FieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOTemperatureSensor3OrBuilder() {
/*       */         return (this.iOTemperatureSensor3Builder_ != null) ? (DolphinConfig.IOOrBuilder)this.iOTemperatureSensor3Builder_.getMessageOrBuilder() : ((this.iOTemperatureSensor3_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOTemperatureSensor3_);
/*       */       }
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOTemperatureSensor3FieldBuilder() {
/*       */         if (this.iOTemperatureSensor3Builder_ == null) {
/*       */           this.iOTemperatureSensor3Builder_ = new SingleFieldBuilderV3((AbstractMessage)getIOTemperatureSensor3(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.iOTemperatureSensor3_ = null;
/*       */         } 
/*       */         return this.iOTemperatureSensor3Builder_;
/*       */       }
/*       */       
/*       */       public boolean hasIOTemperatureSensor3ID() {
/*       */         return (this.iOTemperatureSensor3IDBuilder_ != null || this.iOTemperatureSensor3ID_ != null);
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO getIOTemperatureSensor3ID() {
/*       */         return (this.iOTemperatureSensor3IDBuilder_ == null) ? ((this.iOTemperatureSensor3ID_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOTemperatureSensor3ID_) : (DolphinConfig.IO)this.iOTemperatureSensor3IDBuilder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setIOTemperatureSensor3ID(DolphinConfig.IO value) {
/*       */         if (this.iOTemperatureSensor3IDBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.iOTemperatureSensor3ID_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOTemperatureSensor3IDBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setIOTemperatureSensor3ID(DolphinConfig.IO.Builder builderForValue) {
/*       */         if (this.iOTemperatureSensor3IDBuilder_ == null) {
/*       */           this.iOTemperatureSensor3ID_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOTemperatureSensor3IDBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeIOTemperatureSensor3ID(DolphinConfig.IO value) {
/*       */         if (this.iOTemperatureSensor3IDBuilder_ == null) {
/*       */           if (this.iOTemperatureSensor3ID_ != null) {
/*       */             this.iOTemperatureSensor3ID_ = DolphinConfig.IO.newBuilder(this.iOTemperatureSensor3ID_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.iOTemperatureSensor3ID_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOTemperatureSensor3IDBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearIOTemperatureSensor3ID() {
/*       */         if (this.iOTemperatureSensor3IDBuilder_ == null) {
/*       */           this.iOTemperatureSensor3ID_ = null;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOTemperatureSensor3ID_ = null;
/*       */           this.iOTemperatureSensor3IDBuilder_ = null;
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOTemperatureSensor3IDBuilder() {
/*       */         onChanged();
/*       */         return (DolphinConfig.IO.Builder)getIOTemperatureSensor3IDFieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOTemperatureSensor3IDOrBuilder() {
/*       */         return (this.iOTemperatureSensor3IDBuilder_ != null) ? (DolphinConfig.IOOrBuilder)this.iOTemperatureSensor3IDBuilder_.getMessageOrBuilder() : ((this.iOTemperatureSensor3ID_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOTemperatureSensor3ID_);
/*       */       }
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOTemperatureSensor3IDFieldBuilder() {
/*       */         if (this.iOTemperatureSensor3IDBuilder_ == null) {
/*       */           this.iOTemperatureSensor3IDBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOTemperatureSensor3ID(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.iOTemperatureSensor3ID_ = null;
/*       */         } 
/*       */         return this.iOTemperatureSensor3IDBuilder_;
/*       */       }
/*       */       
/*       */       public boolean hasIOHumiditySensor1() {
/*       */         return (this.iOHumiditySensor1Builder_ != null || this.iOHumiditySensor1_ != null);
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO getIOHumiditySensor1() {
/*       */         return (this.iOHumiditySensor1Builder_ == null) ? ((this.iOHumiditySensor1_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOHumiditySensor1_) : (DolphinConfig.IO)this.iOHumiditySensor1Builder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setIOHumiditySensor1(DolphinConfig.IO value) {
/*       */         if (this.iOHumiditySensor1Builder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.iOHumiditySensor1_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOHumiditySensor1Builder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setIOHumiditySensor1(DolphinConfig.IO.Builder builderForValue) {
/*       */         if (this.iOHumiditySensor1Builder_ == null) {
/*       */           this.iOHumiditySensor1_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOHumiditySensor1Builder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeIOHumiditySensor1(DolphinConfig.IO value) {
/*       */         if (this.iOHumiditySensor1Builder_ == null) {
/*       */           if (this.iOHumiditySensor1_ != null) {
/*       */             this.iOHumiditySensor1_ = DolphinConfig.IO.newBuilder(this.iOHumiditySensor1_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.iOHumiditySensor1_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOHumiditySensor1Builder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearIOHumiditySensor1() {
/*       */         if (this.iOHumiditySensor1Builder_ == null) {
/*       */           this.iOHumiditySensor1_ = null;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOHumiditySensor1_ = null;
/*       */           this.iOHumiditySensor1Builder_ = null;
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOHumiditySensor1Builder() {
/*       */         onChanged();
/*       */         return (DolphinConfig.IO.Builder)getIOHumiditySensor1FieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOHumiditySensor1OrBuilder() {
/*       */         return (this.iOHumiditySensor1Builder_ != null) ? (DolphinConfig.IOOrBuilder)this.iOHumiditySensor1Builder_.getMessageOrBuilder() : ((this.iOHumiditySensor1_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOHumiditySensor1_);
/*       */       }
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOHumiditySensor1FieldBuilder() {
/*       */         if (this.iOHumiditySensor1Builder_ == null) {
/*       */           this.iOHumiditySensor1Builder_ = new SingleFieldBuilderV3((AbstractMessage)getIOHumiditySensor1(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.iOHumiditySensor1_ = null;
/*       */         } 
/*       */         return this.iOHumiditySensor1Builder_;
/*       */       }
/*       */       
/*       */       public boolean hasIOTiltStatus() {
/*       */         return (this.iOTiltStatusBuilder_ != null || this.iOTiltStatus_ != null);
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO getIOTiltStatus() {
/*       */         return (this.iOTiltStatusBuilder_ == null) ? ((this.iOTiltStatus_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOTiltStatus_) : (DolphinConfig.IO)this.iOTiltStatusBuilder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setIOTiltStatus(DolphinConfig.IO value) {
/*       */         if (this.iOTiltStatusBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.iOTiltStatus_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOTiltStatusBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setIOTiltStatus(DolphinConfig.IO.Builder builderForValue) {
/*       */         if (this.iOTiltStatusBuilder_ == null) {
/*       */           this.iOTiltStatus_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOTiltStatusBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeIOTiltStatus(DolphinConfig.IO value) {
/*       */         if (this.iOTiltStatusBuilder_ == null) {
/*       */           if (this.iOTiltStatus_ != null) {
/*       */             this.iOTiltStatus_ = DolphinConfig.IO.newBuilder(this.iOTiltStatus_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.iOTiltStatus_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOTiltStatusBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearIOTiltStatus() {
/*       */         if (this.iOTiltStatusBuilder_ == null) {
/*       */           this.iOTiltStatus_ = null;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOTiltStatus_ = null;
/*       */           this.iOTiltStatusBuilder_ = null;
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOTiltStatusBuilder() {
/*       */         onChanged();
/*       */         return (DolphinConfig.IO.Builder)getIOTiltStatusFieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOTiltStatusOrBuilder() {
/*       */         return (this.iOTiltStatusBuilder_ != null) ? (DolphinConfig.IOOrBuilder)this.iOTiltStatusBuilder_.getMessageOrBuilder() : ((this.iOTiltStatus_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOTiltStatus_);
/*       */       }
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOTiltStatusFieldBuilder() {
/*       */         if (this.iOTiltStatusBuilder_ == null) {
/*       */           this.iOTiltStatusBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOTiltStatus(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.iOTiltStatus_ = null;
/*       */         } 
/*       */         return this.iOTiltStatusBuilder_;
/*       */       }
/*       */       
/*       */       public boolean hasIOOBDEngineRPM() {
/*       */         return (this.iOOBDEngineRPMBuilder_ != null || this.iOOBDEngineRPM_ != null);
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO getIOOBDEngineRPM() {
/*       */         return (this.iOOBDEngineRPMBuilder_ == null) ? ((this.iOOBDEngineRPM_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOOBDEngineRPM_) : (DolphinConfig.IO)this.iOOBDEngineRPMBuilder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setIOOBDEngineRPM(DolphinConfig.IO value) {
/*       */         if (this.iOOBDEngineRPMBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.iOOBDEngineRPM_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOOBDEngineRPMBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setIOOBDEngineRPM(DolphinConfig.IO.Builder builderForValue) {
/*       */         if (this.iOOBDEngineRPMBuilder_ == null) {
/*       */           this.iOOBDEngineRPM_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOOBDEngineRPMBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeIOOBDEngineRPM(DolphinConfig.IO value) {
/*       */         if (this.iOOBDEngineRPMBuilder_ == null) {
/*       */           if (this.iOOBDEngineRPM_ != null) {
/*       */             this.iOOBDEngineRPM_ = DolphinConfig.IO.newBuilder(this.iOOBDEngineRPM_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.iOOBDEngineRPM_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOOBDEngineRPMBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearIOOBDEngineRPM() {
/*       */         if (this.iOOBDEngineRPMBuilder_ == null) {
/*       */           this.iOOBDEngineRPM_ = null;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOOBDEngineRPM_ = null;
/*       */           this.iOOBDEngineRPMBuilder_ = null;
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOOBDEngineRPMBuilder() {
/*       */         onChanged();
/*       */         return (DolphinConfig.IO.Builder)getIOOBDEngineRPMFieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOOBDEngineRPMOrBuilder() {
/*       */         return (this.iOOBDEngineRPMBuilder_ != null) ? (DolphinConfig.IOOrBuilder)this.iOOBDEngineRPMBuilder_.getMessageOrBuilder() : ((this.iOOBDEngineRPM_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOOBDEngineRPM_);
/*       */       }
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOOBDEngineRPMFieldBuilder() {
/*       */         if (this.iOOBDEngineRPMBuilder_ == null) {
/*       */           this.iOOBDEngineRPMBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOOBDEngineRPM(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.iOOBDEngineRPM_ = null;
/*       */         } 
/*       */         return this.iOOBDEngineRPMBuilder_;
/*       */       }
/*       */       
/*       */       public boolean hasIOOBDBatteryVoltage() {
/*       */         return (this.iOOBDBatteryVoltageBuilder_ != null || this.iOOBDBatteryVoltage_ != null);
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO getIOOBDBatteryVoltage() {
/*       */         return (this.iOOBDBatteryVoltageBuilder_ == null) ? ((this.iOOBDBatteryVoltage_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOOBDBatteryVoltage_) : (DolphinConfig.IO)this.iOOBDBatteryVoltageBuilder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setIOOBDBatteryVoltage(DolphinConfig.IO value) {
/*       */         if (this.iOOBDBatteryVoltageBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.iOOBDBatteryVoltage_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOOBDBatteryVoltageBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setIOOBDBatteryVoltage(DolphinConfig.IO.Builder builderForValue) {
/*       */         if (this.iOOBDBatteryVoltageBuilder_ == null) {
/*       */           this.iOOBDBatteryVoltage_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOOBDBatteryVoltageBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeIOOBDBatteryVoltage(DolphinConfig.IO value) {
/*       */         if (this.iOOBDBatteryVoltageBuilder_ == null) {
/*       */           if (this.iOOBDBatteryVoltage_ != null) {
/*       */             this.iOOBDBatteryVoltage_ = DolphinConfig.IO.newBuilder(this.iOOBDBatteryVoltage_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.iOOBDBatteryVoltage_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOOBDBatteryVoltageBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearIOOBDBatteryVoltage() {
/*       */         if (this.iOOBDBatteryVoltageBuilder_ == null) {
/*       */           this.iOOBDBatteryVoltage_ = null;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOOBDBatteryVoltage_ = null;
/*       */           this.iOOBDBatteryVoltageBuilder_ = null;
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOOBDBatteryVoltageBuilder() {
/*       */         onChanged();
/*       */         return (DolphinConfig.IO.Builder)getIOOBDBatteryVoltageFieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOOBDBatteryVoltageOrBuilder() {
/*       */         return (this.iOOBDBatteryVoltageBuilder_ != null) ? (DolphinConfig.IOOrBuilder)this.iOOBDBatteryVoltageBuilder_.getMessageOrBuilder() : ((this.iOOBDBatteryVoltage_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOOBDBatteryVoltage_);
/*       */       }
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOOBDBatteryVoltageFieldBuilder() {
/*       */         if (this.iOOBDBatteryVoltageBuilder_ == null) {
/*       */           this.iOOBDBatteryVoltageBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOOBDBatteryVoltage(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.iOOBDBatteryVoltage_ = null;
/*       */         } 
/*       */         return this.iOOBDBatteryVoltageBuilder_;
/*       */       }
/*       */       
/*       */       public boolean hasIOOBDEngineCoolantTemperature() {
/*       */         return (this.iOOBDEngineCoolantTemperatureBuilder_ != null || this.iOOBDEngineCoolantTemperature_ != null);
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO getIOOBDEngineCoolantTemperature() {
/*       */         return (this.iOOBDEngineCoolantTemperatureBuilder_ == null) ? ((this.iOOBDEngineCoolantTemperature_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOOBDEngineCoolantTemperature_) : (DolphinConfig.IO)this.iOOBDEngineCoolantTemperatureBuilder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setIOOBDEngineCoolantTemperature(DolphinConfig.IO value) {
/*       */         if (this.iOOBDEngineCoolantTemperatureBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.iOOBDEngineCoolantTemperature_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOOBDEngineCoolantTemperatureBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setIOOBDEngineCoolantTemperature(DolphinConfig.IO.Builder builderForValue) {
/*       */         if (this.iOOBDEngineCoolantTemperatureBuilder_ == null) {
/*       */           this.iOOBDEngineCoolantTemperature_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOOBDEngineCoolantTemperatureBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeIOOBDEngineCoolantTemperature(DolphinConfig.IO value) {
/*       */         if (this.iOOBDEngineCoolantTemperatureBuilder_ == null) {
/*       */           if (this.iOOBDEngineCoolantTemperature_ != null) {
/*       */             this.iOOBDEngineCoolantTemperature_ = DolphinConfig.IO.newBuilder(this.iOOBDEngineCoolantTemperature_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.iOOBDEngineCoolantTemperature_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOOBDEngineCoolantTemperatureBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearIOOBDEngineCoolantTemperature() {
/*       */         if (this.iOOBDEngineCoolantTemperatureBuilder_ == null) {
/*       */           this.iOOBDEngineCoolantTemperature_ = null;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOOBDEngineCoolantTemperature_ = null;
/*       */           this.iOOBDEngineCoolantTemperatureBuilder_ = null;
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOOBDEngineCoolantTemperatureBuilder() {
/*       */         onChanged();
/*       */         return (DolphinConfig.IO.Builder)getIOOBDEngineCoolantTemperatureFieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOOBDEngineCoolantTemperatureOrBuilder() {
/*       */         return (this.iOOBDEngineCoolantTemperatureBuilder_ != null) ? (DolphinConfig.IOOrBuilder)this.iOOBDEngineCoolantTemperatureBuilder_.getMessageOrBuilder() : ((this.iOOBDEngineCoolantTemperature_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOOBDEngineCoolantTemperature_);
/*       */       }
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOOBDEngineCoolantTemperatureFieldBuilder() {
/*       */         if (this.iOOBDEngineCoolantTemperatureBuilder_ == null) {
/*       */           this.iOOBDEngineCoolantTemperatureBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOOBDEngineCoolantTemperature(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.iOOBDEngineCoolantTemperature_ = null;
/*       */         } 
/*       */         return this.iOOBDEngineCoolantTemperatureBuilder_;
/*       */       }
/*       */       
/*       */       public boolean hasIOOBDVehicleSpeed() {
/*       */         return (this.iOOBDVehicleSpeedBuilder_ != null || this.iOOBDVehicleSpeed_ != null);
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO getIOOBDVehicleSpeed() {
/*       */         return (this.iOOBDVehicleSpeedBuilder_ == null) ? ((this.iOOBDVehicleSpeed_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOOBDVehicleSpeed_) : (DolphinConfig.IO)this.iOOBDVehicleSpeedBuilder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setIOOBDVehicleSpeed(DolphinConfig.IO value) {
/*       */         if (this.iOOBDVehicleSpeedBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.iOOBDVehicleSpeed_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOOBDVehicleSpeedBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setIOOBDVehicleSpeed(DolphinConfig.IO.Builder builderForValue) {
/*       */         if (this.iOOBDVehicleSpeedBuilder_ == null) {
/*       */           this.iOOBDVehicleSpeed_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOOBDVehicleSpeedBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeIOOBDVehicleSpeed(DolphinConfig.IO value) {
/*       */         if (this.iOOBDVehicleSpeedBuilder_ == null) {
/*       */           if (this.iOOBDVehicleSpeed_ != null) {
/*       */             this.iOOBDVehicleSpeed_ = DolphinConfig.IO.newBuilder(this.iOOBDVehicleSpeed_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.iOOBDVehicleSpeed_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOOBDVehicleSpeedBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearIOOBDVehicleSpeed() {
/*       */         if (this.iOOBDVehicleSpeedBuilder_ == null) {
/*       */           this.iOOBDVehicleSpeed_ = null;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOOBDVehicleSpeed_ = null;
/*       */           this.iOOBDVehicleSpeedBuilder_ = null;
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOOBDVehicleSpeedBuilder() {
/*       */         onChanged();
/*       */         return (DolphinConfig.IO.Builder)getIOOBDVehicleSpeedFieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOOBDVehicleSpeedOrBuilder() {
/*       */         return (this.iOOBDVehicleSpeedBuilder_ != null) ? (DolphinConfig.IOOrBuilder)this.iOOBDVehicleSpeedBuilder_.getMessageOrBuilder() : ((this.iOOBDVehicleSpeed_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOOBDVehicleSpeed_);
/*       */       }
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOOBDVehicleSpeedFieldBuilder() {
/*       */         if (this.iOOBDVehicleSpeedBuilder_ == null) {
/*       */           this.iOOBDVehicleSpeedBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOOBDVehicleSpeed(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.iOOBDVehicleSpeed_ = null;
/*       */         } 
/*       */         return this.iOOBDVehicleSpeedBuilder_;
/*       */       }
/*       */       
/*       */       public boolean hasIOOBDTotalDistance() {
/*       */         return (this.iOOBDTotalDistanceBuilder_ != null || this.iOOBDTotalDistance_ != null);
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO getIOOBDTotalDistance() {
/*       */         return (this.iOOBDTotalDistanceBuilder_ == null) ? ((this.iOOBDTotalDistance_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOOBDTotalDistance_) : (DolphinConfig.IO)this.iOOBDTotalDistanceBuilder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setIOOBDTotalDistance(DolphinConfig.IO value) {
/*       */         if (this.iOOBDTotalDistanceBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.iOOBDTotalDistance_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOOBDTotalDistanceBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setIOOBDTotalDistance(DolphinConfig.IO.Builder builderForValue) {
/*       */         if (this.iOOBDTotalDistanceBuilder_ == null) {
/*       */           this.iOOBDTotalDistance_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOOBDTotalDistanceBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeIOOBDTotalDistance(DolphinConfig.IO value) {
/*       */         if (this.iOOBDTotalDistanceBuilder_ == null) {
/*       */           if (this.iOOBDTotalDistance_ != null) {
/*       */             this.iOOBDTotalDistance_ = DolphinConfig.IO.newBuilder(this.iOOBDTotalDistance_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.iOOBDTotalDistance_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOOBDTotalDistanceBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearIOOBDTotalDistance() {
/*       */         if (this.iOOBDTotalDistanceBuilder_ == null) {
/*       */           this.iOOBDTotalDistance_ = null;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOOBDTotalDistance_ = null;
/*       */           this.iOOBDTotalDistanceBuilder_ = null;
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOOBDTotalDistanceBuilder() {
/*       */         onChanged();
/*       */         return (DolphinConfig.IO.Builder)getIOOBDTotalDistanceFieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOOBDTotalDistanceOrBuilder() {
/*       */         return (this.iOOBDTotalDistanceBuilder_ != null) ? (DolphinConfig.IOOrBuilder)this.iOOBDTotalDistanceBuilder_.getMessageOrBuilder() : ((this.iOOBDTotalDistance_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOOBDTotalDistance_);
/*       */       }
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOOBDTotalDistanceFieldBuilder() {
/*       */         if (this.iOOBDTotalDistanceBuilder_ == null) {
/*       */           this.iOOBDTotalDistanceBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOOBDTotalDistance(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.iOOBDTotalDistance_ = null;
/*       */         } 
/*       */         return this.iOOBDTotalDistanceBuilder_;
/*       */       }
/*       */       
/*       */       public boolean hasIOOBDFuelRate() {
/*       */         return (this.iOOBDFuelRateBuilder_ != null || this.iOOBDFuelRate_ != null);
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO getIOOBDFuelRate() {
/*       */         return (this.iOOBDFuelRateBuilder_ == null) ? ((this.iOOBDFuelRate_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOOBDFuelRate_) : (DolphinConfig.IO)this.iOOBDFuelRateBuilder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setIOOBDFuelRate(DolphinConfig.IO value) {
/*       */         if (this.iOOBDFuelRateBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.iOOBDFuelRate_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOOBDFuelRateBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setIOOBDFuelRate(DolphinConfig.IO.Builder builderForValue) {
/*       */         if (this.iOOBDFuelRateBuilder_ == null) {
/*       */           this.iOOBDFuelRate_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOOBDFuelRateBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeIOOBDFuelRate(DolphinConfig.IO value) {
/*       */         if (this.iOOBDFuelRateBuilder_ == null) {
/*       */           if (this.iOOBDFuelRate_ != null) {
/*       */             this.iOOBDFuelRate_ = DolphinConfig.IO.newBuilder(this.iOOBDFuelRate_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.iOOBDFuelRate_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOOBDFuelRateBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearIOOBDFuelRate() {
/*       */         if (this.iOOBDFuelRateBuilder_ == null) {
/*       */           this.iOOBDFuelRate_ = null;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOOBDFuelRate_ = null;
/*       */           this.iOOBDFuelRateBuilder_ = null;
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOOBDFuelRateBuilder() {
/*       */         onChanged();
/*       */         return (DolphinConfig.IO.Builder)getIOOBDFuelRateFieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOOBDFuelRateOrBuilder() {
/*       */         return (this.iOOBDFuelRateBuilder_ != null) ? (DolphinConfig.IOOrBuilder)this.iOOBDFuelRateBuilder_.getMessageOrBuilder() : ((this.iOOBDFuelRate_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOOBDFuelRate_);
/*       */       }
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOOBDFuelRateFieldBuilder() {
/*       */         if (this.iOOBDFuelRateBuilder_ == null) {
/*       */           this.iOOBDFuelRateBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOOBDFuelRate(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.iOOBDFuelRate_ = null;
/*       */         } 
/*       */         return this.iOOBDFuelRateBuilder_;
/*       */       }
/*       */       
/*       */       public boolean hasIOOBDTotalFuelUsed() {
/*       */         return (this.iOOBDTotalFuelUsedBuilder_ != null || this.iOOBDTotalFuelUsed_ != null);
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO getIOOBDTotalFuelUsed() {
/*       */         return (this.iOOBDTotalFuelUsedBuilder_ == null) ? ((this.iOOBDTotalFuelUsed_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOOBDTotalFuelUsed_) : (DolphinConfig.IO)this.iOOBDTotalFuelUsedBuilder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setIOOBDTotalFuelUsed(DolphinConfig.IO value) {
/*       */         if (this.iOOBDTotalFuelUsedBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.iOOBDTotalFuelUsed_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOOBDTotalFuelUsedBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setIOOBDTotalFuelUsed(DolphinConfig.IO.Builder builderForValue) {
/*       */         if (this.iOOBDTotalFuelUsedBuilder_ == null) {
/*       */           this.iOOBDTotalFuelUsed_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOOBDTotalFuelUsedBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeIOOBDTotalFuelUsed(DolphinConfig.IO value) {
/*       */         if (this.iOOBDTotalFuelUsedBuilder_ == null) {
/*       */           if (this.iOOBDTotalFuelUsed_ != null) {
/*       */             this.iOOBDTotalFuelUsed_ = DolphinConfig.IO.newBuilder(this.iOOBDTotalFuelUsed_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.iOOBDTotalFuelUsed_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOOBDTotalFuelUsedBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearIOOBDTotalFuelUsed() {
/*       */         if (this.iOOBDTotalFuelUsedBuilder_ == null) {
/*       */           this.iOOBDTotalFuelUsed_ = null;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOOBDTotalFuelUsed_ = null;
/*       */           this.iOOBDTotalFuelUsedBuilder_ = null;
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOOBDTotalFuelUsedBuilder() {
/*       */         onChanged();
/*       */         return (DolphinConfig.IO.Builder)getIOOBDTotalFuelUsedFieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOOBDTotalFuelUsedOrBuilder() {
/*       */         return (this.iOOBDTotalFuelUsedBuilder_ != null) ? (DolphinConfig.IOOrBuilder)this.iOOBDTotalFuelUsedBuilder_.getMessageOrBuilder() : ((this.iOOBDTotalFuelUsed_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOOBDTotalFuelUsed_);
/*       */       }
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOOBDTotalFuelUsedFieldBuilder() {
/*       */         if (this.iOOBDTotalFuelUsedBuilder_ == null) {
/*       */           this.iOOBDTotalFuelUsedBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOOBDTotalFuelUsed(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.iOOBDTotalFuelUsed_ = null;
/*       */         } 
/*       */         return this.iOOBDTotalFuelUsedBuilder_;
/*       */       }
/*       */       
/*       */       public boolean hasIOOBDIntakeAirTemperature() {
/*       */         return (this.iOOBDIntakeAirTemperatureBuilder_ != null || this.iOOBDIntakeAirTemperature_ != null);
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO getIOOBDIntakeAirTemperature() {
/*       */         return (this.iOOBDIntakeAirTemperatureBuilder_ == null) ? ((this.iOOBDIntakeAirTemperature_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOOBDIntakeAirTemperature_) : (DolphinConfig.IO)this.iOOBDIntakeAirTemperatureBuilder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setIOOBDIntakeAirTemperature(DolphinConfig.IO value) {
/*       */         if (this.iOOBDIntakeAirTemperatureBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.iOOBDIntakeAirTemperature_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOOBDIntakeAirTemperatureBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setIOOBDIntakeAirTemperature(DolphinConfig.IO.Builder builderForValue) {
/*       */         if (this.iOOBDIntakeAirTemperatureBuilder_ == null) {
/*       */           this.iOOBDIntakeAirTemperature_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOOBDIntakeAirTemperatureBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeIOOBDIntakeAirTemperature(DolphinConfig.IO value) {
/*       */         if (this.iOOBDIntakeAirTemperatureBuilder_ == null) {
/*       */           if (this.iOOBDIntakeAirTemperature_ != null) {
/*       */             this.iOOBDIntakeAirTemperature_ = DolphinConfig.IO.newBuilder(this.iOOBDIntakeAirTemperature_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.iOOBDIntakeAirTemperature_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOOBDIntakeAirTemperatureBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearIOOBDIntakeAirTemperature() {
/*       */         if (this.iOOBDIntakeAirTemperatureBuilder_ == null) {
/*       */           this.iOOBDIntakeAirTemperature_ = null;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOOBDIntakeAirTemperature_ = null;
/*       */           this.iOOBDIntakeAirTemperatureBuilder_ = null;
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOOBDIntakeAirTemperatureBuilder() {
/*       */         onChanged();
/*       */         return (DolphinConfig.IO.Builder)getIOOBDIntakeAirTemperatureFieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOOBDIntakeAirTemperatureOrBuilder() {
/*       */         return (this.iOOBDIntakeAirTemperatureBuilder_ != null) ? (DolphinConfig.IOOrBuilder)this.iOOBDIntakeAirTemperatureBuilder_.getMessageOrBuilder() : ((this.iOOBDIntakeAirTemperature_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOOBDIntakeAirTemperature_);
/*       */       }
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOOBDIntakeAirTemperatureFieldBuilder() {
/*       */         if (this.iOOBDIntakeAirTemperatureBuilder_ == null) {
/*       */           this.iOOBDIntakeAirTemperatureBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOOBDIntakeAirTemperature(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.iOOBDIntakeAirTemperature_ = null;
/*       */         } 
/*       */         return this.iOOBDIntakeAirTemperatureBuilder_;
/*       */       }
/*       */       
/*       */       public boolean hasIOOBDIntakeManifoldAbsolutePressure() {
/*       */         return (this.iOOBDIntakeManifoldAbsolutePressureBuilder_ != null || this.iOOBDIntakeManifoldAbsolutePressure_ != null);
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO getIOOBDIntakeManifoldAbsolutePressure() {
/*       */         return (this.iOOBDIntakeManifoldAbsolutePressureBuilder_ == null) ? ((this.iOOBDIntakeManifoldAbsolutePressure_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOOBDIntakeManifoldAbsolutePressure_) : (DolphinConfig.IO)this.iOOBDIntakeManifoldAbsolutePressureBuilder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setIOOBDIntakeManifoldAbsolutePressure(DolphinConfig.IO value) {
/*       */         if (this.iOOBDIntakeManifoldAbsolutePressureBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.iOOBDIntakeManifoldAbsolutePressure_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOOBDIntakeManifoldAbsolutePressureBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setIOOBDIntakeManifoldAbsolutePressure(DolphinConfig.IO.Builder builderForValue) {
/*       */         if (this.iOOBDIntakeManifoldAbsolutePressureBuilder_ == null) {
/*       */           this.iOOBDIntakeManifoldAbsolutePressure_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOOBDIntakeManifoldAbsolutePressureBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeIOOBDIntakeManifoldAbsolutePressure(DolphinConfig.IO value) {
/*       */         if (this.iOOBDIntakeManifoldAbsolutePressureBuilder_ == null) {
/*       */           if (this.iOOBDIntakeManifoldAbsolutePressure_ != null) {
/*       */             this.iOOBDIntakeManifoldAbsolutePressure_ = DolphinConfig.IO.newBuilder(this.iOOBDIntakeManifoldAbsolutePressure_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.iOOBDIntakeManifoldAbsolutePressure_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOOBDIntakeManifoldAbsolutePressureBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearIOOBDIntakeManifoldAbsolutePressure() {
/*       */         if (this.iOOBDIntakeManifoldAbsolutePressureBuilder_ == null) {
/*       */           this.iOOBDIntakeManifoldAbsolutePressure_ = null;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOOBDIntakeManifoldAbsolutePressure_ = null;
/*       */           this.iOOBDIntakeManifoldAbsolutePressureBuilder_ = null;
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOOBDIntakeManifoldAbsolutePressureBuilder() {
/*       */         onChanged();
/*       */         return (DolphinConfig.IO.Builder)getIOOBDIntakeManifoldAbsolutePressureFieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOOBDIntakeManifoldAbsolutePressureOrBuilder() {
/*       */         return (this.iOOBDIntakeManifoldAbsolutePressureBuilder_ != null) ? (DolphinConfig.IOOrBuilder)this.iOOBDIntakeManifoldAbsolutePressureBuilder_.getMessageOrBuilder() : ((this.iOOBDIntakeManifoldAbsolutePressure_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOOBDIntakeManifoldAbsolutePressure_);
/*       */       }
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOOBDIntakeManifoldAbsolutePressureFieldBuilder() {
/*       */         if (this.iOOBDIntakeManifoldAbsolutePressureBuilder_ == null) {
/*       */           this.iOOBDIntakeManifoldAbsolutePressureBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOOBDIntakeManifoldAbsolutePressure(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.iOOBDIntakeManifoldAbsolutePressure_ = null;
/*       */         } 
/*       */         return this.iOOBDIntakeManifoldAbsolutePressureBuilder_;
/*       */       }
/*       */       
/*       */       public boolean hasIOOBDMalfunctionIndicatorLamp() {
/*       */         return (this.iOOBDMalfunctionIndicatorLampBuilder_ != null || this.iOOBDMalfunctionIndicatorLamp_ != null);
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO getIOOBDMalfunctionIndicatorLamp() {
/*       */         return (this.iOOBDMalfunctionIndicatorLampBuilder_ == null) ? ((this.iOOBDMalfunctionIndicatorLamp_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOOBDMalfunctionIndicatorLamp_) : (DolphinConfig.IO)this.iOOBDMalfunctionIndicatorLampBuilder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setIOOBDMalfunctionIndicatorLamp(DolphinConfig.IO value) {
/*       */         if (this.iOOBDMalfunctionIndicatorLampBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.iOOBDMalfunctionIndicatorLamp_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOOBDMalfunctionIndicatorLampBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setIOOBDMalfunctionIndicatorLamp(DolphinConfig.IO.Builder builderForValue) {
/*       */         if (this.iOOBDMalfunctionIndicatorLampBuilder_ == null) {
/*       */           this.iOOBDMalfunctionIndicatorLamp_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOOBDMalfunctionIndicatorLampBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeIOOBDMalfunctionIndicatorLamp(DolphinConfig.IO value) {
/*       */         if (this.iOOBDMalfunctionIndicatorLampBuilder_ == null) {
/*       */           if (this.iOOBDMalfunctionIndicatorLamp_ != null) {
/*       */             this.iOOBDMalfunctionIndicatorLamp_ = DolphinConfig.IO.newBuilder(this.iOOBDMalfunctionIndicatorLamp_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.iOOBDMalfunctionIndicatorLamp_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOOBDMalfunctionIndicatorLampBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearIOOBDMalfunctionIndicatorLamp() {
/*       */         if (this.iOOBDMalfunctionIndicatorLampBuilder_ == null) {
/*       */           this.iOOBDMalfunctionIndicatorLamp_ = null;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOOBDMalfunctionIndicatorLamp_ = null;
/*       */           this.iOOBDMalfunctionIndicatorLampBuilder_ = null;
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOOBDMalfunctionIndicatorLampBuilder() {
/*       */         onChanged();
/*       */         return (DolphinConfig.IO.Builder)getIOOBDMalfunctionIndicatorLampFieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOOBDMalfunctionIndicatorLampOrBuilder() {
/*       */         return (this.iOOBDMalfunctionIndicatorLampBuilder_ != null) ? (DolphinConfig.IOOrBuilder)this.iOOBDMalfunctionIndicatorLampBuilder_.getMessageOrBuilder() : ((this.iOOBDMalfunctionIndicatorLamp_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOOBDMalfunctionIndicatorLamp_);
/*       */       }
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOOBDMalfunctionIndicatorLampFieldBuilder() {
/*       */         if (this.iOOBDMalfunctionIndicatorLampBuilder_ == null) {
/*       */           this.iOOBDMalfunctionIndicatorLampBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOOBDMalfunctionIndicatorLamp(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.iOOBDMalfunctionIndicatorLamp_ = null;
/*       */         } 
/*       */         return this.iOOBDMalfunctionIndicatorLampBuilder_;
/*       */       }
/*       */       
/*       */       public boolean hasIODiagnosticTroubleCodesCount() {
/*       */         return (this.iODiagnosticTroubleCodesCountBuilder_ != null || this.iODiagnosticTroubleCodesCount_ != null);
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO getIODiagnosticTroubleCodesCount() {
/*       */         return (this.iODiagnosticTroubleCodesCountBuilder_ == null) ? ((this.iODiagnosticTroubleCodesCount_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iODiagnosticTroubleCodesCount_) : (DolphinConfig.IO)this.iODiagnosticTroubleCodesCountBuilder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setIODiagnosticTroubleCodesCount(DolphinConfig.IO value) {
/*       */         if (this.iODiagnosticTroubleCodesCountBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.iODiagnosticTroubleCodesCount_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iODiagnosticTroubleCodesCountBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setIODiagnosticTroubleCodesCount(DolphinConfig.IO.Builder builderForValue) {
/*       */         if (this.iODiagnosticTroubleCodesCountBuilder_ == null) {
/*       */           this.iODiagnosticTroubleCodesCount_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.iODiagnosticTroubleCodesCountBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeIODiagnosticTroubleCodesCount(DolphinConfig.IO value) {
/*       */         if (this.iODiagnosticTroubleCodesCountBuilder_ == null) {
/*       */           if (this.iODiagnosticTroubleCodesCount_ != null) {
/*       */             this.iODiagnosticTroubleCodesCount_ = DolphinConfig.IO.newBuilder(this.iODiagnosticTroubleCodesCount_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.iODiagnosticTroubleCodesCount_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.iODiagnosticTroubleCodesCountBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearIODiagnosticTroubleCodesCount() {
/*       */         if (this.iODiagnosticTroubleCodesCountBuilder_ == null) {
/*       */           this.iODiagnosticTroubleCodesCount_ = null;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iODiagnosticTroubleCodesCount_ = null;
/*       */           this.iODiagnosticTroubleCodesCountBuilder_ = null;
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO.Builder getIODiagnosticTroubleCodesCountBuilder() {
/*       */         onChanged();
/*       */         return (DolphinConfig.IO.Builder)getIODiagnosticTroubleCodesCountFieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIODiagnosticTroubleCodesCountOrBuilder() {
/*       */         return (this.iODiagnosticTroubleCodesCountBuilder_ != null) ? (DolphinConfig.IOOrBuilder)this.iODiagnosticTroubleCodesCountBuilder_.getMessageOrBuilder() : ((this.iODiagnosticTroubleCodesCount_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iODiagnosticTroubleCodesCount_);
/*       */       }
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIODiagnosticTroubleCodesCountFieldBuilder() {
/*       */         if (this.iODiagnosticTroubleCodesCountBuilder_ == null) {
/*       */           this.iODiagnosticTroubleCodesCountBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIODiagnosticTroubleCodesCount(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.iODiagnosticTroubleCodesCount_ = null;
/*       */         } 
/*       */         return this.iODiagnosticTroubleCodesCountBuilder_;
/*       */       }
/*       */       
/*       */       public boolean hasIOOBDCalculatedEngineLoad() {
/*       */         return (this.iOOBDCalculatedEngineLoadBuilder_ != null || this.iOOBDCalculatedEngineLoad_ != null);
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO getIOOBDCalculatedEngineLoad() {
/*       */         return (this.iOOBDCalculatedEngineLoadBuilder_ == null) ? ((this.iOOBDCalculatedEngineLoad_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOOBDCalculatedEngineLoad_) : (DolphinConfig.IO)this.iOOBDCalculatedEngineLoadBuilder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setIOOBDCalculatedEngineLoad(DolphinConfig.IO value) {
/*       */         if (this.iOOBDCalculatedEngineLoadBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.iOOBDCalculatedEngineLoad_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOOBDCalculatedEngineLoadBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setIOOBDCalculatedEngineLoad(DolphinConfig.IO.Builder builderForValue) {
/*       */         if (this.iOOBDCalculatedEngineLoadBuilder_ == null) {
/*       */           this.iOOBDCalculatedEngineLoad_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOOBDCalculatedEngineLoadBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeIOOBDCalculatedEngineLoad(DolphinConfig.IO value) {
/*       */         if (this.iOOBDCalculatedEngineLoadBuilder_ == null) {
/*       */           if (this.iOOBDCalculatedEngineLoad_ != null) {
/*       */             this.iOOBDCalculatedEngineLoad_ = DolphinConfig.IO.newBuilder(this.iOOBDCalculatedEngineLoad_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.iOOBDCalculatedEngineLoad_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOOBDCalculatedEngineLoadBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearIOOBDCalculatedEngineLoad() {
/*       */         if (this.iOOBDCalculatedEngineLoadBuilder_ == null) {
/*       */           this.iOOBDCalculatedEngineLoad_ = null;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOOBDCalculatedEngineLoad_ = null;
/*       */           this.iOOBDCalculatedEngineLoadBuilder_ = null;
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOOBDCalculatedEngineLoadBuilder() {
/*       */         onChanged();
/*       */         return (DolphinConfig.IO.Builder)getIOOBDCalculatedEngineLoadFieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOOBDCalculatedEngineLoadOrBuilder() {
/*       */         return (this.iOOBDCalculatedEngineLoadBuilder_ != null) ? (DolphinConfig.IOOrBuilder)this.iOOBDCalculatedEngineLoadBuilder_.getMessageOrBuilder() : ((this.iOOBDCalculatedEngineLoad_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOOBDCalculatedEngineLoad_);
/*       */       }
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOOBDCalculatedEngineLoadFieldBuilder() {
/*       */         if (this.iOOBDCalculatedEngineLoadBuilder_ == null) {
/*       */           this.iOOBDCalculatedEngineLoadBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOOBDCalculatedEngineLoad(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.iOOBDCalculatedEngineLoad_ = null;
/*       */         } 
/*       */         return this.iOOBDCalculatedEngineLoadBuilder_;
/*       */       }
/*       */       
/*       */       public boolean hasIOOBDMassAirFlowRate() {
/*       */         return (this.iOOBDMassAirFlowRateBuilder_ != null || this.iOOBDMassAirFlowRate_ != null);
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO getIOOBDMassAirFlowRate() {
/*       */         return (this.iOOBDMassAirFlowRateBuilder_ == null) ? ((this.iOOBDMassAirFlowRate_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOOBDMassAirFlowRate_) : (DolphinConfig.IO)this.iOOBDMassAirFlowRateBuilder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setIOOBDMassAirFlowRate(DolphinConfig.IO value) {
/*       */         if (this.iOOBDMassAirFlowRateBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.iOOBDMassAirFlowRate_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOOBDMassAirFlowRateBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setIOOBDMassAirFlowRate(DolphinConfig.IO.Builder builderForValue) {
/*       */         if (this.iOOBDMassAirFlowRateBuilder_ == null) {
/*       */           this.iOOBDMassAirFlowRate_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOOBDMassAirFlowRateBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeIOOBDMassAirFlowRate(DolphinConfig.IO value) {
/*       */         if (this.iOOBDMassAirFlowRateBuilder_ == null) {
/*       */           if (this.iOOBDMassAirFlowRate_ != null) {
/*       */             this.iOOBDMassAirFlowRate_ = DolphinConfig.IO.newBuilder(this.iOOBDMassAirFlowRate_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.iOOBDMassAirFlowRate_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOOBDMassAirFlowRateBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearIOOBDMassAirFlowRate() {
/*       */         if (this.iOOBDMassAirFlowRateBuilder_ == null) {
/*       */           this.iOOBDMassAirFlowRate_ = null;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOOBDMassAirFlowRate_ = null;
/*       */           this.iOOBDMassAirFlowRateBuilder_ = null;
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOOBDMassAirFlowRateBuilder() {
/*       */         onChanged();
/*       */         return (DolphinConfig.IO.Builder)getIOOBDMassAirFlowRateFieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOOBDMassAirFlowRateOrBuilder() {
/*       */         return (this.iOOBDMassAirFlowRateBuilder_ != null) ? (DolphinConfig.IOOrBuilder)this.iOOBDMassAirFlowRateBuilder_.getMessageOrBuilder() : ((this.iOOBDMassAirFlowRate_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOOBDMassAirFlowRate_);
/*       */       }
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOOBDMassAirFlowRateFieldBuilder() {
/*       */         if (this.iOOBDMassAirFlowRateBuilder_ == null) {
/*       */           this.iOOBDMassAirFlowRateBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOOBDMassAirFlowRate(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.iOOBDMassAirFlowRate_ = null;
/*       */         } 
/*       */         return this.iOOBDMassAirFlowRateBuilder_;
/*       */       }
/*       */       
/*       */       public boolean hasIOOBDThrottlePosition() {
/*       */         return (this.iOOBDThrottlePositionBuilder_ != null || this.iOOBDThrottlePosition_ != null);
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO getIOOBDThrottlePosition() {
/*       */         return (this.iOOBDThrottlePositionBuilder_ == null) ? ((this.iOOBDThrottlePosition_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOOBDThrottlePosition_) : (DolphinConfig.IO)this.iOOBDThrottlePositionBuilder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setIOOBDThrottlePosition(DolphinConfig.IO value) {
/*       */         if (this.iOOBDThrottlePositionBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.iOOBDThrottlePosition_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOOBDThrottlePositionBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setIOOBDThrottlePosition(DolphinConfig.IO.Builder builderForValue) {
/*       */         if (this.iOOBDThrottlePositionBuilder_ == null) {
/*       */           this.iOOBDThrottlePosition_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOOBDThrottlePositionBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeIOOBDThrottlePosition(DolphinConfig.IO value) {
/*       */         if (this.iOOBDThrottlePositionBuilder_ == null) {
/*       */           if (this.iOOBDThrottlePosition_ != null) {
/*       */             this.iOOBDThrottlePosition_ = DolphinConfig.IO.newBuilder(this.iOOBDThrottlePosition_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.iOOBDThrottlePosition_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOOBDThrottlePositionBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearIOOBDThrottlePosition() {
/*       */         if (this.iOOBDThrottlePositionBuilder_ == null) {
/*       */           this.iOOBDThrottlePosition_ = null;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOOBDThrottlePosition_ = null;
/*       */           this.iOOBDThrottlePositionBuilder_ = null;
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOOBDThrottlePositionBuilder() {
/*       */         onChanged();
/*       */         return (DolphinConfig.IO.Builder)getIOOBDThrottlePositionFieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOOBDThrottlePositionOrBuilder() {
/*       */         return (this.iOOBDThrottlePositionBuilder_ != null) ? (DolphinConfig.IOOrBuilder)this.iOOBDThrottlePositionBuilder_.getMessageOrBuilder() : ((this.iOOBDThrottlePosition_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOOBDThrottlePosition_);
/*       */       }
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOOBDThrottlePositionFieldBuilder() {
/*       */         if (this.iOOBDThrottlePositionBuilder_ == null) {
/*       */           this.iOOBDThrottlePositionBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOOBDThrottlePosition(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.iOOBDThrottlePosition_ = null;
/*       */         } 
/*       */         return this.iOOBDThrottlePositionBuilder_;
/*       */       }
/*       */       
/*       */       public boolean hasIOOBDRunTimeSinceEngineStart() {
/*       */         return (this.iOOBDRunTimeSinceEngineStartBuilder_ != null || this.iOOBDRunTimeSinceEngineStart_ != null);
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO getIOOBDRunTimeSinceEngineStart() {
/*       */         return (this.iOOBDRunTimeSinceEngineStartBuilder_ == null) ? ((this.iOOBDRunTimeSinceEngineStart_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOOBDRunTimeSinceEngineStart_) : (DolphinConfig.IO)this.iOOBDRunTimeSinceEngineStartBuilder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setIOOBDRunTimeSinceEngineStart(DolphinConfig.IO value) {
/*       */         if (this.iOOBDRunTimeSinceEngineStartBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.iOOBDRunTimeSinceEngineStart_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOOBDRunTimeSinceEngineStartBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setIOOBDRunTimeSinceEngineStart(DolphinConfig.IO.Builder builderForValue) {
/*       */         if (this.iOOBDRunTimeSinceEngineStartBuilder_ == null) {
/*       */           this.iOOBDRunTimeSinceEngineStart_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOOBDRunTimeSinceEngineStartBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeIOOBDRunTimeSinceEngineStart(DolphinConfig.IO value) {
/*       */         if (this.iOOBDRunTimeSinceEngineStartBuilder_ == null) {
/*       */           if (this.iOOBDRunTimeSinceEngineStart_ != null) {
/*       */             this.iOOBDRunTimeSinceEngineStart_ = DolphinConfig.IO.newBuilder(this.iOOBDRunTimeSinceEngineStart_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.iOOBDRunTimeSinceEngineStart_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOOBDRunTimeSinceEngineStartBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearIOOBDRunTimeSinceEngineStart() {
/*       */         if (this.iOOBDRunTimeSinceEngineStartBuilder_ == null) {
/*       */           this.iOOBDRunTimeSinceEngineStart_ = null;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOOBDRunTimeSinceEngineStart_ = null;
/*       */           this.iOOBDRunTimeSinceEngineStartBuilder_ = null;
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOOBDRunTimeSinceEngineStartBuilder() {
/*       */         onChanged();
/*       */         return (DolphinConfig.IO.Builder)getIOOBDRunTimeSinceEngineStartFieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOOBDRunTimeSinceEngineStartOrBuilder() {
/*       */         return (this.iOOBDRunTimeSinceEngineStartBuilder_ != null) ? (DolphinConfig.IOOrBuilder)this.iOOBDRunTimeSinceEngineStartBuilder_.getMessageOrBuilder() : ((this.iOOBDRunTimeSinceEngineStart_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOOBDRunTimeSinceEngineStart_);
/*       */       }
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOOBDRunTimeSinceEngineStartFieldBuilder() {
/*       */         if (this.iOOBDRunTimeSinceEngineStartBuilder_ == null) {
/*       */           this.iOOBDRunTimeSinceEngineStartBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOOBDRunTimeSinceEngineStart(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.iOOBDRunTimeSinceEngineStart_ = null;
/*       */         } 
/*       */         return this.iOOBDRunTimeSinceEngineStartBuilder_;
/*       */       }
/*       */       
/*       */       public boolean hasIOOBDFuelTankLevelInput() {
/*       */         return (this.iOOBDFuelTankLevelInputBuilder_ != null || this.iOOBDFuelTankLevelInput_ != null);
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO getIOOBDFuelTankLevelInput() {
/*       */         return (this.iOOBDFuelTankLevelInputBuilder_ == null) ? ((this.iOOBDFuelTankLevelInput_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOOBDFuelTankLevelInput_) : (DolphinConfig.IO)this.iOOBDFuelTankLevelInputBuilder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setIOOBDFuelTankLevelInput(DolphinConfig.IO value) {
/*       */         if (this.iOOBDFuelTankLevelInputBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.iOOBDFuelTankLevelInput_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOOBDFuelTankLevelInputBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setIOOBDFuelTankLevelInput(DolphinConfig.IO.Builder builderForValue) {
/*       */         if (this.iOOBDFuelTankLevelInputBuilder_ == null) {
/*       */           this.iOOBDFuelTankLevelInput_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOOBDFuelTankLevelInputBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeIOOBDFuelTankLevelInput(DolphinConfig.IO value) {
/*       */         if (this.iOOBDFuelTankLevelInputBuilder_ == null) {
/*       */           if (this.iOOBDFuelTankLevelInput_ != null) {
/*       */             this.iOOBDFuelTankLevelInput_ = DolphinConfig.IO.newBuilder(this.iOOBDFuelTankLevelInput_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.iOOBDFuelTankLevelInput_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOOBDFuelTankLevelInputBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearIOOBDFuelTankLevelInput() {
/*       */         if (this.iOOBDFuelTankLevelInputBuilder_ == null) {
/*       */           this.iOOBDFuelTankLevelInput_ = null;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOOBDFuelTankLevelInput_ = null;
/*       */           this.iOOBDFuelTankLevelInputBuilder_ = null;
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOOBDFuelTankLevelInputBuilder() {
/*       */         onChanged();
/*       */         return (DolphinConfig.IO.Builder)getIOOBDFuelTankLevelInputFieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOOBDFuelTankLevelInputOrBuilder() {
/*       */         return (this.iOOBDFuelTankLevelInputBuilder_ != null) ? (DolphinConfig.IOOrBuilder)this.iOOBDFuelTankLevelInputBuilder_.getMessageOrBuilder() : ((this.iOOBDFuelTankLevelInput_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOOBDFuelTankLevelInput_);
/*       */       }
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOOBDFuelTankLevelInputFieldBuilder() {
/*       */         if (this.iOOBDFuelTankLevelInputBuilder_ == null) {
/*       */           this.iOOBDFuelTankLevelInputBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOOBDFuelTankLevelInput(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.iOOBDFuelTankLevelInput_ = null;
/*       */         } 
/*       */         return this.iOOBDFuelTankLevelInputBuilder_;
/*       */       }
/*       */       
/*       */       public boolean hasIOOBDDistanceTraveledSinceCodesCleared() {
/*       */         return (this.iOOBDDistanceTraveledSinceCodesClearedBuilder_ != null || this.iOOBDDistanceTraveledSinceCodesCleared_ != null);
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO getIOOBDDistanceTraveledSinceCodesCleared() {
/*       */         return (this.iOOBDDistanceTraveledSinceCodesClearedBuilder_ == null) ? ((this.iOOBDDistanceTraveledSinceCodesCleared_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOOBDDistanceTraveledSinceCodesCleared_) : (DolphinConfig.IO)this.iOOBDDistanceTraveledSinceCodesClearedBuilder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setIOOBDDistanceTraveledSinceCodesCleared(DolphinConfig.IO value) {
/*       */         if (this.iOOBDDistanceTraveledSinceCodesClearedBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.iOOBDDistanceTraveledSinceCodesCleared_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOOBDDistanceTraveledSinceCodesClearedBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setIOOBDDistanceTraveledSinceCodesCleared(DolphinConfig.IO.Builder builderForValue) {
/*       */         if (this.iOOBDDistanceTraveledSinceCodesClearedBuilder_ == null) {
/*       */           this.iOOBDDistanceTraveledSinceCodesCleared_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOOBDDistanceTraveledSinceCodesClearedBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeIOOBDDistanceTraveledSinceCodesCleared(DolphinConfig.IO value) {
/*       */         if (this.iOOBDDistanceTraveledSinceCodesClearedBuilder_ == null) {
/*       */           if (this.iOOBDDistanceTraveledSinceCodesCleared_ != null) {
/*       */             this.iOOBDDistanceTraveledSinceCodesCleared_ = DolphinConfig.IO.newBuilder(this.iOOBDDistanceTraveledSinceCodesCleared_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.iOOBDDistanceTraveledSinceCodesCleared_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOOBDDistanceTraveledSinceCodesClearedBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearIOOBDDistanceTraveledSinceCodesCleared() {
/*       */         if (this.iOOBDDistanceTraveledSinceCodesClearedBuilder_ == null) {
/*       */           this.iOOBDDistanceTraveledSinceCodesCleared_ = null;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOOBDDistanceTraveledSinceCodesCleared_ = null;
/*       */           this.iOOBDDistanceTraveledSinceCodesClearedBuilder_ = null;
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOOBDDistanceTraveledSinceCodesClearedBuilder() {
/*       */         onChanged();
/*       */         return (DolphinConfig.IO.Builder)getIOOBDDistanceTraveledSinceCodesClearedFieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOOBDDistanceTraveledSinceCodesClearedOrBuilder() {
/*       */         return (this.iOOBDDistanceTraveledSinceCodesClearedBuilder_ != null) ? (DolphinConfig.IOOrBuilder)this.iOOBDDistanceTraveledSinceCodesClearedBuilder_.getMessageOrBuilder() : ((this.iOOBDDistanceTraveledSinceCodesCleared_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOOBDDistanceTraveledSinceCodesCleared_);
/*       */       }
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOOBDDistanceTraveledSinceCodesClearedFieldBuilder() {
/*       */         if (this.iOOBDDistanceTraveledSinceCodesClearedBuilder_ == null) {
/*       */           this.iOOBDDistanceTraveledSinceCodesClearedBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOOBDDistanceTraveledSinceCodesCleared(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.iOOBDDistanceTraveledSinceCodesCleared_ = null;
/*       */         } 
/*       */         return this.iOOBDDistanceTraveledSinceCodesClearedBuilder_;
/*       */       }
/*       */       
/*       */       public boolean hasIOOBDAbsoluteThrottlePositionD() {
/*       */         return (this.iOOBDAbsoluteThrottlePositionDBuilder_ != null || this.iOOBDAbsoluteThrottlePositionD_ != null);
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO getIOOBDAbsoluteThrottlePositionD() {
/*       */         return (this.iOOBDAbsoluteThrottlePositionDBuilder_ == null) ? ((this.iOOBDAbsoluteThrottlePositionD_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOOBDAbsoluteThrottlePositionD_) : (DolphinConfig.IO)this.iOOBDAbsoluteThrottlePositionDBuilder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setIOOBDAbsoluteThrottlePositionD(DolphinConfig.IO value) {
/*       */         if (this.iOOBDAbsoluteThrottlePositionDBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.iOOBDAbsoluteThrottlePositionD_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOOBDAbsoluteThrottlePositionDBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setIOOBDAbsoluteThrottlePositionD(DolphinConfig.IO.Builder builderForValue) {
/*       */         if (this.iOOBDAbsoluteThrottlePositionDBuilder_ == null) {
/*       */           this.iOOBDAbsoluteThrottlePositionD_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOOBDAbsoluteThrottlePositionDBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeIOOBDAbsoluteThrottlePositionD(DolphinConfig.IO value) {
/*       */         if (this.iOOBDAbsoluteThrottlePositionDBuilder_ == null) {
/*       */           if (this.iOOBDAbsoluteThrottlePositionD_ != null) {
/*       */             this.iOOBDAbsoluteThrottlePositionD_ = DolphinConfig.IO.newBuilder(this.iOOBDAbsoluteThrottlePositionD_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.iOOBDAbsoluteThrottlePositionD_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOOBDAbsoluteThrottlePositionDBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearIOOBDAbsoluteThrottlePositionD() {
/*       */         if (this.iOOBDAbsoluteThrottlePositionDBuilder_ == null) {
/*       */           this.iOOBDAbsoluteThrottlePositionD_ = null;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOOBDAbsoluteThrottlePositionD_ = null;
/*       */           this.iOOBDAbsoluteThrottlePositionDBuilder_ = null;
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOOBDAbsoluteThrottlePositionDBuilder() {
/*       */         onChanged();
/*       */         return (DolphinConfig.IO.Builder)getIOOBDAbsoluteThrottlePositionDFieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOOBDAbsoluteThrottlePositionDOrBuilder() {
/*       */         return (this.iOOBDAbsoluteThrottlePositionDBuilder_ != null) ? (DolphinConfig.IOOrBuilder)this.iOOBDAbsoluteThrottlePositionDBuilder_.getMessageOrBuilder() : ((this.iOOBDAbsoluteThrottlePositionD_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOOBDAbsoluteThrottlePositionD_);
/*       */       }
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOOBDAbsoluteThrottlePositionDFieldBuilder() {
/*       */         if (this.iOOBDAbsoluteThrottlePositionDBuilder_ == null) {
/*       */           this.iOOBDAbsoluteThrottlePositionDBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOOBDAbsoluteThrottlePositionD(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.iOOBDAbsoluteThrottlePositionD_ = null;
/*       */         } 
/*       */         return this.iOOBDAbsoluteThrottlePositionDBuilder_;
/*       */       }
/*       */       
/*       */       public boolean hasIOOBDTimeRunWithMILOn() {
/*       */         return (this.iOOBDTimeRunWithMILOnBuilder_ != null || this.iOOBDTimeRunWithMILOn_ != null);
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO getIOOBDTimeRunWithMILOn() {
/*       */         return (this.iOOBDTimeRunWithMILOnBuilder_ == null) ? ((this.iOOBDTimeRunWithMILOn_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOOBDTimeRunWithMILOn_) : (DolphinConfig.IO)this.iOOBDTimeRunWithMILOnBuilder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setIOOBDTimeRunWithMILOn(DolphinConfig.IO value) {
/*       */         if (this.iOOBDTimeRunWithMILOnBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.iOOBDTimeRunWithMILOn_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOOBDTimeRunWithMILOnBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setIOOBDTimeRunWithMILOn(DolphinConfig.IO.Builder builderForValue) {
/*       */         if (this.iOOBDTimeRunWithMILOnBuilder_ == null) {
/*       */           this.iOOBDTimeRunWithMILOn_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOOBDTimeRunWithMILOnBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeIOOBDTimeRunWithMILOn(DolphinConfig.IO value) {
/*       */         if (this.iOOBDTimeRunWithMILOnBuilder_ == null) {
/*       */           if (this.iOOBDTimeRunWithMILOn_ != null) {
/*       */             this.iOOBDTimeRunWithMILOn_ = DolphinConfig.IO.newBuilder(this.iOOBDTimeRunWithMILOn_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.iOOBDTimeRunWithMILOn_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOOBDTimeRunWithMILOnBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearIOOBDTimeRunWithMILOn() {
/*       */         if (this.iOOBDTimeRunWithMILOnBuilder_ == null) {
/*       */           this.iOOBDTimeRunWithMILOn_ = null;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOOBDTimeRunWithMILOn_ = null;
/*       */           this.iOOBDTimeRunWithMILOnBuilder_ = null;
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOOBDTimeRunWithMILOnBuilder() {
/*       */         onChanged();
/*       */         return (DolphinConfig.IO.Builder)getIOOBDTimeRunWithMILOnFieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOOBDTimeRunWithMILOnOrBuilder() {
/*       */         return (this.iOOBDTimeRunWithMILOnBuilder_ != null) ? (DolphinConfig.IOOrBuilder)this.iOOBDTimeRunWithMILOnBuilder_.getMessageOrBuilder() : ((this.iOOBDTimeRunWithMILOn_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOOBDTimeRunWithMILOn_);
/*       */       }
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOOBDTimeRunWithMILOnFieldBuilder() {
/*       */         if (this.iOOBDTimeRunWithMILOnBuilder_ == null) {
/*       */           this.iOOBDTimeRunWithMILOnBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOOBDTimeRunWithMILOn(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.iOOBDTimeRunWithMILOn_ = null;
/*       */         } 
/*       */         return this.iOOBDTimeRunWithMILOnBuilder_;
/*       */       }
/*       */       
/*       */       public boolean hasIOOBDEngineOilTemperature() {
/*       */         return (this.iOOBDEngineOilTemperatureBuilder_ != null || this.iOOBDEngineOilTemperature_ != null);
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO getIOOBDEngineOilTemperature() {
/*       */         return (this.iOOBDEngineOilTemperatureBuilder_ == null) ? ((this.iOOBDEngineOilTemperature_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOOBDEngineOilTemperature_) : (DolphinConfig.IO)this.iOOBDEngineOilTemperatureBuilder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setIOOBDEngineOilTemperature(DolphinConfig.IO value) {
/*       */         if (this.iOOBDEngineOilTemperatureBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.iOOBDEngineOilTemperature_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOOBDEngineOilTemperatureBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setIOOBDEngineOilTemperature(DolphinConfig.IO.Builder builderForValue) {
/*       */         if (this.iOOBDEngineOilTemperatureBuilder_ == null) {
/*       */           this.iOOBDEngineOilTemperature_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOOBDEngineOilTemperatureBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeIOOBDEngineOilTemperature(DolphinConfig.IO value) {
/*       */         if (this.iOOBDEngineOilTemperatureBuilder_ == null) {
/*       */           if (this.iOOBDEngineOilTemperature_ != null) {
/*       */             this.iOOBDEngineOilTemperature_ = DolphinConfig.IO.newBuilder(this.iOOBDEngineOilTemperature_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.iOOBDEngineOilTemperature_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOOBDEngineOilTemperatureBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearIOOBDEngineOilTemperature() {
/*       */         if (this.iOOBDEngineOilTemperatureBuilder_ == null) {
/*       */           this.iOOBDEngineOilTemperature_ = null;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOOBDEngineOilTemperature_ = null;
/*       */           this.iOOBDEngineOilTemperatureBuilder_ = null;
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOOBDEngineOilTemperatureBuilder() {
/*       */         onChanged();
/*       */         return (DolphinConfig.IO.Builder)getIOOBDEngineOilTemperatureFieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOOBDEngineOilTemperatureOrBuilder() {
/*       */         return (this.iOOBDEngineOilTemperatureBuilder_ != null) ? (DolphinConfig.IOOrBuilder)this.iOOBDEngineOilTemperatureBuilder_.getMessageOrBuilder() : ((this.iOOBDEngineOilTemperature_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOOBDEngineOilTemperature_);
/*       */       }
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOOBDEngineOilTemperatureFieldBuilder() {
/*       */         if (this.iOOBDEngineOilTemperatureBuilder_ == null) {
/*       */           this.iOOBDEngineOilTemperatureBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOOBDEngineOilTemperature(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.iOOBDEngineOilTemperature_ = null;
/*       */         } 
/*       */         return this.iOOBDEngineOilTemperatureBuilder_;
/*       */       }
/*       */       
/*       */       public boolean hasIOOBDFuelSystem1Status() {
/*       */         return (this.iOOBDFuelSystem1StatusBuilder_ != null || this.iOOBDFuelSystem1Status_ != null);
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO getIOOBDFuelSystem1Status() {
/*       */         return (this.iOOBDFuelSystem1StatusBuilder_ == null) ? ((this.iOOBDFuelSystem1Status_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOOBDFuelSystem1Status_) : (DolphinConfig.IO)this.iOOBDFuelSystem1StatusBuilder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setIOOBDFuelSystem1Status(DolphinConfig.IO value) {
/*       */         if (this.iOOBDFuelSystem1StatusBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.iOOBDFuelSystem1Status_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOOBDFuelSystem1StatusBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setIOOBDFuelSystem1Status(DolphinConfig.IO.Builder builderForValue) {
/*       */         if (this.iOOBDFuelSystem1StatusBuilder_ == null) {
/*       */           this.iOOBDFuelSystem1Status_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOOBDFuelSystem1StatusBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeIOOBDFuelSystem1Status(DolphinConfig.IO value) {
/*       */         if (this.iOOBDFuelSystem1StatusBuilder_ == null) {
/*       */           if (this.iOOBDFuelSystem1Status_ != null) {
/*       */             this.iOOBDFuelSystem1Status_ = DolphinConfig.IO.newBuilder(this.iOOBDFuelSystem1Status_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.iOOBDFuelSystem1Status_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOOBDFuelSystem1StatusBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearIOOBDFuelSystem1Status() {
/*       */         if (this.iOOBDFuelSystem1StatusBuilder_ == null) {
/*       */           this.iOOBDFuelSystem1Status_ = null;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOOBDFuelSystem1Status_ = null;
/*       */           this.iOOBDFuelSystem1StatusBuilder_ = null;
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOOBDFuelSystem1StatusBuilder() {
/*       */         onChanged();
/*       */         return (DolphinConfig.IO.Builder)getIOOBDFuelSystem1StatusFieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOOBDFuelSystem1StatusOrBuilder() {
/*       */         return (this.iOOBDFuelSystem1StatusBuilder_ != null) ? (DolphinConfig.IOOrBuilder)this.iOOBDFuelSystem1StatusBuilder_.getMessageOrBuilder() : ((this.iOOBDFuelSystem1Status_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOOBDFuelSystem1Status_);
/*       */       }
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOOBDFuelSystem1StatusFieldBuilder() {
/*       */         if (this.iOOBDFuelSystem1StatusBuilder_ == null) {
/*       */           this.iOOBDFuelSystem1StatusBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOOBDFuelSystem1Status(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.iOOBDFuelSystem1Status_ = null;
/*       */         } 
/*       */         return this.iOOBDFuelSystem1StatusBuilder_;
/*       */       }
/*       */       
/*       */       public boolean hasIOOBDFuelSystem2Status() {
/*       */         return (this.iOOBDFuelSystem2StatusBuilder_ != null || this.iOOBDFuelSystem2Status_ != null);
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO getIOOBDFuelSystem2Status() {
/*       */         return (this.iOOBDFuelSystem2StatusBuilder_ == null) ? ((this.iOOBDFuelSystem2Status_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOOBDFuelSystem2Status_) : (DolphinConfig.IO)this.iOOBDFuelSystem2StatusBuilder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setIOOBDFuelSystem2Status(DolphinConfig.IO value) {
/*       */         if (this.iOOBDFuelSystem2StatusBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.iOOBDFuelSystem2Status_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOOBDFuelSystem2StatusBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setIOOBDFuelSystem2Status(DolphinConfig.IO.Builder builderForValue) {
/*       */         if (this.iOOBDFuelSystem2StatusBuilder_ == null) {
/*       */           this.iOOBDFuelSystem2Status_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOOBDFuelSystem2StatusBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeIOOBDFuelSystem2Status(DolphinConfig.IO value) {
/*       */         if (this.iOOBDFuelSystem2StatusBuilder_ == null) {
/*       */           if (this.iOOBDFuelSystem2Status_ != null) {
/*       */             this.iOOBDFuelSystem2Status_ = DolphinConfig.IO.newBuilder(this.iOOBDFuelSystem2Status_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.iOOBDFuelSystem2Status_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOOBDFuelSystem2StatusBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearIOOBDFuelSystem2Status() {
/*       */         if (this.iOOBDFuelSystem2StatusBuilder_ == null) {
/*       */           this.iOOBDFuelSystem2Status_ = null;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOOBDFuelSystem2Status_ = null;
/*       */           this.iOOBDFuelSystem2StatusBuilder_ = null;
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOOBDFuelSystem2StatusBuilder() {
/*       */         onChanged();
/*       */         return (DolphinConfig.IO.Builder)getIOOBDFuelSystem2StatusFieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOOBDFuelSystem2StatusOrBuilder() {
/*       */         return (this.iOOBDFuelSystem2StatusBuilder_ != null) ? (DolphinConfig.IOOrBuilder)this.iOOBDFuelSystem2StatusBuilder_.getMessageOrBuilder() : ((this.iOOBDFuelSystem2Status_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOOBDFuelSystem2Status_);
/*       */       }
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOOBDFuelSystem2StatusFieldBuilder() {
/*       */         if (this.iOOBDFuelSystem2StatusBuilder_ == null) {
/*       */           this.iOOBDFuelSystem2StatusBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOOBDFuelSystem2Status(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.iOOBDFuelSystem2Status_ = null;
/*       */         } 
/*       */         return this.iOOBDFuelSystem2StatusBuilder_;
/*       */       }
/*       */       
/*       */       public boolean hasIOOBDOxygenSensor1Voltage() {
/*       */         return (this.iOOBDOxygenSensor1VoltageBuilder_ != null || this.iOOBDOxygenSensor1Voltage_ != null);
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO getIOOBDOxygenSensor1Voltage() {
/*       */         return (this.iOOBDOxygenSensor1VoltageBuilder_ == null) ? ((this.iOOBDOxygenSensor1Voltage_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOOBDOxygenSensor1Voltage_) : (DolphinConfig.IO)this.iOOBDOxygenSensor1VoltageBuilder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setIOOBDOxygenSensor1Voltage(DolphinConfig.IO value) {
/*       */         if (this.iOOBDOxygenSensor1VoltageBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.iOOBDOxygenSensor1Voltage_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOOBDOxygenSensor1VoltageBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setIOOBDOxygenSensor1Voltage(DolphinConfig.IO.Builder builderForValue) {
/*       */         if (this.iOOBDOxygenSensor1VoltageBuilder_ == null) {
/*       */           this.iOOBDOxygenSensor1Voltage_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOOBDOxygenSensor1VoltageBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeIOOBDOxygenSensor1Voltage(DolphinConfig.IO value) {
/*       */         if (this.iOOBDOxygenSensor1VoltageBuilder_ == null) {
/*       */           if (this.iOOBDOxygenSensor1Voltage_ != null) {
/*       */             this.iOOBDOxygenSensor1Voltage_ = DolphinConfig.IO.newBuilder(this.iOOBDOxygenSensor1Voltage_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.iOOBDOxygenSensor1Voltage_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOOBDOxygenSensor1VoltageBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearIOOBDOxygenSensor1Voltage() {
/*       */         if (this.iOOBDOxygenSensor1VoltageBuilder_ == null) {
/*       */           this.iOOBDOxygenSensor1Voltage_ = null;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOOBDOxygenSensor1Voltage_ = null;
/*       */           this.iOOBDOxygenSensor1VoltageBuilder_ = null;
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOOBDOxygenSensor1VoltageBuilder() {
/*       */         onChanged();
/*       */         return (DolphinConfig.IO.Builder)getIOOBDOxygenSensor1VoltageFieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOOBDOxygenSensor1VoltageOrBuilder() {
/*       */         return (this.iOOBDOxygenSensor1VoltageBuilder_ != null) ? (DolphinConfig.IOOrBuilder)this.iOOBDOxygenSensor1VoltageBuilder_.getMessageOrBuilder() : ((this.iOOBDOxygenSensor1Voltage_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOOBDOxygenSensor1Voltage_);
/*       */       }
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOOBDOxygenSensor1VoltageFieldBuilder() {
/*       */         if (this.iOOBDOxygenSensor1VoltageBuilder_ == null) {
/*       */           this.iOOBDOxygenSensor1VoltageBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOOBDOxygenSensor1Voltage(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.iOOBDOxygenSensor1Voltage_ = null;
/*       */         } 
/*       */         return this.iOOBDOxygenSensor1VoltageBuilder_;
/*       */       }
/*       */       
/*       */       public boolean hasIOOBDOxygenSensor1ShortTermFuelTrim() {
/*       */         return (this.iOOBDOxygenSensor1ShortTermFuelTrimBuilder_ != null || this.iOOBDOxygenSensor1ShortTermFuelTrim_ != null);
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO getIOOBDOxygenSensor1ShortTermFuelTrim() {
/*       */         return (this.iOOBDOxygenSensor1ShortTermFuelTrimBuilder_ == null) ? ((this.iOOBDOxygenSensor1ShortTermFuelTrim_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOOBDOxygenSensor1ShortTermFuelTrim_) : (DolphinConfig.IO)this.iOOBDOxygenSensor1ShortTermFuelTrimBuilder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setIOOBDOxygenSensor1ShortTermFuelTrim(DolphinConfig.IO value) {
/*       */         if (this.iOOBDOxygenSensor1ShortTermFuelTrimBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.iOOBDOxygenSensor1ShortTermFuelTrim_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOOBDOxygenSensor1ShortTermFuelTrimBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setIOOBDOxygenSensor1ShortTermFuelTrim(DolphinConfig.IO.Builder builderForValue) {
/*       */         if (this.iOOBDOxygenSensor1ShortTermFuelTrimBuilder_ == null) {
/*       */           this.iOOBDOxygenSensor1ShortTermFuelTrim_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOOBDOxygenSensor1ShortTermFuelTrimBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeIOOBDOxygenSensor1ShortTermFuelTrim(DolphinConfig.IO value) {
/*       */         if (this.iOOBDOxygenSensor1ShortTermFuelTrimBuilder_ == null) {
/*       */           if (this.iOOBDOxygenSensor1ShortTermFuelTrim_ != null) {
/*       */             this.iOOBDOxygenSensor1ShortTermFuelTrim_ = DolphinConfig.IO.newBuilder(this.iOOBDOxygenSensor1ShortTermFuelTrim_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.iOOBDOxygenSensor1ShortTermFuelTrim_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOOBDOxygenSensor1ShortTermFuelTrimBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearIOOBDOxygenSensor1ShortTermFuelTrim() {
/*       */         if (this.iOOBDOxygenSensor1ShortTermFuelTrimBuilder_ == null) {
/*       */           this.iOOBDOxygenSensor1ShortTermFuelTrim_ = null;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOOBDOxygenSensor1ShortTermFuelTrim_ = null;
/*       */           this.iOOBDOxygenSensor1ShortTermFuelTrimBuilder_ = null;
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOOBDOxygenSensor1ShortTermFuelTrimBuilder() {
/*       */         onChanged();
/*       */         return (DolphinConfig.IO.Builder)getIOOBDOxygenSensor1ShortTermFuelTrimFieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOOBDOxygenSensor1ShortTermFuelTrimOrBuilder() {
/*       */         return (this.iOOBDOxygenSensor1ShortTermFuelTrimBuilder_ != null) ? (DolphinConfig.IOOrBuilder)this.iOOBDOxygenSensor1ShortTermFuelTrimBuilder_.getMessageOrBuilder() : ((this.iOOBDOxygenSensor1ShortTermFuelTrim_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOOBDOxygenSensor1ShortTermFuelTrim_);
/*       */       }
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOOBDOxygenSensor1ShortTermFuelTrimFieldBuilder() {
/*       */         if (this.iOOBDOxygenSensor1ShortTermFuelTrimBuilder_ == null) {
/*       */           this.iOOBDOxygenSensor1ShortTermFuelTrimBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOOBDOxygenSensor1ShortTermFuelTrim(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.iOOBDOxygenSensor1ShortTermFuelTrim_ = null;
/*       */         } 
/*       */         return this.iOOBDOxygenSensor1ShortTermFuelTrimBuilder_;
/*       */       }
/*       */       
/*       */       public boolean hasIOOBDOxygenSensor2Voltage() {
/*       */         return (this.iOOBDOxygenSensor2VoltageBuilder_ != null || this.iOOBDOxygenSensor2Voltage_ != null);
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO getIOOBDOxygenSensor2Voltage() {
/*       */         return (this.iOOBDOxygenSensor2VoltageBuilder_ == null) ? ((this.iOOBDOxygenSensor2Voltage_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOOBDOxygenSensor2Voltage_) : (DolphinConfig.IO)this.iOOBDOxygenSensor2VoltageBuilder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setIOOBDOxygenSensor2Voltage(DolphinConfig.IO value) {
/*       */         if (this.iOOBDOxygenSensor2VoltageBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.iOOBDOxygenSensor2Voltage_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOOBDOxygenSensor2VoltageBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setIOOBDOxygenSensor2Voltage(DolphinConfig.IO.Builder builderForValue) {
/*       */         if (this.iOOBDOxygenSensor2VoltageBuilder_ == null) {
/*       */           this.iOOBDOxygenSensor2Voltage_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOOBDOxygenSensor2VoltageBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeIOOBDOxygenSensor2Voltage(DolphinConfig.IO value) {
/*       */         if (this.iOOBDOxygenSensor2VoltageBuilder_ == null) {
/*       */           if (this.iOOBDOxygenSensor2Voltage_ != null) {
/*       */             this.iOOBDOxygenSensor2Voltage_ = DolphinConfig.IO.newBuilder(this.iOOBDOxygenSensor2Voltage_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.iOOBDOxygenSensor2Voltage_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOOBDOxygenSensor2VoltageBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearIOOBDOxygenSensor2Voltage() {
/*       */         if (this.iOOBDOxygenSensor2VoltageBuilder_ == null) {
/*       */           this.iOOBDOxygenSensor2Voltage_ = null;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOOBDOxygenSensor2Voltage_ = null;
/*       */           this.iOOBDOxygenSensor2VoltageBuilder_ = null;
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOOBDOxygenSensor2VoltageBuilder() {
/*       */         onChanged();
/*       */         return (DolphinConfig.IO.Builder)getIOOBDOxygenSensor2VoltageFieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOOBDOxygenSensor2VoltageOrBuilder() {
/*       */         return (this.iOOBDOxygenSensor2VoltageBuilder_ != null) ? (DolphinConfig.IOOrBuilder)this.iOOBDOxygenSensor2VoltageBuilder_.getMessageOrBuilder() : ((this.iOOBDOxygenSensor2Voltage_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOOBDOxygenSensor2Voltage_);
/*       */       }
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOOBDOxygenSensor2VoltageFieldBuilder() {
/*       */         if (this.iOOBDOxygenSensor2VoltageBuilder_ == null) {
/*       */           this.iOOBDOxygenSensor2VoltageBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOOBDOxygenSensor2Voltage(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.iOOBDOxygenSensor2Voltage_ = null;
/*       */         } 
/*       */         return this.iOOBDOxygenSensor2VoltageBuilder_;
/*       */       }
/*       */       
/*       */       public boolean hasIOOBDOxygenSensor2ShortTermFuelTrim() {
/*       */         return (this.iOOBDOxygenSensor2ShortTermFuelTrimBuilder_ != null || this.iOOBDOxygenSensor2ShortTermFuelTrim_ != null);
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO getIOOBDOxygenSensor2ShortTermFuelTrim() {
/*       */         return (this.iOOBDOxygenSensor2ShortTermFuelTrimBuilder_ == null) ? ((this.iOOBDOxygenSensor2ShortTermFuelTrim_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOOBDOxygenSensor2ShortTermFuelTrim_) : (DolphinConfig.IO)this.iOOBDOxygenSensor2ShortTermFuelTrimBuilder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setIOOBDOxygenSensor2ShortTermFuelTrim(DolphinConfig.IO value) {
/*       */         if (this.iOOBDOxygenSensor2ShortTermFuelTrimBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.iOOBDOxygenSensor2ShortTermFuelTrim_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOOBDOxygenSensor2ShortTermFuelTrimBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setIOOBDOxygenSensor2ShortTermFuelTrim(DolphinConfig.IO.Builder builderForValue) {
/*       */         if (this.iOOBDOxygenSensor2ShortTermFuelTrimBuilder_ == null) {
/*       */           this.iOOBDOxygenSensor2ShortTermFuelTrim_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOOBDOxygenSensor2ShortTermFuelTrimBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeIOOBDOxygenSensor2ShortTermFuelTrim(DolphinConfig.IO value) {
/*       */         if (this.iOOBDOxygenSensor2ShortTermFuelTrimBuilder_ == null) {
/*       */           if (this.iOOBDOxygenSensor2ShortTermFuelTrim_ != null) {
/*       */             this.iOOBDOxygenSensor2ShortTermFuelTrim_ = DolphinConfig.IO.newBuilder(this.iOOBDOxygenSensor2ShortTermFuelTrim_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.iOOBDOxygenSensor2ShortTermFuelTrim_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOOBDOxygenSensor2ShortTermFuelTrimBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearIOOBDOxygenSensor2ShortTermFuelTrim() {
/*       */         if (this.iOOBDOxygenSensor2ShortTermFuelTrimBuilder_ == null) {
/*       */           this.iOOBDOxygenSensor2ShortTermFuelTrim_ = null;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOOBDOxygenSensor2ShortTermFuelTrim_ = null;
/*       */           this.iOOBDOxygenSensor2ShortTermFuelTrimBuilder_ = null;
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOOBDOxygenSensor2ShortTermFuelTrimBuilder() {
/*       */         onChanged();
/*       */         return (DolphinConfig.IO.Builder)getIOOBDOxygenSensor2ShortTermFuelTrimFieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOOBDOxygenSensor2ShortTermFuelTrimOrBuilder() {
/*       */         return (this.iOOBDOxygenSensor2ShortTermFuelTrimBuilder_ != null) ? (DolphinConfig.IOOrBuilder)this.iOOBDOxygenSensor2ShortTermFuelTrimBuilder_.getMessageOrBuilder() : ((this.iOOBDOxygenSensor2ShortTermFuelTrim_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOOBDOxygenSensor2ShortTermFuelTrim_);
/*       */       }
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOOBDOxygenSensor2ShortTermFuelTrimFieldBuilder() {
/*       */         if (this.iOOBDOxygenSensor2ShortTermFuelTrimBuilder_ == null) {
/*       */           this.iOOBDOxygenSensor2ShortTermFuelTrimBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOOBDOxygenSensor2ShortTermFuelTrim(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.iOOBDOxygenSensor2ShortTermFuelTrim_ = null;
/*       */         } 
/*       */         return this.iOOBDOxygenSensor2ShortTermFuelTrimBuilder_;
/*       */       }
/*       */       
/*       */       public boolean hasIOOBDOxygenSensor3Voltage() {
/*       */         return (this.iOOBDOxygenSensor3VoltageBuilder_ != null || this.iOOBDOxygenSensor3Voltage_ != null);
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO getIOOBDOxygenSensor3Voltage() {
/*       */         return (this.iOOBDOxygenSensor3VoltageBuilder_ == null) ? ((this.iOOBDOxygenSensor3Voltage_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOOBDOxygenSensor3Voltage_) : (DolphinConfig.IO)this.iOOBDOxygenSensor3VoltageBuilder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setIOOBDOxygenSensor3Voltage(DolphinConfig.IO value) {
/*       */         if (this.iOOBDOxygenSensor3VoltageBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.iOOBDOxygenSensor3Voltage_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOOBDOxygenSensor3VoltageBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setIOOBDOxygenSensor3Voltage(DolphinConfig.IO.Builder builderForValue) {
/*       */         if (this.iOOBDOxygenSensor3VoltageBuilder_ == null) {
/*       */           this.iOOBDOxygenSensor3Voltage_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOOBDOxygenSensor3VoltageBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeIOOBDOxygenSensor3Voltage(DolphinConfig.IO value) {
/*       */         if (this.iOOBDOxygenSensor3VoltageBuilder_ == null) {
/*       */           if (this.iOOBDOxygenSensor3Voltage_ != null) {
/*       */             this.iOOBDOxygenSensor3Voltage_ = DolphinConfig.IO.newBuilder(this.iOOBDOxygenSensor3Voltage_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.iOOBDOxygenSensor3Voltage_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOOBDOxygenSensor3VoltageBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearIOOBDOxygenSensor3Voltage() {
/*       */         if (this.iOOBDOxygenSensor3VoltageBuilder_ == null) {
/*       */           this.iOOBDOxygenSensor3Voltage_ = null;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOOBDOxygenSensor3Voltage_ = null;
/*       */           this.iOOBDOxygenSensor3VoltageBuilder_ = null;
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOOBDOxygenSensor3VoltageBuilder() {
/*       */         onChanged();
/*       */         return (DolphinConfig.IO.Builder)getIOOBDOxygenSensor3VoltageFieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOOBDOxygenSensor3VoltageOrBuilder() {
/*       */         return (this.iOOBDOxygenSensor3VoltageBuilder_ != null) ? (DolphinConfig.IOOrBuilder)this.iOOBDOxygenSensor3VoltageBuilder_.getMessageOrBuilder() : ((this.iOOBDOxygenSensor3Voltage_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOOBDOxygenSensor3Voltage_);
/*       */       }
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOOBDOxygenSensor3VoltageFieldBuilder() {
/*       */         if (this.iOOBDOxygenSensor3VoltageBuilder_ == null) {
/*       */           this.iOOBDOxygenSensor3VoltageBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOOBDOxygenSensor3Voltage(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.iOOBDOxygenSensor3Voltage_ = null;
/*       */         } 
/*       */         return this.iOOBDOxygenSensor3VoltageBuilder_;
/*       */       }
/*       */       
/*       */       public boolean hasIOOBDOxygenSensor3ShortTermFuelTrim() {
/*       */         return (this.iOOBDOxygenSensor3ShortTermFuelTrimBuilder_ != null || this.iOOBDOxygenSensor3ShortTermFuelTrim_ != null);
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO getIOOBDOxygenSensor3ShortTermFuelTrim() {
/*       */         return (this.iOOBDOxygenSensor3ShortTermFuelTrimBuilder_ == null) ? ((this.iOOBDOxygenSensor3ShortTermFuelTrim_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOOBDOxygenSensor3ShortTermFuelTrim_) : (DolphinConfig.IO)this.iOOBDOxygenSensor3ShortTermFuelTrimBuilder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setIOOBDOxygenSensor3ShortTermFuelTrim(DolphinConfig.IO value) {
/*       */         if (this.iOOBDOxygenSensor3ShortTermFuelTrimBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.iOOBDOxygenSensor3ShortTermFuelTrim_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOOBDOxygenSensor3ShortTermFuelTrimBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setIOOBDOxygenSensor3ShortTermFuelTrim(DolphinConfig.IO.Builder builderForValue) {
/*       */         if (this.iOOBDOxygenSensor3ShortTermFuelTrimBuilder_ == null) {
/*       */           this.iOOBDOxygenSensor3ShortTermFuelTrim_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOOBDOxygenSensor3ShortTermFuelTrimBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeIOOBDOxygenSensor3ShortTermFuelTrim(DolphinConfig.IO value) {
/*       */         if (this.iOOBDOxygenSensor3ShortTermFuelTrimBuilder_ == null) {
/*       */           if (this.iOOBDOxygenSensor3ShortTermFuelTrim_ != null) {
/*       */             this.iOOBDOxygenSensor3ShortTermFuelTrim_ = DolphinConfig.IO.newBuilder(this.iOOBDOxygenSensor3ShortTermFuelTrim_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.iOOBDOxygenSensor3ShortTermFuelTrim_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOOBDOxygenSensor3ShortTermFuelTrimBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearIOOBDOxygenSensor3ShortTermFuelTrim() {
/*       */         if (this.iOOBDOxygenSensor3ShortTermFuelTrimBuilder_ == null) {
/*       */           this.iOOBDOxygenSensor3ShortTermFuelTrim_ = null;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOOBDOxygenSensor3ShortTermFuelTrim_ = null;
/*       */           this.iOOBDOxygenSensor3ShortTermFuelTrimBuilder_ = null;
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOOBDOxygenSensor3ShortTermFuelTrimBuilder() {
/*       */         onChanged();
/*       */         return (DolphinConfig.IO.Builder)getIOOBDOxygenSensor3ShortTermFuelTrimFieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOOBDOxygenSensor3ShortTermFuelTrimOrBuilder() {
/*       */         return (this.iOOBDOxygenSensor3ShortTermFuelTrimBuilder_ != null) ? (DolphinConfig.IOOrBuilder)this.iOOBDOxygenSensor3ShortTermFuelTrimBuilder_.getMessageOrBuilder() : ((this.iOOBDOxygenSensor3ShortTermFuelTrim_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOOBDOxygenSensor3ShortTermFuelTrim_);
/*       */       }
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOOBDOxygenSensor3ShortTermFuelTrimFieldBuilder() {
/*       */         if (this.iOOBDOxygenSensor3ShortTermFuelTrimBuilder_ == null) {
/*       */           this.iOOBDOxygenSensor3ShortTermFuelTrimBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOOBDOxygenSensor3ShortTermFuelTrim(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.iOOBDOxygenSensor3ShortTermFuelTrim_ = null;
/*       */         } 
/*       */         return this.iOOBDOxygenSensor3ShortTermFuelTrimBuilder_;
/*       */       }
/*       */       
/*       */       public boolean hasIOOBDOxygenSensor4Voltage() {
/*       */         return (this.iOOBDOxygenSensor4VoltageBuilder_ != null || this.iOOBDOxygenSensor4Voltage_ != null);
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO getIOOBDOxygenSensor4Voltage() {
/*       */         return (this.iOOBDOxygenSensor4VoltageBuilder_ == null) ? ((this.iOOBDOxygenSensor4Voltage_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOOBDOxygenSensor4Voltage_) : (DolphinConfig.IO)this.iOOBDOxygenSensor4VoltageBuilder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setIOOBDOxygenSensor4Voltage(DolphinConfig.IO value) {
/*       */         if (this.iOOBDOxygenSensor4VoltageBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.iOOBDOxygenSensor4Voltage_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOOBDOxygenSensor4VoltageBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setIOOBDOxygenSensor4Voltage(DolphinConfig.IO.Builder builderForValue) {
/*       */         if (this.iOOBDOxygenSensor4VoltageBuilder_ == null) {
/*       */           this.iOOBDOxygenSensor4Voltage_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOOBDOxygenSensor4VoltageBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeIOOBDOxygenSensor4Voltage(DolphinConfig.IO value) {
/*       */         if (this.iOOBDOxygenSensor4VoltageBuilder_ == null) {
/*       */           if (this.iOOBDOxygenSensor4Voltage_ != null) {
/*       */             this.iOOBDOxygenSensor4Voltage_ = DolphinConfig.IO.newBuilder(this.iOOBDOxygenSensor4Voltage_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.iOOBDOxygenSensor4Voltage_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOOBDOxygenSensor4VoltageBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearIOOBDOxygenSensor4Voltage() {
/*       */         if (this.iOOBDOxygenSensor4VoltageBuilder_ == null) {
/*       */           this.iOOBDOxygenSensor4Voltage_ = null;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOOBDOxygenSensor4Voltage_ = null;
/*       */           this.iOOBDOxygenSensor4VoltageBuilder_ = null;
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOOBDOxygenSensor4VoltageBuilder() {
/*       */         onChanged();
/*       */         return (DolphinConfig.IO.Builder)getIOOBDOxygenSensor4VoltageFieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOOBDOxygenSensor4VoltageOrBuilder() {
/*       */         return (this.iOOBDOxygenSensor4VoltageBuilder_ != null) ? (DolphinConfig.IOOrBuilder)this.iOOBDOxygenSensor4VoltageBuilder_.getMessageOrBuilder() : ((this.iOOBDOxygenSensor4Voltage_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOOBDOxygenSensor4Voltage_);
/*       */       }
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOOBDOxygenSensor4VoltageFieldBuilder() {
/*       */         if (this.iOOBDOxygenSensor4VoltageBuilder_ == null) {
/*       */           this.iOOBDOxygenSensor4VoltageBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOOBDOxygenSensor4Voltage(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.iOOBDOxygenSensor4Voltage_ = null;
/*       */         } 
/*       */         return this.iOOBDOxygenSensor4VoltageBuilder_;
/*       */       }
/*       */       
/*       */       public boolean hasIOOBDOxygenSensor4ShortTermFuelTrim() {
/*       */         return (this.iOOBDOxygenSensor4ShortTermFuelTrimBuilder_ != null || this.iOOBDOxygenSensor4ShortTermFuelTrim_ != null);
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO getIOOBDOxygenSensor4ShortTermFuelTrim() {
/*       */         return (this.iOOBDOxygenSensor4ShortTermFuelTrimBuilder_ == null) ? ((this.iOOBDOxygenSensor4ShortTermFuelTrim_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOOBDOxygenSensor4ShortTermFuelTrim_) : (DolphinConfig.IO)this.iOOBDOxygenSensor4ShortTermFuelTrimBuilder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setIOOBDOxygenSensor4ShortTermFuelTrim(DolphinConfig.IO value) {
/*       */         if (this.iOOBDOxygenSensor4ShortTermFuelTrimBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.iOOBDOxygenSensor4ShortTermFuelTrim_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOOBDOxygenSensor4ShortTermFuelTrimBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setIOOBDOxygenSensor4ShortTermFuelTrim(DolphinConfig.IO.Builder builderForValue) {
/*       */         if (this.iOOBDOxygenSensor4ShortTermFuelTrimBuilder_ == null) {
/*       */           this.iOOBDOxygenSensor4ShortTermFuelTrim_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOOBDOxygenSensor4ShortTermFuelTrimBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeIOOBDOxygenSensor4ShortTermFuelTrim(DolphinConfig.IO value) {
/*       */         if (this.iOOBDOxygenSensor4ShortTermFuelTrimBuilder_ == null) {
/*       */           if (this.iOOBDOxygenSensor4ShortTermFuelTrim_ != null) {
/*       */             this.iOOBDOxygenSensor4ShortTermFuelTrim_ = DolphinConfig.IO.newBuilder(this.iOOBDOxygenSensor4ShortTermFuelTrim_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.iOOBDOxygenSensor4ShortTermFuelTrim_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOOBDOxygenSensor4ShortTermFuelTrimBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearIOOBDOxygenSensor4ShortTermFuelTrim() {
/*       */         if (this.iOOBDOxygenSensor4ShortTermFuelTrimBuilder_ == null) {
/*       */           this.iOOBDOxygenSensor4ShortTermFuelTrim_ = null;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOOBDOxygenSensor4ShortTermFuelTrim_ = null;
/*       */           this.iOOBDOxygenSensor4ShortTermFuelTrimBuilder_ = null;
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOOBDOxygenSensor4ShortTermFuelTrimBuilder() {
/*       */         onChanged();
/*       */         return (DolphinConfig.IO.Builder)getIOOBDOxygenSensor4ShortTermFuelTrimFieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOOBDOxygenSensor4ShortTermFuelTrimOrBuilder() {
/*       */         return (this.iOOBDOxygenSensor4ShortTermFuelTrimBuilder_ != null) ? (DolphinConfig.IOOrBuilder)this.iOOBDOxygenSensor4ShortTermFuelTrimBuilder_.getMessageOrBuilder() : ((this.iOOBDOxygenSensor4ShortTermFuelTrim_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOOBDOxygenSensor4ShortTermFuelTrim_);
/*       */       }
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOOBDOxygenSensor4ShortTermFuelTrimFieldBuilder() {
/*       */         if (this.iOOBDOxygenSensor4ShortTermFuelTrimBuilder_ == null) {
/*       */           this.iOOBDOxygenSensor4ShortTermFuelTrimBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOOBDOxygenSensor4ShortTermFuelTrim(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.iOOBDOxygenSensor4ShortTermFuelTrim_ = null;
/*       */         } 
/*       */         return this.iOOBDOxygenSensor4ShortTermFuelTrimBuilder_;
/*       */       }
/*       */       
/*       */       public boolean hasIOCANBusTachograph1WorkingState1() {
/*       */         return (this.iOCANBusTachograph1WorkingState1Builder_ != null || this.iOCANBusTachograph1WorkingState1_ != null);
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO getIOCANBusTachograph1WorkingState1() {
/*       */         return (this.iOCANBusTachograph1WorkingState1Builder_ == null) ? ((this.iOCANBusTachograph1WorkingState1_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusTachograph1WorkingState1_) : (DolphinConfig.IO)this.iOCANBusTachograph1WorkingState1Builder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusTachograph1WorkingState1(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusTachograph1WorkingState1Builder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.iOCANBusTachograph1WorkingState1_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTachograph1WorkingState1Builder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusTachograph1WorkingState1(DolphinConfig.IO.Builder builderForValue) {
/*       */         if (this.iOCANBusTachograph1WorkingState1Builder_ == null) {
/*       */           this.iOCANBusTachograph1WorkingState1_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTachograph1WorkingState1Builder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeIOCANBusTachograph1WorkingState1(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusTachograph1WorkingState1Builder_ == null) {
/*       */           if (this.iOCANBusTachograph1WorkingState1_ != null) {
/*       */             this.iOCANBusTachograph1WorkingState1_ = DolphinConfig.IO.newBuilder(this.iOCANBusTachograph1WorkingState1_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.iOCANBusTachograph1WorkingState1_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTachograph1WorkingState1Builder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearIOCANBusTachograph1WorkingState1() {
/*       */         if (this.iOCANBusTachograph1WorkingState1Builder_ == null) {
/*       */           this.iOCANBusTachograph1WorkingState1_ = null;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTachograph1WorkingState1_ = null;
/*       */           this.iOCANBusTachograph1WorkingState1Builder_ = null;
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOCANBusTachograph1WorkingState1Builder() {
/*       */         onChanged();
/*       */         return (DolphinConfig.IO.Builder)getIOCANBusTachograph1WorkingState1FieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOCANBusTachograph1WorkingState1OrBuilder() {
/*       */         return (this.iOCANBusTachograph1WorkingState1Builder_ != null) ? (DolphinConfig.IOOrBuilder)this.iOCANBusTachograph1WorkingState1Builder_.getMessageOrBuilder() : ((this.iOCANBusTachograph1WorkingState1_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusTachograph1WorkingState1_);
/*       */       }
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOCANBusTachograph1WorkingState1FieldBuilder() {
/*       */         if (this.iOCANBusTachograph1WorkingState1Builder_ == null) {
/*       */           this.iOCANBusTachograph1WorkingState1Builder_ = new SingleFieldBuilderV3((AbstractMessage)getIOCANBusTachograph1WorkingState1(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.iOCANBusTachograph1WorkingState1_ = null;
/*       */         } 
/*       */         return this.iOCANBusTachograph1WorkingState1Builder_;
/*       */       }
/*       */       
/*       */       public boolean hasIOCANBusTachograph1WorkingState2() {
/*       */         return (this.iOCANBusTachograph1WorkingState2Builder_ != null || this.iOCANBusTachograph1WorkingState2_ != null);
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO getIOCANBusTachograph1WorkingState2() {
/*       */         return (this.iOCANBusTachograph1WorkingState2Builder_ == null) ? ((this.iOCANBusTachograph1WorkingState2_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusTachograph1WorkingState2_) : (DolphinConfig.IO)this.iOCANBusTachograph1WorkingState2Builder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusTachograph1WorkingState2(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusTachograph1WorkingState2Builder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.iOCANBusTachograph1WorkingState2_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTachograph1WorkingState2Builder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusTachograph1WorkingState2(DolphinConfig.IO.Builder builderForValue) {
/*       */         if (this.iOCANBusTachograph1WorkingState2Builder_ == null) {
/*       */           this.iOCANBusTachograph1WorkingState2_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTachograph1WorkingState2Builder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeIOCANBusTachograph1WorkingState2(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusTachograph1WorkingState2Builder_ == null) {
/*       */           if (this.iOCANBusTachograph1WorkingState2_ != null) {
/*       */             this.iOCANBusTachograph1WorkingState2_ = DolphinConfig.IO.newBuilder(this.iOCANBusTachograph1WorkingState2_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.iOCANBusTachograph1WorkingState2_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTachograph1WorkingState2Builder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearIOCANBusTachograph1WorkingState2() {
/*       */         if (this.iOCANBusTachograph1WorkingState2Builder_ == null) {
/*       */           this.iOCANBusTachograph1WorkingState2_ = null;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTachograph1WorkingState2_ = null;
/*       */           this.iOCANBusTachograph1WorkingState2Builder_ = null;
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOCANBusTachograph1WorkingState2Builder() {
/*       */         onChanged();
/*       */         return (DolphinConfig.IO.Builder)getIOCANBusTachograph1WorkingState2FieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOCANBusTachograph1WorkingState2OrBuilder() {
/*       */         return (this.iOCANBusTachograph1WorkingState2Builder_ != null) ? (DolphinConfig.IOOrBuilder)this.iOCANBusTachograph1WorkingState2Builder_.getMessageOrBuilder() : ((this.iOCANBusTachograph1WorkingState2_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusTachograph1WorkingState2_);
/*       */       }
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOCANBusTachograph1WorkingState2FieldBuilder() {
/*       */         if (this.iOCANBusTachograph1WorkingState2Builder_ == null) {
/*       */           this.iOCANBusTachograph1WorkingState2Builder_ = new SingleFieldBuilderV3((AbstractMessage)getIOCANBusTachograph1WorkingState2(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.iOCANBusTachograph1WorkingState2_ = null;
/*       */         } 
/*       */         return this.iOCANBusTachograph1WorkingState2Builder_;
/*       */       }
/*       */       
/*       */       public boolean hasIOCANBusTachograph1VehicleMotion() {
/*       */         return (this.iOCANBusTachograph1VehicleMotionBuilder_ != null || this.iOCANBusTachograph1VehicleMotion_ != null);
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO getIOCANBusTachograph1VehicleMotion() {
/*       */         return (this.iOCANBusTachograph1VehicleMotionBuilder_ == null) ? ((this.iOCANBusTachograph1VehicleMotion_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusTachograph1VehicleMotion_) : (DolphinConfig.IO)this.iOCANBusTachograph1VehicleMotionBuilder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusTachograph1VehicleMotion(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusTachograph1VehicleMotionBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.iOCANBusTachograph1VehicleMotion_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTachograph1VehicleMotionBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusTachograph1VehicleMotion(DolphinConfig.IO.Builder builderForValue) {
/*       */         if (this.iOCANBusTachograph1VehicleMotionBuilder_ == null) {
/*       */           this.iOCANBusTachograph1VehicleMotion_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTachograph1VehicleMotionBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeIOCANBusTachograph1VehicleMotion(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusTachograph1VehicleMotionBuilder_ == null) {
/*       */           if (this.iOCANBusTachograph1VehicleMotion_ != null) {
/*       */             this.iOCANBusTachograph1VehicleMotion_ = DolphinConfig.IO.newBuilder(this.iOCANBusTachograph1VehicleMotion_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.iOCANBusTachograph1VehicleMotion_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTachograph1VehicleMotionBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearIOCANBusTachograph1VehicleMotion() {
/*       */         if (this.iOCANBusTachograph1VehicleMotionBuilder_ == null) {
/*       */           this.iOCANBusTachograph1VehicleMotion_ = null;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTachograph1VehicleMotion_ = null;
/*       */           this.iOCANBusTachograph1VehicleMotionBuilder_ = null;
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOCANBusTachograph1VehicleMotionBuilder() {
/*       */         onChanged();
/*       */         return (DolphinConfig.IO.Builder)getIOCANBusTachograph1VehicleMotionFieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOCANBusTachograph1VehicleMotionOrBuilder() {
/*       */         return (this.iOCANBusTachograph1VehicleMotionBuilder_ != null) ? (DolphinConfig.IOOrBuilder)this.iOCANBusTachograph1VehicleMotionBuilder_.getMessageOrBuilder() : ((this.iOCANBusTachograph1VehicleMotion_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusTachograph1VehicleMotion_);
/*       */       }
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOCANBusTachograph1VehicleMotionFieldBuilder() {
/*       */         if (this.iOCANBusTachograph1VehicleMotionBuilder_ == null) {
/*       */           this.iOCANBusTachograph1VehicleMotionBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOCANBusTachograph1VehicleMotion(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.iOCANBusTachograph1VehicleMotion_ = null;
/*       */         } 
/*       */         return this.iOCANBusTachograph1VehicleMotionBuilder_;
/*       */       }
/*       */       
/*       */       public boolean hasIOCANBusTachograph1Driv1TimeRelStates() {
/*       */         return (this.iOCANBusTachograph1Driv1TimeRelStatesBuilder_ != null || this.iOCANBusTachograph1Driv1TimeRelStates_ != null);
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO getIOCANBusTachograph1Driv1TimeRelStates() {
/*       */         return (this.iOCANBusTachograph1Driv1TimeRelStatesBuilder_ == null) ? ((this.iOCANBusTachograph1Driv1TimeRelStates_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusTachograph1Driv1TimeRelStates_) : (DolphinConfig.IO)this.iOCANBusTachograph1Driv1TimeRelStatesBuilder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusTachograph1Driv1TimeRelStates(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusTachograph1Driv1TimeRelStatesBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.iOCANBusTachograph1Driv1TimeRelStates_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTachograph1Driv1TimeRelStatesBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusTachograph1Driv1TimeRelStates(DolphinConfig.IO.Builder builderForValue) {
/*       */         if (this.iOCANBusTachograph1Driv1TimeRelStatesBuilder_ == null) {
/*       */           this.iOCANBusTachograph1Driv1TimeRelStates_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTachograph1Driv1TimeRelStatesBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeIOCANBusTachograph1Driv1TimeRelStates(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusTachograph1Driv1TimeRelStatesBuilder_ == null) {
/*       */           if (this.iOCANBusTachograph1Driv1TimeRelStates_ != null) {
/*       */             this.iOCANBusTachograph1Driv1TimeRelStates_ = DolphinConfig.IO.newBuilder(this.iOCANBusTachograph1Driv1TimeRelStates_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.iOCANBusTachograph1Driv1TimeRelStates_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTachograph1Driv1TimeRelStatesBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearIOCANBusTachograph1Driv1TimeRelStates() {
/*       */         if (this.iOCANBusTachograph1Driv1TimeRelStatesBuilder_ == null) {
/*       */           this.iOCANBusTachograph1Driv1TimeRelStates_ = null;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTachograph1Driv1TimeRelStates_ = null;
/*       */           this.iOCANBusTachograph1Driv1TimeRelStatesBuilder_ = null;
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOCANBusTachograph1Driv1TimeRelStatesBuilder() {
/*       */         onChanged();
/*       */         return (DolphinConfig.IO.Builder)getIOCANBusTachograph1Driv1TimeRelStatesFieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOCANBusTachograph1Driv1TimeRelStatesOrBuilder() {
/*       */         return (this.iOCANBusTachograph1Driv1TimeRelStatesBuilder_ != null) ? (DolphinConfig.IOOrBuilder)this.iOCANBusTachograph1Driv1TimeRelStatesBuilder_.getMessageOrBuilder() : ((this.iOCANBusTachograph1Driv1TimeRelStates_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusTachograph1Driv1TimeRelStates_);
/*       */       }
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOCANBusTachograph1Driv1TimeRelStatesFieldBuilder() {
/*       */         if (this.iOCANBusTachograph1Driv1TimeRelStatesBuilder_ == null) {
/*       */           this.iOCANBusTachograph1Driv1TimeRelStatesBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOCANBusTachograph1Driv1TimeRelStates(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.iOCANBusTachograph1Driv1TimeRelStates_ = null;
/*       */         } 
/*       */         return this.iOCANBusTachograph1Driv1TimeRelStatesBuilder_;
/*       */       }
/*       */       
/*       */       public boolean hasIOCANBusTachograph1Driver1Card() {
/*       */         return (this.iOCANBusTachograph1Driver1CardBuilder_ != null || this.iOCANBusTachograph1Driver1Card_ != null);
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO getIOCANBusTachograph1Driver1Card() {
/*       */         return (this.iOCANBusTachograph1Driver1CardBuilder_ == null) ? ((this.iOCANBusTachograph1Driver1Card_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusTachograph1Driver1Card_) : (DolphinConfig.IO)this.iOCANBusTachograph1Driver1CardBuilder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusTachograph1Driver1Card(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusTachograph1Driver1CardBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.iOCANBusTachograph1Driver1Card_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTachograph1Driver1CardBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusTachograph1Driver1Card(DolphinConfig.IO.Builder builderForValue) {
/*       */         if (this.iOCANBusTachograph1Driver1CardBuilder_ == null) {
/*       */           this.iOCANBusTachograph1Driver1Card_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTachograph1Driver1CardBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeIOCANBusTachograph1Driver1Card(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusTachograph1Driver1CardBuilder_ == null) {
/*       */           if (this.iOCANBusTachograph1Driver1Card_ != null) {
/*       */             this.iOCANBusTachograph1Driver1Card_ = DolphinConfig.IO.newBuilder(this.iOCANBusTachograph1Driver1Card_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.iOCANBusTachograph1Driver1Card_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTachograph1Driver1CardBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearIOCANBusTachograph1Driver1Card() {
/*       */         if (this.iOCANBusTachograph1Driver1CardBuilder_ == null) {
/*       */           this.iOCANBusTachograph1Driver1Card_ = null;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTachograph1Driver1Card_ = null;
/*       */           this.iOCANBusTachograph1Driver1CardBuilder_ = null;
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOCANBusTachograph1Driver1CardBuilder() {
/*       */         onChanged();
/*       */         return (DolphinConfig.IO.Builder)getIOCANBusTachograph1Driver1CardFieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOCANBusTachograph1Driver1CardOrBuilder() {
/*       */         return (this.iOCANBusTachograph1Driver1CardBuilder_ != null) ? (DolphinConfig.IOOrBuilder)this.iOCANBusTachograph1Driver1CardBuilder_.getMessageOrBuilder() : ((this.iOCANBusTachograph1Driver1Card_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusTachograph1Driver1Card_);
/*       */       }
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOCANBusTachograph1Driver1CardFieldBuilder() {
/*       */         if (this.iOCANBusTachograph1Driver1CardBuilder_ == null) {
/*       */           this.iOCANBusTachograph1Driver1CardBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOCANBusTachograph1Driver1Card(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.iOCANBusTachograph1Driver1Card_ = null;
/*       */         } 
/*       */         return this.iOCANBusTachograph1Driver1CardBuilder_;
/*       */       }
/*       */       
/*       */       public boolean hasIOCANBusTachograph1VehicleOverspeed() {
/*       */         return (this.iOCANBusTachograph1VehicleOverspeedBuilder_ != null || this.iOCANBusTachograph1VehicleOverspeed_ != null);
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO getIOCANBusTachograph1VehicleOverspeed() {
/*       */         return (this.iOCANBusTachograph1VehicleOverspeedBuilder_ == null) ? ((this.iOCANBusTachograph1VehicleOverspeed_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusTachograph1VehicleOverspeed_) : (DolphinConfig.IO)this.iOCANBusTachograph1VehicleOverspeedBuilder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusTachograph1VehicleOverspeed(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusTachograph1VehicleOverspeedBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.iOCANBusTachograph1VehicleOverspeed_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTachograph1VehicleOverspeedBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusTachograph1VehicleOverspeed(DolphinConfig.IO.Builder builderForValue) {
/*       */         if (this.iOCANBusTachograph1VehicleOverspeedBuilder_ == null) {
/*       */           this.iOCANBusTachograph1VehicleOverspeed_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTachograph1VehicleOverspeedBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeIOCANBusTachograph1VehicleOverspeed(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusTachograph1VehicleOverspeedBuilder_ == null) {
/*       */           if (this.iOCANBusTachograph1VehicleOverspeed_ != null) {
/*       */             this.iOCANBusTachograph1VehicleOverspeed_ = DolphinConfig.IO.newBuilder(this.iOCANBusTachograph1VehicleOverspeed_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.iOCANBusTachograph1VehicleOverspeed_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTachograph1VehicleOverspeedBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearIOCANBusTachograph1VehicleOverspeed() {
/*       */         if (this.iOCANBusTachograph1VehicleOverspeedBuilder_ == null) {
/*       */           this.iOCANBusTachograph1VehicleOverspeed_ = null;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTachograph1VehicleOverspeed_ = null;
/*       */           this.iOCANBusTachograph1VehicleOverspeedBuilder_ = null;
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOCANBusTachograph1VehicleOverspeedBuilder() {
/*       */         onChanged();
/*       */         return (DolphinConfig.IO.Builder)getIOCANBusTachograph1VehicleOverspeedFieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOCANBusTachograph1VehicleOverspeedOrBuilder() {
/*       */         return (this.iOCANBusTachograph1VehicleOverspeedBuilder_ != null) ? (DolphinConfig.IOOrBuilder)this.iOCANBusTachograph1VehicleOverspeedBuilder_.getMessageOrBuilder() : ((this.iOCANBusTachograph1VehicleOverspeed_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusTachograph1VehicleOverspeed_);
/*       */       }
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOCANBusTachograph1VehicleOverspeedFieldBuilder() {
/*       */         if (this.iOCANBusTachograph1VehicleOverspeedBuilder_ == null) {
/*       */           this.iOCANBusTachograph1VehicleOverspeedBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOCANBusTachograph1VehicleOverspeed(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.iOCANBusTachograph1VehicleOverspeed_ = null;
/*       */         } 
/*       */         return this.iOCANBusTachograph1VehicleOverspeedBuilder_;
/*       */       }
/*       */       
/*       */       public boolean hasIOCANBusTachograph1Driv2TimeRelStates() {
/*       */         return (this.iOCANBusTachograph1Driv2TimeRelStatesBuilder_ != null || this.iOCANBusTachograph1Driv2TimeRelStates_ != null);
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO getIOCANBusTachograph1Driv2TimeRelStates() {
/*       */         return (this.iOCANBusTachograph1Driv2TimeRelStatesBuilder_ == null) ? ((this.iOCANBusTachograph1Driv2TimeRelStates_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusTachograph1Driv2TimeRelStates_) : (DolphinConfig.IO)this.iOCANBusTachograph1Driv2TimeRelStatesBuilder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusTachograph1Driv2TimeRelStates(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusTachograph1Driv2TimeRelStatesBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.iOCANBusTachograph1Driv2TimeRelStates_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTachograph1Driv2TimeRelStatesBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusTachograph1Driv2TimeRelStates(DolphinConfig.IO.Builder builderForValue) {
/*       */         if (this.iOCANBusTachograph1Driv2TimeRelStatesBuilder_ == null) {
/*       */           this.iOCANBusTachograph1Driv2TimeRelStates_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTachograph1Driv2TimeRelStatesBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeIOCANBusTachograph1Driv2TimeRelStates(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusTachograph1Driv2TimeRelStatesBuilder_ == null) {
/*       */           if (this.iOCANBusTachograph1Driv2TimeRelStates_ != null) {
/*       */             this.iOCANBusTachograph1Driv2TimeRelStates_ = DolphinConfig.IO.newBuilder(this.iOCANBusTachograph1Driv2TimeRelStates_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.iOCANBusTachograph1Driv2TimeRelStates_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTachograph1Driv2TimeRelStatesBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearIOCANBusTachograph1Driv2TimeRelStates() {
/*       */         if (this.iOCANBusTachograph1Driv2TimeRelStatesBuilder_ == null) {
/*       */           this.iOCANBusTachograph1Driv2TimeRelStates_ = null;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTachograph1Driv2TimeRelStates_ = null;
/*       */           this.iOCANBusTachograph1Driv2TimeRelStatesBuilder_ = null;
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOCANBusTachograph1Driv2TimeRelStatesBuilder() {
/*       */         onChanged();
/*       */         return (DolphinConfig.IO.Builder)getIOCANBusTachograph1Driv2TimeRelStatesFieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOCANBusTachograph1Driv2TimeRelStatesOrBuilder() {
/*       */         return (this.iOCANBusTachograph1Driv2TimeRelStatesBuilder_ != null) ? (DolphinConfig.IOOrBuilder)this.iOCANBusTachograph1Driv2TimeRelStatesBuilder_.getMessageOrBuilder() : ((this.iOCANBusTachograph1Driv2TimeRelStates_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusTachograph1Driv2TimeRelStates_);
/*       */       }
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOCANBusTachograph1Driv2TimeRelStatesFieldBuilder() {
/*       */         if (this.iOCANBusTachograph1Driv2TimeRelStatesBuilder_ == null) {
/*       */           this.iOCANBusTachograph1Driv2TimeRelStatesBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOCANBusTachograph1Driv2TimeRelStates(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.iOCANBusTachograph1Driv2TimeRelStates_ = null;
/*       */         } 
/*       */         return this.iOCANBusTachograph1Driv2TimeRelStatesBuilder_;
/*       */       }
/*       */       
/*       */       public boolean hasIOCANBusTachograph1Driver2Card() {
/*       */         return (this.iOCANBusTachograph1Driver2CardBuilder_ != null || this.iOCANBusTachograph1Driver2Card_ != null);
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO getIOCANBusTachograph1Driver2Card() {
/*       */         return (this.iOCANBusTachograph1Driver2CardBuilder_ == null) ? ((this.iOCANBusTachograph1Driver2Card_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusTachograph1Driver2Card_) : (DolphinConfig.IO)this.iOCANBusTachograph1Driver2CardBuilder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusTachograph1Driver2Card(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusTachograph1Driver2CardBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.iOCANBusTachograph1Driver2Card_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTachograph1Driver2CardBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusTachograph1Driver2Card(DolphinConfig.IO.Builder builderForValue) {
/*       */         if (this.iOCANBusTachograph1Driver2CardBuilder_ == null) {
/*       */           this.iOCANBusTachograph1Driver2Card_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTachograph1Driver2CardBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeIOCANBusTachograph1Driver2Card(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusTachograph1Driver2CardBuilder_ == null) {
/*       */           if (this.iOCANBusTachograph1Driver2Card_ != null) {
/*       */             this.iOCANBusTachograph1Driver2Card_ = DolphinConfig.IO.newBuilder(this.iOCANBusTachograph1Driver2Card_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.iOCANBusTachograph1Driver2Card_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTachograph1Driver2CardBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearIOCANBusTachograph1Driver2Card() {
/*       */         if (this.iOCANBusTachograph1Driver2CardBuilder_ == null) {
/*       */           this.iOCANBusTachograph1Driver2Card_ = null;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTachograph1Driver2Card_ = null;
/*       */           this.iOCANBusTachograph1Driver2CardBuilder_ = null;
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOCANBusTachograph1Driver2CardBuilder() {
/*       */         onChanged();
/*       */         return (DolphinConfig.IO.Builder)getIOCANBusTachograph1Driver2CardFieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOCANBusTachograph1Driver2CardOrBuilder() {
/*       */         return (this.iOCANBusTachograph1Driver2CardBuilder_ != null) ? (DolphinConfig.IOOrBuilder)this.iOCANBusTachograph1Driver2CardBuilder_.getMessageOrBuilder() : ((this.iOCANBusTachograph1Driver2Card_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusTachograph1Driver2Card_);
/*       */       }
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOCANBusTachograph1Driver2CardFieldBuilder() {
/*       */         if (this.iOCANBusTachograph1Driver2CardBuilder_ == null) {
/*       */           this.iOCANBusTachograph1Driver2CardBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOCANBusTachograph1Driver2Card(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.iOCANBusTachograph1Driver2Card_ = null;
/*       */         } 
/*       */         return this.iOCANBusTachograph1Driver2CardBuilder_;
/*       */       }
/*       */       
/*       */       public boolean hasIOCANBusTachograph1SystemEvent() {
/*       */         return (this.iOCANBusTachograph1SystemEventBuilder_ != null || this.iOCANBusTachograph1SystemEvent_ != null);
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO getIOCANBusTachograph1SystemEvent() {
/*       */         return (this.iOCANBusTachograph1SystemEventBuilder_ == null) ? ((this.iOCANBusTachograph1SystemEvent_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusTachograph1SystemEvent_) : (DolphinConfig.IO)this.iOCANBusTachograph1SystemEventBuilder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusTachograph1SystemEvent(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusTachograph1SystemEventBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.iOCANBusTachograph1SystemEvent_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTachograph1SystemEventBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusTachograph1SystemEvent(DolphinConfig.IO.Builder builderForValue) {
/*       */         if (this.iOCANBusTachograph1SystemEventBuilder_ == null) {
/*       */           this.iOCANBusTachograph1SystemEvent_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTachograph1SystemEventBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeIOCANBusTachograph1SystemEvent(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusTachograph1SystemEventBuilder_ == null) {
/*       */           if (this.iOCANBusTachograph1SystemEvent_ != null) {
/*       */             this.iOCANBusTachograph1SystemEvent_ = DolphinConfig.IO.newBuilder(this.iOCANBusTachograph1SystemEvent_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.iOCANBusTachograph1SystemEvent_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTachograph1SystemEventBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearIOCANBusTachograph1SystemEvent() {
/*       */         if (this.iOCANBusTachograph1SystemEventBuilder_ == null) {
/*       */           this.iOCANBusTachograph1SystemEvent_ = null;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTachograph1SystemEvent_ = null;
/*       */           this.iOCANBusTachograph1SystemEventBuilder_ = null;
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOCANBusTachograph1SystemEventBuilder() {
/*       */         onChanged();
/*       */         return (DolphinConfig.IO.Builder)getIOCANBusTachograph1SystemEventFieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOCANBusTachograph1SystemEventOrBuilder() {
/*       */         return (this.iOCANBusTachograph1SystemEventBuilder_ != null) ? (DolphinConfig.IOOrBuilder)this.iOCANBusTachograph1SystemEventBuilder_.getMessageOrBuilder() : ((this.iOCANBusTachograph1SystemEvent_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusTachograph1SystemEvent_);
/*       */       }
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOCANBusTachograph1SystemEventFieldBuilder() {
/*       */         if (this.iOCANBusTachograph1SystemEventBuilder_ == null) {
/*       */           this.iOCANBusTachograph1SystemEventBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOCANBusTachograph1SystemEvent(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.iOCANBusTachograph1SystemEvent_ = null;
/*       */         } 
/*       */         return this.iOCANBusTachograph1SystemEventBuilder_;
/*       */       }
/*       */       
/*       */       public boolean hasIOCANBusTachograph1HandlingInformation() {
/*       */         return (this.iOCANBusTachograph1HandlingInformationBuilder_ != null || this.iOCANBusTachograph1HandlingInformation_ != null);
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO getIOCANBusTachograph1HandlingInformation() {
/*       */         return (this.iOCANBusTachograph1HandlingInformationBuilder_ == null) ? ((this.iOCANBusTachograph1HandlingInformation_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusTachograph1HandlingInformation_) : (DolphinConfig.IO)this.iOCANBusTachograph1HandlingInformationBuilder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusTachograph1HandlingInformation(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusTachograph1HandlingInformationBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.iOCANBusTachograph1HandlingInformation_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTachograph1HandlingInformationBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusTachograph1HandlingInformation(DolphinConfig.IO.Builder builderForValue) {
/*       */         if (this.iOCANBusTachograph1HandlingInformationBuilder_ == null) {
/*       */           this.iOCANBusTachograph1HandlingInformation_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTachograph1HandlingInformationBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeIOCANBusTachograph1HandlingInformation(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusTachograph1HandlingInformationBuilder_ == null) {
/*       */           if (this.iOCANBusTachograph1HandlingInformation_ != null) {
/*       */             this.iOCANBusTachograph1HandlingInformation_ = DolphinConfig.IO.newBuilder(this.iOCANBusTachograph1HandlingInformation_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.iOCANBusTachograph1HandlingInformation_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTachograph1HandlingInformationBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearIOCANBusTachograph1HandlingInformation() {
/*       */         if (this.iOCANBusTachograph1HandlingInformationBuilder_ == null) {
/*       */           this.iOCANBusTachograph1HandlingInformation_ = null;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTachograph1HandlingInformation_ = null;
/*       */           this.iOCANBusTachograph1HandlingInformationBuilder_ = null;
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOCANBusTachograph1HandlingInformationBuilder() {
/*       */         onChanged();
/*       */         return (DolphinConfig.IO.Builder)getIOCANBusTachograph1HandlingInformationFieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOCANBusTachograph1HandlingInformationOrBuilder() {
/*       */         return (this.iOCANBusTachograph1HandlingInformationBuilder_ != null) ? (DolphinConfig.IOOrBuilder)this.iOCANBusTachograph1HandlingInformationBuilder_.getMessageOrBuilder() : ((this.iOCANBusTachograph1HandlingInformation_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusTachograph1HandlingInformation_);
/*       */       }
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOCANBusTachograph1HandlingInformationFieldBuilder() {
/*       */         if (this.iOCANBusTachograph1HandlingInformationBuilder_ == null) {
/*       */           this.iOCANBusTachograph1HandlingInformationBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOCANBusTachograph1HandlingInformation(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.iOCANBusTachograph1HandlingInformation_ = null;
/*       */         } 
/*       */         return this.iOCANBusTachograph1HandlingInformationBuilder_;
/*       */       }
/*       */       
/*       */       public boolean hasIOCANBusTachograph1TachographPerformance() {
/*       */         return (this.iOCANBusTachograph1TachographPerformanceBuilder_ != null || this.iOCANBusTachograph1TachographPerformance_ != null);
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO getIOCANBusTachograph1TachographPerformance() {
/*       */         return (this.iOCANBusTachograph1TachographPerformanceBuilder_ == null) ? ((this.iOCANBusTachograph1TachographPerformance_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusTachograph1TachographPerformance_) : (DolphinConfig.IO)this.iOCANBusTachograph1TachographPerformanceBuilder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusTachograph1TachographPerformance(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusTachograph1TachographPerformanceBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.iOCANBusTachograph1TachographPerformance_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTachograph1TachographPerformanceBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusTachograph1TachographPerformance(DolphinConfig.IO.Builder builderForValue) {
/*       */         if (this.iOCANBusTachograph1TachographPerformanceBuilder_ == null) {
/*       */           this.iOCANBusTachograph1TachographPerformance_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTachograph1TachographPerformanceBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeIOCANBusTachograph1TachographPerformance(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusTachograph1TachographPerformanceBuilder_ == null) {
/*       */           if (this.iOCANBusTachograph1TachographPerformance_ != null) {
/*       */             this.iOCANBusTachograph1TachographPerformance_ = DolphinConfig.IO.newBuilder(this.iOCANBusTachograph1TachographPerformance_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.iOCANBusTachograph1TachographPerformance_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTachograph1TachographPerformanceBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearIOCANBusTachograph1TachographPerformance() {
/*       */         if (this.iOCANBusTachograph1TachographPerformanceBuilder_ == null) {
/*       */           this.iOCANBusTachograph1TachographPerformance_ = null;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTachograph1TachographPerformance_ = null;
/*       */           this.iOCANBusTachograph1TachographPerformanceBuilder_ = null;
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOCANBusTachograph1TachographPerformanceBuilder() {
/*       */         onChanged();
/*       */         return (DolphinConfig.IO.Builder)getIOCANBusTachograph1TachographPerformanceFieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOCANBusTachograph1TachographPerformanceOrBuilder() {
/*       */         return (this.iOCANBusTachograph1TachographPerformanceBuilder_ != null) ? (DolphinConfig.IOOrBuilder)this.iOCANBusTachograph1TachographPerformanceBuilder_.getMessageOrBuilder() : ((this.iOCANBusTachograph1TachographPerformance_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusTachograph1TachographPerformance_);
/*       */       }
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOCANBusTachograph1TachographPerformanceFieldBuilder() {
/*       */         if (this.iOCANBusTachograph1TachographPerformanceBuilder_ == null) {
/*       */           this.iOCANBusTachograph1TachographPerformanceBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOCANBusTachograph1TachographPerformance(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.iOCANBusTachograph1TachographPerformance_ = null;
/*       */         } 
/*       */         return this.iOCANBusTachograph1TachographPerformanceBuilder_;
/*       */       }
/*       */       
/*       */       public boolean hasIOCANBusTachograph1DirectionIndicator() {
/*       */         return (this.iOCANBusTachograph1DirectionIndicatorBuilder_ != null || this.iOCANBusTachograph1DirectionIndicator_ != null);
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO getIOCANBusTachograph1DirectionIndicator() {
/*       */         return (this.iOCANBusTachograph1DirectionIndicatorBuilder_ == null) ? ((this.iOCANBusTachograph1DirectionIndicator_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusTachograph1DirectionIndicator_) : (DolphinConfig.IO)this.iOCANBusTachograph1DirectionIndicatorBuilder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusTachograph1DirectionIndicator(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusTachograph1DirectionIndicatorBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.iOCANBusTachograph1DirectionIndicator_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTachograph1DirectionIndicatorBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusTachograph1DirectionIndicator(DolphinConfig.IO.Builder builderForValue) {
/*       */         if (this.iOCANBusTachograph1DirectionIndicatorBuilder_ == null) {
/*       */           this.iOCANBusTachograph1DirectionIndicator_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTachograph1DirectionIndicatorBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeIOCANBusTachograph1DirectionIndicator(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusTachograph1DirectionIndicatorBuilder_ == null) {
/*       */           if (this.iOCANBusTachograph1DirectionIndicator_ != null) {
/*       */             this.iOCANBusTachograph1DirectionIndicator_ = DolphinConfig.IO.newBuilder(this.iOCANBusTachograph1DirectionIndicator_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.iOCANBusTachograph1DirectionIndicator_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTachograph1DirectionIndicatorBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearIOCANBusTachograph1DirectionIndicator() {
/*       */         if (this.iOCANBusTachograph1DirectionIndicatorBuilder_ == null) {
/*       */           this.iOCANBusTachograph1DirectionIndicator_ = null;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTachograph1DirectionIndicator_ = null;
/*       */           this.iOCANBusTachograph1DirectionIndicatorBuilder_ = null;
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOCANBusTachograph1DirectionIndicatorBuilder() {
/*       */         onChanged();
/*       */         return (DolphinConfig.IO.Builder)getIOCANBusTachograph1DirectionIndicatorFieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOCANBusTachograph1DirectionIndicatorOrBuilder() {
/*       */         return (this.iOCANBusTachograph1DirectionIndicatorBuilder_ != null) ? (DolphinConfig.IOOrBuilder)this.iOCANBusTachograph1DirectionIndicatorBuilder_.getMessageOrBuilder() : ((this.iOCANBusTachograph1DirectionIndicator_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusTachograph1DirectionIndicator_);
/*       */       }
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOCANBusTachograph1DirectionIndicatorFieldBuilder() {
/*       */         if (this.iOCANBusTachograph1DirectionIndicatorBuilder_ == null) {
/*       */           this.iOCANBusTachograph1DirectionIndicatorBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOCANBusTachograph1DirectionIndicator(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.iOCANBusTachograph1DirectionIndicator_ = null;
/*       */         } 
/*       */         return this.iOCANBusTachograph1DirectionIndicatorBuilder_;
/*       */       }
/*       */       
/*       */       public boolean hasIOCANBusTachograph1VehicleSpeed() {
/*       */         return (this.iOCANBusTachograph1VehicleSpeedBuilder_ != null || this.iOCANBusTachograph1VehicleSpeed_ != null);
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO getIOCANBusTachograph1VehicleSpeed() {
/*       */         return (this.iOCANBusTachograph1VehicleSpeedBuilder_ == null) ? ((this.iOCANBusTachograph1VehicleSpeed_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusTachograph1VehicleSpeed_) : (DolphinConfig.IO)this.iOCANBusTachograph1VehicleSpeedBuilder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusTachograph1VehicleSpeed(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusTachograph1VehicleSpeedBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.iOCANBusTachograph1VehicleSpeed_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTachograph1VehicleSpeedBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusTachograph1VehicleSpeed(DolphinConfig.IO.Builder builderForValue) {
/*       */         if (this.iOCANBusTachograph1VehicleSpeedBuilder_ == null) {
/*       */           this.iOCANBusTachograph1VehicleSpeed_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTachograph1VehicleSpeedBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeIOCANBusTachograph1VehicleSpeed(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusTachograph1VehicleSpeedBuilder_ == null) {
/*       */           if (this.iOCANBusTachograph1VehicleSpeed_ != null) {
/*       */             this.iOCANBusTachograph1VehicleSpeed_ = DolphinConfig.IO.newBuilder(this.iOCANBusTachograph1VehicleSpeed_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.iOCANBusTachograph1VehicleSpeed_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTachograph1VehicleSpeedBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearIOCANBusTachograph1VehicleSpeed() {
/*       */         if (this.iOCANBusTachograph1VehicleSpeedBuilder_ == null) {
/*       */           this.iOCANBusTachograph1VehicleSpeed_ = null;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTachograph1VehicleSpeed_ = null;
/*       */           this.iOCANBusTachograph1VehicleSpeedBuilder_ = null;
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOCANBusTachograph1VehicleSpeedBuilder() {
/*       */         onChanged();
/*       */         return (DolphinConfig.IO.Builder)getIOCANBusTachograph1VehicleSpeedFieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOCANBusTachograph1VehicleSpeedOrBuilder() {
/*       */         return (this.iOCANBusTachograph1VehicleSpeedBuilder_ != null) ? (DolphinConfig.IOOrBuilder)this.iOCANBusTachograph1VehicleSpeedBuilder_.getMessageOrBuilder() : ((this.iOCANBusTachograph1VehicleSpeed_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusTachograph1VehicleSpeed_);
/*       */       }
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOCANBusTachograph1VehicleSpeedFieldBuilder() {
/*       */         if (this.iOCANBusTachograph1VehicleSpeedBuilder_ == null) {
/*       */           this.iOCANBusTachograph1VehicleSpeedBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOCANBusTachograph1VehicleSpeed(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.iOCANBusTachograph1VehicleSpeed_ = null;
/*       */         } 
/*       */         return this.iOCANBusTachograph1VehicleSpeedBuilder_;
/*       */       }
/*       */       
/*       */       public boolean hasIOCANBusEngineTemperature1EngineCoolantTemperature() {
/*       */         return (this.iOCANBusEngineTemperature1EngineCoolantTemperatureBuilder_ != null || this.iOCANBusEngineTemperature1EngineCoolantTemperature_ != null);
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO getIOCANBusEngineTemperature1EngineCoolantTemperature() {
/*       */         return (this.iOCANBusEngineTemperature1EngineCoolantTemperatureBuilder_ == null) ? ((this.iOCANBusEngineTemperature1EngineCoolantTemperature_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusEngineTemperature1EngineCoolantTemperature_) : (DolphinConfig.IO)this.iOCANBusEngineTemperature1EngineCoolantTemperatureBuilder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusEngineTemperature1EngineCoolantTemperature(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusEngineTemperature1EngineCoolantTemperatureBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.iOCANBusEngineTemperature1EngineCoolantTemperature_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusEngineTemperature1EngineCoolantTemperatureBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusEngineTemperature1EngineCoolantTemperature(DolphinConfig.IO.Builder builderForValue) {
/*       */         if (this.iOCANBusEngineTemperature1EngineCoolantTemperatureBuilder_ == null) {
/*       */           this.iOCANBusEngineTemperature1EngineCoolantTemperature_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusEngineTemperature1EngineCoolantTemperatureBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeIOCANBusEngineTemperature1EngineCoolantTemperature(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusEngineTemperature1EngineCoolantTemperatureBuilder_ == null) {
/*       */           if (this.iOCANBusEngineTemperature1EngineCoolantTemperature_ != null) {
/*       */             this.iOCANBusEngineTemperature1EngineCoolantTemperature_ = DolphinConfig.IO.newBuilder(this.iOCANBusEngineTemperature1EngineCoolantTemperature_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.iOCANBusEngineTemperature1EngineCoolantTemperature_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusEngineTemperature1EngineCoolantTemperatureBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearIOCANBusEngineTemperature1EngineCoolantTemperature() {
/*       */         if (this.iOCANBusEngineTemperature1EngineCoolantTemperatureBuilder_ == null) {
/*       */           this.iOCANBusEngineTemperature1EngineCoolantTemperature_ = null;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusEngineTemperature1EngineCoolantTemperature_ = null;
/*       */           this.iOCANBusEngineTemperature1EngineCoolantTemperatureBuilder_ = null;
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOCANBusEngineTemperature1EngineCoolantTemperatureBuilder() {
/*       */         onChanged();
/*       */         return (DolphinConfig.IO.Builder)getIOCANBusEngineTemperature1EngineCoolantTemperatureFieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOCANBusEngineTemperature1EngineCoolantTemperatureOrBuilder() {
/*       */         return (this.iOCANBusEngineTemperature1EngineCoolantTemperatureBuilder_ != null) ? (DolphinConfig.IOOrBuilder)this.iOCANBusEngineTemperature1EngineCoolantTemperatureBuilder_.getMessageOrBuilder() : ((this.iOCANBusEngineTemperature1EngineCoolantTemperature_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusEngineTemperature1EngineCoolantTemperature_);
/*       */       }
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOCANBusEngineTemperature1EngineCoolantTemperatureFieldBuilder() {
/*       */         if (this.iOCANBusEngineTemperature1EngineCoolantTemperatureBuilder_ == null) {
/*       */           this.iOCANBusEngineTemperature1EngineCoolantTemperatureBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOCANBusEngineTemperature1EngineCoolantTemperature(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.iOCANBusEngineTemperature1EngineCoolantTemperature_ = null;
/*       */         } 
/*       */         return this.iOCANBusEngineTemperature1EngineCoolantTemperatureBuilder_;
/*       */       }
/*       */       
/*       */       public boolean hasIOCANBusElectronicEngineController1ActualEnginePercent() {
/*       */         return (this.iOCANBusElectronicEngineController1ActualEnginePercentBuilder_ != null || this.iOCANBusElectronicEngineController1ActualEnginePercent_ != null);
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO getIOCANBusElectronicEngineController1ActualEnginePercent() {
/*       */         return (this.iOCANBusElectronicEngineController1ActualEnginePercentBuilder_ == null) ? ((this.iOCANBusElectronicEngineController1ActualEnginePercent_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusElectronicEngineController1ActualEnginePercent_) : (DolphinConfig.IO)this.iOCANBusElectronicEngineController1ActualEnginePercentBuilder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusElectronicEngineController1ActualEnginePercent(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusElectronicEngineController1ActualEnginePercentBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.iOCANBusElectronicEngineController1ActualEnginePercent_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusElectronicEngineController1ActualEnginePercentBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusElectronicEngineController1ActualEnginePercent(DolphinConfig.IO.Builder builderForValue) {
/*       */         if (this.iOCANBusElectronicEngineController1ActualEnginePercentBuilder_ == null) {
/*       */           this.iOCANBusElectronicEngineController1ActualEnginePercent_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusElectronicEngineController1ActualEnginePercentBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeIOCANBusElectronicEngineController1ActualEnginePercent(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusElectronicEngineController1ActualEnginePercentBuilder_ == null) {
/*       */           if (this.iOCANBusElectronicEngineController1ActualEnginePercent_ != null) {
/*       */             this.iOCANBusElectronicEngineController1ActualEnginePercent_ = DolphinConfig.IO.newBuilder(this.iOCANBusElectronicEngineController1ActualEnginePercent_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.iOCANBusElectronicEngineController1ActualEnginePercent_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusElectronicEngineController1ActualEnginePercentBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearIOCANBusElectronicEngineController1ActualEnginePercent() {
/*       */         if (this.iOCANBusElectronicEngineController1ActualEnginePercentBuilder_ == null) {
/*       */           this.iOCANBusElectronicEngineController1ActualEnginePercent_ = null;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusElectronicEngineController1ActualEnginePercent_ = null;
/*       */           this.iOCANBusElectronicEngineController1ActualEnginePercentBuilder_ = null;
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOCANBusElectronicEngineController1ActualEnginePercentBuilder() {
/*       */         onChanged();
/*       */         return (DolphinConfig.IO.Builder)getIOCANBusElectronicEngineController1ActualEnginePercentFieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOCANBusElectronicEngineController1ActualEnginePercentOrBuilder() {
/*       */         return (this.iOCANBusElectronicEngineController1ActualEnginePercentBuilder_ != null) ? (DolphinConfig.IOOrBuilder)this.iOCANBusElectronicEngineController1ActualEnginePercentBuilder_.getMessageOrBuilder() : ((this.iOCANBusElectronicEngineController1ActualEnginePercent_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusElectronicEngineController1ActualEnginePercent_);
/*       */       }
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOCANBusElectronicEngineController1ActualEnginePercentFieldBuilder() {
/*       */         if (this.iOCANBusElectronicEngineController1ActualEnginePercentBuilder_ == null) {
/*       */           this.iOCANBusElectronicEngineController1ActualEnginePercentBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOCANBusElectronicEngineController1ActualEnginePercent(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.iOCANBusElectronicEngineController1ActualEnginePercent_ = null;
/*       */         } 
/*       */         return this.iOCANBusElectronicEngineController1ActualEnginePercentBuilder_;
/*       */       }
/*       */       
/*       */       public boolean hasIOCANBusElectronicEngineController1EngineSpeed() {
/*       */         return (this.iOCANBusElectronicEngineController1EngineSpeedBuilder_ != null || this.iOCANBusElectronicEngineController1EngineSpeed_ != null);
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO getIOCANBusElectronicEngineController1EngineSpeed() {
/*       */         return (this.iOCANBusElectronicEngineController1EngineSpeedBuilder_ == null) ? ((this.iOCANBusElectronicEngineController1EngineSpeed_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusElectronicEngineController1EngineSpeed_) : (DolphinConfig.IO)this.iOCANBusElectronicEngineController1EngineSpeedBuilder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusElectronicEngineController1EngineSpeed(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusElectronicEngineController1EngineSpeedBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.iOCANBusElectronicEngineController1EngineSpeed_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusElectronicEngineController1EngineSpeedBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusElectronicEngineController1EngineSpeed(DolphinConfig.IO.Builder builderForValue) {
/*       */         if (this.iOCANBusElectronicEngineController1EngineSpeedBuilder_ == null) {
/*       */           this.iOCANBusElectronicEngineController1EngineSpeed_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusElectronicEngineController1EngineSpeedBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeIOCANBusElectronicEngineController1EngineSpeed(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusElectronicEngineController1EngineSpeedBuilder_ == null) {
/*       */           if (this.iOCANBusElectronicEngineController1EngineSpeed_ != null) {
/*       */             this.iOCANBusElectronicEngineController1EngineSpeed_ = DolphinConfig.IO.newBuilder(this.iOCANBusElectronicEngineController1EngineSpeed_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.iOCANBusElectronicEngineController1EngineSpeed_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusElectronicEngineController1EngineSpeedBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearIOCANBusElectronicEngineController1EngineSpeed() {
/*       */         if (this.iOCANBusElectronicEngineController1EngineSpeedBuilder_ == null) {
/*       */           this.iOCANBusElectronicEngineController1EngineSpeed_ = null;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusElectronicEngineController1EngineSpeed_ = null;
/*       */           this.iOCANBusElectronicEngineController1EngineSpeedBuilder_ = null;
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOCANBusElectronicEngineController1EngineSpeedBuilder() {
/*       */         onChanged();
/*       */         return (DolphinConfig.IO.Builder)getIOCANBusElectronicEngineController1EngineSpeedFieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOCANBusElectronicEngineController1EngineSpeedOrBuilder() {
/*       */         return (this.iOCANBusElectronicEngineController1EngineSpeedBuilder_ != null) ? (DolphinConfig.IOOrBuilder)this.iOCANBusElectronicEngineController1EngineSpeedBuilder_.getMessageOrBuilder() : ((this.iOCANBusElectronicEngineController1EngineSpeed_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusElectronicEngineController1EngineSpeed_);
/*       */       }
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOCANBusElectronicEngineController1EngineSpeedFieldBuilder() {
/*       */         if (this.iOCANBusElectronicEngineController1EngineSpeedBuilder_ == null) {
/*       */           this.iOCANBusElectronicEngineController1EngineSpeedBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOCANBusElectronicEngineController1EngineSpeed(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.iOCANBusElectronicEngineController1EngineSpeed_ = null;
/*       */         } 
/*       */         return this.iOCANBusElectronicEngineController1EngineSpeedBuilder_;
/*       */       }
/*       */       
/*       */       public boolean hasIOCANBusEngineHoursEngineTotalHours() {
/*       */         return (this.iOCANBusEngineHoursEngineTotalHoursBuilder_ != null || this.iOCANBusEngineHoursEngineTotalHours_ != null);
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO getIOCANBusEngineHoursEngineTotalHours() {
/*       */         return (this.iOCANBusEngineHoursEngineTotalHoursBuilder_ == null) ? ((this.iOCANBusEngineHoursEngineTotalHours_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusEngineHoursEngineTotalHours_) : (DolphinConfig.IO)this.iOCANBusEngineHoursEngineTotalHoursBuilder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusEngineHoursEngineTotalHours(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusEngineHoursEngineTotalHoursBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.iOCANBusEngineHoursEngineTotalHours_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusEngineHoursEngineTotalHoursBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusEngineHoursEngineTotalHours(DolphinConfig.IO.Builder builderForValue) {
/*       */         if (this.iOCANBusEngineHoursEngineTotalHoursBuilder_ == null) {
/*       */           this.iOCANBusEngineHoursEngineTotalHours_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusEngineHoursEngineTotalHoursBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeIOCANBusEngineHoursEngineTotalHours(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusEngineHoursEngineTotalHoursBuilder_ == null) {
/*       */           if (this.iOCANBusEngineHoursEngineTotalHours_ != null) {
/*       */             this.iOCANBusEngineHoursEngineTotalHours_ = DolphinConfig.IO.newBuilder(this.iOCANBusEngineHoursEngineTotalHours_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.iOCANBusEngineHoursEngineTotalHours_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusEngineHoursEngineTotalHoursBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearIOCANBusEngineHoursEngineTotalHours() {
/*       */         if (this.iOCANBusEngineHoursEngineTotalHoursBuilder_ == null) {
/*       */           this.iOCANBusEngineHoursEngineTotalHours_ = null;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusEngineHoursEngineTotalHours_ = null;
/*       */           this.iOCANBusEngineHoursEngineTotalHoursBuilder_ = null;
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOCANBusEngineHoursEngineTotalHoursBuilder() {
/*       */         onChanged();
/*       */         return (DolphinConfig.IO.Builder)getIOCANBusEngineHoursEngineTotalHoursFieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOCANBusEngineHoursEngineTotalHoursOrBuilder() {
/*       */         return (this.iOCANBusEngineHoursEngineTotalHoursBuilder_ != null) ? (DolphinConfig.IOOrBuilder)this.iOCANBusEngineHoursEngineTotalHoursBuilder_.getMessageOrBuilder() : ((this.iOCANBusEngineHoursEngineTotalHours_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusEngineHoursEngineTotalHours_);
/*       */       }
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOCANBusEngineHoursEngineTotalHoursFieldBuilder() {
/*       */         if (this.iOCANBusEngineHoursEngineTotalHoursBuilder_ == null) {
/*       */           this.iOCANBusEngineHoursEngineTotalHoursBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOCANBusEngineHoursEngineTotalHours(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.iOCANBusEngineHoursEngineTotalHours_ = null;
/*       */         } 
/*       */         return this.iOCANBusEngineHoursEngineTotalHoursBuilder_;
/*       */       }
/*       */       
/*       */       public boolean hasIOCANBusVehicleDistanceTotalVehicleDistance() {
/*       */         return (this.iOCANBusVehicleDistanceTotalVehicleDistanceBuilder_ != null || this.iOCANBusVehicleDistanceTotalVehicleDistance_ != null);
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO getIOCANBusVehicleDistanceTotalVehicleDistance() {
/*       */         return (this.iOCANBusVehicleDistanceTotalVehicleDistanceBuilder_ == null) ? ((this.iOCANBusVehicleDistanceTotalVehicleDistance_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusVehicleDistanceTotalVehicleDistance_) : (DolphinConfig.IO)this.iOCANBusVehicleDistanceTotalVehicleDistanceBuilder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusVehicleDistanceTotalVehicleDistance(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusVehicleDistanceTotalVehicleDistanceBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.iOCANBusVehicleDistanceTotalVehicleDistance_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusVehicleDistanceTotalVehicleDistanceBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusVehicleDistanceTotalVehicleDistance(DolphinConfig.IO.Builder builderForValue) {
/*       */         if (this.iOCANBusVehicleDistanceTotalVehicleDistanceBuilder_ == null) {
/*       */           this.iOCANBusVehicleDistanceTotalVehicleDistance_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusVehicleDistanceTotalVehicleDistanceBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeIOCANBusVehicleDistanceTotalVehicleDistance(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusVehicleDistanceTotalVehicleDistanceBuilder_ == null) {
/*       */           if (this.iOCANBusVehicleDistanceTotalVehicleDistance_ != null) {
/*       */             this.iOCANBusVehicleDistanceTotalVehicleDistance_ = DolphinConfig.IO.newBuilder(this.iOCANBusVehicleDistanceTotalVehicleDistance_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.iOCANBusVehicleDistanceTotalVehicleDistance_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusVehicleDistanceTotalVehicleDistanceBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearIOCANBusVehicleDistanceTotalVehicleDistance() {
/*       */         if (this.iOCANBusVehicleDistanceTotalVehicleDistanceBuilder_ == null) {
/*       */           this.iOCANBusVehicleDistanceTotalVehicleDistance_ = null;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusVehicleDistanceTotalVehicleDistance_ = null;
/*       */           this.iOCANBusVehicleDistanceTotalVehicleDistanceBuilder_ = null;
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOCANBusVehicleDistanceTotalVehicleDistanceBuilder() {
/*       */         onChanged();
/*       */         return (DolphinConfig.IO.Builder)getIOCANBusVehicleDistanceTotalVehicleDistanceFieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOCANBusVehicleDistanceTotalVehicleDistanceOrBuilder() {
/*       */         return (this.iOCANBusVehicleDistanceTotalVehicleDistanceBuilder_ != null) ? (DolphinConfig.IOOrBuilder)this.iOCANBusVehicleDistanceTotalVehicleDistanceBuilder_.getMessageOrBuilder() : ((this.iOCANBusVehicleDistanceTotalVehicleDistance_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusVehicleDistanceTotalVehicleDistance_);
/*       */       }
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOCANBusVehicleDistanceTotalVehicleDistanceFieldBuilder() {
/*       */         if (this.iOCANBusVehicleDistanceTotalVehicleDistanceBuilder_ == null) {
/*       */           this.iOCANBusVehicleDistanceTotalVehicleDistanceBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOCANBusVehicleDistanceTotalVehicleDistance(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.iOCANBusVehicleDistanceTotalVehicleDistance_ = null;
/*       */         } 
/*       */         return this.iOCANBusVehicleDistanceTotalVehicleDistanceBuilder_;
/*       */       }
/*       */       
/*       */       public boolean hasIOCANBusHighResolutionFuelConsumptionTotalFuelUsed() {
/*       */         return (this.iOCANBusHighResolutionFuelConsumptionTotalFuelUsedBuilder_ != null || this.iOCANBusHighResolutionFuelConsumptionTotalFuelUsed_ != null);
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO getIOCANBusHighResolutionFuelConsumptionTotalFuelUsed() {
/*       */         return (this.iOCANBusHighResolutionFuelConsumptionTotalFuelUsedBuilder_ == null) ? ((this.iOCANBusHighResolutionFuelConsumptionTotalFuelUsed_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusHighResolutionFuelConsumptionTotalFuelUsed_) : (DolphinConfig.IO)this.iOCANBusHighResolutionFuelConsumptionTotalFuelUsedBuilder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusHighResolutionFuelConsumptionTotalFuelUsed(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusHighResolutionFuelConsumptionTotalFuelUsedBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.iOCANBusHighResolutionFuelConsumptionTotalFuelUsed_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusHighResolutionFuelConsumptionTotalFuelUsedBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusHighResolutionFuelConsumptionTotalFuelUsed(DolphinConfig.IO.Builder builderForValue) {
/*       */         if (this.iOCANBusHighResolutionFuelConsumptionTotalFuelUsedBuilder_ == null) {
/*       */           this.iOCANBusHighResolutionFuelConsumptionTotalFuelUsed_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusHighResolutionFuelConsumptionTotalFuelUsedBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeIOCANBusHighResolutionFuelConsumptionTotalFuelUsed(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusHighResolutionFuelConsumptionTotalFuelUsedBuilder_ == null) {
/*       */           if (this.iOCANBusHighResolutionFuelConsumptionTotalFuelUsed_ != null) {
/*       */             this.iOCANBusHighResolutionFuelConsumptionTotalFuelUsed_ = DolphinConfig.IO.newBuilder(this.iOCANBusHighResolutionFuelConsumptionTotalFuelUsed_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.iOCANBusHighResolutionFuelConsumptionTotalFuelUsed_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusHighResolutionFuelConsumptionTotalFuelUsedBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearIOCANBusHighResolutionFuelConsumptionTotalFuelUsed() {
/*       */         if (this.iOCANBusHighResolutionFuelConsumptionTotalFuelUsedBuilder_ == null) {
/*       */           this.iOCANBusHighResolutionFuelConsumptionTotalFuelUsed_ = null;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusHighResolutionFuelConsumptionTotalFuelUsed_ = null;
/*       */           this.iOCANBusHighResolutionFuelConsumptionTotalFuelUsedBuilder_ = null;
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOCANBusHighResolutionFuelConsumptionTotalFuelUsedBuilder() {
/*       */         onChanged();
/*       */         return (DolphinConfig.IO.Builder)getIOCANBusHighResolutionFuelConsumptionTotalFuelUsedFieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOCANBusHighResolutionFuelConsumptionTotalFuelUsedOrBuilder() {
/*       */         return (this.iOCANBusHighResolutionFuelConsumptionTotalFuelUsedBuilder_ != null) ? (DolphinConfig.IOOrBuilder)this.iOCANBusHighResolutionFuelConsumptionTotalFuelUsedBuilder_.getMessageOrBuilder() : ((this.iOCANBusHighResolutionFuelConsumptionTotalFuelUsed_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusHighResolutionFuelConsumptionTotalFuelUsed_);
/*       */       }
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOCANBusHighResolutionFuelConsumptionTotalFuelUsedFieldBuilder() {
/*       */         if (this.iOCANBusHighResolutionFuelConsumptionTotalFuelUsedBuilder_ == null) {
/*       */           this.iOCANBusHighResolutionFuelConsumptionTotalFuelUsedBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOCANBusHighResolutionFuelConsumptionTotalFuelUsed(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.iOCANBusHighResolutionFuelConsumptionTotalFuelUsed_ = null;
/*       */         } 
/*       */         return this.iOCANBusHighResolutionFuelConsumptionTotalFuelUsedBuilder_;
/*       */       }
/*       */       
/*       */       public boolean hasIOCANBusDashDisplayFuelLevel1() {
/*       */         return (this.iOCANBusDashDisplayFuelLevel1Builder_ != null || this.iOCANBusDashDisplayFuelLevel1_ != null);
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO getIOCANBusDashDisplayFuelLevel1() {
/*       */         return (this.iOCANBusDashDisplayFuelLevel1Builder_ == null) ? ((this.iOCANBusDashDisplayFuelLevel1_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusDashDisplayFuelLevel1_) : (DolphinConfig.IO)this.iOCANBusDashDisplayFuelLevel1Builder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusDashDisplayFuelLevel1(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusDashDisplayFuelLevel1Builder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.iOCANBusDashDisplayFuelLevel1_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusDashDisplayFuelLevel1Builder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusDashDisplayFuelLevel1(DolphinConfig.IO.Builder builderForValue) {
/*       */         if (this.iOCANBusDashDisplayFuelLevel1Builder_ == null) {
/*       */           this.iOCANBusDashDisplayFuelLevel1_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusDashDisplayFuelLevel1Builder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeIOCANBusDashDisplayFuelLevel1(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusDashDisplayFuelLevel1Builder_ == null) {
/*       */           if (this.iOCANBusDashDisplayFuelLevel1_ != null) {
/*       */             this.iOCANBusDashDisplayFuelLevel1_ = DolphinConfig.IO.newBuilder(this.iOCANBusDashDisplayFuelLevel1_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.iOCANBusDashDisplayFuelLevel1_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusDashDisplayFuelLevel1Builder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearIOCANBusDashDisplayFuelLevel1() {
/*       */         if (this.iOCANBusDashDisplayFuelLevel1Builder_ == null) {
/*       */           this.iOCANBusDashDisplayFuelLevel1_ = null;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusDashDisplayFuelLevel1_ = null;
/*       */           this.iOCANBusDashDisplayFuelLevel1Builder_ = null;
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOCANBusDashDisplayFuelLevel1Builder() {
/*       */         onChanged();
/*       */         return (DolphinConfig.IO.Builder)getIOCANBusDashDisplayFuelLevel1FieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOCANBusDashDisplayFuelLevel1OrBuilder() {
/*       */         return (this.iOCANBusDashDisplayFuelLevel1Builder_ != null) ? (DolphinConfig.IOOrBuilder)this.iOCANBusDashDisplayFuelLevel1Builder_.getMessageOrBuilder() : ((this.iOCANBusDashDisplayFuelLevel1_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusDashDisplayFuelLevel1_);
/*       */       }
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOCANBusDashDisplayFuelLevel1FieldBuilder() {
/*       */         if (this.iOCANBusDashDisplayFuelLevel1Builder_ == null) {
/*       */           this.iOCANBusDashDisplayFuelLevel1Builder_ = new SingleFieldBuilderV3((AbstractMessage)getIOCANBusDashDisplayFuelLevel1(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.iOCANBusDashDisplayFuelLevel1_ = null;
/*       */         } 
/*       */         return this.iOCANBusDashDisplayFuelLevel1Builder_;
/*       */       }
/*       */       
/*       */       public boolean hasIOCANBusAmbientConditionsAmbientAirTemperature() {
/*       */         return (this.iOCANBusAmbientConditionsAmbientAirTemperatureBuilder_ != null || this.iOCANBusAmbientConditionsAmbientAirTemperature_ != null);
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO getIOCANBusAmbientConditionsAmbientAirTemperature() {
/*       */         return (this.iOCANBusAmbientConditionsAmbientAirTemperatureBuilder_ == null) ? ((this.iOCANBusAmbientConditionsAmbientAirTemperature_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusAmbientConditionsAmbientAirTemperature_) : (DolphinConfig.IO)this.iOCANBusAmbientConditionsAmbientAirTemperatureBuilder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusAmbientConditionsAmbientAirTemperature(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusAmbientConditionsAmbientAirTemperatureBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.iOCANBusAmbientConditionsAmbientAirTemperature_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusAmbientConditionsAmbientAirTemperatureBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusAmbientConditionsAmbientAirTemperature(DolphinConfig.IO.Builder builderForValue) {
/*       */         if (this.iOCANBusAmbientConditionsAmbientAirTemperatureBuilder_ == null) {
/*       */           this.iOCANBusAmbientConditionsAmbientAirTemperature_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusAmbientConditionsAmbientAirTemperatureBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeIOCANBusAmbientConditionsAmbientAirTemperature(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusAmbientConditionsAmbientAirTemperatureBuilder_ == null) {
/*       */           if (this.iOCANBusAmbientConditionsAmbientAirTemperature_ != null) {
/*       */             this.iOCANBusAmbientConditionsAmbientAirTemperature_ = DolphinConfig.IO.newBuilder(this.iOCANBusAmbientConditionsAmbientAirTemperature_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.iOCANBusAmbientConditionsAmbientAirTemperature_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusAmbientConditionsAmbientAirTemperatureBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearIOCANBusAmbientConditionsAmbientAirTemperature() {
/*       */         if (this.iOCANBusAmbientConditionsAmbientAirTemperatureBuilder_ == null) {
/*       */           this.iOCANBusAmbientConditionsAmbientAirTemperature_ = null;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusAmbientConditionsAmbientAirTemperature_ = null;
/*       */           this.iOCANBusAmbientConditionsAmbientAirTemperatureBuilder_ = null;
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOCANBusAmbientConditionsAmbientAirTemperatureBuilder() {
/*       */         onChanged();
/*       */         return (DolphinConfig.IO.Builder)getIOCANBusAmbientConditionsAmbientAirTemperatureFieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOCANBusAmbientConditionsAmbientAirTemperatureOrBuilder() {
/*       */         return (this.iOCANBusAmbientConditionsAmbientAirTemperatureBuilder_ != null) ? (DolphinConfig.IOOrBuilder)this.iOCANBusAmbientConditionsAmbientAirTemperatureBuilder_.getMessageOrBuilder() : ((this.iOCANBusAmbientConditionsAmbientAirTemperature_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusAmbientConditionsAmbientAirTemperature_);
/*       */       }
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOCANBusAmbientConditionsAmbientAirTemperatureFieldBuilder() {
/*       */         if (this.iOCANBusAmbientConditionsAmbientAirTemperatureBuilder_ == null) {
/*       */           this.iOCANBusAmbientConditionsAmbientAirTemperatureBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOCANBusAmbientConditionsAmbientAirTemperature(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.iOCANBusAmbientConditionsAmbientAirTemperature_ = null;
/*       */         } 
/*       */         return this.iOCANBusAmbientConditionsAmbientAirTemperatureBuilder_;
/*       */       }
/*       */       
/*       */       public boolean hasIOCANBusFuelEconomyFuelRate() {
/*       */         return (this.iOCANBusFuelEconomyFuelRateBuilder_ != null || this.iOCANBusFuelEconomyFuelRate_ != null);
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO getIOCANBusFuelEconomyFuelRate() {
/*       */         return (this.iOCANBusFuelEconomyFuelRateBuilder_ == null) ? ((this.iOCANBusFuelEconomyFuelRate_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusFuelEconomyFuelRate_) : (DolphinConfig.IO)this.iOCANBusFuelEconomyFuelRateBuilder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusFuelEconomyFuelRate(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusFuelEconomyFuelRateBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.iOCANBusFuelEconomyFuelRate_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusFuelEconomyFuelRateBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusFuelEconomyFuelRate(DolphinConfig.IO.Builder builderForValue) {
/*       */         if (this.iOCANBusFuelEconomyFuelRateBuilder_ == null) {
/*       */           this.iOCANBusFuelEconomyFuelRate_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusFuelEconomyFuelRateBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeIOCANBusFuelEconomyFuelRate(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusFuelEconomyFuelRateBuilder_ == null) {
/*       */           if (this.iOCANBusFuelEconomyFuelRate_ != null) {
/*       */             this.iOCANBusFuelEconomyFuelRate_ = DolphinConfig.IO.newBuilder(this.iOCANBusFuelEconomyFuelRate_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.iOCANBusFuelEconomyFuelRate_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusFuelEconomyFuelRateBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearIOCANBusFuelEconomyFuelRate() {
/*       */         if (this.iOCANBusFuelEconomyFuelRateBuilder_ == null) {
/*       */           this.iOCANBusFuelEconomyFuelRate_ = null;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusFuelEconomyFuelRate_ = null;
/*       */           this.iOCANBusFuelEconomyFuelRateBuilder_ = null;
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOCANBusFuelEconomyFuelRateBuilder() {
/*       */         onChanged();
/*       */         return (DolphinConfig.IO.Builder)getIOCANBusFuelEconomyFuelRateFieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOCANBusFuelEconomyFuelRateOrBuilder() {
/*       */         return (this.iOCANBusFuelEconomyFuelRateBuilder_ != null) ? (DolphinConfig.IOOrBuilder)this.iOCANBusFuelEconomyFuelRateBuilder_.getMessageOrBuilder() : ((this.iOCANBusFuelEconomyFuelRate_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusFuelEconomyFuelRate_);
/*       */       }
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOCANBusFuelEconomyFuelRateFieldBuilder() {
/*       */         if (this.iOCANBusFuelEconomyFuelRateBuilder_ == null) {
/*       */           this.iOCANBusFuelEconomyFuelRateBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOCANBusFuelEconomyFuelRate(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.iOCANBusFuelEconomyFuelRate_ = null;
/*       */         } 
/*       */         return this.iOCANBusFuelEconomyFuelRateBuilder_;
/*       */       }
/*       */       
/*       */       public boolean hasIOCANBusFuelEconomyInstantaneousFuelEconomy() {
/*       */         return (this.iOCANBusFuelEconomyInstantaneousFuelEconomyBuilder_ != null || this.iOCANBusFuelEconomyInstantaneousFuelEconomy_ != null);
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO getIOCANBusFuelEconomyInstantaneousFuelEconomy() {
/*       */         return (this.iOCANBusFuelEconomyInstantaneousFuelEconomyBuilder_ == null) ? ((this.iOCANBusFuelEconomyInstantaneousFuelEconomy_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusFuelEconomyInstantaneousFuelEconomy_) : (DolphinConfig.IO)this.iOCANBusFuelEconomyInstantaneousFuelEconomyBuilder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusFuelEconomyInstantaneousFuelEconomy(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusFuelEconomyInstantaneousFuelEconomyBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.iOCANBusFuelEconomyInstantaneousFuelEconomy_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusFuelEconomyInstantaneousFuelEconomyBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusFuelEconomyInstantaneousFuelEconomy(DolphinConfig.IO.Builder builderForValue) {
/*       */         if (this.iOCANBusFuelEconomyInstantaneousFuelEconomyBuilder_ == null) {
/*       */           this.iOCANBusFuelEconomyInstantaneousFuelEconomy_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusFuelEconomyInstantaneousFuelEconomyBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeIOCANBusFuelEconomyInstantaneousFuelEconomy(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusFuelEconomyInstantaneousFuelEconomyBuilder_ == null) {
/*       */           if (this.iOCANBusFuelEconomyInstantaneousFuelEconomy_ != null) {
/*       */             this.iOCANBusFuelEconomyInstantaneousFuelEconomy_ = DolphinConfig.IO.newBuilder(this.iOCANBusFuelEconomyInstantaneousFuelEconomy_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.iOCANBusFuelEconomyInstantaneousFuelEconomy_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusFuelEconomyInstantaneousFuelEconomyBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearIOCANBusFuelEconomyInstantaneousFuelEconomy() {
/*       */         if (this.iOCANBusFuelEconomyInstantaneousFuelEconomyBuilder_ == null) {
/*       */           this.iOCANBusFuelEconomyInstantaneousFuelEconomy_ = null;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusFuelEconomyInstantaneousFuelEconomy_ = null;
/*       */           this.iOCANBusFuelEconomyInstantaneousFuelEconomyBuilder_ = null;
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOCANBusFuelEconomyInstantaneousFuelEconomyBuilder() {
/*       */         onChanged();
/*       */         return (DolphinConfig.IO.Builder)getIOCANBusFuelEconomyInstantaneousFuelEconomyFieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOCANBusFuelEconomyInstantaneousFuelEconomyOrBuilder() {
/*       */         return (this.iOCANBusFuelEconomyInstantaneousFuelEconomyBuilder_ != null) ? (DolphinConfig.IOOrBuilder)this.iOCANBusFuelEconomyInstantaneousFuelEconomyBuilder_.getMessageOrBuilder() : ((this.iOCANBusFuelEconomyInstantaneousFuelEconomy_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusFuelEconomyInstantaneousFuelEconomy_);
/*       */       }
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOCANBusFuelEconomyInstantaneousFuelEconomyFieldBuilder() {
/*       */         if (this.iOCANBusFuelEconomyInstantaneousFuelEconomyBuilder_ == null) {
/*       */           this.iOCANBusFuelEconomyInstantaneousFuelEconomyBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOCANBusFuelEconomyInstantaneousFuelEconomy(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.iOCANBusFuelEconomyInstantaneousFuelEconomy_ = null;
/*       */         } 
/*       */         return this.iOCANBusFuelEconomyInstantaneousFuelEconomyBuilder_;
/*       */       }
/*       */       
/*       */       public boolean hasIOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit1() {
/*       */         return (this.iOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit1Builder_ != null || this.iOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit1_ != null);
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO getIOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit1() {
/*       */         return (this.iOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit1Builder_ == null) ? ((this.iOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit1_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit1_) : (DolphinConfig.IO)this.iOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit1Builder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit1(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit1Builder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.iOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit1_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit1Builder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit1(DolphinConfig.IO.Builder builderForValue) {
/*       */         if (this.iOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit1Builder_ == null) {
/*       */           this.iOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit1_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit1Builder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeIOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit1(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit1Builder_ == null) {
/*       */           if (this.iOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit1_ != null) {
/*       */             this.iOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit1_ = DolphinConfig.IO.newBuilder(this.iOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit1_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.iOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit1_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit1Builder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearIOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit1() {
/*       */         if (this.iOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit1Builder_ == null) {
/*       */           this.iOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit1_ = null;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit1_ = null;
/*       */           this.iOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit1Builder_ = null;
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit1Builder() {
/*       */         onChanged();
/*       */         return (DolphinConfig.IO.Builder)getIOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit1FieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit1OrBuilder() {
/*       */         return (this.iOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit1Builder_ != null) ? (DolphinConfig.IOOrBuilder)this.iOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit1Builder_.getMessageOrBuilder() : ((this.iOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit1_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit1_);
/*       */       }
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit1FieldBuilder() {
/*       */         if (this.iOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit1Builder_ == null) {
/*       */           this.iOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit1Builder_ = new SingleFieldBuilderV3((AbstractMessage)getIOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit1(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.iOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit1_ = null;
/*       */         } 
/*       */         return this.iOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit1Builder_;
/*       */       }
/*       */       
/*       */       public boolean hasIOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit2() {
/*       */         return (this.iOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit2Builder_ != null || this.iOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit2_ != null);
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO getIOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit2() {
/*       */         return (this.iOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit2Builder_ == null) ? ((this.iOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit2_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit2_) : (DolphinConfig.IO)this.iOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit2Builder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit2(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit2Builder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.iOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit2_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit2Builder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit2(DolphinConfig.IO.Builder builderForValue) {
/*       */         if (this.iOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit2Builder_ == null) {
/*       */           this.iOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit2_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit2Builder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeIOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit2(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit2Builder_ == null) {
/*       */           if (this.iOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit2_ != null) {
/*       */             this.iOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit2_ = DolphinConfig.IO.newBuilder(this.iOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit2_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.iOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit2_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit2Builder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearIOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit2() {
/*       */         if (this.iOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit2Builder_ == null) {
/*       */           this.iOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit2_ = null;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit2_ = null;
/*       */           this.iOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit2Builder_ = null;
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit2Builder() {
/*       */         onChanged();
/*       */         return (DolphinConfig.IO.Builder)getIOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit2FieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit2OrBuilder() {
/*       */         return (this.iOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit2Builder_ != null) ? (DolphinConfig.IOOrBuilder)this.iOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit2Builder_.getMessageOrBuilder() : ((this.iOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit2_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit2_);
/*       */       }
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit2FieldBuilder() {
/*       */         if (this.iOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit2Builder_ == null) {
/*       */           this.iOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit2Builder_ = new SingleFieldBuilderV3((AbstractMessage)getIOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit2(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.iOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit2_ = null;
/*       */         } 
/*       */         return this.iOCANBusAirSupplyPressureServiceBrakeAirPressureCircuit2Builder_;
/*       */       }
/*       */       
/*       */       public boolean hasIOCANBusAftertreatmentDieselExhaustFluidTankInformationTank1Level() {
/*       */         return (this.iOCANBusAftertreatmentDieselExhaustFluidTankInformationTank1LevelBuilder_ != null || this.iOCANBusAftertreatmentDieselExhaustFluidTankInformationTank1Level_ != null);
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO getIOCANBusAftertreatmentDieselExhaustFluidTankInformationTank1Level() {
/*       */         return (this.iOCANBusAftertreatmentDieselExhaustFluidTankInformationTank1LevelBuilder_ == null) ? ((this.iOCANBusAftertreatmentDieselExhaustFluidTankInformationTank1Level_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusAftertreatmentDieselExhaustFluidTankInformationTank1Level_) : (DolphinConfig.IO)this.iOCANBusAftertreatmentDieselExhaustFluidTankInformationTank1LevelBuilder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusAftertreatmentDieselExhaustFluidTankInformationTank1Level(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusAftertreatmentDieselExhaustFluidTankInformationTank1LevelBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.iOCANBusAftertreatmentDieselExhaustFluidTankInformationTank1Level_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusAftertreatmentDieselExhaustFluidTankInformationTank1LevelBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusAftertreatmentDieselExhaustFluidTankInformationTank1Level(DolphinConfig.IO.Builder builderForValue) {
/*       */         if (this.iOCANBusAftertreatmentDieselExhaustFluidTankInformationTank1LevelBuilder_ == null) {
/*       */           this.iOCANBusAftertreatmentDieselExhaustFluidTankInformationTank1Level_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusAftertreatmentDieselExhaustFluidTankInformationTank1LevelBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeIOCANBusAftertreatmentDieselExhaustFluidTankInformationTank1Level(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusAftertreatmentDieselExhaustFluidTankInformationTank1LevelBuilder_ == null) {
/*       */           if (this.iOCANBusAftertreatmentDieselExhaustFluidTankInformationTank1Level_ != null) {
/*       */             this.iOCANBusAftertreatmentDieselExhaustFluidTankInformationTank1Level_ = DolphinConfig.IO.newBuilder(this.iOCANBusAftertreatmentDieselExhaustFluidTankInformationTank1Level_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.iOCANBusAftertreatmentDieselExhaustFluidTankInformationTank1Level_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusAftertreatmentDieselExhaustFluidTankInformationTank1LevelBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearIOCANBusAftertreatmentDieselExhaustFluidTankInformationTank1Level() {
/*       */         if (this.iOCANBusAftertreatmentDieselExhaustFluidTankInformationTank1LevelBuilder_ == null) {
/*       */           this.iOCANBusAftertreatmentDieselExhaustFluidTankInformationTank1Level_ = null;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusAftertreatmentDieselExhaustFluidTankInformationTank1Level_ = null;
/*       */           this.iOCANBusAftertreatmentDieselExhaustFluidTankInformationTank1LevelBuilder_ = null;
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOCANBusAftertreatmentDieselExhaustFluidTankInformationTank1LevelBuilder() {
/*       */         onChanged();
/*       */         return (DolphinConfig.IO.Builder)getIOCANBusAftertreatmentDieselExhaustFluidTankInformationTank1LevelFieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOCANBusAftertreatmentDieselExhaustFluidTankInformationTank1LevelOrBuilder() {
/*       */         return (this.iOCANBusAftertreatmentDieselExhaustFluidTankInformationTank1LevelBuilder_ != null) ? (DolphinConfig.IOOrBuilder)this.iOCANBusAftertreatmentDieselExhaustFluidTankInformationTank1LevelBuilder_.getMessageOrBuilder() : ((this.iOCANBusAftertreatmentDieselExhaustFluidTankInformationTank1Level_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusAftertreatmentDieselExhaustFluidTankInformationTank1Level_);
/*       */       }
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOCANBusAftertreatmentDieselExhaustFluidTankInformationTank1LevelFieldBuilder() {
/*       */         if (this.iOCANBusAftertreatmentDieselExhaustFluidTankInformationTank1LevelBuilder_ == null) {
/*       */           this.iOCANBusAftertreatmentDieselExhaustFluidTankInformationTank1LevelBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOCANBusAftertreatmentDieselExhaustFluidTankInformationTank1Level(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.iOCANBusAftertreatmentDieselExhaustFluidTankInformationTank1Level_ = null;
/*       */         } 
/*       */         return this.iOCANBusAftertreatmentDieselExhaustFluidTankInformationTank1LevelBuilder_;
/*       */       }
/*       */       
/*       */       public boolean hasIOCANBusTruckBusElectronicEngineController2AcceleratorPedalPosition1() {
/*       */         return (this.iOCANBusTruckBusElectronicEngineController2AcceleratorPedalPosition1Builder_ != null || this.iOCANBusTruckBusElectronicEngineController2AcceleratorPedalPosition1_ != null);
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO getIOCANBusTruckBusElectronicEngineController2AcceleratorPedalPosition1() {
/*       */         return (this.iOCANBusTruckBusElectronicEngineController2AcceleratorPedalPosition1Builder_ == null) ? ((this.iOCANBusTruckBusElectronicEngineController2AcceleratorPedalPosition1_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusTruckBusElectronicEngineController2AcceleratorPedalPosition1_) : (DolphinConfig.IO)this.iOCANBusTruckBusElectronicEngineController2AcceleratorPedalPosition1Builder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusTruckBusElectronicEngineController2AcceleratorPedalPosition1(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusTruckBusElectronicEngineController2AcceleratorPedalPosition1Builder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.iOCANBusTruckBusElectronicEngineController2AcceleratorPedalPosition1_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTruckBusElectronicEngineController2AcceleratorPedalPosition1Builder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusTruckBusElectronicEngineController2AcceleratorPedalPosition1(DolphinConfig.IO.Builder builderForValue) {
/*       */         if (this.iOCANBusTruckBusElectronicEngineController2AcceleratorPedalPosition1Builder_ == null) {
/*       */           this.iOCANBusTruckBusElectronicEngineController2AcceleratorPedalPosition1_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTruckBusElectronicEngineController2AcceleratorPedalPosition1Builder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeIOCANBusTruckBusElectronicEngineController2AcceleratorPedalPosition1(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusTruckBusElectronicEngineController2AcceleratorPedalPosition1Builder_ == null) {
/*       */           if (this.iOCANBusTruckBusElectronicEngineController2AcceleratorPedalPosition1_ != null) {
/*       */             this.iOCANBusTruckBusElectronicEngineController2AcceleratorPedalPosition1_ = DolphinConfig.IO.newBuilder(this.iOCANBusTruckBusElectronicEngineController2AcceleratorPedalPosition1_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.iOCANBusTruckBusElectronicEngineController2AcceleratorPedalPosition1_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTruckBusElectronicEngineController2AcceleratorPedalPosition1Builder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearIOCANBusTruckBusElectronicEngineController2AcceleratorPedalPosition1() {
/*       */         if (this.iOCANBusTruckBusElectronicEngineController2AcceleratorPedalPosition1Builder_ == null) {
/*       */           this.iOCANBusTruckBusElectronicEngineController2AcceleratorPedalPosition1_ = null;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTruckBusElectronicEngineController2AcceleratorPedalPosition1_ = null;
/*       */           this.iOCANBusTruckBusElectronicEngineController2AcceleratorPedalPosition1Builder_ = null;
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOCANBusTruckBusElectronicEngineController2AcceleratorPedalPosition1Builder() {
/*       */         onChanged();
/*       */         return (DolphinConfig.IO.Builder)getIOCANBusTruckBusElectronicEngineController2AcceleratorPedalPosition1FieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOCANBusTruckBusElectronicEngineController2AcceleratorPedalPosition1OrBuilder() {
/*       */         return (this.iOCANBusTruckBusElectronicEngineController2AcceleratorPedalPosition1Builder_ != null) ? (DolphinConfig.IOOrBuilder)this.iOCANBusTruckBusElectronicEngineController2AcceleratorPedalPosition1Builder_.getMessageOrBuilder() : ((this.iOCANBusTruckBusElectronicEngineController2AcceleratorPedalPosition1_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusTruckBusElectronicEngineController2AcceleratorPedalPosition1_);
/*       */       }
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOCANBusTruckBusElectronicEngineController2AcceleratorPedalPosition1FieldBuilder() {
/*       */         if (this.iOCANBusTruckBusElectronicEngineController2AcceleratorPedalPosition1Builder_ == null) {
/*       */           this.iOCANBusTruckBusElectronicEngineController2AcceleratorPedalPosition1Builder_ = new SingleFieldBuilderV3((AbstractMessage)getIOCANBusTruckBusElectronicEngineController2AcceleratorPedalPosition1(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.iOCANBusTruckBusElectronicEngineController2AcceleratorPedalPosition1_ = null;
/*       */         } 
/*       */         return this.iOCANBusTruckBusElectronicEngineController2AcceleratorPedalPosition1Builder_;
/*       */       }
/*       */       
/*       */       public boolean hasIOCANBusTruckBusElectronicEngineController2EnginePercentLoad() {
/*       */         return (this.iOCANBusTruckBusElectronicEngineController2EnginePercentLoadBuilder_ != null || this.iOCANBusTruckBusElectronicEngineController2EnginePercentLoad_ != null);
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO getIOCANBusTruckBusElectronicEngineController2EnginePercentLoad() {
/*       */         return (this.iOCANBusTruckBusElectronicEngineController2EnginePercentLoadBuilder_ == null) ? ((this.iOCANBusTruckBusElectronicEngineController2EnginePercentLoad_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusTruckBusElectronicEngineController2EnginePercentLoad_) : (DolphinConfig.IO)this.iOCANBusTruckBusElectronicEngineController2EnginePercentLoadBuilder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusTruckBusElectronicEngineController2EnginePercentLoad(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusTruckBusElectronicEngineController2EnginePercentLoadBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.iOCANBusTruckBusElectronicEngineController2EnginePercentLoad_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTruckBusElectronicEngineController2EnginePercentLoadBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusTruckBusElectronicEngineController2EnginePercentLoad(DolphinConfig.IO.Builder builderForValue) {
/*       */         if (this.iOCANBusTruckBusElectronicEngineController2EnginePercentLoadBuilder_ == null) {
/*       */           this.iOCANBusTruckBusElectronicEngineController2EnginePercentLoad_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTruckBusElectronicEngineController2EnginePercentLoadBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeIOCANBusTruckBusElectronicEngineController2EnginePercentLoad(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusTruckBusElectronicEngineController2EnginePercentLoadBuilder_ == null) {
/*       */           if (this.iOCANBusTruckBusElectronicEngineController2EnginePercentLoad_ != null) {
/*       */             this.iOCANBusTruckBusElectronicEngineController2EnginePercentLoad_ = DolphinConfig.IO.newBuilder(this.iOCANBusTruckBusElectronicEngineController2EnginePercentLoad_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.iOCANBusTruckBusElectronicEngineController2EnginePercentLoad_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTruckBusElectronicEngineController2EnginePercentLoadBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearIOCANBusTruckBusElectronicEngineController2EnginePercentLoad() {
/*       */         if (this.iOCANBusTruckBusElectronicEngineController2EnginePercentLoadBuilder_ == null) {
/*       */           this.iOCANBusTruckBusElectronicEngineController2EnginePercentLoad_ = null;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTruckBusElectronicEngineController2EnginePercentLoad_ = null;
/*       */           this.iOCANBusTruckBusElectronicEngineController2EnginePercentLoadBuilder_ = null;
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOCANBusTruckBusElectronicEngineController2EnginePercentLoadBuilder() {
/*       */         onChanged();
/*       */         return (DolphinConfig.IO.Builder)getIOCANBusTruckBusElectronicEngineController2EnginePercentLoadFieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOCANBusTruckBusElectronicEngineController2EnginePercentLoadOrBuilder() {
/*       */         return (this.iOCANBusTruckBusElectronicEngineController2EnginePercentLoadBuilder_ != null) ? (DolphinConfig.IOOrBuilder)this.iOCANBusTruckBusElectronicEngineController2EnginePercentLoadBuilder_.getMessageOrBuilder() : ((this.iOCANBusTruckBusElectronicEngineController2EnginePercentLoad_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusTruckBusElectronicEngineController2EnginePercentLoad_);
/*       */       }
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOCANBusTruckBusElectronicEngineController2EnginePercentLoadFieldBuilder() {
/*       */         if (this.iOCANBusTruckBusElectronicEngineController2EnginePercentLoadBuilder_ == null) {
/*       */           this.iOCANBusTruckBusElectronicEngineController2EnginePercentLoadBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOCANBusTruckBusElectronicEngineController2EnginePercentLoad(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.iOCANBusTruckBusElectronicEngineController2EnginePercentLoad_ = null;
/*       */         } 
/*       */         return this.iOCANBusTruckBusElectronicEngineController2EnginePercentLoadBuilder_;
/*       */       }
/*       */       
/*       */       public boolean hasIOCANBusTruckVehicleWeightAxleWeight1() {
/*       */         return (this.iOCANBusTruckVehicleWeightAxleWeight1Builder_ != null || this.iOCANBusTruckVehicleWeightAxleWeight1_ != null);
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO getIOCANBusTruckVehicleWeightAxleWeight1() {
/*       */         return (this.iOCANBusTruckVehicleWeightAxleWeight1Builder_ == null) ? ((this.iOCANBusTruckVehicleWeightAxleWeight1_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusTruckVehicleWeightAxleWeight1_) : (DolphinConfig.IO)this.iOCANBusTruckVehicleWeightAxleWeight1Builder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusTruckVehicleWeightAxleWeight1(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusTruckVehicleWeightAxleWeight1Builder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.iOCANBusTruckVehicleWeightAxleWeight1_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTruckVehicleWeightAxleWeight1Builder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusTruckVehicleWeightAxleWeight1(DolphinConfig.IO.Builder builderForValue) {
/*       */         if (this.iOCANBusTruckVehicleWeightAxleWeight1Builder_ == null) {
/*       */           this.iOCANBusTruckVehicleWeightAxleWeight1_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTruckVehicleWeightAxleWeight1Builder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeIOCANBusTruckVehicleWeightAxleWeight1(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusTruckVehicleWeightAxleWeight1Builder_ == null) {
/*       */           if (this.iOCANBusTruckVehicleWeightAxleWeight1_ != null) {
/*       */             this.iOCANBusTruckVehicleWeightAxleWeight1_ = DolphinConfig.IO.newBuilder(this.iOCANBusTruckVehicleWeightAxleWeight1_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.iOCANBusTruckVehicleWeightAxleWeight1_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTruckVehicleWeightAxleWeight1Builder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearIOCANBusTruckVehicleWeightAxleWeight1() {
/*       */         if (this.iOCANBusTruckVehicleWeightAxleWeight1Builder_ == null) {
/*       */           this.iOCANBusTruckVehicleWeightAxleWeight1_ = null;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTruckVehicleWeightAxleWeight1_ = null;
/*       */           this.iOCANBusTruckVehicleWeightAxleWeight1Builder_ = null;
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOCANBusTruckVehicleWeightAxleWeight1Builder() {
/*       */         onChanged();
/*       */         return (DolphinConfig.IO.Builder)getIOCANBusTruckVehicleWeightAxleWeight1FieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOCANBusTruckVehicleWeightAxleWeight1OrBuilder() {
/*       */         return (this.iOCANBusTruckVehicleWeightAxleWeight1Builder_ != null) ? (DolphinConfig.IOOrBuilder)this.iOCANBusTruckVehicleWeightAxleWeight1Builder_.getMessageOrBuilder() : ((this.iOCANBusTruckVehicleWeightAxleWeight1_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusTruckVehicleWeightAxleWeight1_);
/*       */       }
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOCANBusTruckVehicleWeightAxleWeight1FieldBuilder() {
/*       */         if (this.iOCANBusTruckVehicleWeightAxleWeight1Builder_ == null) {
/*       */           this.iOCANBusTruckVehicleWeightAxleWeight1Builder_ = new SingleFieldBuilderV3((AbstractMessage)getIOCANBusTruckVehicleWeightAxleWeight1(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.iOCANBusTruckVehicleWeightAxleWeight1_ = null;
/*       */         } 
/*       */         return this.iOCANBusTruckVehicleWeightAxleWeight1Builder_;
/*       */       }
/*       */       
/*       */       public boolean hasIOCANBusTruckVehicleWeightAxleWeight2() {
/*       */         return (this.iOCANBusTruckVehicleWeightAxleWeight2Builder_ != null || this.iOCANBusTruckVehicleWeightAxleWeight2_ != null);
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO getIOCANBusTruckVehicleWeightAxleWeight2() {
/*       */         return (this.iOCANBusTruckVehicleWeightAxleWeight2Builder_ == null) ? ((this.iOCANBusTruckVehicleWeightAxleWeight2_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusTruckVehicleWeightAxleWeight2_) : (DolphinConfig.IO)this.iOCANBusTruckVehicleWeightAxleWeight2Builder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusTruckVehicleWeightAxleWeight2(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusTruckVehicleWeightAxleWeight2Builder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.iOCANBusTruckVehicleWeightAxleWeight2_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTruckVehicleWeightAxleWeight2Builder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusTruckVehicleWeightAxleWeight2(DolphinConfig.IO.Builder builderForValue) {
/*       */         if (this.iOCANBusTruckVehicleWeightAxleWeight2Builder_ == null) {
/*       */           this.iOCANBusTruckVehicleWeightAxleWeight2_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTruckVehicleWeightAxleWeight2Builder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeIOCANBusTruckVehicleWeightAxleWeight2(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusTruckVehicleWeightAxleWeight2Builder_ == null) {
/*       */           if (this.iOCANBusTruckVehicleWeightAxleWeight2_ != null) {
/*       */             this.iOCANBusTruckVehicleWeightAxleWeight2_ = DolphinConfig.IO.newBuilder(this.iOCANBusTruckVehicleWeightAxleWeight2_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.iOCANBusTruckVehicleWeightAxleWeight2_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTruckVehicleWeightAxleWeight2Builder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearIOCANBusTruckVehicleWeightAxleWeight2() {
/*       */         if (this.iOCANBusTruckVehicleWeightAxleWeight2Builder_ == null) {
/*       */           this.iOCANBusTruckVehicleWeightAxleWeight2_ = null;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTruckVehicleWeightAxleWeight2_ = null;
/*       */           this.iOCANBusTruckVehicleWeightAxleWeight2Builder_ = null;
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOCANBusTruckVehicleWeightAxleWeight2Builder() {
/*       */         onChanged();
/*       */         return (DolphinConfig.IO.Builder)getIOCANBusTruckVehicleWeightAxleWeight2FieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOCANBusTruckVehicleWeightAxleWeight2OrBuilder() {
/*       */         return (this.iOCANBusTruckVehicleWeightAxleWeight2Builder_ != null) ? (DolphinConfig.IOOrBuilder)this.iOCANBusTruckVehicleWeightAxleWeight2Builder_.getMessageOrBuilder() : ((this.iOCANBusTruckVehicleWeightAxleWeight2_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusTruckVehicleWeightAxleWeight2_);
/*       */       }
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOCANBusTruckVehicleWeightAxleWeight2FieldBuilder() {
/*       */         if (this.iOCANBusTruckVehicleWeightAxleWeight2Builder_ == null) {
/*       */           this.iOCANBusTruckVehicleWeightAxleWeight2Builder_ = new SingleFieldBuilderV3((AbstractMessage)getIOCANBusTruckVehicleWeightAxleWeight2(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.iOCANBusTruckVehicleWeightAxleWeight2_ = null;
/*       */         } 
/*       */         return this.iOCANBusTruckVehicleWeightAxleWeight2Builder_;
/*       */       }
/*       */       
/*       */       public boolean hasIOCANBusTruckVehicleWeightAxleWeight3() {
/*       */         return (this.iOCANBusTruckVehicleWeightAxleWeight3Builder_ != null || this.iOCANBusTruckVehicleWeightAxleWeight3_ != null);
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO getIOCANBusTruckVehicleWeightAxleWeight3() {
/*       */         return (this.iOCANBusTruckVehicleWeightAxleWeight3Builder_ == null) ? ((this.iOCANBusTruckVehicleWeightAxleWeight3_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusTruckVehicleWeightAxleWeight3_) : (DolphinConfig.IO)this.iOCANBusTruckVehicleWeightAxleWeight3Builder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusTruckVehicleWeightAxleWeight3(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusTruckVehicleWeightAxleWeight3Builder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.iOCANBusTruckVehicleWeightAxleWeight3_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTruckVehicleWeightAxleWeight3Builder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusTruckVehicleWeightAxleWeight3(DolphinConfig.IO.Builder builderForValue) {
/*       */         if (this.iOCANBusTruckVehicleWeightAxleWeight3Builder_ == null) {
/*       */           this.iOCANBusTruckVehicleWeightAxleWeight3_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTruckVehicleWeightAxleWeight3Builder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeIOCANBusTruckVehicleWeightAxleWeight3(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusTruckVehicleWeightAxleWeight3Builder_ == null) {
/*       */           if (this.iOCANBusTruckVehicleWeightAxleWeight3_ != null) {
/*       */             this.iOCANBusTruckVehicleWeightAxleWeight3_ = DolphinConfig.IO.newBuilder(this.iOCANBusTruckVehicleWeightAxleWeight3_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.iOCANBusTruckVehicleWeightAxleWeight3_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTruckVehicleWeightAxleWeight3Builder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearIOCANBusTruckVehicleWeightAxleWeight3() {
/*       */         if (this.iOCANBusTruckVehicleWeightAxleWeight3Builder_ == null) {
/*       */           this.iOCANBusTruckVehicleWeightAxleWeight3_ = null;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTruckVehicleWeightAxleWeight3_ = null;
/*       */           this.iOCANBusTruckVehicleWeightAxleWeight3Builder_ = null;
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOCANBusTruckVehicleWeightAxleWeight3Builder() {
/*       */         onChanged();
/*       */         return (DolphinConfig.IO.Builder)getIOCANBusTruckVehicleWeightAxleWeight3FieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOCANBusTruckVehicleWeightAxleWeight3OrBuilder() {
/*       */         return (this.iOCANBusTruckVehicleWeightAxleWeight3Builder_ != null) ? (DolphinConfig.IOOrBuilder)this.iOCANBusTruckVehicleWeightAxleWeight3Builder_.getMessageOrBuilder() : ((this.iOCANBusTruckVehicleWeightAxleWeight3_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusTruckVehicleWeightAxleWeight3_);
/*       */       }
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOCANBusTruckVehicleWeightAxleWeight3FieldBuilder() {
/*       */         if (this.iOCANBusTruckVehicleWeightAxleWeight3Builder_ == null) {
/*       */           this.iOCANBusTruckVehicleWeightAxleWeight3Builder_ = new SingleFieldBuilderV3((AbstractMessage)getIOCANBusTruckVehicleWeightAxleWeight3(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.iOCANBusTruckVehicleWeightAxleWeight3_ = null;
/*       */         } 
/*       */         return this.iOCANBusTruckVehicleWeightAxleWeight3Builder_;
/*       */       }
/*       */       
/*       */       public boolean hasIOCANBusTruckServiceInformationServiceDistance() {
/*       */         return (this.iOCANBusTruckServiceInformationServiceDistanceBuilder_ != null || this.iOCANBusTruckServiceInformationServiceDistance_ != null);
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO getIOCANBusTruckServiceInformationServiceDistance() {
/*       */         return (this.iOCANBusTruckServiceInformationServiceDistanceBuilder_ == null) ? ((this.iOCANBusTruckServiceInformationServiceDistance_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusTruckServiceInformationServiceDistance_) : (DolphinConfig.IO)this.iOCANBusTruckServiceInformationServiceDistanceBuilder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusTruckServiceInformationServiceDistance(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusTruckServiceInformationServiceDistanceBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.iOCANBusTruckServiceInformationServiceDistance_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTruckServiceInformationServiceDistanceBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusTruckServiceInformationServiceDistance(DolphinConfig.IO.Builder builderForValue) {
/*       */         if (this.iOCANBusTruckServiceInformationServiceDistanceBuilder_ == null) {
/*       */           this.iOCANBusTruckServiceInformationServiceDistance_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTruckServiceInformationServiceDistanceBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeIOCANBusTruckServiceInformationServiceDistance(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusTruckServiceInformationServiceDistanceBuilder_ == null) {
/*       */           if (this.iOCANBusTruckServiceInformationServiceDistance_ != null) {
/*       */             this.iOCANBusTruckServiceInformationServiceDistance_ = DolphinConfig.IO.newBuilder(this.iOCANBusTruckServiceInformationServiceDistance_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.iOCANBusTruckServiceInformationServiceDistance_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTruckServiceInformationServiceDistanceBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearIOCANBusTruckServiceInformationServiceDistance() {
/*       */         if (this.iOCANBusTruckServiceInformationServiceDistanceBuilder_ == null) {
/*       */           this.iOCANBusTruckServiceInformationServiceDistance_ = null;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTruckServiceInformationServiceDistance_ = null;
/*       */           this.iOCANBusTruckServiceInformationServiceDistanceBuilder_ = null;
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOCANBusTruckServiceInformationServiceDistanceBuilder() {
/*       */         onChanged();
/*       */         return (DolphinConfig.IO.Builder)getIOCANBusTruckServiceInformationServiceDistanceFieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOCANBusTruckServiceInformationServiceDistanceOrBuilder() {
/*       */         return (this.iOCANBusTruckServiceInformationServiceDistanceBuilder_ != null) ? (DolphinConfig.IOOrBuilder)this.iOCANBusTruckServiceInformationServiceDistanceBuilder_.getMessageOrBuilder() : ((this.iOCANBusTruckServiceInformationServiceDistance_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusTruckServiceInformationServiceDistance_);
/*       */       }
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOCANBusTruckServiceInformationServiceDistanceFieldBuilder() {
/*       */         if (this.iOCANBusTruckServiceInformationServiceDistanceBuilder_ == null) {
/*       */           this.iOCANBusTruckServiceInformationServiceDistanceBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOCANBusTruckServiceInformationServiceDistance(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.iOCANBusTruckServiceInformationServiceDistance_ = null;
/*       */         } 
/*       */         return this.iOCANBusTruckServiceInformationServiceDistanceBuilder_;
/*       */       }
/*       */       
/*       */       public boolean hasIOCANBusTruckPTODriveEngagementPTOEngageStat() {
/*       */         return (this.iOCANBusTruckPTODriveEngagementPTOEngageStatBuilder_ != null || this.iOCANBusTruckPTODriveEngagementPTOEngageStat_ != null);
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO getIOCANBusTruckPTODriveEngagementPTOEngageStat() {
/*       */         return (this.iOCANBusTruckPTODriveEngagementPTOEngageStatBuilder_ == null) ? ((this.iOCANBusTruckPTODriveEngagementPTOEngageStat_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusTruckPTODriveEngagementPTOEngageStat_) : (DolphinConfig.IO)this.iOCANBusTruckPTODriveEngagementPTOEngageStatBuilder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusTruckPTODriveEngagementPTOEngageStat(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusTruckPTODriveEngagementPTOEngageStatBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.iOCANBusTruckPTODriveEngagementPTOEngageStat_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTruckPTODriveEngagementPTOEngageStatBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusTruckPTODriveEngagementPTOEngageStat(DolphinConfig.IO.Builder builderForValue) {
/*       */         if (this.iOCANBusTruckPTODriveEngagementPTOEngageStatBuilder_ == null) {
/*       */           this.iOCANBusTruckPTODriveEngagementPTOEngageStat_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTruckPTODriveEngagementPTOEngageStatBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeIOCANBusTruckPTODriveEngagementPTOEngageStat(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusTruckPTODriveEngagementPTOEngageStatBuilder_ == null) {
/*       */           if (this.iOCANBusTruckPTODriveEngagementPTOEngageStat_ != null) {
/*       */             this.iOCANBusTruckPTODriveEngagementPTOEngageStat_ = DolphinConfig.IO.newBuilder(this.iOCANBusTruckPTODriveEngagementPTOEngageStat_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.iOCANBusTruckPTODriveEngagementPTOEngageStat_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTruckPTODriveEngagementPTOEngageStatBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearIOCANBusTruckPTODriveEngagementPTOEngageStat() {
/*       */         if (this.iOCANBusTruckPTODriveEngagementPTOEngageStatBuilder_ == null) {
/*       */           this.iOCANBusTruckPTODriveEngagementPTOEngageStat_ = null;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTruckPTODriveEngagementPTOEngageStat_ = null;
/*       */           this.iOCANBusTruckPTODriveEngagementPTOEngageStatBuilder_ = null;
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOCANBusTruckPTODriveEngagementPTOEngageStatBuilder() {
/*       */         onChanged();
/*       */         return (DolphinConfig.IO.Builder)getIOCANBusTruckPTODriveEngagementPTOEngageStatFieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOCANBusTruckPTODriveEngagementPTOEngageStatOrBuilder() {
/*       */         return (this.iOCANBusTruckPTODriveEngagementPTOEngageStatBuilder_ != null) ? (DolphinConfig.IOOrBuilder)this.iOCANBusTruckPTODriveEngagementPTOEngageStatBuilder_.getMessageOrBuilder() : ((this.iOCANBusTruckPTODriveEngagementPTOEngageStat_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusTruckPTODriveEngagementPTOEngageStat_);
/*       */       }
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOCANBusTruckPTODriveEngagementPTOEngageStatFieldBuilder() {
/*       */         if (this.iOCANBusTruckPTODriveEngagementPTOEngageStatBuilder_ == null) {
/*       */           this.iOCANBusTruckPTODriveEngagementPTOEngageStatBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOCANBusTruckPTODriveEngagementPTOEngageStat(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.iOCANBusTruckPTODriveEngagementPTOEngageStat_ = null;
/*       */         } 
/*       */         return this.iOCANBusTruckPTODriveEngagementPTOEngageStatBuilder_;
/*       */       }
/*       */       
/*       */       public boolean hasIOCANBusTruckCombinationVehicleWeightGrossCombinationVehicleWeight() {
/*       */         return (this.iOCANBusTruckCombinationVehicleWeightGrossCombinationVehicleWeightBuilder_ != null || this.iOCANBusTruckCombinationVehicleWeightGrossCombinationVehicleWeight_ != null);
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO getIOCANBusTruckCombinationVehicleWeightGrossCombinationVehicleWeight() {
/*       */         return (this.iOCANBusTruckCombinationVehicleWeightGrossCombinationVehicleWeightBuilder_ == null) ? ((this.iOCANBusTruckCombinationVehicleWeightGrossCombinationVehicleWeight_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusTruckCombinationVehicleWeightGrossCombinationVehicleWeight_) : (DolphinConfig.IO)this.iOCANBusTruckCombinationVehicleWeightGrossCombinationVehicleWeightBuilder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusTruckCombinationVehicleWeightGrossCombinationVehicleWeight(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusTruckCombinationVehicleWeightGrossCombinationVehicleWeightBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.iOCANBusTruckCombinationVehicleWeightGrossCombinationVehicleWeight_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTruckCombinationVehicleWeightGrossCombinationVehicleWeightBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusTruckCombinationVehicleWeightGrossCombinationVehicleWeight(DolphinConfig.IO.Builder builderForValue) {
/*       */         if (this.iOCANBusTruckCombinationVehicleWeightGrossCombinationVehicleWeightBuilder_ == null) {
/*       */           this.iOCANBusTruckCombinationVehicleWeightGrossCombinationVehicleWeight_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTruckCombinationVehicleWeightGrossCombinationVehicleWeightBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeIOCANBusTruckCombinationVehicleWeightGrossCombinationVehicleWeight(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusTruckCombinationVehicleWeightGrossCombinationVehicleWeightBuilder_ == null) {
/*       */           if (this.iOCANBusTruckCombinationVehicleWeightGrossCombinationVehicleWeight_ != null) {
/*       */             this.iOCANBusTruckCombinationVehicleWeightGrossCombinationVehicleWeight_ = DolphinConfig.IO.newBuilder(this.iOCANBusTruckCombinationVehicleWeightGrossCombinationVehicleWeight_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.iOCANBusTruckCombinationVehicleWeightGrossCombinationVehicleWeight_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTruckCombinationVehicleWeightGrossCombinationVehicleWeightBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearIOCANBusTruckCombinationVehicleWeightGrossCombinationVehicleWeight() {
/*       */         if (this.iOCANBusTruckCombinationVehicleWeightGrossCombinationVehicleWeightBuilder_ == null) {
/*       */           this.iOCANBusTruckCombinationVehicleWeightGrossCombinationVehicleWeight_ = null;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTruckCombinationVehicleWeightGrossCombinationVehicleWeight_ = null;
/*       */           this.iOCANBusTruckCombinationVehicleWeightGrossCombinationVehicleWeightBuilder_ = null;
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOCANBusTruckCombinationVehicleWeightGrossCombinationVehicleWeightBuilder() {
/*       */         onChanged();
/*       */         return (DolphinConfig.IO.Builder)getIOCANBusTruckCombinationVehicleWeightGrossCombinationVehicleWeightFieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOCANBusTruckCombinationVehicleWeightGrossCombinationVehicleWeightOrBuilder() {
/*       */         return (this.iOCANBusTruckCombinationVehicleWeightGrossCombinationVehicleWeightBuilder_ != null) ? (DolphinConfig.IOOrBuilder)this.iOCANBusTruckCombinationVehicleWeightGrossCombinationVehicleWeightBuilder_.getMessageOrBuilder() : ((this.iOCANBusTruckCombinationVehicleWeightGrossCombinationVehicleWeight_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusTruckCombinationVehicleWeightGrossCombinationVehicleWeight_);
/*       */       }
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOCANBusTruckCombinationVehicleWeightGrossCombinationVehicleWeightFieldBuilder() {
/*       */         if (this.iOCANBusTruckCombinationVehicleWeightGrossCombinationVehicleWeightBuilder_ == null) {
/*       */           this.iOCANBusTruckCombinationVehicleWeightGrossCombinationVehicleWeightBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOCANBusTruckCombinationVehicleWeightGrossCombinationVehicleWeight(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.iOCANBusTruckCombinationVehicleWeightGrossCombinationVehicleWeight_ = null;
/*       */         } 
/*       */         return this.iOCANBusTruckCombinationVehicleWeightGrossCombinationVehicleWeightBuilder_;
/*       */       }
/*       */       
/*       */       public boolean hasIOCANBusTruckBusElectronicRetarderController1RetarderTorqueMode() {
/*       */         return (this.iOCANBusTruckBusElectronicRetarderController1RetarderTorqueModeBuilder_ != null || this.iOCANBusTruckBusElectronicRetarderController1RetarderTorqueMode_ != null);
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO getIOCANBusTruckBusElectronicRetarderController1RetarderTorqueMode() {
/*       */         return (this.iOCANBusTruckBusElectronicRetarderController1RetarderTorqueModeBuilder_ == null) ? ((this.iOCANBusTruckBusElectronicRetarderController1RetarderTorqueMode_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusTruckBusElectronicRetarderController1RetarderTorqueMode_) : (DolphinConfig.IO)this.iOCANBusTruckBusElectronicRetarderController1RetarderTorqueModeBuilder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusTruckBusElectronicRetarderController1RetarderTorqueMode(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusTruckBusElectronicRetarderController1RetarderTorqueModeBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.iOCANBusTruckBusElectronicRetarderController1RetarderTorqueMode_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTruckBusElectronicRetarderController1RetarderTorqueModeBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusTruckBusElectronicRetarderController1RetarderTorqueMode(DolphinConfig.IO.Builder builderForValue) {
/*       */         if (this.iOCANBusTruckBusElectronicRetarderController1RetarderTorqueModeBuilder_ == null) {
/*       */           this.iOCANBusTruckBusElectronicRetarderController1RetarderTorqueMode_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTruckBusElectronicRetarderController1RetarderTorqueModeBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeIOCANBusTruckBusElectronicRetarderController1RetarderTorqueMode(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusTruckBusElectronicRetarderController1RetarderTorqueModeBuilder_ == null) {
/*       */           if (this.iOCANBusTruckBusElectronicRetarderController1RetarderTorqueMode_ != null) {
/*       */             this.iOCANBusTruckBusElectronicRetarderController1RetarderTorqueMode_ = DolphinConfig.IO.newBuilder(this.iOCANBusTruckBusElectronicRetarderController1RetarderTorqueMode_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.iOCANBusTruckBusElectronicRetarderController1RetarderTorqueMode_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTruckBusElectronicRetarderController1RetarderTorqueModeBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearIOCANBusTruckBusElectronicRetarderController1RetarderTorqueMode() {
/*       */         if (this.iOCANBusTruckBusElectronicRetarderController1RetarderTorqueModeBuilder_ == null) {
/*       */           this.iOCANBusTruckBusElectronicRetarderController1RetarderTorqueMode_ = null;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTruckBusElectronicRetarderController1RetarderTorqueMode_ = null;
/*       */           this.iOCANBusTruckBusElectronicRetarderController1RetarderTorqueModeBuilder_ = null;
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOCANBusTruckBusElectronicRetarderController1RetarderTorqueModeBuilder() {
/*       */         onChanged();
/*       */         return (DolphinConfig.IO.Builder)getIOCANBusTruckBusElectronicRetarderController1RetarderTorqueModeFieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOCANBusTruckBusElectronicRetarderController1RetarderTorqueModeOrBuilder() {
/*       */         return (this.iOCANBusTruckBusElectronicRetarderController1RetarderTorqueModeBuilder_ != null) ? (DolphinConfig.IOOrBuilder)this.iOCANBusTruckBusElectronicRetarderController1RetarderTorqueModeBuilder_.getMessageOrBuilder() : ((this.iOCANBusTruckBusElectronicRetarderController1RetarderTorqueMode_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusTruckBusElectronicRetarderController1RetarderTorqueMode_);
/*       */       }
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOCANBusTruckBusElectronicRetarderController1RetarderTorqueModeFieldBuilder() {
/*       */         if (this.iOCANBusTruckBusElectronicRetarderController1RetarderTorqueModeBuilder_ == null) {
/*       */           this.iOCANBusTruckBusElectronicRetarderController1RetarderTorqueModeBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOCANBusTruckBusElectronicRetarderController1RetarderTorqueMode(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.iOCANBusTruckBusElectronicRetarderController1RetarderTorqueMode_ = null;
/*       */         } 
/*       */         return this.iOCANBusTruckBusElectronicRetarderController1RetarderTorqueModeBuilder_;
/*       */       }
/*       */       
/*       */       public boolean hasIOCANBusTruckBusElectronicRetarderController1RetarderSelection() {
/*       */         return (this.iOCANBusTruckBusElectronicRetarderController1RetarderSelectionBuilder_ != null || this.iOCANBusTruckBusElectronicRetarderController1RetarderSelection_ != null);
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO getIOCANBusTruckBusElectronicRetarderController1RetarderSelection() {
/*       */         return (this.iOCANBusTruckBusElectronicRetarderController1RetarderSelectionBuilder_ == null) ? ((this.iOCANBusTruckBusElectronicRetarderController1RetarderSelection_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusTruckBusElectronicRetarderController1RetarderSelection_) : (DolphinConfig.IO)this.iOCANBusTruckBusElectronicRetarderController1RetarderSelectionBuilder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusTruckBusElectronicRetarderController1RetarderSelection(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusTruckBusElectronicRetarderController1RetarderSelectionBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.iOCANBusTruckBusElectronicRetarderController1RetarderSelection_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTruckBusElectronicRetarderController1RetarderSelectionBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusTruckBusElectronicRetarderController1RetarderSelection(DolphinConfig.IO.Builder builderForValue) {
/*       */         if (this.iOCANBusTruckBusElectronicRetarderController1RetarderSelectionBuilder_ == null) {
/*       */           this.iOCANBusTruckBusElectronicRetarderController1RetarderSelection_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTruckBusElectronicRetarderController1RetarderSelectionBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeIOCANBusTruckBusElectronicRetarderController1RetarderSelection(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusTruckBusElectronicRetarderController1RetarderSelectionBuilder_ == null) {
/*       */           if (this.iOCANBusTruckBusElectronicRetarderController1RetarderSelection_ != null) {
/*       */             this.iOCANBusTruckBusElectronicRetarderController1RetarderSelection_ = DolphinConfig.IO.newBuilder(this.iOCANBusTruckBusElectronicRetarderController1RetarderSelection_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.iOCANBusTruckBusElectronicRetarderController1RetarderSelection_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTruckBusElectronicRetarderController1RetarderSelectionBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearIOCANBusTruckBusElectronicRetarderController1RetarderSelection() {
/*       */         if (this.iOCANBusTruckBusElectronicRetarderController1RetarderSelectionBuilder_ == null) {
/*       */           this.iOCANBusTruckBusElectronicRetarderController1RetarderSelection_ = null;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTruckBusElectronicRetarderController1RetarderSelection_ = null;
/*       */           this.iOCANBusTruckBusElectronicRetarderController1RetarderSelectionBuilder_ = null;
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOCANBusTruckBusElectronicRetarderController1RetarderSelectionBuilder() {
/*       */         onChanged();
/*       */         return (DolphinConfig.IO.Builder)getIOCANBusTruckBusElectronicRetarderController1RetarderSelectionFieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOCANBusTruckBusElectronicRetarderController1RetarderSelectionOrBuilder() {
/*       */         return (this.iOCANBusTruckBusElectronicRetarderController1RetarderSelectionBuilder_ != null) ? (DolphinConfig.IOOrBuilder)this.iOCANBusTruckBusElectronicRetarderController1RetarderSelectionBuilder_.getMessageOrBuilder() : ((this.iOCANBusTruckBusElectronicRetarderController1RetarderSelection_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusTruckBusElectronicRetarderController1RetarderSelection_);
/*       */       }
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOCANBusTruckBusElectronicRetarderController1RetarderSelectionFieldBuilder() {
/*       */         if (this.iOCANBusTruckBusElectronicRetarderController1RetarderSelectionBuilder_ == null) {
/*       */           this.iOCANBusTruckBusElectronicRetarderController1RetarderSelectionBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOCANBusTruckBusElectronicRetarderController1RetarderSelection(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.iOCANBusTruckBusElectronicRetarderController1RetarderSelection_ = null;
/*       */         } 
/*       */         return this.iOCANBusTruckBusElectronicRetarderController1RetarderSelectionBuilder_;
/*       */       }
/*       */       
/*       */       public boolean hasIOCANBusBusDoorControl1DoorPosition() {
/*       */         return (this.iOCANBusBusDoorControl1DoorPositionBuilder_ != null || this.iOCANBusBusDoorControl1DoorPosition_ != null);
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO getIOCANBusBusDoorControl1DoorPosition() {
/*       */         return (this.iOCANBusBusDoorControl1DoorPositionBuilder_ == null) ? ((this.iOCANBusBusDoorControl1DoorPosition_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusBusDoorControl1DoorPosition_) : (DolphinConfig.IO)this.iOCANBusBusDoorControl1DoorPositionBuilder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusBusDoorControl1DoorPosition(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusBusDoorControl1DoorPositionBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.iOCANBusBusDoorControl1DoorPosition_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusBusDoorControl1DoorPositionBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusBusDoorControl1DoorPosition(DolphinConfig.IO.Builder builderForValue) {
/*       */         if (this.iOCANBusBusDoorControl1DoorPositionBuilder_ == null) {
/*       */           this.iOCANBusBusDoorControl1DoorPosition_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusBusDoorControl1DoorPositionBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeIOCANBusBusDoorControl1DoorPosition(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusBusDoorControl1DoorPositionBuilder_ == null) {
/*       */           if (this.iOCANBusBusDoorControl1DoorPosition_ != null) {
/*       */             this.iOCANBusBusDoorControl1DoorPosition_ = DolphinConfig.IO.newBuilder(this.iOCANBusBusDoorControl1DoorPosition_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.iOCANBusBusDoorControl1DoorPosition_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusBusDoorControl1DoorPositionBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearIOCANBusBusDoorControl1DoorPosition() {
/*       */         if (this.iOCANBusBusDoorControl1DoorPositionBuilder_ == null) {
/*       */           this.iOCANBusBusDoorControl1DoorPosition_ = null;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusBusDoorControl1DoorPosition_ = null;
/*       */           this.iOCANBusBusDoorControl1DoorPositionBuilder_ = null;
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOCANBusBusDoorControl1DoorPositionBuilder() {
/*       */         onChanged();
/*       */         return (DolphinConfig.IO.Builder)getIOCANBusBusDoorControl1DoorPositionFieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOCANBusBusDoorControl1DoorPositionOrBuilder() {
/*       */         return (this.iOCANBusBusDoorControl1DoorPositionBuilder_ != null) ? (DolphinConfig.IOOrBuilder)this.iOCANBusBusDoorControl1DoorPositionBuilder_.getMessageOrBuilder() : ((this.iOCANBusBusDoorControl1DoorPosition_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusBusDoorControl1DoorPosition_);
/*       */       }
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOCANBusBusDoorControl1DoorPositionFieldBuilder() {
/*       */         if (this.iOCANBusBusDoorControl1DoorPositionBuilder_ == null) {
/*       */           this.iOCANBusBusDoorControl1DoorPositionBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOCANBusBusDoorControl1DoorPosition(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.iOCANBusBusDoorControl1DoorPosition_ = null;
/*       */         } 
/*       */         return this.iOCANBusBusDoorControl1DoorPositionBuilder_;
/*       */       }
/*       */       
/*       */       public boolean hasIOCANBusBusDoorControl1RampWheelChairlift() {
/*       */         return (this.iOCANBusBusDoorControl1RampWheelChairliftBuilder_ != null || this.iOCANBusBusDoorControl1RampWheelChairlift_ != null);
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO getIOCANBusBusDoorControl1RampWheelChairlift() {
/*       */         return (this.iOCANBusBusDoorControl1RampWheelChairliftBuilder_ == null) ? ((this.iOCANBusBusDoorControl1RampWheelChairlift_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusBusDoorControl1RampWheelChairlift_) : (DolphinConfig.IO)this.iOCANBusBusDoorControl1RampWheelChairliftBuilder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusBusDoorControl1RampWheelChairlift(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusBusDoorControl1RampWheelChairliftBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.iOCANBusBusDoorControl1RampWheelChairlift_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusBusDoorControl1RampWheelChairliftBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusBusDoorControl1RampWheelChairlift(DolphinConfig.IO.Builder builderForValue) {
/*       */         if (this.iOCANBusBusDoorControl1RampWheelChairliftBuilder_ == null) {
/*       */           this.iOCANBusBusDoorControl1RampWheelChairlift_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusBusDoorControl1RampWheelChairliftBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeIOCANBusBusDoorControl1RampWheelChairlift(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusBusDoorControl1RampWheelChairliftBuilder_ == null) {
/*       */           if (this.iOCANBusBusDoorControl1RampWheelChairlift_ != null) {
/*       */             this.iOCANBusBusDoorControl1RampWheelChairlift_ = DolphinConfig.IO.newBuilder(this.iOCANBusBusDoorControl1RampWheelChairlift_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.iOCANBusBusDoorControl1RampWheelChairlift_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusBusDoorControl1RampWheelChairliftBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearIOCANBusBusDoorControl1RampWheelChairlift() {
/*       */         if (this.iOCANBusBusDoorControl1RampWheelChairliftBuilder_ == null) {
/*       */           this.iOCANBusBusDoorControl1RampWheelChairlift_ = null;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusBusDoorControl1RampWheelChairlift_ = null;
/*       */           this.iOCANBusBusDoorControl1RampWheelChairliftBuilder_ = null;
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOCANBusBusDoorControl1RampWheelChairliftBuilder() {
/*       */         onChanged();
/*       */         return (DolphinConfig.IO.Builder)getIOCANBusBusDoorControl1RampWheelChairliftFieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOCANBusBusDoorControl1RampWheelChairliftOrBuilder() {
/*       */         return (this.iOCANBusBusDoorControl1RampWheelChairliftBuilder_ != null) ? (DolphinConfig.IOOrBuilder)this.iOCANBusBusDoorControl1RampWheelChairliftBuilder_.getMessageOrBuilder() : ((this.iOCANBusBusDoorControl1RampWheelChairlift_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusBusDoorControl1RampWheelChairlift_);
/*       */       }
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOCANBusBusDoorControl1RampWheelChairliftFieldBuilder() {
/*       */         if (this.iOCANBusBusDoorControl1RampWheelChairliftBuilder_ == null) {
/*       */           this.iOCANBusBusDoorControl1RampWheelChairliftBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOCANBusBusDoorControl1RampWheelChairlift(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.iOCANBusBusDoorControl1RampWheelChairlift_ = null;
/*       */         } 
/*       */         return this.iOCANBusBusDoorControl1RampWheelChairliftBuilder_;
/*       */       }
/*       */       
/*       */       public boolean hasIOCANBusBusDoorControl1DoorsStatus2() {
/*       */         return (this.iOCANBusBusDoorControl1DoorsStatus2Builder_ != null || this.iOCANBusBusDoorControl1DoorsStatus2_ != null);
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO getIOCANBusBusDoorControl1DoorsStatus2() {
/*       */         return (this.iOCANBusBusDoorControl1DoorsStatus2Builder_ == null) ? ((this.iOCANBusBusDoorControl1DoorsStatus2_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusBusDoorControl1DoorsStatus2_) : (DolphinConfig.IO)this.iOCANBusBusDoorControl1DoorsStatus2Builder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusBusDoorControl1DoorsStatus2(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusBusDoorControl1DoorsStatus2Builder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.iOCANBusBusDoorControl1DoorsStatus2_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusBusDoorControl1DoorsStatus2Builder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusBusDoorControl1DoorsStatus2(DolphinConfig.IO.Builder builderForValue) {
/*       */         if (this.iOCANBusBusDoorControl1DoorsStatus2Builder_ == null) {
/*       */           this.iOCANBusBusDoorControl1DoorsStatus2_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusBusDoorControl1DoorsStatus2Builder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeIOCANBusBusDoorControl1DoorsStatus2(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusBusDoorControl1DoorsStatus2Builder_ == null) {
/*       */           if (this.iOCANBusBusDoorControl1DoorsStatus2_ != null) {
/*       */             this.iOCANBusBusDoorControl1DoorsStatus2_ = DolphinConfig.IO.newBuilder(this.iOCANBusBusDoorControl1DoorsStatus2_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.iOCANBusBusDoorControl1DoorsStatus2_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusBusDoorControl1DoorsStatus2Builder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearIOCANBusBusDoorControl1DoorsStatus2() {
/*       */         if (this.iOCANBusBusDoorControl1DoorsStatus2Builder_ == null) {
/*       */           this.iOCANBusBusDoorControl1DoorsStatus2_ = null;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusBusDoorControl1DoorsStatus2_ = null;
/*       */           this.iOCANBusBusDoorControl1DoorsStatus2Builder_ = null;
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOCANBusBusDoorControl1DoorsStatus2Builder() {
/*       */         onChanged();
/*       */         return (DolphinConfig.IO.Builder)getIOCANBusBusDoorControl1DoorsStatus2FieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOCANBusBusDoorControl1DoorsStatus2OrBuilder() {
/*       */         return (this.iOCANBusBusDoorControl1DoorsStatus2Builder_ != null) ? (DolphinConfig.IOOrBuilder)this.iOCANBusBusDoorControl1DoorsStatus2Builder_.getMessageOrBuilder() : ((this.iOCANBusBusDoorControl1DoorsStatus2_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusBusDoorControl1DoorsStatus2_);
/*       */       }
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOCANBusBusDoorControl1DoorsStatus2FieldBuilder() {
/*       */         if (this.iOCANBusBusDoorControl1DoorsStatus2Builder_ == null) {
/*       */           this.iOCANBusBusDoorControl1DoorsStatus2Builder_ = new SingleFieldBuilderV3((AbstractMessage)getIOCANBusBusDoorControl1DoorsStatus2(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.iOCANBusBusDoorControl1DoorsStatus2_ = null;
/*       */         } 
/*       */         return this.iOCANBusBusDoorControl1DoorsStatus2Builder_;
/*       */       }
/*       */       
/*       */       public boolean hasIOCANBusBusDoorControl2() {
/*       */         return (this.iOCANBusBusDoorControl2Builder_ != null || this.iOCANBusBusDoorControl2_ != null);
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO getIOCANBusBusDoorControl2() {
/*       */         return (this.iOCANBusBusDoorControl2Builder_ == null) ? ((this.iOCANBusBusDoorControl2_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusBusDoorControl2_) : (DolphinConfig.IO)this.iOCANBusBusDoorControl2Builder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusBusDoorControl2(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusBusDoorControl2Builder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.iOCANBusBusDoorControl2_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusBusDoorControl2Builder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusBusDoorControl2(DolphinConfig.IO.Builder builderForValue) {
/*       */         if (this.iOCANBusBusDoorControl2Builder_ == null) {
/*       */           this.iOCANBusBusDoorControl2_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusBusDoorControl2Builder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeIOCANBusBusDoorControl2(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusBusDoorControl2Builder_ == null) {
/*       */           if (this.iOCANBusBusDoorControl2_ != null) {
/*       */             this.iOCANBusBusDoorControl2_ = DolphinConfig.IO.newBuilder(this.iOCANBusBusDoorControl2_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.iOCANBusBusDoorControl2_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusBusDoorControl2Builder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearIOCANBusBusDoorControl2() {
/*       */         if (this.iOCANBusBusDoorControl2Builder_ == null) {
/*       */           this.iOCANBusBusDoorControl2_ = null;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusBusDoorControl2_ = null;
/*       */           this.iOCANBusBusDoorControl2Builder_ = null;
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOCANBusBusDoorControl2Builder() {
/*       */         onChanged();
/*       */         return (DolphinConfig.IO.Builder)getIOCANBusBusDoorControl2FieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOCANBusBusDoorControl2OrBuilder() {
/*       */         return (this.iOCANBusBusDoorControl2Builder_ != null) ? (DolphinConfig.IOOrBuilder)this.iOCANBusBusDoorControl2Builder_.getMessageOrBuilder() : ((this.iOCANBusBusDoorControl2_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusBusDoorControl2_);
/*       */       }
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOCANBusBusDoorControl2FieldBuilder() {
/*       */         if (this.iOCANBusBusDoorControl2Builder_ == null) {
/*       */           this.iOCANBusBusDoorControl2Builder_ = new SingleFieldBuilderV3((AbstractMessage)getIOCANBusBusDoorControl2(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.iOCANBusBusDoorControl2_ = null;
/*       */         } 
/*       */         return this.iOCANBusBusDoorControl2Builder_;
/*       */       }
/*       */       
/*       */       public boolean hasIOCANBusBrakeLiningRemainingAxleFrontLeftWheel() {
/*       */         return (this.iOCANBusBrakeLiningRemainingAxleFrontLeftWheelBuilder_ != null || this.iOCANBusBrakeLiningRemainingAxleFrontLeftWheel_ != null);
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO getIOCANBusBrakeLiningRemainingAxleFrontLeftWheel() {
/*       */         return (this.iOCANBusBrakeLiningRemainingAxleFrontLeftWheelBuilder_ == null) ? ((this.iOCANBusBrakeLiningRemainingAxleFrontLeftWheel_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusBrakeLiningRemainingAxleFrontLeftWheel_) : (DolphinConfig.IO)this.iOCANBusBrakeLiningRemainingAxleFrontLeftWheelBuilder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusBrakeLiningRemainingAxleFrontLeftWheel(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusBrakeLiningRemainingAxleFrontLeftWheelBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.iOCANBusBrakeLiningRemainingAxleFrontLeftWheel_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusBrakeLiningRemainingAxleFrontLeftWheelBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusBrakeLiningRemainingAxleFrontLeftWheel(DolphinConfig.IO.Builder builderForValue) {
/*       */         if (this.iOCANBusBrakeLiningRemainingAxleFrontLeftWheelBuilder_ == null) {
/*       */           this.iOCANBusBrakeLiningRemainingAxleFrontLeftWheel_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusBrakeLiningRemainingAxleFrontLeftWheelBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeIOCANBusBrakeLiningRemainingAxleFrontLeftWheel(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusBrakeLiningRemainingAxleFrontLeftWheelBuilder_ == null) {
/*       */           if (this.iOCANBusBrakeLiningRemainingAxleFrontLeftWheel_ != null) {
/*       */             this.iOCANBusBrakeLiningRemainingAxleFrontLeftWheel_ = DolphinConfig.IO.newBuilder(this.iOCANBusBrakeLiningRemainingAxleFrontLeftWheel_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.iOCANBusBrakeLiningRemainingAxleFrontLeftWheel_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusBrakeLiningRemainingAxleFrontLeftWheelBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearIOCANBusBrakeLiningRemainingAxleFrontLeftWheel() {
/*       */         if (this.iOCANBusBrakeLiningRemainingAxleFrontLeftWheelBuilder_ == null) {
/*       */           this.iOCANBusBrakeLiningRemainingAxleFrontLeftWheel_ = null;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusBrakeLiningRemainingAxleFrontLeftWheel_ = null;
/*       */           this.iOCANBusBrakeLiningRemainingAxleFrontLeftWheelBuilder_ = null;
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOCANBusBrakeLiningRemainingAxleFrontLeftWheelBuilder() {
/*       */         onChanged();
/*       */         return (DolphinConfig.IO.Builder)getIOCANBusBrakeLiningRemainingAxleFrontLeftWheelFieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOCANBusBrakeLiningRemainingAxleFrontLeftWheelOrBuilder() {
/*       */         return (this.iOCANBusBrakeLiningRemainingAxleFrontLeftWheelBuilder_ != null) ? (DolphinConfig.IOOrBuilder)this.iOCANBusBrakeLiningRemainingAxleFrontLeftWheelBuilder_.getMessageOrBuilder() : ((this.iOCANBusBrakeLiningRemainingAxleFrontLeftWheel_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusBrakeLiningRemainingAxleFrontLeftWheel_);
/*       */       }
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOCANBusBrakeLiningRemainingAxleFrontLeftWheelFieldBuilder() {
/*       */         if (this.iOCANBusBrakeLiningRemainingAxleFrontLeftWheelBuilder_ == null) {
/*       */           this.iOCANBusBrakeLiningRemainingAxleFrontLeftWheelBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOCANBusBrakeLiningRemainingAxleFrontLeftWheel(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.iOCANBusBrakeLiningRemainingAxleFrontLeftWheel_ = null;
/*       */         } 
/*       */         return this.iOCANBusBrakeLiningRemainingAxleFrontLeftWheelBuilder_;
/*       */       }
/*       */       
/*       */       public boolean hasIOCANBusBrakeLiningRemainingAxleFrontRightWheel() {
/*       */         return (this.iOCANBusBrakeLiningRemainingAxleFrontRightWheelBuilder_ != null || this.iOCANBusBrakeLiningRemainingAxleFrontRightWheel_ != null);
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO getIOCANBusBrakeLiningRemainingAxleFrontRightWheel() {
/*       */         return (this.iOCANBusBrakeLiningRemainingAxleFrontRightWheelBuilder_ == null) ? ((this.iOCANBusBrakeLiningRemainingAxleFrontRightWheel_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusBrakeLiningRemainingAxleFrontRightWheel_) : (DolphinConfig.IO)this.iOCANBusBrakeLiningRemainingAxleFrontRightWheelBuilder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusBrakeLiningRemainingAxleFrontRightWheel(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusBrakeLiningRemainingAxleFrontRightWheelBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.iOCANBusBrakeLiningRemainingAxleFrontRightWheel_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusBrakeLiningRemainingAxleFrontRightWheelBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusBrakeLiningRemainingAxleFrontRightWheel(DolphinConfig.IO.Builder builderForValue) {
/*       */         if (this.iOCANBusBrakeLiningRemainingAxleFrontRightWheelBuilder_ == null) {
/*       */           this.iOCANBusBrakeLiningRemainingAxleFrontRightWheel_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusBrakeLiningRemainingAxleFrontRightWheelBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeIOCANBusBrakeLiningRemainingAxleFrontRightWheel(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusBrakeLiningRemainingAxleFrontRightWheelBuilder_ == null) {
/*       */           if (this.iOCANBusBrakeLiningRemainingAxleFrontRightWheel_ != null) {
/*       */             this.iOCANBusBrakeLiningRemainingAxleFrontRightWheel_ = DolphinConfig.IO.newBuilder(this.iOCANBusBrakeLiningRemainingAxleFrontRightWheel_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.iOCANBusBrakeLiningRemainingAxleFrontRightWheel_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusBrakeLiningRemainingAxleFrontRightWheelBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearIOCANBusBrakeLiningRemainingAxleFrontRightWheel() {
/*       */         if (this.iOCANBusBrakeLiningRemainingAxleFrontRightWheelBuilder_ == null) {
/*       */           this.iOCANBusBrakeLiningRemainingAxleFrontRightWheel_ = null;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusBrakeLiningRemainingAxleFrontRightWheel_ = null;
/*       */           this.iOCANBusBrakeLiningRemainingAxleFrontRightWheelBuilder_ = null;
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOCANBusBrakeLiningRemainingAxleFrontRightWheelBuilder() {
/*       */         onChanged();
/*       */         return (DolphinConfig.IO.Builder)getIOCANBusBrakeLiningRemainingAxleFrontRightWheelFieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOCANBusBrakeLiningRemainingAxleFrontRightWheelOrBuilder() {
/*       */         return (this.iOCANBusBrakeLiningRemainingAxleFrontRightWheelBuilder_ != null) ? (DolphinConfig.IOOrBuilder)this.iOCANBusBrakeLiningRemainingAxleFrontRightWheelBuilder_.getMessageOrBuilder() : ((this.iOCANBusBrakeLiningRemainingAxleFrontRightWheel_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusBrakeLiningRemainingAxleFrontRightWheel_);
/*       */       }
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOCANBusBrakeLiningRemainingAxleFrontRightWheelFieldBuilder() {
/*       */         if (this.iOCANBusBrakeLiningRemainingAxleFrontRightWheelBuilder_ == null) {
/*       */           this.iOCANBusBrakeLiningRemainingAxleFrontRightWheelBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOCANBusBrakeLiningRemainingAxleFrontRightWheel(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.iOCANBusBrakeLiningRemainingAxleFrontRightWheel_ = null;
/*       */         } 
/*       */         return this.iOCANBusBrakeLiningRemainingAxleFrontRightWheelBuilder_;
/*       */       }
/*       */       
/*       */       public boolean hasIOCANBusBrakeLiningRemainingAxleRear1LeftWheel() {
/*       */         return (this.iOCANBusBrakeLiningRemainingAxleRear1LeftWheelBuilder_ != null || this.iOCANBusBrakeLiningRemainingAxleRear1LeftWheel_ != null);
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO getIOCANBusBrakeLiningRemainingAxleRear1LeftWheel() {
/*       */         return (this.iOCANBusBrakeLiningRemainingAxleRear1LeftWheelBuilder_ == null) ? ((this.iOCANBusBrakeLiningRemainingAxleRear1LeftWheel_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusBrakeLiningRemainingAxleRear1LeftWheel_) : (DolphinConfig.IO)this.iOCANBusBrakeLiningRemainingAxleRear1LeftWheelBuilder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusBrakeLiningRemainingAxleRear1LeftWheel(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusBrakeLiningRemainingAxleRear1LeftWheelBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.iOCANBusBrakeLiningRemainingAxleRear1LeftWheel_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusBrakeLiningRemainingAxleRear1LeftWheelBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusBrakeLiningRemainingAxleRear1LeftWheel(DolphinConfig.IO.Builder builderForValue) {
/*       */         if (this.iOCANBusBrakeLiningRemainingAxleRear1LeftWheelBuilder_ == null) {
/*       */           this.iOCANBusBrakeLiningRemainingAxleRear1LeftWheel_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusBrakeLiningRemainingAxleRear1LeftWheelBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeIOCANBusBrakeLiningRemainingAxleRear1LeftWheel(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusBrakeLiningRemainingAxleRear1LeftWheelBuilder_ == null) {
/*       */           if (this.iOCANBusBrakeLiningRemainingAxleRear1LeftWheel_ != null) {
/*       */             this.iOCANBusBrakeLiningRemainingAxleRear1LeftWheel_ = DolphinConfig.IO.newBuilder(this.iOCANBusBrakeLiningRemainingAxleRear1LeftWheel_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.iOCANBusBrakeLiningRemainingAxleRear1LeftWheel_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusBrakeLiningRemainingAxleRear1LeftWheelBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearIOCANBusBrakeLiningRemainingAxleRear1LeftWheel() {
/*       */         if (this.iOCANBusBrakeLiningRemainingAxleRear1LeftWheelBuilder_ == null) {
/*       */           this.iOCANBusBrakeLiningRemainingAxleRear1LeftWheel_ = null;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusBrakeLiningRemainingAxleRear1LeftWheel_ = null;
/*       */           this.iOCANBusBrakeLiningRemainingAxleRear1LeftWheelBuilder_ = null;
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOCANBusBrakeLiningRemainingAxleRear1LeftWheelBuilder() {
/*       */         onChanged();
/*       */         return (DolphinConfig.IO.Builder)getIOCANBusBrakeLiningRemainingAxleRear1LeftWheelFieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOCANBusBrakeLiningRemainingAxleRear1LeftWheelOrBuilder() {
/*       */         return (this.iOCANBusBrakeLiningRemainingAxleRear1LeftWheelBuilder_ != null) ? (DolphinConfig.IOOrBuilder)this.iOCANBusBrakeLiningRemainingAxleRear1LeftWheelBuilder_.getMessageOrBuilder() : ((this.iOCANBusBrakeLiningRemainingAxleRear1LeftWheel_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusBrakeLiningRemainingAxleRear1LeftWheel_);
/*       */       }
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOCANBusBrakeLiningRemainingAxleRear1LeftWheelFieldBuilder() {
/*       */         if (this.iOCANBusBrakeLiningRemainingAxleRear1LeftWheelBuilder_ == null) {
/*       */           this.iOCANBusBrakeLiningRemainingAxleRear1LeftWheelBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOCANBusBrakeLiningRemainingAxleRear1LeftWheel(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.iOCANBusBrakeLiningRemainingAxleRear1LeftWheel_ = null;
/*       */         } 
/*       */         return this.iOCANBusBrakeLiningRemainingAxleRear1LeftWheelBuilder_;
/*       */       }
/*       */       
/*       */       public boolean hasIOCANBusBrakeLiningRemainingAxleRear1RightWheel() {
/*       */         return (this.iOCANBusBrakeLiningRemainingAxleRear1RightWheelBuilder_ != null || this.iOCANBusBrakeLiningRemainingAxleRear1RightWheel_ != null);
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO getIOCANBusBrakeLiningRemainingAxleRear1RightWheel() {
/*       */         return (this.iOCANBusBrakeLiningRemainingAxleRear1RightWheelBuilder_ == null) ? ((this.iOCANBusBrakeLiningRemainingAxleRear1RightWheel_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusBrakeLiningRemainingAxleRear1RightWheel_) : (DolphinConfig.IO)this.iOCANBusBrakeLiningRemainingAxleRear1RightWheelBuilder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusBrakeLiningRemainingAxleRear1RightWheel(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusBrakeLiningRemainingAxleRear1RightWheelBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.iOCANBusBrakeLiningRemainingAxleRear1RightWheel_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusBrakeLiningRemainingAxleRear1RightWheelBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusBrakeLiningRemainingAxleRear1RightWheel(DolphinConfig.IO.Builder builderForValue) {
/*       */         if (this.iOCANBusBrakeLiningRemainingAxleRear1RightWheelBuilder_ == null) {
/*       */           this.iOCANBusBrakeLiningRemainingAxleRear1RightWheel_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusBrakeLiningRemainingAxleRear1RightWheelBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeIOCANBusBrakeLiningRemainingAxleRear1RightWheel(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusBrakeLiningRemainingAxleRear1RightWheelBuilder_ == null) {
/*       */           if (this.iOCANBusBrakeLiningRemainingAxleRear1RightWheel_ != null) {
/*       */             this.iOCANBusBrakeLiningRemainingAxleRear1RightWheel_ = DolphinConfig.IO.newBuilder(this.iOCANBusBrakeLiningRemainingAxleRear1RightWheel_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.iOCANBusBrakeLiningRemainingAxleRear1RightWheel_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusBrakeLiningRemainingAxleRear1RightWheelBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearIOCANBusBrakeLiningRemainingAxleRear1RightWheel() {
/*       */         if (this.iOCANBusBrakeLiningRemainingAxleRear1RightWheelBuilder_ == null) {
/*       */           this.iOCANBusBrakeLiningRemainingAxleRear1RightWheel_ = null;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusBrakeLiningRemainingAxleRear1RightWheel_ = null;
/*       */           this.iOCANBusBrakeLiningRemainingAxleRear1RightWheelBuilder_ = null;
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOCANBusBrakeLiningRemainingAxleRear1RightWheelBuilder() {
/*       */         onChanged();
/*       */         return (DolphinConfig.IO.Builder)getIOCANBusBrakeLiningRemainingAxleRear1RightWheelFieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOCANBusBrakeLiningRemainingAxleRear1RightWheelOrBuilder() {
/*       */         return (this.iOCANBusBrakeLiningRemainingAxleRear1RightWheelBuilder_ != null) ? (DolphinConfig.IOOrBuilder)this.iOCANBusBrakeLiningRemainingAxleRear1RightWheelBuilder_.getMessageOrBuilder() : ((this.iOCANBusBrakeLiningRemainingAxleRear1RightWheel_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusBrakeLiningRemainingAxleRear1RightWheel_);
/*       */       }
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOCANBusBrakeLiningRemainingAxleRear1RightWheelFieldBuilder() {
/*       */         if (this.iOCANBusBrakeLiningRemainingAxleRear1RightWheelBuilder_ == null) {
/*       */           this.iOCANBusBrakeLiningRemainingAxleRear1RightWheelBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOCANBusBrakeLiningRemainingAxleRear1RightWheel(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.iOCANBusBrakeLiningRemainingAxleRear1RightWheel_ = null;
/*       */         } 
/*       */         return this.iOCANBusBrakeLiningRemainingAxleRear1RightWheelBuilder_;
/*       */       }
/*       */       
/*       */       public boolean hasIOCANBusBrakeLiningRemainingAxleRear2LeftWheel() {
/*       */         return (this.iOCANBusBrakeLiningRemainingAxleRear2LeftWheelBuilder_ != null || this.iOCANBusBrakeLiningRemainingAxleRear2LeftWheel_ != null);
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO getIOCANBusBrakeLiningRemainingAxleRear2LeftWheel() {
/*       */         return (this.iOCANBusBrakeLiningRemainingAxleRear2LeftWheelBuilder_ == null) ? ((this.iOCANBusBrakeLiningRemainingAxleRear2LeftWheel_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusBrakeLiningRemainingAxleRear2LeftWheel_) : (DolphinConfig.IO)this.iOCANBusBrakeLiningRemainingAxleRear2LeftWheelBuilder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusBrakeLiningRemainingAxleRear2LeftWheel(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusBrakeLiningRemainingAxleRear2LeftWheelBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.iOCANBusBrakeLiningRemainingAxleRear2LeftWheel_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusBrakeLiningRemainingAxleRear2LeftWheelBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusBrakeLiningRemainingAxleRear2LeftWheel(DolphinConfig.IO.Builder builderForValue) {
/*       */         if (this.iOCANBusBrakeLiningRemainingAxleRear2LeftWheelBuilder_ == null) {
/*       */           this.iOCANBusBrakeLiningRemainingAxleRear2LeftWheel_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusBrakeLiningRemainingAxleRear2LeftWheelBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeIOCANBusBrakeLiningRemainingAxleRear2LeftWheel(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusBrakeLiningRemainingAxleRear2LeftWheelBuilder_ == null) {
/*       */           if (this.iOCANBusBrakeLiningRemainingAxleRear2LeftWheel_ != null) {
/*       */             this.iOCANBusBrakeLiningRemainingAxleRear2LeftWheel_ = DolphinConfig.IO.newBuilder(this.iOCANBusBrakeLiningRemainingAxleRear2LeftWheel_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.iOCANBusBrakeLiningRemainingAxleRear2LeftWheel_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusBrakeLiningRemainingAxleRear2LeftWheelBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearIOCANBusBrakeLiningRemainingAxleRear2LeftWheel() {
/*       */         if (this.iOCANBusBrakeLiningRemainingAxleRear2LeftWheelBuilder_ == null) {
/*       */           this.iOCANBusBrakeLiningRemainingAxleRear2LeftWheel_ = null;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusBrakeLiningRemainingAxleRear2LeftWheel_ = null;
/*       */           this.iOCANBusBrakeLiningRemainingAxleRear2LeftWheelBuilder_ = null;
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOCANBusBrakeLiningRemainingAxleRear2LeftWheelBuilder() {
/*       */         onChanged();
/*       */         return (DolphinConfig.IO.Builder)getIOCANBusBrakeLiningRemainingAxleRear2LeftWheelFieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOCANBusBrakeLiningRemainingAxleRear2LeftWheelOrBuilder() {
/*       */         return (this.iOCANBusBrakeLiningRemainingAxleRear2LeftWheelBuilder_ != null) ? (DolphinConfig.IOOrBuilder)this.iOCANBusBrakeLiningRemainingAxleRear2LeftWheelBuilder_.getMessageOrBuilder() : ((this.iOCANBusBrakeLiningRemainingAxleRear2LeftWheel_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusBrakeLiningRemainingAxleRear2LeftWheel_);
/*       */       }
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOCANBusBrakeLiningRemainingAxleRear2LeftWheelFieldBuilder() {
/*       */         if (this.iOCANBusBrakeLiningRemainingAxleRear2LeftWheelBuilder_ == null) {
/*       */           this.iOCANBusBrakeLiningRemainingAxleRear2LeftWheelBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOCANBusBrakeLiningRemainingAxleRear2LeftWheel(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.iOCANBusBrakeLiningRemainingAxleRear2LeftWheel_ = null;
/*       */         } 
/*       */         return this.iOCANBusBrakeLiningRemainingAxleRear2LeftWheelBuilder_;
/*       */       }
/*       */       
/*       */       public boolean hasIOCANBusBrakeLiningRemainingAxleRear2RightWheel() {
/*       */         return (this.iOCANBusBrakeLiningRemainingAxleRear2RightWheelBuilder_ != null || this.iOCANBusBrakeLiningRemainingAxleRear2RightWheel_ != null);
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO getIOCANBusBrakeLiningRemainingAxleRear2RightWheel() {
/*       */         return (this.iOCANBusBrakeLiningRemainingAxleRear2RightWheelBuilder_ == null) ? ((this.iOCANBusBrakeLiningRemainingAxleRear2RightWheel_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusBrakeLiningRemainingAxleRear2RightWheel_) : (DolphinConfig.IO)this.iOCANBusBrakeLiningRemainingAxleRear2RightWheelBuilder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusBrakeLiningRemainingAxleRear2RightWheel(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusBrakeLiningRemainingAxleRear2RightWheelBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.iOCANBusBrakeLiningRemainingAxleRear2RightWheel_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusBrakeLiningRemainingAxleRear2RightWheelBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusBrakeLiningRemainingAxleRear2RightWheel(DolphinConfig.IO.Builder builderForValue) {
/*       */         if (this.iOCANBusBrakeLiningRemainingAxleRear2RightWheelBuilder_ == null) {
/*       */           this.iOCANBusBrakeLiningRemainingAxleRear2RightWheel_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusBrakeLiningRemainingAxleRear2RightWheelBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeIOCANBusBrakeLiningRemainingAxleRear2RightWheel(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusBrakeLiningRemainingAxleRear2RightWheelBuilder_ == null) {
/*       */           if (this.iOCANBusBrakeLiningRemainingAxleRear2RightWheel_ != null) {
/*       */             this.iOCANBusBrakeLiningRemainingAxleRear2RightWheel_ = DolphinConfig.IO.newBuilder(this.iOCANBusBrakeLiningRemainingAxleRear2RightWheel_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.iOCANBusBrakeLiningRemainingAxleRear2RightWheel_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusBrakeLiningRemainingAxleRear2RightWheelBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearIOCANBusBrakeLiningRemainingAxleRear2RightWheel() {
/*       */         if (this.iOCANBusBrakeLiningRemainingAxleRear2RightWheelBuilder_ == null) {
/*       */           this.iOCANBusBrakeLiningRemainingAxleRear2RightWheel_ = null;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusBrakeLiningRemainingAxleRear2RightWheel_ = null;
/*       */           this.iOCANBusBrakeLiningRemainingAxleRear2RightWheelBuilder_ = null;
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOCANBusBrakeLiningRemainingAxleRear2RightWheelBuilder() {
/*       */         onChanged();
/*       */         return (DolphinConfig.IO.Builder)getIOCANBusBrakeLiningRemainingAxleRear2RightWheelFieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOCANBusBrakeLiningRemainingAxleRear2RightWheelOrBuilder() {
/*       */         return (this.iOCANBusBrakeLiningRemainingAxleRear2RightWheelBuilder_ != null) ? (DolphinConfig.IOOrBuilder)this.iOCANBusBrakeLiningRemainingAxleRear2RightWheelBuilder_.getMessageOrBuilder() : ((this.iOCANBusBrakeLiningRemainingAxleRear2RightWheel_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusBrakeLiningRemainingAxleRear2RightWheel_);
/*       */       }
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOCANBusBrakeLiningRemainingAxleRear2RightWheelFieldBuilder() {
/*       */         if (this.iOCANBusBrakeLiningRemainingAxleRear2RightWheelBuilder_ == null) {
/*       */           this.iOCANBusBrakeLiningRemainingAxleRear2RightWheelBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOCANBusBrakeLiningRemainingAxleRear2RightWheel(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.iOCANBusBrakeLiningRemainingAxleRear2RightWheel_ = null;
/*       */         } 
/*       */         return this.iOCANBusBrakeLiningRemainingAxleRear2RightWheelBuilder_;
/*       */       }
/*       */       
/*       */       public boolean hasIOCANBusBrakeLiningRemainingAxleRear3LeftWheel() {
/*       */         return (this.iOCANBusBrakeLiningRemainingAxleRear3LeftWheelBuilder_ != null || this.iOCANBusBrakeLiningRemainingAxleRear3LeftWheel_ != null);
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO getIOCANBusBrakeLiningRemainingAxleRear3LeftWheel() {
/*       */         return (this.iOCANBusBrakeLiningRemainingAxleRear3LeftWheelBuilder_ == null) ? ((this.iOCANBusBrakeLiningRemainingAxleRear3LeftWheel_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusBrakeLiningRemainingAxleRear3LeftWheel_) : (DolphinConfig.IO)this.iOCANBusBrakeLiningRemainingAxleRear3LeftWheelBuilder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusBrakeLiningRemainingAxleRear3LeftWheel(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusBrakeLiningRemainingAxleRear3LeftWheelBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.iOCANBusBrakeLiningRemainingAxleRear3LeftWheel_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusBrakeLiningRemainingAxleRear3LeftWheelBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusBrakeLiningRemainingAxleRear3LeftWheel(DolphinConfig.IO.Builder builderForValue) {
/*       */         if (this.iOCANBusBrakeLiningRemainingAxleRear3LeftWheelBuilder_ == null) {
/*       */           this.iOCANBusBrakeLiningRemainingAxleRear3LeftWheel_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusBrakeLiningRemainingAxleRear3LeftWheelBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeIOCANBusBrakeLiningRemainingAxleRear3LeftWheel(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusBrakeLiningRemainingAxleRear3LeftWheelBuilder_ == null) {
/*       */           if (this.iOCANBusBrakeLiningRemainingAxleRear3LeftWheel_ != null) {
/*       */             this.iOCANBusBrakeLiningRemainingAxleRear3LeftWheel_ = DolphinConfig.IO.newBuilder(this.iOCANBusBrakeLiningRemainingAxleRear3LeftWheel_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.iOCANBusBrakeLiningRemainingAxleRear3LeftWheel_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusBrakeLiningRemainingAxleRear3LeftWheelBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearIOCANBusBrakeLiningRemainingAxleRear3LeftWheel() {
/*       */         if (this.iOCANBusBrakeLiningRemainingAxleRear3LeftWheelBuilder_ == null) {
/*       */           this.iOCANBusBrakeLiningRemainingAxleRear3LeftWheel_ = null;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusBrakeLiningRemainingAxleRear3LeftWheel_ = null;
/*       */           this.iOCANBusBrakeLiningRemainingAxleRear3LeftWheelBuilder_ = null;
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOCANBusBrakeLiningRemainingAxleRear3LeftWheelBuilder() {
/*       */         onChanged();
/*       */         return (DolphinConfig.IO.Builder)getIOCANBusBrakeLiningRemainingAxleRear3LeftWheelFieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOCANBusBrakeLiningRemainingAxleRear3LeftWheelOrBuilder() {
/*       */         return (this.iOCANBusBrakeLiningRemainingAxleRear3LeftWheelBuilder_ != null) ? (DolphinConfig.IOOrBuilder)this.iOCANBusBrakeLiningRemainingAxleRear3LeftWheelBuilder_.getMessageOrBuilder() : ((this.iOCANBusBrakeLiningRemainingAxleRear3LeftWheel_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusBrakeLiningRemainingAxleRear3LeftWheel_);
/*       */       }
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOCANBusBrakeLiningRemainingAxleRear3LeftWheelFieldBuilder() {
/*       */         if (this.iOCANBusBrakeLiningRemainingAxleRear3LeftWheelBuilder_ == null) {
/*       */           this.iOCANBusBrakeLiningRemainingAxleRear3LeftWheelBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOCANBusBrakeLiningRemainingAxleRear3LeftWheel(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.iOCANBusBrakeLiningRemainingAxleRear3LeftWheel_ = null;
/*       */         } 
/*       */         return this.iOCANBusBrakeLiningRemainingAxleRear3LeftWheelBuilder_;
/*       */       }
/*       */       
/*       */       public boolean hasIOCANBusBrakeLiningRemainingAxleRear3RightWheel() {
/*       */         return (this.iOCANBusBrakeLiningRemainingAxleRear3RightWheelBuilder_ != null || this.iOCANBusBrakeLiningRemainingAxleRear3RightWheel_ != null);
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO getIOCANBusBrakeLiningRemainingAxleRear3RightWheel() {
/*       */         return (this.iOCANBusBrakeLiningRemainingAxleRear3RightWheelBuilder_ == null) ? ((this.iOCANBusBrakeLiningRemainingAxleRear3RightWheel_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusBrakeLiningRemainingAxleRear3RightWheel_) : (DolphinConfig.IO)this.iOCANBusBrakeLiningRemainingAxleRear3RightWheelBuilder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusBrakeLiningRemainingAxleRear3RightWheel(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusBrakeLiningRemainingAxleRear3RightWheelBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.iOCANBusBrakeLiningRemainingAxleRear3RightWheel_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusBrakeLiningRemainingAxleRear3RightWheelBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusBrakeLiningRemainingAxleRear3RightWheel(DolphinConfig.IO.Builder builderForValue) {
/*       */         if (this.iOCANBusBrakeLiningRemainingAxleRear3RightWheelBuilder_ == null) {
/*       */           this.iOCANBusBrakeLiningRemainingAxleRear3RightWheel_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusBrakeLiningRemainingAxleRear3RightWheelBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeIOCANBusBrakeLiningRemainingAxleRear3RightWheel(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusBrakeLiningRemainingAxleRear3RightWheelBuilder_ == null) {
/*       */           if (this.iOCANBusBrakeLiningRemainingAxleRear3RightWheel_ != null) {
/*       */             this.iOCANBusBrakeLiningRemainingAxleRear3RightWheel_ = DolphinConfig.IO.newBuilder(this.iOCANBusBrakeLiningRemainingAxleRear3RightWheel_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.iOCANBusBrakeLiningRemainingAxleRear3RightWheel_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusBrakeLiningRemainingAxleRear3RightWheelBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearIOCANBusBrakeLiningRemainingAxleRear3RightWheel() {
/*       */         if (this.iOCANBusBrakeLiningRemainingAxleRear3RightWheelBuilder_ == null) {
/*       */           this.iOCANBusBrakeLiningRemainingAxleRear3RightWheel_ = null;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusBrakeLiningRemainingAxleRear3RightWheel_ = null;
/*       */           this.iOCANBusBrakeLiningRemainingAxleRear3RightWheelBuilder_ = null;
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOCANBusBrakeLiningRemainingAxleRear3RightWheelBuilder() {
/*       */         onChanged();
/*       */         return (DolphinConfig.IO.Builder)getIOCANBusBrakeLiningRemainingAxleRear3RightWheelFieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOCANBusBrakeLiningRemainingAxleRear3RightWheelOrBuilder() {
/*       */         return (this.iOCANBusBrakeLiningRemainingAxleRear3RightWheelBuilder_ != null) ? (DolphinConfig.IOOrBuilder)this.iOCANBusBrakeLiningRemainingAxleRear3RightWheelBuilder_.getMessageOrBuilder() : ((this.iOCANBusBrakeLiningRemainingAxleRear3RightWheel_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusBrakeLiningRemainingAxleRear3RightWheel_);
/*       */       }
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOCANBusBrakeLiningRemainingAxleRear3RightWheelFieldBuilder() {
/*       */         if (this.iOCANBusBrakeLiningRemainingAxleRear3RightWheelBuilder_ == null) {
/*       */           this.iOCANBusBrakeLiningRemainingAxleRear3RightWheelBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOCANBusBrakeLiningRemainingAxleRear3RightWheel(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.iOCANBusBrakeLiningRemainingAxleRear3RightWheel_ = null;
/*       */         } 
/*       */         return this.iOCANBusBrakeLiningRemainingAxleRear3RightWheelBuilder_;
/*       */       }
/*       */       
/*       */       public boolean hasIOCANBusTruckBusCruiseControl() {
/*       */         return (this.iOCANBusTruckBusCruiseControlBuilder_ != null || this.iOCANBusTruckBusCruiseControl_ != null);
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO getIOCANBusTruckBusCruiseControl() {
/*       */         return (this.iOCANBusTruckBusCruiseControlBuilder_ == null) ? ((this.iOCANBusTruckBusCruiseControl_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusTruckBusCruiseControl_) : (DolphinConfig.IO)this.iOCANBusTruckBusCruiseControlBuilder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusTruckBusCruiseControl(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusTruckBusCruiseControlBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.iOCANBusTruckBusCruiseControl_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTruckBusCruiseControlBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusTruckBusCruiseControl(DolphinConfig.IO.Builder builderForValue) {
/*       */         if (this.iOCANBusTruckBusCruiseControlBuilder_ == null) {
/*       */           this.iOCANBusTruckBusCruiseControl_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTruckBusCruiseControlBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeIOCANBusTruckBusCruiseControl(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusTruckBusCruiseControlBuilder_ == null) {
/*       */           if (this.iOCANBusTruckBusCruiseControl_ != null) {
/*       */             this.iOCANBusTruckBusCruiseControl_ = DolphinConfig.IO.newBuilder(this.iOCANBusTruckBusCruiseControl_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.iOCANBusTruckBusCruiseControl_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTruckBusCruiseControlBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearIOCANBusTruckBusCruiseControl() {
/*       */         if (this.iOCANBusTruckBusCruiseControlBuilder_ == null) {
/*       */           this.iOCANBusTruckBusCruiseControl_ = null;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTruckBusCruiseControl_ = null;
/*       */           this.iOCANBusTruckBusCruiseControlBuilder_ = null;
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOCANBusTruckBusCruiseControlBuilder() {
/*       */         onChanged();
/*       */         return (DolphinConfig.IO.Builder)getIOCANBusTruckBusCruiseControlFieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOCANBusTruckBusCruiseControlOrBuilder() {
/*       */         return (this.iOCANBusTruckBusCruiseControlBuilder_ != null) ? (DolphinConfig.IOOrBuilder)this.iOCANBusTruckBusCruiseControlBuilder_.getMessageOrBuilder() : ((this.iOCANBusTruckBusCruiseControl_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusTruckBusCruiseControl_);
/*       */       }
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOCANBusTruckBusCruiseControlFieldBuilder() {
/*       */         if (this.iOCANBusTruckBusCruiseControlBuilder_ == null) {
/*       */           this.iOCANBusTruckBusCruiseControlBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOCANBusTruckBusCruiseControl(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.iOCANBusTruckBusCruiseControl_ = null;
/*       */         } 
/*       */         return this.iOCANBusTruckBusCruiseControlBuilder_;
/*       */       }
/*       */       
/*       */       public boolean hasIOCANBusBusAlternatorSpeedAlternatorStatus1() {
/*       */         return (this.iOCANBusBusAlternatorSpeedAlternatorStatus1Builder_ != null || this.iOCANBusBusAlternatorSpeedAlternatorStatus1_ != null);
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO getIOCANBusBusAlternatorSpeedAlternatorStatus1() {
/*       */         return (this.iOCANBusBusAlternatorSpeedAlternatorStatus1Builder_ == null) ? ((this.iOCANBusBusAlternatorSpeedAlternatorStatus1_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusBusAlternatorSpeedAlternatorStatus1_) : (DolphinConfig.IO)this.iOCANBusBusAlternatorSpeedAlternatorStatus1Builder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusBusAlternatorSpeedAlternatorStatus1(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusBusAlternatorSpeedAlternatorStatus1Builder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.iOCANBusBusAlternatorSpeedAlternatorStatus1_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusBusAlternatorSpeedAlternatorStatus1Builder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusBusAlternatorSpeedAlternatorStatus1(DolphinConfig.IO.Builder builderForValue) {
/*       */         if (this.iOCANBusBusAlternatorSpeedAlternatorStatus1Builder_ == null) {
/*       */           this.iOCANBusBusAlternatorSpeedAlternatorStatus1_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusBusAlternatorSpeedAlternatorStatus1Builder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeIOCANBusBusAlternatorSpeedAlternatorStatus1(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusBusAlternatorSpeedAlternatorStatus1Builder_ == null) {
/*       */           if (this.iOCANBusBusAlternatorSpeedAlternatorStatus1_ != null) {
/*       */             this.iOCANBusBusAlternatorSpeedAlternatorStatus1_ = DolphinConfig.IO.newBuilder(this.iOCANBusBusAlternatorSpeedAlternatorStatus1_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.iOCANBusBusAlternatorSpeedAlternatorStatus1_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusBusAlternatorSpeedAlternatorStatus1Builder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearIOCANBusBusAlternatorSpeedAlternatorStatus1() {
/*       */         if (this.iOCANBusBusAlternatorSpeedAlternatorStatus1Builder_ == null) {
/*       */           this.iOCANBusBusAlternatorSpeedAlternatorStatus1_ = null;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusBusAlternatorSpeedAlternatorStatus1_ = null;
/*       */           this.iOCANBusBusAlternatorSpeedAlternatorStatus1Builder_ = null;
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOCANBusBusAlternatorSpeedAlternatorStatus1Builder() {
/*       */         onChanged();
/*       */         return (DolphinConfig.IO.Builder)getIOCANBusBusAlternatorSpeedAlternatorStatus1FieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOCANBusBusAlternatorSpeedAlternatorStatus1OrBuilder() {
/*       */         return (this.iOCANBusBusAlternatorSpeedAlternatorStatus1Builder_ != null) ? (DolphinConfig.IOOrBuilder)this.iOCANBusBusAlternatorSpeedAlternatorStatus1Builder_.getMessageOrBuilder() : ((this.iOCANBusBusAlternatorSpeedAlternatorStatus1_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusBusAlternatorSpeedAlternatorStatus1_);
/*       */       }
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOCANBusBusAlternatorSpeedAlternatorStatus1FieldBuilder() {
/*       */         if (this.iOCANBusBusAlternatorSpeedAlternatorStatus1Builder_ == null) {
/*       */           this.iOCANBusBusAlternatorSpeedAlternatorStatus1Builder_ = new SingleFieldBuilderV3((AbstractMessage)getIOCANBusBusAlternatorSpeedAlternatorStatus1(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.iOCANBusBusAlternatorSpeedAlternatorStatus1_ = null;
/*       */         } 
/*       */         return this.iOCANBusBusAlternatorSpeedAlternatorStatus1Builder_;
/*       */       }
/*       */       
/*       */       public boolean hasIOCANBusBusAlternatorSpeedAlternatorStatus2() {
/*       */         return (this.iOCANBusBusAlternatorSpeedAlternatorStatus2Builder_ != null || this.iOCANBusBusAlternatorSpeedAlternatorStatus2_ != null);
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO getIOCANBusBusAlternatorSpeedAlternatorStatus2() {
/*       */         return (this.iOCANBusBusAlternatorSpeedAlternatorStatus2Builder_ == null) ? ((this.iOCANBusBusAlternatorSpeedAlternatorStatus2_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusBusAlternatorSpeedAlternatorStatus2_) : (DolphinConfig.IO)this.iOCANBusBusAlternatorSpeedAlternatorStatus2Builder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusBusAlternatorSpeedAlternatorStatus2(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusBusAlternatorSpeedAlternatorStatus2Builder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.iOCANBusBusAlternatorSpeedAlternatorStatus2_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusBusAlternatorSpeedAlternatorStatus2Builder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusBusAlternatorSpeedAlternatorStatus2(DolphinConfig.IO.Builder builderForValue) {
/*       */         if (this.iOCANBusBusAlternatorSpeedAlternatorStatus2Builder_ == null) {
/*       */           this.iOCANBusBusAlternatorSpeedAlternatorStatus2_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusBusAlternatorSpeedAlternatorStatus2Builder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeIOCANBusBusAlternatorSpeedAlternatorStatus2(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusBusAlternatorSpeedAlternatorStatus2Builder_ == null) {
/*       */           if (this.iOCANBusBusAlternatorSpeedAlternatorStatus2_ != null) {
/*       */             this.iOCANBusBusAlternatorSpeedAlternatorStatus2_ = DolphinConfig.IO.newBuilder(this.iOCANBusBusAlternatorSpeedAlternatorStatus2_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.iOCANBusBusAlternatorSpeedAlternatorStatus2_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusBusAlternatorSpeedAlternatorStatus2Builder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearIOCANBusBusAlternatorSpeedAlternatorStatus2() {
/*       */         if (this.iOCANBusBusAlternatorSpeedAlternatorStatus2Builder_ == null) {
/*       */           this.iOCANBusBusAlternatorSpeedAlternatorStatus2_ = null;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusBusAlternatorSpeedAlternatorStatus2_ = null;
/*       */           this.iOCANBusBusAlternatorSpeedAlternatorStatus2Builder_ = null;
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOCANBusBusAlternatorSpeedAlternatorStatus2Builder() {
/*       */         onChanged();
/*       */         return (DolphinConfig.IO.Builder)getIOCANBusBusAlternatorSpeedAlternatorStatus2FieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOCANBusBusAlternatorSpeedAlternatorStatus2OrBuilder() {
/*       */         return (this.iOCANBusBusAlternatorSpeedAlternatorStatus2Builder_ != null) ? (DolphinConfig.IOOrBuilder)this.iOCANBusBusAlternatorSpeedAlternatorStatus2Builder_.getMessageOrBuilder() : ((this.iOCANBusBusAlternatorSpeedAlternatorStatus2_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusBusAlternatorSpeedAlternatorStatus2_);
/*       */       }
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOCANBusBusAlternatorSpeedAlternatorStatus2FieldBuilder() {
/*       */         if (this.iOCANBusBusAlternatorSpeedAlternatorStatus2Builder_ == null) {
/*       */           this.iOCANBusBusAlternatorSpeedAlternatorStatus2Builder_ = new SingleFieldBuilderV3((AbstractMessage)getIOCANBusBusAlternatorSpeedAlternatorStatus2(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.iOCANBusBusAlternatorSpeedAlternatorStatus2_ = null;
/*       */         } 
/*       */         return this.iOCANBusBusAlternatorSpeedAlternatorStatus2Builder_;
/*       */       }
/*       */       
/*       */       public boolean hasIOCANBusBusAlternatorSpeedAlternatorStatus3() {
/*       */         return (this.iOCANBusBusAlternatorSpeedAlternatorStatus3Builder_ != null || this.iOCANBusBusAlternatorSpeedAlternatorStatus3_ != null);
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO getIOCANBusBusAlternatorSpeedAlternatorStatus3() {
/*       */         return (this.iOCANBusBusAlternatorSpeedAlternatorStatus3Builder_ == null) ? ((this.iOCANBusBusAlternatorSpeedAlternatorStatus3_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusBusAlternatorSpeedAlternatorStatus3_) : (DolphinConfig.IO)this.iOCANBusBusAlternatorSpeedAlternatorStatus3Builder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusBusAlternatorSpeedAlternatorStatus3(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusBusAlternatorSpeedAlternatorStatus3Builder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.iOCANBusBusAlternatorSpeedAlternatorStatus3_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusBusAlternatorSpeedAlternatorStatus3Builder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusBusAlternatorSpeedAlternatorStatus3(DolphinConfig.IO.Builder builderForValue) {
/*       */         if (this.iOCANBusBusAlternatorSpeedAlternatorStatus3Builder_ == null) {
/*       */           this.iOCANBusBusAlternatorSpeedAlternatorStatus3_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusBusAlternatorSpeedAlternatorStatus3Builder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeIOCANBusBusAlternatorSpeedAlternatorStatus3(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusBusAlternatorSpeedAlternatorStatus3Builder_ == null) {
/*       */           if (this.iOCANBusBusAlternatorSpeedAlternatorStatus3_ != null) {
/*       */             this.iOCANBusBusAlternatorSpeedAlternatorStatus3_ = DolphinConfig.IO.newBuilder(this.iOCANBusBusAlternatorSpeedAlternatorStatus3_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.iOCANBusBusAlternatorSpeedAlternatorStatus3_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusBusAlternatorSpeedAlternatorStatus3Builder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearIOCANBusBusAlternatorSpeedAlternatorStatus3() {
/*       */         if (this.iOCANBusBusAlternatorSpeedAlternatorStatus3Builder_ == null) {
/*       */           this.iOCANBusBusAlternatorSpeedAlternatorStatus3_ = null;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusBusAlternatorSpeedAlternatorStatus3_ = null;
/*       */           this.iOCANBusBusAlternatorSpeedAlternatorStatus3Builder_ = null;
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOCANBusBusAlternatorSpeedAlternatorStatus3Builder() {
/*       */         onChanged();
/*       */         return (DolphinConfig.IO.Builder)getIOCANBusBusAlternatorSpeedAlternatorStatus3FieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOCANBusBusAlternatorSpeedAlternatorStatus3OrBuilder() {
/*       */         return (this.iOCANBusBusAlternatorSpeedAlternatorStatus3Builder_ != null) ? (DolphinConfig.IOOrBuilder)this.iOCANBusBusAlternatorSpeedAlternatorStatus3Builder_.getMessageOrBuilder() : ((this.iOCANBusBusAlternatorSpeedAlternatorStatus3_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusBusAlternatorSpeedAlternatorStatus3_);
/*       */       }
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOCANBusBusAlternatorSpeedAlternatorStatus3FieldBuilder() {
/*       */         if (this.iOCANBusBusAlternatorSpeedAlternatorStatus3Builder_ == null) {
/*       */           this.iOCANBusBusAlternatorSpeedAlternatorStatus3Builder_ = new SingleFieldBuilderV3((AbstractMessage)getIOCANBusBusAlternatorSpeedAlternatorStatus3(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.iOCANBusBusAlternatorSpeedAlternatorStatus3_ = null;
/*       */         } 
/*       */         return this.iOCANBusBusAlternatorSpeedAlternatorStatus3Builder_;
/*       */       }
/*       */       
/*       */       public boolean hasIOCANBusBusAlternatorSpeedAlternatorStatus4() {
/*       */         return (this.iOCANBusBusAlternatorSpeedAlternatorStatus4Builder_ != null || this.iOCANBusBusAlternatorSpeedAlternatorStatus4_ != null);
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO getIOCANBusBusAlternatorSpeedAlternatorStatus4() {
/*       */         return (this.iOCANBusBusAlternatorSpeedAlternatorStatus4Builder_ == null) ? ((this.iOCANBusBusAlternatorSpeedAlternatorStatus4_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusBusAlternatorSpeedAlternatorStatus4_) : (DolphinConfig.IO)this.iOCANBusBusAlternatorSpeedAlternatorStatus4Builder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusBusAlternatorSpeedAlternatorStatus4(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusBusAlternatorSpeedAlternatorStatus4Builder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.iOCANBusBusAlternatorSpeedAlternatorStatus4_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusBusAlternatorSpeedAlternatorStatus4Builder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusBusAlternatorSpeedAlternatorStatus4(DolphinConfig.IO.Builder builderForValue) {
/*       */         if (this.iOCANBusBusAlternatorSpeedAlternatorStatus4Builder_ == null) {
/*       */           this.iOCANBusBusAlternatorSpeedAlternatorStatus4_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusBusAlternatorSpeedAlternatorStatus4Builder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeIOCANBusBusAlternatorSpeedAlternatorStatus4(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusBusAlternatorSpeedAlternatorStatus4Builder_ == null) {
/*       */           if (this.iOCANBusBusAlternatorSpeedAlternatorStatus4_ != null) {
/*       */             this.iOCANBusBusAlternatorSpeedAlternatorStatus4_ = DolphinConfig.IO.newBuilder(this.iOCANBusBusAlternatorSpeedAlternatorStatus4_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.iOCANBusBusAlternatorSpeedAlternatorStatus4_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusBusAlternatorSpeedAlternatorStatus4Builder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearIOCANBusBusAlternatorSpeedAlternatorStatus4() {
/*       */         if (this.iOCANBusBusAlternatorSpeedAlternatorStatus4Builder_ == null) {
/*       */           this.iOCANBusBusAlternatorSpeedAlternatorStatus4_ = null;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusBusAlternatorSpeedAlternatorStatus4_ = null;
/*       */           this.iOCANBusBusAlternatorSpeedAlternatorStatus4Builder_ = null;
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOCANBusBusAlternatorSpeedAlternatorStatus4Builder() {
/*       */         onChanged();
/*       */         return (DolphinConfig.IO.Builder)getIOCANBusBusAlternatorSpeedAlternatorStatus4FieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOCANBusBusAlternatorSpeedAlternatorStatus4OrBuilder() {
/*       */         return (this.iOCANBusBusAlternatorSpeedAlternatorStatus4Builder_ != null) ? (DolphinConfig.IOOrBuilder)this.iOCANBusBusAlternatorSpeedAlternatorStatus4Builder_.getMessageOrBuilder() : ((this.iOCANBusBusAlternatorSpeedAlternatorStatus4_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusBusAlternatorSpeedAlternatorStatus4_);
/*       */       }
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOCANBusBusAlternatorSpeedAlternatorStatus4FieldBuilder() {
/*       */         if (this.iOCANBusBusAlternatorSpeedAlternatorStatus4Builder_ == null) {
/*       */           this.iOCANBusBusAlternatorSpeedAlternatorStatus4Builder_ = new SingleFieldBuilderV3((AbstractMessage)getIOCANBusBusAlternatorSpeedAlternatorStatus4(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.iOCANBusBusAlternatorSpeedAlternatorStatus4_ = null;
/*       */         } 
/*       */         return this.iOCANBusBusAlternatorSpeedAlternatorStatus4Builder_;
/*       */       }
/*       */       
/*       */       public boolean hasIOCANBusBusElectronicTransmissionController2SelectedGear() {
/*       */         return (this.iOCANBusBusElectronicTransmissionController2SelectedGearBuilder_ != null || this.iOCANBusBusElectronicTransmissionController2SelectedGear_ != null);
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO getIOCANBusBusElectronicTransmissionController2SelectedGear() {
/*       */         return (this.iOCANBusBusElectronicTransmissionController2SelectedGearBuilder_ == null) ? ((this.iOCANBusBusElectronicTransmissionController2SelectedGear_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusBusElectronicTransmissionController2SelectedGear_) : (DolphinConfig.IO)this.iOCANBusBusElectronicTransmissionController2SelectedGearBuilder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusBusElectronicTransmissionController2SelectedGear(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusBusElectronicTransmissionController2SelectedGearBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.iOCANBusBusElectronicTransmissionController2SelectedGear_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusBusElectronicTransmissionController2SelectedGearBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusBusElectronicTransmissionController2SelectedGear(DolphinConfig.IO.Builder builderForValue) {
/*       */         if (this.iOCANBusBusElectronicTransmissionController2SelectedGearBuilder_ == null) {
/*       */           this.iOCANBusBusElectronicTransmissionController2SelectedGear_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusBusElectronicTransmissionController2SelectedGearBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeIOCANBusBusElectronicTransmissionController2SelectedGear(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusBusElectronicTransmissionController2SelectedGearBuilder_ == null) {
/*       */           if (this.iOCANBusBusElectronicTransmissionController2SelectedGear_ != null) {
/*       */             this.iOCANBusBusElectronicTransmissionController2SelectedGear_ = DolphinConfig.IO.newBuilder(this.iOCANBusBusElectronicTransmissionController2SelectedGear_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.iOCANBusBusElectronicTransmissionController2SelectedGear_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusBusElectronicTransmissionController2SelectedGearBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearIOCANBusBusElectronicTransmissionController2SelectedGear() {
/*       */         if (this.iOCANBusBusElectronicTransmissionController2SelectedGearBuilder_ == null) {
/*       */           this.iOCANBusBusElectronicTransmissionController2SelectedGear_ = null;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusBusElectronicTransmissionController2SelectedGear_ = null;
/*       */           this.iOCANBusBusElectronicTransmissionController2SelectedGearBuilder_ = null;
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOCANBusBusElectronicTransmissionController2SelectedGearBuilder() {
/*       */         onChanged();
/*       */         return (DolphinConfig.IO.Builder)getIOCANBusBusElectronicTransmissionController2SelectedGearFieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOCANBusBusElectronicTransmissionController2SelectedGearOrBuilder() {
/*       */         return (this.iOCANBusBusElectronicTransmissionController2SelectedGearBuilder_ != null) ? (DolphinConfig.IOOrBuilder)this.iOCANBusBusElectronicTransmissionController2SelectedGearBuilder_.getMessageOrBuilder() : ((this.iOCANBusBusElectronicTransmissionController2SelectedGear_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusBusElectronicTransmissionController2SelectedGear_);
/*       */       }
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOCANBusBusElectronicTransmissionController2SelectedGearFieldBuilder() {
/*       */         if (this.iOCANBusBusElectronicTransmissionController2SelectedGearBuilder_ == null) {
/*       */           this.iOCANBusBusElectronicTransmissionController2SelectedGearBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOCANBusBusElectronicTransmissionController2SelectedGear(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.iOCANBusBusElectronicTransmissionController2SelectedGear_ = null;
/*       */         } 
/*       */         return this.iOCANBusBusElectronicTransmissionController2SelectedGearBuilder_;
/*       */       }
/*       */       
/*       */       public boolean hasIOCANBusBusElectronicTransmissionController2CurrentGear() {
/*       */         return (this.iOCANBusBusElectronicTransmissionController2CurrentGearBuilder_ != null || this.iOCANBusBusElectronicTransmissionController2CurrentGear_ != null);
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO getIOCANBusBusElectronicTransmissionController2CurrentGear() {
/*       */         return (this.iOCANBusBusElectronicTransmissionController2CurrentGearBuilder_ == null) ? ((this.iOCANBusBusElectronicTransmissionController2CurrentGear_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusBusElectronicTransmissionController2CurrentGear_) : (DolphinConfig.IO)this.iOCANBusBusElectronicTransmissionController2CurrentGearBuilder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusBusElectronicTransmissionController2CurrentGear(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusBusElectronicTransmissionController2CurrentGearBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.iOCANBusBusElectronicTransmissionController2CurrentGear_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusBusElectronicTransmissionController2CurrentGearBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusBusElectronicTransmissionController2CurrentGear(DolphinConfig.IO.Builder builderForValue) {
/*       */         if (this.iOCANBusBusElectronicTransmissionController2CurrentGearBuilder_ == null) {
/*       */           this.iOCANBusBusElectronicTransmissionController2CurrentGear_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusBusElectronicTransmissionController2CurrentGearBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeIOCANBusBusElectronicTransmissionController2CurrentGear(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusBusElectronicTransmissionController2CurrentGearBuilder_ == null) {
/*       */           if (this.iOCANBusBusElectronicTransmissionController2CurrentGear_ != null) {
/*       */             this.iOCANBusBusElectronicTransmissionController2CurrentGear_ = DolphinConfig.IO.newBuilder(this.iOCANBusBusElectronicTransmissionController2CurrentGear_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.iOCANBusBusElectronicTransmissionController2CurrentGear_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusBusElectronicTransmissionController2CurrentGearBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearIOCANBusBusElectronicTransmissionController2CurrentGear() {
/*       */         if (this.iOCANBusBusElectronicTransmissionController2CurrentGearBuilder_ == null) {
/*       */           this.iOCANBusBusElectronicTransmissionController2CurrentGear_ = null;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusBusElectronicTransmissionController2CurrentGear_ = null;
/*       */           this.iOCANBusBusElectronicTransmissionController2CurrentGearBuilder_ = null;
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOCANBusBusElectronicTransmissionController2CurrentGearBuilder() {
/*       */         onChanged();
/*       */         return (DolphinConfig.IO.Builder)getIOCANBusBusElectronicTransmissionController2CurrentGearFieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOCANBusBusElectronicTransmissionController2CurrentGearOrBuilder() {
/*       */         return (this.iOCANBusBusElectronicTransmissionController2CurrentGearBuilder_ != null) ? (DolphinConfig.IOOrBuilder)this.iOCANBusBusElectronicTransmissionController2CurrentGearBuilder_.getMessageOrBuilder() : ((this.iOCANBusBusElectronicTransmissionController2CurrentGear_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusBusElectronicTransmissionController2CurrentGear_);
/*       */       }
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOCANBusBusElectronicTransmissionController2CurrentGearFieldBuilder() {
/*       */         if (this.iOCANBusBusElectronicTransmissionController2CurrentGearBuilder_ == null) {
/*       */           this.iOCANBusBusElectronicTransmissionController2CurrentGearBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOCANBusBusElectronicTransmissionController2CurrentGear(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.iOCANBusBusElectronicTransmissionController2CurrentGear_ = null;
/*       */         } 
/*       */         return this.iOCANBusBusElectronicTransmissionController2CurrentGearBuilder_;
/*       */       }
/*       */       
/*       */       public boolean hasIOCANBusBusAirSuspensionControl4FrontAxleLeft() {
/*       */         return (this.iOCANBusBusAirSuspensionControl4FrontAxleLeftBuilder_ != null || this.iOCANBusBusAirSuspensionControl4FrontAxleLeft_ != null);
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO getIOCANBusBusAirSuspensionControl4FrontAxleLeft() {
/*       */         return (this.iOCANBusBusAirSuspensionControl4FrontAxleLeftBuilder_ == null) ? ((this.iOCANBusBusAirSuspensionControl4FrontAxleLeft_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusBusAirSuspensionControl4FrontAxleLeft_) : (DolphinConfig.IO)this.iOCANBusBusAirSuspensionControl4FrontAxleLeftBuilder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusBusAirSuspensionControl4FrontAxleLeft(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusBusAirSuspensionControl4FrontAxleLeftBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.iOCANBusBusAirSuspensionControl4FrontAxleLeft_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusBusAirSuspensionControl4FrontAxleLeftBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusBusAirSuspensionControl4FrontAxleLeft(DolphinConfig.IO.Builder builderForValue) {
/*       */         if (this.iOCANBusBusAirSuspensionControl4FrontAxleLeftBuilder_ == null) {
/*       */           this.iOCANBusBusAirSuspensionControl4FrontAxleLeft_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusBusAirSuspensionControl4FrontAxleLeftBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeIOCANBusBusAirSuspensionControl4FrontAxleLeft(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusBusAirSuspensionControl4FrontAxleLeftBuilder_ == null) {
/*       */           if (this.iOCANBusBusAirSuspensionControl4FrontAxleLeft_ != null) {
/*       */             this.iOCANBusBusAirSuspensionControl4FrontAxleLeft_ = DolphinConfig.IO.newBuilder(this.iOCANBusBusAirSuspensionControl4FrontAxleLeft_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.iOCANBusBusAirSuspensionControl4FrontAxleLeft_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusBusAirSuspensionControl4FrontAxleLeftBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearIOCANBusBusAirSuspensionControl4FrontAxleLeft() {
/*       */         if (this.iOCANBusBusAirSuspensionControl4FrontAxleLeftBuilder_ == null) {
/*       */           this.iOCANBusBusAirSuspensionControl4FrontAxleLeft_ = null;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusBusAirSuspensionControl4FrontAxleLeft_ = null;
/*       */           this.iOCANBusBusAirSuspensionControl4FrontAxleLeftBuilder_ = null;
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOCANBusBusAirSuspensionControl4FrontAxleLeftBuilder() {
/*       */         onChanged();
/*       */         return (DolphinConfig.IO.Builder)getIOCANBusBusAirSuspensionControl4FrontAxleLeftFieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOCANBusBusAirSuspensionControl4FrontAxleLeftOrBuilder() {
/*       */         return (this.iOCANBusBusAirSuspensionControl4FrontAxleLeftBuilder_ != null) ? (DolphinConfig.IOOrBuilder)this.iOCANBusBusAirSuspensionControl4FrontAxleLeftBuilder_.getMessageOrBuilder() : ((this.iOCANBusBusAirSuspensionControl4FrontAxleLeft_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusBusAirSuspensionControl4FrontAxleLeft_);
/*       */       }
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOCANBusBusAirSuspensionControl4FrontAxleLeftFieldBuilder() {
/*       */         if (this.iOCANBusBusAirSuspensionControl4FrontAxleLeftBuilder_ == null) {
/*       */           this.iOCANBusBusAirSuspensionControl4FrontAxleLeftBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOCANBusBusAirSuspensionControl4FrontAxleLeft(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.iOCANBusBusAirSuspensionControl4FrontAxleLeft_ = null;
/*       */         } 
/*       */         return this.iOCANBusBusAirSuspensionControl4FrontAxleLeftBuilder_;
/*       */       }
/*       */       
/*       */       public boolean hasIOCANBusBusAirSuspensionControl4FrontAxleRight() {
/*       */         return (this.iOCANBusBusAirSuspensionControl4FrontAxleRightBuilder_ != null || this.iOCANBusBusAirSuspensionControl4FrontAxleRight_ != null);
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO getIOCANBusBusAirSuspensionControl4FrontAxleRight() {
/*       */         return (this.iOCANBusBusAirSuspensionControl4FrontAxleRightBuilder_ == null) ? ((this.iOCANBusBusAirSuspensionControl4FrontAxleRight_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusBusAirSuspensionControl4FrontAxleRight_) : (DolphinConfig.IO)this.iOCANBusBusAirSuspensionControl4FrontAxleRightBuilder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusBusAirSuspensionControl4FrontAxleRight(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusBusAirSuspensionControl4FrontAxleRightBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.iOCANBusBusAirSuspensionControl4FrontAxleRight_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusBusAirSuspensionControl4FrontAxleRightBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusBusAirSuspensionControl4FrontAxleRight(DolphinConfig.IO.Builder builderForValue) {
/*       */         if (this.iOCANBusBusAirSuspensionControl4FrontAxleRightBuilder_ == null) {
/*       */           this.iOCANBusBusAirSuspensionControl4FrontAxleRight_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusBusAirSuspensionControl4FrontAxleRightBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeIOCANBusBusAirSuspensionControl4FrontAxleRight(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusBusAirSuspensionControl4FrontAxleRightBuilder_ == null) {
/*       */           if (this.iOCANBusBusAirSuspensionControl4FrontAxleRight_ != null) {
/*       */             this.iOCANBusBusAirSuspensionControl4FrontAxleRight_ = DolphinConfig.IO.newBuilder(this.iOCANBusBusAirSuspensionControl4FrontAxleRight_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.iOCANBusBusAirSuspensionControl4FrontAxleRight_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusBusAirSuspensionControl4FrontAxleRightBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearIOCANBusBusAirSuspensionControl4FrontAxleRight() {
/*       */         if (this.iOCANBusBusAirSuspensionControl4FrontAxleRightBuilder_ == null) {
/*       */           this.iOCANBusBusAirSuspensionControl4FrontAxleRight_ = null;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusBusAirSuspensionControl4FrontAxleRight_ = null;
/*       */           this.iOCANBusBusAirSuspensionControl4FrontAxleRightBuilder_ = null;
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOCANBusBusAirSuspensionControl4FrontAxleRightBuilder() {
/*       */         onChanged();
/*       */         return (DolphinConfig.IO.Builder)getIOCANBusBusAirSuspensionControl4FrontAxleRightFieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOCANBusBusAirSuspensionControl4FrontAxleRightOrBuilder() {
/*       */         return (this.iOCANBusBusAirSuspensionControl4FrontAxleRightBuilder_ != null) ? (DolphinConfig.IOOrBuilder)this.iOCANBusBusAirSuspensionControl4FrontAxleRightBuilder_.getMessageOrBuilder() : ((this.iOCANBusBusAirSuspensionControl4FrontAxleRight_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusBusAirSuspensionControl4FrontAxleRight_);
/*       */       }
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOCANBusBusAirSuspensionControl4FrontAxleRightFieldBuilder() {
/*       */         if (this.iOCANBusBusAirSuspensionControl4FrontAxleRightBuilder_ == null) {
/*       */           this.iOCANBusBusAirSuspensionControl4FrontAxleRightBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOCANBusBusAirSuspensionControl4FrontAxleRight(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.iOCANBusBusAirSuspensionControl4FrontAxleRight_ = null;
/*       */         } 
/*       */         return this.iOCANBusBusAirSuspensionControl4FrontAxleRightBuilder_;
/*       */       }
/*       */       
/*       */       public boolean hasIOCANBusBusAirSuspensionControl4RearAxleLeft() {
/*       */         return (this.iOCANBusBusAirSuspensionControl4RearAxleLeftBuilder_ != null || this.iOCANBusBusAirSuspensionControl4RearAxleLeft_ != null);
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO getIOCANBusBusAirSuspensionControl4RearAxleLeft() {
/*       */         return (this.iOCANBusBusAirSuspensionControl4RearAxleLeftBuilder_ == null) ? ((this.iOCANBusBusAirSuspensionControl4RearAxleLeft_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusBusAirSuspensionControl4RearAxleLeft_) : (DolphinConfig.IO)this.iOCANBusBusAirSuspensionControl4RearAxleLeftBuilder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusBusAirSuspensionControl4RearAxleLeft(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusBusAirSuspensionControl4RearAxleLeftBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.iOCANBusBusAirSuspensionControl4RearAxleLeft_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusBusAirSuspensionControl4RearAxleLeftBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusBusAirSuspensionControl4RearAxleLeft(DolphinConfig.IO.Builder builderForValue) {
/*       */         if (this.iOCANBusBusAirSuspensionControl4RearAxleLeftBuilder_ == null) {
/*       */           this.iOCANBusBusAirSuspensionControl4RearAxleLeft_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusBusAirSuspensionControl4RearAxleLeftBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeIOCANBusBusAirSuspensionControl4RearAxleLeft(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusBusAirSuspensionControl4RearAxleLeftBuilder_ == null) {
/*       */           if (this.iOCANBusBusAirSuspensionControl4RearAxleLeft_ != null) {
/*       */             this.iOCANBusBusAirSuspensionControl4RearAxleLeft_ = DolphinConfig.IO.newBuilder(this.iOCANBusBusAirSuspensionControl4RearAxleLeft_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.iOCANBusBusAirSuspensionControl4RearAxleLeft_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusBusAirSuspensionControl4RearAxleLeftBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearIOCANBusBusAirSuspensionControl4RearAxleLeft() {
/*       */         if (this.iOCANBusBusAirSuspensionControl4RearAxleLeftBuilder_ == null) {
/*       */           this.iOCANBusBusAirSuspensionControl4RearAxleLeft_ = null;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusBusAirSuspensionControl4RearAxleLeft_ = null;
/*       */           this.iOCANBusBusAirSuspensionControl4RearAxleLeftBuilder_ = null;
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOCANBusBusAirSuspensionControl4RearAxleLeftBuilder() {
/*       */         onChanged();
/*       */         return (DolphinConfig.IO.Builder)getIOCANBusBusAirSuspensionControl4RearAxleLeftFieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOCANBusBusAirSuspensionControl4RearAxleLeftOrBuilder() {
/*       */         return (this.iOCANBusBusAirSuspensionControl4RearAxleLeftBuilder_ != null) ? (DolphinConfig.IOOrBuilder)this.iOCANBusBusAirSuspensionControl4RearAxleLeftBuilder_.getMessageOrBuilder() : ((this.iOCANBusBusAirSuspensionControl4RearAxleLeft_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusBusAirSuspensionControl4RearAxleLeft_);
/*       */       }
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOCANBusBusAirSuspensionControl4RearAxleLeftFieldBuilder() {
/*       */         if (this.iOCANBusBusAirSuspensionControl4RearAxleLeftBuilder_ == null) {
/*       */           this.iOCANBusBusAirSuspensionControl4RearAxleLeftBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOCANBusBusAirSuspensionControl4RearAxleLeft(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.iOCANBusBusAirSuspensionControl4RearAxleLeft_ = null;
/*       */         } 
/*       */         return this.iOCANBusBusAirSuspensionControl4RearAxleLeftBuilder_;
/*       */       }
/*       */       
/*       */       public boolean hasIOCANBusBusAirSuspensionControl4RearAxleright() {
/*       */         return (this.iOCANBusBusAirSuspensionControl4RearAxlerightBuilder_ != null || this.iOCANBusBusAirSuspensionControl4RearAxleright_ != null);
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO getIOCANBusBusAirSuspensionControl4RearAxleright() {
/*       */         return (this.iOCANBusBusAirSuspensionControl4RearAxlerightBuilder_ == null) ? ((this.iOCANBusBusAirSuspensionControl4RearAxleright_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusBusAirSuspensionControl4RearAxleright_) : (DolphinConfig.IO)this.iOCANBusBusAirSuspensionControl4RearAxlerightBuilder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusBusAirSuspensionControl4RearAxleright(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusBusAirSuspensionControl4RearAxlerightBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.iOCANBusBusAirSuspensionControl4RearAxleright_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusBusAirSuspensionControl4RearAxlerightBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusBusAirSuspensionControl4RearAxleright(DolphinConfig.IO.Builder builderForValue) {
/*       */         if (this.iOCANBusBusAirSuspensionControl4RearAxlerightBuilder_ == null) {
/*       */           this.iOCANBusBusAirSuspensionControl4RearAxleright_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusBusAirSuspensionControl4RearAxlerightBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeIOCANBusBusAirSuspensionControl4RearAxleright(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusBusAirSuspensionControl4RearAxlerightBuilder_ == null) {
/*       */           if (this.iOCANBusBusAirSuspensionControl4RearAxleright_ != null) {
/*       */             this.iOCANBusBusAirSuspensionControl4RearAxleright_ = DolphinConfig.IO.newBuilder(this.iOCANBusBusAirSuspensionControl4RearAxleright_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.iOCANBusBusAirSuspensionControl4RearAxleright_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusBusAirSuspensionControl4RearAxlerightBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearIOCANBusBusAirSuspensionControl4RearAxleright() {
/*       */         if (this.iOCANBusBusAirSuspensionControl4RearAxlerightBuilder_ == null) {
/*       */           this.iOCANBusBusAirSuspensionControl4RearAxleright_ = null;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusBusAirSuspensionControl4RearAxleright_ = null;
/*       */           this.iOCANBusBusAirSuspensionControl4RearAxlerightBuilder_ = null;
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOCANBusBusAirSuspensionControl4RearAxlerightBuilder() {
/*       */         onChanged();
/*       */         return (DolphinConfig.IO.Builder)getIOCANBusBusAirSuspensionControl4RearAxlerightFieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOCANBusBusAirSuspensionControl4RearAxlerightOrBuilder() {
/*       */         return (this.iOCANBusBusAirSuspensionControl4RearAxlerightBuilder_ != null) ? (DolphinConfig.IOOrBuilder)this.iOCANBusBusAirSuspensionControl4RearAxlerightBuilder_.getMessageOrBuilder() : ((this.iOCANBusBusAirSuspensionControl4RearAxleright_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusBusAirSuspensionControl4RearAxleright_);
/*       */       }
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOCANBusBusAirSuspensionControl4RearAxlerightFieldBuilder() {
/*       */         if (this.iOCANBusBusAirSuspensionControl4RearAxlerightBuilder_ == null) {
/*       */           this.iOCANBusBusAirSuspensionControl4RearAxlerightBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOCANBusBusAirSuspensionControl4RearAxleright(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.iOCANBusBusAirSuspensionControl4RearAxleright_ = null;
/*       */         } 
/*       */         return this.iOCANBusBusAirSuspensionControl4RearAxlerightBuilder_;
/*       */       }
/*       */       
/*       */       public boolean hasIOCANBusDashDisplayFuelLevel2() {
/*       */         return (this.iOCANBusDashDisplayFuelLevel2Builder_ != null || this.iOCANBusDashDisplayFuelLevel2_ != null);
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO getIOCANBusDashDisplayFuelLevel2() {
/*       */         return (this.iOCANBusDashDisplayFuelLevel2Builder_ == null) ? ((this.iOCANBusDashDisplayFuelLevel2_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusDashDisplayFuelLevel2_) : (DolphinConfig.IO)this.iOCANBusDashDisplayFuelLevel2Builder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusDashDisplayFuelLevel2(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusDashDisplayFuelLevel2Builder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.iOCANBusDashDisplayFuelLevel2_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusDashDisplayFuelLevel2Builder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusDashDisplayFuelLevel2(DolphinConfig.IO.Builder builderForValue) {
/*       */         if (this.iOCANBusDashDisplayFuelLevel2Builder_ == null) {
/*       */           this.iOCANBusDashDisplayFuelLevel2_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusDashDisplayFuelLevel2Builder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeIOCANBusDashDisplayFuelLevel2(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusDashDisplayFuelLevel2Builder_ == null) {
/*       */           if (this.iOCANBusDashDisplayFuelLevel2_ != null) {
/*       */             this.iOCANBusDashDisplayFuelLevel2_ = DolphinConfig.IO.newBuilder(this.iOCANBusDashDisplayFuelLevel2_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.iOCANBusDashDisplayFuelLevel2_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusDashDisplayFuelLevel2Builder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearIOCANBusDashDisplayFuelLevel2() {
/*       */         if (this.iOCANBusDashDisplayFuelLevel2Builder_ == null) {
/*       */           this.iOCANBusDashDisplayFuelLevel2_ = null;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusDashDisplayFuelLevel2_ = null;
/*       */           this.iOCANBusDashDisplayFuelLevel2Builder_ = null;
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOCANBusDashDisplayFuelLevel2Builder() {
/*       */         onChanged();
/*       */         return (DolphinConfig.IO.Builder)getIOCANBusDashDisplayFuelLevel2FieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOCANBusDashDisplayFuelLevel2OrBuilder() {
/*       */         return (this.iOCANBusDashDisplayFuelLevel2Builder_ != null) ? (DolphinConfig.IOOrBuilder)this.iOCANBusDashDisplayFuelLevel2Builder_.getMessageOrBuilder() : ((this.iOCANBusDashDisplayFuelLevel2_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusDashDisplayFuelLevel2_);
/*       */       }
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOCANBusDashDisplayFuelLevel2FieldBuilder() {
/*       */         if (this.iOCANBusDashDisplayFuelLevel2Builder_ == null) {
/*       */           this.iOCANBusDashDisplayFuelLevel2Builder_ = new SingleFieldBuilderV3((AbstractMessage)getIOCANBusDashDisplayFuelLevel2(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.iOCANBusDashDisplayFuelLevel2_ = null;
/*       */         } 
/*       */         return this.iOCANBusDashDisplayFuelLevel2Builder_;
/*       */       }
/*       */       
/*       */       public boolean hasIOCANBusElectronicBrakeControllerBrakePedalPosition() {
/*       */         return (this.iOCANBusElectronicBrakeControllerBrakePedalPositionBuilder_ != null || this.iOCANBusElectronicBrakeControllerBrakePedalPosition_ != null);
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO getIOCANBusElectronicBrakeControllerBrakePedalPosition() {
/*       */         return (this.iOCANBusElectronicBrakeControllerBrakePedalPositionBuilder_ == null) ? ((this.iOCANBusElectronicBrakeControllerBrakePedalPosition_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusElectronicBrakeControllerBrakePedalPosition_) : (DolphinConfig.IO)this.iOCANBusElectronicBrakeControllerBrakePedalPositionBuilder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusElectronicBrakeControllerBrakePedalPosition(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusElectronicBrakeControllerBrakePedalPositionBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.iOCANBusElectronicBrakeControllerBrakePedalPosition_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusElectronicBrakeControllerBrakePedalPositionBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusElectronicBrakeControllerBrakePedalPosition(DolphinConfig.IO.Builder builderForValue) {
/*       */         if (this.iOCANBusElectronicBrakeControllerBrakePedalPositionBuilder_ == null) {
/*       */           this.iOCANBusElectronicBrakeControllerBrakePedalPosition_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusElectronicBrakeControllerBrakePedalPositionBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeIOCANBusElectronicBrakeControllerBrakePedalPosition(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusElectronicBrakeControllerBrakePedalPositionBuilder_ == null) {
/*       */           if (this.iOCANBusElectronicBrakeControllerBrakePedalPosition_ != null) {
/*       */             this.iOCANBusElectronicBrakeControllerBrakePedalPosition_ = DolphinConfig.IO.newBuilder(this.iOCANBusElectronicBrakeControllerBrakePedalPosition_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.iOCANBusElectronicBrakeControllerBrakePedalPosition_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusElectronicBrakeControllerBrakePedalPositionBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearIOCANBusElectronicBrakeControllerBrakePedalPosition() {
/*       */         if (this.iOCANBusElectronicBrakeControllerBrakePedalPositionBuilder_ == null) {
/*       */           this.iOCANBusElectronicBrakeControllerBrakePedalPosition_ = null;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusElectronicBrakeControllerBrakePedalPosition_ = null;
/*       */           this.iOCANBusElectronicBrakeControllerBrakePedalPositionBuilder_ = null;
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOCANBusElectronicBrakeControllerBrakePedalPositionBuilder() {
/*       */         onChanged();
/*       */         return (DolphinConfig.IO.Builder)getIOCANBusElectronicBrakeControllerBrakePedalPositionFieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOCANBusElectronicBrakeControllerBrakePedalPositionOrBuilder() {
/*       */         return (this.iOCANBusElectronicBrakeControllerBrakePedalPositionBuilder_ != null) ? (DolphinConfig.IOOrBuilder)this.iOCANBusElectronicBrakeControllerBrakePedalPositionBuilder_.getMessageOrBuilder() : ((this.iOCANBusElectronicBrakeControllerBrakePedalPosition_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusElectronicBrakeControllerBrakePedalPosition_);
/*       */       }
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOCANBusElectronicBrakeControllerBrakePedalPositionFieldBuilder() {
/*       */         if (this.iOCANBusElectronicBrakeControllerBrakePedalPositionBuilder_ == null) {
/*       */           this.iOCANBusElectronicBrakeControllerBrakePedalPositionBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOCANBusElectronicBrakeControllerBrakePedalPosition(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.iOCANBusElectronicBrakeControllerBrakePedalPosition_ = null;
/*       */         } 
/*       */         return this.iOCANBusElectronicBrakeControllerBrakePedalPositionBuilder_;
/*       */       }
/*       */       
/*       */       public boolean hasIOCANBusFuelConsumptionGaseousTotalFuelUsed() {
/*       */         return (this.iOCANBusFuelConsumptionGaseousTotalFuelUsedBuilder_ != null || this.iOCANBusFuelConsumptionGaseousTotalFuelUsed_ != null);
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO getIOCANBusFuelConsumptionGaseousTotalFuelUsed() {
/*       */         return (this.iOCANBusFuelConsumptionGaseousTotalFuelUsedBuilder_ == null) ? ((this.iOCANBusFuelConsumptionGaseousTotalFuelUsed_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusFuelConsumptionGaseousTotalFuelUsed_) : (DolphinConfig.IO)this.iOCANBusFuelConsumptionGaseousTotalFuelUsedBuilder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusFuelConsumptionGaseousTotalFuelUsed(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusFuelConsumptionGaseousTotalFuelUsedBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.iOCANBusFuelConsumptionGaseousTotalFuelUsed_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusFuelConsumptionGaseousTotalFuelUsedBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusFuelConsumptionGaseousTotalFuelUsed(DolphinConfig.IO.Builder builderForValue) {
/*       */         if (this.iOCANBusFuelConsumptionGaseousTotalFuelUsedBuilder_ == null) {
/*       */           this.iOCANBusFuelConsumptionGaseousTotalFuelUsed_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusFuelConsumptionGaseousTotalFuelUsedBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeIOCANBusFuelConsumptionGaseousTotalFuelUsed(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusFuelConsumptionGaseousTotalFuelUsedBuilder_ == null) {
/*       */           if (this.iOCANBusFuelConsumptionGaseousTotalFuelUsed_ != null) {
/*       */             this.iOCANBusFuelConsumptionGaseousTotalFuelUsed_ = DolphinConfig.IO.newBuilder(this.iOCANBusFuelConsumptionGaseousTotalFuelUsed_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.iOCANBusFuelConsumptionGaseousTotalFuelUsed_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusFuelConsumptionGaseousTotalFuelUsedBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearIOCANBusFuelConsumptionGaseousTotalFuelUsed() {
/*       */         if (this.iOCANBusFuelConsumptionGaseousTotalFuelUsedBuilder_ == null) {
/*       */           this.iOCANBusFuelConsumptionGaseousTotalFuelUsed_ = null;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusFuelConsumptionGaseousTotalFuelUsed_ = null;
/*       */           this.iOCANBusFuelConsumptionGaseousTotalFuelUsedBuilder_ = null;
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOCANBusFuelConsumptionGaseousTotalFuelUsedBuilder() {
/*       */         onChanged();
/*       */         return (DolphinConfig.IO.Builder)getIOCANBusFuelConsumptionGaseousTotalFuelUsedFieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOCANBusFuelConsumptionGaseousTotalFuelUsedOrBuilder() {
/*       */         return (this.iOCANBusFuelConsumptionGaseousTotalFuelUsedBuilder_ != null) ? (DolphinConfig.IOOrBuilder)this.iOCANBusFuelConsumptionGaseousTotalFuelUsedBuilder_.getMessageOrBuilder() : ((this.iOCANBusFuelConsumptionGaseousTotalFuelUsed_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusFuelConsumptionGaseousTotalFuelUsed_);
/*       */       }
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOCANBusFuelConsumptionGaseousTotalFuelUsedFieldBuilder() {
/*       */         if (this.iOCANBusFuelConsumptionGaseousTotalFuelUsedBuilder_ == null) {
/*       */           this.iOCANBusFuelConsumptionGaseousTotalFuelUsedBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOCANBusFuelConsumptionGaseousTotalFuelUsed(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.iOCANBusFuelConsumptionGaseousTotalFuelUsed_ = null;
/*       */         } 
/*       */         return this.iOCANBusFuelConsumptionGaseousTotalFuelUsedBuilder_;
/*       */       }
/*       */       
/*       */       public boolean hasIOCANBusTruckBusCruiseControlVehicleSpeedParkingBrakeSwitch() {
/*       */         return (this.iOCANBusTruckBusCruiseControlVehicleSpeedParkingBrakeSwitchBuilder_ != null || this.iOCANBusTruckBusCruiseControlVehicleSpeedParkingBrakeSwitch_ != null);
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO getIOCANBusTruckBusCruiseControlVehicleSpeedParkingBrakeSwitch() {
/*       */         return (this.iOCANBusTruckBusCruiseControlVehicleSpeedParkingBrakeSwitchBuilder_ == null) ? ((this.iOCANBusTruckBusCruiseControlVehicleSpeedParkingBrakeSwitch_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusTruckBusCruiseControlVehicleSpeedParkingBrakeSwitch_) : (DolphinConfig.IO)this.iOCANBusTruckBusCruiseControlVehicleSpeedParkingBrakeSwitchBuilder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusTruckBusCruiseControlVehicleSpeedParkingBrakeSwitch(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusTruckBusCruiseControlVehicleSpeedParkingBrakeSwitchBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.iOCANBusTruckBusCruiseControlVehicleSpeedParkingBrakeSwitch_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTruckBusCruiseControlVehicleSpeedParkingBrakeSwitchBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusTruckBusCruiseControlVehicleSpeedParkingBrakeSwitch(DolphinConfig.IO.Builder builderForValue) {
/*       */         if (this.iOCANBusTruckBusCruiseControlVehicleSpeedParkingBrakeSwitchBuilder_ == null) {
/*       */           this.iOCANBusTruckBusCruiseControlVehicleSpeedParkingBrakeSwitch_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTruckBusCruiseControlVehicleSpeedParkingBrakeSwitchBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeIOCANBusTruckBusCruiseControlVehicleSpeedParkingBrakeSwitch(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusTruckBusCruiseControlVehicleSpeedParkingBrakeSwitchBuilder_ == null) {
/*       */           if (this.iOCANBusTruckBusCruiseControlVehicleSpeedParkingBrakeSwitch_ != null) {
/*       */             this.iOCANBusTruckBusCruiseControlVehicleSpeedParkingBrakeSwitch_ = DolphinConfig.IO.newBuilder(this.iOCANBusTruckBusCruiseControlVehicleSpeedParkingBrakeSwitch_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.iOCANBusTruckBusCruiseControlVehicleSpeedParkingBrakeSwitch_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTruckBusCruiseControlVehicleSpeedParkingBrakeSwitchBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearIOCANBusTruckBusCruiseControlVehicleSpeedParkingBrakeSwitch() {
/*       */         if (this.iOCANBusTruckBusCruiseControlVehicleSpeedParkingBrakeSwitchBuilder_ == null) {
/*       */           this.iOCANBusTruckBusCruiseControlVehicleSpeedParkingBrakeSwitch_ = null;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTruckBusCruiseControlVehicleSpeedParkingBrakeSwitch_ = null;
/*       */           this.iOCANBusTruckBusCruiseControlVehicleSpeedParkingBrakeSwitchBuilder_ = null;
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOCANBusTruckBusCruiseControlVehicleSpeedParkingBrakeSwitchBuilder() {
/*       */         onChanged();
/*       */         return (DolphinConfig.IO.Builder)getIOCANBusTruckBusCruiseControlVehicleSpeedParkingBrakeSwitchFieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOCANBusTruckBusCruiseControlVehicleSpeedParkingBrakeSwitchOrBuilder() {
/*       */         return (this.iOCANBusTruckBusCruiseControlVehicleSpeedParkingBrakeSwitchBuilder_ != null) ? (DolphinConfig.IOOrBuilder)this.iOCANBusTruckBusCruiseControlVehicleSpeedParkingBrakeSwitchBuilder_.getMessageOrBuilder() : ((this.iOCANBusTruckBusCruiseControlVehicleSpeedParkingBrakeSwitch_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusTruckBusCruiseControlVehicleSpeedParkingBrakeSwitch_);
/*       */       }
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOCANBusTruckBusCruiseControlVehicleSpeedParkingBrakeSwitchFieldBuilder() {
/*       */         if (this.iOCANBusTruckBusCruiseControlVehicleSpeedParkingBrakeSwitchBuilder_ == null) {
/*       */           this.iOCANBusTruckBusCruiseControlVehicleSpeedParkingBrakeSwitchBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOCANBusTruckBusCruiseControlVehicleSpeedParkingBrakeSwitch(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.iOCANBusTruckBusCruiseControlVehicleSpeedParkingBrakeSwitch_ = null;
/*       */         } 
/*       */         return this.iOCANBusTruckBusCruiseControlVehicleSpeedParkingBrakeSwitchBuilder_;
/*       */       }
/*       */       
/*       */       public boolean hasIOCANBusTruckBusCruiseControlVehicleSpeedWheelBasedSpeed() {
/*       */         return (this.iOCANBusTruckBusCruiseControlVehicleSpeedWheelBasedSpeedBuilder_ != null || this.iOCANBusTruckBusCruiseControlVehicleSpeedWheelBasedSpeed_ != null);
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO getIOCANBusTruckBusCruiseControlVehicleSpeedWheelBasedSpeed() {
/*       */         return (this.iOCANBusTruckBusCruiseControlVehicleSpeedWheelBasedSpeedBuilder_ == null) ? ((this.iOCANBusTruckBusCruiseControlVehicleSpeedWheelBasedSpeed_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusTruckBusCruiseControlVehicleSpeedWheelBasedSpeed_) : (DolphinConfig.IO)this.iOCANBusTruckBusCruiseControlVehicleSpeedWheelBasedSpeedBuilder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusTruckBusCruiseControlVehicleSpeedWheelBasedSpeed(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusTruckBusCruiseControlVehicleSpeedWheelBasedSpeedBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.iOCANBusTruckBusCruiseControlVehicleSpeedWheelBasedSpeed_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTruckBusCruiseControlVehicleSpeedWheelBasedSpeedBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusTruckBusCruiseControlVehicleSpeedWheelBasedSpeed(DolphinConfig.IO.Builder builderForValue) {
/*       */         if (this.iOCANBusTruckBusCruiseControlVehicleSpeedWheelBasedSpeedBuilder_ == null) {
/*       */           this.iOCANBusTruckBusCruiseControlVehicleSpeedWheelBasedSpeed_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTruckBusCruiseControlVehicleSpeedWheelBasedSpeedBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeIOCANBusTruckBusCruiseControlVehicleSpeedWheelBasedSpeed(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusTruckBusCruiseControlVehicleSpeedWheelBasedSpeedBuilder_ == null) {
/*       */           if (this.iOCANBusTruckBusCruiseControlVehicleSpeedWheelBasedSpeed_ != null) {
/*       */             this.iOCANBusTruckBusCruiseControlVehicleSpeedWheelBasedSpeed_ = DolphinConfig.IO.newBuilder(this.iOCANBusTruckBusCruiseControlVehicleSpeedWheelBasedSpeed_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.iOCANBusTruckBusCruiseControlVehicleSpeedWheelBasedSpeed_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTruckBusCruiseControlVehicleSpeedWheelBasedSpeedBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearIOCANBusTruckBusCruiseControlVehicleSpeedWheelBasedSpeed() {
/*       */         if (this.iOCANBusTruckBusCruiseControlVehicleSpeedWheelBasedSpeedBuilder_ == null) {
/*       */           this.iOCANBusTruckBusCruiseControlVehicleSpeedWheelBasedSpeed_ = null;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTruckBusCruiseControlVehicleSpeedWheelBasedSpeed_ = null;
/*       */           this.iOCANBusTruckBusCruiseControlVehicleSpeedWheelBasedSpeedBuilder_ = null;
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOCANBusTruckBusCruiseControlVehicleSpeedWheelBasedSpeedBuilder() {
/*       */         onChanged();
/*       */         return (DolphinConfig.IO.Builder)getIOCANBusTruckBusCruiseControlVehicleSpeedWheelBasedSpeedFieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOCANBusTruckBusCruiseControlVehicleSpeedWheelBasedSpeedOrBuilder() {
/*       */         return (this.iOCANBusTruckBusCruiseControlVehicleSpeedWheelBasedSpeedBuilder_ != null) ? (DolphinConfig.IOOrBuilder)this.iOCANBusTruckBusCruiseControlVehicleSpeedWheelBasedSpeedBuilder_.getMessageOrBuilder() : ((this.iOCANBusTruckBusCruiseControlVehicleSpeedWheelBasedSpeed_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusTruckBusCruiseControlVehicleSpeedWheelBasedSpeed_);
/*       */       }
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOCANBusTruckBusCruiseControlVehicleSpeedWheelBasedSpeedFieldBuilder() {
/*       */         if (this.iOCANBusTruckBusCruiseControlVehicleSpeedWheelBasedSpeedBuilder_ == null) {
/*       */           this.iOCANBusTruckBusCruiseControlVehicleSpeedWheelBasedSpeedBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOCANBusTruckBusCruiseControlVehicleSpeedWheelBasedSpeed(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.iOCANBusTruckBusCruiseControlVehicleSpeedWheelBasedSpeed_ = null;
/*       */         } 
/*       */         return this.iOCANBusTruckBusCruiseControlVehicleSpeedWheelBasedSpeedBuilder_;
/*       */       }
/*       */       
/*       */       public boolean hasIOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlActive() {
/*       */         return (this.iOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlActiveBuilder_ != null || this.iOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlActive_ != null);
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO getIOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlActive() {
/*       */         return (this.iOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlActiveBuilder_ == null) ? ((this.iOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlActive_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlActive_) : (DolphinConfig.IO)this.iOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlActiveBuilder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlActive(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlActiveBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.iOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlActive_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlActiveBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlActive(DolphinConfig.IO.Builder builderForValue) {
/*       */         if (this.iOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlActiveBuilder_ == null) {
/*       */           this.iOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlActive_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlActiveBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeIOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlActive(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlActiveBuilder_ == null) {
/*       */           if (this.iOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlActive_ != null) {
/*       */             this.iOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlActive_ = DolphinConfig.IO.newBuilder(this.iOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlActive_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.iOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlActive_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlActiveBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearIOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlActive() {
/*       */         if (this.iOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlActiveBuilder_ == null) {
/*       */           this.iOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlActive_ = null;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlActive_ = null;
/*       */           this.iOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlActiveBuilder_ = null;
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlActiveBuilder() {
/*       */         onChanged();
/*       */         return (DolphinConfig.IO.Builder)getIOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlActiveFieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlActiveOrBuilder() {
/*       */         return (this.iOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlActiveBuilder_ != null) ? (DolphinConfig.IOOrBuilder)this.iOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlActiveBuilder_.getMessageOrBuilder() : ((this.iOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlActive_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlActive_);
/*       */       }
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlActiveFieldBuilder() {
/*       */         if (this.iOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlActiveBuilder_ == null) {
/*       */           this.iOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlActiveBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlActive(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.iOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlActive_ = null;
/*       */         } 
/*       */         return this.iOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlActiveBuilder_;
/*       */       }
/*       */       
/*       */       public boolean hasIOCANBusTruckBusCruiseControlVehicleSpeedBrakeSwitch() {
/*       */         return (this.iOCANBusTruckBusCruiseControlVehicleSpeedBrakeSwitchBuilder_ != null || this.iOCANBusTruckBusCruiseControlVehicleSpeedBrakeSwitch_ != null);
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO getIOCANBusTruckBusCruiseControlVehicleSpeedBrakeSwitch() {
/*       */         return (this.iOCANBusTruckBusCruiseControlVehicleSpeedBrakeSwitchBuilder_ == null) ? ((this.iOCANBusTruckBusCruiseControlVehicleSpeedBrakeSwitch_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusTruckBusCruiseControlVehicleSpeedBrakeSwitch_) : (DolphinConfig.IO)this.iOCANBusTruckBusCruiseControlVehicleSpeedBrakeSwitchBuilder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusTruckBusCruiseControlVehicleSpeedBrakeSwitch(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusTruckBusCruiseControlVehicleSpeedBrakeSwitchBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.iOCANBusTruckBusCruiseControlVehicleSpeedBrakeSwitch_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTruckBusCruiseControlVehicleSpeedBrakeSwitchBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusTruckBusCruiseControlVehicleSpeedBrakeSwitch(DolphinConfig.IO.Builder builderForValue) {
/*       */         if (this.iOCANBusTruckBusCruiseControlVehicleSpeedBrakeSwitchBuilder_ == null) {
/*       */           this.iOCANBusTruckBusCruiseControlVehicleSpeedBrakeSwitch_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTruckBusCruiseControlVehicleSpeedBrakeSwitchBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeIOCANBusTruckBusCruiseControlVehicleSpeedBrakeSwitch(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusTruckBusCruiseControlVehicleSpeedBrakeSwitchBuilder_ == null) {
/*       */           if (this.iOCANBusTruckBusCruiseControlVehicleSpeedBrakeSwitch_ != null) {
/*       */             this.iOCANBusTruckBusCruiseControlVehicleSpeedBrakeSwitch_ = DolphinConfig.IO.newBuilder(this.iOCANBusTruckBusCruiseControlVehicleSpeedBrakeSwitch_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.iOCANBusTruckBusCruiseControlVehicleSpeedBrakeSwitch_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTruckBusCruiseControlVehicleSpeedBrakeSwitchBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearIOCANBusTruckBusCruiseControlVehicleSpeedBrakeSwitch() {
/*       */         if (this.iOCANBusTruckBusCruiseControlVehicleSpeedBrakeSwitchBuilder_ == null) {
/*       */           this.iOCANBusTruckBusCruiseControlVehicleSpeedBrakeSwitch_ = null;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTruckBusCruiseControlVehicleSpeedBrakeSwitch_ = null;
/*       */           this.iOCANBusTruckBusCruiseControlVehicleSpeedBrakeSwitchBuilder_ = null;
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOCANBusTruckBusCruiseControlVehicleSpeedBrakeSwitchBuilder() {
/*       */         onChanged();
/*       */         return (DolphinConfig.IO.Builder)getIOCANBusTruckBusCruiseControlVehicleSpeedBrakeSwitchFieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOCANBusTruckBusCruiseControlVehicleSpeedBrakeSwitchOrBuilder() {
/*       */         return (this.iOCANBusTruckBusCruiseControlVehicleSpeedBrakeSwitchBuilder_ != null) ? (DolphinConfig.IOOrBuilder)this.iOCANBusTruckBusCruiseControlVehicleSpeedBrakeSwitchBuilder_.getMessageOrBuilder() : ((this.iOCANBusTruckBusCruiseControlVehicleSpeedBrakeSwitch_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusTruckBusCruiseControlVehicleSpeedBrakeSwitch_);
/*       */       }
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOCANBusTruckBusCruiseControlVehicleSpeedBrakeSwitchFieldBuilder() {
/*       */         if (this.iOCANBusTruckBusCruiseControlVehicleSpeedBrakeSwitchBuilder_ == null) {
/*       */           this.iOCANBusTruckBusCruiseControlVehicleSpeedBrakeSwitchBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOCANBusTruckBusCruiseControlVehicleSpeedBrakeSwitch(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.iOCANBusTruckBusCruiseControlVehicleSpeedBrakeSwitch_ = null;
/*       */         } 
/*       */         return this.iOCANBusTruckBusCruiseControlVehicleSpeedBrakeSwitchBuilder_;
/*       */       }
/*       */       
/*       */       public boolean hasIOCANBusTruckBusCruiseControlVehicleSpeedClutchSwitch() {
/*       */         return (this.iOCANBusTruckBusCruiseControlVehicleSpeedClutchSwitchBuilder_ != null || this.iOCANBusTruckBusCruiseControlVehicleSpeedClutchSwitch_ != null);
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO getIOCANBusTruckBusCruiseControlVehicleSpeedClutchSwitch() {
/*       */         return (this.iOCANBusTruckBusCruiseControlVehicleSpeedClutchSwitchBuilder_ == null) ? ((this.iOCANBusTruckBusCruiseControlVehicleSpeedClutchSwitch_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusTruckBusCruiseControlVehicleSpeedClutchSwitch_) : (DolphinConfig.IO)this.iOCANBusTruckBusCruiseControlVehicleSpeedClutchSwitchBuilder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusTruckBusCruiseControlVehicleSpeedClutchSwitch(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusTruckBusCruiseControlVehicleSpeedClutchSwitchBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.iOCANBusTruckBusCruiseControlVehicleSpeedClutchSwitch_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTruckBusCruiseControlVehicleSpeedClutchSwitchBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusTruckBusCruiseControlVehicleSpeedClutchSwitch(DolphinConfig.IO.Builder builderForValue) {
/*       */         if (this.iOCANBusTruckBusCruiseControlVehicleSpeedClutchSwitchBuilder_ == null) {
/*       */           this.iOCANBusTruckBusCruiseControlVehicleSpeedClutchSwitch_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTruckBusCruiseControlVehicleSpeedClutchSwitchBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeIOCANBusTruckBusCruiseControlVehicleSpeedClutchSwitch(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusTruckBusCruiseControlVehicleSpeedClutchSwitchBuilder_ == null) {
/*       */           if (this.iOCANBusTruckBusCruiseControlVehicleSpeedClutchSwitch_ != null) {
/*       */             this.iOCANBusTruckBusCruiseControlVehicleSpeedClutchSwitch_ = DolphinConfig.IO.newBuilder(this.iOCANBusTruckBusCruiseControlVehicleSpeedClutchSwitch_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.iOCANBusTruckBusCruiseControlVehicleSpeedClutchSwitch_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTruckBusCruiseControlVehicleSpeedClutchSwitchBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearIOCANBusTruckBusCruiseControlVehicleSpeedClutchSwitch() {
/*       */         if (this.iOCANBusTruckBusCruiseControlVehicleSpeedClutchSwitchBuilder_ == null) {
/*       */           this.iOCANBusTruckBusCruiseControlVehicleSpeedClutchSwitch_ = null;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTruckBusCruiseControlVehicleSpeedClutchSwitch_ = null;
/*       */           this.iOCANBusTruckBusCruiseControlVehicleSpeedClutchSwitchBuilder_ = null;
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOCANBusTruckBusCruiseControlVehicleSpeedClutchSwitchBuilder() {
/*       */         onChanged();
/*       */         return (DolphinConfig.IO.Builder)getIOCANBusTruckBusCruiseControlVehicleSpeedClutchSwitchFieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOCANBusTruckBusCruiseControlVehicleSpeedClutchSwitchOrBuilder() {
/*       */         return (this.iOCANBusTruckBusCruiseControlVehicleSpeedClutchSwitchBuilder_ != null) ? (DolphinConfig.IOOrBuilder)this.iOCANBusTruckBusCruiseControlVehicleSpeedClutchSwitchBuilder_.getMessageOrBuilder() : ((this.iOCANBusTruckBusCruiseControlVehicleSpeedClutchSwitch_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusTruckBusCruiseControlVehicleSpeedClutchSwitch_);
/*       */       }
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOCANBusTruckBusCruiseControlVehicleSpeedClutchSwitchFieldBuilder() {
/*       */         if (this.iOCANBusTruckBusCruiseControlVehicleSpeedClutchSwitchBuilder_ == null) {
/*       */           this.iOCANBusTruckBusCruiseControlVehicleSpeedClutchSwitchBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOCANBusTruckBusCruiseControlVehicleSpeedClutchSwitch(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.iOCANBusTruckBusCruiseControlVehicleSpeedClutchSwitch_ = null;
/*       */         } 
/*       */         return this.iOCANBusTruckBusCruiseControlVehicleSpeedClutchSwitchBuilder_;
/*       */       }
/*       */       
/*       */       public boolean hasIOCANBusTruckBusCruiseControlVehicleSpeedPtoState() {
/*       */         return (this.iOCANBusTruckBusCruiseControlVehicleSpeedPtoStateBuilder_ != null || this.iOCANBusTruckBusCruiseControlVehicleSpeedPtoState_ != null);
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO getIOCANBusTruckBusCruiseControlVehicleSpeedPtoState() {
/*       */         return (this.iOCANBusTruckBusCruiseControlVehicleSpeedPtoStateBuilder_ == null) ? ((this.iOCANBusTruckBusCruiseControlVehicleSpeedPtoState_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusTruckBusCruiseControlVehicleSpeedPtoState_) : (DolphinConfig.IO)this.iOCANBusTruckBusCruiseControlVehicleSpeedPtoStateBuilder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusTruckBusCruiseControlVehicleSpeedPtoState(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusTruckBusCruiseControlVehicleSpeedPtoStateBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.iOCANBusTruckBusCruiseControlVehicleSpeedPtoState_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTruckBusCruiseControlVehicleSpeedPtoStateBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusTruckBusCruiseControlVehicleSpeedPtoState(DolphinConfig.IO.Builder builderForValue) {
/*       */         if (this.iOCANBusTruckBusCruiseControlVehicleSpeedPtoStateBuilder_ == null) {
/*       */           this.iOCANBusTruckBusCruiseControlVehicleSpeedPtoState_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTruckBusCruiseControlVehicleSpeedPtoStateBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeIOCANBusTruckBusCruiseControlVehicleSpeedPtoState(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusTruckBusCruiseControlVehicleSpeedPtoStateBuilder_ == null) {
/*       */           if (this.iOCANBusTruckBusCruiseControlVehicleSpeedPtoState_ != null) {
/*       */             this.iOCANBusTruckBusCruiseControlVehicleSpeedPtoState_ = DolphinConfig.IO.newBuilder(this.iOCANBusTruckBusCruiseControlVehicleSpeedPtoState_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.iOCANBusTruckBusCruiseControlVehicleSpeedPtoState_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTruckBusCruiseControlVehicleSpeedPtoStateBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearIOCANBusTruckBusCruiseControlVehicleSpeedPtoState() {
/*       */         if (this.iOCANBusTruckBusCruiseControlVehicleSpeedPtoStateBuilder_ == null) {
/*       */           this.iOCANBusTruckBusCruiseControlVehicleSpeedPtoState_ = null;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTruckBusCruiseControlVehicleSpeedPtoState_ = null;
/*       */           this.iOCANBusTruckBusCruiseControlVehicleSpeedPtoStateBuilder_ = null;
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOCANBusTruckBusCruiseControlVehicleSpeedPtoStateBuilder() {
/*       */         onChanged();
/*       */         return (DolphinConfig.IO.Builder)getIOCANBusTruckBusCruiseControlVehicleSpeedPtoStateFieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOCANBusTruckBusCruiseControlVehicleSpeedPtoStateOrBuilder() {
/*       */         return (this.iOCANBusTruckBusCruiseControlVehicleSpeedPtoStateBuilder_ != null) ? (DolphinConfig.IOOrBuilder)this.iOCANBusTruckBusCruiseControlVehicleSpeedPtoStateBuilder_.getMessageOrBuilder() : ((this.iOCANBusTruckBusCruiseControlVehicleSpeedPtoState_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusTruckBusCruiseControlVehicleSpeedPtoState_);
/*       */       }
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOCANBusTruckBusCruiseControlVehicleSpeedPtoStateFieldBuilder() {
/*       */         if (this.iOCANBusTruckBusCruiseControlVehicleSpeedPtoStateBuilder_ == null) {
/*       */           this.iOCANBusTruckBusCruiseControlVehicleSpeedPtoStateBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOCANBusTruckBusCruiseControlVehicleSpeedPtoState(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.iOCANBusTruckBusCruiseControlVehicleSpeedPtoState_ = null;
/*       */         } 
/*       */         return this.iOCANBusTruckBusCruiseControlVehicleSpeedPtoStateBuilder_;
/*       */       }
/*       */       
/*       */       public boolean hasIOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlStates() {
/*       */         return (this.iOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlStatesBuilder_ != null || this.iOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlStates_ != null);
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO getIOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlStates() {
/*       */         return (this.iOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlStatesBuilder_ == null) ? ((this.iOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlStates_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlStates_) : (DolphinConfig.IO)this.iOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlStatesBuilder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlStates(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlStatesBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.iOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlStates_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlStatesBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlStates(DolphinConfig.IO.Builder builderForValue) {
/*       */         if (this.iOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlStatesBuilder_ == null) {
/*       */           this.iOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlStates_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlStatesBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeIOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlStates(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlStatesBuilder_ == null) {
/*       */           if (this.iOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlStates_ != null) {
/*       */             this.iOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlStates_ = DolphinConfig.IO.newBuilder(this.iOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlStates_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.iOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlStates_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlStatesBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearIOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlStates() {
/*       */         if (this.iOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlStatesBuilder_ == null) {
/*       */           this.iOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlStates_ = null;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlStates_ = null;
/*       */           this.iOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlStatesBuilder_ = null;
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlStatesBuilder() {
/*       */         onChanged();
/*       */         return (DolphinConfig.IO.Builder)getIOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlStatesFieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlStatesOrBuilder() {
/*       */         return (this.iOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlStatesBuilder_ != null) ? (DolphinConfig.IOOrBuilder)this.iOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlStatesBuilder_.getMessageOrBuilder() : ((this.iOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlStates_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlStates_);
/*       */       }
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlStatesFieldBuilder() {
/*       */         if (this.iOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlStatesBuilder_ == null) {
/*       */           this.iOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlStatesBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlStates(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.iOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlStates_ = null;
/*       */         } 
/*       */         return this.iOCANBusTruckBusCruiseControlVehicleSpeedCruiseControlStatesBuilder_;
/*       */       }
/*       */       
/*       */       public boolean hasIOCANBusBusVehicleElectricalPowerHybridBatteryPackRemainingCharge() {
/*       */         return (this.iOCANBusBusVehicleElectricalPowerHybridBatteryPackRemainingChargeBuilder_ != null || this.iOCANBusBusVehicleElectricalPowerHybridBatteryPackRemainingCharge_ != null);
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO getIOCANBusBusVehicleElectricalPowerHybridBatteryPackRemainingCharge() {
/*       */         return (this.iOCANBusBusVehicleElectricalPowerHybridBatteryPackRemainingChargeBuilder_ == null) ? ((this.iOCANBusBusVehicleElectricalPowerHybridBatteryPackRemainingCharge_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusBusVehicleElectricalPowerHybridBatteryPackRemainingCharge_) : (DolphinConfig.IO)this.iOCANBusBusVehicleElectricalPowerHybridBatteryPackRemainingChargeBuilder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusBusVehicleElectricalPowerHybridBatteryPackRemainingCharge(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusBusVehicleElectricalPowerHybridBatteryPackRemainingChargeBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.iOCANBusBusVehicleElectricalPowerHybridBatteryPackRemainingCharge_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusBusVehicleElectricalPowerHybridBatteryPackRemainingChargeBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusBusVehicleElectricalPowerHybridBatteryPackRemainingCharge(DolphinConfig.IO.Builder builderForValue) {
/*       */         if (this.iOCANBusBusVehicleElectricalPowerHybridBatteryPackRemainingChargeBuilder_ == null) {
/*       */           this.iOCANBusBusVehicleElectricalPowerHybridBatteryPackRemainingCharge_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusBusVehicleElectricalPowerHybridBatteryPackRemainingChargeBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeIOCANBusBusVehicleElectricalPowerHybridBatteryPackRemainingCharge(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusBusVehicleElectricalPowerHybridBatteryPackRemainingChargeBuilder_ == null) {
/*       */           if (this.iOCANBusBusVehicleElectricalPowerHybridBatteryPackRemainingCharge_ != null) {
/*       */             this.iOCANBusBusVehicleElectricalPowerHybridBatteryPackRemainingCharge_ = DolphinConfig.IO.newBuilder(this.iOCANBusBusVehicleElectricalPowerHybridBatteryPackRemainingCharge_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.iOCANBusBusVehicleElectricalPowerHybridBatteryPackRemainingCharge_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusBusVehicleElectricalPowerHybridBatteryPackRemainingChargeBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearIOCANBusBusVehicleElectricalPowerHybridBatteryPackRemainingCharge() {
/*       */         if (this.iOCANBusBusVehicleElectricalPowerHybridBatteryPackRemainingChargeBuilder_ == null) {
/*       */           this.iOCANBusBusVehicleElectricalPowerHybridBatteryPackRemainingCharge_ = null;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusBusVehicleElectricalPowerHybridBatteryPackRemainingCharge_ = null;
/*       */           this.iOCANBusBusVehicleElectricalPowerHybridBatteryPackRemainingChargeBuilder_ = null;
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOCANBusBusVehicleElectricalPowerHybridBatteryPackRemainingChargeBuilder() {
/*       */         onChanged();
/*       */         return (DolphinConfig.IO.Builder)getIOCANBusBusVehicleElectricalPowerHybridBatteryPackRemainingChargeFieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOCANBusBusVehicleElectricalPowerHybridBatteryPackRemainingChargeOrBuilder() {
/*       */         return (this.iOCANBusBusVehicleElectricalPowerHybridBatteryPackRemainingChargeBuilder_ != null) ? (DolphinConfig.IOOrBuilder)this.iOCANBusBusVehicleElectricalPowerHybridBatteryPackRemainingChargeBuilder_.getMessageOrBuilder() : ((this.iOCANBusBusVehicleElectricalPowerHybridBatteryPackRemainingCharge_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusBusVehicleElectricalPowerHybridBatteryPackRemainingCharge_);
/*       */       }
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOCANBusBusVehicleElectricalPowerHybridBatteryPackRemainingChargeFieldBuilder() {
/*       */         if (this.iOCANBusBusVehicleElectricalPowerHybridBatteryPackRemainingChargeBuilder_ == null) {
/*       */           this.iOCANBusBusVehicleElectricalPowerHybridBatteryPackRemainingChargeBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOCANBusBusVehicleElectricalPowerHybridBatteryPackRemainingCharge(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.iOCANBusBusVehicleElectricalPowerHybridBatteryPackRemainingCharge_ = null;
/*       */         } 
/*       */         return this.iOCANBusBusVehicleElectricalPowerHybridBatteryPackRemainingChargeBuilder_;
/*       */       }
/*       */       
/*       */       public boolean hasIOCANBusBusVehicleDynamicStabilityControl2SteeringWheelAngle() {
/*       */         return (this.iOCANBusBusVehicleDynamicStabilityControl2SteeringWheelAngleBuilder_ != null || this.iOCANBusBusVehicleDynamicStabilityControl2SteeringWheelAngle_ != null);
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO getIOCANBusBusVehicleDynamicStabilityControl2SteeringWheelAngle() {
/*       */         return (this.iOCANBusBusVehicleDynamicStabilityControl2SteeringWheelAngleBuilder_ == null) ? ((this.iOCANBusBusVehicleDynamicStabilityControl2SteeringWheelAngle_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusBusVehicleDynamicStabilityControl2SteeringWheelAngle_) : (DolphinConfig.IO)this.iOCANBusBusVehicleDynamicStabilityControl2SteeringWheelAngleBuilder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusBusVehicleDynamicStabilityControl2SteeringWheelAngle(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusBusVehicleDynamicStabilityControl2SteeringWheelAngleBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.iOCANBusBusVehicleDynamicStabilityControl2SteeringWheelAngle_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusBusVehicleDynamicStabilityControl2SteeringWheelAngleBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusBusVehicleDynamicStabilityControl2SteeringWheelAngle(DolphinConfig.IO.Builder builderForValue) {
/*       */         if (this.iOCANBusBusVehicleDynamicStabilityControl2SteeringWheelAngleBuilder_ == null) {
/*       */           this.iOCANBusBusVehicleDynamicStabilityControl2SteeringWheelAngle_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusBusVehicleDynamicStabilityControl2SteeringWheelAngleBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeIOCANBusBusVehicleDynamicStabilityControl2SteeringWheelAngle(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusBusVehicleDynamicStabilityControl2SteeringWheelAngleBuilder_ == null) {
/*       */           if (this.iOCANBusBusVehicleDynamicStabilityControl2SteeringWheelAngle_ != null) {
/*       */             this.iOCANBusBusVehicleDynamicStabilityControl2SteeringWheelAngle_ = DolphinConfig.IO.newBuilder(this.iOCANBusBusVehicleDynamicStabilityControl2SteeringWheelAngle_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.iOCANBusBusVehicleDynamicStabilityControl2SteeringWheelAngle_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusBusVehicleDynamicStabilityControl2SteeringWheelAngleBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearIOCANBusBusVehicleDynamicStabilityControl2SteeringWheelAngle() {
/*       */         if (this.iOCANBusBusVehicleDynamicStabilityControl2SteeringWheelAngleBuilder_ == null) {
/*       */           this.iOCANBusBusVehicleDynamicStabilityControl2SteeringWheelAngle_ = null;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusBusVehicleDynamicStabilityControl2SteeringWheelAngle_ = null;
/*       */           this.iOCANBusBusVehicleDynamicStabilityControl2SteeringWheelAngleBuilder_ = null;
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOCANBusBusVehicleDynamicStabilityControl2SteeringWheelAngleBuilder() {
/*       */         onChanged();
/*       */         return (DolphinConfig.IO.Builder)getIOCANBusBusVehicleDynamicStabilityControl2SteeringWheelAngleFieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOCANBusBusVehicleDynamicStabilityControl2SteeringWheelAngleOrBuilder() {
/*       */         return (this.iOCANBusBusVehicleDynamicStabilityControl2SteeringWheelAngleBuilder_ != null) ? (DolphinConfig.IOOrBuilder)this.iOCANBusBusVehicleDynamicStabilityControl2SteeringWheelAngleBuilder_.getMessageOrBuilder() : ((this.iOCANBusBusVehicleDynamicStabilityControl2SteeringWheelAngle_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusBusVehicleDynamicStabilityControl2SteeringWheelAngle_);
/*       */       }
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOCANBusBusVehicleDynamicStabilityControl2SteeringWheelAngleFieldBuilder() {
/*       */         if (this.iOCANBusBusVehicleDynamicStabilityControl2SteeringWheelAngleBuilder_ == null) {
/*       */           this.iOCANBusBusVehicleDynamicStabilityControl2SteeringWheelAngleBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOCANBusBusVehicleDynamicStabilityControl2SteeringWheelAngle(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.iOCANBusBusVehicleDynamicStabilityControl2SteeringWheelAngle_ = null;
/*       */         } 
/*       */         return this.iOCANBusBusVehicleDynamicStabilityControl2SteeringWheelAngleBuilder_;
/*       */       }
/*       */       
/*       */       public boolean hasIOCANBusElectronicEngineController14FuelType() {
/*       */         return (this.iOCANBusElectronicEngineController14FuelTypeBuilder_ != null || this.iOCANBusElectronicEngineController14FuelType_ != null);
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO getIOCANBusElectronicEngineController14FuelType() {
/*       */         return (this.iOCANBusElectronicEngineController14FuelTypeBuilder_ == null) ? ((this.iOCANBusElectronicEngineController14FuelType_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusElectronicEngineController14FuelType_) : (DolphinConfig.IO)this.iOCANBusElectronicEngineController14FuelTypeBuilder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusElectronicEngineController14FuelType(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusElectronicEngineController14FuelTypeBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.iOCANBusElectronicEngineController14FuelType_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusElectronicEngineController14FuelTypeBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusElectronicEngineController14FuelType(DolphinConfig.IO.Builder builderForValue) {
/*       */         if (this.iOCANBusElectronicEngineController14FuelTypeBuilder_ == null) {
/*       */           this.iOCANBusElectronicEngineController14FuelType_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusElectronicEngineController14FuelTypeBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeIOCANBusElectronicEngineController14FuelType(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusElectronicEngineController14FuelTypeBuilder_ == null) {
/*       */           if (this.iOCANBusElectronicEngineController14FuelType_ != null) {
/*       */             this.iOCANBusElectronicEngineController14FuelType_ = DolphinConfig.IO.newBuilder(this.iOCANBusElectronicEngineController14FuelType_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.iOCANBusElectronicEngineController14FuelType_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusElectronicEngineController14FuelTypeBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearIOCANBusElectronicEngineController14FuelType() {
/*       */         if (this.iOCANBusElectronicEngineController14FuelTypeBuilder_ == null) {
/*       */           this.iOCANBusElectronicEngineController14FuelType_ = null;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusElectronicEngineController14FuelType_ = null;
/*       */           this.iOCANBusElectronicEngineController14FuelTypeBuilder_ = null;
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOCANBusElectronicEngineController14FuelTypeBuilder() {
/*       */         onChanged();
/*       */         return (DolphinConfig.IO.Builder)getIOCANBusElectronicEngineController14FuelTypeFieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOCANBusElectronicEngineController14FuelTypeOrBuilder() {
/*       */         return (this.iOCANBusElectronicEngineController14FuelTypeBuilder_ != null) ? (DolphinConfig.IOOrBuilder)this.iOCANBusElectronicEngineController14FuelTypeBuilder_.getMessageOrBuilder() : ((this.iOCANBusElectronicEngineController14FuelType_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusElectronicEngineController14FuelType_);
/*       */       }
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOCANBusElectronicEngineController14FuelTypeFieldBuilder() {
/*       */         if (this.iOCANBusElectronicEngineController14FuelTypeBuilder_ == null) {
/*       */           this.iOCANBusElectronicEngineController14FuelTypeBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOCANBusElectronicEngineController14FuelType(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.iOCANBusElectronicEngineController14FuelType_ = null;
/*       */         } 
/*       */         return this.iOCANBusElectronicEngineController14FuelTypeBuilder_;
/*       */       }
/*       */       
/*       */       public boolean hasIOCANBusEngineFluidLevelPressureEngineOilLevel() {
/*       */         return (this.iOCANBusEngineFluidLevelPressureEngineOilLevelBuilder_ != null || this.iOCANBusEngineFluidLevelPressureEngineOilLevel_ != null);
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO getIOCANBusEngineFluidLevelPressureEngineOilLevel() {
/*       */         return (this.iOCANBusEngineFluidLevelPressureEngineOilLevelBuilder_ == null) ? ((this.iOCANBusEngineFluidLevelPressureEngineOilLevel_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusEngineFluidLevelPressureEngineOilLevel_) : (DolphinConfig.IO)this.iOCANBusEngineFluidLevelPressureEngineOilLevelBuilder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusEngineFluidLevelPressureEngineOilLevel(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusEngineFluidLevelPressureEngineOilLevelBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.iOCANBusEngineFluidLevelPressureEngineOilLevel_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusEngineFluidLevelPressureEngineOilLevelBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusEngineFluidLevelPressureEngineOilLevel(DolphinConfig.IO.Builder builderForValue) {
/*       */         if (this.iOCANBusEngineFluidLevelPressureEngineOilLevelBuilder_ == null) {
/*       */           this.iOCANBusEngineFluidLevelPressureEngineOilLevel_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusEngineFluidLevelPressureEngineOilLevelBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeIOCANBusEngineFluidLevelPressureEngineOilLevel(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusEngineFluidLevelPressureEngineOilLevelBuilder_ == null) {
/*       */           if (this.iOCANBusEngineFluidLevelPressureEngineOilLevel_ != null) {
/*       */             this.iOCANBusEngineFluidLevelPressureEngineOilLevel_ = DolphinConfig.IO.newBuilder(this.iOCANBusEngineFluidLevelPressureEngineOilLevel_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.iOCANBusEngineFluidLevelPressureEngineOilLevel_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusEngineFluidLevelPressureEngineOilLevelBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearIOCANBusEngineFluidLevelPressureEngineOilLevel() {
/*       */         if (this.iOCANBusEngineFluidLevelPressureEngineOilLevelBuilder_ == null) {
/*       */           this.iOCANBusEngineFluidLevelPressureEngineOilLevel_ = null;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusEngineFluidLevelPressureEngineOilLevel_ = null;
/*       */           this.iOCANBusEngineFluidLevelPressureEngineOilLevelBuilder_ = null;
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOCANBusEngineFluidLevelPressureEngineOilLevelBuilder() {
/*       */         onChanged();
/*       */         return (DolphinConfig.IO.Builder)getIOCANBusEngineFluidLevelPressureEngineOilLevelFieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOCANBusEngineFluidLevelPressureEngineOilLevelOrBuilder() {
/*       */         return (this.iOCANBusEngineFluidLevelPressureEngineOilLevelBuilder_ != null) ? (DolphinConfig.IOOrBuilder)this.iOCANBusEngineFluidLevelPressureEngineOilLevelBuilder_.getMessageOrBuilder() : ((this.iOCANBusEngineFluidLevelPressureEngineOilLevel_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusEngineFluidLevelPressureEngineOilLevel_);
/*       */       }
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOCANBusEngineFluidLevelPressureEngineOilLevelFieldBuilder() {
/*       */         if (this.iOCANBusEngineFluidLevelPressureEngineOilLevelBuilder_ == null) {
/*       */           this.iOCANBusEngineFluidLevelPressureEngineOilLevelBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOCANBusEngineFluidLevelPressureEngineOilLevel(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.iOCANBusEngineFluidLevelPressureEngineOilLevel_ = null;
/*       */         } 
/*       */         return this.iOCANBusEngineFluidLevelPressureEngineOilLevelBuilder_;
/*       */       }
/*       */       
/*       */       public boolean hasIOCANBusEngineFluidLevelPressureEngineOilPressure() {
/*       */         return (this.iOCANBusEngineFluidLevelPressureEngineOilPressureBuilder_ != null || this.iOCANBusEngineFluidLevelPressureEngineOilPressure_ != null);
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO getIOCANBusEngineFluidLevelPressureEngineOilPressure() {
/*       */         return (this.iOCANBusEngineFluidLevelPressureEngineOilPressureBuilder_ == null) ? ((this.iOCANBusEngineFluidLevelPressureEngineOilPressure_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusEngineFluidLevelPressureEngineOilPressure_) : (DolphinConfig.IO)this.iOCANBusEngineFluidLevelPressureEngineOilPressureBuilder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusEngineFluidLevelPressureEngineOilPressure(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusEngineFluidLevelPressureEngineOilPressureBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.iOCANBusEngineFluidLevelPressureEngineOilPressure_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusEngineFluidLevelPressureEngineOilPressureBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusEngineFluidLevelPressureEngineOilPressure(DolphinConfig.IO.Builder builderForValue) {
/*       */         if (this.iOCANBusEngineFluidLevelPressureEngineOilPressureBuilder_ == null) {
/*       */           this.iOCANBusEngineFluidLevelPressureEngineOilPressure_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusEngineFluidLevelPressureEngineOilPressureBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeIOCANBusEngineFluidLevelPressureEngineOilPressure(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusEngineFluidLevelPressureEngineOilPressureBuilder_ == null) {
/*       */           if (this.iOCANBusEngineFluidLevelPressureEngineOilPressure_ != null) {
/*       */             this.iOCANBusEngineFluidLevelPressureEngineOilPressure_ = DolphinConfig.IO.newBuilder(this.iOCANBusEngineFluidLevelPressureEngineOilPressure_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.iOCANBusEngineFluidLevelPressureEngineOilPressure_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusEngineFluidLevelPressureEngineOilPressureBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearIOCANBusEngineFluidLevelPressureEngineOilPressure() {
/*       */         if (this.iOCANBusEngineFluidLevelPressureEngineOilPressureBuilder_ == null) {
/*       */           this.iOCANBusEngineFluidLevelPressureEngineOilPressure_ = null;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusEngineFluidLevelPressureEngineOilPressure_ = null;
/*       */           this.iOCANBusEngineFluidLevelPressureEngineOilPressureBuilder_ = null;
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOCANBusEngineFluidLevelPressureEngineOilPressureBuilder() {
/*       */         onChanged();
/*       */         return (DolphinConfig.IO.Builder)getIOCANBusEngineFluidLevelPressureEngineOilPressureFieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOCANBusEngineFluidLevelPressureEngineOilPressureOrBuilder() {
/*       */         return (this.iOCANBusEngineFluidLevelPressureEngineOilPressureBuilder_ != null) ? (DolphinConfig.IOOrBuilder)this.iOCANBusEngineFluidLevelPressureEngineOilPressureBuilder_.getMessageOrBuilder() : ((this.iOCANBusEngineFluidLevelPressureEngineOilPressure_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusEngineFluidLevelPressureEngineOilPressure_);
/*       */       }
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOCANBusEngineFluidLevelPressureEngineOilPressureFieldBuilder() {
/*       */         if (this.iOCANBusEngineFluidLevelPressureEngineOilPressureBuilder_ == null) {
/*       */           this.iOCANBusEngineFluidLevelPressureEngineOilPressureBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOCANBusEngineFluidLevelPressureEngineOilPressure(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.iOCANBusEngineFluidLevelPressureEngineOilPressure_ = null;
/*       */         } 
/*       */         return this.iOCANBusEngineFluidLevelPressureEngineOilPressureBuilder_;
/*       */       }
/*       */       
/*       */       public boolean hasIOCANBusEngineFluidLevelPressureCoolantLevel() {
/*       */         return (this.iOCANBusEngineFluidLevelPressureCoolantLevelBuilder_ != null || this.iOCANBusEngineFluidLevelPressureCoolantLevel_ != null);
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO getIOCANBusEngineFluidLevelPressureCoolantLevel() {
/*       */         return (this.iOCANBusEngineFluidLevelPressureCoolantLevelBuilder_ == null) ? ((this.iOCANBusEngineFluidLevelPressureCoolantLevel_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusEngineFluidLevelPressureCoolantLevel_) : (DolphinConfig.IO)this.iOCANBusEngineFluidLevelPressureCoolantLevelBuilder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusEngineFluidLevelPressureCoolantLevel(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusEngineFluidLevelPressureCoolantLevelBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.iOCANBusEngineFluidLevelPressureCoolantLevel_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusEngineFluidLevelPressureCoolantLevelBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusEngineFluidLevelPressureCoolantLevel(DolphinConfig.IO.Builder builderForValue) {
/*       */         if (this.iOCANBusEngineFluidLevelPressureCoolantLevelBuilder_ == null) {
/*       */           this.iOCANBusEngineFluidLevelPressureCoolantLevel_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusEngineFluidLevelPressureCoolantLevelBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeIOCANBusEngineFluidLevelPressureCoolantLevel(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusEngineFluidLevelPressureCoolantLevelBuilder_ == null) {
/*       */           if (this.iOCANBusEngineFluidLevelPressureCoolantLevel_ != null) {
/*       */             this.iOCANBusEngineFluidLevelPressureCoolantLevel_ = DolphinConfig.IO.newBuilder(this.iOCANBusEngineFluidLevelPressureCoolantLevel_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.iOCANBusEngineFluidLevelPressureCoolantLevel_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusEngineFluidLevelPressureCoolantLevelBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearIOCANBusEngineFluidLevelPressureCoolantLevel() {
/*       */         if (this.iOCANBusEngineFluidLevelPressureCoolantLevelBuilder_ == null) {
/*       */           this.iOCANBusEngineFluidLevelPressureCoolantLevel_ = null;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusEngineFluidLevelPressureCoolantLevel_ = null;
/*       */           this.iOCANBusEngineFluidLevelPressureCoolantLevelBuilder_ = null;
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOCANBusEngineFluidLevelPressureCoolantLevelBuilder() {
/*       */         onChanged();
/*       */         return (DolphinConfig.IO.Builder)getIOCANBusEngineFluidLevelPressureCoolantLevelFieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOCANBusEngineFluidLevelPressureCoolantLevelOrBuilder() {
/*       */         return (this.iOCANBusEngineFluidLevelPressureCoolantLevelBuilder_ != null) ? (DolphinConfig.IOOrBuilder)this.iOCANBusEngineFluidLevelPressureCoolantLevelBuilder_.getMessageOrBuilder() : ((this.iOCANBusEngineFluidLevelPressureCoolantLevel_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusEngineFluidLevelPressureCoolantLevel_);
/*       */       }
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOCANBusEngineFluidLevelPressureCoolantLevelFieldBuilder() {
/*       */         if (this.iOCANBusEngineFluidLevelPressureCoolantLevelBuilder_ == null) {
/*       */           this.iOCANBusEngineFluidLevelPressureCoolantLevelBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOCANBusEngineFluidLevelPressureCoolantLevel(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.iOCANBusEngineFluidLevelPressureCoolantLevel_ = null;
/*       */         } 
/*       */         return this.iOCANBusEngineFluidLevelPressureCoolantLevelBuilder_;
/*       */       }
/*       */       
/*       */       public boolean hasIOCANBusTellTaleStatus() {
/*       */         return (this.iOCANBusTellTaleStatusBuilder_ != null || this.iOCANBusTellTaleStatus_ != null);
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO getIOCANBusTellTaleStatus() {
/*       */         return (this.iOCANBusTellTaleStatusBuilder_ == null) ? ((this.iOCANBusTellTaleStatus_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusTellTaleStatus_) : (DolphinConfig.IO)this.iOCANBusTellTaleStatusBuilder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusTellTaleStatus(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusTellTaleStatusBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.iOCANBusTellTaleStatus_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTellTaleStatusBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusTellTaleStatus(DolphinConfig.IO.Builder builderForValue) {
/*       */         if (this.iOCANBusTellTaleStatusBuilder_ == null) {
/*       */           this.iOCANBusTellTaleStatus_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTellTaleStatusBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeIOCANBusTellTaleStatus(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusTellTaleStatusBuilder_ == null) {
/*       */           if (this.iOCANBusTellTaleStatus_ != null) {
/*       */             this.iOCANBusTellTaleStatus_ = DolphinConfig.IO.newBuilder(this.iOCANBusTellTaleStatus_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.iOCANBusTellTaleStatus_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTellTaleStatusBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearIOCANBusTellTaleStatus() {
/*       */         if (this.iOCANBusTellTaleStatusBuilder_ == null) {
/*       */           this.iOCANBusTellTaleStatus_ = null;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTellTaleStatus_ = null;
/*       */           this.iOCANBusTellTaleStatusBuilder_ = null;
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOCANBusTellTaleStatusBuilder() {
/*       */         onChanged();
/*       */         return (DolphinConfig.IO.Builder)getIOCANBusTellTaleStatusFieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOCANBusTellTaleStatusOrBuilder() {
/*       */         return (this.iOCANBusTellTaleStatusBuilder_ != null) ? (DolphinConfig.IOOrBuilder)this.iOCANBusTellTaleStatusBuilder_.getMessageOrBuilder() : ((this.iOCANBusTellTaleStatus_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusTellTaleStatus_);
/*       */       }
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOCANBusTellTaleStatusFieldBuilder() {
/*       */         if (this.iOCANBusTellTaleStatusBuilder_ == null) {
/*       */           this.iOCANBusTellTaleStatusBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOCANBusTellTaleStatus(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.iOCANBusTellTaleStatus_ = null;
/*       */         } 
/*       */         return this.iOCANBusTellTaleStatusBuilder_;
/*       */       }
/*       */       
/*       */       public boolean hasIOCANBusFuelConsumptionEngineTotalFuelUsed() {
/*       */         return (this.iOCANBusFuelConsumptionEngineTotalFuelUsedBuilder_ != null || this.iOCANBusFuelConsumptionEngineTotalFuelUsed_ != null);
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO getIOCANBusFuelConsumptionEngineTotalFuelUsed() {
/*       */         return (this.iOCANBusFuelConsumptionEngineTotalFuelUsedBuilder_ == null) ? ((this.iOCANBusFuelConsumptionEngineTotalFuelUsed_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusFuelConsumptionEngineTotalFuelUsed_) : (DolphinConfig.IO)this.iOCANBusFuelConsumptionEngineTotalFuelUsedBuilder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusFuelConsumptionEngineTotalFuelUsed(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusFuelConsumptionEngineTotalFuelUsedBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.iOCANBusFuelConsumptionEngineTotalFuelUsed_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusFuelConsumptionEngineTotalFuelUsedBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusFuelConsumptionEngineTotalFuelUsed(DolphinConfig.IO.Builder builderForValue) {
/*       */         if (this.iOCANBusFuelConsumptionEngineTotalFuelUsedBuilder_ == null) {
/*       */           this.iOCANBusFuelConsumptionEngineTotalFuelUsed_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusFuelConsumptionEngineTotalFuelUsedBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeIOCANBusFuelConsumptionEngineTotalFuelUsed(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusFuelConsumptionEngineTotalFuelUsedBuilder_ == null) {
/*       */           if (this.iOCANBusFuelConsumptionEngineTotalFuelUsed_ != null) {
/*       */             this.iOCANBusFuelConsumptionEngineTotalFuelUsed_ = DolphinConfig.IO.newBuilder(this.iOCANBusFuelConsumptionEngineTotalFuelUsed_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.iOCANBusFuelConsumptionEngineTotalFuelUsed_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusFuelConsumptionEngineTotalFuelUsedBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearIOCANBusFuelConsumptionEngineTotalFuelUsed() {
/*       */         if (this.iOCANBusFuelConsumptionEngineTotalFuelUsedBuilder_ == null) {
/*       */           this.iOCANBusFuelConsumptionEngineTotalFuelUsed_ = null;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusFuelConsumptionEngineTotalFuelUsed_ = null;
/*       */           this.iOCANBusFuelConsumptionEngineTotalFuelUsedBuilder_ = null;
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOCANBusFuelConsumptionEngineTotalFuelUsedBuilder() {
/*       */         onChanged();
/*       */         return (DolphinConfig.IO.Builder)getIOCANBusFuelConsumptionEngineTotalFuelUsedFieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOCANBusFuelConsumptionEngineTotalFuelUsedOrBuilder() {
/*       */         return (this.iOCANBusFuelConsumptionEngineTotalFuelUsedBuilder_ != null) ? (DolphinConfig.IOOrBuilder)this.iOCANBusFuelConsumptionEngineTotalFuelUsedBuilder_.getMessageOrBuilder() : ((this.iOCANBusFuelConsumptionEngineTotalFuelUsed_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusFuelConsumptionEngineTotalFuelUsed_);
/*       */       }
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOCANBusFuelConsumptionEngineTotalFuelUsedFieldBuilder() {
/*       */         if (this.iOCANBusFuelConsumptionEngineTotalFuelUsedBuilder_ == null) {
/*       */           this.iOCANBusFuelConsumptionEngineTotalFuelUsedBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getIOCANBusFuelConsumptionEngineTotalFuelUsed(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.iOCANBusFuelConsumptionEngineTotalFuelUsed_ = null;
/*       */         } 
/*       */         return this.iOCANBusFuelConsumptionEngineTotalFuelUsedBuilder_;
/*       */       }
/*       */       
/*       */       public boolean hasIOCANBusTruckVehicleWeightAxleWeight4() {
/*       */         return (this.iOCANBusTruckVehicleWeightAxleWeight4Builder_ != null || this.iOCANBusTruckVehicleWeightAxleWeight4_ != null);
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO getIOCANBusTruckVehicleWeightAxleWeight4() {
/*       */         return (this.iOCANBusTruckVehicleWeightAxleWeight4Builder_ == null) ? ((this.iOCANBusTruckVehicleWeightAxleWeight4_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusTruckVehicleWeightAxleWeight4_) : (DolphinConfig.IO)this.iOCANBusTruckVehicleWeightAxleWeight4Builder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusTruckVehicleWeightAxleWeight4(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusTruckVehicleWeightAxleWeight4Builder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.iOCANBusTruckVehicleWeightAxleWeight4_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTruckVehicleWeightAxleWeight4Builder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setIOCANBusTruckVehicleWeightAxleWeight4(DolphinConfig.IO.Builder builderForValue) {
/*       */         if (this.iOCANBusTruckVehicleWeightAxleWeight4Builder_ == null) {
/*       */           this.iOCANBusTruckVehicleWeightAxleWeight4_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTruckVehicleWeightAxleWeight4Builder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeIOCANBusTruckVehicleWeightAxleWeight4(DolphinConfig.IO value) {
/*       */         if (this.iOCANBusTruckVehicleWeightAxleWeight4Builder_ == null) {
/*       */           if (this.iOCANBusTruckVehicleWeightAxleWeight4_ != null) {
/*       */             this.iOCANBusTruckVehicleWeightAxleWeight4_ = DolphinConfig.IO.newBuilder(this.iOCANBusTruckVehicleWeightAxleWeight4_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.iOCANBusTruckVehicleWeightAxleWeight4_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTruckVehicleWeightAxleWeight4Builder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearIOCANBusTruckVehicleWeightAxleWeight4() {
/*       */         if (this.iOCANBusTruckVehicleWeightAxleWeight4Builder_ == null) {
/*       */           this.iOCANBusTruckVehicleWeightAxleWeight4_ = null;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOCANBusTruckVehicleWeightAxleWeight4_ = null;
/*       */           this.iOCANBusTruckVehicleWeightAxleWeight4Builder_ = null;
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO.Builder getIOCANBusTruckVehicleWeightAxleWeight4Builder() {
/*       */         onChanged();
/*       */         return (DolphinConfig.IO.Builder)getIOCANBusTruckVehicleWeightAxleWeight4FieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public DolphinConfig.IOOrBuilder getIOCANBusTruckVehicleWeightAxleWeight4OrBuilder() {
/*       */         return (this.iOCANBusTruckVehicleWeightAxleWeight4Builder_ != null) ? (DolphinConfig.IOOrBuilder)this.iOCANBusTruckVehicleWeightAxleWeight4Builder_.getMessageOrBuilder() : ((this.iOCANBusTruckVehicleWeightAxleWeight4_ == null) ? DolphinConfig.IO.getDefaultInstance() : this.iOCANBusTruckVehicleWeightAxleWeight4_);
/*       */       }
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.IO, DolphinConfig.IO.Builder, DolphinConfig.IOOrBuilder> getIOCANBusTruckVehicleWeightAxleWeight4FieldBuilder() {
/*       */         if (this.iOCANBusTruckVehicleWeightAxleWeight4Builder_ == null) {
/*       */           this.iOCANBusTruckVehicleWeightAxleWeight4Builder_ = new SingleFieldBuilderV3((AbstractMessage)getIOCANBusTruckVehicleWeightAxleWeight4(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.iOCANBusTruckVehicleWeightAxleWeight4_ = null;
/*       */         } 
/*       */         return this.iOCANBusTruckVehicleWeightAxleWeight4Builder_;
/*       */       }
/*       */       
/*       */       public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
/*       */         return (Builder)super.setUnknownFields(unknownFields);
/*       */       }
/*       */       
/*       */       public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
/*       */         return (Builder)super.mergeUnknownFields(unknownFields);
/*       */       } }
/*       */   
/*       */   }
/*       */   
/*       */   public static interface ConfigDiffOrBuilder extends MessageOrBuilder {
/*       */     List<DolphinConfig.Uint32DiffItem> getUint32DiffItemsList();
/*       */     
/*       */     DolphinConfig.Uint32DiffItem getUint32DiffItems(int param1Int);
/*       */     
/*       */     int getUint32DiffItemsCount();
/*       */     
/*       */     List<? extends DolphinConfig.Uint32DiffItemOrBuilder> getUint32DiffItemsOrBuilderList();
/*       */     
/*       */     DolphinConfig.Uint32DiffItemOrBuilder getUint32DiffItemsOrBuilder(int param1Int);
/*       */     
/*       */     List<DolphinConfig.Int32DiffItem> getInt32DiffItemsList();
/*       */     
/*       */     DolphinConfig.Int32DiffItem getInt32DiffItems(int param1Int);
/*       */     
/*       */     int getInt32DiffItemsCount();
/*       */     
/*       */     List<? extends DolphinConfig.Int32DiffItemOrBuilder> getInt32DiffItemsOrBuilderList();
/*       */     
/*       */     DolphinConfig.Int32DiffItemOrBuilder getInt32DiffItemsOrBuilder(int param1Int);
/*       */     
/*       */     List<DolphinConfig.Uint64DiffItem> getUint64DiffItemsList();
/*       */     
/*       */     DolphinConfig.Uint64DiffItem getUint64DiffItems(int param1Int);
/*       */     
/*       */     int getUint64DiffItemsCount();
/*       */     
/*       */     List<? extends DolphinConfig.Uint64DiffItemOrBuilder> getUint64DiffItemsOrBuilderList();
/*       */     
/*       */     DolphinConfig.Uint64DiffItemOrBuilder getUint64DiffItemsOrBuilder(int param1Int);
/*       */     
/*       */     List<DolphinConfig.Int64DiffItem> getInt64DiffItemsList();
/*       */     
/*       */     DolphinConfig.Int64DiffItem getInt64DiffItems(int param1Int);
/*       */     
/*       */     int getInt64DiffItemsCount();
/*       */     
/*       */     List<? extends DolphinConfig.Int64DiffItemOrBuilder> getInt64DiffItemsOrBuilderList();
/*       */     
/*       */     DolphinConfig.Int64DiffItemOrBuilder getInt64DiffItemsOrBuilder(int param1Int);
/*       */     
/*       */     List<DolphinConfig.StringDiffItem> getStringDiffItemsList();
/*       */     
/*       */     DolphinConfig.StringDiffItem getStringDiffItems(int param1Int);
/*       */     
/*       */     int getStringDiffItemsCount();
/*       */     
/*       */     List<? extends DolphinConfig.StringDiffItemOrBuilder> getStringDiffItemsOrBuilderList();
/*       */     
/*       */     DolphinConfig.StringDiffItemOrBuilder getStringDiffItemsOrBuilder(int param1Int);
/*       */     
/*       */     List<DolphinConfig.BoolDiffItem> getBoolDiffItemsList();
/*       */     
/*       */     DolphinConfig.BoolDiffItem getBoolDiffItems(int param1Int);
/*       */     
/*       */     int getBoolDiffItemsCount();
/*       */     
/*       */     List<? extends DolphinConfig.BoolDiffItemOrBuilder> getBoolDiffItemsOrBuilderList();
/*       */     
/*       */     DolphinConfig.BoolDiffItemOrBuilder getBoolDiffItemsOrBuilder(int param1Int);
/*       */   }
/*       */   
/*       */   public static final class ConfigDiff extends GeneratedMessageV3 implements ConfigDiffOrBuilder {
/*       */     private static final long serialVersionUID = 0L;
/*       */     public static final int UINT32DIFFITEMS_FIELD_NUMBER = 1;
/*       */     private List<DolphinConfig.Uint32DiffItem> uint32DiffItems_;
/*       */     public static final int INT32DIFFITEMS_FIELD_NUMBER = 2;
/*       */     private List<DolphinConfig.Int32DiffItem> int32DiffItems_;
/*       */     public static final int UINT64DIFFITEMS_FIELD_NUMBER = 3;
/*       */     private List<DolphinConfig.Uint64DiffItem> uint64DiffItems_;
/*       */     public static final int INT64DIFFITEMS_FIELD_NUMBER = 4;
/*       */     private List<DolphinConfig.Int64DiffItem> int64DiffItems_;
/*       */     public static final int STRINGDIFFITEMS_FIELD_NUMBER = 5;
/*       */     private List<DolphinConfig.StringDiffItem> stringDiffItems_;
/*       */     public static final int BOOLDIFFITEMS_FIELD_NUMBER = 6;
/*       */     private List<DolphinConfig.BoolDiffItem> boolDiffItems_;
/*       */     private byte memoizedIsInitialized = -1;
/*       */     private static final ConfigDiff DEFAULT_INSTANCE = new ConfigDiff();
/*       */     
/*       */     private static final Parser<ConfigDiff> PARSER = (Parser<ConfigDiff>)new AbstractParser<ConfigDiff>() {
/*       */         public DolphinConfig.ConfigDiff parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*       */           return new DolphinConfig.ConfigDiff(input, extensionRegistry);
/*       */         }
/*       */       };
/*       */     
/*       */     private ConfigDiff(GeneratedMessageV3.Builder<?> builder) {
/*       */       super(builder);
/*       */     }
/*       */     
/*       */     private ConfigDiff() {
/*       */       this.uint32DiffItems_ = Collections.emptyList();
/*       */       this.int32DiffItems_ = Collections.emptyList();
/*       */       this.uint64DiffItems_ = Collections.emptyList();
/*       */       this.int64DiffItems_ = Collections.emptyList();
/*       */       this.stringDiffItems_ = Collections.emptyList();
/*       */       this.boolDiffItems_ = Collections.emptyList();
/*       */     }
/*       */     
/*       */     protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) {
/*       */       return new ConfigDiff();
/*       */     }
/*       */     
/*       */     public final UnknownFieldSet getUnknownFields() {
/*       */       return this.unknownFields;
/*       */     }
/*       */     
/*       */     private ConfigDiff(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*       */       this();
/*       */       if (extensionRegistry == null)
/*       */         throw new NullPointerException(); 
/*       */       int mutable_bitField0_ = 0;
/*       */       UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
/*       */       try {
/*       */         boolean done = false;
/*       */         while (!done) {
/*       */           int tag = input.readTag();
/*       */           switch (tag) {
/*       */             case 0:
/*       */               done = true;
/*       */               continue;
/*       */             case 10:
/*       */               if ((mutable_bitField0_ & 0x1) == 0) {
/*       */                 this.uint32DiffItems_ = new ArrayList<>();
/*       */                 mutable_bitField0_ |= 0x1;
/*       */               } 
/*       */               this.uint32DiffItems_.add(input.readMessage(DolphinConfig.Uint32DiffItem.parser(), extensionRegistry));
/*       */               continue;
/*       */             case 18:
/*       */               if ((mutable_bitField0_ & 0x2) == 0) {
/*       */                 this.int32DiffItems_ = new ArrayList<>();
/*       */                 mutable_bitField0_ |= 0x2;
/*       */               } 
/*       */               this.int32DiffItems_.add(input.readMessage(DolphinConfig.Int32DiffItem.parser(), extensionRegistry));
/*       */               continue;
/*       */             case 26:
/*       */               if ((mutable_bitField0_ & 0x4) == 0) {
/*       */                 this.uint64DiffItems_ = new ArrayList<>();
/*       */                 mutable_bitField0_ |= 0x4;
/*       */               } 
/*       */               this.uint64DiffItems_.add(input.readMessage(DolphinConfig.Uint64DiffItem.parser(), extensionRegistry));
/*       */               continue;
/*       */             case 34:
/*       */               if ((mutable_bitField0_ & 0x8) == 0) {
/*       */                 this.int64DiffItems_ = new ArrayList<>();
/*       */                 mutable_bitField0_ |= 0x8;
/*       */               } 
/*       */               this.int64DiffItems_.add(input.readMessage(DolphinConfig.Int64DiffItem.parser(), extensionRegistry));
/*       */               continue;
/*       */             case 42:
/*       */               if ((mutable_bitField0_ & 0x10) == 0) {
/*       */                 this.stringDiffItems_ = new ArrayList<>();
/*       */                 mutable_bitField0_ |= 0x10;
/*       */               } 
/*       */               this.stringDiffItems_.add(input.readMessage(DolphinConfig.StringDiffItem.parser(), extensionRegistry));
/*       */               continue;
/*       */             case 50:
/*       */               if ((mutable_bitField0_ & 0x20) == 0) {
/*       */                 this.boolDiffItems_ = new ArrayList<>();
/*       */                 mutable_bitField0_ |= 0x20;
/*       */               } 
/*       */               this.boolDiffItems_.add(input.readMessage(DolphinConfig.BoolDiffItem.parser(), extensionRegistry));
/*       */               continue;
/*       */           } 
/*       */           if (!parseUnknownField(input, unknownFields, extensionRegistry, tag))
/*       */             done = true; 
/*       */         } 
/*       */       } catch (InvalidProtocolBufferException e) {
/*       */         throw e.setUnfinishedMessage(this);
/*       */       } catch (IOException e) {
/*       */         throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this);
/*       */       } finally {
/*       */         if ((mutable_bitField0_ & 0x1) != 0)
/*       */           this.uint32DiffItems_ = Collections.unmodifiableList(this.uint32DiffItems_); 
/*       */         if ((mutable_bitField0_ & 0x2) != 0)
/*       */           this.int32DiffItems_ = Collections.unmodifiableList(this.int32DiffItems_); 
/*       */         if ((mutable_bitField0_ & 0x4) != 0)
/*       */           this.uint64DiffItems_ = Collections.unmodifiableList(this.uint64DiffItems_); 
/*       */         if ((mutable_bitField0_ & 0x8) != 0)
/*       */           this.int64DiffItems_ = Collections.unmodifiableList(this.int64DiffItems_); 
/*       */         if ((mutable_bitField0_ & 0x10) != 0)
/*       */           this.stringDiffItems_ = Collections.unmodifiableList(this.stringDiffItems_); 
/*       */         if ((mutable_bitField0_ & 0x20) != 0)
/*       */           this.boolDiffItems_ = Collections.unmodifiableList(this.boolDiffItems_); 
/*       */         this.unknownFields = unknownFields.build();
/*       */         makeExtensionsImmutable();
/*       */       } 
/*       */     }
/*       */     
/*       */     public static final Descriptors.Descriptor getDescriptor() {
/*       */       return DolphinConfig.internal_static_org_traccar_protobuf_dolphin_Config_ConfigDiff_descriptor;
/*       */     }
/*       */     
/*       */     protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
/*       */       return DolphinConfig.internal_static_org_traccar_protobuf_dolphin_Config_ConfigDiff_fieldAccessorTable.ensureFieldAccessorsInitialized(ConfigDiff.class, Builder.class);
/*       */     }
/*       */     
/*       */     public List<DolphinConfig.Uint32DiffItem> getUint32DiffItemsList() {
/*       */       return this.uint32DiffItems_;
/*       */     }
/*       */     
/*       */     public List<? extends DolphinConfig.Uint32DiffItemOrBuilder> getUint32DiffItemsOrBuilderList() {
/*       */       return (List)this.uint32DiffItems_;
/*       */     }
/*       */     
/*       */     public int getUint32DiffItemsCount() {
/*       */       return this.uint32DiffItems_.size();
/*       */     }
/*       */     
/*       */     public DolphinConfig.Uint32DiffItem getUint32DiffItems(int index) {
/*       */       return this.uint32DiffItems_.get(index);
/*       */     }
/*       */     
/*       */     public DolphinConfig.Uint32DiffItemOrBuilder getUint32DiffItemsOrBuilder(int index) {
/*       */       return this.uint32DiffItems_.get(index);
/*       */     }
/*       */     
/*       */     public List<DolphinConfig.Int32DiffItem> getInt32DiffItemsList() {
/*       */       return this.int32DiffItems_;
/*       */     }
/*       */     
/*       */     public List<? extends DolphinConfig.Int32DiffItemOrBuilder> getInt32DiffItemsOrBuilderList() {
/*       */       return (List)this.int32DiffItems_;
/*       */     }
/*       */     
/*       */     public int getInt32DiffItemsCount() {
/*       */       return this.int32DiffItems_.size();
/*       */     }
/*       */     
/*       */     public DolphinConfig.Int32DiffItem getInt32DiffItems(int index) {
/*       */       return this.int32DiffItems_.get(index);
/*       */     }
/*       */     
/*       */     public DolphinConfig.Int32DiffItemOrBuilder getInt32DiffItemsOrBuilder(int index) {
/*       */       return this.int32DiffItems_.get(index);
/*       */     }
/*       */     
/*       */     public List<DolphinConfig.Uint64DiffItem> getUint64DiffItemsList() {
/*       */       return this.uint64DiffItems_;
/*       */     }
/*       */     
/*       */     public List<? extends DolphinConfig.Uint64DiffItemOrBuilder> getUint64DiffItemsOrBuilderList() {
/*       */       return (List)this.uint64DiffItems_;
/*       */     }
/*       */     
/*       */     public int getUint64DiffItemsCount() {
/*       */       return this.uint64DiffItems_.size();
/*       */     }
/*       */     
/*       */     public DolphinConfig.Uint64DiffItem getUint64DiffItems(int index) {
/*       */       return this.uint64DiffItems_.get(index);
/*       */     }
/*       */     
/*       */     public DolphinConfig.Uint64DiffItemOrBuilder getUint64DiffItemsOrBuilder(int index) {
/*       */       return this.uint64DiffItems_.get(index);
/*       */     }
/*       */     
/*       */     public List<DolphinConfig.Int64DiffItem> getInt64DiffItemsList() {
/*       */       return this.int64DiffItems_;
/*       */     }
/*       */     
/*       */     public List<? extends DolphinConfig.Int64DiffItemOrBuilder> getInt64DiffItemsOrBuilderList() {
/*       */       return (List)this.int64DiffItems_;
/*       */     }
/*       */     
/*       */     public int getInt64DiffItemsCount() {
/*       */       return this.int64DiffItems_.size();
/*       */     }
/*       */     
/*       */     public DolphinConfig.Int64DiffItem getInt64DiffItems(int index) {
/*       */       return this.int64DiffItems_.get(index);
/*       */     }
/*       */     
/*       */     public DolphinConfig.Int64DiffItemOrBuilder getInt64DiffItemsOrBuilder(int index) {
/*       */       return this.int64DiffItems_.get(index);
/*       */     }
/*       */     
/*       */     public List<DolphinConfig.StringDiffItem> getStringDiffItemsList() {
/*       */       return this.stringDiffItems_;
/*       */     }
/*       */     
/*       */     public List<? extends DolphinConfig.StringDiffItemOrBuilder> getStringDiffItemsOrBuilderList() {
/*       */       return (List)this.stringDiffItems_;
/*       */     }
/*       */     
/*       */     public int getStringDiffItemsCount() {
/*       */       return this.stringDiffItems_.size();
/*       */     }
/*       */     
/*       */     public DolphinConfig.StringDiffItem getStringDiffItems(int index) {
/*       */       return this.stringDiffItems_.get(index);
/*       */     }
/*       */     
/*       */     public DolphinConfig.StringDiffItemOrBuilder getStringDiffItemsOrBuilder(int index) {
/*       */       return this.stringDiffItems_.get(index);
/*       */     }
/*       */     
/*       */     public List<DolphinConfig.BoolDiffItem> getBoolDiffItemsList() {
/*       */       return this.boolDiffItems_;
/*       */     }
/*       */     
/*       */     public List<? extends DolphinConfig.BoolDiffItemOrBuilder> getBoolDiffItemsOrBuilderList() {
/*       */       return (List)this.boolDiffItems_;
/*       */     }
/*       */     
/*       */     public int getBoolDiffItemsCount() {
/*       */       return this.boolDiffItems_.size();
/*       */     }
/*       */     
/*       */     public DolphinConfig.BoolDiffItem getBoolDiffItems(int index) {
/*       */       return this.boolDiffItems_.get(index);
/*       */     }
/*       */     
/*       */     public DolphinConfig.BoolDiffItemOrBuilder getBoolDiffItemsOrBuilder(int index) {
/*       */       return this.boolDiffItems_.get(index);
/*       */     }
/*       */     
/*       */     public final boolean isInitialized() {
/*       */       byte isInitialized = this.memoizedIsInitialized;
/*       */       if (isInitialized == 1)
/*       */         return true; 
/*       */       if (isInitialized == 0)
/*       */         return false; 
/*       */       this.memoizedIsInitialized = 1;
/*       */       return true;
/*       */     }
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/*       */       int i;
/*       */       for (i = 0; i < this.uint32DiffItems_.size(); i++)
/*       */         output.writeMessage(1, (MessageLite)this.uint32DiffItems_.get(i)); 
/*       */       for (i = 0; i < this.int32DiffItems_.size(); i++)
/*       */         output.writeMessage(2, (MessageLite)this.int32DiffItems_.get(i)); 
/*       */       for (i = 0; i < this.uint64DiffItems_.size(); i++)
/*       */         output.writeMessage(3, (MessageLite)this.uint64DiffItems_.get(i)); 
/*       */       for (i = 0; i < this.int64DiffItems_.size(); i++)
/*       */         output.writeMessage(4, (MessageLite)this.int64DiffItems_.get(i)); 
/*       */       for (i = 0; i < this.stringDiffItems_.size(); i++)
/*       */         output.writeMessage(5, (MessageLite)this.stringDiffItems_.get(i)); 
/*       */       for (i = 0; i < this.boolDiffItems_.size(); i++)
/*       */         output.writeMessage(6, (MessageLite)this.boolDiffItems_.get(i)); 
/*       */       this.unknownFields.writeTo(output);
/*       */     }
/*       */     
/*       */     public int getSerializedSize() {
/*       */       int size = this.memoizedSize;
/*       */       if (size != -1)
/*       */         return size; 
/*       */       size = 0;
/*       */       int i;
/*       */       for (i = 0; i < this.uint32DiffItems_.size(); i++)
/*       */         size += CodedOutputStream.computeMessageSize(1, (MessageLite)this.uint32DiffItems_.get(i)); 
/*       */       for (i = 0; i < this.int32DiffItems_.size(); i++)
/*       */         size += CodedOutputStream.computeMessageSize(2, (MessageLite)this.int32DiffItems_.get(i)); 
/*       */       for (i = 0; i < this.uint64DiffItems_.size(); i++)
/*       */         size += CodedOutputStream.computeMessageSize(3, (MessageLite)this.uint64DiffItems_.get(i)); 
/*       */       for (i = 0; i < this.int64DiffItems_.size(); i++)
/*       */         size += CodedOutputStream.computeMessageSize(4, (MessageLite)this.int64DiffItems_.get(i)); 
/*       */       for (i = 0; i < this.stringDiffItems_.size(); i++)
/*       */         size += CodedOutputStream.computeMessageSize(5, (MessageLite)this.stringDiffItems_.get(i)); 
/*       */       for (i = 0; i < this.boolDiffItems_.size(); i++)
/*       */         size += CodedOutputStream.computeMessageSize(6, (MessageLite)this.boolDiffItems_.get(i)); 
/*       */       size += this.unknownFields.getSerializedSize();
/*       */       this.memoizedSize = size;
/*       */       return size;
/*       */     }
/*       */     
/*       */     public boolean equals(Object obj) {
/*       */       if (obj == this)
/*       */         return true; 
/*       */       if (!(obj instanceof ConfigDiff))
/*       */         return super.equals(obj); 
/*       */       ConfigDiff other = (ConfigDiff)obj;
/*       */       return !getUint32DiffItemsList().equals(other.getUint32DiffItemsList()) ? false : (!getInt32DiffItemsList().equals(other.getInt32DiffItemsList()) ? false : (!getUint64DiffItemsList().equals(other.getUint64DiffItemsList()) ? false : (!getInt64DiffItemsList().equals(other.getInt64DiffItemsList()) ? false : (!getStringDiffItemsList().equals(other.getStringDiffItemsList()) ? false : (!getBoolDiffItemsList().equals(other.getBoolDiffItemsList()) ? false : (!!this.unknownFields.equals(other.unknownFields)))))));
/*       */     }
/*       */     
/*       */     public int hashCode() {
/*       */       if (this.memoizedHashCode != 0)
/*       */         return this.memoizedHashCode; 
/*       */       int hash = 41;
/*       */       hash = 19 * hash + getDescriptor().hashCode();
/*       */       if (getUint32DiffItemsCount() > 0) {
/*       */         hash = 37 * hash + 1;
/*       */         hash = 53 * hash + getUint32DiffItemsList().hashCode();
/*       */       } 
/*       */       if (getInt32DiffItemsCount() > 0) {
/*       */         hash = 37 * hash + 2;
/*       */         hash = 53 * hash + getInt32DiffItemsList().hashCode();
/*       */       } 
/*       */       if (getUint64DiffItemsCount() > 0) {
/*       */         hash = 37 * hash + 3;
/*       */         hash = 53 * hash + getUint64DiffItemsList().hashCode();
/*       */       } 
/*       */       if (getInt64DiffItemsCount() > 0) {
/*       */         hash = 37 * hash + 4;
/*       */         hash = 53 * hash + getInt64DiffItemsList().hashCode();
/*       */       } 
/*       */       if (getStringDiffItemsCount() > 0) {
/*       */         hash = 37 * hash + 5;
/*       */         hash = 53 * hash + getStringDiffItemsList().hashCode();
/*       */       } 
/*       */       if (getBoolDiffItemsCount() > 0) {
/*       */         hash = 37 * hash + 6;
/*       */         hash = 53 * hash + getBoolDiffItemsList().hashCode();
/*       */       } 
/*       */       hash = 29 * hash + this.unknownFields.hashCode();
/*       */       this.memoizedHashCode = hash;
/*       */       return hash;
/*       */     }
/*       */     
/*       */     public static ConfigDiff parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
/*       */       return (ConfigDiff)PARSER.parseFrom(data);
/*       */     }
/*       */     
/*       */     public static ConfigDiff parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*       */       return (ConfigDiff)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static ConfigDiff parseFrom(ByteString data) throws InvalidProtocolBufferException {
/*       */       return (ConfigDiff)PARSER.parseFrom(data);
/*       */     }
/*       */     
/*       */     public static ConfigDiff parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*       */       return (ConfigDiff)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static ConfigDiff parseFrom(byte[] data) throws InvalidProtocolBufferException {
/*       */       return (ConfigDiff)PARSER.parseFrom(data);
/*       */     }
/*       */     
/*       */     public static ConfigDiff parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*       */       return (ConfigDiff)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static ConfigDiff parseFrom(InputStream input) throws IOException {
/*       */       return (ConfigDiff)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */     
/*       */     public static ConfigDiff parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*       */       return (ConfigDiff)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static ConfigDiff parseDelimitedFrom(InputStream input) throws IOException {
/*       */       return (ConfigDiff)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
/*       */     }
/*       */     
/*       */     public static ConfigDiff parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*       */       return (ConfigDiff)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static ConfigDiff parseFrom(CodedInputStream input) throws IOException {
/*       */       return (ConfigDiff)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */     
/*       */     public static ConfigDiff parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*       */       return (ConfigDiff)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public Builder newBuilderForType() {
/*       */       return newBuilder();
/*       */     }
/*       */     
/*       */     public static Builder newBuilder() {
/*       */       return DEFAULT_INSTANCE.toBuilder();
/*       */     }
/*       */     
/*       */     public static Builder newBuilder(ConfigDiff prototype) {
/*       */       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
/*       */     }
/*       */     
/*       */     public Builder toBuilder() {
/*       */       return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder()).mergeFrom(this);
/*       */     }
/*       */     
/*       */     protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
/*       */       return new Builder(parent);
/*       */     }
/*       */     
/*       */     public static ConfigDiff getDefaultInstance() {
/*       */       return DEFAULT_INSTANCE;
/*       */     }
/*       */     
/*       */     public static Parser<ConfigDiff> parser() {
/*       */       return PARSER;
/*       */     }
/*       */     
/*       */     public Parser<ConfigDiff> getParserForType() {
/*       */       return PARSER;
/*       */     }
/*       */     
/*       */     public ConfigDiff getDefaultInstanceForType() {
/*       */       return DEFAULT_INSTANCE;
/*       */     }
/*       */     
/*       */     public static final class Builder extends GeneratedMessageV3.Builder<Builder> implements DolphinConfig.ConfigDiffOrBuilder {
/*       */       private int bitField0_;
/*       */       private List<DolphinConfig.Uint32DiffItem> uint32DiffItems_ = Collections.emptyList();
/*       */       private RepeatedFieldBuilderV3<DolphinConfig.Uint32DiffItem, DolphinConfig.Uint32DiffItem.Builder, DolphinConfig.Uint32DiffItemOrBuilder> uint32DiffItemsBuilder_;
/*       */       private List<DolphinConfig.Int32DiffItem> int32DiffItems_ = Collections.emptyList();
/*       */       private RepeatedFieldBuilderV3<DolphinConfig.Int32DiffItem, DolphinConfig.Int32DiffItem.Builder, DolphinConfig.Int32DiffItemOrBuilder> int32DiffItemsBuilder_;
/*       */       private List<DolphinConfig.Uint64DiffItem> uint64DiffItems_ = Collections.emptyList();
/*       */       private RepeatedFieldBuilderV3<DolphinConfig.Uint64DiffItem, DolphinConfig.Uint64DiffItem.Builder, DolphinConfig.Uint64DiffItemOrBuilder> uint64DiffItemsBuilder_;
/*       */       private List<DolphinConfig.Int64DiffItem> int64DiffItems_ = Collections.emptyList();
/*       */       private RepeatedFieldBuilderV3<DolphinConfig.Int64DiffItem, DolphinConfig.Int64DiffItem.Builder, DolphinConfig.Int64DiffItemOrBuilder> int64DiffItemsBuilder_;
/*       */       private List<DolphinConfig.StringDiffItem> stringDiffItems_ = Collections.emptyList();
/*       */       private RepeatedFieldBuilderV3<DolphinConfig.StringDiffItem, DolphinConfig.StringDiffItem.Builder, DolphinConfig.StringDiffItemOrBuilder> stringDiffItemsBuilder_;
/*       */       private List<DolphinConfig.BoolDiffItem> boolDiffItems_ = Collections.emptyList();
/*       */       private RepeatedFieldBuilderV3<DolphinConfig.BoolDiffItem, DolphinConfig.BoolDiffItem.Builder, DolphinConfig.BoolDiffItemOrBuilder> boolDiffItemsBuilder_;
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/*       */         return DolphinConfig.internal_static_org_traccar_protobuf_dolphin_Config_ConfigDiff_descriptor;
/*       */       }
/*       */       
/*       */       protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
/*       */         return DolphinConfig.internal_static_org_traccar_protobuf_dolphin_Config_ConfigDiff_fieldAccessorTable.ensureFieldAccessorsInitialized(DolphinConfig.ConfigDiff.class, Builder.class);
/*       */       }
/*       */       
/*       */       private Builder() {
/*       */         maybeForceBuilderInitialization();
/*       */       }
/*       */       
/*       */       private Builder(GeneratedMessageV3.BuilderParent parent) {
/*       */         super(parent);
/*       */         maybeForceBuilderInitialization();
/*       */       }
/*       */       
/*       */       private void maybeForceBuilderInitialization() {
/*       */         if (DolphinConfig.ConfigDiff.alwaysUseFieldBuilders) {
/*       */           getUint32DiffItemsFieldBuilder();
/*       */           getInt32DiffItemsFieldBuilder();
/*       */           getUint64DiffItemsFieldBuilder();
/*       */           getInt64DiffItemsFieldBuilder();
/*       */           getStringDiffItemsFieldBuilder();
/*       */           getBoolDiffItemsFieldBuilder();
/*       */         } 
/*       */       }
/*       */       
/*       */       public Builder clear() {
/*       */         super.clear();
/*       */         if (this.uint32DiffItemsBuilder_ == null) {
/*       */           this.uint32DiffItems_ = Collections.emptyList();
/*       */           this.bitField0_ &= 0xFFFFFFFE;
/*       */         } else {
/*       */           this.uint32DiffItemsBuilder_.clear();
/*       */         } 
/*       */         if (this.int32DiffItemsBuilder_ == null) {
/*       */           this.int32DiffItems_ = Collections.emptyList();
/*       */           this.bitField0_ &= 0xFFFFFFFD;
/*       */         } else {
/*       */           this.int32DiffItemsBuilder_.clear();
/*       */         } 
/*       */         if (this.uint64DiffItemsBuilder_ == null) {
/*       */           this.uint64DiffItems_ = Collections.emptyList();
/*       */           this.bitField0_ &= 0xFFFFFFFB;
/*       */         } else {
/*       */           this.uint64DiffItemsBuilder_.clear();
/*       */         } 
/*       */         if (this.int64DiffItemsBuilder_ == null) {
/*       */           this.int64DiffItems_ = Collections.emptyList();
/*       */           this.bitField0_ &= 0xFFFFFFF7;
/*       */         } else {
/*       */           this.int64DiffItemsBuilder_.clear();
/*       */         } 
/*       */         if (this.stringDiffItemsBuilder_ == null) {
/*       */           this.stringDiffItems_ = Collections.emptyList();
/*       */           this.bitField0_ &= 0xFFFFFFEF;
/*       */         } else {
/*       */           this.stringDiffItemsBuilder_.clear();
/*       */         } 
/*       */         if (this.boolDiffItemsBuilder_ == null) {
/*       */           this.boolDiffItems_ = Collections.emptyList();
/*       */           this.bitField0_ &= 0xFFFFFFDF;
/*       */         } else {
/*       */           this.boolDiffItemsBuilder_.clear();
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Descriptors.Descriptor getDescriptorForType() {
/*       */         return DolphinConfig.internal_static_org_traccar_protobuf_dolphin_Config_ConfigDiff_descriptor;
/*       */       }
/*       */       
/*       */       public DolphinConfig.ConfigDiff getDefaultInstanceForType() {
/*       */         return DolphinConfig.ConfigDiff.getDefaultInstance();
/*       */       }
/*       */       
/*       */       public DolphinConfig.ConfigDiff build() {
/*       */         DolphinConfig.ConfigDiff result = buildPartial();
/*       */         if (!result.isInitialized())
/*       */           throw newUninitializedMessageException(result); 
/*       */         return result;
/*       */       }
/*       */       
/*       */       public DolphinConfig.ConfigDiff buildPartial() {
/*       */         DolphinConfig.ConfigDiff result = new DolphinConfig.ConfigDiff(this);
/*       */         int from_bitField0_ = this.bitField0_;
/*       */         if (this.uint32DiffItemsBuilder_ == null) {
/*       */           if ((this.bitField0_ & 0x1) != 0) {
/*       */             this.uint32DiffItems_ = Collections.unmodifiableList(this.uint32DiffItems_);
/*       */             this.bitField0_ &= 0xFFFFFFFE;
/*       */           } 
/*       */           result.uint32DiffItems_ = this.uint32DiffItems_;
/*       */         } else {
/*       */           result.uint32DiffItems_ = this.uint32DiffItemsBuilder_.build();
/*       */         } 
/*       */         if (this.int32DiffItemsBuilder_ == null) {
/*       */           if ((this.bitField0_ & 0x2) != 0) {
/*       */             this.int32DiffItems_ = Collections.unmodifiableList(this.int32DiffItems_);
/*       */             this.bitField0_ &= 0xFFFFFFFD;
/*       */           } 
/*       */           result.int32DiffItems_ = this.int32DiffItems_;
/*       */         } else {
/*       */           result.int32DiffItems_ = this.int32DiffItemsBuilder_.build();
/*       */         } 
/*       */         if (this.uint64DiffItemsBuilder_ == null) {
/*       */           if ((this.bitField0_ & 0x4) != 0) {
/*       */             this.uint64DiffItems_ = Collections.unmodifiableList(this.uint64DiffItems_);
/*       */             this.bitField0_ &= 0xFFFFFFFB;
/*       */           } 
/*       */           result.uint64DiffItems_ = this.uint64DiffItems_;
/*       */         } else {
/*       */           result.uint64DiffItems_ = this.uint64DiffItemsBuilder_.build();
/*       */         } 
/*       */         if (this.int64DiffItemsBuilder_ == null) {
/*       */           if ((this.bitField0_ & 0x8) != 0) {
/*       */             this.int64DiffItems_ = Collections.unmodifiableList(this.int64DiffItems_);
/*       */             this.bitField0_ &= 0xFFFFFFF7;
/*       */           } 
/*       */           result.int64DiffItems_ = this.int64DiffItems_;
/*       */         } else {
/*       */           result.int64DiffItems_ = this.int64DiffItemsBuilder_.build();
/*       */         } 
/*       */         if (this.stringDiffItemsBuilder_ == null) {
/*       */           if ((this.bitField0_ & 0x10) != 0) {
/*       */             this.stringDiffItems_ = Collections.unmodifiableList(this.stringDiffItems_);
/*       */             this.bitField0_ &= 0xFFFFFFEF;
/*       */           } 
/*       */           result.stringDiffItems_ = this.stringDiffItems_;
/*       */         } else {
/*       */           result.stringDiffItems_ = this.stringDiffItemsBuilder_.build();
/*       */         } 
/*       */         if (this.boolDiffItemsBuilder_ == null) {
/*       */           if ((this.bitField0_ & 0x20) != 0) {
/*       */             this.boolDiffItems_ = Collections.unmodifiableList(this.boolDiffItems_);
/*       */             this.bitField0_ &= 0xFFFFFFDF;
/*       */           } 
/*       */           result.boolDiffItems_ = this.boolDiffItems_;
/*       */         } else {
/*       */           result.boolDiffItems_ = this.boolDiffItemsBuilder_.build();
/*       */         } 
/*       */         onBuilt();
/*       */         return result;
/*       */       }
/*       */       
/*       */       public Builder clone() {
/*       */         return (Builder)super.clone();
/*       */       }
/*       */       
/*       */       public Builder setField(Descriptors.FieldDescriptor field, Object value) {
/*       */         return (Builder)super.setField(field, value);
/*       */       }
/*       */       
/*       */       public Builder clearField(Descriptors.FieldDescriptor field) {
/*       */         return (Builder)super.clearField(field);
/*       */       }
/*       */       
/*       */       public Builder clearOneof(Descriptors.OneofDescriptor oneof) {
/*       */         return (Builder)super.clearOneof(oneof);
/*       */       }
/*       */       
/*       */       public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
/*       */         return (Builder)super.setRepeatedField(field, index, value);
/*       */       }
/*       */       
/*       */       public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
/*       */         return (Builder)super.addRepeatedField(field, value);
/*       */       }
/*       */       
/*       */       public Builder mergeFrom(Message other) {
/*       */         if (other instanceof DolphinConfig.ConfigDiff)
/*       */           return mergeFrom((DolphinConfig.ConfigDiff)other); 
/*       */         super.mergeFrom(other);
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeFrom(DolphinConfig.ConfigDiff other) {
/*       */         if (other == DolphinConfig.ConfigDiff.getDefaultInstance())
/*       */           return this; 
/*       */         if (this.uint32DiffItemsBuilder_ == null) {
/*       */           if (!other.uint32DiffItems_.isEmpty()) {
/*       */             if (this.uint32DiffItems_.isEmpty()) {
/*       */               this.uint32DiffItems_ = other.uint32DiffItems_;
/*       */               this.bitField0_ &= 0xFFFFFFFE;
/*       */             } else {
/*       */               ensureUint32DiffItemsIsMutable();
/*       */               this.uint32DiffItems_.addAll(other.uint32DiffItems_);
/*       */             } 
/*       */             onChanged();
/*       */           } 
/*       */         } else if (!other.uint32DiffItems_.isEmpty()) {
/*       */           if (this.uint32DiffItemsBuilder_.isEmpty()) {
/*       */             this.uint32DiffItemsBuilder_.dispose();
/*       */             this.uint32DiffItemsBuilder_ = null;
/*       */             this.uint32DiffItems_ = other.uint32DiffItems_;
/*       */             this.bitField0_ &= 0xFFFFFFFE;
/*       */             this.uint32DiffItemsBuilder_ = DolphinConfig.ConfigDiff.alwaysUseFieldBuilders ? getUint32DiffItemsFieldBuilder() : null;
/*       */           } else {
/*       */             this.uint32DiffItemsBuilder_.addAllMessages(other.uint32DiffItems_);
/*       */           } 
/*       */         } 
/*       */         if (this.int32DiffItemsBuilder_ == null) {
/*       */           if (!other.int32DiffItems_.isEmpty()) {
/*       */             if (this.int32DiffItems_.isEmpty()) {
/*       */               this.int32DiffItems_ = other.int32DiffItems_;
/*       */               this.bitField0_ &= 0xFFFFFFFD;
/*       */             } else {
/*       */               ensureInt32DiffItemsIsMutable();
/*       */               this.int32DiffItems_.addAll(other.int32DiffItems_);
/*       */             } 
/*       */             onChanged();
/*       */           } 
/*       */         } else if (!other.int32DiffItems_.isEmpty()) {
/*       */           if (this.int32DiffItemsBuilder_.isEmpty()) {
/*       */             this.int32DiffItemsBuilder_.dispose();
/*       */             this.int32DiffItemsBuilder_ = null;
/*       */             this.int32DiffItems_ = other.int32DiffItems_;
/*       */             this.bitField0_ &= 0xFFFFFFFD;
/*       */             this.int32DiffItemsBuilder_ = DolphinConfig.ConfigDiff.alwaysUseFieldBuilders ? getInt32DiffItemsFieldBuilder() : null;
/*       */           } else {
/*       */             this.int32DiffItemsBuilder_.addAllMessages(other.int32DiffItems_);
/*       */           } 
/*       */         } 
/*       */         if (this.uint64DiffItemsBuilder_ == null) {
/*       */           if (!other.uint64DiffItems_.isEmpty()) {
/*       */             if (this.uint64DiffItems_.isEmpty()) {
/*       */               this.uint64DiffItems_ = other.uint64DiffItems_;
/*       */               this.bitField0_ &= 0xFFFFFFFB;
/*       */             } else {
/*       */               ensureUint64DiffItemsIsMutable();
/*       */               this.uint64DiffItems_.addAll(other.uint64DiffItems_);
/*       */             } 
/*       */             onChanged();
/*       */           } 
/*       */         } else if (!other.uint64DiffItems_.isEmpty()) {
/*       */           if (this.uint64DiffItemsBuilder_.isEmpty()) {
/*       */             this.uint64DiffItemsBuilder_.dispose();
/*       */             this.uint64DiffItemsBuilder_ = null;
/*       */             this.uint64DiffItems_ = other.uint64DiffItems_;
/*       */             this.bitField0_ &= 0xFFFFFFFB;
/*       */             this.uint64DiffItemsBuilder_ = DolphinConfig.ConfigDiff.alwaysUseFieldBuilders ? getUint64DiffItemsFieldBuilder() : null;
/*       */           } else {
/*       */             this.uint64DiffItemsBuilder_.addAllMessages(other.uint64DiffItems_);
/*       */           } 
/*       */         } 
/*       */         if (this.int64DiffItemsBuilder_ == null) {
/*       */           if (!other.int64DiffItems_.isEmpty()) {
/*       */             if (this.int64DiffItems_.isEmpty()) {
/*       */               this.int64DiffItems_ = other.int64DiffItems_;
/*       */               this.bitField0_ &= 0xFFFFFFF7;
/*       */             } else {
/*       */               ensureInt64DiffItemsIsMutable();
/*       */               this.int64DiffItems_.addAll(other.int64DiffItems_);
/*       */             } 
/*       */             onChanged();
/*       */           } 
/*       */         } else if (!other.int64DiffItems_.isEmpty()) {
/*       */           if (this.int64DiffItemsBuilder_.isEmpty()) {
/*       */             this.int64DiffItemsBuilder_.dispose();
/*       */             this.int64DiffItemsBuilder_ = null;
/*       */             this.int64DiffItems_ = other.int64DiffItems_;
/*       */             this.bitField0_ &= 0xFFFFFFF7;
/*       */             this.int64DiffItemsBuilder_ = DolphinConfig.ConfigDiff.alwaysUseFieldBuilders ? getInt64DiffItemsFieldBuilder() : null;
/*       */           } else {
/*       */             this.int64DiffItemsBuilder_.addAllMessages(other.int64DiffItems_);
/*       */           } 
/*       */         } 
/*       */         if (this.stringDiffItemsBuilder_ == null) {
/*       */           if (!other.stringDiffItems_.isEmpty()) {
/*       */             if (this.stringDiffItems_.isEmpty()) {
/*       */               this.stringDiffItems_ = other.stringDiffItems_;
/*       */               this.bitField0_ &= 0xFFFFFFEF;
/*       */             } else {
/*       */               ensureStringDiffItemsIsMutable();
/*       */               this.stringDiffItems_.addAll(other.stringDiffItems_);
/*       */             } 
/*       */             onChanged();
/*       */           } 
/*       */         } else if (!other.stringDiffItems_.isEmpty()) {
/*       */           if (this.stringDiffItemsBuilder_.isEmpty()) {
/*       */             this.stringDiffItemsBuilder_.dispose();
/*       */             this.stringDiffItemsBuilder_ = null;
/*       */             this.stringDiffItems_ = other.stringDiffItems_;
/*       */             this.bitField0_ &= 0xFFFFFFEF;
/*       */             this.stringDiffItemsBuilder_ = DolphinConfig.ConfigDiff.alwaysUseFieldBuilders ? getStringDiffItemsFieldBuilder() : null;
/*       */           } else {
/*       */             this.stringDiffItemsBuilder_.addAllMessages(other.stringDiffItems_);
/*       */           } 
/*       */         } 
/*       */         if (this.boolDiffItemsBuilder_ == null) {
/*       */           if (!other.boolDiffItems_.isEmpty()) {
/*       */             if (this.boolDiffItems_.isEmpty()) {
/*       */               this.boolDiffItems_ = other.boolDiffItems_;
/*       */               this.bitField0_ &= 0xFFFFFFDF;
/*       */             } else {
/*       */               ensureBoolDiffItemsIsMutable();
/*       */               this.boolDiffItems_.addAll(other.boolDiffItems_);
/*       */             } 
/*       */             onChanged();
/*       */           } 
/*       */         } else if (!other.boolDiffItems_.isEmpty()) {
/*       */           if (this.boolDiffItemsBuilder_.isEmpty()) {
/*       */             this.boolDiffItemsBuilder_.dispose();
/*       */             this.boolDiffItemsBuilder_ = null;
/*       */             this.boolDiffItems_ = other.boolDiffItems_;
/*       */             this.bitField0_ &= 0xFFFFFFDF;
/*       */             this.boolDiffItemsBuilder_ = DolphinConfig.ConfigDiff.alwaysUseFieldBuilders ? getBoolDiffItemsFieldBuilder() : null;
/*       */           } else {
/*       */             this.boolDiffItemsBuilder_.addAllMessages(other.boolDiffItems_);
/*       */           } 
/*       */         } 
/*       */         mergeUnknownFields(other.unknownFields);
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       public final boolean isInitialized() {
/*       */         return true;
/*       */       }
/*       */       
/*       */       public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*       */         DolphinConfig.ConfigDiff parsedMessage = null;
/*       */         try {
/*       */           parsedMessage = (DolphinConfig.ConfigDiff)DolphinConfig.ConfigDiff.PARSER.parsePartialFrom(input, extensionRegistry);
/*       */         } catch (InvalidProtocolBufferException e) {
/*       */           parsedMessage = (DolphinConfig.ConfigDiff)e.getUnfinishedMessage();
/*       */           throw e.unwrapIOException();
/*       */         } finally {
/*       */           if (parsedMessage != null)
/*       */             mergeFrom(parsedMessage); 
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       private void ensureUint32DiffItemsIsMutable() {
/*       */         if ((this.bitField0_ & 0x1) == 0) {
/*       */           this.uint32DiffItems_ = new ArrayList<>(this.uint32DiffItems_);
/*       */           this.bitField0_ |= 0x1;
/*       */         } 
/*       */       }
/*       */       
/*       */       public List<DolphinConfig.Uint32DiffItem> getUint32DiffItemsList() {
/*       */         return (this.uint32DiffItemsBuilder_ == null) ? Collections.unmodifiableList(this.uint32DiffItems_) : this.uint32DiffItemsBuilder_.getMessageList();
/*       */       }
/*       */       
/*       */       public int getUint32DiffItemsCount() {
/*       */         return (this.uint32DiffItemsBuilder_ == null) ? this.uint32DiffItems_.size() : this.uint32DiffItemsBuilder_.getCount();
/*       */       }
/*       */       
/*       */       public DolphinConfig.Uint32DiffItem getUint32DiffItems(int index) {
/*       */         return (this.uint32DiffItemsBuilder_ == null) ? this.uint32DiffItems_.get(index) : (DolphinConfig.Uint32DiffItem)this.uint32DiffItemsBuilder_.getMessage(index);
/*       */       }
/*       */       
/*       */       public Builder setUint32DiffItems(int index, DolphinConfig.Uint32DiffItem value) {
/*       */         if (this.uint32DiffItemsBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           ensureUint32DiffItemsIsMutable();
/*       */           this.uint32DiffItems_.set(index, value);
/*       */           onChanged();
/*       */         } else {
/*       */           this.uint32DiffItemsBuilder_.setMessage(index, (AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setUint32DiffItems(int index, DolphinConfig.Uint32DiffItem.Builder builderForValue) {
/*       */         if (this.uint32DiffItemsBuilder_ == null) {
/*       */           ensureUint32DiffItemsIsMutable();
/*       */           this.uint32DiffItems_.set(index, builderForValue.build());
/*       */           onChanged();
/*       */         } else {
/*       */           this.uint32DiffItemsBuilder_.setMessage(index, (AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder addUint32DiffItems(DolphinConfig.Uint32DiffItem value) {
/*       */         if (this.uint32DiffItemsBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           ensureUint32DiffItemsIsMutable();
/*       */           this.uint32DiffItems_.add(value);
/*       */           onChanged();
/*       */         } else {
/*       */           this.uint32DiffItemsBuilder_.addMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder addUint32DiffItems(int index, DolphinConfig.Uint32DiffItem value) {
/*       */         if (this.uint32DiffItemsBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           ensureUint32DiffItemsIsMutable();
/*       */           this.uint32DiffItems_.add(index, value);
/*       */           onChanged();
/*       */         } else {
/*       */           this.uint32DiffItemsBuilder_.addMessage(index, (AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder addUint32DiffItems(DolphinConfig.Uint32DiffItem.Builder builderForValue) {
/*       */         if (this.uint32DiffItemsBuilder_ == null) {
/*       */           ensureUint32DiffItemsIsMutable();
/*       */           this.uint32DiffItems_.add(builderForValue.build());
/*       */           onChanged();
/*       */         } else {
/*       */           this.uint32DiffItemsBuilder_.addMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder addUint32DiffItems(int index, DolphinConfig.Uint32DiffItem.Builder builderForValue) {
/*       */         if (this.uint32DiffItemsBuilder_ == null) {
/*       */           ensureUint32DiffItemsIsMutable();
/*       */           this.uint32DiffItems_.add(index, builderForValue.build());
/*       */           onChanged();
/*       */         } else {
/*       */           this.uint32DiffItemsBuilder_.addMessage(index, (AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder addAllUint32DiffItems(Iterable<? extends DolphinConfig.Uint32DiffItem> values) {
/*       */         if (this.uint32DiffItemsBuilder_ == null) {
/*       */           ensureUint32DiffItemsIsMutable();
/*       */           AbstractMessageLite.Builder.addAll(values, this.uint32DiffItems_);
/*       */           onChanged();
/*       */         } else {
/*       */           this.uint32DiffItemsBuilder_.addAllMessages(values);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearUint32DiffItems() {
/*       */         if (this.uint32DiffItemsBuilder_ == null) {
/*       */           this.uint32DiffItems_ = Collections.emptyList();
/*       */           this.bitField0_ &= 0xFFFFFFFE;
/*       */           onChanged();
/*       */         } else {
/*       */           this.uint32DiffItemsBuilder_.clear();
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder removeUint32DiffItems(int index) {
/*       */         if (this.uint32DiffItemsBuilder_ == null) {
/*       */           ensureUint32DiffItemsIsMutable();
/*       */           this.uint32DiffItems_.remove(index);
/*       */           onChanged();
/*       */         } else {
/*       */           this.uint32DiffItemsBuilder_.remove(index);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.Uint32DiffItem.Builder getUint32DiffItemsBuilder(int index) {
/*       */         return (DolphinConfig.Uint32DiffItem.Builder)getUint32DiffItemsFieldBuilder().getBuilder(index);
/*       */       }
/*       */       
/*       */       public DolphinConfig.Uint32DiffItemOrBuilder getUint32DiffItemsOrBuilder(int index) {
/*       */         return (this.uint32DiffItemsBuilder_ == null) ? this.uint32DiffItems_.get(index) : (DolphinConfig.Uint32DiffItemOrBuilder)this.uint32DiffItemsBuilder_.getMessageOrBuilder(index);
/*       */       }
/*       */       
/*       */       public List<? extends DolphinConfig.Uint32DiffItemOrBuilder> getUint32DiffItemsOrBuilderList() {
/*       */         return (this.uint32DiffItemsBuilder_ != null) ? this.uint32DiffItemsBuilder_.getMessageOrBuilderList() : Collections.unmodifiableList((List)this.uint32DiffItems_);
/*       */       }
/*       */       
/*       */       public DolphinConfig.Uint32DiffItem.Builder addUint32DiffItemsBuilder() {
/*       */         return (DolphinConfig.Uint32DiffItem.Builder)getUint32DiffItemsFieldBuilder().addBuilder((AbstractMessage)DolphinConfig.Uint32DiffItem.getDefaultInstance());
/*       */       }
/*       */       
/*       */       public DolphinConfig.Uint32DiffItem.Builder addUint32DiffItemsBuilder(int index) {
/*       */         return (DolphinConfig.Uint32DiffItem.Builder)getUint32DiffItemsFieldBuilder().addBuilder(index, (AbstractMessage)DolphinConfig.Uint32DiffItem.getDefaultInstance());
/*       */       }
/*       */       
/*       */       public List<DolphinConfig.Uint32DiffItem.Builder> getUint32DiffItemsBuilderList() {
/*       */         return getUint32DiffItemsFieldBuilder().getBuilderList();
/*       */       }
/*       */       
/*       */       private RepeatedFieldBuilderV3<DolphinConfig.Uint32DiffItem, DolphinConfig.Uint32DiffItem.Builder, DolphinConfig.Uint32DiffItemOrBuilder> getUint32DiffItemsFieldBuilder() {
/*       */         if (this.uint32DiffItemsBuilder_ == null) {
/*       */           this.uint32DiffItemsBuilder_ = new RepeatedFieldBuilderV3(this.uint32DiffItems_, ((this.bitField0_ & 0x1) != 0), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.uint32DiffItems_ = null;
/*       */         } 
/*       */         return this.uint32DiffItemsBuilder_;
/*       */       }
/*       */       
/*       */       private void ensureInt32DiffItemsIsMutable() {
/*       */         if ((this.bitField0_ & 0x2) == 0) {
/*       */           this.int32DiffItems_ = new ArrayList<>(this.int32DiffItems_);
/*       */           this.bitField0_ |= 0x2;
/*       */         } 
/*       */       }
/*       */       
/*       */       public List<DolphinConfig.Int32DiffItem> getInt32DiffItemsList() {
/*       */         return (this.int32DiffItemsBuilder_ == null) ? Collections.unmodifiableList(this.int32DiffItems_) : this.int32DiffItemsBuilder_.getMessageList();
/*       */       }
/*       */       
/*       */       public int getInt32DiffItemsCount() {
/*       */         return (this.int32DiffItemsBuilder_ == null) ? this.int32DiffItems_.size() : this.int32DiffItemsBuilder_.getCount();
/*       */       }
/*       */       
/*       */       public DolphinConfig.Int32DiffItem getInt32DiffItems(int index) {
/*       */         return (this.int32DiffItemsBuilder_ == null) ? this.int32DiffItems_.get(index) : (DolphinConfig.Int32DiffItem)this.int32DiffItemsBuilder_.getMessage(index);
/*       */       }
/*       */       
/*       */       public Builder setInt32DiffItems(int index, DolphinConfig.Int32DiffItem value) {
/*       */         if (this.int32DiffItemsBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           ensureInt32DiffItemsIsMutable();
/*       */           this.int32DiffItems_.set(index, value);
/*       */           onChanged();
/*       */         } else {
/*       */           this.int32DiffItemsBuilder_.setMessage(index, (AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setInt32DiffItems(int index, DolphinConfig.Int32DiffItem.Builder builderForValue) {
/*       */         if (this.int32DiffItemsBuilder_ == null) {
/*       */           ensureInt32DiffItemsIsMutable();
/*       */           this.int32DiffItems_.set(index, builderForValue.build());
/*       */           onChanged();
/*       */         } else {
/*       */           this.int32DiffItemsBuilder_.setMessage(index, (AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder addInt32DiffItems(DolphinConfig.Int32DiffItem value) {
/*       */         if (this.int32DiffItemsBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           ensureInt32DiffItemsIsMutable();
/*       */           this.int32DiffItems_.add(value);
/*       */           onChanged();
/*       */         } else {
/*       */           this.int32DiffItemsBuilder_.addMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder addInt32DiffItems(int index, DolphinConfig.Int32DiffItem value) {
/*       */         if (this.int32DiffItemsBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           ensureInt32DiffItemsIsMutable();
/*       */           this.int32DiffItems_.add(index, value);
/*       */           onChanged();
/*       */         } else {
/*       */           this.int32DiffItemsBuilder_.addMessage(index, (AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder addInt32DiffItems(DolphinConfig.Int32DiffItem.Builder builderForValue) {
/*       */         if (this.int32DiffItemsBuilder_ == null) {
/*       */           ensureInt32DiffItemsIsMutable();
/*       */           this.int32DiffItems_.add(builderForValue.build());
/*       */           onChanged();
/*       */         } else {
/*       */           this.int32DiffItemsBuilder_.addMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder addInt32DiffItems(int index, DolphinConfig.Int32DiffItem.Builder builderForValue) {
/*       */         if (this.int32DiffItemsBuilder_ == null) {
/*       */           ensureInt32DiffItemsIsMutable();
/*       */           this.int32DiffItems_.add(index, builderForValue.build());
/*       */           onChanged();
/*       */         } else {
/*       */           this.int32DiffItemsBuilder_.addMessage(index, (AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder addAllInt32DiffItems(Iterable<? extends DolphinConfig.Int32DiffItem> values) {
/*       */         if (this.int32DiffItemsBuilder_ == null) {
/*       */           ensureInt32DiffItemsIsMutable();
/*       */           AbstractMessageLite.Builder.addAll(values, this.int32DiffItems_);
/*       */           onChanged();
/*       */         } else {
/*       */           this.int32DiffItemsBuilder_.addAllMessages(values);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearInt32DiffItems() {
/*       */         if (this.int32DiffItemsBuilder_ == null) {
/*       */           this.int32DiffItems_ = Collections.emptyList();
/*       */           this.bitField0_ &= 0xFFFFFFFD;
/*       */           onChanged();
/*       */         } else {
/*       */           this.int32DiffItemsBuilder_.clear();
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder removeInt32DiffItems(int index) {
/*       */         if (this.int32DiffItemsBuilder_ == null) {
/*       */           ensureInt32DiffItemsIsMutable();
/*       */           this.int32DiffItems_.remove(index);
/*       */           onChanged();
/*       */         } else {
/*       */           this.int32DiffItemsBuilder_.remove(index);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.Int32DiffItem.Builder getInt32DiffItemsBuilder(int index) {
/*       */         return (DolphinConfig.Int32DiffItem.Builder)getInt32DiffItemsFieldBuilder().getBuilder(index);
/*       */       }
/*       */       
/*       */       public DolphinConfig.Int32DiffItemOrBuilder getInt32DiffItemsOrBuilder(int index) {
/*       */         return (this.int32DiffItemsBuilder_ == null) ? this.int32DiffItems_.get(index) : (DolphinConfig.Int32DiffItemOrBuilder)this.int32DiffItemsBuilder_.getMessageOrBuilder(index);
/*       */       }
/*       */       
/*       */       public List<? extends DolphinConfig.Int32DiffItemOrBuilder> getInt32DiffItemsOrBuilderList() {
/*       */         return (this.int32DiffItemsBuilder_ != null) ? this.int32DiffItemsBuilder_.getMessageOrBuilderList() : Collections.unmodifiableList((List)this.int32DiffItems_);
/*       */       }
/*       */       
/*       */       public DolphinConfig.Int32DiffItem.Builder addInt32DiffItemsBuilder() {
/*       */         return (DolphinConfig.Int32DiffItem.Builder)getInt32DiffItemsFieldBuilder().addBuilder((AbstractMessage)DolphinConfig.Int32DiffItem.getDefaultInstance());
/*       */       }
/*       */       
/*       */       public DolphinConfig.Int32DiffItem.Builder addInt32DiffItemsBuilder(int index) {
/*       */         return (DolphinConfig.Int32DiffItem.Builder)getInt32DiffItemsFieldBuilder().addBuilder(index, (AbstractMessage)DolphinConfig.Int32DiffItem.getDefaultInstance());
/*       */       }
/*       */       
/*       */       public List<DolphinConfig.Int32DiffItem.Builder> getInt32DiffItemsBuilderList() {
/*       */         return getInt32DiffItemsFieldBuilder().getBuilderList();
/*       */       }
/*       */       
/*       */       private RepeatedFieldBuilderV3<DolphinConfig.Int32DiffItem, DolphinConfig.Int32DiffItem.Builder, DolphinConfig.Int32DiffItemOrBuilder> getInt32DiffItemsFieldBuilder() {
/*       */         if (this.int32DiffItemsBuilder_ == null) {
/*       */           this.int32DiffItemsBuilder_ = new RepeatedFieldBuilderV3(this.int32DiffItems_, ((this.bitField0_ & 0x2) != 0), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.int32DiffItems_ = null;
/*       */         } 
/*       */         return this.int32DiffItemsBuilder_;
/*       */       }
/*       */       
/*       */       private void ensureUint64DiffItemsIsMutable() {
/*       */         if ((this.bitField0_ & 0x4) == 0) {
/*       */           this.uint64DiffItems_ = new ArrayList<>(this.uint64DiffItems_);
/*       */           this.bitField0_ |= 0x4;
/*       */         } 
/*       */       }
/*       */       
/*       */       public List<DolphinConfig.Uint64DiffItem> getUint64DiffItemsList() {
/*       */         return (this.uint64DiffItemsBuilder_ == null) ? Collections.unmodifiableList(this.uint64DiffItems_) : this.uint64DiffItemsBuilder_.getMessageList();
/*       */       }
/*       */       
/*       */       public int getUint64DiffItemsCount() {
/*       */         return (this.uint64DiffItemsBuilder_ == null) ? this.uint64DiffItems_.size() : this.uint64DiffItemsBuilder_.getCount();
/*       */       }
/*       */       
/*       */       public DolphinConfig.Uint64DiffItem getUint64DiffItems(int index) {
/*       */         return (this.uint64DiffItemsBuilder_ == null) ? this.uint64DiffItems_.get(index) : (DolphinConfig.Uint64DiffItem)this.uint64DiffItemsBuilder_.getMessage(index);
/*       */       }
/*       */       
/*       */       public Builder setUint64DiffItems(int index, DolphinConfig.Uint64DiffItem value) {
/*       */         if (this.uint64DiffItemsBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           ensureUint64DiffItemsIsMutable();
/*       */           this.uint64DiffItems_.set(index, value);
/*       */           onChanged();
/*       */         } else {
/*       */           this.uint64DiffItemsBuilder_.setMessage(index, (AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setUint64DiffItems(int index, DolphinConfig.Uint64DiffItem.Builder builderForValue) {
/*       */         if (this.uint64DiffItemsBuilder_ == null) {
/*       */           ensureUint64DiffItemsIsMutable();
/*       */           this.uint64DiffItems_.set(index, builderForValue.build());
/*       */           onChanged();
/*       */         } else {
/*       */           this.uint64DiffItemsBuilder_.setMessage(index, (AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder addUint64DiffItems(DolphinConfig.Uint64DiffItem value) {
/*       */         if (this.uint64DiffItemsBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           ensureUint64DiffItemsIsMutable();
/*       */           this.uint64DiffItems_.add(value);
/*       */           onChanged();
/*       */         } else {
/*       */           this.uint64DiffItemsBuilder_.addMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder addUint64DiffItems(int index, DolphinConfig.Uint64DiffItem value) {
/*       */         if (this.uint64DiffItemsBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           ensureUint64DiffItemsIsMutable();
/*       */           this.uint64DiffItems_.add(index, value);
/*       */           onChanged();
/*       */         } else {
/*       */           this.uint64DiffItemsBuilder_.addMessage(index, (AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder addUint64DiffItems(DolphinConfig.Uint64DiffItem.Builder builderForValue) {
/*       */         if (this.uint64DiffItemsBuilder_ == null) {
/*       */           ensureUint64DiffItemsIsMutable();
/*       */           this.uint64DiffItems_.add(builderForValue.build());
/*       */           onChanged();
/*       */         } else {
/*       */           this.uint64DiffItemsBuilder_.addMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder addUint64DiffItems(int index, DolphinConfig.Uint64DiffItem.Builder builderForValue) {
/*       */         if (this.uint64DiffItemsBuilder_ == null) {
/*       */           ensureUint64DiffItemsIsMutable();
/*       */           this.uint64DiffItems_.add(index, builderForValue.build());
/*       */           onChanged();
/*       */         } else {
/*       */           this.uint64DiffItemsBuilder_.addMessage(index, (AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder addAllUint64DiffItems(Iterable<? extends DolphinConfig.Uint64DiffItem> values) {
/*       */         if (this.uint64DiffItemsBuilder_ == null) {
/*       */           ensureUint64DiffItemsIsMutable();
/*       */           AbstractMessageLite.Builder.addAll(values, this.uint64DiffItems_);
/*       */           onChanged();
/*       */         } else {
/*       */           this.uint64DiffItemsBuilder_.addAllMessages(values);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearUint64DiffItems() {
/*       */         if (this.uint64DiffItemsBuilder_ == null) {
/*       */           this.uint64DiffItems_ = Collections.emptyList();
/*       */           this.bitField0_ &= 0xFFFFFFFB;
/*       */           onChanged();
/*       */         } else {
/*       */           this.uint64DiffItemsBuilder_.clear();
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder removeUint64DiffItems(int index) {
/*       */         if (this.uint64DiffItemsBuilder_ == null) {
/*       */           ensureUint64DiffItemsIsMutable();
/*       */           this.uint64DiffItems_.remove(index);
/*       */           onChanged();
/*       */         } else {
/*       */           this.uint64DiffItemsBuilder_.remove(index);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.Uint64DiffItem.Builder getUint64DiffItemsBuilder(int index) {
/*       */         return (DolphinConfig.Uint64DiffItem.Builder)getUint64DiffItemsFieldBuilder().getBuilder(index);
/*       */       }
/*       */       
/*       */       public DolphinConfig.Uint64DiffItemOrBuilder getUint64DiffItemsOrBuilder(int index) {
/*       */         return (this.uint64DiffItemsBuilder_ == null) ? this.uint64DiffItems_.get(index) : (DolphinConfig.Uint64DiffItemOrBuilder)this.uint64DiffItemsBuilder_.getMessageOrBuilder(index);
/*       */       }
/*       */       
/*       */       public List<? extends DolphinConfig.Uint64DiffItemOrBuilder> getUint64DiffItemsOrBuilderList() {
/*       */         return (this.uint64DiffItemsBuilder_ != null) ? this.uint64DiffItemsBuilder_.getMessageOrBuilderList() : Collections.unmodifiableList((List)this.uint64DiffItems_);
/*       */       }
/*       */       
/*       */       public DolphinConfig.Uint64DiffItem.Builder addUint64DiffItemsBuilder() {
/*       */         return (DolphinConfig.Uint64DiffItem.Builder)getUint64DiffItemsFieldBuilder().addBuilder((AbstractMessage)DolphinConfig.Uint64DiffItem.getDefaultInstance());
/*       */       }
/*       */       
/*       */       public DolphinConfig.Uint64DiffItem.Builder addUint64DiffItemsBuilder(int index) {
/*       */         return (DolphinConfig.Uint64DiffItem.Builder)getUint64DiffItemsFieldBuilder().addBuilder(index, (AbstractMessage)DolphinConfig.Uint64DiffItem.getDefaultInstance());
/*       */       }
/*       */       
/*       */       public List<DolphinConfig.Uint64DiffItem.Builder> getUint64DiffItemsBuilderList() {
/*       */         return getUint64DiffItemsFieldBuilder().getBuilderList();
/*       */       }
/*       */       
/*       */       private RepeatedFieldBuilderV3<DolphinConfig.Uint64DiffItem, DolphinConfig.Uint64DiffItem.Builder, DolphinConfig.Uint64DiffItemOrBuilder> getUint64DiffItemsFieldBuilder() {
/*       */         if (this.uint64DiffItemsBuilder_ == null) {
/*       */           this.uint64DiffItemsBuilder_ = new RepeatedFieldBuilderV3(this.uint64DiffItems_, ((this.bitField0_ & 0x4) != 0), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.uint64DiffItems_ = null;
/*       */         } 
/*       */         return this.uint64DiffItemsBuilder_;
/*       */       }
/*       */       
/*       */       private void ensureInt64DiffItemsIsMutable() {
/*       */         if ((this.bitField0_ & 0x8) == 0) {
/*       */           this.int64DiffItems_ = new ArrayList<>(this.int64DiffItems_);
/*       */           this.bitField0_ |= 0x8;
/*       */         } 
/*       */       }
/*       */       
/*       */       public List<DolphinConfig.Int64DiffItem> getInt64DiffItemsList() {
/*       */         return (this.int64DiffItemsBuilder_ == null) ? Collections.unmodifiableList(this.int64DiffItems_) : this.int64DiffItemsBuilder_.getMessageList();
/*       */       }
/*       */       
/*       */       public int getInt64DiffItemsCount() {
/*       */         return (this.int64DiffItemsBuilder_ == null) ? this.int64DiffItems_.size() : this.int64DiffItemsBuilder_.getCount();
/*       */       }
/*       */       
/*       */       public DolphinConfig.Int64DiffItem getInt64DiffItems(int index) {
/*       */         return (this.int64DiffItemsBuilder_ == null) ? this.int64DiffItems_.get(index) : (DolphinConfig.Int64DiffItem)this.int64DiffItemsBuilder_.getMessage(index);
/*       */       }
/*       */       
/*       */       public Builder setInt64DiffItems(int index, DolphinConfig.Int64DiffItem value) {
/*       */         if (this.int64DiffItemsBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           ensureInt64DiffItemsIsMutable();
/*       */           this.int64DiffItems_.set(index, value);
/*       */           onChanged();
/*       */         } else {
/*       */           this.int64DiffItemsBuilder_.setMessage(index, (AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setInt64DiffItems(int index, DolphinConfig.Int64DiffItem.Builder builderForValue) {
/*       */         if (this.int64DiffItemsBuilder_ == null) {
/*       */           ensureInt64DiffItemsIsMutable();
/*       */           this.int64DiffItems_.set(index, builderForValue.build());
/*       */           onChanged();
/*       */         } else {
/*       */           this.int64DiffItemsBuilder_.setMessage(index, (AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder addInt64DiffItems(DolphinConfig.Int64DiffItem value) {
/*       */         if (this.int64DiffItemsBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           ensureInt64DiffItemsIsMutable();
/*       */           this.int64DiffItems_.add(value);
/*       */           onChanged();
/*       */         } else {
/*       */           this.int64DiffItemsBuilder_.addMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder addInt64DiffItems(int index, DolphinConfig.Int64DiffItem value) {
/*       */         if (this.int64DiffItemsBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           ensureInt64DiffItemsIsMutable();
/*       */           this.int64DiffItems_.add(index, value);
/*       */           onChanged();
/*       */         } else {
/*       */           this.int64DiffItemsBuilder_.addMessage(index, (AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder addInt64DiffItems(DolphinConfig.Int64DiffItem.Builder builderForValue) {
/*       */         if (this.int64DiffItemsBuilder_ == null) {
/*       */           ensureInt64DiffItemsIsMutable();
/*       */           this.int64DiffItems_.add(builderForValue.build());
/*       */           onChanged();
/*       */         } else {
/*       */           this.int64DiffItemsBuilder_.addMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder addInt64DiffItems(int index, DolphinConfig.Int64DiffItem.Builder builderForValue) {
/*       */         if (this.int64DiffItemsBuilder_ == null) {
/*       */           ensureInt64DiffItemsIsMutable();
/*       */           this.int64DiffItems_.add(index, builderForValue.build());
/*       */           onChanged();
/*       */         } else {
/*       */           this.int64DiffItemsBuilder_.addMessage(index, (AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder addAllInt64DiffItems(Iterable<? extends DolphinConfig.Int64DiffItem> values) {
/*       */         if (this.int64DiffItemsBuilder_ == null) {
/*       */           ensureInt64DiffItemsIsMutable();
/*       */           AbstractMessageLite.Builder.addAll(values, this.int64DiffItems_);
/*       */           onChanged();
/*       */         } else {
/*       */           this.int64DiffItemsBuilder_.addAllMessages(values);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearInt64DiffItems() {
/*       */         if (this.int64DiffItemsBuilder_ == null) {
/*       */           this.int64DiffItems_ = Collections.emptyList();
/*       */           this.bitField0_ &= 0xFFFFFFF7;
/*       */           onChanged();
/*       */         } else {
/*       */           this.int64DiffItemsBuilder_.clear();
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder removeInt64DiffItems(int index) {
/*       */         if (this.int64DiffItemsBuilder_ == null) {
/*       */           ensureInt64DiffItemsIsMutable();
/*       */           this.int64DiffItems_.remove(index);
/*       */           onChanged();
/*       */         } else {
/*       */           this.int64DiffItemsBuilder_.remove(index);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.Int64DiffItem.Builder getInt64DiffItemsBuilder(int index) {
/*       */         return (DolphinConfig.Int64DiffItem.Builder)getInt64DiffItemsFieldBuilder().getBuilder(index);
/*       */       }
/*       */       
/*       */       public DolphinConfig.Int64DiffItemOrBuilder getInt64DiffItemsOrBuilder(int index) {
/*       */         return (this.int64DiffItemsBuilder_ == null) ? this.int64DiffItems_.get(index) : (DolphinConfig.Int64DiffItemOrBuilder)this.int64DiffItemsBuilder_.getMessageOrBuilder(index);
/*       */       }
/*       */       
/*       */       public List<? extends DolphinConfig.Int64DiffItemOrBuilder> getInt64DiffItemsOrBuilderList() {
/*       */         return (this.int64DiffItemsBuilder_ != null) ? this.int64DiffItemsBuilder_.getMessageOrBuilderList() : Collections.unmodifiableList((List)this.int64DiffItems_);
/*       */       }
/*       */       
/*       */       public DolphinConfig.Int64DiffItem.Builder addInt64DiffItemsBuilder() {
/*       */         return (DolphinConfig.Int64DiffItem.Builder)getInt64DiffItemsFieldBuilder().addBuilder((AbstractMessage)DolphinConfig.Int64DiffItem.getDefaultInstance());
/*       */       }
/*       */       
/*       */       public DolphinConfig.Int64DiffItem.Builder addInt64DiffItemsBuilder(int index) {
/*       */         return (DolphinConfig.Int64DiffItem.Builder)getInt64DiffItemsFieldBuilder().addBuilder(index, (AbstractMessage)DolphinConfig.Int64DiffItem.getDefaultInstance());
/*       */       }
/*       */       
/*       */       public List<DolphinConfig.Int64DiffItem.Builder> getInt64DiffItemsBuilderList() {
/*       */         return getInt64DiffItemsFieldBuilder().getBuilderList();
/*       */       }
/*       */       
/*       */       private RepeatedFieldBuilderV3<DolphinConfig.Int64DiffItem, DolphinConfig.Int64DiffItem.Builder, DolphinConfig.Int64DiffItemOrBuilder> getInt64DiffItemsFieldBuilder() {
/*       */         if (this.int64DiffItemsBuilder_ == null) {
/*       */           this.int64DiffItemsBuilder_ = new RepeatedFieldBuilderV3(this.int64DiffItems_, ((this.bitField0_ & 0x8) != 0), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.int64DiffItems_ = null;
/*       */         } 
/*       */         return this.int64DiffItemsBuilder_;
/*       */       }
/*       */       
/*       */       private void ensureStringDiffItemsIsMutable() {
/*       */         if ((this.bitField0_ & 0x10) == 0) {
/*       */           this.stringDiffItems_ = new ArrayList<>(this.stringDiffItems_);
/*       */           this.bitField0_ |= 0x10;
/*       */         } 
/*       */       }
/*       */       
/*       */       public List<DolphinConfig.StringDiffItem> getStringDiffItemsList() {
/*       */         return (this.stringDiffItemsBuilder_ == null) ? Collections.unmodifiableList(this.stringDiffItems_) : this.stringDiffItemsBuilder_.getMessageList();
/*       */       }
/*       */       
/*       */       public int getStringDiffItemsCount() {
/*       */         return (this.stringDiffItemsBuilder_ == null) ? this.stringDiffItems_.size() : this.stringDiffItemsBuilder_.getCount();
/*       */       }
/*       */       
/*       */       public DolphinConfig.StringDiffItem getStringDiffItems(int index) {
/*       */         return (this.stringDiffItemsBuilder_ == null) ? this.stringDiffItems_.get(index) : (DolphinConfig.StringDiffItem)this.stringDiffItemsBuilder_.getMessage(index);
/*       */       }
/*       */       
/*       */       public Builder setStringDiffItems(int index, DolphinConfig.StringDiffItem value) {
/*       */         if (this.stringDiffItemsBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           ensureStringDiffItemsIsMutable();
/*       */           this.stringDiffItems_.set(index, value);
/*       */           onChanged();
/*       */         } else {
/*       */           this.stringDiffItemsBuilder_.setMessage(index, (AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setStringDiffItems(int index, DolphinConfig.StringDiffItem.Builder builderForValue) {
/*       */         if (this.stringDiffItemsBuilder_ == null) {
/*       */           ensureStringDiffItemsIsMutable();
/*       */           this.stringDiffItems_.set(index, builderForValue.build());
/*       */           onChanged();
/*       */         } else {
/*       */           this.stringDiffItemsBuilder_.setMessage(index, (AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder addStringDiffItems(DolphinConfig.StringDiffItem value) {
/*       */         if (this.stringDiffItemsBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           ensureStringDiffItemsIsMutable();
/*       */           this.stringDiffItems_.add(value);
/*       */           onChanged();
/*       */         } else {
/*       */           this.stringDiffItemsBuilder_.addMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder addStringDiffItems(int index, DolphinConfig.StringDiffItem value) {
/*       */         if (this.stringDiffItemsBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           ensureStringDiffItemsIsMutable();
/*       */           this.stringDiffItems_.add(index, value);
/*       */           onChanged();
/*       */         } else {
/*       */           this.stringDiffItemsBuilder_.addMessage(index, (AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder addStringDiffItems(DolphinConfig.StringDiffItem.Builder builderForValue) {
/*       */         if (this.stringDiffItemsBuilder_ == null) {
/*       */           ensureStringDiffItemsIsMutable();
/*       */           this.stringDiffItems_.add(builderForValue.build());
/*       */           onChanged();
/*       */         } else {
/*       */           this.stringDiffItemsBuilder_.addMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder addStringDiffItems(int index, DolphinConfig.StringDiffItem.Builder builderForValue) {
/*       */         if (this.stringDiffItemsBuilder_ == null) {
/*       */           ensureStringDiffItemsIsMutable();
/*       */           this.stringDiffItems_.add(index, builderForValue.build());
/*       */           onChanged();
/*       */         } else {
/*       */           this.stringDiffItemsBuilder_.addMessage(index, (AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder addAllStringDiffItems(Iterable<? extends DolphinConfig.StringDiffItem> values) {
/*       */         if (this.stringDiffItemsBuilder_ == null) {
/*       */           ensureStringDiffItemsIsMutable();
/*       */           AbstractMessageLite.Builder.addAll(values, this.stringDiffItems_);
/*       */           onChanged();
/*       */         } else {
/*       */           this.stringDiffItemsBuilder_.addAllMessages(values);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearStringDiffItems() {
/*       */         if (this.stringDiffItemsBuilder_ == null) {
/*       */           this.stringDiffItems_ = Collections.emptyList();
/*       */           this.bitField0_ &= 0xFFFFFFEF;
/*       */           onChanged();
/*       */         } else {
/*       */           this.stringDiffItemsBuilder_.clear();
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder removeStringDiffItems(int index) {
/*       */         if (this.stringDiffItemsBuilder_ == null) {
/*       */           ensureStringDiffItemsIsMutable();
/*       */           this.stringDiffItems_.remove(index);
/*       */           onChanged();
/*       */         } else {
/*       */           this.stringDiffItemsBuilder_.remove(index);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.StringDiffItem.Builder getStringDiffItemsBuilder(int index) {
/*       */         return (DolphinConfig.StringDiffItem.Builder)getStringDiffItemsFieldBuilder().getBuilder(index);
/*       */       }
/*       */       
/*       */       public DolphinConfig.StringDiffItemOrBuilder getStringDiffItemsOrBuilder(int index) {
/*       */         return (this.stringDiffItemsBuilder_ == null) ? this.stringDiffItems_.get(index) : (DolphinConfig.StringDiffItemOrBuilder)this.stringDiffItemsBuilder_.getMessageOrBuilder(index);
/*       */       }
/*       */       
/*       */       public List<? extends DolphinConfig.StringDiffItemOrBuilder> getStringDiffItemsOrBuilderList() {
/*       */         return (this.stringDiffItemsBuilder_ != null) ? this.stringDiffItemsBuilder_.getMessageOrBuilderList() : Collections.unmodifiableList((List)this.stringDiffItems_);
/*       */       }
/*       */       
/*       */       public DolphinConfig.StringDiffItem.Builder addStringDiffItemsBuilder() {
/*       */         return (DolphinConfig.StringDiffItem.Builder)getStringDiffItemsFieldBuilder().addBuilder((AbstractMessage)DolphinConfig.StringDiffItem.getDefaultInstance());
/*       */       }
/*       */       
/*       */       public DolphinConfig.StringDiffItem.Builder addStringDiffItemsBuilder(int index) {
/*       */         return (DolphinConfig.StringDiffItem.Builder)getStringDiffItemsFieldBuilder().addBuilder(index, (AbstractMessage)DolphinConfig.StringDiffItem.getDefaultInstance());
/*       */       }
/*       */       
/*       */       public List<DolphinConfig.StringDiffItem.Builder> getStringDiffItemsBuilderList() {
/*       */         return getStringDiffItemsFieldBuilder().getBuilderList();
/*       */       }
/*       */       
/*       */       private RepeatedFieldBuilderV3<DolphinConfig.StringDiffItem, DolphinConfig.StringDiffItem.Builder, DolphinConfig.StringDiffItemOrBuilder> getStringDiffItemsFieldBuilder() {
/*       */         if (this.stringDiffItemsBuilder_ == null) {
/*       */           this.stringDiffItemsBuilder_ = new RepeatedFieldBuilderV3(this.stringDiffItems_, ((this.bitField0_ & 0x10) != 0), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.stringDiffItems_ = null;
/*       */         } 
/*       */         return this.stringDiffItemsBuilder_;
/*       */       }
/*       */       
/*       */       private void ensureBoolDiffItemsIsMutable() {
/*       */         if ((this.bitField0_ & 0x20) == 0) {
/*       */           this.boolDiffItems_ = new ArrayList<>(this.boolDiffItems_);
/*       */           this.bitField0_ |= 0x20;
/*       */         } 
/*       */       }
/*       */       
/*       */       public List<DolphinConfig.BoolDiffItem> getBoolDiffItemsList() {
/*       */         return (this.boolDiffItemsBuilder_ == null) ? Collections.unmodifiableList(this.boolDiffItems_) : this.boolDiffItemsBuilder_.getMessageList();
/*       */       }
/*       */       
/*       */       public int getBoolDiffItemsCount() {
/*       */         return (this.boolDiffItemsBuilder_ == null) ? this.boolDiffItems_.size() : this.boolDiffItemsBuilder_.getCount();
/*       */       }
/*       */       
/*       */       public DolphinConfig.BoolDiffItem getBoolDiffItems(int index) {
/*       */         return (this.boolDiffItemsBuilder_ == null) ? this.boolDiffItems_.get(index) : (DolphinConfig.BoolDiffItem)this.boolDiffItemsBuilder_.getMessage(index);
/*       */       }
/*       */       
/*       */       public Builder setBoolDiffItems(int index, DolphinConfig.BoolDiffItem value) {
/*       */         if (this.boolDiffItemsBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           ensureBoolDiffItemsIsMutable();
/*       */           this.boolDiffItems_.set(index, value);
/*       */           onChanged();
/*       */         } else {
/*       */           this.boolDiffItemsBuilder_.setMessage(index, (AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setBoolDiffItems(int index, DolphinConfig.BoolDiffItem.Builder builderForValue) {
/*       */         if (this.boolDiffItemsBuilder_ == null) {
/*       */           ensureBoolDiffItemsIsMutable();
/*       */           this.boolDiffItems_.set(index, builderForValue.build());
/*       */           onChanged();
/*       */         } else {
/*       */           this.boolDiffItemsBuilder_.setMessage(index, (AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder addBoolDiffItems(DolphinConfig.BoolDiffItem value) {
/*       */         if (this.boolDiffItemsBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           ensureBoolDiffItemsIsMutable();
/*       */           this.boolDiffItems_.add(value);
/*       */           onChanged();
/*       */         } else {
/*       */           this.boolDiffItemsBuilder_.addMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder addBoolDiffItems(int index, DolphinConfig.BoolDiffItem value) {
/*       */         if (this.boolDiffItemsBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           ensureBoolDiffItemsIsMutable();
/*       */           this.boolDiffItems_.add(index, value);
/*       */           onChanged();
/*       */         } else {
/*       */           this.boolDiffItemsBuilder_.addMessage(index, (AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder addBoolDiffItems(DolphinConfig.BoolDiffItem.Builder builderForValue) {
/*       */         if (this.boolDiffItemsBuilder_ == null) {
/*       */           ensureBoolDiffItemsIsMutable();
/*       */           this.boolDiffItems_.add(builderForValue.build());
/*       */           onChanged();
/*       */         } else {
/*       */           this.boolDiffItemsBuilder_.addMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder addBoolDiffItems(int index, DolphinConfig.BoolDiffItem.Builder builderForValue) {
/*       */         if (this.boolDiffItemsBuilder_ == null) {
/*       */           ensureBoolDiffItemsIsMutable();
/*       */           this.boolDiffItems_.add(index, builderForValue.build());
/*       */           onChanged();
/*       */         } else {
/*       */           this.boolDiffItemsBuilder_.addMessage(index, (AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder addAllBoolDiffItems(Iterable<? extends DolphinConfig.BoolDiffItem> values) {
/*       */         if (this.boolDiffItemsBuilder_ == null) {
/*       */           ensureBoolDiffItemsIsMutable();
/*       */           AbstractMessageLite.Builder.addAll(values, this.boolDiffItems_);
/*       */           onChanged();
/*       */         } else {
/*       */           this.boolDiffItemsBuilder_.addAllMessages(values);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearBoolDiffItems() {
/*       */         if (this.boolDiffItemsBuilder_ == null) {
/*       */           this.boolDiffItems_ = Collections.emptyList();
/*       */           this.bitField0_ &= 0xFFFFFFDF;
/*       */           onChanged();
/*       */         } else {
/*       */           this.boolDiffItemsBuilder_.clear();
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder removeBoolDiffItems(int index) {
/*       */         if (this.boolDiffItemsBuilder_ == null) {
/*       */           ensureBoolDiffItemsIsMutable();
/*       */           this.boolDiffItems_.remove(index);
/*       */           onChanged();
/*       */         } else {
/*       */           this.boolDiffItemsBuilder_.remove(index);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.BoolDiffItem.Builder getBoolDiffItemsBuilder(int index) {
/*       */         return (DolphinConfig.BoolDiffItem.Builder)getBoolDiffItemsFieldBuilder().getBuilder(index);
/*       */       }
/*       */       
/*       */       public DolphinConfig.BoolDiffItemOrBuilder getBoolDiffItemsOrBuilder(int index) {
/*       */         return (this.boolDiffItemsBuilder_ == null) ? this.boolDiffItems_.get(index) : (DolphinConfig.BoolDiffItemOrBuilder)this.boolDiffItemsBuilder_.getMessageOrBuilder(index);
/*       */       }
/*       */       
/*       */       public List<? extends DolphinConfig.BoolDiffItemOrBuilder> getBoolDiffItemsOrBuilderList() {
/*       */         return (this.boolDiffItemsBuilder_ != null) ? this.boolDiffItemsBuilder_.getMessageOrBuilderList() : Collections.unmodifiableList((List)this.boolDiffItems_);
/*       */       }
/*       */       
/*       */       public DolphinConfig.BoolDiffItem.Builder addBoolDiffItemsBuilder() {
/*       */         return (DolphinConfig.BoolDiffItem.Builder)getBoolDiffItemsFieldBuilder().addBuilder((AbstractMessage)DolphinConfig.BoolDiffItem.getDefaultInstance());
/*       */       }
/*       */       
/*       */       public DolphinConfig.BoolDiffItem.Builder addBoolDiffItemsBuilder(int index) {
/*       */         return (DolphinConfig.BoolDiffItem.Builder)getBoolDiffItemsFieldBuilder().addBuilder(index, (AbstractMessage)DolphinConfig.BoolDiffItem.getDefaultInstance());
/*       */       }
/*       */       
/*       */       public List<DolphinConfig.BoolDiffItem.Builder> getBoolDiffItemsBuilderList() {
/*       */         return getBoolDiffItemsFieldBuilder().getBuilderList();
/*       */       }
/*       */       
/*       */       private RepeatedFieldBuilderV3<DolphinConfig.BoolDiffItem, DolphinConfig.BoolDiffItem.Builder, DolphinConfig.BoolDiffItemOrBuilder> getBoolDiffItemsFieldBuilder() {
/*       */         if (this.boolDiffItemsBuilder_ == null) {
/*       */           this.boolDiffItemsBuilder_ = new RepeatedFieldBuilderV3(this.boolDiffItems_, ((this.bitField0_ & 0x20) != 0), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.boolDiffItems_ = null;
/*       */         } 
/*       */         return this.boolDiffItemsBuilder_;
/*       */       }
/*       */       
/*       */       public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
/*       */         return (Builder)super.setUnknownFields(unknownFields);
/*       */       }
/*       */       
/*       */       public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
/*       */         return (Builder)super.mergeUnknownFields(unknownFields);
/*       */       }
/*       */     }
/*       */   }
/*       */   
/*       */   public static interface Uint32DiffItemOrBuilder extends MessageOrBuilder {
/*       */     int getTag();
/*       */     
/*       */     int getValue();
/*       */   }
/*       */   
/*       */   public static final class Uint32DiffItem extends GeneratedMessageV3 implements Uint32DiffItemOrBuilder {
/*       */     private static final long serialVersionUID = 0L;
/*       */     public static final int TAG_FIELD_NUMBER = 1;
/*       */     private int tag_;
/*       */     public static final int VALUE_FIELD_NUMBER = 2;
/*       */     private int value_;
/*       */     private byte memoizedIsInitialized = -1;
/*       */     private static final Uint32DiffItem DEFAULT_INSTANCE = new Uint32DiffItem();
/*       */     
/*       */     private static final Parser<Uint32DiffItem> PARSER = (Parser<Uint32DiffItem>)new AbstractParser<Uint32DiffItem>() {
/*       */         public DolphinConfig.Uint32DiffItem parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*       */           return new DolphinConfig.Uint32DiffItem(input, extensionRegistry);
/*       */         }
/*       */       };
/*       */     
/*       */     private Uint32DiffItem(GeneratedMessageV3.Builder<?> builder) {
/*       */       super(builder);
/*       */     }
/*       */     
/*       */     private Uint32DiffItem() {}
/*       */     
/*       */     protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) {
/*       */       return new Uint32DiffItem();
/*       */     }
/*       */     
/*       */     public final UnknownFieldSet getUnknownFields() {
/*       */       return this.unknownFields;
/*       */     }
/*       */     
/*       */     private Uint32DiffItem(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*       */       this();
/*       */       if (extensionRegistry == null)
/*       */         throw new NullPointerException(); 
/*       */       UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
/*       */       try {
/*       */         boolean done = false;
/*       */         while (!done) {
/*       */           int tag = input.readTag();
/*       */           switch (tag) {
/*       */             case 0:
/*       */               done = true;
/*       */               continue;
/*       */             case 8:
/*       */               this.tag_ = input.readUInt32();
/*       */               continue;
/*       */             case 16:
/*       */               this.value_ = input.readUInt32();
/*       */               continue;
/*       */           } 
/*       */           if (!parseUnknownField(input, unknownFields, extensionRegistry, tag))
/*       */             done = true; 
/*       */         } 
/*       */       } catch (InvalidProtocolBufferException e) {
/*       */         throw e.setUnfinishedMessage(this);
/*       */       } catch (IOException e) {
/*       */         throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this);
/*       */       } finally {
/*       */         this.unknownFields = unknownFields.build();
/*       */         makeExtensionsImmutable();
/*       */       } 
/*       */     }
/*       */     
/*       */     public static final Descriptors.Descriptor getDescriptor() {
/*       */       return DolphinConfig.internal_static_org_traccar_protobuf_dolphin_Config_Uint32DiffItem_descriptor;
/*       */     }
/*       */     
/*       */     protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
/*       */       return DolphinConfig.internal_static_org_traccar_protobuf_dolphin_Config_Uint32DiffItem_fieldAccessorTable.ensureFieldAccessorsInitialized(Uint32DiffItem.class, Builder.class);
/*       */     }
/*       */     
/*       */     public int getTag() {
/*       */       return this.tag_;
/*       */     }
/*       */     
/*       */     public int getValue() {
/*       */       return this.value_;
/*       */     }
/*       */     
/*       */     public final boolean isInitialized() {
/*       */       byte isInitialized = this.memoizedIsInitialized;
/*       */       if (isInitialized == 1)
/*       */         return true; 
/*       */       if (isInitialized == 0)
/*       */         return false; 
/*       */       this.memoizedIsInitialized = 1;
/*       */       return true;
/*       */     }
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/*       */       if (this.tag_ != 0)
/*       */         output.writeUInt32(1, this.tag_); 
/*       */       if (this.value_ != 0)
/*       */         output.writeUInt32(2, this.value_); 
/*       */       this.unknownFields.writeTo(output);
/*       */     }
/*       */     
/*       */     public int getSerializedSize() {
/*       */       int size = this.memoizedSize;
/*       */       if (size != -1)
/*       */         return size; 
/*       */       size = 0;
/*       */       if (this.tag_ != 0)
/*       */         size += CodedOutputStream.computeUInt32Size(1, this.tag_); 
/*       */       if (this.value_ != 0)
/*       */         size += CodedOutputStream.computeUInt32Size(2, this.value_); 
/*       */       size += this.unknownFields.getSerializedSize();
/*       */       this.memoizedSize = size;
/*       */       return size;
/*       */     }
/*       */     
/*       */     public boolean equals(Object obj) {
/*       */       if (obj == this)
/*       */         return true; 
/*       */       if (!(obj instanceof Uint32DiffItem))
/*       */         return super.equals(obj); 
/*       */       Uint32DiffItem other = (Uint32DiffItem)obj;
/*       */       return (getTag() != other.getTag()) ? false : ((getValue() != other.getValue()) ? false : (!!this.unknownFields.equals(other.unknownFields)));
/*       */     }
/*       */     
/*       */     public int hashCode() {
/*       */       if (this.memoizedHashCode != 0)
/*       */         return this.memoizedHashCode; 
/*       */       int hash = 41;
/*       */       hash = 19 * hash + getDescriptor().hashCode();
/*       */       hash = 37 * hash + 1;
/*       */       hash = 53 * hash + getTag();
/*       */       hash = 37 * hash + 2;
/*       */       hash = 53 * hash + getValue();
/*       */       hash = 29 * hash + this.unknownFields.hashCode();
/*       */       this.memoizedHashCode = hash;
/*       */       return hash;
/*       */     }
/*       */     
/*       */     public static Uint32DiffItem parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
/*       */       return (Uint32DiffItem)PARSER.parseFrom(data);
/*       */     }
/*       */     
/*       */     public static Uint32DiffItem parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*       */       return (Uint32DiffItem)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static Uint32DiffItem parseFrom(ByteString data) throws InvalidProtocolBufferException {
/*       */       return (Uint32DiffItem)PARSER.parseFrom(data);
/*       */     }
/*       */     
/*       */     public static Uint32DiffItem parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*       */       return (Uint32DiffItem)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static Uint32DiffItem parseFrom(byte[] data) throws InvalidProtocolBufferException {
/*       */       return (Uint32DiffItem)PARSER.parseFrom(data);
/*       */     }
/*       */     
/*       */     public static Uint32DiffItem parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*       */       return (Uint32DiffItem)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static Uint32DiffItem parseFrom(InputStream input) throws IOException {
/*       */       return (Uint32DiffItem)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */     
/*       */     public static Uint32DiffItem parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*       */       return (Uint32DiffItem)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static Uint32DiffItem parseDelimitedFrom(InputStream input) throws IOException {
/*       */       return (Uint32DiffItem)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
/*       */     }
/*       */     
/*       */     public static Uint32DiffItem parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*       */       return (Uint32DiffItem)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static Uint32DiffItem parseFrom(CodedInputStream input) throws IOException {
/*       */       return (Uint32DiffItem)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */     
/*       */     public static Uint32DiffItem parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*       */       return (Uint32DiffItem)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public Builder newBuilderForType() {
/*       */       return newBuilder();
/*       */     }
/*       */     
/*       */     public static Builder newBuilder() {
/*       */       return DEFAULT_INSTANCE.toBuilder();
/*       */     }
/*       */     
/*       */     public static Builder newBuilder(Uint32DiffItem prototype) {
/*       */       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
/*       */     }
/*       */     
/*       */     public Builder toBuilder() {
/*       */       return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder()).mergeFrom(this);
/*       */     }
/*       */     
/*       */     protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
/*       */       return new Builder(parent);
/*       */     }
/*       */     
/*       */     public static Uint32DiffItem getDefaultInstance() {
/*       */       return DEFAULT_INSTANCE;
/*       */     }
/*       */     
/*       */     public static Parser<Uint32DiffItem> parser() {
/*       */       return PARSER;
/*       */     }
/*       */     
/*       */     public Parser<Uint32DiffItem> getParserForType() {
/*       */       return PARSER;
/*       */     }
/*       */     
/*       */     public Uint32DiffItem getDefaultInstanceForType() {
/*       */       return DEFAULT_INSTANCE;
/*       */     }
/*       */     
/*       */     public static final class Builder extends GeneratedMessageV3.Builder<Builder> implements DolphinConfig.Uint32DiffItemOrBuilder {
/*       */       private int tag_;
/*       */       private int value_;
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/*       */         return DolphinConfig.internal_static_org_traccar_protobuf_dolphin_Config_Uint32DiffItem_descriptor;
/*       */       }
/*       */       
/*       */       protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
/*       */         return DolphinConfig.internal_static_org_traccar_protobuf_dolphin_Config_Uint32DiffItem_fieldAccessorTable.ensureFieldAccessorsInitialized(DolphinConfig.Uint32DiffItem.class, Builder.class);
/*       */       }
/*       */       
/*       */       private Builder() {
/*       */         maybeForceBuilderInitialization();
/*       */       }
/*       */       
/*       */       private Builder(GeneratedMessageV3.BuilderParent parent) {
/*       */         super(parent);
/*       */         maybeForceBuilderInitialization();
/*       */       }
/*       */       
/*       */       private void maybeForceBuilderInitialization() {
/*       */         if (DolphinConfig.Uint32DiffItem.alwaysUseFieldBuilders);
/*       */       }
/*       */       
/*       */       public Builder clear() {
/*       */         super.clear();
/*       */         this.tag_ = 0;
/*       */         this.value_ = 0;
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Descriptors.Descriptor getDescriptorForType() {
/*       */         return DolphinConfig.internal_static_org_traccar_protobuf_dolphin_Config_Uint32DiffItem_descriptor;
/*       */       }
/*       */       
/*       */       public DolphinConfig.Uint32DiffItem getDefaultInstanceForType() {
/*       */         return DolphinConfig.Uint32DiffItem.getDefaultInstance();
/*       */       }
/*       */       
/*       */       public DolphinConfig.Uint32DiffItem build() {
/*       */         DolphinConfig.Uint32DiffItem result = buildPartial();
/*       */         if (!result.isInitialized())
/*       */           throw newUninitializedMessageException(result); 
/*       */         return result;
/*       */       }
/*       */       
/*       */       public DolphinConfig.Uint32DiffItem buildPartial() {
/*       */         DolphinConfig.Uint32DiffItem result = new DolphinConfig.Uint32DiffItem(this);
/*       */         result.tag_ = this.tag_;
/*       */         result.value_ = this.value_;
/*       */         onBuilt();
/*       */         return result;
/*       */       }
/*       */       
/*       */       public Builder clone() {
/*       */         return (Builder)super.clone();
/*       */       }
/*       */       
/*       */       public Builder setField(Descriptors.FieldDescriptor field, Object value) {
/*       */         return (Builder)super.setField(field, value);
/*       */       }
/*       */       
/*       */       public Builder clearField(Descriptors.FieldDescriptor field) {
/*       */         return (Builder)super.clearField(field);
/*       */       }
/*       */       
/*       */       public Builder clearOneof(Descriptors.OneofDescriptor oneof) {
/*       */         return (Builder)super.clearOneof(oneof);
/*       */       }
/*       */       
/*       */       public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
/*       */         return (Builder)super.setRepeatedField(field, index, value);
/*       */       }
/*       */       
/*       */       public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
/*       */         return (Builder)super.addRepeatedField(field, value);
/*       */       }
/*       */       
/*       */       public Builder mergeFrom(Message other) {
/*       */         if (other instanceof DolphinConfig.Uint32DiffItem)
/*       */           return mergeFrom((DolphinConfig.Uint32DiffItem)other); 
/*       */         super.mergeFrom(other);
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeFrom(DolphinConfig.Uint32DiffItem other) {
/*       */         if (other == DolphinConfig.Uint32DiffItem.getDefaultInstance())
/*       */           return this; 
/*       */         if (other.getTag() != 0)
/*       */           setTag(other.getTag()); 
/*       */         if (other.getValue() != 0)
/*       */           setValue(other.getValue()); 
/*       */         mergeUnknownFields(other.unknownFields);
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       public final boolean isInitialized() {
/*       */         return true;
/*       */       }
/*       */       
/*       */       public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*       */         DolphinConfig.Uint32DiffItem parsedMessage = null;
/*       */         try {
/*       */           parsedMessage = (DolphinConfig.Uint32DiffItem)DolphinConfig.Uint32DiffItem.PARSER.parsePartialFrom(input, extensionRegistry);
/*       */         } catch (InvalidProtocolBufferException e) {
/*       */           parsedMessage = (DolphinConfig.Uint32DiffItem)e.getUnfinishedMessage();
/*       */           throw e.unwrapIOException();
/*       */         } finally {
/*       */           if (parsedMessage != null)
/*       */             mergeFrom(parsedMessage); 
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public int getTag() {
/*       */         return this.tag_;
/*       */       }
/*       */       
/*       */       public Builder setTag(int value) {
/*       */         this.tag_ = value;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearTag() {
/*       */         this.tag_ = 0;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       public int getValue() {
/*       */         return this.value_;
/*       */       }
/*       */       
/*       */       public Builder setValue(int value) {
/*       */         this.value_ = value;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearValue() {
/*       */         this.value_ = 0;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
/*       */         return (Builder)super.setUnknownFields(unknownFields);
/*       */       }
/*       */       
/*       */       public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
/*       */         return (Builder)super.mergeUnknownFields(unknownFields);
/*       */       }
/*       */     }
/*       */   }
/*       */   
/*       */   public static interface Int32DiffItemOrBuilder extends MessageOrBuilder {
/*       */     int getTag();
/*       */     
/*       */     int getValue();
/*       */   }
/*       */   
/*       */   public static final class Int32DiffItem extends GeneratedMessageV3 implements Int32DiffItemOrBuilder {
/*       */     private static final long serialVersionUID = 0L;
/*       */     public static final int TAG_FIELD_NUMBER = 1;
/*       */     private int tag_;
/*       */     public static final int VALUE_FIELD_NUMBER = 2;
/*       */     private int value_;
/*       */     private byte memoizedIsInitialized = -1;
/*       */     private static final Int32DiffItem DEFAULT_INSTANCE = new Int32DiffItem();
/*       */     
/*       */     private static final Parser<Int32DiffItem> PARSER = (Parser<Int32DiffItem>)new AbstractParser<Int32DiffItem>() {
/*       */         public DolphinConfig.Int32DiffItem parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*       */           return new DolphinConfig.Int32DiffItem(input, extensionRegistry);
/*       */         }
/*       */       };
/*       */     
/*       */     private Int32DiffItem(GeneratedMessageV3.Builder<?> builder) {
/*       */       super(builder);
/*       */     }
/*       */     
/*       */     private Int32DiffItem() {}
/*       */     
/*       */     protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) {
/*       */       return new Int32DiffItem();
/*       */     }
/*       */     
/*       */     public final UnknownFieldSet getUnknownFields() {
/*       */       return this.unknownFields;
/*       */     }
/*       */     
/*       */     private Int32DiffItem(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*       */       this();
/*       */       if (extensionRegistry == null)
/*       */         throw new NullPointerException(); 
/*       */       UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
/*       */       try {
/*       */         boolean done = false;
/*       */         while (!done) {
/*       */           int tag = input.readTag();
/*       */           switch (tag) {
/*       */             case 0:
/*       */               done = true;
/*       */               continue;
/*       */             case 8:
/*       */               this.tag_ = input.readUInt32();
/*       */               continue;
/*       */             case 16:
/*       */               this.value_ = input.readInt32();
/*       */               continue;
/*       */           } 
/*       */           if (!parseUnknownField(input, unknownFields, extensionRegistry, tag))
/*       */             done = true; 
/*       */         } 
/*       */       } catch (InvalidProtocolBufferException e) {
/*       */         throw e.setUnfinishedMessage(this);
/*       */       } catch (IOException e) {
/*       */         throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this);
/*       */       } finally {
/*       */         this.unknownFields = unknownFields.build();
/*       */         makeExtensionsImmutable();
/*       */       } 
/*       */     }
/*       */     
/*       */     public static final Descriptors.Descriptor getDescriptor() {
/*       */       return DolphinConfig.internal_static_org_traccar_protobuf_dolphin_Config_Int32DiffItem_descriptor;
/*       */     }
/*       */     
/*       */     protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
/*       */       return DolphinConfig.internal_static_org_traccar_protobuf_dolphin_Config_Int32DiffItem_fieldAccessorTable.ensureFieldAccessorsInitialized(Int32DiffItem.class, Builder.class);
/*       */     }
/*       */     
/*       */     public int getTag() {
/*       */       return this.tag_;
/*       */     }
/*       */     
/*       */     public int getValue() {
/*       */       return this.value_;
/*       */     }
/*       */     
/*       */     public final boolean isInitialized() {
/*       */       byte isInitialized = this.memoizedIsInitialized;
/*       */       if (isInitialized == 1)
/*       */         return true; 
/*       */       if (isInitialized == 0)
/*       */         return false; 
/*       */       this.memoizedIsInitialized = 1;
/*       */       return true;
/*       */     }
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/*       */       if (this.tag_ != 0)
/*       */         output.writeUInt32(1, this.tag_); 
/*       */       if (this.value_ != 0)
/*       */         output.writeInt32(2, this.value_); 
/*       */       this.unknownFields.writeTo(output);
/*       */     }
/*       */     
/*       */     public int getSerializedSize() {
/*       */       int size = this.memoizedSize;
/*       */       if (size != -1)
/*       */         return size; 
/*       */       size = 0;
/*       */       if (this.tag_ != 0)
/*       */         size += CodedOutputStream.computeUInt32Size(1, this.tag_); 
/*       */       if (this.value_ != 0)
/*       */         size += CodedOutputStream.computeInt32Size(2, this.value_); 
/*       */       size += this.unknownFields.getSerializedSize();
/*       */       this.memoizedSize = size;
/*       */       return size;
/*       */     }
/*       */     
/*       */     public boolean equals(Object obj) {
/*       */       if (obj == this)
/*       */         return true; 
/*       */       if (!(obj instanceof Int32DiffItem))
/*       */         return super.equals(obj); 
/*       */       Int32DiffItem other = (Int32DiffItem)obj;
/*       */       return (getTag() != other.getTag()) ? false : ((getValue() != other.getValue()) ? false : (!!this.unknownFields.equals(other.unknownFields)));
/*       */     }
/*       */     
/*       */     public int hashCode() {
/*       */       if (this.memoizedHashCode != 0)
/*       */         return this.memoizedHashCode; 
/*       */       int hash = 41;
/*       */       hash = 19 * hash + getDescriptor().hashCode();
/*       */       hash = 37 * hash + 1;
/*       */       hash = 53 * hash + getTag();
/*       */       hash = 37 * hash + 2;
/*       */       hash = 53 * hash + getValue();
/*       */       hash = 29 * hash + this.unknownFields.hashCode();
/*       */       this.memoizedHashCode = hash;
/*       */       return hash;
/*       */     }
/*       */     
/*       */     public static Int32DiffItem parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
/*       */       return (Int32DiffItem)PARSER.parseFrom(data);
/*       */     }
/*       */     
/*       */     public static Int32DiffItem parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*       */       return (Int32DiffItem)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static Int32DiffItem parseFrom(ByteString data) throws InvalidProtocolBufferException {
/*       */       return (Int32DiffItem)PARSER.parseFrom(data);
/*       */     }
/*       */     
/*       */     public static Int32DiffItem parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*       */       return (Int32DiffItem)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static Int32DiffItem parseFrom(byte[] data) throws InvalidProtocolBufferException {
/*       */       return (Int32DiffItem)PARSER.parseFrom(data);
/*       */     }
/*       */     
/*       */     public static Int32DiffItem parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*       */       return (Int32DiffItem)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static Int32DiffItem parseFrom(InputStream input) throws IOException {
/*       */       return (Int32DiffItem)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */     
/*       */     public static Int32DiffItem parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*       */       return (Int32DiffItem)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static Int32DiffItem parseDelimitedFrom(InputStream input) throws IOException {
/*       */       return (Int32DiffItem)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
/*       */     }
/*       */     
/*       */     public static Int32DiffItem parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*       */       return (Int32DiffItem)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static Int32DiffItem parseFrom(CodedInputStream input) throws IOException {
/*       */       return (Int32DiffItem)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */     
/*       */     public static Int32DiffItem parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*       */       return (Int32DiffItem)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public Builder newBuilderForType() {
/*       */       return newBuilder();
/*       */     }
/*       */     
/*       */     public static Builder newBuilder() {
/*       */       return DEFAULT_INSTANCE.toBuilder();
/*       */     }
/*       */     
/*       */     public static Builder newBuilder(Int32DiffItem prototype) {
/*       */       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
/*       */     }
/*       */     
/*       */     public Builder toBuilder() {
/*       */       return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder()).mergeFrom(this);
/*       */     }
/*       */     
/*       */     protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
/*       */       return new Builder(parent);
/*       */     }
/*       */     
/*       */     public static Int32DiffItem getDefaultInstance() {
/*       */       return DEFAULT_INSTANCE;
/*       */     }
/*       */     
/*       */     public static Parser<Int32DiffItem> parser() {
/*       */       return PARSER;
/*       */     }
/*       */     
/*       */     public Parser<Int32DiffItem> getParserForType() {
/*       */       return PARSER;
/*       */     }
/*       */     
/*       */     public Int32DiffItem getDefaultInstanceForType() {
/*       */       return DEFAULT_INSTANCE;
/*       */     }
/*       */     
/*       */     public static final class Builder extends GeneratedMessageV3.Builder<Builder> implements DolphinConfig.Int32DiffItemOrBuilder {
/*       */       private int tag_;
/*       */       private int value_;
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/*       */         return DolphinConfig.internal_static_org_traccar_protobuf_dolphin_Config_Int32DiffItem_descriptor;
/*       */       }
/*       */       
/*       */       protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
/*       */         return DolphinConfig.internal_static_org_traccar_protobuf_dolphin_Config_Int32DiffItem_fieldAccessorTable.ensureFieldAccessorsInitialized(DolphinConfig.Int32DiffItem.class, Builder.class);
/*       */       }
/*       */       
/*       */       private Builder() {
/*       */         maybeForceBuilderInitialization();
/*       */       }
/*       */       
/*       */       private Builder(GeneratedMessageV3.BuilderParent parent) {
/*       */         super(parent);
/*       */         maybeForceBuilderInitialization();
/*       */       }
/*       */       
/*       */       private void maybeForceBuilderInitialization() {
/*       */         if (DolphinConfig.Int32DiffItem.alwaysUseFieldBuilders);
/*       */       }
/*       */       
/*       */       public Builder clear() {
/*       */         super.clear();
/*       */         this.tag_ = 0;
/*       */         this.value_ = 0;
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Descriptors.Descriptor getDescriptorForType() {
/*       */         return DolphinConfig.internal_static_org_traccar_protobuf_dolphin_Config_Int32DiffItem_descriptor;
/*       */       }
/*       */       
/*       */       public DolphinConfig.Int32DiffItem getDefaultInstanceForType() {
/*       */         return DolphinConfig.Int32DiffItem.getDefaultInstance();
/*       */       }
/*       */       
/*       */       public DolphinConfig.Int32DiffItem build() {
/*       */         DolphinConfig.Int32DiffItem result = buildPartial();
/*       */         if (!result.isInitialized())
/*       */           throw newUninitializedMessageException(result); 
/*       */         return result;
/*       */       }
/*       */       
/*       */       public DolphinConfig.Int32DiffItem buildPartial() {
/*       */         DolphinConfig.Int32DiffItem result = new DolphinConfig.Int32DiffItem(this);
/*       */         result.tag_ = this.tag_;
/*       */         result.value_ = this.value_;
/*       */         onBuilt();
/*       */         return result;
/*       */       }
/*       */       
/*       */       public Builder clone() {
/*       */         return (Builder)super.clone();
/*       */       }
/*       */       
/*       */       public Builder setField(Descriptors.FieldDescriptor field, Object value) {
/*       */         return (Builder)super.setField(field, value);
/*       */       }
/*       */       
/*       */       public Builder clearField(Descriptors.FieldDescriptor field) {
/*       */         return (Builder)super.clearField(field);
/*       */       }
/*       */       
/*       */       public Builder clearOneof(Descriptors.OneofDescriptor oneof) {
/*       */         return (Builder)super.clearOneof(oneof);
/*       */       }
/*       */       
/*       */       public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
/*       */         return (Builder)super.setRepeatedField(field, index, value);
/*       */       }
/*       */       
/*       */       public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
/*       */         return (Builder)super.addRepeatedField(field, value);
/*       */       }
/*       */       
/*       */       public Builder mergeFrom(Message other) {
/*       */         if (other instanceof DolphinConfig.Int32DiffItem)
/*       */           return mergeFrom((DolphinConfig.Int32DiffItem)other); 
/*       */         super.mergeFrom(other);
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeFrom(DolphinConfig.Int32DiffItem other) {
/*       */         if (other == DolphinConfig.Int32DiffItem.getDefaultInstance())
/*       */           return this; 
/*       */         if (other.getTag() != 0)
/*       */           setTag(other.getTag()); 
/*       */         if (other.getValue() != 0)
/*       */           setValue(other.getValue()); 
/*       */         mergeUnknownFields(other.unknownFields);
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       public final boolean isInitialized() {
/*       */         return true;
/*       */       }
/*       */       
/*       */       public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*       */         DolphinConfig.Int32DiffItem parsedMessage = null;
/*       */         try {
/*       */           parsedMessage = (DolphinConfig.Int32DiffItem)DolphinConfig.Int32DiffItem.PARSER.parsePartialFrom(input, extensionRegistry);
/*       */         } catch (InvalidProtocolBufferException e) {
/*       */           parsedMessage = (DolphinConfig.Int32DiffItem)e.getUnfinishedMessage();
/*       */           throw e.unwrapIOException();
/*       */         } finally {
/*       */           if (parsedMessage != null)
/*       */             mergeFrom(parsedMessage); 
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public int getTag() {
/*       */         return this.tag_;
/*       */       }
/*       */       
/*       */       public Builder setTag(int value) {
/*       */         this.tag_ = value;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearTag() {
/*       */         this.tag_ = 0;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       public int getValue() {
/*       */         return this.value_;
/*       */       }
/*       */       
/*       */       public Builder setValue(int value) {
/*       */         this.value_ = value;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearValue() {
/*       */         this.value_ = 0;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
/*       */         return (Builder)super.setUnknownFields(unknownFields);
/*       */       }
/*       */       
/*       */       public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
/*       */         return (Builder)super.mergeUnknownFields(unknownFields);
/*       */       }
/*       */     }
/*       */   }
/*       */   
/*       */   public static interface Uint64DiffItemOrBuilder extends MessageOrBuilder {
/*       */     int getTag();
/*       */     
/*       */     long getValue();
/*       */   }
/*       */   
/*       */   public static final class Uint64DiffItem extends GeneratedMessageV3 implements Uint64DiffItemOrBuilder {
/*       */     private static final long serialVersionUID = 0L;
/*       */     public static final int TAG_FIELD_NUMBER = 1;
/*       */     private int tag_;
/*       */     public static final int VALUE_FIELD_NUMBER = 2;
/*       */     private long value_;
/*       */     private byte memoizedIsInitialized = -1;
/*       */     private static final Uint64DiffItem DEFAULT_INSTANCE = new Uint64DiffItem();
/*       */     
/*       */     private static final Parser<Uint64DiffItem> PARSER = (Parser<Uint64DiffItem>)new AbstractParser<Uint64DiffItem>() {
/*       */         public DolphinConfig.Uint64DiffItem parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*       */           return new DolphinConfig.Uint64DiffItem(input, extensionRegistry);
/*       */         }
/*       */       };
/*       */     
/*       */     private Uint64DiffItem(GeneratedMessageV3.Builder<?> builder) {
/*       */       super(builder);
/*       */     }
/*       */     
/*       */     private Uint64DiffItem() {}
/*       */     
/*       */     protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) {
/*       */       return new Uint64DiffItem();
/*       */     }
/*       */     
/*       */     public final UnknownFieldSet getUnknownFields() {
/*       */       return this.unknownFields;
/*       */     }
/*       */     
/*       */     private Uint64DiffItem(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*       */       this();
/*       */       if (extensionRegistry == null)
/*       */         throw new NullPointerException(); 
/*       */       UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
/*       */       try {
/*       */         boolean done = false;
/*       */         while (!done) {
/*       */           int tag = input.readTag();
/*       */           switch (tag) {
/*       */             case 0:
/*       */               done = true;
/*       */               continue;
/*       */             case 8:
/*       */               this.tag_ = input.readUInt32();
/*       */               continue;
/*       */             case 16:
/*       */               this.value_ = input.readUInt64();
/*       */               continue;
/*       */           } 
/*       */           if (!parseUnknownField(input, unknownFields, extensionRegistry, tag))
/*       */             done = true; 
/*       */         } 
/*       */       } catch (InvalidProtocolBufferException e) {
/*       */         throw e.setUnfinishedMessage(this);
/*       */       } catch (IOException e) {
/*       */         throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this);
/*       */       } finally {
/*       */         this.unknownFields = unknownFields.build();
/*       */         makeExtensionsImmutable();
/*       */       } 
/*       */     }
/*       */     
/*       */     public static final Descriptors.Descriptor getDescriptor() {
/*       */       return DolphinConfig.internal_static_org_traccar_protobuf_dolphin_Config_Uint64DiffItem_descriptor;
/*       */     }
/*       */     
/*       */     protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
/*       */       return DolphinConfig.internal_static_org_traccar_protobuf_dolphin_Config_Uint64DiffItem_fieldAccessorTable.ensureFieldAccessorsInitialized(Uint64DiffItem.class, Builder.class);
/*       */     }
/*       */     
/*       */     public int getTag() {
/*       */       return this.tag_;
/*       */     }
/*       */     
/*       */     public long getValue() {
/*       */       return this.value_;
/*       */     }
/*       */     
/*       */     public final boolean isInitialized() {
/*       */       byte isInitialized = this.memoizedIsInitialized;
/*       */       if (isInitialized == 1)
/*       */         return true; 
/*       */       if (isInitialized == 0)
/*       */         return false; 
/*       */       this.memoizedIsInitialized = 1;
/*       */       return true;
/*       */     }
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/*       */       if (this.tag_ != 0)
/*       */         output.writeUInt32(1, this.tag_); 
/*       */       if (this.value_ != 0L)
/*       */         output.writeUInt64(2, this.value_); 
/*       */       this.unknownFields.writeTo(output);
/*       */     }
/*       */     
/*       */     public int getSerializedSize() {
/*       */       int size = this.memoizedSize;
/*       */       if (size != -1)
/*       */         return size; 
/*       */       size = 0;
/*       */       if (this.tag_ != 0)
/*       */         size += CodedOutputStream.computeUInt32Size(1, this.tag_); 
/*       */       if (this.value_ != 0L)
/*       */         size += CodedOutputStream.computeUInt64Size(2, this.value_); 
/*       */       size += this.unknownFields.getSerializedSize();
/*       */       this.memoizedSize = size;
/*       */       return size;
/*       */     }
/*       */     
/*       */     public boolean equals(Object obj) {
/*       */       if (obj == this)
/*       */         return true; 
/*       */       if (!(obj instanceof Uint64DiffItem))
/*       */         return super.equals(obj); 
/*       */       Uint64DiffItem other = (Uint64DiffItem)obj;
/*       */       return (getTag() != other.getTag()) ? false : ((getValue() != other.getValue()) ? false : (!!this.unknownFields.equals(other.unknownFields)));
/*       */     }
/*       */     
/*       */     public int hashCode() {
/*       */       if (this.memoizedHashCode != 0)
/*       */         return this.memoizedHashCode; 
/*       */       int hash = 41;
/*       */       hash = 19 * hash + getDescriptor().hashCode();
/*       */       hash = 37 * hash + 1;
/*       */       hash = 53 * hash + getTag();
/*       */       hash = 37 * hash + 2;
/*       */       hash = 53 * hash + Internal.hashLong(getValue());
/*       */       hash = 29 * hash + this.unknownFields.hashCode();
/*       */       this.memoizedHashCode = hash;
/*       */       return hash;
/*       */     }
/*       */     
/*       */     public static Uint64DiffItem parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
/*       */       return (Uint64DiffItem)PARSER.parseFrom(data);
/*       */     }
/*       */     
/*       */     public static Uint64DiffItem parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*       */       return (Uint64DiffItem)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static Uint64DiffItem parseFrom(ByteString data) throws InvalidProtocolBufferException {
/*       */       return (Uint64DiffItem)PARSER.parseFrom(data);
/*       */     }
/*       */     
/*       */     public static Uint64DiffItem parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*       */       return (Uint64DiffItem)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static Uint64DiffItem parseFrom(byte[] data) throws InvalidProtocolBufferException {
/*       */       return (Uint64DiffItem)PARSER.parseFrom(data);
/*       */     }
/*       */     
/*       */     public static Uint64DiffItem parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*       */       return (Uint64DiffItem)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static Uint64DiffItem parseFrom(InputStream input) throws IOException {
/*       */       return (Uint64DiffItem)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */     
/*       */     public static Uint64DiffItem parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*       */       return (Uint64DiffItem)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static Uint64DiffItem parseDelimitedFrom(InputStream input) throws IOException {
/*       */       return (Uint64DiffItem)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
/*       */     }
/*       */     
/*       */     public static Uint64DiffItem parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*       */       return (Uint64DiffItem)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static Uint64DiffItem parseFrom(CodedInputStream input) throws IOException {
/*       */       return (Uint64DiffItem)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */     
/*       */     public static Uint64DiffItem parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*       */       return (Uint64DiffItem)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public Builder newBuilderForType() {
/*       */       return newBuilder();
/*       */     }
/*       */     
/*       */     public static Builder newBuilder() {
/*       */       return DEFAULT_INSTANCE.toBuilder();
/*       */     }
/*       */     
/*       */     public static Builder newBuilder(Uint64DiffItem prototype) {
/*       */       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
/*       */     }
/*       */     
/*       */     public Builder toBuilder() {
/*       */       return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder()).mergeFrom(this);
/*       */     }
/*       */     
/*       */     protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
/*       */       return new Builder(parent);
/*       */     }
/*       */     
/*       */     public static Uint64DiffItem getDefaultInstance() {
/*       */       return DEFAULT_INSTANCE;
/*       */     }
/*       */     
/*       */     public static Parser<Uint64DiffItem> parser() {
/*       */       return PARSER;
/*       */     }
/*       */     
/*       */     public Parser<Uint64DiffItem> getParserForType() {
/*       */       return PARSER;
/*       */     }
/*       */     
/*       */     public Uint64DiffItem getDefaultInstanceForType() {
/*       */       return DEFAULT_INSTANCE;
/*       */     }
/*       */     
/*       */     public static final class Builder extends GeneratedMessageV3.Builder<Builder> implements DolphinConfig.Uint64DiffItemOrBuilder {
/*       */       private int tag_;
/*       */       private long value_;
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/*       */         return DolphinConfig.internal_static_org_traccar_protobuf_dolphin_Config_Uint64DiffItem_descriptor;
/*       */       }
/*       */       
/*       */       protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
/*       */         return DolphinConfig.internal_static_org_traccar_protobuf_dolphin_Config_Uint64DiffItem_fieldAccessorTable.ensureFieldAccessorsInitialized(DolphinConfig.Uint64DiffItem.class, Builder.class);
/*       */       }
/*       */       
/*       */       private Builder() {
/*       */         maybeForceBuilderInitialization();
/*       */       }
/*       */       
/*       */       private Builder(GeneratedMessageV3.BuilderParent parent) {
/*       */         super(parent);
/*       */         maybeForceBuilderInitialization();
/*       */       }
/*       */       
/*       */       private void maybeForceBuilderInitialization() {
/*       */         if (DolphinConfig.Uint64DiffItem.alwaysUseFieldBuilders);
/*       */       }
/*       */       
/*       */       public Builder clear() {
/*       */         super.clear();
/*       */         this.tag_ = 0;
/*       */         this.value_ = 0L;
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Descriptors.Descriptor getDescriptorForType() {
/*       */         return DolphinConfig.internal_static_org_traccar_protobuf_dolphin_Config_Uint64DiffItem_descriptor;
/*       */       }
/*       */       
/*       */       public DolphinConfig.Uint64DiffItem getDefaultInstanceForType() {
/*       */         return DolphinConfig.Uint64DiffItem.getDefaultInstance();
/*       */       }
/*       */       
/*       */       public DolphinConfig.Uint64DiffItem build() {
/*       */         DolphinConfig.Uint64DiffItem result = buildPartial();
/*       */         if (!result.isInitialized())
/*       */           throw newUninitializedMessageException(result); 
/*       */         return result;
/*       */       }
/*       */       
/*       */       public DolphinConfig.Uint64DiffItem buildPartial() {
/*       */         DolphinConfig.Uint64DiffItem result = new DolphinConfig.Uint64DiffItem(this);
/*       */         result.tag_ = this.tag_;
/*       */         result.value_ = this.value_;
/*       */         onBuilt();
/*       */         return result;
/*       */       }
/*       */       
/*       */       public Builder clone() {
/*       */         return (Builder)super.clone();
/*       */       }
/*       */       
/*       */       public Builder setField(Descriptors.FieldDescriptor field, Object value) {
/*       */         return (Builder)super.setField(field, value);
/*       */       }
/*       */       
/*       */       public Builder clearField(Descriptors.FieldDescriptor field) {
/*       */         return (Builder)super.clearField(field);
/*       */       }
/*       */       
/*       */       public Builder clearOneof(Descriptors.OneofDescriptor oneof) {
/*       */         return (Builder)super.clearOneof(oneof);
/*       */       }
/*       */       
/*       */       public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
/*       */         return (Builder)super.setRepeatedField(field, index, value);
/*       */       }
/*       */       
/*       */       public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
/*       */         return (Builder)super.addRepeatedField(field, value);
/*       */       }
/*       */       
/*       */       public Builder mergeFrom(Message other) {
/*       */         if (other instanceof DolphinConfig.Uint64DiffItem)
/*       */           return mergeFrom((DolphinConfig.Uint64DiffItem)other); 
/*       */         super.mergeFrom(other);
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeFrom(DolphinConfig.Uint64DiffItem other) {
/*       */         if (other == DolphinConfig.Uint64DiffItem.getDefaultInstance())
/*       */           return this; 
/*       */         if (other.getTag() != 0)
/*       */           setTag(other.getTag()); 
/*       */         if (other.getValue() != 0L)
/*       */           setValue(other.getValue()); 
/*       */         mergeUnknownFields(other.unknownFields);
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       public final boolean isInitialized() {
/*       */         return true;
/*       */       }
/*       */       
/*       */       public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*       */         DolphinConfig.Uint64DiffItem parsedMessage = null;
/*       */         try {
/*       */           parsedMessage = (DolphinConfig.Uint64DiffItem)DolphinConfig.Uint64DiffItem.PARSER.parsePartialFrom(input, extensionRegistry);
/*       */         } catch (InvalidProtocolBufferException e) {
/*       */           parsedMessage = (DolphinConfig.Uint64DiffItem)e.getUnfinishedMessage();
/*       */           throw e.unwrapIOException();
/*       */         } finally {
/*       */           if (parsedMessage != null)
/*       */             mergeFrom(parsedMessage); 
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public int getTag() {
/*       */         return this.tag_;
/*       */       }
/*       */       
/*       */       public Builder setTag(int value) {
/*       */         this.tag_ = value;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearTag() {
/*       */         this.tag_ = 0;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       public long getValue() {
/*       */         return this.value_;
/*       */       }
/*       */       
/*       */       public Builder setValue(long value) {
/*       */         this.value_ = value;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearValue() {
/*       */         this.value_ = 0L;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
/*       */         return (Builder)super.setUnknownFields(unknownFields);
/*       */       }
/*       */       
/*       */       public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
/*       */         return (Builder)super.mergeUnknownFields(unknownFields);
/*       */       }
/*       */     }
/*       */   }
/*       */   
/*       */   public static interface Int64DiffItemOrBuilder extends MessageOrBuilder {
/*       */     int getTag();
/*       */     
/*       */     long getValue();
/*       */   }
/*       */   
/*       */   public static final class Int64DiffItem extends GeneratedMessageV3 implements Int64DiffItemOrBuilder {
/*       */     private static final long serialVersionUID = 0L;
/*       */     public static final int TAG_FIELD_NUMBER = 1;
/*       */     private int tag_;
/*       */     public static final int VALUE_FIELD_NUMBER = 2;
/*       */     private long value_;
/*       */     private byte memoizedIsInitialized = -1;
/*       */     private static final Int64DiffItem DEFAULT_INSTANCE = new Int64DiffItem();
/*       */     
/*       */     private static final Parser<Int64DiffItem> PARSER = (Parser<Int64DiffItem>)new AbstractParser<Int64DiffItem>() {
/*       */         public DolphinConfig.Int64DiffItem parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*       */           return new DolphinConfig.Int64DiffItem(input, extensionRegistry);
/*       */         }
/*       */       };
/*       */     
/*       */     private Int64DiffItem(GeneratedMessageV3.Builder<?> builder) {
/*       */       super(builder);
/*       */     }
/*       */     
/*       */     private Int64DiffItem() {}
/*       */     
/*       */     protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) {
/*       */       return new Int64DiffItem();
/*       */     }
/*       */     
/*       */     public final UnknownFieldSet getUnknownFields() {
/*       */       return this.unknownFields;
/*       */     }
/*       */     
/*       */     private Int64DiffItem(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*       */       this();
/*       */       if (extensionRegistry == null)
/*       */         throw new NullPointerException(); 
/*       */       UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
/*       */       try {
/*       */         boolean done = false;
/*       */         while (!done) {
/*       */           int tag = input.readTag();
/*       */           switch (tag) {
/*       */             case 0:
/*       */               done = true;
/*       */               continue;
/*       */             case 8:
/*       */               this.tag_ = input.readUInt32();
/*       */               continue;
/*       */             case 16:
/*       */               this.value_ = input.readInt64();
/*       */               continue;
/*       */           } 
/*       */           if (!parseUnknownField(input, unknownFields, extensionRegistry, tag))
/*       */             done = true; 
/*       */         } 
/*       */       } catch (InvalidProtocolBufferException e) {
/*       */         throw e.setUnfinishedMessage(this);
/*       */       } catch (IOException e) {
/*       */         throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this);
/*       */       } finally {
/*       */         this.unknownFields = unknownFields.build();
/*       */         makeExtensionsImmutable();
/*       */       } 
/*       */     }
/*       */     
/*       */     public static final Descriptors.Descriptor getDescriptor() {
/*       */       return DolphinConfig.internal_static_org_traccar_protobuf_dolphin_Config_Int64DiffItem_descriptor;
/*       */     }
/*       */     
/*       */     protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
/*       */       return DolphinConfig.internal_static_org_traccar_protobuf_dolphin_Config_Int64DiffItem_fieldAccessorTable.ensureFieldAccessorsInitialized(Int64DiffItem.class, Builder.class);
/*       */     }
/*       */     
/*       */     public int getTag() {
/*       */       return this.tag_;
/*       */     }
/*       */     
/*       */     public long getValue() {
/*       */       return this.value_;
/*       */     }
/*       */     
/*       */     public final boolean isInitialized() {
/*       */       byte isInitialized = this.memoizedIsInitialized;
/*       */       if (isInitialized == 1)
/*       */         return true; 
/*       */       if (isInitialized == 0)
/*       */         return false; 
/*       */       this.memoizedIsInitialized = 1;
/*       */       return true;
/*       */     }
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/*       */       if (this.tag_ != 0)
/*       */         output.writeUInt32(1, this.tag_); 
/*       */       if (this.value_ != 0L)
/*       */         output.writeInt64(2, this.value_); 
/*       */       this.unknownFields.writeTo(output);
/*       */     }
/*       */     
/*       */     public int getSerializedSize() {
/*       */       int size = this.memoizedSize;
/*       */       if (size != -1)
/*       */         return size; 
/*       */       size = 0;
/*       */       if (this.tag_ != 0)
/*       */         size += CodedOutputStream.computeUInt32Size(1, this.tag_); 
/*       */       if (this.value_ != 0L)
/*       */         size += CodedOutputStream.computeInt64Size(2, this.value_); 
/*       */       size += this.unknownFields.getSerializedSize();
/*       */       this.memoizedSize = size;
/*       */       return size;
/*       */     }
/*       */     
/*       */     public boolean equals(Object obj) {
/*       */       if (obj == this)
/*       */         return true; 
/*       */       if (!(obj instanceof Int64DiffItem))
/*       */         return super.equals(obj); 
/*       */       Int64DiffItem other = (Int64DiffItem)obj;
/*       */       return (getTag() != other.getTag()) ? false : ((getValue() != other.getValue()) ? false : (!!this.unknownFields.equals(other.unknownFields)));
/*       */     }
/*       */     
/*       */     public int hashCode() {
/*       */       if (this.memoizedHashCode != 0)
/*       */         return this.memoizedHashCode; 
/*       */       int hash = 41;
/*       */       hash = 19 * hash + getDescriptor().hashCode();
/*       */       hash = 37 * hash + 1;
/*       */       hash = 53 * hash + getTag();
/*       */       hash = 37 * hash + 2;
/*       */       hash = 53 * hash + Internal.hashLong(getValue());
/*       */       hash = 29 * hash + this.unknownFields.hashCode();
/*       */       this.memoizedHashCode = hash;
/*       */       return hash;
/*       */     }
/*       */     
/*       */     public static Int64DiffItem parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
/*       */       return (Int64DiffItem)PARSER.parseFrom(data);
/*       */     }
/*       */     
/*       */     public static Int64DiffItem parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*       */       return (Int64DiffItem)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static Int64DiffItem parseFrom(ByteString data) throws InvalidProtocolBufferException {
/*       */       return (Int64DiffItem)PARSER.parseFrom(data);
/*       */     }
/*       */     
/*       */     public static Int64DiffItem parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*       */       return (Int64DiffItem)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static Int64DiffItem parseFrom(byte[] data) throws InvalidProtocolBufferException {
/*       */       return (Int64DiffItem)PARSER.parseFrom(data);
/*       */     }
/*       */     
/*       */     public static Int64DiffItem parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*       */       return (Int64DiffItem)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static Int64DiffItem parseFrom(InputStream input) throws IOException {
/*       */       return (Int64DiffItem)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */     
/*       */     public static Int64DiffItem parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*       */       return (Int64DiffItem)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static Int64DiffItem parseDelimitedFrom(InputStream input) throws IOException {
/*       */       return (Int64DiffItem)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
/*       */     }
/*       */     
/*       */     public static Int64DiffItem parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*       */       return (Int64DiffItem)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static Int64DiffItem parseFrom(CodedInputStream input) throws IOException {
/*       */       return (Int64DiffItem)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */     
/*       */     public static Int64DiffItem parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*       */       return (Int64DiffItem)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public Builder newBuilderForType() {
/*       */       return newBuilder();
/*       */     }
/*       */     
/*       */     public static Builder newBuilder() {
/*       */       return DEFAULT_INSTANCE.toBuilder();
/*       */     }
/*       */     
/*       */     public static Builder newBuilder(Int64DiffItem prototype) {
/*       */       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
/*       */     }
/*       */     
/*       */     public Builder toBuilder() {
/*       */       return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder()).mergeFrom(this);
/*       */     }
/*       */     
/*       */     protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
/*       */       return new Builder(parent);
/*       */     }
/*       */     
/*       */     public static Int64DiffItem getDefaultInstance() {
/*       */       return DEFAULT_INSTANCE;
/*       */     }
/*       */     
/*       */     public static Parser<Int64DiffItem> parser() {
/*       */       return PARSER;
/*       */     }
/*       */     
/*       */     public Parser<Int64DiffItem> getParserForType() {
/*       */       return PARSER;
/*       */     }
/*       */     
/*       */     public Int64DiffItem getDefaultInstanceForType() {
/*       */       return DEFAULT_INSTANCE;
/*       */     }
/*       */     
/*       */     public static final class Builder extends GeneratedMessageV3.Builder<Builder> implements DolphinConfig.Int64DiffItemOrBuilder {
/*       */       private int tag_;
/*       */       private long value_;
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/*       */         return DolphinConfig.internal_static_org_traccar_protobuf_dolphin_Config_Int64DiffItem_descriptor;
/*       */       }
/*       */       
/*       */       protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
/*       */         return DolphinConfig.internal_static_org_traccar_protobuf_dolphin_Config_Int64DiffItem_fieldAccessorTable.ensureFieldAccessorsInitialized(DolphinConfig.Int64DiffItem.class, Builder.class);
/*       */       }
/*       */       
/*       */       private Builder() {
/*       */         maybeForceBuilderInitialization();
/*       */       }
/*       */       
/*       */       private Builder(GeneratedMessageV3.BuilderParent parent) {
/*       */         super(parent);
/*       */         maybeForceBuilderInitialization();
/*       */       }
/*       */       
/*       */       private void maybeForceBuilderInitialization() {
/*       */         if (DolphinConfig.Int64DiffItem.alwaysUseFieldBuilders);
/*       */       }
/*       */       
/*       */       public Builder clear() {
/*       */         super.clear();
/*       */         this.tag_ = 0;
/*       */         this.value_ = 0L;
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Descriptors.Descriptor getDescriptorForType() {
/*       */         return DolphinConfig.internal_static_org_traccar_protobuf_dolphin_Config_Int64DiffItem_descriptor;
/*       */       }
/*       */       
/*       */       public DolphinConfig.Int64DiffItem getDefaultInstanceForType() {
/*       */         return DolphinConfig.Int64DiffItem.getDefaultInstance();
/*       */       }
/*       */       
/*       */       public DolphinConfig.Int64DiffItem build() {
/*       */         DolphinConfig.Int64DiffItem result = buildPartial();
/*       */         if (!result.isInitialized())
/*       */           throw newUninitializedMessageException(result); 
/*       */         return result;
/*       */       }
/*       */       
/*       */       public DolphinConfig.Int64DiffItem buildPartial() {
/*       */         DolphinConfig.Int64DiffItem result = new DolphinConfig.Int64DiffItem(this);
/*       */         result.tag_ = this.tag_;
/*       */         result.value_ = this.value_;
/*       */         onBuilt();
/*       */         return result;
/*       */       }
/*       */       
/*       */       public Builder clone() {
/*       */         return (Builder)super.clone();
/*       */       }
/*       */       
/*       */       public Builder setField(Descriptors.FieldDescriptor field, Object value) {
/*       */         return (Builder)super.setField(field, value);
/*       */       }
/*       */       
/*       */       public Builder clearField(Descriptors.FieldDescriptor field) {
/*       */         return (Builder)super.clearField(field);
/*       */       }
/*       */       
/*       */       public Builder clearOneof(Descriptors.OneofDescriptor oneof) {
/*       */         return (Builder)super.clearOneof(oneof);
/*       */       }
/*       */       
/*       */       public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
/*       */         return (Builder)super.setRepeatedField(field, index, value);
/*       */       }
/*       */       
/*       */       public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
/*       */         return (Builder)super.addRepeatedField(field, value);
/*       */       }
/*       */       
/*       */       public Builder mergeFrom(Message other) {
/*       */         if (other instanceof DolphinConfig.Int64DiffItem)
/*       */           return mergeFrom((DolphinConfig.Int64DiffItem)other); 
/*       */         super.mergeFrom(other);
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeFrom(DolphinConfig.Int64DiffItem other) {
/*       */         if (other == DolphinConfig.Int64DiffItem.getDefaultInstance())
/*       */           return this; 
/*       */         if (other.getTag() != 0)
/*       */           setTag(other.getTag()); 
/*       */         if (other.getValue() != 0L)
/*       */           setValue(other.getValue()); 
/*       */         mergeUnknownFields(other.unknownFields);
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       public final boolean isInitialized() {
/*       */         return true;
/*       */       }
/*       */       
/*       */       public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*       */         DolphinConfig.Int64DiffItem parsedMessage = null;
/*       */         try {
/*       */           parsedMessage = (DolphinConfig.Int64DiffItem)DolphinConfig.Int64DiffItem.PARSER.parsePartialFrom(input, extensionRegistry);
/*       */         } catch (InvalidProtocolBufferException e) {
/*       */           parsedMessage = (DolphinConfig.Int64DiffItem)e.getUnfinishedMessage();
/*       */           throw e.unwrapIOException();
/*       */         } finally {
/*       */           if (parsedMessage != null)
/*       */             mergeFrom(parsedMessage); 
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public int getTag() {
/*       */         return this.tag_;
/*       */       }
/*       */       
/*       */       public Builder setTag(int value) {
/*       */         this.tag_ = value;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearTag() {
/*       */         this.tag_ = 0;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       public long getValue() {
/*       */         return this.value_;
/*       */       }
/*       */       
/*       */       public Builder setValue(long value) {
/*       */         this.value_ = value;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearValue() {
/*       */         this.value_ = 0L;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
/*       */         return (Builder)super.setUnknownFields(unknownFields);
/*       */       }
/*       */       
/*       */       public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
/*       */         return (Builder)super.mergeUnknownFields(unknownFields);
/*       */       }
/*       */     }
/*       */   }
/*       */   
/*       */   public static interface BoolDiffItemOrBuilder extends MessageOrBuilder {
/*       */     int getTag();
/*       */     
/*       */     boolean getValue();
/*       */   }
/*       */   
/*       */   public static final class BoolDiffItem extends GeneratedMessageV3 implements BoolDiffItemOrBuilder {
/*       */     private static final long serialVersionUID = 0L;
/*       */     public static final int TAG_FIELD_NUMBER = 1;
/*       */     private int tag_;
/*       */     public static final int VALUE_FIELD_NUMBER = 2;
/*       */     private boolean value_;
/*       */     private byte memoizedIsInitialized = -1;
/*       */     private static final BoolDiffItem DEFAULT_INSTANCE = new BoolDiffItem();
/*       */     
/*       */     private static final Parser<BoolDiffItem> PARSER = (Parser<BoolDiffItem>)new AbstractParser<BoolDiffItem>() {
/*       */         public DolphinConfig.BoolDiffItem parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*       */           return new DolphinConfig.BoolDiffItem(input, extensionRegistry);
/*       */         }
/*       */       };
/*       */     
/*       */     private BoolDiffItem(GeneratedMessageV3.Builder<?> builder) {
/*       */       super(builder);
/*       */     }
/*       */     
/*       */     private BoolDiffItem() {}
/*       */     
/*       */     protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) {
/*       */       return new BoolDiffItem();
/*       */     }
/*       */     
/*       */     public final UnknownFieldSet getUnknownFields() {
/*       */       return this.unknownFields;
/*       */     }
/*       */     
/*       */     private BoolDiffItem(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*       */       this();
/*       */       if (extensionRegistry == null)
/*       */         throw new NullPointerException(); 
/*       */       UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
/*       */       try {
/*       */         boolean done = false;
/*       */         while (!done) {
/*       */           int tag = input.readTag();
/*       */           switch (tag) {
/*       */             case 0:
/*       */               done = true;
/*       */               continue;
/*       */             case 8:
/*       */               this.tag_ = input.readUInt32();
/*       */               continue;
/*       */             case 16:
/*       */               this.value_ = input.readBool();
/*       */               continue;
/*       */           } 
/*       */           if (!parseUnknownField(input, unknownFields, extensionRegistry, tag))
/*       */             done = true; 
/*       */         } 
/*       */       } catch (InvalidProtocolBufferException e) {
/*       */         throw e.setUnfinishedMessage(this);
/*       */       } catch (IOException e) {
/*       */         throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this);
/*       */       } finally {
/*       */         this.unknownFields = unknownFields.build();
/*       */         makeExtensionsImmutable();
/*       */       } 
/*       */     }
/*       */     
/*       */     public static final Descriptors.Descriptor getDescriptor() {
/*       */       return DolphinConfig.internal_static_org_traccar_protobuf_dolphin_Config_BoolDiffItem_descriptor;
/*       */     }
/*       */     
/*       */     protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
/*       */       return DolphinConfig.internal_static_org_traccar_protobuf_dolphin_Config_BoolDiffItem_fieldAccessorTable.ensureFieldAccessorsInitialized(BoolDiffItem.class, Builder.class);
/*       */     }
/*       */     
/*       */     public int getTag() {
/*       */       return this.tag_;
/*       */     }
/*       */     
/*       */     public boolean getValue() {
/*       */       return this.value_;
/*       */     }
/*       */     
/*       */     public final boolean isInitialized() {
/*       */       byte isInitialized = this.memoizedIsInitialized;
/*       */       if (isInitialized == 1)
/*       */         return true; 
/*       */       if (isInitialized == 0)
/*       */         return false; 
/*       */       this.memoizedIsInitialized = 1;
/*       */       return true;
/*       */     }
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/*       */       if (this.tag_ != 0)
/*       */         output.writeUInt32(1, this.tag_); 
/*       */       if (this.value_)
/*       */         output.writeBool(2, this.value_); 
/*       */       this.unknownFields.writeTo(output);
/*       */     }
/*       */     
/*       */     public int getSerializedSize() {
/*       */       int size = this.memoizedSize;
/*       */       if (size != -1)
/*       */         return size; 
/*       */       size = 0;
/*       */       if (this.tag_ != 0)
/*       */         size += CodedOutputStream.computeUInt32Size(1, this.tag_); 
/*       */       if (this.value_)
/*       */         size += CodedOutputStream.computeBoolSize(2, this.value_); 
/*       */       size += this.unknownFields.getSerializedSize();
/*       */       this.memoizedSize = size;
/*       */       return size;
/*       */     }
/*       */     
/*       */     public boolean equals(Object obj) {
/*       */       if (obj == this)
/*       */         return true; 
/*       */       if (!(obj instanceof BoolDiffItem))
/*       */         return super.equals(obj); 
/*       */       BoolDiffItem other = (BoolDiffItem)obj;
/*       */       return (getTag() != other.getTag()) ? false : ((getValue() != other.getValue()) ? false : (!!this.unknownFields.equals(other.unknownFields)));
/*       */     }
/*       */     
/*       */     public int hashCode() {
/*       */       if (this.memoizedHashCode != 0)
/*       */         return this.memoizedHashCode; 
/*       */       int hash = 41;
/*       */       hash = 19 * hash + getDescriptor().hashCode();
/*       */       hash = 37 * hash + 1;
/*       */       hash = 53 * hash + getTag();
/*       */       hash = 37 * hash + 2;
/*       */       hash = 53 * hash + Internal.hashBoolean(getValue());
/*       */       hash = 29 * hash + this.unknownFields.hashCode();
/*       */       this.memoizedHashCode = hash;
/*       */       return hash;
/*       */     }
/*       */     
/*       */     public static BoolDiffItem parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
/*       */       return (BoolDiffItem)PARSER.parseFrom(data);
/*       */     }
/*       */     
/*       */     public static BoolDiffItem parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*       */       return (BoolDiffItem)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static BoolDiffItem parseFrom(ByteString data) throws InvalidProtocolBufferException {
/*       */       return (BoolDiffItem)PARSER.parseFrom(data);
/*       */     }
/*       */     
/*       */     public static BoolDiffItem parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*       */       return (BoolDiffItem)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static BoolDiffItem parseFrom(byte[] data) throws InvalidProtocolBufferException {
/*       */       return (BoolDiffItem)PARSER.parseFrom(data);
/*       */     }
/*       */     
/*       */     public static BoolDiffItem parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*       */       return (BoolDiffItem)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static BoolDiffItem parseFrom(InputStream input) throws IOException {
/*       */       return (BoolDiffItem)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */     
/*       */     public static BoolDiffItem parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*       */       return (BoolDiffItem)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static BoolDiffItem parseDelimitedFrom(InputStream input) throws IOException {
/*       */       return (BoolDiffItem)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
/*       */     }
/*       */     
/*       */     public static BoolDiffItem parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*       */       return (BoolDiffItem)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static BoolDiffItem parseFrom(CodedInputStream input) throws IOException {
/*       */       return (BoolDiffItem)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */     
/*       */     public static BoolDiffItem parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*       */       return (BoolDiffItem)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public Builder newBuilderForType() {
/*       */       return newBuilder();
/*       */     }
/*       */     
/*       */     public static Builder newBuilder() {
/*       */       return DEFAULT_INSTANCE.toBuilder();
/*       */     }
/*       */     
/*       */     public static Builder newBuilder(BoolDiffItem prototype) {
/*       */       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
/*       */     }
/*       */     
/*       */     public Builder toBuilder() {
/*       */       return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder()).mergeFrom(this);
/*       */     }
/*       */     
/*       */     protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
/*       */       return new Builder(parent);
/*       */     }
/*       */     
/*       */     public static BoolDiffItem getDefaultInstance() {
/*       */       return DEFAULT_INSTANCE;
/*       */     }
/*       */     
/*       */     public static Parser<BoolDiffItem> parser() {
/*       */       return PARSER;
/*       */     }
/*       */     
/*       */     public Parser<BoolDiffItem> getParserForType() {
/*       */       return PARSER;
/*       */     }
/*       */     
/*       */     public BoolDiffItem getDefaultInstanceForType() {
/*       */       return DEFAULT_INSTANCE;
/*       */     }
/*       */     
/*       */     public static final class Builder extends GeneratedMessageV3.Builder<Builder> implements DolphinConfig.BoolDiffItemOrBuilder {
/*       */       private int tag_;
/*       */       private boolean value_;
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/*       */         return DolphinConfig.internal_static_org_traccar_protobuf_dolphin_Config_BoolDiffItem_descriptor;
/*       */       }
/*       */       
/*       */       protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
/*       */         return DolphinConfig.internal_static_org_traccar_protobuf_dolphin_Config_BoolDiffItem_fieldAccessorTable.ensureFieldAccessorsInitialized(DolphinConfig.BoolDiffItem.class, Builder.class);
/*       */       }
/*       */       
/*       */       private Builder() {
/*       */         maybeForceBuilderInitialization();
/*       */       }
/*       */       
/*       */       private Builder(GeneratedMessageV3.BuilderParent parent) {
/*       */         super(parent);
/*       */         maybeForceBuilderInitialization();
/*       */       }
/*       */       
/*       */       private void maybeForceBuilderInitialization() {
/*       */         if (DolphinConfig.BoolDiffItem.alwaysUseFieldBuilders);
/*       */       }
/*       */       
/*       */       public Builder clear() {
/*       */         super.clear();
/*       */         this.tag_ = 0;
/*       */         this.value_ = false;
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Descriptors.Descriptor getDescriptorForType() {
/*       */         return DolphinConfig.internal_static_org_traccar_protobuf_dolphin_Config_BoolDiffItem_descriptor;
/*       */       }
/*       */       
/*       */       public DolphinConfig.BoolDiffItem getDefaultInstanceForType() {
/*       */         return DolphinConfig.BoolDiffItem.getDefaultInstance();
/*       */       }
/*       */       
/*       */       public DolphinConfig.BoolDiffItem build() {
/*       */         DolphinConfig.BoolDiffItem result = buildPartial();
/*       */         if (!result.isInitialized())
/*       */           throw newUninitializedMessageException(result); 
/*       */         return result;
/*       */       }
/*       */       
/*       */       public DolphinConfig.BoolDiffItem buildPartial() {
/*       */         DolphinConfig.BoolDiffItem result = new DolphinConfig.BoolDiffItem(this);
/*       */         result.tag_ = this.tag_;
/*       */         result.value_ = this.value_;
/*       */         onBuilt();
/*       */         return result;
/*       */       }
/*       */       
/*       */       public Builder clone() {
/*       */         return (Builder)super.clone();
/*       */       }
/*       */       
/*       */       public Builder setField(Descriptors.FieldDescriptor field, Object value) {
/*       */         return (Builder)super.setField(field, value);
/*       */       }
/*       */       
/*       */       public Builder clearField(Descriptors.FieldDescriptor field) {
/*       */         return (Builder)super.clearField(field);
/*       */       }
/*       */       
/*       */       public Builder clearOneof(Descriptors.OneofDescriptor oneof) {
/*       */         return (Builder)super.clearOneof(oneof);
/*       */       }
/*       */       
/*       */       public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
/*       */         return (Builder)super.setRepeatedField(field, index, value);
/*       */       }
/*       */       
/*       */       public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
/*       */         return (Builder)super.addRepeatedField(field, value);
/*       */       }
/*       */       
/*       */       public Builder mergeFrom(Message other) {
/*       */         if (other instanceof DolphinConfig.BoolDiffItem)
/*       */           return mergeFrom((DolphinConfig.BoolDiffItem)other); 
/*       */         super.mergeFrom(other);
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeFrom(DolphinConfig.BoolDiffItem other) {
/*       */         if (other == DolphinConfig.BoolDiffItem.getDefaultInstance())
/*       */           return this; 
/*       */         if (other.getTag() != 0)
/*       */           setTag(other.getTag()); 
/*       */         if (other.getValue())
/*       */           setValue(other.getValue()); 
/*       */         mergeUnknownFields(other.unknownFields);
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       public final boolean isInitialized() {
/*       */         return true;
/*       */       }
/*       */       
/*       */       public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*       */         DolphinConfig.BoolDiffItem parsedMessage = null;
/*       */         try {
/*       */           parsedMessage = (DolphinConfig.BoolDiffItem)DolphinConfig.BoolDiffItem.PARSER.parsePartialFrom(input, extensionRegistry);
/*       */         } catch (InvalidProtocolBufferException e) {
/*       */           parsedMessage = (DolphinConfig.BoolDiffItem)e.getUnfinishedMessage();
/*       */           throw e.unwrapIOException();
/*       */         } finally {
/*       */           if (parsedMessage != null)
/*       */             mergeFrom(parsedMessage); 
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public int getTag() {
/*       */         return this.tag_;
/*       */       }
/*       */       
/*       */       public Builder setTag(int value) {
/*       */         this.tag_ = value;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearTag() {
/*       */         this.tag_ = 0;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       public boolean getValue() {
/*       */         return this.value_;
/*       */       }
/*       */       
/*       */       public Builder setValue(boolean value) {
/*       */         this.value_ = value;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearValue() {
/*       */         this.value_ = false;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
/*       */         return (Builder)super.setUnknownFields(unknownFields);
/*       */       }
/*       */       
/*       */       public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
/*       */         return (Builder)super.mergeUnknownFields(unknownFields);
/*       */       }
/*       */     }
/*       */   }
/*       */   
/*       */   public static interface StringDiffItemOrBuilder extends MessageOrBuilder {
/*       */     int getTag();
/*       */     
/*       */     String getValue();
/*       */     
/*       */     ByteString getValueBytes();
/*       */   }
/*       */   
/*       */   public static final class StringDiffItem extends GeneratedMessageV3 implements StringDiffItemOrBuilder {
/*       */     private static final long serialVersionUID = 0L;
/*       */     public static final int TAG_FIELD_NUMBER = 1;
/*       */     private int tag_;
/*       */     public static final int VALUE_FIELD_NUMBER = 2;
/*       */     private volatile Object value_;
/*       */     private byte memoizedIsInitialized = -1;
/*       */     private static final StringDiffItem DEFAULT_INSTANCE = new StringDiffItem();
/*       */     
/*       */     private static final Parser<StringDiffItem> PARSER = (Parser<StringDiffItem>)new AbstractParser<StringDiffItem>() {
/*       */         public DolphinConfig.StringDiffItem parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*       */           return new DolphinConfig.StringDiffItem(input, extensionRegistry);
/*       */         }
/*       */       };
/*       */     
/*       */     private StringDiffItem(GeneratedMessageV3.Builder<?> builder) {
/*       */       super(builder);
/*       */     }
/*       */     
/*       */     private StringDiffItem() {
/*       */       this.value_ = "";
/*       */     }
/*       */     
/*       */     protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) {
/*       */       return new StringDiffItem();
/*       */     }
/*       */     
/*       */     public final UnknownFieldSet getUnknownFields() {
/*       */       return this.unknownFields;
/*       */     }
/*       */     
/*       */     private StringDiffItem(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*       */       this();
/*       */       if (extensionRegistry == null)
/*       */         throw new NullPointerException(); 
/*       */       UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
/*       */       try {
/*       */         boolean done = false;
/*       */         while (!done) {
/*       */           String s;
/*       */           int tag = input.readTag();
/*       */           switch (tag) {
/*       */             case 0:
/*       */               done = true;
/*       */               continue;
/*       */             case 8:
/*       */               this.tag_ = input.readUInt32();
/*       */               continue;
/*       */             case 18:
/*       */               s = input.readStringRequireUtf8();
/*       */               this.value_ = s;
/*       */               continue;
/*       */           } 
/*       */           if (!parseUnknownField(input, unknownFields, extensionRegistry, tag))
/*       */             done = true; 
/*       */         } 
/*       */       } catch (InvalidProtocolBufferException e) {
/*       */         throw e.setUnfinishedMessage(this);
/*       */       } catch (IOException e) {
/*       */         throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this);
/*       */       } finally {
/*       */         this.unknownFields = unknownFields.build();
/*       */         makeExtensionsImmutable();
/*       */       } 
/*       */     }
/*       */     
/*       */     public static final Descriptors.Descriptor getDescriptor() {
/*       */       return DolphinConfig.internal_static_org_traccar_protobuf_dolphin_Config_StringDiffItem_descriptor;
/*       */     }
/*       */     
/*       */     protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
/*       */       return DolphinConfig.internal_static_org_traccar_protobuf_dolphin_Config_StringDiffItem_fieldAccessorTable.ensureFieldAccessorsInitialized(StringDiffItem.class, Builder.class);
/*       */     }
/*       */     
/*       */     public int getTag() {
/*       */       return this.tag_;
/*       */     }
/*       */     
/*       */     public String getValue() {
/*       */       Object ref = this.value_;
/*       */       if (ref instanceof String)
/*       */         return (String)ref; 
/*       */       ByteString bs = (ByteString)ref;
/*       */       String s = bs.toStringUtf8();
/*       */       this.value_ = s;
/*       */       return s;
/*       */     }
/*       */     
/*       */     public ByteString getValueBytes() {
/*       */       Object ref = this.value_;
/*       */       if (ref instanceof String) {
/*       */         ByteString b = ByteString.copyFromUtf8((String)ref);
/*       */         this.value_ = b;
/*       */         return b;
/*       */       } 
/*       */       return (ByteString)ref;
/*       */     }
/*       */     
/*       */     public final boolean isInitialized() {
/*       */       byte isInitialized = this.memoizedIsInitialized;
/*       */       if (isInitialized == 1)
/*       */         return true; 
/*       */       if (isInitialized == 0)
/*       */         return false; 
/*       */       this.memoizedIsInitialized = 1;
/*       */       return true;
/*       */     }
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/*       */       if (this.tag_ != 0)
/*       */         output.writeUInt32(1, this.tag_); 
/*       */       if (!getValueBytes().isEmpty())
/*       */         GeneratedMessageV3.writeString(output, 2, this.value_); 
/*       */       this.unknownFields.writeTo(output);
/*       */     }
/*       */     
/*       */     public int getSerializedSize() {
/*       */       int size = this.memoizedSize;
/*       */       if (size != -1)
/*       */         return size; 
/*       */       size = 0;
/*       */       if (this.tag_ != 0)
/*       */         size += CodedOutputStream.computeUInt32Size(1, this.tag_); 
/*       */       if (!getValueBytes().isEmpty())
/*       */         size += GeneratedMessageV3.computeStringSize(2, this.value_); 
/*       */       size += this.unknownFields.getSerializedSize();
/*       */       this.memoizedSize = size;
/*       */       return size;
/*       */     }
/*       */     
/*       */     public boolean equals(Object obj) {
/*       */       if (obj == this)
/*       */         return true; 
/*       */       if (!(obj instanceof StringDiffItem))
/*       */         return super.equals(obj); 
/*       */       StringDiffItem other = (StringDiffItem)obj;
/*       */       return (getTag() != other.getTag()) ? false : (!getValue().equals(other.getValue()) ? false : (!!this.unknownFields.equals(other.unknownFields)));
/*       */     }
/*       */     
/*       */     public int hashCode() {
/*       */       if (this.memoizedHashCode != 0)
/*       */         return this.memoizedHashCode; 
/*       */       int hash = 41;
/*       */       hash = 19 * hash + getDescriptor().hashCode();
/*       */       hash = 37 * hash + 1;
/*       */       hash = 53 * hash + getTag();
/*       */       hash = 37 * hash + 2;
/*       */       hash = 53 * hash + getValue().hashCode();
/*       */       hash = 29 * hash + this.unknownFields.hashCode();
/*       */       this.memoizedHashCode = hash;
/*       */       return hash;
/*       */     }
/*       */     
/*       */     public static StringDiffItem parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
/*       */       return (StringDiffItem)PARSER.parseFrom(data);
/*       */     }
/*       */     
/*       */     public static StringDiffItem parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*       */       return (StringDiffItem)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static StringDiffItem parseFrom(ByteString data) throws InvalidProtocolBufferException {
/*       */       return (StringDiffItem)PARSER.parseFrom(data);
/*       */     }
/*       */     
/*       */     public static StringDiffItem parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*       */       return (StringDiffItem)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static StringDiffItem parseFrom(byte[] data) throws InvalidProtocolBufferException {
/*       */       return (StringDiffItem)PARSER.parseFrom(data);
/*       */     }
/*       */     
/*       */     public static StringDiffItem parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*       */       return (StringDiffItem)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static StringDiffItem parseFrom(InputStream input) throws IOException {
/*       */       return (StringDiffItem)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */     
/*       */     public static StringDiffItem parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*       */       return (StringDiffItem)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static StringDiffItem parseDelimitedFrom(InputStream input) throws IOException {
/*       */       return (StringDiffItem)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
/*       */     }
/*       */     
/*       */     public static StringDiffItem parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*       */       return (StringDiffItem)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static StringDiffItem parseFrom(CodedInputStream input) throws IOException {
/*       */       return (StringDiffItem)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */     
/*       */     public static StringDiffItem parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*       */       return (StringDiffItem)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public Builder newBuilderForType() {
/*       */       return newBuilder();
/*       */     }
/*       */     
/*       */     public static Builder newBuilder() {
/*       */       return DEFAULT_INSTANCE.toBuilder();
/*       */     }
/*       */     
/*       */     public static Builder newBuilder(StringDiffItem prototype) {
/*       */       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
/*       */     }
/*       */     
/*       */     public Builder toBuilder() {
/*       */       return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder()).mergeFrom(this);
/*       */     }
/*       */     
/*       */     protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
/*       */       return new Builder(parent);
/*       */     }
/*       */     
/*       */     public static StringDiffItem getDefaultInstance() {
/*       */       return DEFAULT_INSTANCE;
/*       */     }
/*       */     
/*       */     public static Parser<StringDiffItem> parser() {
/*       */       return PARSER;
/*       */     }
/*       */     
/*       */     public Parser<StringDiffItem> getParserForType() {
/*       */       return PARSER;
/*       */     }
/*       */     
/*       */     public StringDiffItem getDefaultInstanceForType() {
/*       */       return DEFAULT_INSTANCE;
/*       */     }
/*       */     
/*       */     public static final class Builder extends GeneratedMessageV3.Builder<Builder> implements DolphinConfig.StringDiffItemOrBuilder {
/*       */       private int tag_;
/*       */       private Object value_ = "";
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/*       */         return DolphinConfig.internal_static_org_traccar_protobuf_dolphin_Config_StringDiffItem_descriptor;
/*       */       }
/*       */       
/*       */       protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
/*       */         return DolphinConfig.internal_static_org_traccar_protobuf_dolphin_Config_StringDiffItem_fieldAccessorTable.ensureFieldAccessorsInitialized(DolphinConfig.StringDiffItem.class, Builder.class);
/*       */       }
/*       */       
/*       */       private Builder() {
/*       */         maybeForceBuilderInitialization();
/*       */       }
/*       */       
/*       */       private Builder(GeneratedMessageV3.BuilderParent parent) {
/*       */         super(parent);
/*       */         maybeForceBuilderInitialization();
/*       */       }
/*       */       
/*       */       private void maybeForceBuilderInitialization() {
/*       */         if (DolphinConfig.StringDiffItem.alwaysUseFieldBuilders);
/*       */       }
/*       */       
/*       */       public Builder clear() {
/*       */         super.clear();
/*       */         this.tag_ = 0;
/*       */         this.value_ = "";
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Descriptors.Descriptor getDescriptorForType() {
/*       */         return DolphinConfig.internal_static_org_traccar_protobuf_dolphin_Config_StringDiffItem_descriptor;
/*       */       }
/*       */       
/*       */       public DolphinConfig.StringDiffItem getDefaultInstanceForType() {
/*       */         return DolphinConfig.StringDiffItem.getDefaultInstance();
/*       */       }
/*       */       
/*       */       public DolphinConfig.StringDiffItem build() {
/*       */         DolphinConfig.StringDiffItem result = buildPartial();
/*       */         if (!result.isInitialized())
/*       */           throw newUninitializedMessageException(result); 
/*       */         return result;
/*       */       }
/*       */       
/*       */       public DolphinConfig.StringDiffItem buildPartial() {
/*       */         DolphinConfig.StringDiffItem result = new DolphinConfig.StringDiffItem(this);
/*       */         result.tag_ = this.tag_;
/*       */         result.value_ = this.value_;
/*       */         onBuilt();
/*       */         return result;
/*       */       }
/*       */       
/*       */       public Builder clone() {
/*       */         return (Builder)super.clone();
/*       */       }
/*       */       
/*       */       public Builder setField(Descriptors.FieldDescriptor field, Object value) {
/*       */         return (Builder)super.setField(field, value);
/*       */       }
/*       */       
/*       */       public Builder clearField(Descriptors.FieldDescriptor field) {
/*       */         return (Builder)super.clearField(field);
/*       */       }
/*       */       
/*       */       public Builder clearOneof(Descriptors.OneofDescriptor oneof) {
/*       */         return (Builder)super.clearOneof(oneof);
/*       */       }
/*       */       
/*       */       public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
/*       */         return (Builder)super.setRepeatedField(field, index, value);
/*       */       }
/*       */       
/*       */       public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
/*       */         return (Builder)super.addRepeatedField(field, value);
/*       */       }
/*       */       
/*       */       public Builder mergeFrom(Message other) {
/*       */         if (other instanceof DolphinConfig.StringDiffItem)
/*       */           return mergeFrom((DolphinConfig.StringDiffItem)other); 
/*       */         super.mergeFrom(other);
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeFrom(DolphinConfig.StringDiffItem other) {
/*       */         if (other == DolphinConfig.StringDiffItem.getDefaultInstance())
/*       */           return this; 
/*       */         if (other.getTag() != 0)
/*       */           setTag(other.getTag()); 
/*       */         if (!other.getValue().isEmpty()) {
/*       */           this.value_ = other.value_;
/*       */           onChanged();
/*       */         } 
/*       */         mergeUnknownFields(other.unknownFields);
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       public final boolean isInitialized() {
/*       */         return true;
/*       */       }
/*       */       
/*       */       public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*       */         DolphinConfig.StringDiffItem parsedMessage = null;
/*       */         try {
/*       */           parsedMessage = (DolphinConfig.StringDiffItem)DolphinConfig.StringDiffItem.PARSER.parsePartialFrom(input, extensionRegistry);
/*       */         } catch (InvalidProtocolBufferException e) {
/*       */           parsedMessage = (DolphinConfig.StringDiffItem)e.getUnfinishedMessage();
/*       */           throw e.unwrapIOException();
/*       */         } finally {
/*       */           if (parsedMessage != null)
/*       */             mergeFrom(parsedMessage); 
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public int getTag() {
/*       */         return this.tag_;
/*       */       }
/*       */       
/*       */       public Builder setTag(int value) {
/*       */         this.tag_ = value;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearTag() {
/*       */         this.tag_ = 0;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       public String getValue() {
/*       */         Object ref = this.value_;
/*       */         if (!(ref instanceof String)) {
/*       */           ByteString bs = (ByteString)ref;
/*       */           String s = bs.toStringUtf8();
/*       */           this.value_ = s;
/*       */           return s;
/*       */         } 
/*       */         return (String)ref;
/*       */       }
/*       */       
/*       */       public ByteString getValueBytes() {
/*       */         Object ref = this.value_;
/*       */         if (ref instanceof String) {
/*       */           ByteString b = ByteString.copyFromUtf8((String)ref);
/*       */           this.value_ = b;
/*       */           return b;
/*       */         } 
/*       */         return (ByteString)ref;
/*       */       }
/*       */       
/*       */       public Builder setValue(String value) {
/*       */         if (value == null)
/*       */           throw new NullPointerException(); 
/*       */         this.value_ = value;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearValue() {
/*       */         this.value_ = DolphinConfig.StringDiffItem.getDefaultInstance().getValue();
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setValueBytes(ByteString value) {
/*       */         if (value == null)
/*       */           throw new NullPointerException(); 
/*       */         DolphinConfig.StringDiffItem.checkByteStringIsUtf8(value);
/*       */         this.value_ = value;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
/*       */         return (Builder)super.setUnknownFields(unknownFields);
/*       */       }
/*       */       
/*       */       public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
/*       */         return (Builder)super.mergeUnknownFields(unknownFields);
/*       */       }
/*       */     }
/*       */   }
/*       */   
/*       */   public static interface GeoZoneOrBuilder extends MessageOrBuilder {
/*       */     int getPriorityValue();
/*       */     
/*       */     DolphinConfig.Priority getPriority();
/*       */     
/*       */     int getEventValue();
/*       */     
/*       */     DolphinConfig.EventType getEvent();
/*       */     
/*       */     boolean getEventOnly();
/*       */     
/*       */     int getTypeValue();
/*       */     
/*       */     DolphinConfig.GeoZoneType getType();
/*       */     
/*       */     int getRadius();
/*       */     
/*       */     int getBorder();
/*       */     
/*       */     boolean getOverSpeeding();
/*       */     
/*       */     int getMaxSpeed();
/*       */     
/*       */     int getSendSmsTo();
/*       */     
/*       */     String getSmsText();
/*       */     
/*       */     ByteString getSmsTextBytes();
/*       */     
/*       */     List<Float> getPointsList();
/*       */     
/*       */     int getPointsCount();
/*       */     
/*       */     float getPoints(int param1Int);
/*       */   }
/*       */   
/*       */   public static final class GeoZone extends GeneratedMessageV3 implements GeoZoneOrBuilder {
/*       */     private static final long serialVersionUID = 0L;
/*       */     public static final int PRIORITY_FIELD_NUMBER = 1;
/*       */     private int priority_;
/*       */     public static final int EVENT_FIELD_NUMBER = 2;
/*       */     private int event_;
/*       */     public static final int EVENTONLY_FIELD_NUMBER = 3;
/*       */     private boolean eventOnly_;
/*       */     public static final int TYPE_FIELD_NUMBER = 4;
/*       */     private int type_;
/*       */     public static final int RADIUS_FIELD_NUMBER = 5;
/*       */     private int radius_;
/*       */     public static final int BORDER_FIELD_NUMBER = 6;
/*       */     private int border_;
/*       */     public static final int OVERSPEEDING_FIELD_NUMBER = 7;
/*       */     private boolean overSpeeding_;
/*       */     public static final int MAXSPEED_FIELD_NUMBER = 8;
/*       */     private int maxSpeed_;
/*       */     public static final int SENDSMSTO_FIELD_NUMBER = 9;
/*       */     private int sendSmsTo_;
/*       */     public static final int SMSTEXT_FIELD_NUMBER = 10;
/*       */     private volatile Object smsText_;
/*       */     public static final int POINTS_FIELD_NUMBER = 11;
/*       */     private Internal.FloatList points_;
/*       */     private int pointsMemoizedSerializedSize = -1;
/*       */     private byte memoizedIsInitialized = -1;
/*       */     private static final GeoZone DEFAULT_INSTANCE = new GeoZone();
/*       */     
/*       */     private static final Parser<GeoZone> PARSER = (Parser<GeoZone>)new AbstractParser<GeoZone>() {
/*       */         public DolphinConfig.GeoZone parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*       */           return new DolphinConfig.GeoZone(input, extensionRegistry);
/*       */         }
/*       */       };
/*       */     
/*       */     private GeoZone(GeneratedMessageV3.Builder<?> builder) {
/*       */       super(builder);
/*       */     }
/*       */     
/*       */     private GeoZone() {
/*       */       this.priority_ = 0;
/*       */       this.event_ = 0;
/*       */       this.type_ = 0;
/*       */       this.smsText_ = "";
/*       */       this.points_ = emptyFloatList();
/*       */     }
/*       */     
/*       */     protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) {
/*       */       return new GeoZone();
/*       */     }
/*       */     
/*       */     public final UnknownFieldSet getUnknownFields() {
/*       */       return this.unknownFields;
/*       */     }
/*       */     
/*       */     private GeoZone(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*       */       this();
/*       */       if (extensionRegistry == null)
/*       */         throw new NullPointerException(); 
/*       */       int mutable_bitField0_ = 0;
/*       */       UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
/*       */       try {
/*       */         boolean done = false;
/*       */         while (!done) {
/*       */           int rawValue;
/*       */           String s;
/*       */           int length;
/*       */           int limit;
/*       */           int tag = input.readTag();
/*       */           switch (tag) {
/*       */             case 0:
/*       */               done = true;
/*       */               continue;
/*       */             case 8:
/*       */               rawValue = input.readEnum();
/*       */               this.priority_ = rawValue;
/*       */               continue;
/*       */             case 16:
/*       */               rawValue = input.readEnum();
/*       */               this.event_ = rawValue;
/*       */               continue;
/*       */             case 24:
/*       */               this.eventOnly_ = input.readBool();
/*       */               continue;
/*       */             case 32:
/*       */               rawValue = input.readEnum();
/*       */               this.type_ = rawValue;
/*       */               continue;
/*       */             case 40:
/*       */               this.radius_ = input.readUInt32();
/*       */               continue;
/*       */             case 48:
/*       */               this.border_ = input.readUInt32();
/*       */               continue;
/*       */             case 56:
/*       */               this.overSpeeding_ = input.readBool();
/*       */               continue;
/*       */             case 64:
/*       */               this.maxSpeed_ = input.readUInt32();
/*       */               continue;
/*       */             case 72:
/*       */               this.sendSmsTo_ = input.readUInt32();
/*       */               continue;
/*       */             case 82:
/*       */               s = input.readStringRequireUtf8();
/*       */               this.smsText_ = s;
/*       */               continue;
/*       */             case 93:
/*       */               if ((mutable_bitField0_ & 0x1) == 0) {
/*       */                 this.points_ = newFloatList();
/*       */                 mutable_bitField0_ |= 0x1;
/*       */               } 
/*       */               this.points_.addFloat(input.readFloat());
/*       */               continue;
/*       */             case 90:
/*       */               length = input.readRawVarint32();
/*       */               limit = input.pushLimit(length);
/*       */               if ((mutable_bitField0_ & 0x1) == 0 && input.getBytesUntilLimit() > 0) {
/*       */                 this.points_ = newFloatList();
/*       */                 mutable_bitField0_ |= 0x1;
/*       */               } 
/*       */               while (input.getBytesUntilLimit() > 0)
/*       */                 this.points_.addFloat(input.readFloat()); 
/*       */               input.popLimit(limit);
/*       */               continue;
/*       */           } 
/*       */           if (!parseUnknownField(input, unknownFields, extensionRegistry, tag))
/*       */             done = true; 
/*       */         } 
/*       */       } catch (InvalidProtocolBufferException e) {
/*       */         throw e.setUnfinishedMessage(this);
/*       */       } catch (IOException e) {
/*       */         throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this);
/*       */       } finally {
/*       */         if ((mutable_bitField0_ & 0x1) != 0)
/*       */           this.points_.makeImmutable(); 
/*       */         this.unknownFields = unknownFields.build();
/*       */         makeExtensionsImmutable();
/*       */       } 
/*       */     }
/*       */     
/*       */     public static final Descriptors.Descriptor getDescriptor() {
/*       */       return DolphinConfig.internal_static_org_traccar_protobuf_dolphin_Config_GeoZone_descriptor;
/*       */     }
/*       */     
/*       */     protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
/*       */       return DolphinConfig.internal_static_org_traccar_protobuf_dolphin_Config_GeoZone_fieldAccessorTable.ensureFieldAccessorsInitialized(GeoZone.class, Builder.class);
/*       */     }
/*       */     
/*       */     public int getPriorityValue() {
/*       */       return this.priority_;
/*       */     }
/*       */     
/*       */     public DolphinConfig.Priority getPriority() {
/*       */       DolphinConfig.Priority result = DolphinConfig.Priority.valueOf(this.priority_);
/*       */       return (result == null) ? DolphinConfig.Priority.UNRECOGNIZED : result;
/*       */     }
/*       */     
/*       */     public int getEventValue() {
/*       */       return this.event_;
/*       */     }
/*       */     
/*       */     public DolphinConfig.EventType getEvent() {
/*       */       DolphinConfig.EventType result = DolphinConfig.EventType.valueOf(this.event_);
/*       */       return (result == null) ? DolphinConfig.EventType.UNRECOGNIZED : result;
/*       */     }
/*       */     
/*       */     public boolean getEventOnly() {
/*       */       return this.eventOnly_;
/*       */     }
/*       */     
/*       */     public int getTypeValue() {
/*       */       return this.type_;
/*       */     }
/*       */     
/*       */     public DolphinConfig.GeoZoneType getType() {
/*       */       DolphinConfig.GeoZoneType result = DolphinConfig.GeoZoneType.valueOf(this.type_);
/*       */       return (result == null) ? DolphinConfig.GeoZoneType.UNRECOGNIZED : result;
/*       */     }
/*       */     
/*       */     public int getRadius() {
/*       */       return this.radius_;
/*       */     }
/*       */     
/*       */     public int getBorder() {
/*       */       return this.border_;
/*       */     }
/*       */     
/*       */     public boolean getOverSpeeding() {
/*       */       return this.overSpeeding_;
/*       */     }
/*       */     
/*       */     public int getMaxSpeed() {
/*       */       return this.maxSpeed_;
/*       */     }
/*       */     
/*       */     public int getSendSmsTo() {
/*       */       return this.sendSmsTo_;
/*       */     }
/*       */     
/*       */     public String getSmsText() {
/*       */       Object ref = this.smsText_;
/*       */       if (ref instanceof String)
/*       */         return (String)ref; 
/*       */       ByteString bs = (ByteString)ref;
/*       */       String s = bs.toStringUtf8();
/*       */       this.smsText_ = s;
/*       */       return s;
/*       */     }
/*       */     
/*       */     public ByteString getSmsTextBytes() {
/*       */       Object ref = this.smsText_;
/*       */       if (ref instanceof String) {
/*       */         ByteString b = ByteString.copyFromUtf8((String)ref);
/*       */         this.smsText_ = b;
/*       */         return b;
/*       */       } 
/*       */       return (ByteString)ref;
/*       */     }
/*       */     
/*       */     public List<Float> getPointsList() {
/*       */       return (List<Float>)this.points_;
/*       */     }
/*       */     
/*       */     public int getPointsCount() {
/*       */       return this.points_.size();
/*       */     }
/*       */     
/*       */     public float getPoints(int index) {
/*       */       return this.points_.getFloat(index);
/*       */     }
/*       */     
/*       */     public final boolean isInitialized() {
/*       */       byte isInitialized = this.memoizedIsInitialized;
/*       */       if (isInitialized == 1)
/*       */         return true; 
/*       */       if (isInitialized == 0)
/*       */         return false; 
/*       */       this.memoizedIsInitialized = 1;
/*       */       return true;
/*       */     }
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/*       */       getSerializedSize();
/*       */       if (this.priority_ != DolphinConfig.Priority.PR_None.getNumber())
/*       */         output.writeEnum(1, this.priority_); 
/*       */       if (this.event_ != DolphinConfig.EventType.Monitoring.getNumber())
/*       */         output.writeEnum(2, this.event_); 
/*       */       if (this.eventOnly_)
/*       */         output.writeBool(3, this.eventOnly_); 
/*       */       if (this.type_ != DolphinConfig.GeoZoneType.Circular.getNumber())
/*       */         output.writeEnum(4, this.type_); 
/*       */       if (this.radius_ != 0)
/*       */         output.writeUInt32(5, this.radius_); 
/*       */       if (this.border_ != 0)
/*       */         output.writeUInt32(6, this.border_); 
/*       */       if (this.overSpeeding_)
/*       */         output.writeBool(7, this.overSpeeding_); 
/*       */       if (this.maxSpeed_ != 0)
/*       */         output.writeUInt32(8, this.maxSpeed_); 
/*       */       if (this.sendSmsTo_ != 0)
/*       */         output.writeUInt32(9, this.sendSmsTo_); 
/*       */       if (!getSmsTextBytes().isEmpty())
/*       */         GeneratedMessageV3.writeString(output, 10, this.smsText_); 
/*       */       if (getPointsList().size() > 0) {
/*       */         output.writeUInt32NoTag(90);
/*       */         output.writeUInt32NoTag(this.pointsMemoizedSerializedSize);
/*       */       } 
/*       */       for (int i = 0; i < this.points_.size(); i++)
/*       */         output.writeFloatNoTag(this.points_.getFloat(i)); 
/*       */       this.unknownFields.writeTo(output);
/*       */     }
/*       */     
/*       */     public int getSerializedSize() {
/*       */       int size = this.memoizedSize;
/*       */       if (size != -1)
/*       */         return size; 
/*       */       size = 0;
/*       */       if (this.priority_ != DolphinConfig.Priority.PR_None.getNumber())
/*       */         size += CodedOutputStream.computeEnumSize(1, this.priority_); 
/*       */       if (this.event_ != DolphinConfig.EventType.Monitoring.getNumber())
/*       */         size += CodedOutputStream.computeEnumSize(2, this.event_); 
/*       */       if (this.eventOnly_)
/*       */         size += CodedOutputStream.computeBoolSize(3, this.eventOnly_); 
/*       */       if (this.type_ != DolphinConfig.GeoZoneType.Circular.getNumber())
/*       */         size += CodedOutputStream.computeEnumSize(4, this.type_); 
/*       */       if (this.radius_ != 0)
/*       */         size += CodedOutputStream.computeUInt32Size(5, this.radius_); 
/*       */       if (this.border_ != 0)
/*       */         size += CodedOutputStream.computeUInt32Size(6, this.border_); 
/*       */       if (this.overSpeeding_)
/*       */         size += CodedOutputStream.computeBoolSize(7, this.overSpeeding_); 
/*       */       if (this.maxSpeed_ != 0)
/*       */         size += CodedOutputStream.computeUInt32Size(8, this.maxSpeed_); 
/*       */       if (this.sendSmsTo_ != 0)
/*       */         size += CodedOutputStream.computeUInt32Size(9, this.sendSmsTo_); 
/*       */       if (!getSmsTextBytes().isEmpty())
/*       */         size += GeneratedMessageV3.computeStringSize(10, this.smsText_); 
/*       */       int dataSize = 0;
/*       */       dataSize = 4 * getPointsList().size();
/*       */       size += dataSize;
/*       */       if (!getPointsList().isEmpty())
/*       */         size = ++size + CodedOutputStream.computeInt32SizeNoTag(dataSize); 
/*       */       this.pointsMemoizedSerializedSize = dataSize;
/*       */       size += this.unknownFields.getSerializedSize();
/*       */       this.memoizedSize = size;
/*       */       return size;
/*       */     }
/*       */     
/*       */     public boolean equals(Object obj) {
/*       */       if (obj == this)
/*       */         return true; 
/*       */       if (!(obj instanceof GeoZone))
/*       */         return super.equals(obj); 
/*       */       GeoZone other = (GeoZone)obj;
/*       */       return (this.priority_ != other.priority_) ? false : ((this.event_ != other.event_) ? false : ((getEventOnly() != other.getEventOnly()) ? false : ((this.type_ != other.type_) ? false : ((getRadius() != other.getRadius()) ? false : ((getBorder() != other.getBorder()) ? false : ((getOverSpeeding() != other.getOverSpeeding()) ? false : ((getMaxSpeed() != other.getMaxSpeed()) ? false : ((getSendSmsTo() != other.getSendSmsTo()) ? false : (!getSmsText().equals(other.getSmsText()) ? false : (!getPointsList().equals(other.getPointsList()) ? false : (!!this.unknownFields.equals(other.unknownFields))))))))))));
/*       */     }
/*       */     
/*       */     public int hashCode() {
/*       */       if (this.memoizedHashCode != 0)
/*       */         return this.memoizedHashCode; 
/*       */       int hash = 41;
/*       */       hash = 19 * hash + getDescriptor().hashCode();
/*       */       hash = 37 * hash + 1;
/*       */       hash = 53 * hash + this.priority_;
/*       */       hash = 37 * hash + 2;
/*       */       hash = 53 * hash + this.event_;
/*       */       hash = 37 * hash + 3;
/*       */       hash = 53 * hash + Internal.hashBoolean(getEventOnly());
/*       */       hash = 37 * hash + 4;
/*       */       hash = 53 * hash + this.type_;
/*       */       hash = 37 * hash + 5;
/*       */       hash = 53 * hash + getRadius();
/*       */       hash = 37 * hash + 6;
/*       */       hash = 53 * hash + getBorder();
/*       */       hash = 37 * hash + 7;
/*       */       hash = 53 * hash + Internal.hashBoolean(getOverSpeeding());
/*       */       hash = 37 * hash + 8;
/*       */       hash = 53 * hash + getMaxSpeed();
/*       */       hash = 37 * hash + 9;
/*       */       hash = 53 * hash + getSendSmsTo();
/*       */       hash = 37 * hash + 10;
/*       */       hash = 53 * hash + getSmsText().hashCode();
/*       */       if (getPointsCount() > 0) {
/*       */         hash = 37 * hash + 11;
/*       */         hash = 53 * hash + getPointsList().hashCode();
/*       */       } 
/*       */       hash = 29 * hash + this.unknownFields.hashCode();
/*       */       this.memoizedHashCode = hash;
/*       */       return hash;
/*       */     }
/*       */     
/*       */     public static GeoZone parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
/*       */       return (GeoZone)PARSER.parseFrom(data);
/*       */     }
/*       */     
/*       */     public static GeoZone parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*       */       return (GeoZone)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static GeoZone parseFrom(ByteString data) throws InvalidProtocolBufferException {
/*       */       return (GeoZone)PARSER.parseFrom(data);
/*       */     }
/*       */     
/*       */     public static GeoZone parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*       */       return (GeoZone)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static GeoZone parseFrom(byte[] data) throws InvalidProtocolBufferException {
/*       */       return (GeoZone)PARSER.parseFrom(data);
/*       */     }
/*       */     
/*       */     public static GeoZone parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*       */       return (GeoZone)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static GeoZone parseFrom(InputStream input) throws IOException {
/*       */       return (GeoZone)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */     
/*       */     public static GeoZone parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*       */       return (GeoZone)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static GeoZone parseDelimitedFrom(InputStream input) throws IOException {
/*       */       return (GeoZone)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
/*       */     }
/*       */     
/*       */     public static GeoZone parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*       */       return (GeoZone)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static GeoZone parseFrom(CodedInputStream input) throws IOException {
/*       */       return (GeoZone)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */     
/*       */     public static GeoZone parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*       */       return (GeoZone)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public Builder newBuilderForType() {
/*       */       return newBuilder();
/*       */     }
/*       */     
/*       */     public static Builder newBuilder() {
/*       */       return DEFAULT_INSTANCE.toBuilder();
/*       */     }
/*       */     
/*       */     public static Builder newBuilder(GeoZone prototype) {
/*       */       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
/*       */     }
/*       */     
/*       */     public Builder toBuilder() {
/*       */       return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder()).mergeFrom(this);
/*       */     }
/*       */     
/*       */     protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
/*       */       return new Builder(parent);
/*       */     }
/*       */     
/*       */     public static GeoZone getDefaultInstance() {
/*       */       return DEFAULT_INSTANCE;
/*       */     }
/*       */     
/*       */     public static Parser<GeoZone> parser() {
/*       */       return PARSER;
/*       */     }
/*       */     
/*       */     public Parser<GeoZone> getParserForType() {
/*       */       return PARSER;
/*       */     }
/*       */     
/*       */     public GeoZone getDefaultInstanceForType() {
/*       */       return DEFAULT_INSTANCE;
/*       */     }
/*       */     
/*       */     public static final class Builder extends GeneratedMessageV3.Builder<Builder> implements DolphinConfig.GeoZoneOrBuilder {
/*       */       private int bitField0_;
/*       */       private int priority_ = 0;
/*       */       private int event_ = 0;
/*       */       private boolean eventOnly_;
/*       */       private int type_ = 0;
/*       */       private int radius_;
/*       */       private int border_;
/*       */       private boolean overSpeeding_;
/*       */       private int maxSpeed_;
/*       */       private int sendSmsTo_;
/*       */       private Object smsText_ = "";
/*       */       private Internal.FloatList points_ = DolphinConfig.GeoZone.emptyFloatList();
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/*       */         return DolphinConfig.internal_static_org_traccar_protobuf_dolphin_Config_GeoZone_descriptor;
/*       */       }
/*       */       
/*       */       protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
/*       */         return DolphinConfig.internal_static_org_traccar_protobuf_dolphin_Config_GeoZone_fieldAccessorTable.ensureFieldAccessorsInitialized(DolphinConfig.GeoZone.class, Builder.class);
/*       */       }
/*       */       
/*       */       private Builder() {
/*       */         maybeForceBuilderInitialization();
/*       */       }
/*       */       
/*       */       private Builder(GeneratedMessageV3.BuilderParent parent) {
/*       */         super(parent);
/*       */         maybeForceBuilderInitialization();
/*       */       }
/*       */       
/*       */       private void maybeForceBuilderInitialization() {
/*       */         if (DolphinConfig.GeoZone.alwaysUseFieldBuilders);
/*       */       }
/*       */       
/*       */       public Builder clear() {
/*       */         super.clear();
/*       */         this.priority_ = 0;
/*       */         this.event_ = 0;
/*       */         this.eventOnly_ = false;
/*       */         this.type_ = 0;
/*       */         this.radius_ = 0;
/*       */         this.border_ = 0;
/*       */         this.overSpeeding_ = false;
/*       */         this.maxSpeed_ = 0;
/*       */         this.sendSmsTo_ = 0;
/*       */         this.smsText_ = "";
/*       */         this.points_ = DolphinConfig.GeoZone.emptyFloatList();
/*       */         this.bitField0_ &= 0xFFFFFFFE;
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Descriptors.Descriptor getDescriptorForType() {
/*       */         return DolphinConfig.internal_static_org_traccar_protobuf_dolphin_Config_GeoZone_descriptor;
/*       */       }
/*       */       
/*       */       public DolphinConfig.GeoZone getDefaultInstanceForType() {
/*       */         return DolphinConfig.GeoZone.getDefaultInstance();
/*       */       }
/*       */       
/*       */       public DolphinConfig.GeoZone build() {
/*       */         DolphinConfig.GeoZone result = buildPartial();
/*       */         if (!result.isInitialized())
/*       */           throw newUninitializedMessageException(result); 
/*       */         return result;
/*       */       }
/*       */       
/*       */       public DolphinConfig.GeoZone buildPartial() {
/*       */         DolphinConfig.GeoZone result = new DolphinConfig.GeoZone(this);
/*       */         int from_bitField0_ = this.bitField0_;
/*       */         result.priority_ = this.priority_;
/*       */         result.event_ = this.event_;
/*       */         result.eventOnly_ = this.eventOnly_;
/*       */         result.type_ = this.type_;
/*       */         result.radius_ = this.radius_;
/*       */         result.border_ = this.border_;
/*       */         result.overSpeeding_ = this.overSpeeding_;
/*       */         result.maxSpeed_ = this.maxSpeed_;
/*       */         result.sendSmsTo_ = this.sendSmsTo_;
/*       */         result.smsText_ = this.smsText_;
/*       */         if ((this.bitField0_ & 0x1) != 0) {
/*       */           this.points_.makeImmutable();
/*       */           this.bitField0_ &= 0xFFFFFFFE;
/*       */         } 
/*       */         result.points_ = this.points_;
/*       */         onBuilt();
/*       */         return result;
/*       */       }
/*       */       
/*       */       public Builder clone() {
/*       */         return (Builder)super.clone();
/*       */       }
/*       */       
/*       */       public Builder setField(Descriptors.FieldDescriptor field, Object value) {
/*       */         return (Builder)super.setField(field, value);
/*       */       }
/*       */       
/*       */       public Builder clearField(Descriptors.FieldDescriptor field) {
/*       */         return (Builder)super.clearField(field);
/*       */       }
/*       */       
/*       */       public Builder clearOneof(Descriptors.OneofDescriptor oneof) {
/*       */         return (Builder)super.clearOneof(oneof);
/*       */       }
/*       */       
/*       */       public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
/*       */         return (Builder)super.setRepeatedField(field, index, value);
/*       */       }
/*       */       
/*       */       public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
/*       */         return (Builder)super.addRepeatedField(field, value);
/*       */       }
/*       */       
/*       */       public Builder mergeFrom(Message other) {
/*       */         if (other instanceof DolphinConfig.GeoZone)
/*       */           return mergeFrom((DolphinConfig.GeoZone)other); 
/*       */         super.mergeFrom(other);
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeFrom(DolphinConfig.GeoZone other) {
/*       */         if (other == DolphinConfig.GeoZone.getDefaultInstance())
/*       */           return this; 
/*       */         if (other.priority_ != 0)
/*       */           setPriorityValue(other.getPriorityValue()); 
/*       */         if (other.event_ != 0)
/*       */           setEventValue(other.getEventValue()); 
/*       */         if (other.getEventOnly())
/*       */           setEventOnly(other.getEventOnly()); 
/*       */         if (other.type_ != 0)
/*       */           setTypeValue(other.getTypeValue()); 
/*       */         if (other.getRadius() != 0)
/*       */           setRadius(other.getRadius()); 
/*       */         if (other.getBorder() != 0)
/*       */           setBorder(other.getBorder()); 
/*       */         if (other.getOverSpeeding())
/*       */           setOverSpeeding(other.getOverSpeeding()); 
/*       */         if (other.getMaxSpeed() != 0)
/*       */           setMaxSpeed(other.getMaxSpeed()); 
/*       */         if (other.getSendSmsTo() != 0)
/*       */           setSendSmsTo(other.getSendSmsTo()); 
/*       */         if (!other.getSmsText().isEmpty()) {
/*       */           this.smsText_ = other.smsText_;
/*       */           onChanged();
/*       */         } 
/*       */         if (!other.points_.isEmpty()) {
/*       */           if (this.points_.isEmpty()) {
/*       */             this.points_ = other.points_;
/*       */             this.bitField0_ &= 0xFFFFFFFE;
/*       */           } else {
/*       */             ensurePointsIsMutable();
/*       */             this.points_.addAll((Collection)other.points_);
/*       */           } 
/*       */           onChanged();
/*       */         } 
/*       */         mergeUnknownFields(other.unknownFields);
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       public final boolean isInitialized() {
/*       */         return true;
/*       */       }
/*       */       
/*       */       public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*       */         DolphinConfig.GeoZone parsedMessage = null;
/*       */         try {
/*       */           parsedMessage = (DolphinConfig.GeoZone)DolphinConfig.GeoZone.PARSER.parsePartialFrom(input, extensionRegistry);
/*       */         } catch (InvalidProtocolBufferException e) {
/*       */           parsedMessage = (DolphinConfig.GeoZone)e.getUnfinishedMessage();
/*       */           throw e.unwrapIOException();
/*       */         } finally {
/*       */           if (parsedMessage != null)
/*       */             mergeFrom(parsedMessage); 
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public int getPriorityValue() {
/*       */         return this.priority_;
/*       */       }
/*       */       
/*       */       public Builder setPriorityValue(int value) {
/*       */         this.priority_ = value;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.Priority getPriority() {
/*       */         DolphinConfig.Priority result = DolphinConfig.Priority.valueOf(this.priority_);
/*       */         return (result == null) ? DolphinConfig.Priority.UNRECOGNIZED : result;
/*       */       }
/*       */       
/*       */       public Builder setPriority(DolphinConfig.Priority value) {
/*       */         if (value == null)
/*       */           throw new NullPointerException(); 
/*       */         this.priority_ = value.getNumber();
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearPriority() {
/*       */         this.priority_ = 0;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       public int getEventValue() {
/*       */         return this.event_;
/*       */       }
/*       */       
/*       */       public Builder setEventValue(int value) {
/*       */         this.event_ = value;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.EventType getEvent() {
/*       */         DolphinConfig.EventType result = DolphinConfig.EventType.valueOf(this.event_);
/*       */         return (result == null) ? DolphinConfig.EventType.UNRECOGNIZED : result;
/*       */       }
/*       */       
/*       */       public Builder setEvent(DolphinConfig.EventType value) {
/*       */         if (value == null)
/*       */           throw new NullPointerException(); 
/*       */         this.event_ = value.getNumber();
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearEvent() {
/*       */         this.event_ = 0;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       public boolean getEventOnly() {
/*       */         return this.eventOnly_;
/*       */       }
/*       */       
/*       */       public Builder setEventOnly(boolean value) {
/*       */         this.eventOnly_ = value;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearEventOnly() {
/*       */         this.eventOnly_ = false;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       public int getTypeValue() {
/*       */         return this.type_;
/*       */       }
/*       */       
/*       */       public Builder setTypeValue(int value) {
/*       */         this.type_ = value;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.GeoZoneType getType() {
/*       */         DolphinConfig.GeoZoneType result = DolphinConfig.GeoZoneType.valueOf(this.type_);
/*       */         return (result == null) ? DolphinConfig.GeoZoneType.UNRECOGNIZED : result;
/*       */       }
/*       */       
/*       */       public Builder setType(DolphinConfig.GeoZoneType value) {
/*       */         if (value == null)
/*       */           throw new NullPointerException(); 
/*       */         this.type_ = value.getNumber();
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearType() {
/*       */         this.type_ = 0;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       public int getRadius() {
/*       */         return this.radius_;
/*       */       }
/*       */       
/*       */       public Builder setRadius(int value) {
/*       */         this.radius_ = value;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearRadius() {
/*       */         this.radius_ = 0;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       public int getBorder() {
/*       */         return this.border_;
/*       */       }
/*       */       
/*       */       public Builder setBorder(int value) {
/*       */         this.border_ = value;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearBorder() {
/*       */         this.border_ = 0;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       public boolean getOverSpeeding() {
/*       */         return this.overSpeeding_;
/*       */       }
/*       */       
/*       */       public Builder setOverSpeeding(boolean value) {
/*       */         this.overSpeeding_ = value;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearOverSpeeding() {
/*       */         this.overSpeeding_ = false;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       public int getMaxSpeed() {
/*       */         return this.maxSpeed_;
/*       */       }
/*       */       
/*       */       public Builder setMaxSpeed(int value) {
/*       */         this.maxSpeed_ = value;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearMaxSpeed() {
/*       */         this.maxSpeed_ = 0;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       public int getSendSmsTo() {
/*       */         return this.sendSmsTo_;
/*       */       }
/*       */       
/*       */       public Builder setSendSmsTo(int value) {
/*       */         this.sendSmsTo_ = value;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearSendSmsTo() {
/*       */         this.sendSmsTo_ = 0;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       public String getSmsText() {
/*       */         Object ref = this.smsText_;
/*       */         if (!(ref instanceof String)) {
/*       */           ByteString bs = (ByteString)ref;
/*       */           String s = bs.toStringUtf8();
/*       */           this.smsText_ = s;
/*       */           return s;
/*       */         } 
/*       */         return (String)ref;
/*       */       }
/*       */       
/*       */       public ByteString getSmsTextBytes() {
/*       */         Object ref = this.smsText_;
/*       */         if (ref instanceof String) {
/*       */           ByteString b = ByteString.copyFromUtf8((String)ref);
/*       */           this.smsText_ = b;
/*       */           return b;
/*       */         } 
/*       */         return (ByteString)ref;
/*       */       }
/*       */       
/*       */       public Builder setSmsText(String value) {
/*       */         if (value == null)
/*       */           throw new NullPointerException(); 
/*       */         this.smsText_ = value;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearSmsText() {
/*       */         this.smsText_ = DolphinConfig.GeoZone.getDefaultInstance().getSmsText();
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setSmsTextBytes(ByteString value) {
/*       */         if (value == null)
/*       */           throw new NullPointerException(); 
/*       */         DolphinConfig.GeoZone.checkByteStringIsUtf8(value);
/*       */         this.smsText_ = value;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       private void ensurePointsIsMutable() {
/*       */         if ((this.bitField0_ & 0x1) == 0) {
/*       */           this.points_ = DolphinConfig.GeoZone.mutableCopy(this.points_);
/*       */           this.bitField0_ |= 0x1;
/*       */         } 
/*       */       }
/*       */       
/*       */       public List<Float> getPointsList() {
/*       */         return ((this.bitField0_ & 0x1) != 0) ? Collections.<Float>unmodifiableList((List<? extends Float>)this.points_) : (List<Float>)this.points_;
/*       */       }
/*       */       
/*       */       public int getPointsCount() {
/*       */         return this.points_.size();
/*       */       }
/*       */       
/*       */       public float getPoints(int index) {
/*       */         return this.points_.getFloat(index);
/*       */       }
/*       */       
/*       */       public Builder setPoints(int index, float value) {
/*       */         ensurePointsIsMutable();
/*       */         this.points_.setFloat(index, value);
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder addPoints(float value) {
/*       */         ensurePointsIsMutable();
/*       */         this.points_.addFloat(value);
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder addAllPoints(Iterable<? extends Float> values) {
/*       */         ensurePointsIsMutable();
/*       */         AbstractMessageLite.Builder.addAll(values, (List)this.points_);
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearPoints() {
/*       */         this.points_ = DolphinConfig.GeoZone.emptyFloatList();
/*       */         this.bitField0_ &= 0xFFFFFFFE;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
/*       */         return (Builder)super.setUnknownFields(unknownFields);
/*       */       }
/*       */       
/*       */       public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
/*       */         return (Builder)super.mergeUnknownFields(unknownFields);
/*       */       }
/*       */     }
/*       */   }
/*       */   
/*       */   public static interface IOOrBuilder extends MessageOrBuilder {
/*       */     int getPriorityValue();
/*       */     
/*       */     DolphinConfig.Priority getPriority();
/*       */     
/*       */     int getEventValue();
/*       */     
/*       */     DolphinConfig.EventType getEvent();
/*       */     
/*       */     int getLowLevel();
/*       */     
/*       */     int getHighLevel();
/*       */     
/*       */     boolean getEventOnly();
/*       */     
/*       */     int getSendSmsTo();
/*       */     
/*       */     String getSmsText();
/*       */     
/*       */     ByteString getSmsTextBytes();
/*       */   }
/*       */   
/*       */   public static final class IO extends GeneratedMessageV3 implements IOOrBuilder {
/*       */     private static final long serialVersionUID = 0L;
/*       */     public static final int PRIORITY_FIELD_NUMBER = 1;
/*       */     private int priority_;
/*       */     public static final int EVENT_FIELD_NUMBER = 2;
/*       */     private int event_;
/*       */     public static final int LOWLEVEL_FIELD_NUMBER = 3;
/*       */     private int lowLevel_;
/*       */     public static final int HIGHLEVEL_FIELD_NUMBER = 4;
/*       */     private int highLevel_;
/*       */     public static final int EVENTONLY_FIELD_NUMBER = 6;
/*       */     private boolean eventOnly_;
/*       */     public static final int SENDSMSTO_FIELD_NUMBER = 7;
/*       */     private int sendSmsTo_;
/*       */     public static final int SMSTEXT_FIELD_NUMBER = 8;
/*       */     private volatile Object smsText_;
/*       */     private byte memoizedIsInitialized = -1;
/*       */     private static final IO DEFAULT_INSTANCE = new IO();
/*       */     
/*       */     private static final Parser<IO> PARSER = (Parser<IO>)new AbstractParser<IO>() {
/*       */         public DolphinConfig.IO parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*       */           return new DolphinConfig.IO(input, extensionRegistry);
/*       */         }
/*       */       };
/*       */     
/*       */     private IO(GeneratedMessageV3.Builder<?> builder) {
/*       */       super(builder);
/*       */     }
/*       */     
/*       */     private IO() {
/*       */       this.priority_ = 0;
/*       */       this.event_ = 0;
/*       */       this.smsText_ = "";
/*       */     }
/*       */     
/*       */     protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) {
/*       */       return new IO();
/*       */     }
/*       */     
/*       */     public final UnknownFieldSet getUnknownFields() {
/*       */       return this.unknownFields;
/*       */     }
/*       */     
/*       */     private IO(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*       */       this();
/*       */       if (extensionRegistry == null)
/*       */         throw new NullPointerException(); 
/*       */       UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
/*       */       try {
/*       */         boolean done = false;
/*       */         while (!done) {
/*       */           int rawValue;
/*       */           String s;
/*       */           int tag = input.readTag();
/*       */           switch (tag) {
/*       */             case 0:
/*       */               done = true;
/*       */               continue;
/*       */             case 8:
/*       */               rawValue = input.readEnum();
/*       */               this.priority_ = rawValue;
/*       */               continue;
/*       */             case 16:
/*       */               rawValue = input.readEnum();
/*       */               this.event_ = rawValue;
/*       */               continue;
/*       */             case 24:
/*       */               this.lowLevel_ = input.readInt32();
/*       */               continue;
/*       */             case 32:
/*       */               this.highLevel_ = input.readInt32();
/*       */               continue;
/*       */             case 48:
/*       */               this.eventOnly_ = input.readBool();
/*       */               continue;
/*       */             case 56:
/*       */               this.sendSmsTo_ = input.readUInt32();
/*       */               continue;
/*       */             case 66:
/*       */               s = input.readStringRequireUtf8();
/*       */               this.smsText_ = s;
/*       */               continue;
/*       */           } 
/*       */           if (!parseUnknownField(input, unknownFields, extensionRegistry, tag))
/*       */             done = true; 
/*       */         } 
/*       */       } catch (InvalidProtocolBufferException e) {
/*       */         throw e.setUnfinishedMessage(this);
/*       */       } catch (IOException e) {
/*       */         throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this);
/*       */       } finally {
/*       */         this.unknownFields = unknownFields.build();
/*       */         makeExtensionsImmutable();
/*       */       } 
/*       */     }
/*       */     
/*       */     public static final Descriptors.Descriptor getDescriptor() {
/*       */       return DolphinConfig.internal_static_org_traccar_protobuf_dolphin_Config_IO_descriptor;
/*       */     }
/*       */     
/*       */     protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
/*       */       return DolphinConfig.internal_static_org_traccar_protobuf_dolphin_Config_IO_fieldAccessorTable.ensureFieldAccessorsInitialized(IO.class, Builder.class);
/*       */     }
/*       */     
/*       */     public int getPriorityValue() {
/*       */       return this.priority_;
/*       */     }
/*       */     
/*       */     public DolphinConfig.Priority getPriority() {
/*       */       DolphinConfig.Priority result = DolphinConfig.Priority.valueOf(this.priority_);
/*       */       return (result == null) ? DolphinConfig.Priority.UNRECOGNIZED : result;
/*       */     }
/*       */     
/*       */     public int getEventValue() {
/*       */       return this.event_;
/*       */     }
/*       */     
/*       */     public DolphinConfig.EventType getEvent() {
/*       */       DolphinConfig.EventType result = DolphinConfig.EventType.valueOf(this.event_);
/*       */       return (result == null) ? DolphinConfig.EventType.UNRECOGNIZED : result;
/*       */     }
/*       */     
/*       */     public int getLowLevel() {
/*       */       return this.lowLevel_;
/*       */     }
/*       */     
/*       */     public int getHighLevel() {
/*       */       return this.highLevel_;
/*       */     }
/*       */     
/*       */     public boolean getEventOnly() {
/*       */       return this.eventOnly_;
/*       */     }
/*       */     
/*       */     public int getSendSmsTo() {
/*       */       return this.sendSmsTo_;
/*       */     }
/*       */     
/*       */     public String getSmsText() {
/*       */       Object ref = this.smsText_;
/*       */       if (ref instanceof String)
/*       */         return (String)ref; 
/*       */       ByteString bs = (ByteString)ref;
/*       */       String s = bs.toStringUtf8();
/*       */       this.smsText_ = s;
/*       */       return s;
/*       */     }
/*       */     
/*       */     public ByteString getSmsTextBytes() {
/*       */       Object ref = this.smsText_;
/*       */       if (ref instanceof String) {
/*       */         ByteString b = ByteString.copyFromUtf8((String)ref);
/*       */         this.smsText_ = b;
/*       */         return b;
/*       */       } 
/*       */       return (ByteString)ref;
/*       */     }
/*       */     
/*       */     public final boolean isInitialized() {
/*       */       byte isInitialized = this.memoizedIsInitialized;
/*       */       if (isInitialized == 1)
/*       */         return true; 
/*       */       if (isInitialized == 0)
/*       */         return false; 
/*       */       this.memoizedIsInitialized = 1;
/*       */       return true;
/*       */     }
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/*       */       if (this.priority_ != DolphinConfig.Priority.PR_None.getNumber())
/*       */         output.writeEnum(1, this.priority_); 
/*       */       if (this.event_ != DolphinConfig.EventType.Monitoring.getNumber())
/*       */         output.writeEnum(2, this.event_); 
/*       */       if (this.lowLevel_ != 0)
/*       */         output.writeInt32(3, this.lowLevel_); 
/*       */       if (this.highLevel_ != 0)
/*       */         output.writeInt32(4, this.highLevel_); 
/*       */       if (this.eventOnly_)
/*       */         output.writeBool(6, this.eventOnly_); 
/*       */       if (this.sendSmsTo_ != 0)
/*       */         output.writeUInt32(7, this.sendSmsTo_); 
/*       */       if (!getSmsTextBytes().isEmpty())
/*       */         GeneratedMessageV3.writeString(output, 8, this.smsText_); 
/*       */       this.unknownFields.writeTo(output);
/*       */     }
/*       */     
/*       */     public int getSerializedSize() {
/*       */       int size = this.memoizedSize;
/*       */       if (size != -1)
/*       */         return size; 
/*       */       size = 0;
/*       */       if (this.priority_ != DolphinConfig.Priority.PR_None.getNumber())
/*       */         size += CodedOutputStream.computeEnumSize(1, this.priority_); 
/*       */       if (this.event_ != DolphinConfig.EventType.Monitoring.getNumber())
/*       */         size += CodedOutputStream.computeEnumSize(2, this.event_); 
/*       */       if (this.lowLevel_ != 0)
/*       */         size += CodedOutputStream.computeInt32Size(3, this.lowLevel_); 
/*       */       if (this.highLevel_ != 0)
/*       */         size += CodedOutputStream.computeInt32Size(4, this.highLevel_); 
/*       */       if (this.eventOnly_)
/*       */         size += CodedOutputStream.computeBoolSize(6, this.eventOnly_); 
/*       */       if (this.sendSmsTo_ != 0)
/*       */         size += CodedOutputStream.computeUInt32Size(7, this.sendSmsTo_); 
/*       */       if (!getSmsTextBytes().isEmpty())
/*       */         size += GeneratedMessageV3.computeStringSize(8, this.smsText_); 
/*       */       size += this.unknownFields.getSerializedSize();
/*       */       this.memoizedSize = size;
/*       */       return size;
/*       */     }
/*       */     
/*       */     public boolean equals(Object obj) {
/*       */       if (obj == this)
/*       */         return true; 
/*       */       if (!(obj instanceof IO))
/*       */         return super.equals(obj); 
/*       */       IO other = (IO)obj;
/*       */       return (this.priority_ != other.priority_) ? false : ((this.event_ != other.event_) ? false : ((getLowLevel() != other.getLowLevel()) ? false : ((getHighLevel() != other.getHighLevel()) ? false : ((getEventOnly() != other.getEventOnly()) ? false : ((getSendSmsTo() != other.getSendSmsTo()) ? false : (!getSmsText().equals(other.getSmsText()) ? false : (!!this.unknownFields.equals(other.unknownFields))))))));
/*       */     }
/*       */     
/*       */     public int hashCode() {
/*       */       if (this.memoizedHashCode != 0)
/*       */         return this.memoizedHashCode; 
/*       */       int hash = 41;
/*       */       hash = 19 * hash + getDescriptor().hashCode();
/*       */       hash = 37 * hash + 1;
/*       */       hash = 53 * hash + this.priority_;
/*       */       hash = 37 * hash + 2;
/*       */       hash = 53 * hash + this.event_;
/*       */       hash = 37 * hash + 3;
/*       */       hash = 53 * hash + getLowLevel();
/*       */       hash = 37 * hash + 4;
/*       */       hash = 53 * hash + getHighLevel();
/*       */       hash = 37 * hash + 6;
/*       */       hash = 53 * hash + Internal.hashBoolean(getEventOnly());
/*       */       hash = 37 * hash + 7;
/*       */       hash = 53 * hash + getSendSmsTo();
/*       */       hash = 37 * hash + 8;
/*       */       hash = 53 * hash + getSmsText().hashCode();
/*       */       hash = 29 * hash + this.unknownFields.hashCode();
/*       */       this.memoizedHashCode = hash;
/*       */       return hash;
/*       */     }
/*       */     
/*       */     public static IO parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
/*       */       return (IO)PARSER.parseFrom(data);
/*       */     }
/*       */     
/*       */     public static IO parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*       */       return (IO)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static IO parseFrom(ByteString data) throws InvalidProtocolBufferException {
/*       */       return (IO)PARSER.parseFrom(data);
/*       */     }
/*       */     
/*       */     public static IO parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*       */       return (IO)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static IO parseFrom(byte[] data) throws InvalidProtocolBufferException {
/*       */       return (IO)PARSER.parseFrom(data);
/*       */     }
/*       */     
/*       */     public static IO parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*       */       return (IO)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static IO parseFrom(InputStream input) throws IOException {
/*       */       return (IO)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */     
/*       */     public static IO parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*       */       return (IO)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static IO parseDelimitedFrom(InputStream input) throws IOException {
/*       */       return (IO)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
/*       */     }
/*       */     
/*       */     public static IO parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*       */       return (IO)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static IO parseFrom(CodedInputStream input) throws IOException {
/*       */       return (IO)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */     
/*       */     public static IO parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*       */       return (IO)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public Builder newBuilderForType() {
/*       */       return newBuilder();
/*       */     }
/*       */     
/*       */     public static Builder newBuilder() {
/*       */       return DEFAULT_INSTANCE.toBuilder();
/*       */     }
/*       */     
/*       */     public static Builder newBuilder(IO prototype) {
/*       */       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
/*       */     }
/*       */     
/*       */     public Builder toBuilder() {
/*       */       return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder()).mergeFrom(this);
/*       */     }
/*       */     
/*       */     protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
/*       */       return new Builder(parent);
/*       */     }
/*       */     
/*       */     public static IO getDefaultInstance() {
/*       */       return DEFAULT_INSTANCE;
/*       */     }
/*       */     
/*       */     public static Parser<IO> parser() {
/*       */       return PARSER;
/*       */     }
/*       */     
/*       */     public Parser<IO> getParserForType() {
/*       */       return PARSER;
/*       */     }
/*       */     
/*       */     public IO getDefaultInstanceForType() {
/*       */       return DEFAULT_INSTANCE;
/*       */     }
/*       */     
/*       */     public static final class Builder extends GeneratedMessageV3.Builder<Builder> implements DolphinConfig.IOOrBuilder {
/*       */       private int priority_ = 0;
/*       */       private int event_ = 0;
/*       */       private int lowLevel_;
/*       */       private int highLevel_;
/*       */       private boolean eventOnly_;
/*       */       private int sendSmsTo_;
/*       */       private Object smsText_ = "";
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/*       */         return DolphinConfig.internal_static_org_traccar_protobuf_dolphin_Config_IO_descriptor;
/*       */       }
/*       */       
/*       */       protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
/*       */         return DolphinConfig.internal_static_org_traccar_protobuf_dolphin_Config_IO_fieldAccessorTable.ensureFieldAccessorsInitialized(DolphinConfig.IO.class, Builder.class);
/*       */       }
/*       */       
/*       */       private Builder() {
/*       */         maybeForceBuilderInitialization();
/*       */       }
/*       */       
/*       */       private Builder(GeneratedMessageV3.BuilderParent parent) {
/*       */         super(parent);
/*       */         maybeForceBuilderInitialization();
/*       */       }
/*       */       
/*       */       private void maybeForceBuilderInitialization() {
/*       */         if (DolphinConfig.IO.alwaysUseFieldBuilders);
/*       */       }
/*       */       
/*       */       public Builder clear() {
/*       */         super.clear();
/*       */         this.priority_ = 0;
/*       */         this.event_ = 0;
/*       */         this.lowLevel_ = 0;
/*       */         this.highLevel_ = 0;
/*       */         this.eventOnly_ = false;
/*       */         this.sendSmsTo_ = 0;
/*       */         this.smsText_ = "";
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Descriptors.Descriptor getDescriptorForType() {
/*       */         return DolphinConfig.internal_static_org_traccar_protobuf_dolphin_Config_IO_descriptor;
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO getDefaultInstanceForType() {
/*       */         return DolphinConfig.IO.getDefaultInstance();
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO build() {
/*       */         DolphinConfig.IO result = buildPartial();
/*       */         if (!result.isInitialized())
/*       */           throw newUninitializedMessageException(result); 
/*       */         return result;
/*       */       }
/*       */       
/*       */       public DolphinConfig.IO buildPartial() {
/*       */         DolphinConfig.IO result = new DolphinConfig.IO(this);
/*       */         result.priority_ = this.priority_;
/*       */         result.event_ = this.event_;
/*       */         result.lowLevel_ = this.lowLevel_;
/*       */         result.highLevel_ = this.highLevel_;
/*       */         result.eventOnly_ = this.eventOnly_;
/*       */         result.sendSmsTo_ = this.sendSmsTo_;
/*       */         result.smsText_ = this.smsText_;
/*       */         onBuilt();
/*       */         return result;
/*       */       }
/*       */       
/*       */       public Builder clone() {
/*       */         return (Builder)super.clone();
/*       */       }
/*       */       
/*       */       public Builder setField(Descriptors.FieldDescriptor field, Object value) {
/*       */         return (Builder)super.setField(field, value);
/*       */       }
/*       */       
/*       */       public Builder clearField(Descriptors.FieldDescriptor field) {
/*       */         return (Builder)super.clearField(field);
/*       */       }
/*       */       
/*       */       public Builder clearOneof(Descriptors.OneofDescriptor oneof) {
/*       */         return (Builder)super.clearOneof(oneof);
/*       */       }
/*       */       
/*       */       public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
/*       */         return (Builder)super.setRepeatedField(field, index, value);
/*       */       }
/*       */       
/*       */       public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
/*       */         return (Builder)super.addRepeatedField(field, value);
/*       */       }
/*       */       
/*       */       public Builder mergeFrom(Message other) {
/*       */         if (other instanceof DolphinConfig.IO)
/*       */           return mergeFrom((DolphinConfig.IO)other); 
/*       */         super.mergeFrom(other);
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeFrom(DolphinConfig.IO other) {
/*       */         if (other == DolphinConfig.IO.getDefaultInstance())
/*       */           return this; 
/*       */         if (other.priority_ != 0)
/*       */           setPriorityValue(other.getPriorityValue()); 
/*       */         if (other.event_ != 0)
/*       */           setEventValue(other.getEventValue()); 
/*       */         if (other.getLowLevel() != 0)
/*       */           setLowLevel(other.getLowLevel()); 
/*       */         if (other.getHighLevel() != 0)
/*       */           setHighLevel(other.getHighLevel()); 
/*       */         if (other.getEventOnly())
/*       */           setEventOnly(other.getEventOnly()); 
/*       */         if (other.getSendSmsTo() != 0)
/*       */           setSendSmsTo(other.getSendSmsTo()); 
/*       */         if (!other.getSmsText().isEmpty()) {
/*       */           this.smsText_ = other.smsText_;
/*       */           onChanged();
/*       */         } 
/*       */         mergeUnknownFields(other.unknownFields);
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       public final boolean isInitialized() {
/*       */         return true;
/*       */       }
/*       */       
/*       */       public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*       */         DolphinConfig.IO parsedMessage = null;
/*       */         try {
/*       */           parsedMessage = (DolphinConfig.IO)DolphinConfig.IO.PARSER.parsePartialFrom(input, extensionRegistry);
/*       */         } catch (InvalidProtocolBufferException e) {
/*       */           parsedMessage = (DolphinConfig.IO)e.getUnfinishedMessage();
/*       */           throw e.unwrapIOException();
/*       */         } finally {
/*       */           if (parsedMessage != null)
/*       */             mergeFrom(parsedMessage); 
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public int getPriorityValue() {
/*       */         return this.priority_;
/*       */       }
/*       */       
/*       */       public Builder setPriorityValue(int value) {
/*       */         this.priority_ = value;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.Priority getPriority() {
/*       */         DolphinConfig.Priority result = DolphinConfig.Priority.valueOf(this.priority_);
/*       */         return (result == null) ? DolphinConfig.Priority.UNRECOGNIZED : result;
/*       */       }
/*       */       
/*       */       public Builder setPriority(DolphinConfig.Priority value) {
/*       */         if (value == null)
/*       */           throw new NullPointerException(); 
/*       */         this.priority_ = value.getNumber();
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearPriority() {
/*       */         this.priority_ = 0;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       public int getEventValue() {
/*       */         return this.event_;
/*       */       }
/*       */       
/*       */       public Builder setEventValue(int value) {
/*       */         this.event_ = value;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.EventType getEvent() {
/*       */         DolphinConfig.EventType result = DolphinConfig.EventType.valueOf(this.event_);
/*       */         return (result == null) ? DolphinConfig.EventType.UNRECOGNIZED : result;
/*       */       }
/*       */       
/*       */       public Builder setEvent(DolphinConfig.EventType value) {
/*       */         if (value == null)
/*       */           throw new NullPointerException(); 
/*       */         this.event_ = value.getNumber();
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearEvent() {
/*       */         this.event_ = 0;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       public int getLowLevel() {
/*       */         return this.lowLevel_;
/*       */       }
/*       */       
/*       */       public Builder setLowLevel(int value) {
/*       */         this.lowLevel_ = value;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearLowLevel() {
/*       */         this.lowLevel_ = 0;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       public int getHighLevel() {
/*       */         return this.highLevel_;
/*       */       }
/*       */       
/*       */       public Builder setHighLevel(int value) {
/*       */         this.highLevel_ = value;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearHighLevel() {
/*       */         this.highLevel_ = 0;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       public boolean getEventOnly() {
/*       */         return this.eventOnly_;
/*       */       }
/*       */       
/*       */       public Builder setEventOnly(boolean value) {
/*       */         this.eventOnly_ = value;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearEventOnly() {
/*       */         this.eventOnly_ = false;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       public int getSendSmsTo() {
/*       */         return this.sendSmsTo_;
/*       */       }
/*       */       
/*       */       public Builder setSendSmsTo(int value) {
/*       */         this.sendSmsTo_ = value;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearSendSmsTo() {
/*       */         this.sendSmsTo_ = 0;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       public String getSmsText() {
/*       */         Object ref = this.smsText_;
/*       */         if (!(ref instanceof String)) {
/*       */           ByteString bs = (ByteString)ref;
/*       */           String s = bs.toStringUtf8();
/*       */           this.smsText_ = s;
/*       */           return s;
/*       */         } 
/*       */         return (String)ref;
/*       */       }
/*       */       
/*       */       public ByteString getSmsTextBytes() {
/*       */         Object ref = this.smsText_;
/*       */         if (ref instanceof String) {
/*       */           ByteString b = ByteString.copyFromUtf8((String)ref);
/*       */           this.smsText_ = b;
/*       */           return b;
/*       */         } 
/*       */         return (ByteString)ref;
/*       */       }
/*       */       
/*       */       public Builder setSmsText(String value) {
/*       */         if (value == null)
/*       */           throw new NullPointerException(); 
/*       */         this.smsText_ = value;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearSmsText() {
/*       */         this.smsText_ = DolphinConfig.IO.getDefaultInstance().getSmsText();
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setSmsTextBytes(ByteString value) {
/*       */         if (value == null)
/*       */           throw new NullPointerException(); 
/*       */         DolphinConfig.IO.checkByteStringIsUtf8(value);
/*       */         this.smsText_ = value;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
/*       */         return (Builder)super.setUnknownFields(unknownFields);
/*       */       }
/*       */       
/*       */       public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
/*       */         return (Builder)super.mergeUnknownFields(unknownFields);
/*       */       }
/*       */     }
/*       */   }
/*       */   
/*       */   public static interface Service_IOConditionOrBuilder extends MessageOrBuilder {
/*       */     int getIOID();
/*       */     
/*       */     int getOperatorValue();
/*       */     
/*       */     DolphinConfig.NumberOperator getOperator();
/*       */     
/*       */     long getValue();
/*       */     
/*       */     boolean getCalcDiff();
/*       */   }
/*       */   
/*       */   public static final class Service_IOCondition extends GeneratedMessageV3 implements Service_IOConditionOrBuilder {
/*       */     private static final long serialVersionUID = 0L;
/*       */     public static final int IO_ID_FIELD_NUMBER = 1;
/*       */     private int iOID_;
/*       */     public static final int OPERATOR_FIELD_NUMBER = 2;
/*       */     private int operator_;
/*       */     public static final int VALUE_FIELD_NUMBER = 3;
/*       */     private long value_;
/*       */     public static final int CALCDIFF_FIELD_NUMBER = 4;
/*       */     private boolean calcDiff_;
/*       */     private byte memoizedIsInitialized = -1;
/*       */     private static final Service_IOCondition DEFAULT_INSTANCE = new Service_IOCondition();
/*       */     
/*       */     private static final Parser<Service_IOCondition> PARSER = (Parser<Service_IOCondition>)new AbstractParser<Service_IOCondition>() {
/*       */         public DolphinConfig.Service_IOCondition parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*       */           return new DolphinConfig.Service_IOCondition(input, extensionRegistry);
/*       */         }
/*       */       };
/*       */     
/*       */     private Service_IOCondition(GeneratedMessageV3.Builder<?> builder) {
/*       */       super(builder);
/*       */     }
/*       */     
/*       */     private Service_IOCondition() {
/*       */       this.operator_ = 0;
/*       */     }
/*       */     
/*       */     protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) {
/*       */       return new Service_IOCondition();
/*       */     }
/*       */     
/*       */     public final UnknownFieldSet getUnknownFields() {
/*       */       return this.unknownFields;
/*       */     }
/*       */     
/*       */     private Service_IOCondition(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*       */       this();
/*       */       if (extensionRegistry == null)
/*       */         throw new NullPointerException(); 
/*       */       UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
/*       */       try {
/*       */         boolean done = false;
/*       */         while (!done) {
/*       */           int rawValue;
/*       */           int tag = input.readTag();
/*       */           switch (tag) {
/*       */             case 0:
/*       */               done = true;
/*       */               continue;
/*       */             case 8:
/*       */               this.iOID_ = input.readUInt32();
/*       */               continue;
/*       */             case 16:
/*       */               rawValue = input.readEnum();
/*       */               this.operator_ = rawValue;
/*       */               continue;
/*       */             case 24:
/*       */               this.value_ = input.readInt64();
/*       */               continue;
/*       */             case 32:
/*       */               this.calcDiff_ = input.readBool();
/*       */               continue;
/*       */           } 
/*       */           if (!parseUnknownField(input, unknownFields, extensionRegistry, tag))
/*       */             done = true; 
/*       */         } 
/*       */       } catch (InvalidProtocolBufferException e) {
/*       */         throw e.setUnfinishedMessage(this);
/*       */       } catch (IOException e) {
/*       */         throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this);
/*       */       } finally {
/*       */         this.unknownFields = unknownFields.build();
/*       */         makeExtensionsImmutable();
/*       */       } 
/*       */     }
/*       */     
/*       */     public static final Descriptors.Descriptor getDescriptor() {
/*       */       return DolphinConfig.internal_static_org_traccar_protobuf_dolphin_Config_Service_IOCondition_descriptor;
/*       */     }
/*       */     
/*       */     protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
/*       */       return DolphinConfig.internal_static_org_traccar_protobuf_dolphin_Config_Service_IOCondition_fieldAccessorTable.ensureFieldAccessorsInitialized(Service_IOCondition.class, Builder.class);
/*       */     }
/*       */     
/*       */     public int getIOID() {
/*       */       return this.iOID_;
/*       */     }
/*       */     
/*       */     public int getOperatorValue() {
/*       */       return this.operator_;
/*       */     }
/*       */     
/*       */     public DolphinConfig.NumberOperator getOperator() {
/*       */       DolphinConfig.NumberOperator result = DolphinConfig.NumberOperator.valueOf(this.operator_);
/*       */       return (result == null) ? DolphinConfig.NumberOperator.UNRECOGNIZED : result;
/*       */     }
/*       */     
/*       */     public long getValue() {
/*       */       return this.value_;
/*       */     }
/*       */     
/*       */     public boolean getCalcDiff() {
/*       */       return this.calcDiff_;
/*       */     }
/*       */     
/*       */     public final boolean isInitialized() {
/*       */       byte isInitialized = this.memoizedIsInitialized;
/*       */       if (isInitialized == 1)
/*       */         return true; 
/*       */       if (isInitialized == 0)
/*       */         return false; 
/*       */       this.memoizedIsInitialized = 1;
/*       */       return true;
/*       */     }
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/*       */       if (this.iOID_ != 0)
/*       */         output.writeUInt32(1, this.iOID_); 
/*       */       if (this.operator_ != DolphinConfig.NumberOperator.Equal.getNumber())
/*       */         output.writeEnum(2, this.operator_); 
/*       */       if (this.value_ != 0L)
/*       */         output.writeInt64(3, this.value_); 
/*       */       if (this.calcDiff_)
/*       */         output.writeBool(4, this.calcDiff_); 
/*       */       this.unknownFields.writeTo(output);
/*       */     }
/*       */     
/*       */     public int getSerializedSize() {
/*       */       int size = this.memoizedSize;
/*       */       if (size != -1)
/*       */         return size; 
/*       */       size = 0;
/*       */       if (this.iOID_ != 0)
/*       */         size += CodedOutputStream.computeUInt32Size(1, this.iOID_); 
/*       */       if (this.operator_ != DolphinConfig.NumberOperator.Equal.getNumber())
/*       */         size += CodedOutputStream.computeEnumSize(2, this.operator_); 
/*       */       if (this.value_ != 0L)
/*       */         size += CodedOutputStream.computeInt64Size(3, this.value_); 
/*       */       if (this.calcDiff_)
/*       */         size += CodedOutputStream.computeBoolSize(4, this.calcDiff_); 
/*       */       size += this.unknownFields.getSerializedSize();
/*       */       this.memoizedSize = size;
/*       */       return size;
/*       */     }
/*       */     
/*       */     public boolean equals(Object obj) {
/*       */       if (obj == this)
/*       */         return true; 
/*       */       if (!(obj instanceof Service_IOCondition))
/*       */         return super.equals(obj); 
/*       */       Service_IOCondition other = (Service_IOCondition)obj;
/*       */       return (getIOID() != other.getIOID()) ? false : ((this.operator_ != other.operator_) ? false : ((getValue() != other.getValue()) ? false : ((getCalcDiff() != other.getCalcDiff()) ? false : (!!this.unknownFields.equals(other.unknownFields)))));
/*       */     }
/*       */     
/*       */     public int hashCode() {
/*       */       if (this.memoizedHashCode != 0)
/*       */         return this.memoizedHashCode; 
/*       */       int hash = 41;
/*       */       hash = 19 * hash + getDescriptor().hashCode();
/*       */       hash = 37 * hash + 1;
/*       */       hash = 53 * hash + getIOID();
/*       */       hash = 37 * hash + 2;
/*       */       hash = 53 * hash + this.operator_;
/*       */       hash = 37 * hash + 3;
/*       */       hash = 53 * hash + Internal.hashLong(getValue());
/*       */       hash = 37 * hash + 4;
/*       */       hash = 53 * hash + Internal.hashBoolean(getCalcDiff());
/*       */       hash = 29 * hash + this.unknownFields.hashCode();
/*       */       this.memoizedHashCode = hash;
/*       */       return hash;
/*       */     }
/*       */     
/*       */     public static Service_IOCondition parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
/*       */       return (Service_IOCondition)PARSER.parseFrom(data);
/*       */     }
/*       */     
/*       */     public static Service_IOCondition parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*       */       return (Service_IOCondition)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static Service_IOCondition parseFrom(ByteString data) throws InvalidProtocolBufferException {
/*       */       return (Service_IOCondition)PARSER.parseFrom(data);
/*       */     }
/*       */     
/*       */     public static Service_IOCondition parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*       */       return (Service_IOCondition)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static Service_IOCondition parseFrom(byte[] data) throws InvalidProtocolBufferException {
/*       */       return (Service_IOCondition)PARSER.parseFrom(data);
/*       */     }
/*       */     
/*       */     public static Service_IOCondition parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*       */       return (Service_IOCondition)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static Service_IOCondition parseFrom(InputStream input) throws IOException {
/*       */       return (Service_IOCondition)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */     
/*       */     public static Service_IOCondition parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*       */       return (Service_IOCondition)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static Service_IOCondition parseDelimitedFrom(InputStream input) throws IOException {
/*       */       return (Service_IOCondition)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
/*       */     }
/*       */     
/*       */     public static Service_IOCondition parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*       */       return (Service_IOCondition)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static Service_IOCondition parseFrom(CodedInputStream input) throws IOException {
/*       */       return (Service_IOCondition)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */     
/*       */     public static Service_IOCondition parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*       */       return (Service_IOCondition)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public Builder newBuilderForType() {
/*       */       return newBuilder();
/*       */     }
/*       */     
/*       */     public static Builder newBuilder() {
/*       */       return DEFAULT_INSTANCE.toBuilder();
/*       */     }
/*       */     
/*       */     public static Builder newBuilder(Service_IOCondition prototype) {
/*       */       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
/*       */     }
/*       */     
/*       */     public Builder toBuilder() {
/*       */       return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder()).mergeFrom(this);
/*       */     }
/*       */     
/*       */     protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
/*       */       return new Builder(parent);
/*       */     }
/*       */     
/*       */     public static Service_IOCondition getDefaultInstance() {
/*       */       return DEFAULT_INSTANCE;
/*       */     }
/*       */     
/*       */     public static Parser<Service_IOCondition> parser() {
/*       */       return PARSER;
/*       */     }
/*       */     
/*       */     public Parser<Service_IOCondition> getParserForType() {
/*       */       return PARSER;
/*       */     }
/*       */     
/*       */     public Service_IOCondition getDefaultInstanceForType() {
/*       */       return DEFAULT_INSTANCE;
/*       */     }
/*       */     
/*       */     public static final class Builder extends GeneratedMessageV3.Builder<Builder> implements DolphinConfig.Service_IOConditionOrBuilder {
/*       */       private int iOID_;
/*       */       private int operator_ = 0;
/*       */       private long value_;
/*       */       private boolean calcDiff_;
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/*       */         return DolphinConfig.internal_static_org_traccar_protobuf_dolphin_Config_Service_IOCondition_descriptor;
/*       */       }
/*       */       
/*       */       protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
/*       */         return DolphinConfig.internal_static_org_traccar_protobuf_dolphin_Config_Service_IOCondition_fieldAccessorTable.ensureFieldAccessorsInitialized(DolphinConfig.Service_IOCondition.class, Builder.class);
/*       */       }
/*       */       
/*       */       private Builder() {
/*       */         maybeForceBuilderInitialization();
/*       */       }
/*       */       
/*       */       private Builder(GeneratedMessageV3.BuilderParent parent) {
/*       */         super(parent);
/*       */         maybeForceBuilderInitialization();
/*       */       }
/*       */       
/*       */       private void maybeForceBuilderInitialization() {
/*       */         if (DolphinConfig.Service_IOCondition.alwaysUseFieldBuilders);
/*       */       }
/*       */       
/*       */       public Builder clear() {
/*       */         super.clear();
/*       */         this.iOID_ = 0;
/*       */         this.operator_ = 0;
/*       */         this.value_ = 0L;
/*       */         this.calcDiff_ = false;
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Descriptors.Descriptor getDescriptorForType() {
/*       */         return DolphinConfig.internal_static_org_traccar_protobuf_dolphin_Config_Service_IOCondition_descriptor;
/*       */       }
/*       */       
/*       */       public DolphinConfig.Service_IOCondition getDefaultInstanceForType() {
/*       */         return DolphinConfig.Service_IOCondition.getDefaultInstance();
/*       */       }
/*       */       
/*       */       public DolphinConfig.Service_IOCondition build() {
/*       */         DolphinConfig.Service_IOCondition result = buildPartial();
/*       */         if (!result.isInitialized())
/*       */           throw newUninitializedMessageException(result); 
/*       */         return result;
/*       */       }
/*       */       
/*       */       public DolphinConfig.Service_IOCondition buildPartial() {
/*       */         DolphinConfig.Service_IOCondition result = new DolphinConfig.Service_IOCondition(this);
/*       */         result.iOID_ = this.iOID_;
/*       */         result.operator_ = this.operator_;
/*       */         result.value_ = this.value_;
/*       */         result.calcDiff_ = this.calcDiff_;
/*       */         onBuilt();
/*       */         return result;
/*       */       }
/*       */       
/*       */       public Builder clone() {
/*       */         return (Builder)super.clone();
/*       */       }
/*       */       
/*       */       public Builder setField(Descriptors.FieldDescriptor field, Object value) {
/*       */         return (Builder)super.setField(field, value);
/*       */       }
/*       */       
/*       */       public Builder clearField(Descriptors.FieldDescriptor field) {
/*       */         return (Builder)super.clearField(field);
/*       */       }
/*       */       
/*       */       public Builder clearOneof(Descriptors.OneofDescriptor oneof) {
/*       */         return (Builder)super.clearOneof(oneof);
/*       */       }
/*       */       
/*       */       public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
/*       */         return (Builder)super.setRepeatedField(field, index, value);
/*       */       }
/*       */       
/*       */       public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
/*       */         return (Builder)super.addRepeatedField(field, value);
/*       */       }
/*       */       
/*       */       public Builder mergeFrom(Message other) {
/*       */         if (other instanceof DolphinConfig.Service_IOCondition)
/*       */           return mergeFrom((DolphinConfig.Service_IOCondition)other); 
/*       */         super.mergeFrom(other);
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeFrom(DolphinConfig.Service_IOCondition other) {
/*       */         if (other == DolphinConfig.Service_IOCondition.getDefaultInstance())
/*       */           return this; 
/*       */         if (other.getIOID() != 0)
/*       */           setIOID(other.getIOID()); 
/*       */         if (other.operator_ != 0)
/*       */           setOperatorValue(other.getOperatorValue()); 
/*       */         if (other.getValue() != 0L)
/*       */           setValue(other.getValue()); 
/*       */         if (other.getCalcDiff())
/*       */           setCalcDiff(other.getCalcDiff()); 
/*       */         mergeUnknownFields(other.unknownFields);
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       public final boolean isInitialized() {
/*       */         return true;
/*       */       }
/*       */       
/*       */       public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*       */         DolphinConfig.Service_IOCondition parsedMessage = null;
/*       */         try {
/*       */           parsedMessage = (DolphinConfig.Service_IOCondition)DolphinConfig.Service_IOCondition.PARSER.parsePartialFrom(input, extensionRegistry);
/*       */         } catch (InvalidProtocolBufferException e) {
/*       */           parsedMessage = (DolphinConfig.Service_IOCondition)e.getUnfinishedMessage();
/*       */           throw e.unwrapIOException();
/*       */         } finally {
/*       */           if (parsedMessage != null)
/*       */             mergeFrom(parsedMessage); 
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public int getIOID() {
/*       */         return this.iOID_;
/*       */       }
/*       */       
/*       */       public Builder setIOID(int value) {
/*       */         this.iOID_ = value;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearIOID() {
/*       */         this.iOID_ = 0;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       public int getOperatorValue() {
/*       */         return this.operator_;
/*       */       }
/*       */       
/*       */       public Builder setOperatorValue(int value) {
/*       */         this.operator_ = value;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.NumberOperator getOperator() {
/*       */         DolphinConfig.NumberOperator result = DolphinConfig.NumberOperator.valueOf(this.operator_);
/*       */         return (result == null) ? DolphinConfig.NumberOperator.UNRECOGNIZED : result;
/*       */       }
/*       */       
/*       */       public Builder setOperator(DolphinConfig.NumberOperator value) {
/*       */         if (value == null)
/*       */           throw new NullPointerException(); 
/*       */         this.operator_ = value.getNumber();
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearOperator() {
/*       */         this.operator_ = 0;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       public long getValue() {
/*       */         return this.value_;
/*       */       }
/*       */       
/*       */       public Builder setValue(long value) {
/*       */         this.value_ = value;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearValue() {
/*       */         this.value_ = 0L;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       public boolean getCalcDiff() {
/*       */         return this.calcDiff_;
/*       */       }
/*       */       
/*       */       public Builder setCalcDiff(boolean value) {
/*       */         this.calcDiff_ = value;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearCalcDiff() {
/*       */         this.calcDiff_ = false;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
/*       */         return (Builder)super.setUnknownFields(unknownFields);
/*       */       }
/*       */       
/*       */       public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
/*       */         return (Builder)super.mergeUnknownFields(unknownFields);
/*       */       }
/*       */     }
/*       */   }
/*       */   
/*       */   public static interface Service_IOConditionGroupOrBuilder extends MessageOrBuilder {
/*       */     int getOperatorValue();
/*       */     
/*       */     DolphinConfig.ConditionOperator getOperator();
/*       */     
/*       */     List<DolphinConfig.Service_IOCondition> getIOConditionsList();
/*       */     
/*       */     DolphinConfig.Service_IOCondition getIOConditions(int param1Int);
/*       */     
/*       */     int getIOConditionsCount();
/*       */     
/*       */     List<? extends DolphinConfig.Service_IOConditionOrBuilder> getIOConditionsOrBuilderList();
/*       */     
/*       */     DolphinConfig.Service_IOConditionOrBuilder getIOConditionsOrBuilder(int param1Int);
/*       */   }
/*       */   
/*       */   public static final class Service_IOConditionGroup extends GeneratedMessageV3 implements Service_IOConditionGroupOrBuilder {
/*       */     private static final long serialVersionUID = 0L;
/*       */     public static final int OPERATOR_FIELD_NUMBER = 1;
/*       */     private int operator_;
/*       */     public static final int IO_CONDITIONS_FIELD_NUMBER = 2;
/*       */     private List<DolphinConfig.Service_IOCondition> iOConditions_;
/*       */     private byte memoizedIsInitialized = -1;
/*       */     private static final Service_IOConditionGroup DEFAULT_INSTANCE = new Service_IOConditionGroup();
/*       */     
/*       */     private static final Parser<Service_IOConditionGroup> PARSER = (Parser<Service_IOConditionGroup>)new AbstractParser<Service_IOConditionGroup>() {
/*       */         public DolphinConfig.Service_IOConditionGroup parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*       */           return new DolphinConfig.Service_IOConditionGroup(input, extensionRegistry);
/*       */         }
/*       */       };
/*       */     
/*       */     private Service_IOConditionGroup(GeneratedMessageV3.Builder<?> builder) {
/*       */       super(builder);
/*       */     }
/*       */     
/*       */     private Service_IOConditionGroup() {
/*       */       this.operator_ = 0;
/*       */       this.iOConditions_ = Collections.emptyList();
/*       */     }
/*       */     
/*       */     protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) {
/*       */       return new Service_IOConditionGroup();
/*       */     }
/*       */     
/*       */     public final UnknownFieldSet getUnknownFields() {
/*       */       return this.unknownFields;
/*       */     }
/*       */     
/*       */     private Service_IOConditionGroup(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*       */       this();
/*       */       if (extensionRegistry == null)
/*       */         throw new NullPointerException(); 
/*       */       int mutable_bitField0_ = 0;
/*       */       UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
/*       */       try {
/*       */         boolean done = false;
/*       */         while (!done) {
/*       */           int rawValue;
/*       */           int tag = input.readTag();
/*       */           switch (tag) {
/*       */             case 0:
/*       */               done = true;
/*       */               continue;
/*       */             case 8:
/*       */               rawValue = input.readEnum();
/*       */               this.operator_ = rawValue;
/*       */               continue;
/*       */             case 18:
/*       */               if ((mutable_bitField0_ & 0x1) == 0) {
/*       */                 this.iOConditions_ = new ArrayList<>();
/*       */                 mutable_bitField0_ |= 0x1;
/*       */               } 
/*       */               this.iOConditions_.add(input.readMessage(DolphinConfig.Service_IOCondition.parser(), extensionRegistry));
/*       */               continue;
/*       */           } 
/*       */           if (!parseUnknownField(input, unknownFields, extensionRegistry, tag))
/*       */             done = true; 
/*       */         } 
/*       */       } catch (InvalidProtocolBufferException e) {
/*       */         throw e.setUnfinishedMessage(this);
/*       */       } catch (IOException e) {
/*       */         throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this);
/*       */       } finally {
/*       */         if ((mutable_bitField0_ & 0x1) != 0)
/*       */           this.iOConditions_ = Collections.unmodifiableList(this.iOConditions_); 
/*       */         this.unknownFields = unknownFields.build();
/*       */         makeExtensionsImmutable();
/*       */       } 
/*       */     }
/*       */     
/*       */     public static final Descriptors.Descriptor getDescriptor() {
/*       */       return DolphinConfig.internal_static_org_traccar_protobuf_dolphin_Config_Service_IOConditionGroup_descriptor;
/*       */     }
/*       */     
/*       */     protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
/*       */       return DolphinConfig.internal_static_org_traccar_protobuf_dolphin_Config_Service_IOConditionGroup_fieldAccessorTable.ensureFieldAccessorsInitialized(Service_IOConditionGroup.class, Builder.class);
/*       */     }
/*       */     
/*       */     public int getOperatorValue() {
/*       */       return this.operator_;
/*       */     }
/*       */     
/*       */     public DolphinConfig.ConditionOperator getOperator() {
/*       */       DolphinConfig.ConditionOperator result = DolphinConfig.ConditionOperator.valueOf(this.operator_);
/*       */       return (result == null) ? DolphinConfig.ConditionOperator.UNRECOGNIZED : result;
/*       */     }
/*       */     
/*       */     public List<DolphinConfig.Service_IOCondition> getIOConditionsList() {
/*       */       return this.iOConditions_;
/*       */     }
/*       */     
/*       */     public List<? extends DolphinConfig.Service_IOConditionOrBuilder> getIOConditionsOrBuilderList() {
/*       */       return (List)this.iOConditions_;
/*       */     }
/*       */     
/*       */     public int getIOConditionsCount() {
/*       */       return this.iOConditions_.size();
/*       */     }
/*       */     
/*       */     public DolphinConfig.Service_IOCondition getIOConditions(int index) {
/*       */       return this.iOConditions_.get(index);
/*       */     }
/*       */     
/*       */     public DolphinConfig.Service_IOConditionOrBuilder getIOConditionsOrBuilder(int index) {
/*       */       return this.iOConditions_.get(index);
/*       */     }
/*       */     
/*       */     public final boolean isInitialized() {
/*       */       byte isInitialized = this.memoizedIsInitialized;
/*       */       if (isInitialized == 1)
/*       */         return true; 
/*       */       if (isInitialized == 0)
/*       */         return false; 
/*       */       this.memoizedIsInitialized = 1;
/*       */       return true;
/*       */     }
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/*       */       if (this.operator_ != DolphinConfig.ConditionOperator.AND.getNumber())
/*       */         output.writeEnum(1, this.operator_); 
/*       */       for (int i = 0; i < this.iOConditions_.size(); i++)
/*       */         output.writeMessage(2, (MessageLite)this.iOConditions_.get(i)); 
/*       */       this.unknownFields.writeTo(output);
/*       */     }
/*       */     
/*       */     public int getSerializedSize() {
/*       */       int size = this.memoizedSize;
/*       */       if (size != -1)
/*       */         return size; 
/*       */       size = 0;
/*       */       if (this.operator_ != DolphinConfig.ConditionOperator.AND.getNumber())
/*       */         size += CodedOutputStream.computeEnumSize(1, this.operator_); 
/*       */       for (int i = 0; i < this.iOConditions_.size(); i++)
/*       */         size += CodedOutputStream.computeMessageSize(2, (MessageLite)this.iOConditions_.get(i)); 
/*       */       size += this.unknownFields.getSerializedSize();
/*       */       this.memoizedSize = size;
/*       */       return size;
/*       */     }
/*       */     
/*       */     public boolean equals(Object obj) {
/*       */       if (obj == this)
/*       */         return true; 
/*       */       if (!(obj instanceof Service_IOConditionGroup))
/*       */         return super.equals(obj); 
/*       */       Service_IOConditionGroup other = (Service_IOConditionGroup)obj;
/*       */       return (this.operator_ != other.operator_) ? false : (!getIOConditionsList().equals(other.getIOConditionsList()) ? false : (!!this.unknownFields.equals(other.unknownFields)));
/*       */     }
/*       */     
/*       */     public int hashCode() {
/*       */       if (this.memoizedHashCode != 0)
/*       */         return this.memoizedHashCode; 
/*       */       int hash = 41;
/*       */       hash = 19 * hash + getDescriptor().hashCode();
/*       */       hash = 37 * hash + 1;
/*       */       hash = 53 * hash + this.operator_;
/*       */       if (getIOConditionsCount() > 0) {
/*       */         hash = 37 * hash + 2;
/*       */         hash = 53 * hash + getIOConditionsList().hashCode();
/*       */       } 
/*       */       hash = 29 * hash + this.unknownFields.hashCode();
/*       */       this.memoizedHashCode = hash;
/*       */       return hash;
/*       */     }
/*       */     
/*       */     public static Service_IOConditionGroup parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
/*       */       return (Service_IOConditionGroup)PARSER.parseFrom(data);
/*       */     }
/*       */     
/*       */     public static Service_IOConditionGroup parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*       */       return (Service_IOConditionGroup)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static Service_IOConditionGroup parseFrom(ByteString data) throws InvalidProtocolBufferException {
/*       */       return (Service_IOConditionGroup)PARSER.parseFrom(data);
/*       */     }
/*       */     
/*       */     public static Service_IOConditionGroup parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*       */       return (Service_IOConditionGroup)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static Service_IOConditionGroup parseFrom(byte[] data) throws InvalidProtocolBufferException {
/*       */       return (Service_IOConditionGroup)PARSER.parseFrom(data);
/*       */     }
/*       */     
/*       */     public static Service_IOConditionGroup parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*       */       return (Service_IOConditionGroup)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static Service_IOConditionGroup parseFrom(InputStream input) throws IOException {
/*       */       return (Service_IOConditionGroup)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */     
/*       */     public static Service_IOConditionGroup parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*       */       return (Service_IOConditionGroup)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static Service_IOConditionGroup parseDelimitedFrom(InputStream input) throws IOException {
/*       */       return (Service_IOConditionGroup)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
/*       */     }
/*       */     
/*       */     public static Service_IOConditionGroup parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*       */       return (Service_IOConditionGroup)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static Service_IOConditionGroup parseFrom(CodedInputStream input) throws IOException {
/*       */       return (Service_IOConditionGroup)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */     
/*       */     public static Service_IOConditionGroup parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*       */       return (Service_IOConditionGroup)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public Builder newBuilderForType() {
/*       */       return newBuilder();
/*       */     }
/*       */     
/*       */     public static Builder newBuilder() {
/*       */       return DEFAULT_INSTANCE.toBuilder();
/*       */     }
/*       */     
/*       */     public static Builder newBuilder(Service_IOConditionGroup prototype) {
/*       */       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
/*       */     }
/*       */     
/*       */     public Builder toBuilder() {
/*       */       return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder()).mergeFrom(this);
/*       */     }
/*       */     
/*       */     protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
/*       */       return new Builder(parent);
/*       */     }
/*       */     
/*       */     public static Service_IOConditionGroup getDefaultInstance() {
/*       */       return DEFAULT_INSTANCE;
/*       */     }
/*       */     
/*       */     public static Parser<Service_IOConditionGroup> parser() {
/*       */       return PARSER;
/*       */     }
/*       */     
/*       */     public Parser<Service_IOConditionGroup> getParserForType() {
/*       */       return PARSER;
/*       */     }
/*       */     
/*       */     public Service_IOConditionGroup getDefaultInstanceForType() {
/*       */       return DEFAULT_INSTANCE;
/*       */     }
/*       */     
/*       */     public static final class Builder extends GeneratedMessageV3.Builder<Builder> implements DolphinConfig.Service_IOConditionGroupOrBuilder {
/*       */       private int bitField0_;
/*       */       private int operator_ = 0;
/*       */       private List<DolphinConfig.Service_IOCondition> iOConditions_ = Collections.emptyList();
/*       */       private RepeatedFieldBuilderV3<DolphinConfig.Service_IOCondition, DolphinConfig.Service_IOCondition.Builder, DolphinConfig.Service_IOConditionOrBuilder> iOConditionsBuilder_;
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/*       */         return DolphinConfig.internal_static_org_traccar_protobuf_dolphin_Config_Service_IOConditionGroup_descriptor;
/*       */       }
/*       */       
/*       */       protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
/*       */         return DolphinConfig.internal_static_org_traccar_protobuf_dolphin_Config_Service_IOConditionGroup_fieldAccessorTable.ensureFieldAccessorsInitialized(DolphinConfig.Service_IOConditionGroup.class, Builder.class);
/*       */       }
/*       */       
/*       */       private Builder() {
/*       */         maybeForceBuilderInitialization();
/*       */       }
/*       */       
/*       */       private Builder(GeneratedMessageV3.BuilderParent parent) {
/*       */         super(parent);
/*       */         maybeForceBuilderInitialization();
/*       */       }
/*       */       
/*       */       private void maybeForceBuilderInitialization() {
/*       */         if (DolphinConfig.Service_IOConditionGroup.alwaysUseFieldBuilders)
/*       */           getIOConditionsFieldBuilder(); 
/*       */       }
/*       */       
/*       */       public Builder clear() {
/*       */         super.clear();
/*       */         this.operator_ = 0;
/*       */         if (this.iOConditionsBuilder_ == null) {
/*       */           this.iOConditions_ = Collections.emptyList();
/*       */           this.bitField0_ &= 0xFFFFFFFE;
/*       */         } else {
/*       */           this.iOConditionsBuilder_.clear();
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Descriptors.Descriptor getDescriptorForType() {
/*       */         return DolphinConfig.internal_static_org_traccar_protobuf_dolphin_Config_Service_IOConditionGroup_descriptor;
/*       */       }
/*       */       
/*       */       public DolphinConfig.Service_IOConditionGroup getDefaultInstanceForType() {
/*       */         return DolphinConfig.Service_IOConditionGroup.getDefaultInstance();
/*       */       }
/*       */       
/*       */       public DolphinConfig.Service_IOConditionGroup build() {
/*       */         DolphinConfig.Service_IOConditionGroup result = buildPartial();
/*       */         if (!result.isInitialized())
/*       */           throw newUninitializedMessageException(result); 
/*       */         return result;
/*       */       }
/*       */       
/*       */       public DolphinConfig.Service_IOConditionGroup buildPartial() {
/*       */         DolphinConfig.Service_IOConditionGroup result = new DolphinConfig.Service_IOConditionGroup(this);
/*       */         int from_bitField0_ = this.bitField0_;
/*       */         result.operator_ = this.operator_;
/*       */         if (this.iOConditionsBuilder_ == null) {
/*       */           if ((this.bitField0_ & 0x1) != 0) {
/*       */             this.iOConditions_ = Collections.unmodifiableList(this.iOConditions_);
/*       */             this.bitField0_ &= 0xFFFFFFFE;
/*       */           } 
/*       */           result.iOConditions_ = this.iOConditions_;
/*       */         } else {
/*       */           result.iOConditions_ = this.iOConditionsBuilder_.build();
/*       */         } 
/*       */         onBuilt();
/*       */         return result;
/*       */       }
/*       */       
/*       */       public Builder clone() {
/*       */         return (Builder)super.clone();
/*       */       }
/*       */       
/*       */       public Builder setField(Descriptors.FieldDescriptor field, Object value) {
/*       */         return (Builder)super.setField(field, value);
/*       */       }
/*       */       
/*       */       public Builder clearField(Descriptors.FieldDescriptor field) {
/*       */         return (Builder)super.clearField(field);
/*       */       }
/*       */       
/*       */       public Builder clearOneof(Descriptors.OneofDescriptor oneof) {
/*       */         return (Builder)super.clearOneof(oneof);
/*       */       }
/*       */       
/*       */       public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
/*       */         return (Builder)super.setRepeatedField(field, index, value);
/*       */       }
/*       */       
/*       */       public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
/*       */         return (Builder)super.addRepeatedField(field, value);
/*       */       }
/*       */       
/*       */       public Builder mergeFrom(Message other) {
/*       */         if (other instanceof DolphinConfig.Service_IOConditionGroup)
/*       */           return mergeFrom((DolphinConfig.Service_IOConditionGroup)other); 
/*       */         super.mergeFrom(other);
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeFrom(DolphinConfig.Service_IOConditionGroup other) {
/*       */         if (other == DolphinConfig.Service_IOConditionGroup.getDefaultInstance())
/*       */           return this; 
/*       */         if (other.operator_ != 0)
/*       */           setOperatorValue(other.getOperatorValue()); 
/*       */         if (this.iOConditionsBuilder_ == null) {
/*       */           if (!other.iOConditions_.isEmpty()) {
/*       */             if (this.iOConditions_.isEmpty()) {
/*       */               this.iOConditions_ = other.iOConditions_;
/*       */               this.bitField0_ &= 0xFFFFFFFE;
/*       */             } else {
/*       */               ensureIOConditionsIsMutable();
/*       */               this.iOConditions_.addAll(other.iOConditions_);
/*       */             } 
/*       */             onChanged();
/*       */           } 
/*       */         } else if (!other.iOConditions_.isEmpty()) {
/*       */           if (this.iOConditionsBuilder_.isEmpty()) {
/*       */             this.iOConditionsBuilder_.dispose();
/*       */             this.iOConditionsBuilder_ = null;
/*       */             this.iOConditions_ = other.iOConditions_;
/*       */             this.bitField0_ &= 0xFFFFFFFE;
/*       */             this.iOConditionsBuilder_ = DolphinConfig.Service_IOConditionGroup.alwaysUseFieldBuilders ? getIOConditionsFieldBuilder() : null;
/*       */           } else {
/*       */             this.iOConditionsBuilder_.addAllMessages(other.iOConditions_);
/*       */           } 
/*       */         } 
/*       */         mergeUnknownFields(other.unknownFields);
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       public final boolean isInitialized() {
/*       */         return true;
/*       */       }
/*       */       
/*       */       public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*       */         DolphinConfig.Service_IOConditionGroup parsedMessage = null;
/*       */         try {
/*       */           parsedMessage = (DolphinConfig.Service_IOConditionGroup)DolphinConfig.Service_IOConditionGroup.PARSER.parsePartialFrom(input, extensionRegistry);
/*       */         } catch (InvalidProtocolBufferException e) {
/*       */           parsedMessage = (DolphinConfig.Service_IOConditionGroup)e.getUnfinishedMessage();
/*       */           throw e.unwrapIOException();
/*       */         } finally {
/*       */           if (parsedMessage != null)
/*       */             mergeFrom(parsedMessage); 
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public int getOperatorValue() {
/*       */         return this.operator_;
/*       */       }
/*       */       
/*       */       public Builder setOperatorValue(int value) {
/*       */         this.operator_ = value;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.ConditionOperator getOperator() {
/*       */         DolphinConfig.ConditionOperator result = DolphinConfig.ConditionOperator.valueOf(this.operator_);
/*       */         return (result == null) ? DolphinConfig.ConditionOperator.UNRECOGNIZED : result;
/*       */       }
/*       */       
/*       */       public Builder setOperator(DolphinConfig.ConditionOperator value) {
/*       */         if (value == null)
/*       */           throw new NullPointerException(); 
/*       */         this.operator_ = value.getNumber();
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearOperator() {
/*       */         this.operator_ = 0;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       private void ensureIOConditionsIsMutable() {
/*       */         if ((this.bitField0_ & 0x1) == 0) {
/*       */           this.iOConditions_ = new ArrayList<>(this.iOConditions_);
/*       */           this.bitField0_ |= 0x1;
/*       */         } 
/*       */       }
/*       */       
/*       */       public List<DolphinConfig.Service_IOCondition> getIOConditionsList() {
/*       */         return (this.iOConditionsBuilder_ == null) ? Collections.unmodifiableList(this.iOConditions_) : this.iOConditionsBuilder_.getMessageList();
/*       */       }
/*       */       
/*       */       public int getIOConditionsCount() {
/*       */         return (this.iOConditionsBuilder_ == null) ? this.iOConditions_.size() : this.iOConditionsBuilder_.getCount();
/*       */       }
/*       */       
/*       */       public DolphinConfig.Service_IOCondition getIOConditions(int index) {
/*       */         return (this.iOConditionsBuilder_ == null) ? this.iOConditions_.get(index) : (DolphinConfig.Service_IOCondition)this.iOConditionsBuilder_.getMessage(index);
/*       */       }
/*       */       
/*       */       public Builder setIOConditions(int index, DolphinConfig.Service_IOCondition value) {
/*       */         if (this.iOConditionsBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           ensureIOConditionsIsMutable();
/*       */           this.iOConditions_.set(index, value);
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOConditionsBuilder_.setMessage(index, (AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setIOConditions(int index, DolphinConfig.Service_IOCondition.Builder builderForValue) {
/*       */         if (this.iOConditionsBuilder_ == null) {
/*       */           ensureIOConditionsIsMutable();
/*       */           this.iOConditions_.set(index, builderForValue.build());
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOConditionsBuilder_.setMessage(index, (AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder addIOConditions(DolphinConfig.Service_IOCondition value) {
/*       */         if (this.iOConditionsBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           ensureIOConditionsIsMutable();
/*       */           this.iOConditions_.add(value);
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOConditionsBuilder_.addMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder addIOConditions(int index, DolphinConfig.Service_IOCondition value) {
/*       */         if (this.iOConditionsBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           ensureIOConditionsIsMutable();
/*       */           this.iOConditions_.add(index, value);
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOConditionsBuilder_.addMessage(index, (AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder addIOConditions(DolphinConfig.Service_IOCondition.Builder builderForValue) {
/*       */         if (this.iOConditionsBuilder_ == null) {
/*       */           ensureIOConditionsIsMutable();
/*       */           this.iOConditions_.add(builderForValue.build());
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOConditionsBuilder_.addMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder addIOConditions(int index, DolphinConfig.Service_IOCondition.Builder builderForValue) {
/*       */         if (this.iOConditionsBuilder_ == null) {
/*       */           ensureIOConditionsIsMutable();
/*       */           this.iOConditions_.add(index, builderForValue.build());
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOConditionsBuilder_.addMessage(index, (AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder addAllIOConditions(Iterable<? extends DolphinConfig.Service_IOCondition> values) {
/*       */         if (this.iOConditionsBuilder_ == null) {
/*       */           ensureIOConditionsIsMutable();
/*       */           AbstractMessageLite.Builder.addAll(values, this.iOConditions_);
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOConditionsBuilder_.addAllMessages(values);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearIOConditions() {
/*       */         if (this.iOConditionsBuilder_ == null) {
/*       */           this.iOConditions_ = Collections.emptyList();
/*       */           this.bitField0_ &= 0xFFFFFFFE;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOConditionsBuilder_.clear();
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder removeIOConditions(int index) {
/*       */         if (this.iOConditionsBuilder_ == null) {
/*       */           ensureIOConditionsIsMutable();
/*       */           this.iOConditions_.remove(index);
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOConditionsBuilder_.remove(index);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.Service_IOCondition.Builder getIOConditionsBuilder(int index) {
/*       */         return (DolphinConfig.Service_IOCondition.Builder)getIOConditionsFieldBuilder().getBuilder(index);
/*       */       }
/*       */       
/*       */       public DolphinConfig.Service_IOConditionOrBuilder getIOConditionsOrBuilder(int index) {
/*       */         return (this.iOConditionsBuilder_ == null) ? this.iOConditions_.get(index) : (DolphinConfig.Service_IOConditionOrBuilder)this.iOConditionsBuilder_.getMessageOrBuilder(index);
/*       */       }
/*       */       
/*       */       public List<? extends DolphinConfig.Service_IOConditionOrBuilder> getIOConditionsOrBuilderList() {
/*       */         return (this.iOConditionsBuilder_ != null) ? this.iOConditionsBuilder_.getMessageOrBuilderList() : Collections.unmodifiableList((List)this.iOConditions_);
/*       */       }
/*       */       
/*       */       public DolphinConfig.Service_IOCondition.Builder addIOConditionsBuilder() {
/*       */         return (DolphinConfig.Service_IOCondition.Builder)getIOConditionsFieldBuilder().addBuilder((AbstractMessage)DolphinConfig.Service_IOCondition.getDefaultInstance());
/*       */       }
/*       */       
/*       */       public DolphinConfig.Service_IOCondition.Builder addIOConditionsBuilder(int index) {
/*       */         return (DolphinConfig.Service_IOCondition.Builder)getIOConditionsFieldBuilder().addBuilder(index, (AbstractMessage)DolphinConfig.Service_IOCondition.getDefaultInstance());
/*       */       }
/*       */       
/*       */       public List<DolphinConfig.Service_IOCondition.Builder> getIOConditionsBuilderList() {
/*       */         return getIOConditionsFieldBuilder().getBuilderList();
/*       */       }
/*       */       
/*       */       private RepeatedFieldBuilderV3<DolphinConfig.Service_IOCondition, DolphinConfig.Service_IOCondition.Builder, DolphinConfig.Service_IOConditionOrBuilder> getIOConditionsFieldBuilder() {
/*       */         if (this.iOConditionsBuilder_ == null) {
/*       */           this.iOConditionsBuilder_ = new RepeatedFieldBuilderV3(this.iOConditions_, ((this.bitField0_ & 0x1) != 0), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.iOConditions_ = null;
/*       */         } 
/*       */         return this.iOConditionsBuilder_;
/*       */       }
/*       */       
/*       */       public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
/*       */         return (Builder)super.setUnknownFields(unknownFields);
/*       */       }
/*       */       
/*       */       public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
/*       */         return (Builder)super.mergeUnknownFields(unknownFields);
/*       */       }
/*       */     }
/*       */   }
/*       */   
/*       */   public static interface Service_StateConditionOrBuilder extends MessageOrBuilder {
/*       */     int getConditionOperatorValue();
/*       */     
/*       */     DolphinConfig.ConditionOperator getConditionOperator();
/*       */     
/*       */     List<DolphinConfig.Service_IOCondition> getIOConditionsList();
/*       */     
/*       */     DolphinConfig.Service_IOCondition getIOConditions(int param1Int);
/*       */     
/*       */     int getIOConditionsCount();
/*       */     
/*       */     List<? extends DolphinConfig.Service_IOConditionOrBuilder> getIOConditionsOrBuilderList();
/*       */     
/*       */     DolphinConfig.Service_IOConditionOrBuilder getIOConditionsOrBuilder(int param1Int);
/*       */     
/*       */     List<DolphinConfig.Service_IOConditionGroup> getIOConditionGroupsList();
/*       */     
/*       */     DolphinConfig.Service_IOConditionGroup getIOConditionGroups(int param1Int);
/*       */     
/*       */     int getIOConditionGroupsCount();
/*       */     
/*       */     List<? extends DolphinConfig.Service_IOConditionGroupOrBuilder> getIOConditionGroupsOrBuilderList();
/*       */     
/*       */     DolphinConfig.Service_IOConditionGroupOrBuilder getIOConditionGroupsOrBuilder(int param1Int);
/*       */   }
/*       */   
/*       */   public static final class Service_StateCondition extends GeneratedMessageV3 implements Service_StateConditionOrBuilder {
/*       */     private static final long serialVersionUID = 0L;
/*       */     public static final int CONDITION_OPERATOR_FIELD_NUMBER = 1;
/*       */     private int conditionOperator_;
/*       */     public static final int IO_CONDITIONS_FIELD_NUMBER = 2;
/*       */     private List<DolphinConfig.Service_IOCondition> iOConditions_;
/*       */     public static final int IO_CONDITIONGROUPS_FIELD_NUMBER = 3;
/*       */     private List<DolphinConfig.Service_IOConditionGroup> iOConditionGroups_;
/*       */     private byte memoizedIsInitialized = -1;
/*       */     private static final Service_StateCondition DEFAULT_INSTANCE = new Service_StateCondition();
/*       */     
/*       */     private static final Parser<Service_StateCondition> PARSER = (Parser<Service_StateCondition>)new AbstractParser<Service_StateCondition>() {
/*       */         public DolphinConfig.Service_StateCondition parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*       */           return new DolphinConfig.Service_StateCondition(input, extensionRegistry);
/*       */         }
/*       */       };
/*       */     
/*       */     private Service_StateCondition(GeneratedMessageV3.Builder<?> builder) {
/*       */       super(builder);
/*       */     }
/*       */     
/*       */     private Service_StateCondition() {
/*       */       this.conditionOperator_ = 0;
/*       */       this.iOConditions_ = Collections.emptyList();
/*       */       this.iOConditionGroups_ = Collections.emptyList();
/*       */     }
/*       */     
/*       */     protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) {
/*       */       return new Service_StateCondition();
/*       */     }
/*       */     
/*       */     public final UnknownFieldSet getUnknownFields() {
/*       */       return this.unknownFields;
/*       */     }
/*       */     
/*       */     private Service_StateCondition(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*       */       this();
/*       */       if (extensionRegistry == null)
/*       */         throw new NullPointerException(); 
/*       */       int mutable_bitField0_ = 0;
/*       */       UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
/*       */       try {
/*       */         boolean done = false;
/*       */         while (!done) {
/*       */           int rawValue;
/*       */           int tag = input.readTag();
/*       */           switch (tag) {
/*       */             case 0:
/*       */               done = true;
/*       */               continue;
/*       */             case 8:
/*       */               rawValue = input.readEnum();
/*       */               this.conditionOperator_ = rawValue;
/*       */               continue;
/*       */             case 18:
/*       */               if ((mutable_bitField0_ & 0x1) == 0) {
/*       */                 this.iOConditions_ = new ArrayList<>();
/*       */                 mutable_bitField0_ |= 0x1;
/*       */               } 
/*       */               this.iOConditions_.add(input.readMessage(DolphinConfig.Service_IOCondition.parser(), extensionRegistry));
/*       */               continue;
/*       */             case 26:
/*       */               if ((mutable_bitField0_ & 0x2) == 0) {
/*       */                 this.iOConditionGroups_ = new ArrayList<>();
/*       */                 mutable_bitField0_ |= 0x2;
/*       */               } 
/*       */               this.iOConditionGroups_.add(input.readMessage(DolphinConfig.Service_IOConditionGroup.parser(), extensionRegistry));
/*       */               continue;
/*       */           } 
/*       */           if (!parseUnknownField(input, unknownFields, extensionRegistry, tag))
/*       */             done = true; 
/*       */         } 
/*       */       } catch (InvalidProtocolBufferException e) {
/*       */         throw e.setUnfinishedMessage(this);
/*       */       } catch (IOException e) {
/*       */         throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this);
/*       */       } finally {
/*       */         if ((mutable_bitField0_ & 0x1) != 0)
/*       */           this.iOConditions_ = Collections.unmodifiableList(this.iOConditions_); 
/*       */         if ((mutable_bitField0_ & 0x2) != 0)
/*       */           this.iOConditionGroups_ = Collections.unmodifiableList(this.iOConditionGroups_); 
/*       */         this.unknownFields = unknownFields.build();
/*       */         makeExtensionsImmutable();
/*       */       } 
/*       */     }
/*       */     
/*       */     public static final Descriptors.Descriptor getDescriptor() {
/*       */       return DolphinConfig.internal_static_org_traccar_protobuf_dolphin_Config_Service_StateCondition_descriptor;
/*       */     }
/*       */     
/*       */     protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
/*       */       return DolphinConfig.internal_static_org_traccar_protobuf_dolphin_Config_Service_StateCondition_fieldAccessorTable.ensureFieldAccessorsInitialized(Service_StateCondition.class, Builder.class);
/*       */     }
/*       */     
/*       */     public int getConditionOperatorValue() {
/*       */       return this.conditionOperator_;
/*       */     }
/*       */     
/*       */     public DolphinConfig.ConditionOperator getConditionOperator() {
/*       */       DolphinConfig.ConditionOperator result = DolphinConfig.ConditionOperator.valueOf(this.conditionOperator_);
/*       */       return (result == null) ? DolphinConfig.ConditionOperator.UNRECOGNIZED : result;
/*       */     }
/*       */     
/*       */     public List<DolphinConfig.Service_IOCondition> getIOConditionsList() {
/*       */       return this.iOConditions_;
/*       */     }
/*       */     
/*       */     public List<? extends DolphinConfig.Service_IOConditionOrBuilder> getIOConditionsOrBuilderList() {
/*       */       return (List)this.iOConditions_;
/*       */     }
/*       */     
/*       */     public int getIOConditionsCount() {
/*       */       return this.iOConditions_.size();
/*       */     }
/*       */     
/*       */     public DolphinConfig.Service_IOCondition getIOConditions(int index) {
/*       */       return this.iOConditions_.get(index);
/*       */     }
/*       */     
/*       */     public DolphinConfig.Service_IOConditionOrBuilder getIOConditionsOrBuilder(int index) {
/*       */       return this.iOConditions_.get(index);
/*       */     }
/*       */     
/*       */     public List<DolphinConfig.Service_IOConditionGroup> getIOConditionGroupsList() {
/*       */       return this.iOConditionGroups_;
/*       */     }
/*       */     
/*       */     public List<? extends DolphinConfig.Service_IOConditionGroupOrBuilder> getIOConditionGroupsOrBuilderList() {
/*       */       return (List)this.iOConditionGroups_;
/*       */     }
/*       */     
/*       */     public int getIOConditionGroupsCount() {
/*       */       return this.iOConditionGroups_.size();
/*       */     }
/*       */     
/*       */     public DolphinConfig.Service_IOConditionGroup getIOConditionGroups(int index) {
/*       */       return this.iOConditionGroups_.get(index);
/*       */     }
/*       */     
/*       */     public DolphinConfig.Service_IOConditionGroupOrBuilder getIOConditionGroupsOrBuilder(int index) {
/*       */       return this.iOConditionGroups_.get(index);
/*       */     }
/*       */     
/*       */     public final boolean isInitialized() {
/*       */       byte isInitialized = this.memoizedIsInitialized;
/*       */       if (isInitialized == 1)
/*       */         return true; 
/*       */       if (isInitialized == 0)
/*       */         return false; 
/*       */       this.memoizedIsInitialized = 1;
/*       */       return true;
/*       */     }
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/*       */       if (this.conditionOperator_ != DolphinConfig.ConditionOperator.AND.getNumber())
/*       */         output.writeEnum(1, this.conditionOperator_); 
/*       */       int i;
/*       */       for (i = 0; i < this.iOConditions_.size(); i++)
/*       */         output.writeMessage(2, (MessageLite)this.iOConditions_.get(i)); 
/*       */       for (i = 0; i < this.iOConditionGroups_.size(); i++)
/*       */         output.writeMessage(3, (MessageLite)this.iOConditionGroups_.get(i)); 
/*       */       this.unknownFields.writeTo(output);
/*       */     }
/*       */     
/*       */     public int getSerializedSize() {
/*       */       int size = this.memoizedSize;
/*       */       if (size != -1)
/*       */         return size; 
/*       */       size = 0;
/*       */       if (this.conditionOperator_ != DolphinConfig.ConditionOperator.AND.getNumber())
/*       */         size += CodedOutputStream.computeEnumSize(1, this.conditionOperator_); 
/*       */       int i;
/*       */       for (i = 0; i < this.iOConditions_.size(); i++)
/*       */         size += CodedOutputStream.computeMessageSize(2, (MessageLite)this.iOConditions_.get(i)); 
/*       */       for (i = 0; i < this.iOConditionGroups_.size(); i++)
/*       */         size += CodedOutputStream.computeMessageSize(3, (MessageLite)this.iOConditionGroups_.get(i)); 
/*       */       size += this.unknownFields.getSerializedSize();
/*       */       this.memoizedSize = size;
/*       */       return size;
/*       */     }
/*       */     
/*       */     public boolean equals(Object obj) {
/*       */       if (obj == this)
/*       */         return true; 
/*       */       if (!(obj instanceof Service_StateCondition))
/*       */         return super.equals(obj); 
/*       */       Service_StateCondition other = (Service_StateCondition)obj;
/*       */       return (this.conditionOperator_ != other.conditionOperator_) ? false : (!getIOConditionsList().equals(other.getIOConditionsList()) ? false : (!getIOConditionGroupsList().equals(other.getIOConditionGroupsList()) ? false : (!!this.unknownFields.equals(other.unknownFields))));
/*       */     }
/*       */     
/*       */     public int hashCode() {
/*       */       if (this.memoizedHashCode != 0)
/*       */         return this.memoizedHashCode; 
/*       */       int hash = 41;
/*       */       hash = 19 * hash + getDescriptor().hashCode();
/*       */       hash = 37 * hash + 1;
/*       */       hash = 53 * hash + this.conditionOperator_;
/*       */       if (getIOConditionsCount() > 0) {
/*       */         hash = 37 * hash + 2;
/*       */         hash = 53 * hash + getIOConditionsList().hashCode();
/*       */       } 
/*       */       if (getIOConditionGroupsCount() > 0) {
/*       */         hash = 37 * hash + 3;
/*       */         hash = 53 * hash + getIOConditionGroupsList().hashCode();
/*       */       } 
/*       */       hash = 29 * hash + this.unknownFields.hashCode();
/*       */       this.memoizedHashCode = hash;
/*       */       return hash;
/*       */     }
/*       */     
/*       */     public static Service_StateCondition parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
/*       */       return (Service_StateCondition)PARSER.parseFrom(data);
/*       */     }
/*       */     
/*       */     public static Service_StateCondition parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*       */       return (Service_StateCondition)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static Service_StateCondition parseFrom(ByteString data) throws InvalidProtocolBufferException {
/*       */       return (Service_StateCondition)PARSER.parseFrom(data);
/*       */     }
/*       */     
/*       */     public static Service_StateCondition parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*       */       return (Service_StateCondition)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static Service_StateCondition parseFrom(byte[] data) throws InvalidProtocolBufferException {
/*       */       return (Service_StateCondition)PARSER.parseFrom(data);
/*       */     }
/*       */     
/*       */     public static Service_StateCondition parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*       */       return (Service_StateCondition)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static Service_StateCondition parseFrom(InputStream input) throws IOException {
/*       */       return (Service_StateCondition)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */     
/*       */     public static Service_StateCondition parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*       */       return (Service_StateCondition)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static Service_StateCondition parseDelimitedFrom(InputStream input) throws IOException {
/*       */       return (Service_StateCondition)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
/*       */     }
/*       */     
/*       */     public static Service_StateCondition parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*       */       return (Service_StateCondition)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static Service_StateCondition parseFrom(CodedInputStream input) throws IOException {
/*       */       return (Service_StateCondition)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */     
/*       */     public static Service_StateCondition parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*       */       return (Service_StateCondition)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public Builder newBuilderForType() {
/*       */       return newBuilder();
/*       */     }
/*       */     
/*       */     public static Builder newBuilder() {
/*       */       return DEFAULT_INSTANCE.toBuilder();
/*       */     }
/*       */     
/*       */     public static Builder newBuilder(Service_StateCondition prototype) {
/*       */       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
/*       */     }
/*       */     
/*       */     public Builder toBuilder() {
/*       */       return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder()).mergeFrom(this);
/*       */     }
/*       */     
/*       */     protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
/*       */       return new Builder(parent);
/*       */     }
/*       */     
/*       */     public static Service_StateCondition getDefaultInstance() {
/*       */       return DEFAULT_INSTANCE;
/*       */     }
/*       */     
/*       */     public static Parser<Service_StateCondition> parser() {
/*       */       return PARSER;
/*       */     }
/*       */     
/*       */     public Parser<Service_StateCondition> getParserForType() {
/*       */       return PARSER;
/*       */     }
/*       */     
/*       */     public Service_StateCondition getDefaultInstanceForType() {
/*       */       return DEFAULT_INSTANCE;
/*       */     }
/*       */     
/*       */     public static final class Builder extends GeneratedMessageV3.Builder<Builder> implements DolphinConfig.Service_StateConditionOrBuilder {
/*       */       private int bitField0_;
/*       */       private int conditionOperator_ = 0;
/*       */       private List<DolphinConfig.Service_IOCondition> iOConditions_ = Collections.emptyList();
/*       */       private RepeatedFieldBuilderV3<DolphinConfig.Service_IOCondition, DolphinConfig.Service_IOCondition.Builder, DolphinConfig.Service_IOConditionOrBuilder> iOConditionsBuilder_;
/*       */       private List<DolphinConfig.Service_IOConditionGroup> iOConditionGroups_ = Collections.emptyList();
/*       */       private RepeatedFieldBuilderV3<DolphinConfig.Service_IOConditionGroup, DolphinConfig.Service_IOConditionGroup.Builder, DolphinConfig.Service_IOConditionGroupOrBuilder> iOConditionGroupsBuilder_;
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/*       */         return DolphinConfig.internal_static_org_traccar_protobuf_dolphin_Config_Service_StateCondition_descriptor;
/*       */       }
/*       */       
/*       */       protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
/*       */         return DolphinConfig.internal_static_org_traccar_protobuf_dolphin_Config_Service_StateCondition_fieldAccessorTable.ensureFieldAccessorsInitialized(DolphinConfig.Service_StateCondition.class, Builder.class);
/*       */       }
/*       */       
/*       */       private Builder() {
/*       */         maybeForceBuilderInitialization();
/*       */       }
/*       */       
/*       */       private Builder(GeneratedMessageV3.BuilderParent parent) {
/*       */         super(parent);
/*       */         maybeForceBuilderInitialization();
/*       */       }
/*       */       
/*       */       private void maybeForceBuilderInitialization() {
/*       */         if (DolphinConfig.Service_StateCondition.alwaysUseFieldBuilders) {
/*       */           getIOConditionsFieldBuilder();
/*       */           getIOConditionGroupsFieldBuilder();
/*       */         } 
/*       */       }
/*       */       
/*       */       public Builder clear() {
/*       */         super.clear();
/*       */         this.conditionOperator_ = 0;
/*       */         if (this.iOConditionsBuilder_ == null) {
/*       */           this.iOConditions_ = Collections.emptyList();
/*       */           this.bitField0_ &= 0xFFFFFFFE;
/*       */         } else {
/*       */           this.iOConditionsBuilder_.clear();
/*       */         } 
/*       */         if (this.iOConditionGroupsBuilder_ == null) {
/*       */           this.iOConditionGroups_ = Collections.emptyList();
/*       */           this.bitField0_ &= 0xFFFFFFFD;
/*       */         } else {
/*       */           this.iOConditionGroupsBuilder_.clear();
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Descriptors.Descriptor getDescriptorForType() {
/*       */         return DolphinConfig.internal_static_org_traccar_protobuf_dolphin_Config_Service_StateCondition_descriptor;
/*       */       }
/*       */       
/*       */       public DolphinConfig.Service_StateCondition getDefaultInstanceForType() {
/*       */         return DolphinConfig.Service_StateCondition.getDefaultInstance();
/*       */       }
/*       */       
/*       */       public DolphinConfig.Service_StateCondition build() {
/*       */         DolphinConfig.Service_StateCondition result = buildPartial();
/*       */         if (!result.isInitialized())
/*       */           throw newUninitializedMessageException(result); 
/*       */         return result;
/*       */       }
/*       */       
/*       */       public DolphinConfig.Service_StateCondition buildPartial() {
/*       */         DolphinConfig.Service_StateCondition result = new DolphinConfig.Service_StateCondition(this);
/*       */         int from_bitField0_ = this.bitField0_;
/*       */         result.conditionOperator_ = this.conditionOperator_;
/*       */         if (this.iOConditionsBuilder_ == null) {
/*       */           if ((this.bitField0_ & 0x1) != 0) {
/*       */             this.iOConditions_ = Collections.unmodifiableList(this.iOConditions_);
/*       */             this.bitField0_ &= 0xFFFFFFFE;
/*       */           } 
/*       */           result.iOConditions_ = this.iOConditions_;
/*       */         } else {
/*       */           result.iOConditions_ = this.iOConditionsBuilder_.build();
/*       */         } 
/*       */         if (this.iOConditionGroupsBuilder_ == null) {
/*       */           if ((this.bitField0_ & 0x2) != 0) {
/*       */             this.iOConditionGroups_ = Collections.unmodifiableList(this.iOConditionGroups_);
/*       */             this.bitField0_ &= 0xFFFFFFFD;
/*       */           } 
/*       */           result.iOConditionGroups_ = this.iOConditionGroups_;
/*       */         } else {
/*       */           result.iOConditionGroups_ = this.iOConditionGroupsBuilder_.build();
/*       */         } 
/*       */         onBuilt();
/*       */         return result;
/*       */       }
/*       */       
/*       */       public Builder clone() {
/*       */         return (Builder)super.clone();
/*       */       }
/*       */       
/*       */       public Builder setField(Descriptors.FieldDescriptor field, Object value) {
/*       */         return (Builder)super.setField(field, value);
/*       */       }
/*       */       
/*       */       public Builder clearField(Descriptors.FieldDescriptor field) {
/*       */         return (Builder)super.clearField(field);
/*       */       }
/*       */       
/*       */       public Builder clearOneof(Descriptors.OneofDescriptor oneof) {
/*       */         return (Builder)super.clearOneof(oneof);
/*       */       }
/*       */       
/*       */       public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
/*       */         return (Builder)super.setRepeatedField(field, index, value);
/*       */       }
/*       */       
/*       */       public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
/*       */         return (Builder)super.addRepeatedField(field, value);
/*       */       }
/*       */       
/*       */       public Builder mergeFrom(Message other) {
/*       */         if (other instanceof DolphinConfig.Service_StateCondition)
/*       */           return mergeFrom((DolphinConfig.Service_StateCondition)other); 
/*       */         super.mergeFrom(other);
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeFrom(DolphinConfig.Service_StateCondition other) {
/*       */         if (other == DolphinConfig.Service_StateCondition.getDefaultInstance())
/*       */           return this; 
/*       */         if (other.conditionOperator_ != 0)
/*       */           setConditionOperatorValue(other.getConditionOperatorValue()); 
/*       */         if (this.iOConditionsBuilder_ == null) {
/*       */           if (!other.iOConditions_.isEmpty()) {
/*       */             if (this.iOConditions_.isEmpty()) {
/*       */               this.iOConditions_ = other.iOConditions_;
/*       */               this.bitField0_ &= 0xFFFFFFFE;
/*       */             } else {
/*       */               ensureIOConditionsIsMutable();
/*       */               this.iOConditions_.addAll(other.iOConditions_);
/*       */             } 
/*       */             onChanged();
/*       */           } 
/*       */         } else if (!other.iOConditions_.isEmpty()) {
/*       */           if (this.iOConditionsBuilder_.isEmpty()) {
/*       */             this.iOConditionsBuilder_.dispose();
/*       */             this.iOConditionsBuilder_ = null;
/*       */             this.iOConditions_ = other.iOConditions_;
/*       */             this.bitField0_ &= 0xFFFFFFFE;
/*       */             this.iOConditionsBuilder_ = DolphinConfig.Service_StateCondition.alwaysUseFieldBuilders ? getIOConditionsFieldBuilder() : null;
/*       */           } else {
/*       */             this.iOConditionsBuilder_.addAllMessages(other.iOConditions_);
/*       */           } 
/*       */         } 
/*       */         if (this.iOConditionGroupsBuilder_ == null) {
/*       */           if (!other.iOConditionGroups_.isEmpty()) {
/*       */             if (this.iOConditionGroups_.isEmpty()) {
/*       */               this.iOConditionGroups_ = other.iOConditionGroups_;
/*       */               this.bitField0_ &= 0xFFFFFFFD;
/*       */             } else {
/*       */               ensureIOConditionGroupsIsMutable();
/*       */               this.iOConditionGroups_.addAll(other.iOConditionGroups_);
/*       */             } 
/*       */             onChanged();
/*       */           } 
/*       */         } else if (!other.iOConditionGroups_.isEmpty()) {
/*       */           if (this.iOConditionGroupsBuilder_.isEmpty()) {
/*       */             this.iOConditionGroupsBuilder_.dispose();
/*       */             this.iOConditionGroupsBuilder_ = null;
/*       */             this.iOConditionGroups_ = other.iOConditionGroups_;
/*       */             this.bitField0_ &= 0xFFFFFFFD;
/*       */             this.iOConditionGroupsBuilder_ = DolphinConfig.Service_StateCondition.alwaysUseFieldBuilders ? getIOConditionGroupsFieldBuilder() : null;
/*       */           } else {
/*       */             this.iOConditionGroupsBuilder_.addAllMessages(other.iOConditionGroups_);
/*       */           } 
/*       */         } 
/*       */         mergeUnknownFields(other.unknownFields);
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       public final boolean isInitialized() {
/*       */         return true;
/*       */       }
/*       */       
/*       */       public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*       */         DolphinConfig.Service_StateCondition parsedMessage = null;
/*       */         try {
/*       */           parsedMessage = (DolphinConfig.Service_StateCondition)DolphinConfig.Service_StateCondition.PARSER.parsePartialFrom(input, extensionRegistry);
/*       */         } catch (InvalidProtocolBufferException e) {
/*       */           parsedMessage = (DolphinConfig.Service_StateCondition)e.getUnfinishedMessage();
/*       */           throw e.unwrapIOException();
/*       */         } finally {
/*       */           if (parsedMessage != null)
/*       */             mergeFrom(parsedMessage); 
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public int getConditionOperatorValue() {
/*       */         return this.conditionOperator_;
/*       */       }
/*       */       
/*       */       public Builder setConditionOperatorValue(int value) {
/*       */         this.conditionOperator_ = value;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.ConditionOperator getConditionOperator() {
/*       */         DolphinConfig.ConditionOperator result = DolphinConfig.ConditionOperator.valueOf(this.conditionOperator_);
/*       */         return (result == null) ? DolphinConfig.ConditionOperator.UNRECOGNIZED : result;
/*       */       }
/*       */       
/*       */       public Builder setConditionOperator(DolphinConfig.ConditionOperator value) {
/*       */         if (value == null)
/*       */           throw new NullPointerException(); 
/*       */         this.conditionOperator_ = value.getNumber();
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearConditionOperator() {
/*       */         this.conditionOperator_ = 0;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       private void ensureIOConditionsIsMutable() {
/*       */         if ((this.bitField0_ & 0x1) == 0) {
/*       */           this.iOConditions_ = new ArrayList<>(this.iOConditions_);
/*       */           this.bitField0_ |= 0x1;
/*       */         } 
/*       */       }
/*       */       
/*       */       public List<DolphinConfig.Service_IOCondition> getIOConditionsList() {
/*       */         return (this.iOConditionsBuilder_ == null) ? Collections.unmodifiableList(this.iOConditions_) : this.iOConditionsBuilder_.getMessageList();
/*       */       }
/*       */       
/*       */       public int getIOConditionsCount() {
/*       */         return (this.iOConditionsBuilder_ == null) ? this.iOConditions_.size() : this.iOConditionsBuilder_.getCount();
/*       */       }
/*       */       
/*       */       public DolphinConfig.Service_IOCondition getIOConditions(int index) {
/*       */         return (this.iOConditionsBuilder_ == null) ? this.iOConditions_.get(index) : (DolphinConfig.Service_IOCondition)this.iOConditionsBuilder_.getMessage(index);
/*       */       }
/*       */       
/*       */       public Builder setIOConditions(int index, DolphinConfig.Service_IOCondition value) {
/*       */         if (this.iOConditionsBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           ensureIOConditionsIsMutable();
/*       */           this.iOConditions_.set(index, value);
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOConditionsBuilder_.setMessage(index, (AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setIOConditions(int index, DolphinConfig.Service_IOCondition.Builder builderForValue) {
/*       */         if (this.iOConditionsBuilder_ == null) {
/*       */           ensureIOConditionsIsMutable();
/*       */           this.iOConditions_.set(index, builderForValue.build());
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOConditionsBuilder_.setMessage(index, (AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder addIOConditions(DolphinConfig.Service_IOCondition value) {
/*       */         if (this.iOConditionsBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           ensureIOConditionsIsMutable();
/*       */           this.iOConditions_.add(value);
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOConditionsBuilder_.addMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder addIOConditions(int index, DolphinConfig.Service_IOCondition value) {
/*       */         if (this.iOConditionsBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           ensureIOConditionsIsMutable();
/*       */           this.iOConditions_.add(index, value);
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOConditionsBuilder_.addMessage(index, (AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder addIOConditions(DolphinConfig.Service_IOCondition.Builder builderForValue) {
/*       */         if (this.iOConditionsBuilder_ == null) {
/*       */           ensureIOConditionsIsMutable();
/*       */           this.iOConditions_.add(builderForValue.build());
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOConditionsBuilder_.addMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder addIOConditions(int index, DolphinConfig.Service_IOCondition.Builder builderForValue) {
/*       */         if (this.iOConditionsBuilder_ == null) {
/*       */           ensureIOConditionsIsMutable();
/*       */           this.iOConditions_.add(index, builderForValue.build());
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOConditionsBuilder_.addMessage(index, (AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder addAllIOConditions(Iterable<? extends DolphinConfig.Service_IOCondition> values) {
/*       */         if (this.iOConditionsBuilder_ == null) {
/*       */           ensureIOConditionsIsMutable();
/*       */           AbstractMessageLite.Builder.addAll(values, this.iOConditions_);
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOConditionsBuilder_.addAllMessages(values);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearIOConditions() {
/*       */         if (this.iOConditionsBuilder_ == null) {
/*       */           this.iOConditions_ = Collections.emptyList();
/*       */           this.bitField0_ &= 0xFFFFFFFE;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOConditionsBuilder_.clear();
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder removeIOConditions(int index) {
/*       */         if (this.iOConditionsBuilder_ == null) {
/*       */           ensureIOConditionsIsMutable();
/*       */           this.iOConditions_.remove(index);
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOConditionsBuilder_.remove(index);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.Service_IOCondition.Builder getIOConditionsBuilder(int index) {
/*       */         return (DolphinConfig.Service_IOCondition.Builder)getIOConditionsFieldBuilder().getBuilder(index);
/*       */       }
/*       */       
/*       */       public DolphinConfig.Service_IOConditionOrBuilder getIOConditionsOrBuilder(int index) {
/*       */         return (this.iOConditionsBuilder_ == null) ? this.iOConditions_.get(index) : (DolphinConfig.Service_IOConditionOrBuilder)this.iOConditionsBuilder_.getMessageOrBuilder(index);
/*       */       }
/*       */       
/*       */       public List<? extends DolphinConfig.Service_IOConditionOrBuilder> getIOConditionsOrBuilderList() {
/*       */         return (this.iOConditionsBuilder_ != null) ? this.iOConditionsBuilder_.getMessageOrBuilderList() : Collections.unmodifiableList((List)this.iOConditions_);
/*       */       }
/*       */       
/*       */       public DolphinConfig.Service_IOCondition.Builder addIOConditionsBuilder() {
/*       */         return (DolphinConfig.Service_IOCondition.Builder)getIOConditionsFieldBuilder().addBuilder((AbstractMessage)DolphinConfig.Service_IOCondition.getDefaultInstance());
/*       */       }
/*       */       
/*       */       public DolphinConfig.Service_IOCondition.Builder addIOConditionsBuilder(int index) {
/*       */         return (DolphinConfig.Service_IOCondition.Builder)getIOConditionsFieldBuilder().addBuilder(index, (AbstractMessage)DolphinConfig.Service_IOCondition.getDefaultInstance());
/*       */       }
/*       */       
/*       */       public List<DolphinConfig.Service_IOCondition.Builder> getIOConditionsBuilderList() {
/*       */         return getIOConditionsFieldBuilder().getBuilderList();
/*       */       }
/*       */       
/*       */       private RepeatedFieldBuilderV3<DolphinConfig.Service_IOCondition, DolphinConfig.Service_IOCondition.Builder, DolphinConfig.Service_IOConditionOrBuilder> getIOConditionsFieldBuilder() {
/*       */         if (this.iOConditionsBuilder_ == null) {
/*       */           this.iOConditionsBuilder_ = new RepeatedFieldBuilderV3(this.iOConditions_, ((this.bitField0_ & 0x1) != 0), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.iOConditions_ = null;
/*       */         } 
/*       */         return this.iOConditionsBuilder_;
/*       */       }
/*       */       
/*       */       private void ensureIOConditionGroupsIsMutable() {
/*       */         if ((this.bitField0_ & 0x2) == 0) {
/*       */           this.iOConditionGroups_ = new ArrayList<>(this.iOConditionGroups_);
/*       */           this.bitField0_ |= 0x2;
/*       */         } 
/*       */       }
/*       */       
/*       */       public List<DolphinConfig.Service_IOConditionGroup> getIOConditionGroupsList() {
/*       */         return (this.iOConditionGroupsBuilder_ == null) ? Collections.unmodifiableList(this.iOConditionGroups_) : this.iOConditionGroupsBuilder_.getMessageList();
/*       */       }
/*       */       
/*       */       public int getIOConditionGroupsCount() {
/*       */         return (this.iOConditionGroupsBuilder_ == null) ? this.iOConditionGroups_.size() : this.iOConditionGroupsBuilder_.getCount();
/*       */       }
/*       */       
/*       */       public DolphinConfig.Service_IOConditionGroup getIOConditionGroups(int index) {
/*       */         return (this.iOConditionGroupsBuilder_ == null) ? this.iOConditionGroups_.get(index) : (DolphinConfig.Service_IOConditionGroup)this.iOConditionGroupsBuilder_.getMessage(index);
/*       */       }
/*       */       
/*       */       public Builder setIOConditionGroups(int index, DolphinConfig.Service_IOConditionGroup value) {
/*       */         if (this.iOConditionGroupsBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           ensureIOConditionGroupsIsMutable();
/*       */           this.iOConditionGroups_.set(index, value);
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOConditionGroupsBuilder_.setMessage(index, (AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setIOConditionGroups(int index, DolphinConfig.Service_IOConditionGroup.Builder builderForValue) {
/*       */         if (this.iOConditionGroupsBuilder_ == null) {
/*       */           ensureIOConditionGroupsIsMutable();
/*       */           this.iOConditionGroups_.set(index, builderForValue.build());
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOConditionGroupsBuilder_.setMessage(index, (AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder addIOConditionGroups(DolphinConfig.Service_IOConditionGroup value) {
/*       */         if (this.iOConditionGroupsBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           ensureIOConditionGroupsIsMutable();
/*       */           this.iOConditionGroups_.add(value);
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOConditionGroupsBuilder_.addMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder addIOConditionGroups(int index, DolphinConfig.Service_IOConditionGroup value) {
/*       */         if (this.iOConditionGroupsBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           ensureIOConditionGroupsIsMutable();
/*       */           this.iOConditionGroups_.add(index, value);
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOConditionGroupsBuilder_.addMessage(index, (AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder addIOConditionGroups(DolphinConfig.Service_IOConditionGroup.Builder builderForValue) {
/*       */         if (this.iOConditionGroupsBuilder_ == null) {
/*       */           ensureIOConditionGroupsIsMutable();
/*       */           this.iOConditionGroups_.add(builderForValue.build());
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOConditionGroupsBuilder_.addMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder addIOConditionGroups(int index, DolphinConfig.Service_IOConditionGroup.Builder builderForValue) {
/*       */         if (this.iOConditionGroupsBuilder_ == null) {
/*       */           ensureIOConditionGroupsIsMutable();
/*       */           this.iOConditionGroups_.add(index, builderForValue.build());
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOConditionGroupsBuilder_.addMessage(index, (AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder addAllIOConditionGroups(Iterable<? extends DolphinConfig.Service_IOConditionGroup> values) {
/*       */         if (this.iOConditionGroupsBuilder_ == null) {
/*       */           ensureIOConditionGroupsIsMutable();
/*       */           AbstractMessageLite.Builder.addAll(values, this.iOConditionGroups_);
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOConditionGroupsBuilder_.addAllMessages(values);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearIOConditionGroups() {
/*       */         if (this.iOConditionGroupsBuilder_ == null) {
/*       */           this.iOConditionGroups_ = Collections.emptyList();
/*       */           this.bitField0_ &= 0xFFFFFFFD;
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOConditionGroupsBuilder_.clear();
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder removeIOConditionGroups(int index) {
/*       */         if (this.iOConditionGroupsBuilder_ == null) {
/*       */           ensureIOConditionGroupsIsMutable();
/*       */           this.iOConditionGroups_.remove(index);
/*       */           onChanged();
/*       */         } else {
/*       */           this.iOConditionGroupsBuilder_.remove(index);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.Service_IOConditionGroup.Builder getIOConditionGroupsBuilder(int index) {
/*       */         return (DolphinConfig.Service_IOConditionGroup.Builder)getIOConditionGroupsFieldBuilder().getBuilder(index);
/*       */       }
/*       */       
/*       */       public DolphinConfig.Service_IOConditionGroupOrBuilder getIOConditionGroupsOrBuilder(int index) {
/*       */         return (this.iOConditionGroupsBuilder_ == null) ? this.iOConditionGroups_.get(index) : (DolphinConfig.Service_IOConditionGroupOrBuilder)this.iOConditionGroupsBuilder_.getMessageOrBuilder(index);
/*       */       }
/*       */       
/*       */       public List<? extends DolphinConfig.Service_IOConditionGroupOrBuilder> getIOConditionGroupsOrBuilderList() {
/*       */         return (this.iOConditionGroupsBuilder_ != null) ? this.iOConditionGroupsBuilder_.getMessageOrBuilderList() : Collections.unmodifiableList((List)this.iOConditionGroups_);
/*       */       }
/*       */       
/*       */       public DolphinConfig.Service_IOConditionGroup.Builder addIOConditionGroupsBuilder() {
/*       */         return (DolphinConfig.Service_IOConditionGroup.Builder)getIOConditionGroupsFieldBuilder().addBuilder((AbstractMessage)DolphinConfig.Service_IOConditionGroup.getDefaultInstance());
/*       */       }
/*       */       
/*       */       public DolphinConfig.Service_IOConditionGroup.Builder addIOConditionGroupsBuilder(int index) {
/*       */         return (DolphinConfig.Service_IOConditionGroup.Builder)getIOConditionGroupsFieldBuilder().addBuilder(index, (AbstractMessage)DolphinConfig.Service_IOConditionGroup.getDefaultInstance());
/*       */       }
/*       */       
/*       */       public List<DolphinConfig.Service_IOConditionGroup.Builder> getIOConditionGroupsBuilderList() {
/*       */         return getIOConditionGroupsFieldBuilder().getBuilderList();
/*       */       }
/*       */       
/*       */       private RepeatedFieldBuilderV3<DolphinConfig.Service_IOConditionGroup, DolphinConfig.Service_IOConditionGroup.Builder, DolphinConfig.Service_IOConditionGroupOrBuilder> getIOConditionGroupsFieldBuilder() {
/*       */         if (this.iOConditionGroupsBuilder_ == null) {
/*       */           this.iOConditionGroupsBuilder_ = new RepeatedFieldBuilderV3(this.iOConditionGroups_, ((this.bitField0_ & 0x2) != 0), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.iOConditionGroups_ = null;
/*       */         } 
/*       */         return this.iOConditionGroupsBuilder_;
/*       */       }
/*       */       
/*       */       public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
/*       */         return (Builder)super.setUnknownFields(unknownFields);
/*       */       }
/*       */       
/*       */       public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
/*       */         return (Builder)super.mergeUnknownFields(unknownFields);
/*       */       }
/*       */     }
/*       */   }
/*       */   
/*       */   public static interface Service_StateOrBuilder extends MessageOrBuilder {
/*       */     int getID();
/*       */     
/*       */     boolean hasPointCondition();
/*       */     
/*       */     DolphinConfig.Service_StateCondition getPointCondition();
/*       */     
/*       */     DolphinConfig.Service_StateConditionOrBuilder getPointConditionOrBuilder();
/*       */     
/*       */     boolean hasChangeCondition();
/*       */     
/*       */     DolphinConfig.Service_StateCondition getChangeCondition();
/*       */     
/*       */     DolphinConfig.Service_StateConditionOrBuilder getChangeConditionOrBuilder();
/*       */   }
/*       */   
/*       */   public static final class Service_State extends GeneratedMessageV3 implements Service_StateOrBuilder {
/*       */     private static final long serialVersionUID = 0L;
/*       */     public static final int ID_FIELD_NUMBER = 1;
/*       */     private int iD_;
/*       */     public static final int POINTCONDITION_FIELD_NUMBER = 2;
/*       */     private DolphinConfig.Service_StateCondition pointCondition_;
/*       */     public static final int CHANGECONDITION_FIELD_NUMBER = 3;
/*       */     private DolphinConfig.Service_StateCondition changeCondition_;
/*       */     private byte memoizedIsInitialized = -1;
/*       */     private static final Service_State DEFAULT_INSTANCE = new Service_State();
/*       */     
/*       */     private static final Parser<Service_State> PARSER = (Parser<Service_State>)new AbstractParser<Service_State>() {
/*       */         public DolphinConfig.Service_State parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*       */           return new DolphinConfig.Service_State(input, extensionRegistry);
/*       */         }
/*       */       };
/*       */     
/*       */     private Service_State(GeneratedMessageV3.Builder<?> builder) {
/*       */       super(builder);
/*       */     }
/*       */     
/*       */     private Service_State() {}
/*       */     
/*       */     protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) {
/*       */       return new Service_State();
/*       */     }
/*       */     
/*       */     public final UnknownFieldSet getUnknownFields() {
/*       */       return this.unknownFields;
/*       */     }
/*       */     
/*       */     private Service_State(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*       */       this();
/*       */       if (extensionRegistry == null)
/*       */         throw new NullPointerException(); 
/*       */       UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
/*       */       try {
/*       */         boolean done = false;
/*       */         while (!done) {
/*       */           DolphinConfig.Service_StateCondition.Builder subBuilder;
/*       */           int tag = input.readTag();
/*       */           switch (tag) {
/*       */             case 0:
/*       */               done = true;
/*       */               continue;
/*       */             case 8:
/*       */               this.iD_ = input.readUInt32();
/*       */               continue;
/*       */             case 18:
/*       */               subBuilder = null;
/*       */               if (this.pointCondition_ != null)
/*       */                 subBuilder = this.pointCondition_.toBuilder(); 
/*       */               this.pointCondition_ = (DolphinConfig.Service_StateCondition)input.readMessage(DolphinConfig.Service_StateCondition.parser(), extensionRegistry);
/*       */               if (subBuilder != null) {
/*       */                 subBuilder.mergeFrom(this.pointCondition_);
/*       */                 this.pointCondition_ = subBuilder.buildPartial();
/*       */               } 
/*       */               continue;
/*       */             case 26:
/*       */               subBuilder = null;
/*       */               if (this.changeCondition_ != null)
/*       */                 subBuilder = this.changeCondition_.toBuilder(); 
/*       */               this.changeCondition_ = (DolphinConfig.Service_StateCondition)input.readMessage(DolphinConfig.Service_StateCondition.parser(), extensionRegistry);
/*       */               if (subBuilder != null) {
/*       */                 subBuilder.mergeFrom(this.changeCondition_);
/*       */                 this.changeCondition_ = subBuilder.buildPartial();
/*       */               } 
/*       */               continue;
/*       */           } 
/*       */           if (!parseUnknownField(input, unknownFields, extensionRegistry, tag))
/*       */             done = true; 
/*       */         } 
/*       */       } catch (InvalidProtocolBufferException e) {
/*       */         throw e.setUnfinishedMessage(this);
/*       */       } catch (IOException e) {
/*       */         throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this);
/*       */       } finally {
/*       */         this.unknownFields = unknownFields.build();
/*       */         makeExtensionsImmutable();
/*       */       } 
/*       */     }
/*       */     
/*       */     public static final Descriptors.Descriptor getDescriptor() {
/*       */       return DolphinConfig.internal_static_org_traccar_protobuf_dolphin_Config_Service_State_descriptor;
/*       */     }
/*       */     
/*       */     protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
/*       */       return DolphinConfig.internal_static_org_traccar_protobuf_dolphin_Config_Service_State_fieldAccessorTable.ensureFieldAccessorsInitialized(Service_State.class, Builder.class);
/*       */     }
/*       */     
/*       */     public int getID() {
/*       */       return this.iD_;
/*       */     }
/*       */     
/*       */     public boolean hasPointCondition() {
/*       */       return (this.pointCondition_ != null);
/*       */     }
/*       */     
/*       */     public DolphinConfig.Service_StateCondition getPointCondition() {
/*       */       return (this.pointCondition_ == null) ? DolphinConfig.Service_StateCondition.getDefaultInstance() : this.pointCondition_;
/*       */     }
/*       */     
/*       */     public DolphinConfig.Service_StateConditionOrBuilder getPointConditionOrBuilder() {
/*       */       return getPointCondition();
/*       */     }
/*       */     
/*       */     public boolean hasChangeCondition() {
/*       */       return (this.changeCondition_ != null);
/*       */     }
/*       */     
/*       */     public DolphinConfig.Service_StateCondition getChangeCondition() {
/*       */       return (this.changeCondition_ == null) ? DolphinConfig.Service_StateCondition.getDefaultInstance() : this.changeCondition_;
/*       */     }
/*       */     
/*       */     public DolphinConfig.Service_StateConditionOrBuilder getChangeConditionOrBuilder() {
/*       */       return getChangeCondition();
/*       */     }
/*       */     
/*       */     public final boolean isInitialized() {
/*       */       byte isInitialized = this.memoizedIsInitialized;
/*       */       if (isInitialized == 1)
/*       */         return true; 
/*       */       if (isInitialized == 0)
/*       */         return false; 
/*       */       this.memoizedIsInitialized = 1;
/*       */       return true;
/*       */     }
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/*       */       if (this.iD_ != 0)
/*       */         output.writeUInt32(1, this.iD_); 
/*       */       if (this.pointCondition_ != null)
/*       */         output.writeMessage(2, (MessageLite)getPointCondition()); 
/*       */       if (this.changeCondition_ != null)
/*       */         output.writeMessage(3, (MessageLite)getChangeCondition()); 
/*       */       this.unknownFields.writeTo(output);
/*       */     }
/*       */     
/*       */     public int getSerializedSize() {
/*       */       int size = this.memoizedSize;
/*       */       if (size != -1)
/*       */         return size; 
/*       */       size = 0;
/*       */       if (this.iD_ != 0)
/*       */         size += CodedOutputStream.computeUInt32Size(1, this.iD_); 
/*       */       if (this.pointCondition_ != null)
/*       */         size += CodedOutputStream.computeMessageSize(2, (MessageLite)getPointCondition()); 
/*       */       if (this.changeCondition_ != null)
/*       */         size += CodedOutputStream.computeMessageSize(3, (MessageLite)getChangeCondition()); 
/*       */       size += this.unknownFields.getSerializedSize();
/*       */       this.memoizedSize = size;
/*       */       return size;
/*       */     }
/*       */     
/*       */     public boolean equals(Object obj) {
/*       */       if (obj == this)
/*       */         return true; 
/*       */       if (!(obj instanceof Service_State))
/*       */         return super.equals(obj); 
/*       */       Service_State other = (Service_State)obj;
/*       */       return (getID() != other.getID()) ? false : ((hasPointCondition() != other.hasPointCondition()) ? false : ((hasPointCondition() && !getPointCondition().equals(other.getPointCondition())) ? false : ((hasChangeCondition() != other.hasChangeCondition()) ? false : ((hasChangeCondition() && !getChangeCondition().equals(other.getChangeCondition())) ? false : (!!this.unknownFields.equals(other.unknownFields))))));
/*       */     }
/*       */     
/*       */     public int hashCode() {
/*       */       if (this.memoizedHashCode != 0)
/*       */         return this.memoizedHashCode; 
/*       */       int hash = 41;
/*       */       hash = 19 * hash + getDescriptor().hashCode();
/*       */       hash = 37 * hash + 1;
/*       */       hash = 53 * hash + getID();
/*       */       if (hasPointCondition()) {
/*       */         hash = 37 * hash + 2;
/*       */         hash = 53 * hash + getPointCondition().hashCode();
/*       */       } 
/*       */       if (hasChangeCondition()) {
/*       */         hash = 37 * hash + 3;
/*       */         hash = 53 * hash + getChangeCondition().hashCode();
/*       */       } 
/*       */       hash = 29 * hash + this.unknownFields.hashCode();
/*       */       this.memoizedHashCode = hash;
/*       */       return hash;
/*       */     }
/*       */     
/*       */     public static Service_State parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
/*       */       return (Service_State)PARSER.parseFrom(data);
/*       */     }
/*       */     
/*       */     public static Service_State parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*       */       return (Service_State)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static Service_State parseFrom(ByteString data) throws InvalidProtocolBufferException {
/*       */       return (Service_State)PARSER.parseFrom(data);
/*       */     }
/*       */     
/*       */     public static Service_State parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*       */       return (Service_State)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static Service_State parseFrom(byte[] data) throws InvalidProtocolBufferException {
/*       */       return (Service_State)PARSER.parseFrom(data);
/*       */     }
/*       */     
/*       */     public static Service_State parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*       */       return (Service_State)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static Service_State parseFrom(InputStream input) throws IOException {
/*       */       return (Service_State)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */     
/*       */     public static Service_State parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*       */       return (Service_State)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static Service_State parseDelimitedFrom(InputStream input) throws IOException {
/*       */       return (Service_State)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
/*       */     }
/*       */     
/*       */     public static Service_State parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*       */       return (Service_State)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static Service_State parseFrom(CodedInputStream input) throws IOException {
/*       */       return (Service_State)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */     
/*       */     public static Service_State parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*       */       return (Service_State)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public Builder newBuilderForType() {
/*       */       return newBuilder();
/*       */     }
/*       */     
/*       */     public static Builder newBuilder() {
/*       */       return DEFAULT_INSTANCE.toBuilder();
/*       */     }
/*       */     
/*       */     public static Builder newBuilder(Service_State prototype) {
/*       */       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
/*       */     }
/*       */     
/*       */     public Builder toBuilder() {
/*       */       return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder()).mergeFrom(this);
/*       */     }
/*       */     
/*       */     protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
/*       */       return new Builder(parent);
/*       */     }
/*       */     
/*       */     public static Service_State getDefaultInstance() {
/*       */       return DEFAULT_INSTANCE;
/*       */     }
/*       */     
/*       */     public static Parser<Service_State> parser() {
/*       */       return PARSER;
/*       */     }
/*       */     
/*       */     public Parser<Service_State> getParserForType() {
/*       */       return PARSER;
/*       */     }
/*       */     
/*       */     public Service_State getDefaultInstanceForType() {
/*       */       return DEFAULT_INSTANCE;
/*       */     }
/*       */     
/*       */     public static final class Builder extends GeneratedMessageV3.Builder<Builder> implements DolphinConfig.Service_StateOrBuilder {
/*       */       private int iD_;
/*       */       private DolphinConfig.Service_StateCondition pointCondition_;
/*       */       private SingleFieldBuilderV3<DolphinConfig.Service_StateCondition, DolphinConfig.Service_StateCondition.Builder, DolphinConfig.Service_StateConditionOrBuilder> pointConditionBuilder_;
/*       */       private DolphinConfig.Service_StateCondition changeCondition_;
/*       */       private SingleFieldBuilderV3<DolphinConfig.Service_StateCondition, DolphinConfig.Service_StateCondition.Builder, DolphinConfig.Service_StateConditionOrBuilder> changeConditionBuilder_;
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/*       */         return DolphinConfig.internal_static_org_traccar_protobuf_dolphin_Config_Service_State_descriptor;
/*       */       }
/*       */       
/*       */       protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
/*       */         return DolphinConfig.internal_static_org_traccar_protobuf_dolphin_Config_Service_State_fieldAccessorTable.ensureFieldAccessorsInitialized(DolphinConfig.Service_State.class, Builder.class);
/*       */       }
/*       */       
/*       */       private Builder() {
/*       */         maybeForceBuilderInitialization();
/*       */       }
/*       */       
/*       */       private Builder(GeneratedMessageV3.BuilderParent parent) {
/*       */         super(parent);
/*       */         maybeForceBuilderInitialization();
/*       */       }
/*       */       
/*       */       private void maybeForceBuilderInitialization() {
/*       */         if (DolphinConfig.Service_State.alwaysUseFieldBuilders);
/*       */       }
/*       */       
/*       */       public Builder clear() {
/*       */         super.clear();
/*       */         this.iD_ = 0;
/*       */         if (this.pointConditionBuilder_ == null) {
/*       */           this.pointCondition_ = null;
/*       */         } else {
/*       */           this.pointCondition_ = null;
/*       */           this.pointConditionBuilder_ = null;
/*       */         } 
/*       */         if (this.changeConditionBuilder_ == null) {
/*       */           this.changeCondition_ = null;
/*       */         } else {
/*       */           this.changeCondition_ = null;
/*       */           this.changeConditionBuilder_ = null;
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Descriptors.Descriptor getDescriptorForType() {
/*       */         return DolphinConfig.internal_static_org_traccar_protobuf_dolphin_Config_Service_State_descriptor;
/*       */       }
/*       */       
/*       */       public DolphinConfig.Service_State getDefaultInstanceForType() {
/*       */         return DolphinConfig.Service_State.getDefaultInstance();
/*       */       }
/*       */       
/*       */       public DolphinConfig.Service_State build() {
/*       */         DolphinConfig.Service_State result = buildPartial();
/*       */         if (!result.isInitialized())
/*       */           throw newUninitializedMessageException(result); 
/*       */         return result;
/*       */       }
/*       */       
/*       */       public DolphinConfig.Service_State buildPartial() {
/*       */         DolphinConfig.Service_State result = new DolphinConfig.Service_State(this);
/*       */         result.iD_ = this.iD_;
/*       */         if (this.pointConditionBuilder_ == null) {
/*       */           result.pointCondition_ = this.pointCondition_;
/*       */         } else {
/*       */           result.pointCondition_ = (DolphinConfig.Service_StateCondition)this.pointConditionBuilder_.build();
/*       */         } 
/*       */         if (this.changeConditionBuilder_ == null) {
/*       */           result.changeCondition_ = this.changeCondition_;
/*       */         } else {
/*       */           result.changeCondition_ = (DolphinConfig.Service_StateCondition)this.changeConditionBuilder_.build();
/*       */         } 
/*       */         onBuilt();
/*       */         return result;
/*       */       }
/*       */       
/*       */       public Builder clone() {
/*       */         return (Builder)super.clone();
/*       */       }
/*       */       
/*       */       public Builder setField(Descriptors.FieldDescriptor field, Object value) {
/*       */         return (Builder)super.setField(field, value);
/*       */       }
/*       */       
/*       */       public Builder clearField(Descriptors.FieldDescriptor field) {
/*       */         return (Builder)super.clearField(field);
/*       */       }
/*       */       
/*       */       public Builder clearOneof(Descriptors.OneofDescriptor oneof) {
/*       */         return (Builder)super.clearOneof(oneof);
/*       */       }
/*       */       
/*       */       public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
/*       */         return (Builder)super.setRepeatedField(field, index, value);
/*       */       }
/*       */       
/*       */       public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
/*       */         return (Builder)super.addRepeatedField(field, value);
/*       */       }
/*       */       
/*       */       public Builder mergeFrom(Message other) {
/*       */         if (other instanceof DolphinConfig.Service_State)
/*       */           return mergeFrom((DolphinConfig.Service_State)other); 
/*       */         super.mergeFrom(other);
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeFrom(DolphinConfig.Service_State other) {
/*       */         if (other == DolphinConfig.Service_State.getDefaultInstance())
/*       */           return this; 
/*       */         if (other.getID() != 0)
/*       */           setID(other.getID()); 
/*       */         if (other.hasPointCondition())
/*       */           mergePointCondition(other.getPointCondition()); 
/*       */         if (other.hasChangeCondition())
/*       */           mergeChangeCondition(other.getChangeCondition()); 
/*       */         mergeUnknownFields(other.unknownFields);
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       public final boolean isInitialized() {
/*       */         return true;
/*       */       }
/*       */       
/*       */       public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*       */         DolphinConfig.Service_State parsedMessage = null;
/*       */         try {
/*       */           parsedMessage = (DolphinConfig.Service_State)DolphinConfig.Service_State.PARSER.parsePartialFrom(input, extensionRegistry);
/*       */         } catch (InvalidProtocolBufferException e) {
/*       */           parsedMessage = (DolphinConfig.Service_State)e.getUnfinishedMessage();
/*       */           throw e.unwrapIOException();
/*       */         } finally {
/*       */           if (parsedMessage != null)
/*       */             mergeFrom(parsedMessage); 
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public int getID() {
/*       */         return this.iD_;
/*       */       }
/*       */       
/*       */       public Builder setID(int value) {
/*       */         this.iD_ = value;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearID() {
/*       */         this.iD_ = 0;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       public boolean hasPointCondition() {
/*       */         return (this.pointConditionBuilder_ != null || this.pointCondition_ != null);
/*       */       }
/*       */       
/*       */       public DolphinConfig.Service_StateCondition getPointCondition() {
/*       */         return (this.pointConditionBuilder_ == null) ? ((this.pointCondition_ == null) ? DolphinConfig.Service_StateCondition.getDefaultInstance() : this.pointCondition_) : (DolphinConfig.Service_StateCondition)this.pointConditionBuilder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setPointCondition(DolphinConfig.Service_StateCondition value) {
/*       */         if (this.pointConditionBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.pointCondition_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.pointConditionBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setPointCondition(DolphinConfig.Service_StateCondition.Builder builderForValue) {
/*       */         if (this.pointConditionBuilder_ == null) {
/*       */           this.pointCondition_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.pointConditionBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergePointCondition(DolphinConfig.Service_StateCondition value) {
/*       */         if (this.pointConditionBuilder_ == null) {
/*       */           if (this.pointCondition_ != null) {
/*       */             this.pointCondition_ = DolphinConfig.Service_StateCondition.newBuilder(this.pointCondition_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.pointCondition_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.pointConditionBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearPointCondition() {
/*       */         if (this.pointConditionBuilder_ == null) {
/*       */           this.pointCondition_ = null;
/*       */           onChanged();
/*       */         } else {
/*       */           this.pointCondition_ = null;
/*       */           this.pointConditionBuilder_ = null;
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.Service_StateCondition.Builder getPointConditionBuilder() {
/*       */         onChanged();
/*       */         return (DolphinConfig.Service_StateCondition.Builder)getPointConditionFieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public DolphinConfig.Service_StateConditionOrBuilder getPointConditionOrBuilder() {
/*       */         return (this.pointConditionBuilder_ != null) ? (DolphinConfig.Service_StateConditionOrBuilder)this.pointConditionBuilder_.getMessageOrBuilder() : ((this.pointCondition_ == null) ? DolphinConfig.Service_StateCondition.getDefaultInstance() : this.pointCondition_);
/*       */       }
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.Service_StateCondition, DolphinConfig.Service_StateCondition.Builder, DolphinConfig.Service_StateConditionOrBuilder> getPointConditionFieldBuilder() {
/*       */         if (this.pointConditionBuilder_ == null) {
/*       */           this.pointConditionBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getPointCondition(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.pointCondition_ = null;
/*       */         } 
/*       */         return this.pointConditionBuilder_;
/*       */       }
/*       */       
/*       */       public boolean hasChangeCondition() {
/*       */         return (this.changeConditionBuilder_ != null || this.changeCondition_ != null);
/*       */       }
/*       */       
/*       */       public DolphinConfig.Service_StateCondition getChangeCondition() {
/*       */         return (this.changeConditionBuilder_ == null) ? ((this.changeCondition_ == null) ? DolphinConfig.Service_StateCondition.getDefaultInstance() : this.changeCondition_) : (DolphinConfig.Service_StateCondition)this.changeConditionBuilder_.getMessage();
/*       */       }
/*       */       
/*       */       public Builder setChangeCondition(DolphinConfig.Service_StateCondition value) {
/*       */         if (this.changeConditionBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           this.changeCondition_ = value;
/*       */           onChanged();
/*       */         } else {
/*       */           this.changeConditionBuilder_.setMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setChangeCondition(DolphinConfig.Service_StateCondition.Builder builderForValue) {
/*       */         if (this.changeConditionBuilder_ == null) {
/*       */           this.changeCondition_ = builderForValue.build();
/*       */           onChanged();
/*       */         } else {
/*       */           this.changeConditionBuilder_.setMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeChangeCondition(DolphinConfig.Service_StateCondition value) {
/*       */         if (this.changeConditionBuilder_ == null) {
/*       */           if (this.changeCondition_ != null) {
/*       */             this.changeCondition_ = DolphinConfig.Service_StateCondition.newBuilder(this.changeCondition_).mergeFrom(value).buildPartial();
/*       */           } else {
/*       */             this.changeCondition_ = value;
/*       */           } 
/*       */           onChanged();
/*       */         } else {
/*       */           this.changeConditionBuilder_.mergeFrom((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearChangeCondition() {
/*       */         if (this.changeConditionBuilder_ == null) {
/*       */           this.changeCondition_ = null;
/*       */           onChanged();
/*       */         } else {
/*       */           this.changeCondition_ = null;
/*       */           this.changeConditionBuilder_ = null;
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.Service_StateCondition.Builder getChangeConditionBuilder() {
/*       */         onChanged();
/*       */         return (DolphinConfig.Service_StateCondition.Builder)getChangeConditionFieldBuilder().getBuilder();
/*       */       }
/*       */       
/*       */       public DolphinConfig.Service_StateConditionOrBuilder getChangeConditionOrBuilder() {
/*       */         return (this.changeConditionBuilder_ != null) ? (DolphinConfig.Service_StateConditionOrBuilder)this.changeConditionBuilder_.getMessageOrBuilder() : ((this.changeCondition_ == null) ? DolphinConfig.Service_StateCondition.getDefaultInstance() : this.changeCondition_);
/*       */       }
/*       */       
/*       */       private SingleFieldBuilderV3<DolphinConfig.Service_StateCondition, DolphinConfig.Service_StateCondition.Builder, DolphinConfig.Service_StateConditionOrBuilder> getChangeConditionFieldBuilder() {
/*       */         if (this.changeConditionBuilder_ == null) {
/*       */           this.changeConditionBuilder_ = new SingleFieldBuilderV3((AbstractMessage)getChangeCondition(), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.changeCondition_ = null;
/*       */         } 
/*       */         return this.changeConditionBuilder_;
/*       */       }
/*       */       
/*       */       public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
/*       */         return (Builder)super.setUnknownFields(unknownFields);
/*       */       }
/*       */       
/*       */       public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
/*       */         return (Builder)super.mergeUnknownFields(unknownFields);
/*       */       }
/*       */     }
/*       */   }
/*       */   
/*       */   public static interface ServiceOrBuilder extends MessageOrBuilder {
/*       */     int getID();
/*       */     
/*       */     List<DolphinConfig.Service_State> getStatesList();
/*       */     
/*       */     DolphinConfig.Service_State getStates(int param1Int);
/*       */     
/*       */     int getStatesCount();
/*       */     
/*       */     List<? extends DolphinConfig.Service_StateOrBuilder> getStatesOrBuilderList();
/*       */     
/*       */     DolphinConfig.Service_StateOrBuilder getStatesOrBuilder(int param1Int);
/*       */   }
/*       */   
/*       */   public static final class Service extends GeneratedMessageV3 implements ServiceOrBuilder {
/*       */     private static final long serialVersionUID = 0L;
/*       */     public static final int ID_FIELD_NUMBER = 1;
/*       */     private int iD_;
/*       */     public static final int STATES_FIELD_NUMBER = 2;
/*       */     private List<DolphinConfig.Service_State> states_;
/*       */     private byte memoizedIsInitialized = -1;
/*       */     private static final Service DEFAULT_INSTANCE = new Service();
/*       */     
/*       */     private static final Parser<Service> PARSER = (Parser<Service>)new AbstractParser<Service>() {
/*       */         public DolphinConfig.Service parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*       */           return new DolphinConfig.Service(input, extensionRegistry);
/*       */         }
/*       */       };
/*       */     
/*       */     private Service(GeneratedMessageV3.Builder<?> builder) {
/*       */       super(builder);
/*       */     }
/*       */     
/*       */     private Service() {
/*       */       this.states_ = Collections.emptyList();
/*       */     }
/*       */     
/*       */     protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) {
/*       */       return new Service();
/*       */     }
/*       */     
/*       */     public final UnknownFieldSet getUnknownFields() {
/*       */       return this.unknownFields;
/*       */     }
/*       */     
/*       */     private Service(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*       */       this();
/*       */       if (extensionRegistry == null)
/*       */         throw new NullPointerException(); 
/*       */       int mutable_bitField0_ = 0;
/*       */       UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
/*       */       try {
/*       */         boolean done = false;
/*       */         while (!done) {
/*       */           int tag = input.readTag();
/*       */           switch (tag) {
/*       */             case 0:
/*       */               done = true;
/*       */               continue;
/*       */             case 8:
/*       */               this.iD_ = input.readUInt32();
/*       */               continue;
/*       */             case 18:
/*       */               if ((mutable_bitField0_ & 0x1) == 0) {
/*       */                 this.states_ = new ArrayList<>();
/*       */                 mutable_bitField0_ |= 0x1;
/*       */               } 
/*       */               this.states_.add(input.readMessage(DolphinConfig.Service_State.parser(), extensionRegistry));
/*       */               continue;
/*       */           } 
/*       */           if (!parseUnknownField(input, unknownFields, extensionRegistry, tag))
/*       */             done = true; 
/*       */         } 
/*       */       } catch (InvalidProtocolBufferException e) {
/*       */         throw e.setUnfinishedMessage(this);
/*       */       } catch (IOException e) {
/*       */         throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this);
/*       */       } finally {
/*       */         if ((mutable_bitField0_ & 0x1) != 0)
/*       */           this.states_ = Collections.unmodifiableList(this.states_); 
/*       */         this.unknownFields = unknownFields.build();
/*       */         makeExtensionsImmutable();
/*       */       } 
/*       */     }
/*       */     
/*       */     public static final Descriptors.Descriptor getDescriptor() {
/*       */       return DolphinConfig.internal_static_org_traccar_protobuf_dolphin_Config_Service_descriptor;
/*       */     }
/*       */     
/*       */     protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
/*       */       return DolphinConfig.internal_static_org_traccar_protobuf_dolphin_Config_Service_fieldAccessorTable.ensureFieldAccessorsInitialized(Service.class, Builder.class);
/*       */     }
/*       */     
/*       */     public int getID() {
/*       */       return this.iD_;
/*       */     }
/*       */     
/*       */     public List<DolphinConfig.Service_State> getStatesList() {
/*       */       return this.states_;
/*       */     }
/*       */     
/*       */     public List<? extends DolphinConfig.Service_StateOrBuilder> getStatesOrBuilderList() {
/*       */       return (List)this.states_;
/*       */     }
/*       */     
/*       */     public int getStatesCount() {
/*       */       return this.states_.size();
/*       */     }
/*       */     
/*       */     public DolphinConfig.Service_State getStates(int index) {
/*       */       return this.states_.get(index);
/*       */     }
/*       */     
/*       */     public DolphinConfig.Service_StateOrBuilder getStatesOrBuilder(int index) {
/*       */       return this.states_.get(index);
/*       */     }
/*       */     
/*       */     public final boolean isInitialized() {
/*       */       byte isInitialized = this.memoizedIsInitialized;
/*       */       if (isInitialized == 1)
/*       */         return true; 
/*       */       if (isInitialized == 0)
/*       */         return false; 
/*       */       this.memoizedIsInitialized = 1;
/*       */       return true;
/*       */     }
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/*       */       if (this.iD_ != 0)
/*       */         output.writeUInt32(1, this.iD_); 
/*       */       for (int i = 0; i < this.states_.size(); i++)
/*       */         output.writeMessage(2, (MessageLite)this.states_.get(i)); 
/*       */       this.unknownFields.writeTo(output);
/*       */     }
/*       */     
/*       */     public int getSerializedSize() {
/*       */       int size = this.memoizedSize;
/*       */       if (size != -1)
/*       */         return size; 
/*       */       size = 0;
/*       */       if (this.iD_ != 0)
/*       */         size += CodedOutputStream.computeUInt32Size(1, this.iD_); 
/*       */       for (int i = 0; i < this.states_.size(); i++)
/*       */         size += CodedOutputStream.computeMessageSize(2, (MessageLite)this.states_.get(i)); 
/*       */       size += this.unknownFields.getSerializedSize();
/*       */       this.memoizedSize = size;
/*       */       return size;
/*       */     }
/*       */     
/*       */     public boolean equals(Object obj) {
/*       */       if (obj == this)
/*       */         return true; 
/*       */       if (!(obj instanceof Service))
/*       */         return super.equals(obj); 
/*       */       Service other = (Service)obj;
/*       */       return (getID() != other.getID()) ? false : (!getStatesList().equals(other.getStatesList()) ? false : (!!this.unknownFields.equals(other.unknownFields)));
/*       */     }
/*       */     
/*       */     public int hashCode() {
/*       */       if (this.memoizedHashCode != 0)
/*       */         return this.memoizedHashCode; 
/*       */       int hash = 41;
/*       */       hash = 19 * hash + getDescriptor().hashCode();
/*       */       hash = 37 * hash + 1;
/*       */       hash = 53 * hash + getID();
/*       */       if (getStatesCount() > 0) {
/*       */         hash = 37 * hash + 2;
/*       */         hash = 53 * hash + getStatesList().hashCode();
/*       */       } 
/*       */       hash = 29 * hash + this.unknownFields.hashCode();
/*       */       this.memoizedHashCode = hash;
/*       */       return hash;
/*       */     }
/*       */     
/*       */     public static Service parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
/*       */       return (Service)PARSER.parseFrom(data);
/*       */     }
/*       */     
/*       */     public static Service parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*       */       return (Service)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static Service parseFrom(ByteString data) throws InvalidProtocolBufferException {
/*       */       return (Service)PARSER.parseFrom(data);
/*       */     }
/*       */     
/*       */     public static Service parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*       */       return (Service)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static Service parseFrom(byte[] data) throws InvalidProtocolBufferException {
/*       */       return (Service)PARSER.parseFrom(data);
/*       */     }
/*       */     
/*       */     public static Service parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*       */       return (Service)PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static Service parseFrom(InputStream input) throws IOException {
/*       */       return (Service)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */     
/*       */     public static Service parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*       */       return (Service)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static Service parseDelimitedFrom(InputStream input) throws IOException {
/*       */       return (Service)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
/*       */     }
/*       */     
/*       */     public static Service parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*       */       return (Service)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static Service parseFrom(CodedInputStream input) throws IOException {
/*       */       return (Service)GeneratedMessageV3.parseWithIOException(PARSER, input);
/*       */     }
/*       */     
/*       */     public static Service parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*       */       return (Service)GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public Builder newBuilderForType() {
/*       */       return newBuilder();
/*       */     }
/*       */     
/*       */     public static Builder newBuilder() {
/*       */       return DEFAULT_INSTANCE.toBuilder();
/*       */     }
/*       */     
/*       */     public static Builder newBuilder(Service prototype) {
/*       */       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
/*       */     }
/*       */     
/*       */     public Builder toBuilder() {
/*       */       return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder()).mergeFrom(this);
/*       */     }
/*       */     
/*       */     protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
/*       */       return new Builder(parent);
/*       */     }
/*       */     
/*       */     public static Service getDefaultInstance() {
/*       */       return DEFAULT_INSTANCE;
/*       */     }
/*       */     
/*       */     public static Parser<Service> parser() {
/*       */       return PARSER;
/*       */     }
/*       */     
/*       */     public Parser<Service> getParserForType() {
/*       */       return PARSER;
/*       */     }
/*       */     
/*       */     public Service getDefaultInstanceForType() {
/*       */       return DEFAULT_INSTANCE;
/*       */     }
/*       */     
/*       */     public static final class Builder extends GeneratedMessageV3.Builder<Builder> implements DolphinConfig.ServiceOrBuilder {
/*       */       private int bitField0_;
/*       */       private int iD_;
/*       */       private List<DolphinConfig.Service_State> states_ = Collections.emptyList();
/*       */       private RepeatedFieldBuilderV3<DolphinConfig.Service_State, DolphinConfig.Service_State.Builder, DolphinConfig.Service_StateOrBuilder> statesBuilder_;
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/*       */         return DolphinConfig.internal_static_org_traccar_protobuf_dolphin_Config_Service_descriptor;
/*       */       }
/*       */       
/*       */       protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
/*       */         return DolphinConfig.internal_static_org_traccar_protobuf_dolphin_Config_Service_fieldAccessorTable.ensureFieldAccessorsInitialized(DolphinConfig.Service.class, Builder.class);
/*       */       }
/*       */       
/*       */       private Builder() {
/*       */         maybeForceBuilderInitialization();
/*       */       }
/*       */       
/*       */       private Builder(GeneratedMessageV3.BuilderParent parent) {
/*       */         super(parent);
/*       */         maybeForceBuilderInitialization();
/*       */       }
/*       */       
/*       */       private void maybeForceBuilderInitialization() {
/*       */         if (DolphinConfig.Service.alwaysUseFieldBuilders)
/*       */           getStatesFieldBuilder(); 
/*       */       }
/*       */       
/*       */       public Builder clear() {
/*       */         super.clear();
/*       */         this.iD_ = 0;
/*       */         if (this.statesBuilder_ == null) {
/*       */           this.states_ = Collections.emptyList();
/*       */           this.bitField0_ &= 0xFFFFFFFE;
/*       */         } else {
/*       */           this.statesBuilder_.clear();
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Descriptors.Descriptor getDescriptorForType() {
/*       */         return DolphinConfig.internal_static_org_traccar_protobuf_dolphin_Config_Service_descriptor;
/*       */       }
/*       */       
/*       */       public DolphinConfig.Service getDefaultInstanceForType() {
/*       */         return DolphinConfig.Service.getDefaultInstance();
/*       */       }
/*       */       
/*       */       public DolphinConfig.Service build() {
/*       */         DolphinConfig.Service result = buildPartial();
/*       */         if (!result.isInitialized())
/*       */           throw newUninitializedMessageException(result); 
/*       */         return result;
/*       */       }
/*       */       
/*       */       public DolphinConfig.Service buildPartial() {
/*       */         DolphinConfig.Service result = new DolphinConfig.Service(this);
/*       */         int from_bitField0_ = this.bitField0_;
/*       */         result.iD_ = this.iD_;
/*       */         if (this.statesBuilder_ == null) {
/*       */           if ((this.bitField0_ & 0x1) != 0) {
/*       */             this.states_ = Collections.unmodifiableList(this.states_);
/*       */             this.bitField0_ &= 0xFFFFFFFE;
/*       */           } 
/*       */           result.states_ = this.states_;
/*       */         } else {
/*       */           result.states_ = this.statesBuilder_.build();
/*       */         } 
/*       */         onBuilt();
/*       */         return result;
/*       */       }
/*       */       
/*       */       public Builder clone() {
/*       */         return (Builder)super.clone();
/*       */       }
/*       */       
/*       */       public Builder setField(Descriptors.FieldDescriptor field, Object value) {
/*       */         return (Builder)super.setField(field, value);
/*       */       }
/*       */       
/*       */       public Builder clearField(Descriptors.FieldDescriptor field) {
/*       */         return (Builder)super.clearField(field);
/*       */       }
/*       */       
/*       */       public Builder clearOneof(Descriptors.OneofDescriptor oneof) {
/*       */         return (Builder)super.clearOneof(oneof);
/*       */       }
/*       */       
/*       */       public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) {
/*       */         return (Builder)super.setRepeatedField(field, index, value);
/*       */       }
/*       */       
/*       */       public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) {
/*       */         return (Builder)super.addRepeatedField(field, value);
/*       */       }
/*       */       
/*       */       public Builder mergeFrom(Message other) {
/*       */         if (other instanceof DolphinConfig.Service)
/*       */           return mergeFrom((DolphinConfig.Service)other); 
/*       */         super.mergeFrom(other);
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder mergeFrom(DolphinConfig.Service other) {
/*       */         if (other == DolphinConfig.Service.getDefaultInstance())
/*       */           return this; 
/*       */         if (other.getID() != 0)
/*       */           setID(other.getID()); 
/*       */         if (this.statesBuilder_ == null) {
/*       */           if (!other.states_.isEmpty()) {
/*       */             if (this.states_.isEmpty()) {
/*       */               this.states_ = other.states_;
/*       */               this.bitField0_ &= 0xFFFFFFFE;
/*       */             } else {
/*       */               ensureStatesIsMutable();
/*       */               this.states_.addAll(other.states_);
/*       */             } 
/*       */             onChanged();
/*       */           } 
/*       */         } else if (!other.states_.isEmpty()) {
/*       */           if (this.statesBuilder_.isEmpty()) {
/*       */             this.statesBuilder_.dispose();
/*       */             this.statesBuilder_ = null;
/*       */             this.states_ = other.states_;
/*       */             this.bitField0_ &= 0xFFFFFFFE;
/*       */             this.statesBuilder_ = DolphinConfig.Service.alwaysUseFieldBuilders ? getStatesFieldBuilder() : null;
/*       */           } else {
/*       */             this.statesBuilder_.addAllMessages(other.states_);
/*       */           } 
/*       */         } 
/*       */         mergeUnknownFields(other.unknownFields);
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       public final boolean isInitialized() {
/*       */         return true;
/*       */       }
/*       */       
/*       */       public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*       */         DolphinConfig.Service parsedMessage = null;
/*       */         try {
/*       */           parsedMessage = (DolphinConfig.Service)DolphinConfig.Service.PARSER.parsePartialFrom(input, extensionRegistry);
/*       */         } catch (InvalidProtocolBufferException e) {
/*       */           parsedMessage = (DolphinConfig.Service)e.getUnfinishedMessage();
/*       */           throw e.unwrapIOException();
/*       */         } finally {
/*       */           if (parsedMessage != null)
/*       */             mergeFrom(parsedMessage); 
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public int getID() {
/*       */         return this.iD_;
/*       */       }
/*       */       
/*       */       public Builder setID(int value) {
/*       */         this.iD_ = value;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearID() {
/*       */         this.iD_ = 0;
/*       */         onChanged();
/*       */         return this;
/*       */       }
/*       */       
/*       */       private void ensureStatesIsMutable() {
/*       */         if ((this.bitField0_ & 0x1) == 0) {
/*       */           this.states_ = new ArrayList<>(this.states_);
/*       */           this.bitField0_ |= 0x1;
/*       */         } 
/*       */       }
/*       */       
/*       */       public List<DolphinConfig.Service_State> getStatesList() {
/*       */         return (this.statesBuilder_ == null) ? Collections.unmodifiableList(this.states_) : this.statesBuilder_.getMessageList();
/*       */       }
/*       */       
/*       */       public int getStatesCount() {
/*       */         return (this.statesBuilder_ == null) ? this.states_.size() : this.statesBuilder_.getCount();
/*       */       }
/*       */       
/*       */       public DolphinConfig.Service_State getStates(int index) {
/*       */         return (this.statesBuilder_ == null) ? this.states_.get(index) : (DolphinConfig.Service_State)this.statesBuilder_.getMessage(index);
/*       */       }
/*       */       
/*       */       public Builder setStates(int index, DolphinConfig.Service_State value) {
/*       */         if (this.statesBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           ensureStatesIsMutable();
/*       */           this.states_.set(index, value);
/*       */           onChanged();
/*       */         } else {
/*       */           this.statesBuilder_.setMessage(index, (AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder setStates(int index, DolphinConfig.Service_State.Builder builderForValue) {
/*       */         if (this.statesBuilder_ == null) {
/*       */           ensureStatesIsMutable();
/*       */           this.states_.set(index, builderForValue.build());
/*       */           onChanged();
/*       */         } else {
/*       */           this.statesBuilder_.setMessage(index, (AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder addStates(DolphinConfig.Service_State value) {
/*       */         if (this.statesBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           ensureStatesIsMutable();
/*       */           this.states_.add(value);
/*       */           onChanged();
/*       */         } else {
/*       */           this.statesBuilder_.addMessage((AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder addStates(int index, DolphinConfig.Service_State value) {
/*       */         if (this.statesBuilder_ == null) {
/*       */           if (value == null)
/*       */             throw new NullPointerException(); 
/*       */           ensureStatesIsMutable();
/*       */           this.states_.add(index, value);
/*       */           onChanged();
/*       */         } else {
/*       */           this.statesBuilder_.addMessage(index, (AbstractMessage)value);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder addStates(DolphinConfig.Service_State.Builder builderForValue) {
/*       */         if (this.statesBuilder_ == null) {
/*       */           ensureStatesIsMutable();
/*       */           this.states_.add(builderForValue.build());
/*       */           onChanged();
/*       */         } else {
/*       */           this.statesBuilder_.addMessage((AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder addStates(int index, DolphinConfig.Service_State.Builder builderForValue) {
/*       */         if (this.statesBuilder_ == null) {
/*       */           ensureStatesIsMutable();
/*       */           this.states_.add(index, builderForValue.build());
/*       */           onChanged();
/*       */         } else {
/*       */           this.statesBuilder_.addMessage(index, (AbstractMessage)builderForValue.build());
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder addAllStates(Iterable<? extends DolphinConfig.Service_State> values) {
/*       */         if (this.statesBuilder_ == null) {
/*       */           ensureStatesIsMutable();
/*       */           AbstractMessageLite.Builder.addAll(values, this.states_);
/*       */           onChanged();
/*       */         } else {
/*       */           this.statesBuilder_.addAllMessages(values);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder clearStates() {
/*       */         if (this.statesBuilder_ == null) {
/*       */           this.states_ = Collections.emptyList();
/*       */           this.bitField0_ &= 0xFFFFFFFE;
/*       */           onChanged();
/*       */         } else {
/*       */           this.statesBuilder_.clear();
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public Builder removeStates(int index) {
/*       */         if (this.statesBuilder_ == null) {
/*       */           ensureStatesIsMutable();
/*       */           this.states_.remove(index);
/*       */           onChanged();
/*       */         } else {
/*       */           this.statesBuilder_.remove(index);
/*       */         } 
/*       */         return this;
/*       */       }
/*       */       
/*       */       public DolphinConfig.Service_State.Builder getStatesBuilder(int index) {
/*       */         return (DolphinConfig.Service_State.Builder)getStatesFieldBuilder().getBuilder(index);
/*       */       }
/*       */       
/*       */       public DolphinConfig.Service_StateOrBuilder getStatesOrBuilder(int index) {
/*       */         return (this.statesBuilder_ == null) ? this.states_.get(index) : (DolphinConfig.Service_StateOrBuilder)this.statesBuilder_.getMessageOrBuilder(index);
/*       */       }
/*       */       
/*       */       public List<? extends DolphinConfig.Service_StateOrBuilder> getStatesOrBuilderList() {
/*       */         return (this.statesBuilder_ != null) ? this.statesBuilder_.getMessageOrBuilderList() : Collections.unmodifiableList((List)this.states_);
/*       */       }
/*       */       
/*       */       public DolphinConfig.Service_State.Builder addStatesBuilder() {
/*       */         return (DolphinConfig.Service_State.Builder)getStatesFieldBuilder().addBuilder((AbstractMessage)DolphinConfig.Service_State.getDefaultInstance());
/*       */       }
/*       */       
/*       */       public DolphinConfig.Service_State.Builder addStatesBuilder(int index) {
/*       */         return (DolphinConfig.Service_State.Builder)getStatesFieldBuilder().addBuilder(index, (AbstractMessage)DolphinConfig.Service_State.getDefaultInstance());
/*       */       }
/*       */       
/*       */       public List<DolphinConfig.Service_State.Builder> getStatesBuilderList() {
/*       */         return getStatesFieldBuilder().getBuilderList();
/*       */       }
/*       */       
/*       */       private RepeatedFieldBuilderV3<DolphinConfig.Service_State, DolphinConfig.Service_State.Builder, DolphinConfig.Service_StateOrBuilder> getStatesFieldBuilder() {
/*       */         if (this.statesBuilder_ == null) {
/*       */           this.statesBuilder_ = new RepeatedFieldBuilderV3(this.states_, ((this.bitField0_ & 0x1) != 0), (AbstractMessage.BuilderParent)getParentForChildren(), isClean());
/*       */           this.states_ = null;
/*       */         } 
/*       */         return this.statesBuilder_;
/*       */       }
/*       */       
/*       */       public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
/*       */         return (Builder)super.setUnknownFields(unknownFields);
/*       */       }
/*       */       
/*       */       public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
/*       */         return (Builder)super.mergeUnknownFields(unknownFields);
/*       */       }
/*       */     }
/*       */   } }


/* Location:              C:\User\\user\Documents\Ensurity Mobile [Client]\Latest App\traccar\tracker-server.jar!\org\traccar\protobuf\dolphin\Config\DolphinConfig.class
 * Java compiler version: 8 (52.0)
 * JD-Core Version:       1.1.3
 */